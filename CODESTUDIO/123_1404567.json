{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12196,
            "title": "123",
            "titleSlug": "123_1404567",
            "content": "<h4 id=\"a-robot-on-an-infinite-xy-plane-starts-at-point-0-0-and-faces-north-the-robot-can-receive-one-of-three-possible-types-of-commands-given-in-the-commands-array-list\">A robot on an infinite XY-plane starts at point (0, 0) and faces north. The robot can receive one of three possible types of commands (given in the COMMANDS array/list):</h4>\n\n<h4 id=\"1-2-turn-left-90-degrees\">1) -2: turn left 90 degrees,</h4>\n\n<h4 id=\"2-1-turn-right-90-degrees-or\">2) -1: turn right 90 degrees, or</h4>\n\n<h4 id=\"3-1-k-9-move-forward-k-units\">3) 1 &lt;= \u2018K\u2019 &lt;= 9: move forward K units.</h4>\n\n<h4 id=\"some-of-the-grid-squares-are-obstacles-the-ith-obstacle-is-at-grid-point-obstacles-i-xi-yi\">Some of the grid squares are obstacles. The \u2018ith\u2019 obstacle is at grid point OBSTACLES[i] = (Xi, Yi).</h4>\n\n<h4 id=\"if-the-robot-would-try-to-move-onto-them-the-robot-stays-on-the-previous-grid-square-instead-but-still-continues-following-the-rest-of-the-route\">If the robot would try to move onto them, the robot stays on the previous grid square instead (but still continues following the rest of the route.)</h4>\n\n<h4 id=\"return-the-maximum-euclidean-distance-that-the-robot-will-be-from-the-origin-squared-i-e-if-the-distance-is-5-return-25\">Return the maximum Euclidean distance that the robot will be from the origin squared (i.e. if the distance is 5, return 25).</h4>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>North means +Y direction.\nEast means +X direction.\nSouth means -Y direction.\nWest means -X direction.\n</code></pre>\n\n<h4 id=\"for-example\">For example:</h4>\n\n<pre><code>N = 1, M = 0 \nCOMMANDS = [3], OBSTACLES = []\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/t11-8971.png\" alt=\"\"></p>\n\n<pre><code>The final answer would be 9 since it moves 3 steps north.\n</code></pre>\n\n<h4 id=\"input-format\">Input format :</h4>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases.\n\nThe first line of each test case contains two space-separated integers \u2018N\u2019, \u2018M\u2019 Where \u2018N\u2019 is the number of COMMANDS and \u2018M\u2019 is the number of OBSTACLES.\n\nThe next line contains \u2018N\u2019 space-separated integers denoting the commands.\n\nThe next M lines contain two space-separated integers \u2018X\u2019 and \u2018Y\u2019, denoting the coordinates of obstacles.\n</code></pre>\n\n<h4 id=\"output-format\">Output format :</h4>\n\n<pre><code>For each test case, return the distance the robot covers. The output of each test case will be printed in a separate line[0-based indexing].\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You don&#39;t have to print anything, just implement the function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints:</h4>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= N &lt;= 10^3\n1 &lt;= M &lt;= 10^3\n-2 &lt;= COMMANDS[i] &lt;= 9\n-3 * 10 ^ 3 &lt;= OBSTACLES[i][j] &lt;= 3 * 10 ^ 3\n\nTime limit: 1 second\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1 :</h4>\n\n<pre><code>2\n1 0\n3\n2 1\n1 4\n0 1\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1 :</h4>\n\n<pre><code>9\n0\n</code></pre>\n\n<h4 id=\"explanation-of-the-sample-input-1\">Explanation of the Sample Input 1:</h4>\n\n<pre><code>For the first test case:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/t11-8971.png\" alt=\"\"></p>\n\n<pre><code>The final answer would be 9 since it moves 3 steps north.\n\nFor the second test case:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/t22-8972.png\" alt=\"\"></p>\n\n<pre><code>Since there is an Obstacle at (0,1) therefore the robot does not move and stays at the same position.\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2 :</h4>\n\n<pre><code>2\n2 1\n1 4\n1 0\n3 1\n4 -1 3\n1 1\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2 :</h4>\n\n<pre><code>25\n25\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -4,
            "dislikes": "NA",
            "rephrased": {
                "body": "A robot is placed on an infinite XY-plane, starting at (0, 0) and initially facing north. It receives a series of commands. These commands are: turning 90 degrees left (-2), turning 90 degrees right (-1), or moving forward a specified number of units (1 to 9). The robot's path may be blocked by obstacles at certain grid points. If a move would cause the robot to collide with an obstacle, it remains in its current position and continues with the remaining commands. The task is to determine the maximum squared Euclidean distance the robot reaches from the origin.",
                "constraints": [
                    "1 <= T <= 5 (Number of test cases)",
                    "1 <= N <= 10^3 (Number of commands)",
                    "1 <= M <= 10^3 (Number of obstacles)",
                    "-2 <= COMMANDS[i] <= 9 (Value of commands)",
                    "-3 * 10 ^ 3 <= OBSTACLES[i][j] <= 3 * 10 ^ 3 (Obstacle coordinates)",
                    "Time limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "1 0\n3",
                        "output": "9",
                        "explanation": "The robot moves 3 steps north from (0,0) to (0,3). The squared Euclidean distance from the origin is (0-0)^2 + (3-0)^2 = 9."
                    },
                    {
                        "input": "2 1\n1 4\n0 1",
                        "output": "0",
                        "explanation": "The robot attempts to move 1 step north. However, there is an obstacle at (0, 1). Therefore, the robot stays at (0, 0). The squared Euclidean distance from the origin is (0-0)^2 + (0-0)^2 = 0."
                    },
                    {
                        "input": "2 1\n1 4\n1 0\n3 1\n4 -1 3\n1 1",
                        "output": "25",
                        "explanation": "For the first test case, the robot moves 1 step north, then 4 steps north reaching (0,5). Squared distance is 25. For the second test case the robot moves 4 steps north to (0,4) then turns right facing east and moves 3 steps to (3,4). Squared distance is 25."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can we just simulate the path?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Matrices (2D Arrays)",
                "slug": "matrices-(2d-arrays)"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}