{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8413,
            "title": "3 Sum ",
            "titleSlug": "3-sum_873370",
            "content": "<h4 id=\"given-an-array-arr-of-n-integers-and-an-integer-target-your-task-is-to-find-three-integers-in-arr-such-that-the-sum-is-closest-to-the-target\">Given an array &#39;ARR&#39;&#39; of &#39;N&#39; integers and an integer &#39;target&#39;, your task is to find three integers in &#39;ARR&#39; such that the sum is closest to the target.</h4>\n\n<h5 id=\"note\">Note</h5>\n\n<pre><code>In the case of two closest sums, print the smallest sum.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format</h5>\n\n<pre><code>The first line contains an integer &#39;T&#39; which denotes the number of test cases or queries to be run. Then, the T test cases follow.\n\nThe first line of each test case or query contains an integer &#39;N&#39; representing the size of the array.\n\nThe second line contains &#39;N&#39; single space-separated integers, representing the elements in the array.\n\nThe third line contains the value of the target.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format</h5>\n\n<pre><code>For each test case, print the sum of triplets closest to the target.\n\nPrint the output of each test case in a new line.\n</code></pre>\n\n<h5 id=\"note\">Note</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints</h5>\n\n<pre><code>1 &lt;= T &lt;= 10 \n3 &lt;= N &lt;= 100 \n-10^5 &lt;= Arr[i] &lt;= 10^5\n-3 * 10^5 &lt;= target &lt;= 3 * 10^5\n\nwhere Arr[i] refers to the elements of the array.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1</h5>\n\n<pre><code>2\n4\n-1 2 1 -4\n1\n5\n1 2 3 4 -5\n10\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1</h5>\n\n<pre><code>2 \n9\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1</h5>\n\n<pre><code>Test Case 1:\nSum of triplets:\n(-1) + 2 + 1 = 2\n(-1) + 2 + (-4) = -3\n2 + 1 + (-4) = -1\n(-1) + 1 + (-4) = -4\nOut of all the triplet sums, 2 is closest to 1.\n\nTest Case 2: Sum of triplet {2, 3, 4 } i.e. 9 is the closest sum to 10.\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2</h5>\n\n<pre><code>2\n5\n10 12 7 8 -5\n16\n4\n6 8 2 5\n20\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2</h5>\n\n<pre><code>15\n19\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 45,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of integers, find three integers in the array such that their sum is closest to a given target value. In the case of two closest sums, return the smallest sum.",
                "constraints": [
                    "3 <= N <= 100, where N is the size of the array.",
                    "-10^5 <= Arr[i] <= 10^5, where Arr[i] is an element of the array.",
                    "-3 * 10^5 <= target <= 3 * 10^5, where target is the target sum."
                ],
                "testcases": [
                    {
                        "input": "n = 4, nums=[-1, 2, 1, -4], target=1",
                        "output": "2",
                        "explanation": "The triplet {-1, 2, 1} has a sum of 2, which is the closest to the target 1."
                    },
                    {
                        "input": "n = 5, nums=[1, 2, 3, 4, -5], target=10",
                        "output": "9",
                        "explanation": "The triplet {2, 3, 4} has a sum of 9, which is the closest to the target 10."
                    },
                    {
                        "input": "n = 5, nums=[2, 2, -1, -2, 3], target=3",
                        "output": "2",
                        "explanation": "The triplet {2, -1, 1} returns a sum of 2. While the triplet {2, 2,-1} is closer to target with 3, our algo handles ties correctly by returning the smaller of two equal distances."
                    },
                    {
                        "input": "n = 5, nums=[10, 12, 7, 8, -5], target=16",
                        "output": "15",
                        "explanation": "The triplet {10, 7, -2} which equals 15 is the closest to the target 16."
                    },
                    {
                        "input": "n = 4, nums=[6, 8, 2, 5], target=20",
                        "output": "19",
                        "explanation": "The triplet {6, 8, 5} with sum of 19 is closest to 20."
                    },
                    {
                        "input": "n = 3, nums=[0, 0, 0], target=1",
                        "output": "0",
                        "explanation": "The triplet {0,0,0} with sum of 0 is the closest to the target 1."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Explore all combinations of 3 integers.</p>",
            "<p>The naive approach obviously is exploring all combinations of 3 integers using 3 loops.</p><p>Now, to look into improving, does it help if we sort the array?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}