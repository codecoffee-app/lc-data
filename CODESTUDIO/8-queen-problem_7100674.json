{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 23792,
            "title": "8-Queen Problem",
            "titleSlug": "8-queen-problem_7100674",
            "content": "<h4 id=\"you-must-find-distinct-solutions-to-the-8-queen-puzzle-the-8-queen-puzzle-involves-placing-8-queens-on-a-chess-board-of-size-8-x-8-such-that-no-two-queens-can-attack-each-other\">You must find distinct solutions to the 8-queen puzzle. The 8-queen puzzle involves placing 8 queens on a chess board of size (8 X 8) such that no two queens can attack each other.</h4>\n\n<p><br/> </p>\n\n<h4 id=\"each-solution-contains-distinct-board-configurations-of-the-8-queens-placement-where-the-solution-are-a-permutation-of-1-2-3-n-here-the-number-in-the-ith-index-denotes-that-the-ith-column-queen-is-placed-in-the-row-with-that-number\">Each solution contains distinct board configurations of the 8-queens\u2019 placement where the solution are a permutation of [1, 2, 3, \u2026., n], here the number in the ith index denotes that the ith column queen is placed in the row with that number.</h4>\n\n<p><br/> </p>\n\n<h4 id=\"for-example-the-permutation-1-7-3-7-5-6-7-8-means-the-queen-in-the-1st-column-is-placed-in-the-1st-row-the-queen-in-the-2nd-column-is-placed-in-the-7th-row-and-so-on-this-permutation-may-or-may-not-be-a-valid-chessboard-configuration-for-the-8-queen-puzzle\">For example, the permutation [1, 7, 3, 7, 5, 6, 7, 8] means the queen in the 1st column is placed in the 1st row, the queen in the 2nd column is placed in the 7th row, and so on. This permutation may or may not be a valid chessboard configuration for the 8-queen puzzle.</h4>\n\n<p><br/> </p>\n\n<h4 id=\"note-in-the-output-you-will-have-1-0-corresponding-to-whether-your-answer-is-right-wrong-where-1-denotes-right-and-0-denotes-wrong-also-your-program-will-run-only-on-one-input-file\">Note: In the output, you will have 1/0 corresponding to whether your answer is right/wrong, where 1 denotes right, and 0 denotes wrong. Also, your program will run only on one input file.</h4>\n\n<p><br/> </p>\n\n<h5 id=\"input-format\">Input Format</h5>\n\n<pre><code>There is no input.\n</code></pre>\n\n<h5 id=\"output-format\">Output format:</h5>\n\n<pre><code>Return a list of all possible chessboard configurations of the 8-queens puzzle.\n</code></pre>\n\n<p><br/>    </p>\n\n<h5 id=\"note\">Note:-</h5>\n\n<pre><code>You don&#39;t need to print anything. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>Time Limit: 1-sec\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": -9,
            "dislikes": "NA",
            "rephrased": {
                "body": "Find all distinct solutions to the 8-Queens puzzle. The 8-Queens puzzle requires placing eight queens on an 8x8 chessboard such that no two queens can attack each other. A solution is represented as a permutation of [1, 2, 3, ..., 8], where the number at the i-th index indicates the row in which the queen in the i-th column is placed. For example, the permutation [1, 7, 3, 7, 5, 6, 7, 8] means the queen in column 1 is placed in row 1, the queen in column 2 is placed in row 7, and so on. Your task is to return a list of all valid and distinct 8-Queens solutions.",
                "constraints": [
                    "Time Limit: 1-sec"
                ],
                "testcases": [
                    {
                        "input": null,
                        "output": null,
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>&nbsp;Try to place queens one by one in different columns, from left to right.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}