{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 14524,
            "title": "Activity Participants",
            "titleSlug": "activity-participants_2188772",
            "content": "<pre><code>Table: Friends\n\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| id            | int     |\n| name          | varchar |\n| activity      | varchar |\n+---------------+---------+\nid is the id of the friend and primary key for this table.\nname is the name of the friend.\nactivity is the name of the activity which the friend takes part in.\nTable: Activities\n\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| id            | int     |\n| name          | varchar |\n+---------------+---------+\nid is the primary key for this table.\nname is the name of the activity.\n\n\nWrite an SQL query to find the names of all the activities with neither maximum, nor minimum number of participants.\n\nReturn the result table in any order. Each activity in table Activities is performed by any person in the table Friends.\n\nThe query result format is in the following example:\n\nFriends table:\n+------+--------------+---------------+\n| id   | name         | activity      |\n+------+--------------+---------------+\n| 1    | Jonathan D.  | Eating        |\n| 2    | Jade W.      | Singing       |\n| 3    | Victor J.    | Singing       |\n| 4    | Elvis Q.     | Eating        |\n| 5    | Daniel A.    | Eating        |\n| 6    | Bob B.       | Horse Riding  |\n+------+--------------+---------------+\n\nActivities table:\n+------+--------------+\n| id   | name         |\n+------+--------------+\n| 1    | Eating       |\n| 2    | Singing      |\n| 3    | Horse Riding |\n+------+--------------+\n\nResult table:\n+--------------+\n| activity     |\n+--------------+\n| Singing      |\n+--------------+\n\nEating activity is performed by 3 friends, maximum number of participants, (Jonathan D. , Elvis Q. and Daniel A.)\nHorse Riding activity is performed by 1 friend, minimum number of participants, (Bob B.)\nSinging is performed by 2 friends (Victor J. and Jade W.)\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -2,
            "dislikes": "NA",
            "rephrased": {
                "body": "Write an SQL query to find the names of all activities that do not have the maximum or minimum number of participants.  Return the result table in any order. Assume each activity in the `Activities` table is performed by at least one person in the `Friends` table.",
                "constraints": [],
                "testcases": [
                    {
                        "input": "Friends table:\n+------+--------------+---------------+\n| id   | name         | activity      |\n+------+--------------+---------------+\n| 1    | Jonathan D.  | Eating        |\n| 2    | Jade W.      | Singing       |\n| 3    | Victor J.    | Singing       |\n| 4    | Elvis Q.     | Eating        |\n| 5    | Daniel A.    | Eating        |\n| 6    | Bob B.       | Horse Riding  |\n+------+--------------+---------------+\n\nActivities table:\n+------+--------------+\n| id   | name         |\n+------+--------------+\n| 1    | Eating       |\n| 2    | Singing      |\n| 3    | Horse Riding |\n+------+--------------+",
                        "output": "+--------------+\n| activity     |\n+--------------+\n| Singing      |\n+--------------+",
                        "explanation": "Eating is performed by 3 friends (maximum). Horse Riding is performed by 1 friend (minimum). Singing is performed by 2 friends, which is neither the maximum nor the minimum.  Therefore, 'Singing' is the expected output."
                    },
                    {
                        "input": null,
                        "output": null,
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "SQL",
                "slug": "sql"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}