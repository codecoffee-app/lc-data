{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8567,
            "title": "Add binary strings",
            "titleSlug": "add-binary-strings_893059",
            "content": "<h4 id=\"you-have-been-given-two-binary-strings-a-and-b-your-task-is-to-find-the-sum-of-both-strings-in-the-form-of-a-binary-string\">You have been given two binary strings \u2018A\u2019 and \u2018B\u2019. Your task is to find the sum of both strings in the form of a binary string.</h4>\n\n<h4 id=\"binary-strings-are-the-representation-of-integers-in-the-binary-form-for-example-the-binary-strings-of-9-and-16-are-1001-and-10000-respectively\">Binary strings are the representation of integers in the binary form. For example, the binary strings of 9 and 16 are \u201c1001\u201d and \u201c10000\u201d respectively.</h4>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 representing the number of test cases. \n\nThe second line contains two space-separated integers \u2018N\u2019 and \u2018M\u2019 which are the length of strings \u2018A\u2019 and \u2018B\u2019 respectively. \n\nThe third line of each test case will contain two space-separated binary strings \u2018A\u2019 and \u2018B\u2019 as described above.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print the sum of the given binary strings in a binary form.\n\nOutput for every test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You don\u2019t need to print anything; It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= N, M &lt;= 5000\n\n\u2018A\u2019 and \u2018B\u2019 consist only of &#39;0&#39; or &#39;1&#39; characters.\n\nEach string does not contain leading zeros except for the zero itself.\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n2 2\n10 01\n3 2\n111 10\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>11\n1001\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of sample input 1:</h5>\n\n<pre><code>In the first test case, the first string is \u201c10\u201d which is 2 in the decimal format, and the second string is \u201c01\u201d which is 1 in the decimal format. So, 2 + 1 = 3, which is represented as \u201c11\u201d in binary form.\n\nIn the first test case, the first string is \u201c111\u201d which is 7 in the decimal format, and the second string is \u201c10\u201d which is 2 in the decimal format. So, 7 + 2 = 9, which is represented as \u201c1001\u201d in binary form.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n3 1\n111 0\n1 1\n1 1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>111\n10\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation for sample input 2:</h5>\n\n<pre><code>In the first test case, the first string is \u201c111\u201d which is 7 in the decimal format, and the second string is \u201c0\u201d which is 0 in the decimal format. So, 7 + 0 = 0, which is represented as \u201c111\u201d in binary form.\n\nIn the first test case, the first string is \u201c1\u201d which is 1 in the decimal format and the second string is \u201c1\u201d which is 1 in the decimal format. So, 1 + 1 = 2, which is represented as \u201c10\u201d in binary form.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 69,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two binary strings, 'a' and 'b', implement a function to calculate their sum as a binary string. The function should accept the strings 'a' and 'b', along with their lengths n and m, respectively, and return the binary sum as a string.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= N, M <= 5000",
                    "\u2018A\u2019 and \u2018B\u2019 consist only of '0' or '1' characters.",
                    "Each string does not contain leading zeros except for the zero itself."
                ],
                "testcases": [
                    {
                        "input": "n = 2, m = 2, a = \"10\", b = \"01\"",
                        "output": "11",
                        "explanation": "The first string is \u201c10\u201d (2 in decimal), and the second string is \u201c01\u201d (1 in decimal).  2 + 1 = 3, which is \u201c11\u201d in binary."
                    },
                    {
                        "input": "n = 3, m = 2, a = \"111\", b = \"10\"",
                        "output": "1001",
                        "explanation": "The first string is \u201c111\u201d (7 in decimal), and the second string is \u201c10\u201d (2 in decimal).  7 + 2 = 9, which is \u201c1001\u201d in binary."
                    },
                    {
                        "input": "n = 3, m = 1, a = \"111\", b = \"0\"",
                        "output": "111",
                        "explanation": "The first string is \u201c111\u201d (7 in decimal), and the second string is \u201c0\u201d (0 in decimal). 7 + 0 = 7, which is \u201c111\u201d in binary."
                    },
                    {
                        "input": "n = 1, m = 1, a = \"1\", b = \"1\"",
                        "output": "10",
                        "explanation": "The first string is \u201c1\u201d (1 in decimal), and the second string is \u201c1\u201d (1 in decimal). 1 + 1 = 2, which is \u201c10\u201d in binary."
                    },
                    {
                        "input": "n = 4, m = 4, a = \"1111\", b = \"0001\"",
                        "output": "10000",
                        "explanation": "The first string is \u201c1111\u201d (15 in decimal), and the second string is \u201c0001\u201d (1 in decimal). 15 + 1 = 16, which is \u201c10000\u201d in binary."
                    },
                    {
                        "input": "n = 1, m = 5, a = \"0\", b = \"10101\"",
                        "output": "10101",
                        "explanation": "Adding 0 to 10101 will result to 10101"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you think of using the standard algorithm for the addition?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}