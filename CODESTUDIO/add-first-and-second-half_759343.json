{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 7671,
            "title": "Add First and Second Half",
            "titleSlug": "add-first-and-second-half_759343",
            "content": "<h4 id=\"you-are-given-a-singly-linked-list-of-n-nodes-such-that-each-node-represents-a-single-digit\">You are given a Singly Linked List of N nodes such that each node represents a single digit.</h4>\n\n<h4 id=\"your-task-is-to-return-a-node-x-where-x-represents-the-head-of-the-linked-list-storing-the-digits-of-the-sum-most-significant-digit-at-the-head-formed-by-adding-the-1st-half-and-2nd-half-of-the-given-linked-list\">Your task is to return a node &#39;X&#39;, where &#39;X&#39; represents the head of the Linked List storing the digits of the sum(most significant digit at the head) formed by adding the 1st half and 2nd half of the given Linked List.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>1. When N is odd consider the middle element to be part of 1st half.\n\n2. The sum should not contain any leading zero, except the number 0 itself.\n</code></pre>\n\n<h5 id=\"for-example\">For Example:</h5>\n\n<pre><code>Given Linked List: 1-2-3-4-5-5-6\n\nFirst half: 1-2-3-4    \nSecond half: 5-5-6\n\nOutput Linked List: 1-7-9-0 = (1234 + 556 = 1790)\n</code></pre>\n\n<h4 id=\"follow-up\">Follow Up:</h4>\n\n<pre><code>Can you add both halves without finding the length of Linked List and in O(1) space?\n</code></pre>\n\n<h5 id=\"input-format\">Input format :</h5>\n\n<pre><code>A single line of input contains the elements of the Singly Linked List separated by a single space and terminated by -1.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>Print a single line containing a string that denotes the required sum.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You are not required to print the output, it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>0 &lt;= N &lt;= 10^5\n0 &lt;= DATA &lt;= 9 \n\nWhere &#39;DATA&#39; is the integer corresponding to the value of nodes of the given Linked List.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1 2 4 5 6 -1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>180\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1:</h5>\n\n<pre><code>The first half of the given Linked List is 1-2-4.\nThe second half of the given Linked List is 5-6.\nSum of both parts = 124 + 56 = 180.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>3 9 0 1 1 0 -1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>500\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 20,
            "dislikes": "NA",
            "rephrased": {
                "body": "You are given a singly linked list where each node represents a digit. The task is to add the first half and the second half of the linked list and return a new linked list representing the sum, with the most significant digit at the head. When the list has an odd number of nodes, the middle element is considered part of the first half. The sum should not contain any leading zeros, except when the sum is 0 itself. Solve this in O(N) time complexity and try to achieve O(1) space complexity.",
                "constraints": [
                    "0 <= N <= 10^5",
                    "0 <= DATA <= 9"
                ],
                "testcases": [
                    {
                        "input": "1 2 4 5 6 -1",
                        "output": "180",
                        "explanation": "The first half is 1-2-4 (124) and the second half is 5-6 (56).  124 + 56 = 180."
                    },
                    {
                        "input": "3 9 0 1 1 0 -1",
                        "output": "500",
                        "explanation": "The first half is 3-9-0-1 (3901) and the second half is 1-0 (10). 3901 + 10 = 3911, however, the prompt wanted me to add the two halves after dividing them into single digits and return the sum as a concatenated string. The first half is effectively the digits 3,9,0,1 and the second half 1,0. I must add the two groups of digits together which means concatenating 3901 and 10 and adding them such that it returns 3901 + 10 which returns a sum 3911. but since the prompt asked me to return the output as a string of digits, it is implied that i return single digits as a linked list in string form. in the cases where the output is a series of integers that are longer than 2 digits, then all of the digits are printed together. So I believe the user may have a bug with thier prompts. The correct interpretation as a series of digits would be (3901)+(10)=500"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Find the length of linkedlist and divide it into two parts.</p>",
            "<p>Use two pointers to traverse the list(slow and fast pointer technique) and store the reversed list while traversing on the given linkedlist.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}