{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 7671,
            "title": "Add First and Second Half",
            "titleSlug": "add-first-and-second-half_759343",
            "content": "<h4 id=\"you-are-given-a-singly-linked-list-of-n-nodes-such-that-each-node-represents-a-single-digit\">You are given a Singly Linked List of N nodes such that each node represents a single digit.</h4>\n\n<h4 id=\"your-task-is-to-return-a-node-x-where-x-represents-the-head-of-the-linked-list-storing-the-digits-of-the-sum-most-significant-digit-at-the-head-formed-by-adding-the-1st-half-and-2nd-half-of-the-given-linked-list\">Your task is to return a node &#39;X&#39;, where &#39;X&#39; represents the head of the Linked List storing the digits of the sum(most significant digit at the head) formed by adding the 1st half and 2nd half of the given Linked List.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>1. When N is odd consider the middle element to be part of 1st half.\n\n2. The sum should not contain any leading zero, except the number 0 itself.\n</code></pre>\n\n<h5 id=\"for-example\">For Example:</h5>\n\n<pre><code>Given Linked List: 1-2-3-4-5-5-6\n\nFirst half: 1-2-3-4    \nSecond half: 5-5-6\n\nOutput Linked List: 1-7-9-0 = (1234 + 556 = 1790)\n</code></pre>\n\n<h4 id=\"follow-up\">Follow Up:</h4>\n\n<pre><code>Can you add both halves without finding the length of Linked List and in O(1) space?\n</code></pre>\n\n<h5 id=\"input-format\">Input format :</h5>\n\n<pre><code>A single line of input contains the elements of the Singly Linked List separated by a single space and terminated by -1.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>Print a single line containing a string that denotes the required sum.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You are not required to print the output, it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>0 &lt;= N &lt;= 10^5\n0 &lt;= DATA &lt;= 9 \n\nWhere &#39;DATA&#39; is the integer corresponding to the value of nodes of the given Linked List.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1 2 4 5 6 -1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>180\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1:</h5>\n\n<pre><code>The first half of the given Linked List is 1-2-4.\nThe second half of the given Linked List is 5-6.\nSum of both parts = 124 + 56 = 180.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>3 9 0 1 1 0 -1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>500\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 20,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a singly linked list where each node represents a single digit, your task is to add the first half of the linked list (including the middle element if the list has an odd number of nodes) to the second half. Return the head of a new linked list representing the sum, with the most significant digit at the head. The sum should not contain any leading zeros, unless the number 0 itself is the sum.",
                "constraints": [
                    "0 <= N <= 10^5 (where N is the number of nodes in the linked list)",
                    "0 <= DATA <= 9 (where DATA is the value of a node)",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "head = [1,2,4,5,6,-1]",
                        "output": "180",
                        "explanation": "First half: 1-2-4. Second half: 5-6. Sum = 124 + 56 = 180."
                    },
                    {
                        "input": "head = [3,9,0,1,1,0,-1]",
                        "output": "500",
                        "explanation": "First half: 3-9-0-1. Second half: 1-0. Sum = 3901 + 10 = 3911. Since the question does not specifically say to return the result as linkedlist so i am returning the sum in integer"
                    },
                    {
                        "input": "head = [1,2,3,4,5,5,6,-1]",
                        "output": "1790",
                        "explanation": "First half: 1-2-3-4. Second half: 5-5-6. Sum = 1234 + 556 = 1790."
                    },
                    {
                        "input": "head = [0, -1]",
                        "output": "0",
                        "explanation": "First half: 0. Second half: empty. Sum = 0 + 0 = 0."
                    },
                    {
                        "input": "head = [9,9,-1]",
                        "output": "99",
                        "explanation": "First half: 9. Second half: 9. Sum = 9 + 9 = 18."
                    },
                    {
                        "input": "head = [1,0,0,0,-1]",
                        "output": "1000",
                        "explanation": "First half: 1-0-0-0. Second half: empty. Sum = 1000 + 0 = 1000."
                    },
                    {
                        "input": "head = [1,-1]",
                        "output": "1",
                        "explanation": "First Half: 1, Second Half: 0, SUM = 1 + 0 = 1"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Find the length of linkedlist and divide it into two parts.</p>",
            "<p>Use two pointers to traverse the list(slow and fast pointer technique) and store the reversed list while traversing on the given linkedlist.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}