{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 7672,
            "title": "Add First and Second Reversed Half",
            "titleSlug": "add-first-and-second-reversed-half_759344",
            "content": "<h4 id=\"you-have-been-given-a-linked-list-of-n-nodes-such-that-each-node-represents-a-single-digit\">You have been given a Linked List of &#39;N&#39; nodes such that each node represents a single digit.</h4>\n\n<h4 id=\"your-task-is-to-return-a-node-x-where-x-represents-the-head-of-the-linked-list-storing-the-digits-of-the-sum-most-significant-digit-at-the-head-formed-by-adding-1st-half-and-reverse-of-2nd-half-of-the-given-linked-list\">Your task is to return a node &#39;X&#39;, where &#39;X&#39; represents the head of the Linked List storing the digits of the sum(most significant digit at the head) formed by adding 1st half and reverse of 2nd half of the given linked list.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>1. When &#39;N&#39; is odd consider the middle element to be part of 1st half.\n2. The sum should not contain any leading zero, except the number 0 itself.\n</code></pre>\n\n<h4 id=\"for-example\">For example:</h4>\n\n<pre><code>Given a Linked List: 1-2-3-4-5-5-6\n\nFirst half: 1-2-3-4   \nReversed second half: 6-5-5\n\nOutput linkedlist: 1-8-8-9 = (1234 + 655 = 1889)\n</code></pre>\n\n<h4 id=\"follow-up\">Follow Up:</h4>\n\n<pre><code>Can you add both halves without finding the length of LinkedList and in O(1) space?\n</code></pre>\n\n<h5 id=\"input-format\">Input format :</h5>\n\n<pre><code>A single line of input contains the elements of the singly linked list separated by a single space and terminated by -1.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each input, print a single line containing a string denoting the required sum.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>0 &lt;= &#39;N&#39; &lt;= 10 ^ 5\n0 &lt;= &#39;DATA&#39; &lt;= 9\n\nWhere &#39;N&#39; is the number of nodes in linked list and &#39;DATA&#39; is the integer value in each node.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1 2 4 5 6 -1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>189\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1:</h5>\n\n<pre><code>The first half of the given linkedlist is: 1-2-4\nThe second half of the given linkedlist is: 6-5\nSum of both parts = 124 + 65 = 189\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>3 9 0 1 1 0 -1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>401\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 26,
            "dislikes": "NA",
            "rephrased": {
                "body": "You are given a singly linked list where each node represents a single digit. Your task is to add the first half of the linked list to the reverse of the second half and return the sum as a new linked list, with the most significant digit at the head.\n\nWhen the number of nodes 'N' is odd, consider the middle element as part of the first half. The sum should not contain any leading zeros, except if the sum is 0.\n\n**For example:**\n\nGiven a Linked List: 1 -> 2 -> 3 -> 4 -> 5 -> 5 -> 6\n\nFirst half: 1 -> 2 -> 3 -> 4\nReversed second half: 6 -> 5 -> 5\nOutput linkedlist: 1 -> 8 -> 8 -> 9 (1234 + 655 = 1889)\n\n**Follow Up:**\n\nCan you add both halves without finding the length of LinkedList and in O(1) space?",
                "constraints": [
                    "0 <= 'N' <= 10 ^ 5 (where 'N' is the number of nodes in the linked list)",
                    "0 <= 'DATA' <= 9 (where 'DATA' is the integer value in each node)",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "1 2 4 5 6 -1",
                        "output": "189",
                        "explanation": "The first half of the linked list is 1 -> 2 -> 4, representing the number 124.  The second half, reversed, is 6 -> 5, representing the number 65.  The sum is 124 + 65 = 189."
                    },
                    {
                        "input": "3 9 0 1 1 0 -1",
                        "output": "401",
                        "explanation": "The first half of the linked list is 3 -> 9 -> 0 -> 1, representing the number 3901. The second half, reversed is 0 -> 1, representing the number 10. The sum is 390 + 11 = 401."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Find the length of linkedlist and divide it into two parts.</p>",
            "<p>Use two pointers to traverse the list(slow and fast pointer technique) and store the reversed list while traversing on the given linkedlist.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}