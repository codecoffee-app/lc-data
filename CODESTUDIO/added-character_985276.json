{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9414,
            "title": "Added Character",
            "titleSlug": "added-character_985276",
            "content": "<h4 id=\"you-are-given-a-string-s-now-one-more-additional-character-is-introduced-in-this-string-which-turns-s-into-new-string-t-you-have-to-find-out-this-newly-added-character\">You are given a string &#39;S&#39;. Now one more additional character is introduced in this string, which turns &#39;S&#39; into new string &#39;T&#39;. You have to find out this newly added character.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>1. All the characters in string &#39;S&#39; and &#39;T&#39; consist of uppercase English alphabets.\n\n2. Length of string &#39;T&#39; is always 1 more than the length of string &#39;S&#39;.\n</code></pre>\n\n<h5 id=\"input-format\">Input format:</h5>\n\n<pre><code>The first line of the input contains an integer &#39;TEST&#39; denoting the number of test cases.\n\nThe first line of each test case consists of a string &#39;S&#39;.\n\nThe second line of each test consists of a string &#39;T&#39;.\n</code></pre>\n\n<h5 id=\"output-format\">Output format:</h5>\n\n<pre><code>For each test case, print a character that denotes the newly added character in a new line.\n\nPrint the output for each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You don&#39;t have to print anything, It has already been taken care of. Just Implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= TEST &lt;= 100\n1 &lt;= |S|, |T| &lt;= 10^4\n\nWhere &#39;|S|&#39; and &#39;|T|&#39; denotes the length of he strings &#39;S&#39; and &#39;T&#39; respectively.\n\nTime Limit: 1 sec.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\nAPPLE \nAPPHLE\nCODE\nCODER\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>H\nR\n</code></pre>\n\n<h5 id=\"explanation-for-sample-output-1\">Explanation for Sample Output 1:</h5>\n\n<pre><code>In test case 1, As only character which is present in \u201cAPPHLE\u201d but didn\u2019t present in \u201cAPPLE\u201d is \u2018H\u2019.\n\nIn test case 2, As only character which is present in \u201cCODER\u201d but didn\u2019t present in \u201cCODE&quot; is \u2018R\u2019.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\nMANGO \nMANNGO\nNINJA\nNIINJA\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>N\nI\n</code></pre>\n\n<h5 id=\"explanation-for-sample-output-2\">Explanation for Sample Output 2:</h5>\n\n<pre><code>In test case 1, As \u201cMANGO\u201d contains only 1 occurrence of \u2018N\u2019 but \u201cMANNGO\u201d contains 2 occurrences of \u2018N\u2019.\n\nIn test case 2, As \u201cNINJA\u201d contains only 1 occurrence of \u2018I\u2019 but \u201cNIINJA&quot; contains 2 occurrences of \u2018I\u2019.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 14,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two strings, `s` and `t`, where `t` is formed by adding exactly one character at any position in `s`. Your task is to identify and return the character that was added to `s` to form `t`. Both strings consist of uppercase English alphabets.",
                "constraints": [
                    "1 <= TEST <= 100",
                    "1 <= |s|, |t| <= 10^4, where |s| and |t| denote the lengths of the strings s and t respectively.",
                    "All characters in string 'S' and 'T' consist of uppercase English alphabets.",
                    "Length of string 'T' is always 1 more than the length of string 'S'."
                ],
                "testcases": [
                    {
                        "input": "s = \"APPLE\", t = \"APPHLE\"",
                        "output": "H",
                        "explanation": "The character 'H' is present in \"APPHLE\" but not in \"APPLE\"."
                    },
                    {
                        "input": "s = \"CODE\", t = \"CODER\"",
                        "output": "R",
                        "explanation": "The character 'R' is present in \"CODER\" but not in \"CODE\"."
                    },
                    {
                        "input": "s = \"MANGO\", t = \"MANNGO\"",
                        "output": "N",
                        "explanation": "\"MANGO\" contains only 1 occurrence of \u2018N\u2019 but \u201cMANNGO\u201d contains 2 occurrences of \u2018N\u2019."
                    },
                    {
                        "input": "s = \"NINJA\", t = \"NIINJA\"",
                        "output": "I",
                        "explanation": "\"NINJA\" contains only 1 occurrence of \u2018I\u2019 but \u201cNIINJA\" contains 2 occurrences of \u2018I\u2019."
                    },
                    {
                        "input": "s = \"A\", t = \"AB\"",
                        "output": "B",
                        "explanation": "The character 'B' is the only added character."
                    },
                    {
                        "input": "s = \"ABC\", t = \"BAC\"",
                        "output": "A",
                        "explanation": "The Character 'A' is the added character"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Simply iterate through strings and compare.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}