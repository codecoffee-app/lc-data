{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12195,
            "title": "Alert Using Same Key-Card More than Two Times in a One Hour Period",
            "titleSlug": "alert-using-same-key-card-more-than-two-times-in-a-one-hour-period_1404565",
            "content": "<h4 id=\"the-office-doors-can-only-be-open-by-using-the-key-cards-given-to-the-workers-whenever-a-worker-uses-their-key-card-to-unlock-the-door-the-office-s-security-system-saves-his-name-and-the-time-when-he-used-it-in-any-order-the-security-system-programmed-in-such-a-way-that-if-any-worker-uses-the-key-card-strictly-more-than-two-times-in-one-hour-then-the-system-emits-an-alert\">The office doors can only be open by using the \u2018key-cards\u2019 given to the workers. Whenever a worker uses their \u2018key-card\u2019 to unlock the door, the office\u2019s security system saves his name and the time when he used it in \u2018any order\u2019. The security system programmed in such a way that, if any worker uses the \u2018key-card\u2019 strictly \u201cmore than two times in one hour\u201d, then the system emits an \u2018alert\u2019.</h4>\n\n<h4 id=\"you-are-given-two-string-arrays-keyname-and-keytime-denoting-the-name-and-the-time-of-the-worker-when-he-used-his-key-card-in-a-single-day-your-task-is-to-find-the-list-of-unique-worker-names-who-received-an-alert\">You are given two string arrays \u2018keyName\u2019, and \u2018keyTime\u2019, denoting the \u2018name\u2019 and the \u2018time\u2019 of the worker when he used his \u2018key-card\u2019 in a \u201csingle day\u201d. Your task is to find the list of \u201cunique worker\u201d names who received an \u2018alert\u2019.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>1. The \u2018keyName\u2019 contains only the lower-case English alphabets.\n\n2. The \u2018keyTime\u2019 is given in the 24-hour format \u201cHH:MM\u201d, such as \u201c00:00\u201d, \u201c13:35\u201d, and \u201c23:59\u201d are some of the valid times.\n\n3. \u201c08:05 - 09:05\u201d is considered to be within a \u2018one-hour\u2019, whereas \u201c12:05 - 13:06\u201d is not considered to be within a \u2018one-hour\u2019 period.\n\n4. The system saves the \u2018name\u2019 and the \u2018time\u2019 of the workers in \u2018any order\u2019.\n\n5. Each pair of [\u2018keyName\u2019, \u2018keyTime\u2019] is \u2018unique\u2019.\n\n6. Print the output in \u2018increasing\u2019 order alphabetically. \n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains an integer \u2018T\u2019, which denotes the number of test cases to be run. Then, the T test cases follow. \n\nThe first line of each test case contains a single positive integer, \u2018N\u2019, denoting the total number of workers in the office.\n\nThe second line of each test case contains \u2018N\u2019 space-separated string, \u2018keyName[i]\u2019, representing the ith worker\u2019s name.\n\nThe third line of each test case contains \u2018N\u2019 space-separated string, \u2018keyTime[i]\u2019, representing the ith worker\u2019s time.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print a single line containing space-separated integers denoting elements of the list of the \u201cunique worker\u201d names sorted in \u201cincreasing order alphabetically\u201d, as described in the problem statement.\n\nThe output for each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>1. You do not need to print anything. It has already been taken care of. Just implement the given function.\n\n2. If the list is \u2018empty\u2019, then you have to return an \u201cempty list\u201d.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= \u2018T\u2019 &lt;= 10\n1 &lt;= \u2018N\u2019 &lt;= 10^4\n1 &lt;= \u2018keyName[i].length\u2019 &lt;= 10\n\u201c00:00\u201d &lt;= \u2018keyTime[i]\u2019 &lt;= \u201c23:59\u201d\nkeyName.length == keyTime.length  == \u2018N\u2019\n\nWhere \u2018T\u2019 is the number of test cases, \u2018N\u2019 is the number of workers, \u2018keyName[i]\u2019  is the name of the ith worker,  and \u2018keyTime[i]\u2019 is the time of the ith worker.\n\nTime Limit: 1 sec.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1\n5 \nninja ninja kevin ninja kevin\n09:00 09:30 10:10 09:59 10:00\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>ninja \n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for sample input 1:</h5>\n\n<pre><code>\u201cninja\u201d uses the \u2018key-card\u2019 more than two times in a one-hour period, i.e., at [\u201c09:00\u201d, \u201c09:30\u201d, \u201c09:59\u201d].\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\n3\nninja ninja ninja\n14:00 14:02 16:00\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation for sample input 2:</h5>\n\n<pre><code>\u201cninja\u201d did not use his \u2018key-card\u2019 more than two times in a one-hour. So, the output is the blank line. \n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 8,
            "dislikes": "NA",
            "rephrased": {
                "body": "The office doors are secured by key cards issued to workers. Each time a worker uses their key card, the security system records their name and the time of use. An alert is triggered if a worker uses their key card more than two times within a one-hour period. Given two string arrays, `keyName` and `keyTime`, representing worker names and their corresponding key card usage times in a single day, identify and return a list of unique worker names who triggered an alert.",
                "constraints": [
                    "1 <= T <= 10 (Number of test cases)",
                    "1 <= N <= 10^4 (Number of workers)",
                    "1 <= keyName[i].length <= 10",
                    "keyTime[i] is in \"HH:MM\" 24-hour format, e.g., \"00:00\", \"13:35\", \"23:59\"",
                    "keyName.length == keyTime.length == N",
                    "keyName[i] contains only lowercase English alphabets.",
                    "Each pair of [keyName, keyTime] is unique.",
                    "Time Limit: 1 sec."
                ],
                "testcases": [
                    {
                        "input": "1\n5\nninja ninja kevin ninja kevin\n09:00 09:30 10:10 09:59 10:00",
                        "output": "ninja",
                        "explanation": "The worker 'ninja' used their key card more than two times within a one-hour period (09:00, 09:30, 09:59), triggering an alert."
                    },
                    {
                        "input": "1\n3\nninja ninja ninja\n14:00 14:02 16:00",
                        "output": "",
                        "explanation": "The worker 'ninja' did not use their key card more than two times within a one-hour period."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><i>Think of sorting based on keyName.</i></p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}