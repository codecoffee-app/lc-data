{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 16506,
            "title": "Alien Dictionary",
            "titleSlug": "alien-dictionary_3169064",
            "content": "<h4 id=\"ninja-is-learning-a-new-but-strange-language-known-as-alien-language-alien-language-possesses-the-same-alphabets-as-of-english-language-but-their-order-is-different-the-order-of-letters-are-given-as-order-string-ninja-has-n-words-in-the-words-array-ninja-s-task-is-to-check-whether-the-words-of-words-are-sorted-lexicographically-in-this-alien-language-or-not\">Ninja is learning a new but strange language known as Alien Language. Alien language possesses the same alphabets as of English language, but their order is different. The order of letters are given as \u2018ORDER\u2019 string. Ninja has \u2018N\u2019 words in the \u2018WORDS\u2019 array. Ninja\u2019s task is to check whether the words of \u2018WORDS\u2019 are sorted lexicographically in this alien language or not.</h4>\n\n<h4 id=\"note-order-consists-of-all-26-letters-of-english-alphabet\">Note: \u2018ORDER\u2019 consists of all 26 letters of English alphabet.</h4>\n\n<h5 id=\"for-example\">For Example</h5>\n\n<pre><code>If \u2018WORDS\u2019 = [&quot;word&quot;,&quot;world&quot;,&quot;row&quot;], \u2018ORDER\u2019 = &quot;worldabcefghijkmnpqstuvxyz&quot;,the answer will be \u2018NO\u2019 as first and second words are not lexicographically sorted as \u2018l\u2019 comes before \u2018d\u2019 in alien language.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of the input contains an integer, &#39;T,\u2019 denoting the number of test cases.\n\nThe first line of each test case contains a single integer, \u2018N\u2019 denoting the number of words.\nThe second line of each test case contains \u2018N\u2019 strings corresponding to \u2018WORDS\u2019.\nThe third line contains a permutation of 26 letters denoting the \u2018ORDER\u2019 string.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print \u2018YES\u2019 if the words are sorted, else print \u2018NO\u2019.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 1000.\n1 &lt;= length of \u2018WORDS[i]\u2019 &lt;= 20 \n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2 \n3\nword world row\nworldabcefghijkmnpqstuvxyz\n2\nninja codingninja\nnabcdefghijklmopqrstuvwxyz\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>NO\nYES\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of sample input 1:</h5>\n\n<pre><code>For the first test case,\n\nThe first and Second words of \u2018WORDS\u2019 are not lexicographically sorted as \u2018l\u2019 comes before \u2018d\u2019 in the alien language. Hence, the answer is \u2018NO\u2019.\n\n\nFor the second test case:\nThe words of \u2018WORDS\u2019 are sorted in lexicographical order according to the alien language. Hence, the answer is \u2018YES\u2019.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n6\nbg poeupcym i yqifzvlcp d cnjodzbq \ngxqynrktahwoevljizmbdspfcu\n7\nkt ggt lmvynuw dnvsxjy fht qeefx ovs \nykarxuhvimjgldpfqtzsebownc\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>NO\nYES\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 35,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a list of words `words` and a string `order` representing the alphabetic order of a new alien language, determine if the words in `words` are lexicographically sorted according to the alien language's order. The alien language uses the same letters as English, but the order is different. Return `true` if the words are sorted, `false` otherwise.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 1000",
                    "1 <= length of \u2018WORDS[i]\u2019 <= 20"
                ],
                "testcases": [
                    {
                        "input": "n = 3, words = [\"word\",\"world\",\"row\"], order = \"worldabcefghijkmnpqstuvxyz\"",
                        "output": "false",
                        "explanation": "The first and second words, \"word\" and \"world\", are not lexicographically sorted because 'l' comes before 'd' in the given alien language order."
                    },
                    {
                        "input": "n = 2, words = [\"ninja\", \"codingninja\"], order = \"nabcdefghijklmopqrstuvwxyz\"",
                        "output": "true",
                        "explanation": "The words \"ninja\" and \"codingninja\" are sorted in lexicographical order according to the alien language defined by the 'order' string."
                    },
                    {
                        "input": "n = 6, words = [\"bg\", \"poeupcym\", \"i\", \"yqifzvlcp\", \"d\", \"cnjodzbq\"], order = \"gxqynrktahwoevljizmbdspfcu\"",
                        "output": "false",
                        "explanation": "The given words are not lexicographically sorted according to the provided alien order."
                    },
                    {
                        "input": "n = 7, words = [\"kt\", \"ggt\", \"lmvynuw\", \"dnvsxjy\", \"fht\", \"qeefx\", \"ovs\"], order = \"ykarxuhvimjgldpfqtzsebownc\"",
                        "output": "true",
                        "explanation": "The given list of words are lexicographically sorted according to the alien dictionary."
                    },
                    {
                        "input": "n = 2, words = [\"apple\", \"app\"], order = \"abcdefghijklmnopqrstuvwxyz\"",
                        "output": "false",
                        "explanation": "The word \"apple\" comes before \"app\" since it's longer. So, the output is false."
                    },
                    {
                        "input": "n = 2, words = [\"app\", \"apple\"], order = \"abcdefghijklmnopqrstuvwxyz\"",
                        "output": "true",
                        "explanation": "The word \"app\" comes before \"apple\". So the words are lexicographically sorted."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Check the adjacent words.</p>",
            "<p>Change the words according to the rank of English language.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}