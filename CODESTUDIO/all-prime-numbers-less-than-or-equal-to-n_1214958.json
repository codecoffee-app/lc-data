{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10404,
            "title": "All Prime Numbers less than or equal to N",
            "titleSlug": "all-prime-numbers-less-than-or-equal-to-n_1214958",
            "content": "<h4 id=\"you-are-given-a-positive-integer-n-your-task-is-to-return-all-the-prime-numbers-less-than-or-equal-to-the-n\">You are given a positive integer &#39;N&#39;. Your task is to return all the prime numbers less than or equal to the &#39;N&#39;.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>1) A prime number is a number that has only two factors: 1 and the number itself.\n\n2) 1 is not a prime number.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains an integer &#39;T&#39;, which denotes the number of test cases or queries to be run. Then, the &#39;T&#39; test cases follow. \n\nThe first line of each test case contains only one integer &#39;N&#39;, as described in the problem statement.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, return a sequence of integers denoting the prime number less than or equal to &#39;N&#39; in the increasing order.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n2 &lt;= N &lt;= 5000\n\nTime Limit: 1sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1\n5\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>2 3 5\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for sample input 1:</h5>\n\n<pre><code>2,3 and 5 are the only prime numbers less than or equal to 5.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\n8       \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>2 3 5 7\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation for sample input 2:</h5>\n\n<pre><code>2,3,5 and 7 are the only prime numbers less than or equal to 8.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 2,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a positive integer 'n', determine all prime numbers less than or equal to 'n'. A prime number is a number greater than 1 that has only two distinct factors: 1 and the number itself. Return a vector containing these prime numbers in ascending order.",
                "constraints": [
                    "1 <= T <= 100",
                    "2 <= N <= 5000",
                    "Time Limit: 1sec"
                ],
                "testcases": [
                    {
                        "input": "n = 5",
                        "output": "2 3 5",
                        "explanation": "The prime numbers less than or equal to 5 are 2, 3, and 5."
                    },
                    {
                        "input": "n = 8",
                        "output": "2 3 5 7",
                        "explanation": "The prime numbers less than or equal to 8 are 2, 3, 5, and 7."
                    },
                    {
                        "input": "n = 2",
                        "output": "2",
                        "explanation": "The prime number less than or equal to 2 is 2."
                    },
                    {
                        "input": "n = 10",
                        "output": "2 3 5 7",
                        "explanation": "The prime numbers less than or equal to 10 are 2, 3, 5, and 7."
                    },
                    {
                        "input": "n = 15",
                        "output": "2 3 5 7 11 13",
                        "explanation": "The prime numbers less than or equal to 15 are 2, 3, 5, 7, 11, and 13."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Think of the Brute Force approach.</p>",
            "<p>Try to make approach 1 efficient by using the square root of the N method.</p>",
            "<p>Try to make approach 2 more efficient in terms of the log.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}