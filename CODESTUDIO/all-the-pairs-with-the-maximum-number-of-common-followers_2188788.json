{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 14533,
            "title": "All the Pairs With the Maximum Number of Common Followers",
            "titleSlug": "all-the-pairs-with-the-maximum-number-of-common-followers_2188788",
            "content": "<pre><code>Table: Relations\n\n+-------------+------+\n| Column Name | Type |\n+-------------+------+\n| user_id     | int  |\n| follower_id | int  |\n+-------------+------+\n(user_id, follower_id) is the primary key for this table.\nEach row of this table indicates that the user with ID follower_id is following the user with ID user_id.\n\n\nWrite an SQL query to find all the pairs of users with the maximum number of common followers. In other words, if the maximum number of common followers between any two users is maxCommon, then you have to return all pairs of users that have maxCommon common followers.\n\nThe result table should contain the pairs user1_id and user2_id where user1_id &lt; user2_id.\n\nReturn the result table in any order.\n\nThe query result format is in the following example:\n\n\n\nRelations table:\n+---------+-------------+\n| user_id | follower_id |\n+---------+-------------+\n| 1       | 3           |\n| 2       | 3           |\n| 7       | 3           |\n| 1       | 4           |\n| 2       | 4           |\n| 7       | 4           |\n| 1       | 5           |\n| 2       | 6           |\n| 7       | 5           |\n+---------+-------------+\n\nResult table:\n+----------+----------+\n| user1_id | user2_id |\n+----------+----------+\n| 1        | 7        |\n+----------+----------+\n\nUsers 1 and 2 have 2 common followers (3 and 4).\nUsers 1 and 7 have 3 common followers (3, 4, and 5).\nUsers 2 and 7 have 2 common followers (3 and 4).\nSince the maximum number of common followers between any two users is 3, we return all pairs of users with 3 common followers, which is only the pair (1, 7). We return the pair as (1, 7), not as (7, 1).\nNote that we do not have any information about the users that follow users 3, 4, and 5, so we consider them to have 0 followers.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -5,
            "dislikes": "NA",
            "rephrased": {
                "body": "The 'Relations' table tracks follower relationships between users. Each row indicates that 'follower_id' is following 'user_id'.  Write an SQL query to identify all pairs of users who share the maximum number of common followers.  The query should return the pairs 'user1_id' and 'user2_id' where 'user1_id' is strictly less than 'user2_id'.  The result table should be ordered arbitrarily.",
                "constraints": [],
                "testcases": [
                    {
                        "input": "Relations table:\n+---------+-------------+\n| user_id | follower_id |\n+---------+-------------+\n| 1       | 3           |\n| 2       | 3           |\n| 7       | 3           |\n| 1       | 4           |\n| 2       | 4           |\n| 7       | 4           |\n| 1       | 5           |\n| 2       | 6           |\n| 7       | 5           |\n+---------+-------------+",
                        "output": "Result table:\n+----------+----------+\n| user1_id | user2_id |\n+----------+----------+\n| 1        | 7        |\n+----------+----------+",
                        "explanation": "Users 1 and 2 have 2 common followers (3 and 4).\nUsers 1 and 7 have 3 common followers (3, 4, and 5).\nUsers 2 and 7 have 2 common followers (3 and 4).\nSince the maximum number of common followers between any two users is 3, we return all pairs of users with 3 common followers, which is only the pair (1, 7). We return the pair as (1, 7), not as (7, 1)."
                    },
                    {
                        "input": null,
                        "output": null,
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "SQL",
                "slug": "sql"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}