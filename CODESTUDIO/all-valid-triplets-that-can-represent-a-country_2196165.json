{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 14617,
            "title": " All Valid Triplets That Can Represent a Country",
            "titleSlug": "all-valid-triplets-that-can-represent-a-country_2196165",
            "content": "<pre><code>Table: SchoolA\n\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| student_id    | int     |\n| student_name  | varchar |\n+---------------+---------+\nstudent_id is the primary key for this table.\nEach row of this table contains the name and the id of a student in school A.\nAll student_name are distinct.\n\n\nTable: SchoolB\n\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| student_id    | int     |\n| student_name  | varchar |\n+---------------+---------+\nstudent_id is the primary key for this table.\nEach row of this table contains the name and the id of a student in school B.\nAll student_name are distinct.\n\n\nTable: SchoolC\n\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| student_id    | int     |\n| student_name  | varchar |\n+---------------+---------+\nstudent_id is the primary key for this table.\nEach row of this table contains the name and the id of a student in school C.\nAll student_name are distinct.\n\n\nThere is a country with three schools, where each student is enrolled in exactly one school. The country is joining a competition and wants to select one student from each school to represent the country such that:\n\nmember_A is selected from SchoolA,\nmember_B is selected from SchoolB,\nmember_C is selected from SchoolC, and\nThe selected students&#39; names and IDs are pairwise distinct (i.e. no two students share the same name, and no two students share the same ID).\nWrite an SQL query to find all the possible triplets representing the country under the given constraints.\n\nReturn the result table in any order.\n\nThe query result format is in the following example.\n\n\n\nSchoolA table:\n+------------+--------------+\n| student_id | student_name |\n+------------+--------------+\n| 1          | Alice        |\n| 2          | Bob          |\n+------------+--------------+\n\nSchoolB table:\n+------------+--------------+\n| student_id | student_name |\n+------------+--------------+\n| 3          | Tom          |\n+------------+--------------+\n\nSchoolC table:\n+------------+--------------+\n| student_id | student_name |\n+------------+--------------+\n| 3          | Tom          |\n| 2          | Jerry        |\n| 10         | Alice        |\n+------------+--------------+\n\nResult table:\n+----------+----------+----------+\n| member_A | member_B | member_C |\n+----------+----------+----------+\n| Alice    | Tom      | Jerry    |\n| Bob      | Tom      | Alice    |\n+----------+----------+----------+\nLet us see all the possible triplets.\n- (Alice, Tom, Tom) --&gt; Rejected because member_B and member_C have the same name and the same ID.\n- (Alice, Tom, Jerry) --&gt; Valid triplet.\n- (Alice, Tom, Alice) --&gt; Rejected because member_A and member_C have the same name.\n- (Bob, Tom, Tom) --&gt; Rejected because member_B and member_C have the same name and the same ID.\n- (Bob, Tom, Jerry) --&gt; Rejected because member_A and member_C have the same ID.\n- (Bob, Tom, Alice) --&gt; Valid triplet.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": -4,
            "dislikes": "NA",
            "rephrased": {
                "body": "A country has three schools: SchoolA, SchoolB, and SchoolC. Each student is enrolled in exactly one school. The country wants to select one student from each school to represent them in a competition. The selection criteria are as follows:\n\n*   member_A must be selected from SchoolA.\n*   member_B must be selected from SchoolB.\n*   member_C must be selected from SchoolC.\n*   The selected students' names must be distinct (no two students share the same name).\n*   The selected students' IDs must be distinct (no two students share the same ID).\n\nGiven the student information for each school, find all possible triplets of students (member_A, member_B, member_C) that meet the above conditions.",
                "constraints": [],
                "testcases": [
                    {
                        "input": "SchoolA:\n+------------+--------------+\n| student_id | student_name |\n+------------+--------------+\n| 1          | Alice        |\n| 2          | Bob          |\n+------------+--------------+\n\nSchoolB:\n+------------+--------------+\n| student_id | student_name |\n+------------+--------------+\n| 3          | Tom          |\n+------------+--------------+\n\nSchoolC:\n+------------+--------------+\n| student_id | student_name |\n+------------+--------------+\n| 3          | Tom          |\n| 2          | Jerry        |\n| 10         | Alice        |\n+------------+--------------+",
                        "output": "+----------+----------+----------+\n| member_A | member_B | member_C |\n+----------+----------+----------+\n| Alice    | Tom      | Jerry    |\n| Bob      | Tom      | Alice    |\n+----------+----------+----------+",
                        "explanation": "Possible triplets:\n\n*   (Alice, Tom, Tom) is rejected because member_B and member_C have the same name and ID.\n*   (Alice, Tom, Jerry) is a valid triplet.\n*   (Alice, Tom, Alice) is rejected because member_A and member_C have the same name.\n*   (Bob, Tom, Tom) is rejected because member_B and member_C have the same name and ID.\n*   (Bob, Tom, Jerry) is rejected because member_A and member_C have the same ID.\n*   (Bob, Tom, Alice) is a valid triplet."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "SQL",
                "slug": "sql"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}