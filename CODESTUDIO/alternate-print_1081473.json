{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9681,
            "title": "Alternate print",
            "titleSlug": "alternate-print_1081473",
            "content": "<h4 id=\"you-have-two-strings-a-and-b-your-task-is-to-print-these-two-strings-in-an-alternative-fashion-according-to-indices-i-e-first-character-of-a-the-first-character-of-b-the-second-character-of-a-the-second-character-of-b-and-so-on\">You have two strings \u201cA\u201d and \u201cB\u201d. Your task is to print these two strings in an alternative fashion according to indices i.e. first character of \u201cA\u201d, the first character of \u201cB\u201d, the second character of \u201cA\u201d, the second character of \u201cB\u201d and so on.</h4>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>If all characters of one string are printed and some characters of other string are remaining, then you have to print the remaining characters of the other string at the end of the resulting string.\n</code></pre>\n\n<h5 id=\"follow-up\">Follow Up :</h5>\n\n<pre><code>Can you solve the problem in O(N) time complexity and O(1) space complexity?\n</code></pre>\n\n<h5 id=\"for-example\">For Example:</h5>\n\n<pre><code>A = \u201cabc\u201d B = \u201cfdh\u201d then answer will be afbdch.\n</code></pre>\n\n<h5 id=\"input-format\">Input format :</h5>\n\n<pre><code>The first line of input contains a single integer T, representing the number of test cases or queries to be run. \n\nThen the T test cases follow.\n\nThe first line of each test contains two space-separated strings \u201cA\u201d and \u201cB\u201d. \n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case, print a single line containing these two strings in an alternative fashion according to indices.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10    \n1 &lt;= |A|, |B| &lt;= 10^5 \nA and B contains only lower case English characters\n\nTime Limit: 1sec\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2 \nab the\nac ninjas\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>atbhe\nancinjas\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1:</h5>\n\n<pre><code>For the first test case, A = \u201cab\u201d and B = \u201cthe\u201d \nPrint the first two characters of both strings in an alternative fashion,\nWe get \u201catbh\u201d then finally append &quot;e&quot; to get the answer as \u201catbhe\u201d \n\nFor the second test case, A = \u201cac\u201d and B = \u201cninjas\u201d\nPrinting first two characters of both strings in alternative fashion, \nWe will get \u201canci\u201d, now append remaining characters to answer. So the answer will be  \u201cancinjas\u201d.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>1\ncoding ninjas\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>cnoidnijnags\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation For Sample Input 2:</h5>\n\n<pre><code>For the first test case, A = \u201ccoding\u201d and B = \u201cninjas\u201d\nPrinting both strings in the alternative fashion we will get \u201ccnoidnijnags\u201d. \n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 5,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two strings, 'A' and 'B', construct a new string by alternating characters from 'A' and 'B'. Start with the first character of 'A', followed by the first character of 'B', then the second character of 'A', and so on. If one string is exhausted before the other, append the remaining characters of the longer string to the end of the resulting string.",
                "constraints": [
                    "1 <= T <= 10 (Number of test cases)",
                    "1 <= |A|, |B| <= 10^5 (Length of strings A and B)",
                    "A and B contain only lowercase English characters",
                    "Time Limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "ab the",
                        "output": "atbhe",
                        "explanation": "String A is \"ab\" and string B is \"the\". Alternating characters gives \"atbh\". Since \"the\" has remaining character 'e' after 'h', append 'e' to the result, yielding \"atbhe\"."
                    },
                    {
                        "input": "ac ninjas",
                        "output": "ancinjas",
                        "explanation": "String A is \"ac\" and string B is \"ninjas\". Alternating characters gives \"anci\". Since string B has remaining characters \"njas\", append them to the result, giving \"ancinjas\"."
                    },
                    {
                        "input": "coding ninjas",
                        "output": "cnoidnijnags",
                        "explanation": "String A is \"coding\" and string B is \"ninjas\". Alternating characters until one string is exhausted gives \"cnoidnijnags\". In this case, alternating 'coding' and 'ninjas' produces that result without any leftover characters."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Think of a recursive solution.&nbsp;&nbsp;</p>",
            "<p>Think of an iterative solution.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}