{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8723,
            "title": "Alternatives",
            "titleSlug": "alternatives_893342",
            "content": "<h4 id=\"you-are-given-an-array-arr-that-contains-an-equal-number-of-positive-and-negative-elements-rearrange-the-given-array-such-that-positive-and-negative-numbers-are-arranged-alternatively-also-the-respective-relative-order-of-positive-and-negative-should-be-maintained\">You are given an array \u2018arr\u2019 that contains an equal number of positive and negative elements. Rearrange the given array such that positive and negative numbers are arranged alternatively. Also, the respective relative order of positive and negative should be maintained.</h4>\n\n<h4 id=\"for-example\">For example:</h4>\n\n<pre><code>For the given arr[ ] = { -1, 3, 5, 0, -2, -5 } \narr[ ] = {3, -1, 5, -2, 0, -5 } is valid rearrangement.\narr[ ] = {3, -1, 0, -2, 5, -5 } is invalid rearrangement; order of 0 and 5 is changed. \narr[ ] = {3, -1, 5, 0, -2, -5 } is invalid rearrangement; positive and negative elements are not alternative.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>Make changes in the same array and no returning or printing is needed.\nConsider zero(0) as a positive element for this question.\nIt is guaranteed that an answer always exists.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019, denoting the number of test cases. Then each test case follows.\n\nThe first line of each test case contains the Integer \u2018N\u2019 denoting the number of elements in the array.\n\nThe second and the last line of each test case contains \u2018N\u2019 single space-separated integers representing the elements of the array.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print a single line containing \u2018N\u2019 single space-separated integers such that positive and negative numbers are arranged alternatively.\n\nOutput of each test case will be printed on a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= N &lt;= 5 * 10 ^ 3\n-10 ^ 9 &lt;= arr[i] &lt;= 10 ^ 9\n\nTime Limit: 1 sec.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n6\n1 2 3 -1 -2 -3\n8\n1 -10 5 -1 2 -3 0 -2\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>1 -1 2 -2 3 -3 \n1 -10 5 -1 2 -3 0 -2 \n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1:</h5>\n\n<pre><code>In the first test case, the output is an array of alternative positive and negative numbers, and also order is maintained (relative order of positive numbers are 1 -&gt; 2 -&gt; 3 and for negative numbers are -1 -&gt; 2 -&gt; -3 )\n\nIn the first test case, it is already in valid arrangement.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\n4\n-1 0 0 -1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>0 -1 0 -1 \n</code></pre>\n\n<h5 id=\"explanation-of-sample-output-2\">Explanation of Sample Output 2:</h5>\n\n<pre><code>In the first test case, the output is an array of alternative positive and negative numbers and also order is maintained.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 34,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array 'arr' containing an equal number of positive and negative elements, rearrange the array so that positive and negative numbers alternate while maintaining their relative order. Consider zero (0) as a positive number.  It's guaranteed that a valid arrangement always exists. Make changes in the same array.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= N <= 5 * 10^3",
                    "-10^9 <= arr[i] <= 10^9",
                    "Time Limit: 1 sec."
                ],
                "testcases": [
                    {
                        "input": "6\n1 2 3 -1 -2 -3",
                        "output": "1 -1 2 -2 3 -3",
                        "explanation": "The output is an array with alternating positive and negative numbers, preserving the relative order of positive (1 -> 2 -> 3) and negative numbers (-1 -> -2 -> -3)."
                    },
                    {
                        "input": "8\n1 -10 5 -1 2 -3 0 -2",
                        "output": "1 -10 5 -1 2 -3 0 -2",
                        "explanation": "The input array is already in a valid arrangement."
                    },
                    {
                        "input": "4\n-1 0 0 -1",
                        "output": "0 -1 0 -1",
                        "explanation": "The output is an array with alternating positive (including 0) and negative numbers, preserving the relative order."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Put one by one element at its correct position.</p>",
            "<p>Use two pointers, one for positive and one for negative numbers</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}