{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 3025,
            "title": "Anagram Pairs",
            "titleSlug": "anagram-pairs_626517",
            "content": "<h4 id=\"you-are-given-two-strings-str1-and-str1\">You are given two strings <em><strong>&#39;str1&#39;</strong></em> and <em><strong>&#39;str1&#39;</strong></em>.</h4>\n\n<p><br></p>\n\n<h4 id=\"you-have-to-tell-whether-these-strings-form-an-anagram-pair-or-not\">You have to tell whether these strings form an anagram pair or not.</h4>\n\n<p><br></p>\n\n<h4 id=\"the-strings-form-an-anagram-pair-if-the-letters-of-one-string-can-be-rearranged-to-form-another-string\">The strings form an anagram pair if the letters of one string can be rearranged to form another string.</h4>\n\n<h4 id=\"pre-requisites\">Pre-requisites:</h4>\n\n<pre><code>Anagrams are defined as words or names that can be formed by rearranging the letters of another word. Such as &quot;spar&quot; can be formed by rearranging letters of &quot;rasp&quot;. Hence, &quot;spar&quot; and &quot;rasp&quot; are anagrams. \n</code></pre>\n\n<h4 id=\"other-examples-include\">Other examples include:</h4>\n\n<pre><code>&#39;triangle&#39; and &#39;integral&#39;\n&#39;listen&#39; and &#39;silent&#39;\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>Since it is a binary problem, there is no partial marking. Marks will only be awarded if you get all the test cases correct. \n</code></pre>\n\n<h5 id=\"input-format\">Input format:</h5>\n\n<pre><code>The first and the only line of input contains two single space-separated strings Str1 and Str2, respectively.\n</code></pre>\n\n<h5 id=\"output-format\">Output format:</h5>\n\n<pre><code>The only line of output contains either True or False. True, if the given two strings form an anagram pair and False otherwise.\n\nYou don&#39;t have to explicitly print by yourself. It has already been taken care of.\n</code></pre>\n\n<h5 id=\"remember-consider\">Remember/Consider:</h5>\n\n<pre><code>Neither of the two input strings contains spaces in between, except to differentiate one from the other.\n\nAlso, both the strings will be in lowercase characters.   \n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>rasp spar\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>True\n</code></pre>\n\n<h5 id=\"explanation-for-sample-output-1\">Explanation For Sample Output 1:</h5>\n\n<pre><code>Since both the strings have one &#39;a&#39;, one &#39;p&#39;, one &#39;r&#39;, and one &#39;s&#39;, they are anagrams.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>rasp spaz\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>False\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= N &lt;= 10^5 \n1 &lt;= M &lt;= 10^5\nWhere N and M are the lengths of the strings str1 and str2 , respectively.\n\nTime Limit: 1sec\n</code></pre>\n\n<h5 id=\"follow-up\">Follow Up:</h5>\n\n<pre><code>Can you solve this in O( N ) time?\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 52,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two strings, `str1` and `str2`, determine if they are anagrams of each other. Anagrams are strings that contain the same characters with the same frequency, but in a different order.  Both strings will contain only lowercase characters.",
                "constraints": [
                    "1 <= N <= 10^5, where N is the length of str1.",
                    "1 <= M <= 10^5, where M is the length of str2.",
                    "Time Limit: 1 second."
                ],
                "testcases": [
                    {
                        "input": "rasp spar",
                        "output": "True",
                        "explanation": "Both strings contain the same characters ('a', 'p', 'r', 's') with the same frequency (one of each). Therefore, they are anagrams."
                    },
                    {
                        "input": "rasp spaz",
                        "output": "False",
                        "explanation": "The strings do not contain the same characters with the same frequencies. 'rasp' contains 'r' and 'spaz' contains 'z', therefore they are not anagrams."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Is there a specific property of anagrams that can come in handy? Something that is related to the number/count of characters?</p>",
            "<p>In the previous approach, we noticed that the counts of distinct characters in both strings are equal in case of anagrams. How can we check this in O(N) complexity? Can we use some memory to store information related to the counts and use it?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}