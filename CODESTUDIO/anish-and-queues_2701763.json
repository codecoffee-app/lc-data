{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 15758,
            "title": "Anish and Queues!",
            "titleSlug": "anish-and-queues_2701763",
            "content": "<h4 id=\"anish-is-very-sad-due-to-the-poor-performance-of-india-in-wt20-and-thus-does-not-want-to-complete-his-data-structures-homework-which-says-to-implement-n-queues-in-a-single-array-of-length-l-the-queue-number-will-be-given-on-which-the-enqueue-and-dequeue-operations-will-be-given-and-you-have-to-perform-the-operations-on-a-single-array-of-length-l-can-you-help-him-out\">Anish is very sad due to the poor performance of India in WT20 and thus does not want to complete his data structures homework which says to implement N queues in a single array of length L. The queue number will be given on which the enqueue and dequeue operations will be given and you have to perform the operations on a single array of length L. Can you help him out?</h4>\n\n<h5 id=\"example\">Example:-</h5>\n\n<pre><code>Let, \n\nN = 5\nL = 10\n1 4 1 [ENQUEUE (4 ,1)]\n1 3 1 [ENQUEUE (3 ,1)] \n2 1 [DEQUEUE(1)] \n2 2 2 [ENQUEUE(2,2)] \n2 2 [DEQUEUE(2)]\n\nAnswer:- [0, 0, 4, 0, 2] \n (The first queue has 4 and 3 so 4 is dequeued out from queue 1 and queue 2 has integer 2 in it, so 2 is dequeued out from queue 2) .\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 representing the number of test cases. Then each test case follows.\n\nThe first line of each test case contains three integers \u2018L\u2019, \u2018N\u2019, and \u2018Q\u2019 denoting the number of queues to be implemented and the number of queries to be performed.\n\nThe next \u2018Q\u2019 lines of every test case contain 3 integers \u2018A\u2019, \u2018B\u2019, and \u2018C\u2019 denoting the type of operation, the queue number on which the operation is to be achieved, and the number to be enqueued if \u2018T\u2019 is 1.\n\nThe next \u2018Q\u2019 lines of every test case contain 2 integers \u2018A\u2019, and \u2018B\u2019 denoting the type of operation, and the queue number on which the operation is to be achieved.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case and for each query, print an integer denoting the number dequeued out if \u2018A\u2019 is 2 if there exists a number in the queue otherwise print -1. If \u2018A\u2019 is 1, if the enqueue operation is successful, print 0, otherwise print -1 if the queue is full.\n\nThe output of each test case should be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You are not required to print anything, it has already been taken care of. Just implement the function.    \n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= L &lt;= 10^5\n1 &lt;= A &lt;= 2\n1 &lt;= B &lt;= N\n1 &lt;= C &lt;= 10^9  \n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>1\n10 1 5\n1 1 1\n1 1 3\n2 1\n2 1\n2 1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>0\n0\n1\n3\n-1 \n</code></pre>\n\n<h5 id=\"explanation-for-sample-output-1\">Explanation for Sample Output 1 :</h5>\n\n<pre><code>In the first two operations, the answer should be 0 because the enqueue operations are performed successfully. Then for the next two operations, the numbers 1 and 3 are dequeued out and they are printed. In the last operation, -1 is printed because the queue is already empty.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>1\n10 2 1\n2 2 \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>-1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 10,
            "dislikes": "NA",
            "rephrased": {
                "body": "Implement N queues within a single array of length L. You will receive a series of enqueue and dequeue operations, specifying the queue number to operate on. Perform these operations on the shared array and return the appropriate values.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= L <= 10^5",
                    "1 <= N <= L",
                    "1 <= A <= 2",
                    "1 <= B <= N",
                    "1 <= C <= 10^9",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "1\n10 1 5\n1 1 1\n1 1 3\n2 1\n2 1\n2 1",
                        "output": "0\n0\n1\n3\n-1",
                        "explanation": "Initially, enqueue 1 and 3 into queue 1 (return 0 for each). Then, dequeue from queue 1 three times. The first dequeue returns 1, the second returns 3. The final dequeue returns -1 as the queue is empty."
                    },
                    {
                        "input": "1\n10 2 1\n2 2",
                        "output": "-1",
                        "explanation": "Attempting to dequeue from queue 2, but queue 2 is initially empty, so return -1."
                    },
                    {
                        "input": "1\n5 5 6\n1 1 1\n1 2 2\n1 3 3\n1 4 4\n1 5 5\n2 1",
                        "output": "0\n0\n0\n0\n0\n1",
                        "explanation": null
                    },
                    {
                        "input": "1\n10 5 5\n1 1 4\n1 1 3\n2 1\n2 2\n2 1",
                        "output": "0\n0\n4\n-1\n3",
                        "explanation": "Enqueue 4 and 3 into queue 1. Dequeue from queue 1 (returns 4). Dequeue from queue 2 (returns -1 because it's empty). Dequeue from queue 1 (returns 3)."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><strong>Make equal divisions and perform normal operations on them.</strong></p>",
            "<p><strong>Store the front and rear element of every queue and the next free index of every index.</strong></p>"
        ],
        "relatedTopics": [
            {
                "name": "Stacks & Queues",
                "slug": "stacks-&-queues"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}