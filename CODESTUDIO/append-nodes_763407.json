{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 7768,
            "title": "Append Nodes",
            "titleSlug": "append-nodes_763407",
            "content": "<h4 id=\"you-have-been-given-an-integer-linked-list\">You have been given an integer Linked List.</h4>\n\n<h4 id=\"after-every-m-nodes-you-have-to-take-the-sum-of-the-next-n-nodes-and-append-that-sum-to-the-linked-list-do-this-till-the-end-of-the-linked-list\">After every &#39;M&#39; nodes, you have to take the sum of the next &#39;N&#39; nodes and append that sum to the linked list. Do this till the end of the Linked List.</h4>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You just need to return the head of the new linked list.\n\nIn case the linked list ends after adding K nodes, where K is any positive integer less than &#39;N&#39;.Append the sum of those K nodes at the end of the linked list.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer &#39;T&#39; representing the number of Test cases.\nThe next 2 * &#39;T&#39; lines denote the T test cases. Each test case consists of two lines.\n\nThe first line of each test case contains the elements of the Linked list separated by space and the linked list is terminated by -1.\n\nThe second line of each test case contains two integers separated by a single space denoting &#39;N&#39; and &#39;M&#39; respectively, where in the linked list, after every &#39;M&#39; nodes, take the sum of the next &#39;N&#39; nodes and append that sum to the linked list.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, return the modified linked list with elements separated by space.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10        \n1 &lt;= n &lt;= 10^4\n1 &lt;= N &lt;= 10^4\n1 &lt;= M &lt;= 10^4\n-10^5 &lt;= VAL &lt;= 10^5\n\nWhere &#39;n&#39; denotes the length of the linked list and &#39;VAL&#39; represents a node value of the linked list.\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n1 2 3 4 5 6 7 8 9 10 11 12 -1\n2 3\n5 4 3 7 9 -1\n4 3\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>1 2 3 4 5 9 6 7 8 9 10 19 11 12\n5 4 3 7 9 16\n</code></pre>\n\n<h5 id=\"explanation-of-the-sample-output-1\">Explanation of the Sample Output 1:</h5>\n\n<pre><code>In test case 1, for the linked list,  the value of &#39;M&#39; is 3. So we skip the first 3 nodes(1-&gt;2-&gt;3). The value of &#39;N&#39; is 2, hence we add the next 2 nodes(4-&gt;5). The sum is 9, so we add 9 after node 5. Now repeating the same process again, we skip the next 3 nodes(6-&gt;7-&gt;8). Now we add the next 2 nodes(9-&gt;10), for which the sum is 19. Hence we add 19 to the list after 10. Now while skipping the next 3 nodes we encounter the end of a linked list, hence the updated linked list is our answer.\n\nIn test case 2, for the linked list,  the value of &#39;M&#39; is 3. So we skip the first 3 nodes(5-&gt;4-&gt;3). The value of &#39;N&#39; is 4 so ideally we should add the next 4 nodes, but there are only two nodes remaining before we encounter the end of the linked list, hence we add those 2 nodes(7-&gt;9). The sum is 16, therefore we add 16 to the end of the linked list. Because we have encountered the end of the linked list, the updated linked list is our answer.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n10 30 10 40 5 5 -1\n2 3\n1 -2 1 2 2 -4 2 4 -1\n2 4\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>10 30 10 40 5 45 5 \n1 -2 1 2 2 -4 -2 2 4\n</code></pre>\n\n<h5 id=\"explanation-of-the-sample-output-2\">Explanation of the Sample Output 2:</h5>\n\n<pre><code>In test case 1, for the linked list,  the value of &#39;M&#39; is 3. So we skip the first 3 nodes(10-&gt;30-&gt;10). The value of &#39;N&#39; is 2, hence we add the next 2 nodes(40-&gt;5). The sum is 45, so we add 45 after node 5. Now repeating the same process again, while skipping the next 3 nodes we encounter the end of a linked list, hence the updated linked list is our answer.\n\nIn test case 2, for the linked list,  the value of &#39;M&#39; is 4. So we skip the first 4 nodes(1-&gt;-2-&gt;1-&gt;2). The value of &#39;N&#39; is 2, hence we add the next 2 nodes(2-&gt;-4). The sum is -2, so we add -2 after node 6. Now repeating the same process again, while skipping the next 4 nodes we encounter the end of a linked list, hence the updated linked list is our answer.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 14,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an integer linked list, after every 'M' nodes, calculate the sum of the next 'N' nodes and append this sum to the linked list. Repeat this process until the end of the linked list. If, at any point, the linked list ends after considering 'K' nodes (where K < 'N'), append the sum of these 'K' nodes.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= n <= 10^4 (length of linked list)",
                    "1 <= N <= 10^4",
                    "1 <= M <= 10^4",
                    "-10^5 <= VAL <= 10^5 (node value)",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "1 2 3 4 5 6 7 8 9 10 11 12 -1\n2 3",
                        "output": "1 2 3 4 5 9 6 7 8 9 10 19 11 12",
                        "explanation": "After skipping the first 3 nodes (1->2->3), the sum of the next 2 nodes (4->5) is 9, which is appended.  Then skipping next 3 nodes (6->7->8) and summing the next 2 nodes (9->10) results in 19, which is appended.  The end of list is reached after skipping the next 3."
                    },
                    {
                        "input": "5 4 3 7 9 -1\n4 3",
                        "output": "5 4 3 7 9 16",
                        "explanation": "After skipping the first 3 nodes (5->4->3), the sum of the next 2 nodes (7->9, since only 2 are left) is 16, which is appended."
                    },
                    {
                        "input": "10 30 10 40 5 5 -1\n2 3",
                        "output": "10 30 10 40 5 45 5",
                        "explanation": "After skipping the first 3 nodes (10->30->10), the sum of the next 2 nodes (40->5) is 45, which is appended. The end is encountered after that."
                    },
                    {
                        "input": "1 -2 1 2 2 -4 2 4 -1\n2 4",
                        "output": "1 -2 1 2 2 -4 -2 2 4",
                        "explanation": "After skipping the first 4 nodes (1->-2->1->2), the sum of the next 2 nodes (2->-4) is -2, which is appended. The end is encountered after that."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Traverse recursively through the linked list, and after each M nodes try adding next N nodes.</p>",
            "<p>Traverse iteratively through the linked list, and after each M nodes try adding next N nodes.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}