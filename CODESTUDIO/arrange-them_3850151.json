{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 17370,
            "title": "Arrange Them",
            "titleSlug": "arrange-them_3850151",
            "content": "<h4 id=\"you-are-given-a-2-d-integer-array-0-based-indexing-pairs-where-pairs-i-starti-endi-your-task-is-to-arrange-the-given-pairs-such-that-for-every-i-where-1-i-pairs-length-the-endi-1-is-equal-to-starti\">You are given a 2-d integer array (0-based indexing)  \u201cpairs\u201d, where pairs[i] = [ starti, endi ]. Your task is to arrange the given pairs such that for every \u2018i\u2019 where 1 &lt;= i &lt;= pairs.length, the endi-1 is equal to starti</h4>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>The input is generated in such a way that the answer always exists.\n\nIf there are multiple answers print any of them.\n</code></pre>\n\n<h5 id=\"example\">Example:</h5>\n\n<pre><code>If pairs = [ [1,2] , [3,1] , [2,3] ] then the following arrangement is valid:\n\nArrangement =  [ [1,2] , [2,3] , [3,1] ] here, you can see for every \u2018i\u2019 where 1 &lt;= i &lt;= 2, the endi-1 is equal to starti \n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains an Integer &#39;T&#39; which denotes the number of test cases or queries to be run. Then the test cases follow. \n\nThe first line of each test case contains a single integer \u2018N\u2019, denoting the number of pairs.\n\nThen next \u2018N\u2019 lines follow in each test case. The ith line consists of two space-separated integers \u2018start\u2019 and \u2018end\u2019 representing the start and end of the ith pair.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print the \u2018N\u2019 lines.  The ith line consists of two space-separated integers \u2018start\u2019 and \u2018end\u2019 representing the start and end of the arranged pair.\n\nPrint a separate line for each test case.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 5 * 10^4\n0 &lt;= start , end &lt;= 10^9\nstarti != endi\nNo two pairs are exactly the same.\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n3\n1 2\n3 1\n2 3\n1\n1 2\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample output 1 :</h5>\n\n<pre><code> 1 2\n 2 3\n 3 1\n 1 2\n</code></pre>\n\n<h5 id=\"explanation-for-sample-output-1\">Explanation For Sample Output 1:</h5>\n\n<pre><code>For the first test case, pairs = [ [1,2] , [3,1] , [2,3] ] then the following arrangement is valid:\nArrangement =  [ [1,2] , [2,3] , [3,1] ] here, you can see for every \u2018i\u2019 where 1 &lt;= i &lt;= 2, the endi-1 is equal to start   \n\nFor the second test case, pairs =  [1,2], here the given pair is itself a valid pair.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n4\n1 2\n4 5\n2 3\n3 4\n5\n1 2\n4 5\n2 3\n3 4\n5 1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample output 2 :</h5>\n\n<pre><code>1 2\n2 3\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n5 1 \n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 3,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a 2-D integer array 'pairs' (0-based indexing) where pairs[i] = [starti, endi], arrange the pairs such that for every 'i' where 1 <= i < pairs.length, endi-1 is equal to starti. The input guarantees a solution exists. If multiple solutions are possible, return any one of them.",
                "constraints": [
                    "1 <= T <= 10 (Number of test cases)",
                    "1 <= N <= 5 * 10^4 (Number of pairs)",
                    "0 <= start, end <= 10^9",
                    "starti != endi",
                    "No two pairs are exactly the same.",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "3\n1 2\n3 1\n2 3",
                        "output": "1 2\n2 3\n3 1",
                        "explanation": "One valid arrangement for the pairs [[1,2], [3,1], [2,3]] is [[1,2], [2,3], [3,1]]. In this arrangement, the end of the (i-1)th pair is equal to the start of the ith pair for all i from 1 to 2."
                    },
                    {
                        "input": "1\n1 2",
                        "output": "1 2",
                        "explanation": "For the input [1,2], the given pair itself satisfies the arrangement condition."
                    },
                    {
                        "input": "4\n1 2\n4 5\n2 3\n3 4",
                        "output": "1 2\n2 3\n3 4\n4 5",
                        "explanation": null
                    },
                    {
                        "input": "5\n1 2\n4 5\n2 3\n3 4\n5 1",
                        "output": "1 2\n2 3\n3 4\n4 5\n5 1",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Consider every pairs[i] as the directed edge and think of the Euler path in directed graphs.</p>",
            "<p>Can you think of doing it iteratively to avoid stack size problems?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Depth-first Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Breadth-first Search",
                "slug": "breadth-first-search"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}