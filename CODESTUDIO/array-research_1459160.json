{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12296,
            "title": "Array research",
            "titleSlug": "array-research_1459160",
            "content": "<h4 id=\"ninja-has-been-interested-in-array-ever-since-he-was-a-child-at-the-moment-he-is-researching-a-sorted-array-arr-with-the-length-n-containing-only-integers-from-1-to-10-9\">Ninja has been interested in array ever since he was a child. At the moment he is researching a sorted array &#39;ARR&#39; with the length \u2018N\u2019, containing only integers from 1 to \u201810^9\u2019.</h4>\n\n<h4 id=\"he-wants-to-know-how-many-more-integers-he-must-add-to-the-array-such-that-he-can-form-any-number-in-the-range-1-m-inclusive-by-the-sum-of-some-elements-in-the-array\">He wants to know how many more integers he must add to the array such that he can form any number in the range [1, \u2018M\u2019] inclusive by the sum of some elements in the array.</h4>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>1. You have to return the minimum number of integers that Ninja must add.\n2. The array is given in sorted order.\n</code></pre>\n\n<h4 id=\"can-you-help-ninja-achieve-this-task\">Can you help Ninja achieve this task?</h4>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of input contains an integer &#39;T&#39; representing the number of test cases.\n\nThe first line of each test case contains two single space-separated integers \u2018N\u2019 and \u2018M\u2019 denoting the number of elements in the array and upper bound of the sum range respectively. \n\nThe second line of each test case contains &#39;N&#39; space-separated integers.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, return a single integer denoting the minimum number of integers added in the array.\n\nThe output for each test case is printed in a separate line.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= N &lt;= 5000\n1 &lt;= M &lt;= 10 ^ 9\n1 &lt;= ARR[i] &lt;= 10 ^ 9\n\nWhere \u2018ARR[i]\u2019 denotes the element of the array at index i.\n\nTime limit: 1 sec\n</code></pre>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n3 10\n1 3 5\n4 15\n1 2 7 10    \n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>1\n1\n</code></pre>\n\n<h5 id=\"explanation-of-sample-output-1\">Explanation of Sample Output 1 :</h5>\n\n<pre><code>Test Case 1 : \nPossible sums that can be formed are 1, 3, 4, 5, 6, 8, 9.\nTo form 2,7,10, we need to add \u201c2\u201d in the array.\nTherefore, only 1 integer is required to form all the sums in the range [1, 10]. \n\nTest Case 2 : \nWe need to only add 4 and we will be able to form all sums in the range [1,15]\nTherefore, the minimum number required is 1.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>3\n5 20\n1 3 7 9 10\n4 18 \n2 4 8 16\n4 30\n3 4 5 6\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>1\n1\n3\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 4,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a sorted array `arr` of `n` integers, where each integer is between 1 and 10^9, determine the minimum number of integers that must be added to the array such that any number in the range [1, `m`] (inclusive) can be formed by the sum of some elements in the array (including the newly added integers).",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= N <= 5000",
                    "1 <= M <= 10 ^ 9",
                    "1 <= ARR[i] <= 10 ^ 9"
                ],
                "testcases": [
                    {
                        "input": "n = 3, arr = [1, 3, 5], m = 10",
                        "output": "1",
                        "explanation": "Possible sums that can be formed are 1, 3, 4, 5, 6, 8, 9.  To form 2,7,10, we need to add \u201c2\u201d in the array. Therefore, only 1 integer is required to form all the sums in the range [1, 10]."
                    },
                    {
                        "input": "n = 4, arr = [1, 2, 7, 10], m = 15",
                        "output": "1",
                        "explanation": "We need to only add 4 and we will be able to form all sums in the range [1,15]. Therefore, the minimum number required is 1."
                    },
                    {
                        "input": "n = 5, arr = [1, 3, 7, 9, 10], m = 20",
                        "output": "1",
                        "explanation": "Adding 2 allows us to create all sums from 1 to 20."
                    },
                    {
                        "input": "n = 4, arr = [2, 4, 8, 16], m = 18",
                        "output": "1",
                        "explanation": "Adding 1 allows us to make all sums from 1 to 18. For instance, 1 can be explicitly formed, then 2, 3(1+2), 4, 5(1+4), 6(2+4) etc."
                    },
                    {
                        "input": "n = 4, arr = [3, 4, 5, 6], m = 30",
                        "output": "3",
                        "explanation": "We need to add 1, 2 and 10. We need to add '1' to get all numbers that sum to 1, 2, 3, 4, 5, 6. Now, the numbers that can be formed with 1,3,4,5,6 are [1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19] We now add 2, which can now create [2,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]. We need to add 10 to create from 21 to 30."
                    },
                    {
                        "input": "n = 1, arr = [1], m = 5",
                        "output": "2",
                        "explanation": "We have 1, need 2 and 4. With 1, 2 and 4 we can get 1, 2, 3, 4, 5, 6, 7"
                    },
                    {
                        "input": "n = 1, arr = [2], m = 5",
                        "output": "2",
                        "explanation": "Initial array is [2]. We need to add 1 and 4. Then we can form 1,2,3,4,5,6,7."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to find the minimum number that can\u2019t form.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}