{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8670,
            "title": "Array sum",
            "titleSlug": "array-sum_893287",
            "content": "<h4 id=\"you-are-given-a-binary-matrix-it-contains-only-0s-and-1s-with-dimensions-n-m-you-need-to-find-and-return-the-sum-of-coverages-of-all-zeros-of-the-given-matrix\">You are given a binary matrix (it contains only 0s and 1s) with dimensions \u2018N * M\u2019. You need to find and return the sum of coverages of all zeros of the given matrix.</h4>\n\n<h4 id=\"coverage-for-a-particular-0-is-defined-as-the-total-number-of-1s-around-it-i-e-immediate-left-immediate-right-immediate-up-and-immediate-bottom-positions\">Coverage for a particular 0 is defined as the total number of \u20181s\u2019 around it (i.e., immediate left, immediate right, immediate up, and immediate bottom positions).</h4>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer &#39;T&#39; representing the number of the test cases. Then \u2018T&#39; test cases follow.\n\nThe first line of each test case contains two space-separated integers, &#39;N&#39;, &#39;M&#39;, the dimensions of the matrix. \n\nNext \u2018N\u2019 lines consist of \u2018M\u2019 space-separated integers denoting the matrix elements. Each element is either 0 or 1, as described in the problem statement.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, return the sum of coverage of all the 0s in the matrix.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N, M &lt;= 10^3\n\nTime limit: 1 second\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1\n2 2 \n1 0\n0 1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>4\n</code></pre>\n\n<h5 id=\"explanation-of-input-1\">Explanation of Input 1:</h5>\n\n<pre><code>In the given matrix, there are 2 zeros. \nFor the 0 at the 1st row, 2nd column position, coverage is 2(there is 1 adjacent top one and 1 adjacent right one).\nFor the 0 at the 2nd row, 2nd column the coverage is 2(there is 1 adjacent top one and 1 adjacent right one).\n\nHence the net coverage is 2 + 2 = 4.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\n2 3\n0 0 0\n0 0 0\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2</h5>\n\n<pre><code>0\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 60,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a binary matrix (containing only 0s and 1s) of dimensions N x M, calculate the sum of coverages for all the zeros in the matrix. The coverage for a zero is defined as the number of 1s immediately adjacent to it (up, down, left, and right).",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N, M <= 10^3",
                    "The matrix contains only 0s and 1s."
                ],
                "testcases": [
                    {
                        "input": "mat=[[1, 0],[0, 1]]",
                        "output": "4",
                        "explanation": "In the given matrix, there are 2 zeros. For the 0 at the 1st row, 2nd column position, coverage is 1 (left) + 1 (down) = 2. For the 0 at the 2nd row, 1st column the coverage is 1 (up) + 1 (right) = 2. Hence the net coverage is 2 + 2 = 4."
                    },
                    {
                        "input": "mat=[[0, 0, 0],[0, 0, 0]]",
                        "output": "0",
                        "explanation": "In this matrix, all elements are 0.  Therefore, no 0 has any adjacent 1s, resulting in a total coverage of 0."
                    },
                    {
                        "input": "mat=[[1, 1, 1],[1, 0, 1],[1, 1, 1]]",
                        "output": "4",
                        "explanation": "The matrix has one 0 at mat[1][1]. It has four adjacent 1s: up, down, left, and right. The total coverage is therefore 4."
                    },
                    {
                        "input": "mat=[[0, 1],[1, 0]]",
                        "output": "4",
                        "explanation": "Two zeros exist. The first zero (mat[0][0]) has coverage of 1. The second zero (mat[1][1]) has coverage of 1. Adding them up and multiplying by number of possible neighbours(4). Therefore total coverage is 4."
                    },
                    {
                        "input": "mat=[[1, 1, 1],[1, 1, 1],[1, 1, 1]]",
                        "output": "0",
                        "explanation": "There are no zeros in this matrix.  Therefore, the total coverage is 0."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to find a brute force approach.</p><p><br>&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Matrices (2D Arrays)",
                "slug": "matrices-(2d-arrays)"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}