{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 15649,
            "title": "Axel and Shawn\u2019s Football game",
            "titleSlug": "axel-and-shawn-s-football-game_2663295",
            "content": "<h4 id=\"axel-and-shawn-just-finished-their-football-practice-and-are-now-tired-so-they-can-t-go-back-and-play-football-but-they-have-come-up-with-a-new-game-to-make-the-best-out-of-their-time\">Axel and Shawn just finished their football practice and are now tired, so they can\u2019t go back and play football, but they have come up with a new game to make the best out of their time.</h4>\n\n<h4 id=\"there-are-two-rooms-one-of-the-rooms-has-n-baskets-and-the-other-has-m-baskets-each-basket-is-large-enough-to-hold-multiple-footballs-in-each-turn-a-player-has-to-select-a-basket-from-their-respective-room-and-pick-up-some-positive-number-of-football-s-the-player-loses-if-he-is-not-able-to-pick-up-any-football\">There are two rooms, one of the rooms has \u2018N\u2019 baskets and the other has \u2018M\u2019 baskets, each basket is large enough to hold multiple footballs. In each turn, a player has to select a basket from their respective room and pick up some <bold>positive</bold> number of football(s), the player loses if he is not able to pick up any football.</h4>\n\n<h4 id=\"in-each-round-axel-plays-the-first-turn-and-shawn-plays-the-second-one-both-axel-and-shawn-should-be-in-different-rooms-when-the-round-starts-before-the-start-of-each-round-you-can-decide-the-room-each-player-is-assigned-axel-is-your-close-friend-and-you-will-try-your-best-to-make-axel-win-the-game-predict-the-winner-if-both-the-players-play-optimally-and-you-try-your-best-to-make-axel-win-the-game\">In each round Axel plays the first turn and Shawn plays the second one. Both Axel and Shawn should be in different rooms when the round starts. Before the start of each round, you can decide the room each player is assigned. Axel is your close friend and you will try your best to make Axel win the game. Predict the winner if both the players play optimally and you try your best to make Axel win the game.</h4>\n\n<h5 id=\"for-example\">For Example :</h5>\n\n<pre><code>If room1: {1, 2, 3} and room2: {1, 1}\n\nThen, Axel will be assigned room1 at the beginning of each round, and both Shawn and Axel will pick only one football in each round as they play optimally, this will result in Shawn exhausting the remaining balls in room2 early, and ultimately losing the game.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 denoting the number of test cases, then each test case follows:\n\nThe first line of each test case contains two integers \u2018N\u2019 and \u2018M\u2019 denoting the number of baskets in each of the rooms respectively.\n\nThe next two lines of each test case contain the information about the balls in each basket, the first line contains \u2018N\u2019 integers denoting the balls in each basket of room-1 and the next line contains \u2018M\u2019 integers denoting the balls in each basket present in room-2.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print the name of the winner, print \u201cAxel\u201d if it\u2019s possible for Axel to win the game, else print \u201cShawn\u201d.\n\nOutput for each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You are not required to print anything; it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 \u2264 T \u2264 10      \n1 \u2264 N, M \u2264 10000\n0 \u2264 Room1[i], Room2[i] \u2264 10^9\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n3 2\n1 2 3\n1 1\n1 1\n5\n7\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>Axel\nAxel\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1 :</h5>\n\n<pre><code>For test case 1 :\nAxel will win because:\nHe will be assigned room1 at the beginning of each round, and both Shawn and Axel will pick only one football in each round as they play optimally, this will result in Shawn exhausting the remaining balls first, and ultimately losing.\n\nFor test case 2 : \nAxel will win because:\nAxel will be assigned to room-1 as it has more footballs, and in each round both the players will pick one football, Axel will ultimately win the game.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n1 1\n5\n5\n4 3\n4 0 2 1\n3 1 0 \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>Shawn\nAxel\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 8,
            "dislikes": "NA",
            "rephrased": {
                "body": "Axel and Shawn are playing a game with footballs in two rooms. Room 1 has N baskets, and Room 2 has M baskets. In each turn, a player picks a positive number of footballs from a basket in their assigned room. A player loses if they cannot pick any footballs. Axel and Shawn take turns, with Axel going first each round. Before each round, you decide which room Axel and Shawn are assigned to (they must be in different rooms). Given the number of baskets and the number of footballs in each basket for both rooms, determine if you can strategically assign rooms to ensure Axel wins, assuming both players play optimally. Output 'Axel' if Axel can win, otherwise output 'Shawn'.",
                "constraints": [
                    "1 \u2264 T \u2264 10",
                    "1 \u2264 N, M \u2264 10000",
                    "0 \u2264 Room1[i], Room2[i] \u2264 10^9"
                ],
                "testcases": [
                    {
                        "input": "n = 3, m = 2, room1 = [1, 2, 3], room2 = [1, 1]",
                        "output": "Axel",
                        "explanation": "Axel is assigned room1. Both pick one football each round. Shawn exhausts room2 early and loses."
                    },
                    {
                        "input": "n = 1, m = 1, room1 = [5], room2 = [5]",
                        "output": "Shawn",
                        "explanation": "Regardless of assignment, both rooms have equal amounts of balls that players can pick. Axel picks first but they pick same number of balls from the rooms. So Shawn would win."
                    },
                    {
                        "input": "n = 4, m = 3, room1 = [4, 0, 2, 1], room2 = [3, 1, 0]",
                        "output": "Axel",
                        "explanation": "Axel is assigned the room that initially has more footballs in total. If they both pick one ball each turn, Axel will win, as Axel starts with more footballs in the first turn. Total number of footballs in room1 are 7 and in room2 are 4. So Axel will win."
                    },
                    {
                        "input": "n = 1, m = 1, room1 = [5], room2 = [5]",
                        "output": "Shawn",
                        "explanation": "No matter which room Axel is assigned to, the situation is symmetrical. Shawn can always mirror Axel's moves, guaranteeing Shawn's win."
                    },
                    {
                        "input": "n = 1, m = 1, room1 = [7], room2 = [4]",
                        "output": "Axel",
                        "explanation": "Axel should always be assigned to room1. So Axel wins because Room 1 has more footballs than Room 2."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Axel will win the game if is placed in the room with more footballs at the beginning of each round, as both Axel and Shawn will remove only one football in each round. Try to find the conditions where Shawn will win!</p>"
        ],
        "relatedTopics": [
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}