{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10213,
            "title": "Base conversion",
            "titleSlug": "base-conversion_1171187",
            "content": "<h4 id=\"you-are-given-a-number-n-as-a-string-in-base-b-your-task-is-to-convert-n-in-base-10-if-it-s-impossible-to-convert-n-into-base-10-then-you-need-to-print-1\">You are given a number \u2018N\u2019 as a string in base \u2018B\u2019. Your task is to convert \u2018N\u2019 in base 10. If it\u2019s impossible to convert \u2018N\u2019 into base 10, then you need to print -1.</h4>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>1. \u2018N\u2019 contains only digits \u20180\u2019 to \u20189\u2019 and English letters \u2018A\u2019 to \u2018F\u2019.\n2. Decimal equivalent of 0 is 0, 1 is 1, . . .9 is 9, A is 10, B is 11, . . . F is 15.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format</h5>\n\n<pre><code>The first line of input contains an integer &#39;T&#39; representing the number of test cases.\n\nThe first line of each test case contains a string \u2018N\u2019 and an integer \u2018Base\u2019 separated by a single space.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print the \u2018N\u2019 in base 10. If it\u2019s impossible to convert \u2018N\u2019 to base 10 then print -1.\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= decimal( N ) &lt;= 10 ^ 9\n1 &lt;= B  &lt;= 16\n\nWhere \u2018T\u2019 is the number of test cases, decimal(N) is the decimal equivalent of \u2018N\u2019 and \u2018B\u2019 is the base of number \u2018N\u2019.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code> You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n10 2\n20 2\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>2\n-1\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1:</h5>\n\n<pre><code>Test Case 1 :  \nGiven N = 10 and Base = 2. \nDecimal equivalent of 10 from base 2 = 2. \n\nTest Case 2 : \nGiven N = 20 and Base = 2. \nWe cannot have digit \u20182\u2019 in a number of base 2. So, a decimal equivalent of this number is not possible. Hence, we need to print -1. \n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\nB 16 \nA 11\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>11\n10\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-2\">Explanation of Sample Input 2:</h5>\n\n<pre><code>Test Case 1 :  \nGiven N = B and Base = 16. \nDecimal equivalent of B from base 16 = 11. \n\nTest Case 2 : \nGiven N = A and Base = 16.  \nDecimal equivalent of A from base 11 = 10\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 1,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string 'num' representing a number in base 'base', convert it to its equivalent base-10 representation. If the number 'num' contains a digit that is not valid in the given 'base', return -1. The input string 'num' will contain only digits '0' to '9' and uppercase English letters 'A' to 'F'. Decimal equivalents are: 0-9 for digits 0-9 and 10-15 for letters A-F.",
                "constraints": [
                    "1 <= T <= 5 (where T is the number of test cases)",
                    "1 <= decimal(N) <= 10^9 (where decimal(N) is the decimal equivalent of 'num')",
                    "1 <= base <= 16"
                ],
                "testcases": [
                    {
                        "input": "num = \"10\", base = 2",
                        "output": "2",
                        "explanation": "The base-2 number '10' is equivalent to (1 * 2^1) + (0 * 2^0) = 2 in base-10."
                    },
                    {
                        "input": "num = \"20\", base = 2",
                        "output": "-1",
                        "explanation": "The digit '2' is not valid in base-2, which only allows digits '0' and '1'. Therefore, it is impossible to convert to base 10, and -1 is returned."
                    },
                    {
                        "input": "num = \"B\", base = 16",
                        "output": "11",
                        "explanation": "In base-16, 'B' represents the decimal value 11."
                    },
                    {
                        "input": "num = \"A\", base = 11",
                        "output": "10",
                        "explanation": "In base-11, 'A' represents the decimal value 10."
                    },
                    {
                        "input": "num = \"1A\", base = 16",
                        "output": "26",
                        "explanation": "The base-16 number '1A' is equivalent to (1 * 16^1) + (10 * 16^0) = 16 + 10 = 26 in base-10."
                    },
                    {
                        "input": "num = \"123\", base = 4",
                        "output": "27",
                        "explanation": "The base-4 number '123' is equivalent to (1 * 4^2) + (2 * 4^1) + (3 * 4^0) = 16 + 8 + 3 = 27 in base-10."
                    },
                    {
                        "input": "num = \"XYZ\", base = 16",
                        "output": "-1",
                        "explanation": "The characters 'X', 'Y', and 'Z' are not valid digits in base 16, so the conversion is impossible. Return -1."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Think of a solution similar to binary to decimal conversion.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}