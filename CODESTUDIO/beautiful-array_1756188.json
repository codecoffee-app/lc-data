{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 13646,
            "title": "Beautiful Array",
            "titleSlug": "beautiful-array_1756188",
            "content": "<h4 id=\"you-are-given-two-integers-m-and-n-your-task-is-to-find-the-number-of-a-unique-beautiful-array-of-length-m\">You are given two integers \u2018M\u2019 and \u2018N\u2019. Your task is to find the number of a unique beautiful array of length \u2018M\u2019.</h4>\n\n<h4 id=\"the-array-of-length-m-is-said-to-be-beautiful-if\">The array of length \u2018M\u2019  is said to be beautiful if -</h4>\n\n<pre><code>The array consists of elements from 1 to \u2018N\u2019.\n\nThe array contains at least one \u2018N\u2019 length strictly increasing subsequence.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>A subsequence of an array is an ordered subset of the array&#39;s elements having the same sequential ordering as the original array. For example, the subsequences of the array  [1, 2, 3] are [1], [2], [3], [1, 2], [1, 3], [2, 3] and [1, 2, 3] where  [2, 1], [3,2, 1] are not subsequence of array [1, 2, 3]\n\nThe longest increasing subsequence of an array of numbers is the longest possible subsequence that can be created from its elements such that all elements are in strictly increasing order.\n</code></pre>\n\n<h4 id=\"for-example\">For example:</h4>\n\n<pre><code>For M = 3 and N = 2\narray : [ 1, 1, 2 ] [ 1, 2, 1 ] [ 1, 2, 2 ] [ 2, 1, 2 ] are beautiful.\n\narray:  [ 1, 1, 1 ] [ 2, 1, 1 ] [ 2, 2, 1 ] [ 2, 2, 2 ] are not beautiful. \n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018Q\u2019, denoting the number of queries. Then each query follows.\n\nThe first line and the only of each query contains a pair of integers \u2018M\u2019 and \u2018N\u2019 , where \u2018M\u2019 is the length of the array and \u2018N\u2019 is the range of elements.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each query, print a single line containing \u2018X\u2019, denoting the number of beautiful arrays of length \u2018M\u2019.\n\nAs this number can be quite large, print your answer modulo 10 ^ 9 + 7.\n\nThe output of each test case will be printed on a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= Q &lt;= 500\n1 &lt;= N &lt;= M &lt;= 5 * 10 ^ 3\n\nTime Limit: 1 sec.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n3 2\n4 3\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>4\n9\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1:</h5>\n\n<pre><code>In the query case, M = 3 and N = 2\narray : [ 1, 1, 2 ] [ 1, 2, 1 ] [ 1, 2, 2 ] [ 2, 1, 2 ] are beautiful. So the answer is 4. \n\nIn the second query,.M = 4, N = 3\narray  [1 1 2 3] [1 2 1 3] [1 2 2 3] [1 2 3 1] [1 2 3 2] [1 2 3 3] [1 3 2 3] [2 1 2 3] [3 1 2 3] are beautiful. So the answer is 9.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\n4 4\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>1\n</code></pre>\n\n<h5 id=\"explanation-of-sample-output-2\">Explanation of Sample Output 2:</h5>\n\n<pre><code>In the first query, only [1 2 3 4] is a beautiful array.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 1,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a set of queries, where each query consists of two integers, 'M' and 'N', determine the number of unique arrays of length 'M' that satisfy the following conditions: the array must contain elements from 1 to 'N', and it must possess at least one strictly increasing subsequence of length 'N'.  The answer should be returned modulo 10^9 + 7.",
                "constraints": [
                    "1 <= Q <= 500",
                    "1 <= N <= M <= 5 * 10^3",
                    "Time Limit: 1 sec."
                ],
                "testcases": [
                    {
                        "input": "Q = 2, queries = [[3, 2], [4, 3]]",
                        "output": "[4, 9]",
                        "explanation": "For M = 3 and N = 2, the beautiful arrays are [1, 1, 2], [1, 2, 1], [1, 2, 2], and [2, 1, 2]. Hence, the answer is 4.\n\nFor M = 4 and N = 3, the beautiful arrays are [1, 1, 2, 3], [1, 2, 1, 3], [1, 2, 2, 3], [1, 2, 3, 1], [1, 2, 3, 2], [1, 2, 3, 3], [1, 3, 2, 3], [2, 1, 2, 3], and [2, 2, 1, 3], [3,1,2,3]. Hence, the answer is 10.  Note that there was an error in the original explanation (missing one array and total count incorrect)"
                    },
                    {
                        "input": "Q = 1, queries = [[4, 4]]",
                        "output": "[1]",
                        "explanation": "For M = 4 and N = 4, the only beautiful array is [1, 2, 3, 4]."
                    },
                    {
                        "input": "Q = 1, queries = [[5, 1]]",
                        "output": "[1]",
                        "explanation": "For M = 5 and N = 1, every element must be 1. The only possible array is [1,1,1,1,1], which contains the subsequence [1]. Hence, the answer is 1."
                    },
                    {
                        "input": "Q = 1, queries = [[5, 5]]",
                        "output": "[1]",
                        "explanation": "For M=5 and N=5, only the strictly increasing array [1, 2, 3, 4, 5] can satisfy the conditions. Hence the answer is 1."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can we use the concept of combinations to solve this problem?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Number Theory",
                "slug": "number-theory"
            },
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}