{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 16979,
            "title": "Beautiful Index",
            "titleSlug": "beautiful-index_3743983",
            "content": "<h4 id=\"you-are-given-an-array-a-of-length-n-you-say-an-index-i-is-beautiful-if-the-sum-of-the-first-i-1-elements-of-the-array-a-equals-the-sum-of-the-last-n-i-elements-of-the-array-a-where-i-is-in-1-based-indexing-now-you-wonder-which-is-the-leftmost-beautiful-index\">You are given an array \u2018A\u2019 of length \u2018N\u2019. You say an index \u2018i\u2019 is beautiful if the sum of the first \u2018i - 1\u2019 elements of the array \u2018A\u2019 equals the sum of the last \u2018N - i\u2019 elements of the array \u2018A\u2019, where \u2018i\u2019 is in 1-based indexing. Now you wonder which is the leftmost beautiful index.</h4>\n\n<h4 id=\"note-if-you-select-the-first-index-then-the-sum-of-the-prefix-will-be-0-and-if-you-select-the-last-index-then-the-sum-of-the-suffix-will-be-0\">Note: If you select the first index, then the sum of the prefix will be \u20180\u2019, and if you select the last index, then the sum of the suffix will be \u20180\u2019.</h4>\n\n<h4 id=\"note-you-have-to-print-the-index-in-1-based-indexing\">Note: You have to print the index in 1-based indexing.</h4>\n\n<h4 id=\"for-example\">For example:</h4>\n\n<pre><code>Let\u2019s say the array \u2018A\u2019 = [1, 3, 1, 5], then if we select index \u20182\u2019, the sum of the prefix is \u20181\u2019, and the sum of the suffix is 1 + 5 = 6. Since the sum is not the same, hence index \u20182\u2019 is not a beautiful index.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format-</h5>\n\n<pre><code>First-line contains \u2018T\u2019, denoting the number of Test cases.\nFor each Test case:\nThe first line contains an integer, \u2018N\u2019, denoting the length of the array \u2018A\u2019.\nThe following line contains an array \u2018A\u2019 of \u2018N\u2019 space-separated integers.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format-</h5>\n\n<pre><code>For each test case, you have to print an integer denoting the leftmost beautiful index. If there are no beautiful indexes, then print \u2018-1\u2019.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don\u2019t need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints -</h5>\n\n<pre><code>1 &lt;= \u2018T\u2019 &lt;= 10\n1 &lt;= \u2018N\u2019 &lt;= 10^5 \n-10^9 &lt;= A[i] &lt;= 10^9, for 1 &lt;= i &lt;= \u2018N\u2019\nNote- Sum of \u2018N\u2019 over all test cases does not exceed 10^5.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input-1</h5>\n\n<pre><code>2\n3\n1 1 1\n3\n1 2 3\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output-1</h5>\n\n<pre><code>2\n-1\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1:</h5>\n\n<pre><code>For test case 1:\n    Index \u20182\u2019 is the leftmost beautiful index. The left sum is 1 and the right sum is also 1.\nFor test case 2:\n    No index is beautiful.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input -2</h5>\n\n<pre><code>2\n6\n1 7 3 6 5 6\n3\n2 1 -1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output -2</h5>\n\n<pre><code>4\n1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 46,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array 'A' of length 'N', find the leftmost 'beautiful' index. An index 'i' (1-based indexing) is considered beautiful if the sum of elements before index 'i' (i.e., the first 'i-1' elements) equals the sum of elements after index 'i' (i.e., the last 'N-i' elements). If no such index exists, return -1.  Note that the prefix sum is 0 for the first element and suffix sum is 0 for the last element.",
                "constraints": [
                    "1 <= \u2018T\u2019 <= 10",
                    "1 <= \u2018N\u2019 <= 10^5",
                    "-10^9 <= A[i] <= 10^9, for 1 <= i <= \u2018N\u2019"
                ],
                "testcases": [
                    {
                        "input": "N = 3, A = [1, 1, 1]",
                        "output": "2",
                        "explanation": "Index 2 is beautiful because the sum of elements before it (1) equals the sum of elements after it (1)."
                    },
                    {
                        "input": "N = 3, A = [1, 2, 3]",
                        "output": "-1",
                        "explanation": "No index satisfies the condition of a beautiful index."
                    },
                    {
                        "input": "N = 6, A = [1, 7, 3, 6, 5, 6]",
                        "output": "4",
                        "explanation": "Index 4 is beautiful because the sum of elements before it (1 + 7 + 3 = 11) equals the sum of elements after it (5 + 6 =11)."
                    },
                    {
                        "input": "N = 3, A = [2, 1, -1]",
                        "output": "1",
                        "explanation": "Index 1 is beautiful because the sum of elements before it (0) equals the sum of elements after it (1 + (-1) = 0)."
                    },
                    {
                        "input": "N = 1, A = [5]",
                        "output": "1",
                        "explanation": "Index 1 is beautiful. Sum of elements before is 0 and sum of elements after is 0."
                    },
                    {
                        "input": "N = 5, A = [1,2,3,4,5]",
                        "output": "-1",
                        "explanation": "No beautiful index."
                    },
                    {
                        "input": "N = 4, A = [0, 0, 0, 0]",
                        "output": "1",
                        "explanation": "Index 1 is the leftmost beautiful index."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Check each index.</p>",
            "<p><strong>&nbsp;</strong>Do we need to compute the sum at each step?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}