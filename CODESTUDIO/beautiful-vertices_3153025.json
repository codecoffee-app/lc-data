{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 16444,
            "title": "Beautiful Vertices",
            "titleSlug": "beautiful-vertices_3153025",
            "content": "<h4 id=\"you-are-given-an-undirected-graph-containing-n-vertices-that-are-connected-by-m-edges-your-task-is-to-find-the-number-of-beautiful-vertices-a-vertex-is-beautiful-if-removing-it-will-disconnect-the-graph-i-e-increase-the-number-of-connected-components\">You are given an undirected graph containing \u2018N\u2019 vertices that are connected by \u2018M\u2019 edges. Your task is to find the number of beautiful vertices. A vertex is beautiful if removing it will disconnect the graph, i.e., increase the number of connected components.</h4>\n\n<h4 id=\"for-example\">For Example:</h4>\n\n<pre><code>You are given \u2018N\u2019 = 5, \u2018M\u2019 = 5 and \u2018EDGES\u2019 = [[1, 2], [1, 3], [3, 4], [3, 5], [4, 5]]. \n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/ar1-13843.png\" alt=\"\"></p>\n\n<pre><code>The beautiful vertices in the given graph are \u20181\u2019 and \u20183\u2019. If we remove \u20181\u2019, vertex \u20182\u2019 will be disconnected from the connected component (\u20183\u2019\u2194\u20194\u2019\u2194\u20195\u2019). If we remove vertex \u20183\u2019, we will get two disjoint connected components (\u20181\u2019\u2194\u20192\u2019) and (\u20184\u2019\u2194\u20195\u2019).\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of the input contains a single integer &#39;T&#39;, representing the number of test cases.\n\nThe first line of each test case contains two space-separated integers, \u2018N\u2019 and \u2018M\u2019, representing the numbers of vertices and edges, respectively.\n\nThe next line \u2018M\u2019 lines contain two space-separated integers representing an edge.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print the number of beautiful vertices.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 2000\n1 &lt;= M &lt;= N*(N-1)/2\n1 &lt;= EDGES[i][0] &lt;= N\n1 &lt;= EDGES[i][1] &lt;= N\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n5 5\n1 2\n1 3\n3 4\n3 5\n4 5\n3 2\n1 2\n2 3\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>2\n1\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1:</h5>\n\n<pre><code>For the first test case, the graph will look like this:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/ar1-13843.png\" alt=\"\"></p>\n\n<pre><code>The beautiful vertices in the given graph are \u20181\u2019 and \u20183\u2019. If we remove \u20181\u2019, vertex \u20182\u2019 will be disconnected from the connected component (\u20183\u2019\u2194\u20194\u2019\u2194\u20195\u2019). If we remove vertex \u20183\u2019, we will get two connected components (\u20181\u2019\u2194\u20192\u2019) and (\u20184\u2019\u2194\u20195\u2019).\n\nFor the second test case, the graph will look like this:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/ar2-13844.png\" alt=\"\"></p>\n\n<pre><code>The beautiful vertex in the given graph is \u20182\u2019. If we remove vertex \u20182\u2019, we will get two disjoint components (\u20181\u2019) and (\u20183\u2019).\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n3 3\n1 2\n1 3\n2 3\n4 3\n1 2\n2 3\n3 4\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>0\n2\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 6,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an undirected graph with 'N' vertices and 'M' edges, determine the number of 'beautiful' vertices. A vertex is considered beautiful if its removal increases the number of connected components in the graph.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 2000",
                    "1 <= M <= N*(N-1)/2",
                    "1 <= EDGES[i][0] <= N",
                    "1 <= EDGES[i][1] <= N"
                ],
                "testcases": [
                    {
                        "input": "n = 5, m = 5, edges = [[1, 2], [1, 3], [3, 4], [3, 5], [4, 5]]",
                        "output": "2",
                        "explanation": "The beautiful vertices are '1' and '3'. Removing '1' disconnects '2' from the '3'-'4'-'5' component. Removing '3' results in two components: '1'-'2' and '4'-'5'."
                    },
                    {
                        "input": "n = 3, m = 2, edges = [[1, 2], [2, 3]]",
                        "output": "1",
                        "explanation": "The beautiful vertex is '2'. Removing '2' creates two disjoint components: '1' and '3'."
                    },
                    {
                        "input": "n = 3, m = 3, edges = [[1, 2], [1, 3], [2, 3]]",
                        "output": "0",
                        "explanation": "Removing any vertex does not disconnect the graph. The graph is fully connected."
                    },
                    {
                        "input": "n = 4, m = 3, edges = [[1, 2], [2, 3], [3, 4]]",
                        "output": "2",
                        "explanation": "The beautiful vertices are '2' and '3'. Removing either of these disconnects the graph into multiple components."
                    },
                    {
                        "input": "n = 4, m = 3, edges = [[1, 2], [2, 3], [1, 3]]",
                        "output": "0",
                        "explanation": "Removing any vertex does not disconnect the graph into multiple components because the component 1-2-3 forms a complete graph. 4 exists as a separate node."
                    },
                    {
                        "input": "n = 4, m = 3, edges = [[1, 2], [2, 3], [3, 4]]",
                        "output": "2",
                        "explanation": "Removing vertex 2 will cause 1 to be disconnected. Removing vertex 3 will cause 4 to be disconnected."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to use Depth-First Search.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Depth-first Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}