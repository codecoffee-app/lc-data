{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 11603,
            "title": "Beautiful Xor Pairs",
            "titleSlug": "beautiful-xor-pairs_1382115",
            "content": "<h4 id=\"ninja-has-an-array-arr-consisting-of-n-positive-integers-he-also-has-two-positive-integers-low-high-such-that-high-low\">Ninja has an array \u2018ARR\u2019 consisting of \u2018N\u2019 positive integers. He also has two positive integers \u2018LOW\u2019,  \u2018HIGH\u2019 such that \u2018HIGH\u2019 &gt;= \u2018LOW\u2019.</h4>\n\n<h4 id=\"according-to-ninja-a-pair-of-integers-i-j-is-considered-beautiful-if-0-i-j-n-and-low-arr-i-xor-arr-j-high\">According to Ninja, a pair of integers  (i, j) is considered beautiful if 0 &lt;= i &lt; j &lt; \u2018N\u2019 and \u2018LOW\u2019 &lt;= (\u2018ARR[i]\u2019 XOR \u2018ARR[j]\u2019) &lt;= \u2018HIGH\u2019.</h4>\n\n<h4 id=\"ninja-wants-to-count-beautiful-pairs-in-arr-find-and-return-the-number-of-beautiful-pairs-in-arr-on-behalf-of-ninja\">Ninja wants to count beautiful pairs in \u2018ARR\u2019.  Find and return the number of beautiful pairs in \u2018ARR\u2019 on behalf of Ninja.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>1. Consider 0 based indexing in \u2018ARR\u2019.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 representing the number of test cases. \n\nThe first line of each test case will contain three space-separated integers \u2018N\u2019, \u2018LOW\u2019, and \u2018HIGH\u2019 respectively representing the size of \u2018ARR\u2019 and the two integers that Ninja have between which the xor of every beautiful pair must lie.\n\nThe second line of each test case will contain \u2018N\u2019 space-separated integers representing array/list \u2018ARR\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print a single integer representing the number of beautiful pairs in \u2018ARR\u2019.\n\nOutput for every test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You don\u2019t need to print anything; It has already been taken care of.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 50\n1 &lt;= N &lt;= 10000\n1 &lt;= ARR[i] &lt;= 20000\n1 &lt;= LOW &lt;= HIGH &lt;= 20000\n\n\nWhere \u2018T\u2019 is the number of test cases, &#39;N&#39; is the size of \u2018ARR\u2019, and \u2018LOW\u2019, \u2018HIGH\u2019  are the integers that Ninja have, \u2018ARR[i]\u2019 is the \u2018i-th\u2019 element of arraylist \u2018ARR\u2019 \n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n1 1 2\n1\n4 6 8\n3 4 5 2\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>0\n4\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of sample input 1:</h5>\n\n<pre><code>In the first test case, there is only one integer in \u2018ARR\u2019 so no pair is possible.\n\nIn the second test case, There are 6 pairs as follow -:\n1. (0, 1):  \u2018ARR[0]\u2019 XOR \u2018ARR[1]\u2019 = 3 XOR 4 = 7\n2. (0, 2):  \u2018ARR[0]\u2019 XOR \u2018ARR[2]\u2019 = 3 XOR 5 = 6\n3. (0, 3):  \u2018ARR[0]\u2019 XOR \u2018ARR[3]\u2019 = 3 XOR 2 = 1\n4. (1, 2):  \u2018ARR[1]\u2019 XOR \u2018ARR[2]\u2019 = 4 XOR 5 = 1\n5. (1, 3):  \u2018ARR[1]\u2019 XOR \u2018ARR[3]\u2019 = 4 XOR 2 = 6\n6. (2, 3):  \u2018ARR[2]\u2019 XOR \u2018ARR[3]\u2019 = 5 XOR 2 = 7\nClearly, there are 4 beautiful pairs i.e (0, 1), (0, 2), (1, 3) and (2, 3)\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n4 2 6\n1 4 2 7\n5 5 14\n9 8 4 2 1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>6\n8\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 0,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of positive integers `arr` of size `N`, and two positive integers `low` and `high` where `high >= low`, determine the number of 'beautiful pairs'. A pair (i, j) is considered 'beautiful' if 0 <= i < j < N and `low <= (arr[i] XOR arr[j]) <= high`.",
                "constraints": [
                    "1 <= T <= 50",
                    "1 <= N <= 10000",
                    "1 <= ARR[i] <= 20000",
                    "1 <= LOW <= HIGH <= 20000"
                ],
                "testcases": [
                    {
                        "input": "n = 1, nums = [1], low = 1, high = 2",
                        "output": "0",
                        "explanation": "There is only one integer in 'arr', so no pair is possible."
                    },
                    {
                        "input": "n = 4, nums = [3, 4, 5, 2], low = 6, high = 8",
                        "output": "4",
                        "explanation": "Beautiful pairs are: (0, 1) -> 7, (0, 2) -> 6, (1, 3) -> 6, (2, 3) -> 7. Thus, the count is 4."
                    },
                    {
                        "input": "n = 4, nums = [1, 4, 2, 7], low = 2, high = 6",
                        "output": "6",
                        "explanation": "All pairs are beautiful:\n(0,1) = 5 (in range)\n(0,2) = 3 (in range)\n(0,3) = 6 (in range)\n(1,2) = 6 (in range)\n(1,3) = 3 (in range)\n(2,3) = 5 (in range)"
                    },
                    {
                        "input": "n = 5, nums = [9, 8, 4, 2, 1], low = 5, high = 14",
                        "output": "8",
                        "explanation": "The beautiful pairs are: (0, 4)=8 , (1,2)=12, (1,3)=10, (1,4)=9, (2,3)=6, (2,4)=5, (3,0) = 11, (3, 1) = 10"
                    },
                    {
                        "input": "n = 3, nums = [1, 2, 3], low = 1, high = 3",
                        "output": "2",
                        "explanation": "The pairs are: (0, 1) -> 3, (0, 2) -> 2, (1, 2) -> 1. So the count is 2.  (0,1) and (0,2)"
                    },
                    {
                        "input": "n = 5, nums=[1,2,3,4,5], low = 1, high = 2",
                        "output": "2",
                        "explanation": "The beautiful pairs are: (1,2)=1, (3,4)=1"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Find out the xor of each pair.</p>",
            "<p>Can you think of building a trie consisting of the binary representation of integers in the \u2018ARR\u2019?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Tries",
                "slug": "tries"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}