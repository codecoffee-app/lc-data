{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12274,
            "title": "Beauty Shuffle",
            "titleSlug": "beauty-shuffle_1404709",
            "content": "<h4 id=\"you-are-given-two-arrays-arr1-and-arr2-of-the-same-length-the-beauty-of-arr1-is-defined-as-the-count-of-the-total-number-of-indices-i-such-that-arr1-i-arr2-i\">You are given two arrays \u2018arr1\u2019 and \u2018arr2\u2019 of the same length. The beauty of \u2018arr1\u2019 is defined as the count of the total number of indices \u2018i\u2019 such that \u2018arr1[i]\u2019 &gt; \u2018arr2[i]\u2019.</h4>\n\n<h4 id=\"in-order-to-maximize-the-beauty-of-arr1-you-can-reorder-its-element-in-any-way-you-want-i-e-you-can-swap-any-possible-pair-of-indexes-in-arr1-any-number-of-times\">In order to maximize the beauty of \u2018arr1\u2019 you can reorder its element in any way you want i.e you can swap any possible pair of indexes in \u2018arr1\u2019 any number of times.</h4>\n\n<h4 id=\"you-need-to-return-any-array-that-is-made-from-arr1-after-reordering-its-element-such-that-the-beauty-of-the-returned-array-is-maximum-possible\">You need to return any array that is made from \u2018arr1\u2019 after reordering its element such that the beauty of the returned array is  maximum possible.</h4>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>There can be more than one possible array with maximum beauty. In that case, you can return any of them.\n</code></pre>\n\n<h4 id=\"input-format\">Input Format :</h4>\n\n<pre><code>The first line contains an integer &#39;T&#39; which denotes the number of test cases or queries to be run.\n\nThe first line of each test case contains an integer \u2018N\u2019 denoting the size of arrays.\n\nThe second line of each test case contains \u2018N\u2019 space-separated integers, representing the elements of the first array, \u2018arr1\u2019.\n\nThe last line of the test cases contains \u2018N\u2019 space-separated integers, representing the elements of the second array, \u2018arr2\u2019.\n</code></pre>\n\n<h4 id=\"output-format\">Output Format :</h4>\n\n<pre><code>For each test case, the output will be \u201c1\u201d if you have returned the correct answer, else it will be \u201c0\u201d.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints :</h4>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= N &lt;= 5000\n1 &lt;= arr1[i], arr2[i] &lt;= 10 ^ 9\n\nTime Limit: 1sec\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1 :</h4>\n\n<pre><code>2\n3\n5 7 13\n1 10 6\n4\n7 22 5 32\n13 25 35 10\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1 :</h4>\n\n<pre><code>1\n1\n</code></pre>\n\n<h4 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1 :</h4>\n\n<pre><code>Test case 1:\nFor the first test case given \u2018arr1\u2019 has beauty equal to 2 as \u2018arr1[i]\u2019 &gt; \u2018arr2[i]\u2019 for \u2018i\u2019 = 0, 2. But after swapping index 2 with index 1 we get \u2018arr1\u2019 = [ 5, 13, 7 ] with the beauty = 3, as now \u2018arr1[i]\u2019 &gt; \u2018arr2[i]\u2019 for i = 0, 1, 2. And 3 is the maximum possible beauty.\n\nTest case 2:\nFor the second test case, given \u2018arr1\u2019 has beauty equal to 1. But after reordering its elements we get \u2018arr1\u2019 = [22, 32, 5, 7 ] with beauty = 2. \u2018arr1\u2019 = [ 22 , 32, 7, 5] is also a valid answer as its beauty is also 2, which is maximum possible.\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2 :</h4>\n\n<pre><code>1\n1\n6\n2\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2 :</h4>\n\n<pre><code>1\n</code></pre>\n\n<h4 id=\"explanation-of-sample-input-2\">Explanation of Sample Input 2 :</h4>\n\n<pre><code>Test case 1:\nThere is only one element, we cannot reorder its elements, so the beauty of \u2018arr1\u2019 remains the same i.e 1.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 5,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two arrays, `arr1` and `arr2`, of the same length, the beauty of `arr1` is defined as the number of indices `i` such that `arr1[i]` > `arr2[i]`.  Reorder the elements of `arr1` in any way to maximize its beauty.  Return any reordered version of `arr1` that achieves the maximum possible beauty.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= N <= 5000",
                    "1 <= arr1[i], arr2[i] <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "n = 3, arr1 = [5, 7, 13], arr2 = [1, 10, 6]",
                        "output": "1",
                        "explanation": "One possible reordering of arr1 is [5, 13, 7], which gives a beauty of 3 (arr1[0] > arr2[0], arr1[1] > arr2[1], arr1[2] > arr2[2])."
                    },
                    {
                        "input": "n = 4, arr1 = [7, 22, 5, 32], arr2 = [13, 25, 35, 10]",
                        "output": "1",
                        "explanation": "One possible reordering of arr1 is [22, 32, 5, 7], which gives a beauty of 2 (arr1[0] > arr2[0], arr1[3] > arr2[3]).  Another valid reordering is [22, 32, 7, 5]."
                    },
                    {
                        "input": "n = 1, arr1 = [6], arr2 = [2]",
                        "output": "1",
                        "explanation": "Since there's only one element, no reordering is possible. The beauty is 1."
                    },
                    {
                        "input": "n = 5, arr1 = [1, 2, 3, 4, 5], arr2 = [6, 7, 8, 9, 10]",
                        "output": "1",
                        "explanation": "No matter how arr1 is reordered, no element will be greater than its corresponding element in arr2. The maximum beauty is 0. A possible arr1 is [1, 2, 3, 4, 5]"
                    },
                    {
                        "input": "n = 5, arr1 = [10, 9, 8, 7, 6], arr2 = [1, 2, 3, 4, 5]",
                        "output": "1",
                        "explanation": "No matter how arr1 is reordered, every element will be greater than its corresponding element in arr2. The maximum beauty is 5. A possible arr1 is [10, 9, 8, 7, 6]"
                    },
                    {
                        "input": "n = 3, arr1 = [1, 1, 1], arr2 = [2, 2, 2]",
                        "output": "1",
                        "explanation": "No possible reordering can increase beauty"
                    },
                    {
                        "input": "n = 3, arr1 = [2, 2, 2], arr2 = [1, 1, 1]",
                        "output": "1",
                        "explanation": "Any reordering results in beauty 3."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Consider all possibilities.</p>",
            "<p>Think greedily</p>",
            "<p>Use ordered data structure.</p>",
            "<p>Use Heap data structure.</p>",
            "<p>Use Sorting</p>"
        ],
        "relatedTopics": [
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap",
                "slug": "heap"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}