{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9676,
            "title": "Best Time To Buy and Sell Stock",
            "titleSlug": "best-time-to-buy-and-sell-stock_1080698",
            "content": "<h4 id=\"you-have-been-given-an-array-prices-consisting-of-n-integers-where-prices-i-denotes-the-price-of-a-given-stock-on-the-i-th-day-you-are-also-given-an-integer-k-denoting-the-number-of-possible-transactions-you-can-make\">You have been given an array &#39;PRICES&#39; consisting of &#39;N&#39; integers where PRICES[i] denotes the price of a given stock on the i-th day. You are also given an integer &#39;K&#39; denoting the number of possible transactions you can make.</h4>\n\n<h4 id=\"your-task-is-to-find-the-maximum-profit-in-at-most-k-transactions-a-valid-transaction-involves-buying-a-stock-and-then-selling-it\">Your task is to find the maximum profit in at most K transactions. A valid transaction involves buying a stock and then selling it.</h4>\n\n<h5 id=\"note\">Note</h5>\n\n<pre><code>You can\u2019t engage in multiple transactions simultaneously, i.e. you must sell the stock before rebuying it.\n</code></pre>\n\n<h5 id=\"for-example\">For Example</h5>\n\n<pre><code>Input: N = 6 , PRICES = [3, 2, 6, 5, 0, 3] and K = 2.\nOutput: 7\n\nExplanation : The optimal way to get maximum profit is to buy the stock on day 2(price = 2) and sell it on day 3(price = 6) and rebuy it on day 5(price = 0) and sell it on day 6(price = 3). The maximum profit will be (6 - 2) + (3 - 0) = 7.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format</h5>\n\n<pre><code>The first line of input contains an integer &#39;T&#39; which denotes the number of test cases or queries to be run. Then the test cases follow.\n\nThe first line of each test case contains two single-space separated integers \u2018N\u2019 and \u2018K\u2019, respectively.\n\nThe second line of each test case contains \u2018N\u2019 single space-separated integers, denoting the elements of the array &#39;PRICES&#39;.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format</h5>\n\n<pre><code>For each test case, print a single integer denoting the maximum profit in at most K transactions.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note</h5>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= N &lt;= 5000\n0 &lt;= K &lt;= N/2\n0 &lt;= ARR[i] &lt;=10^5\n\nTime Limit : 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1</h5>\n\n<pre><code>2\n5 2\n8 5 1 3 10\n4 2\n10 8 6 2 \n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1</h5>\n\n<pre><code>9\n0\n</code></pre>\n\n<h5 id=\"explanation-for-sample-1\">Explanation for Sample 1</h5>\n\n<pre><code>Test Case 1: In this case, we can make a maximum of 2 transactions. The optimal way to get maximum profit is to make only 1 transaction, i.e., buy the stock on day 3 (price = 1) and sell it on day 5(price = 10). The profit will be 10 - 1 = 9.\n\nTest Case 2: In the second test case, we can make a maximum of 2 transactions. The optimal way to get maximum profit is to make 0 transactions because the price of stock is continuously decreasing and we will have a loss if we buy and sell the stock.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2</h5>\n\n<pre><code>2\n4 0\n2 6 5 2\n4 2\n1 2 3 5\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2</h5>\n\n<pre><code>0\n4\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 68,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array `PRICES` of `N` integers representing the price of a stock on each of the `N` days, and an integer `K` representing the maximum number of transactions allowed. Your task is to find the maximum profit achievable by performing at most `K` transactions. A transaction consists of buying a stock on one day and selling it on a later day. You cannot engage in multiple transactions simultaneously; you must sell a stock before buying another.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= N <= 5000",
                    "0 <= K <= N/2",
                    "0 <= ARR[i] <= 10^5",
                    "Time Limit : 1 sec"
                ],
                "testcases": [
                    {
                        "input": "5 2\n8 5 1 3 10",
                        "output": "9",
                        "explanation": "With a maximum of 2 transactions, the optimal strategy is to buy the stock on day 3 (price = 1) and sell it on day 5 (price = 10), yielding a profit of 10 - 1 = 9."
                    },
                    {
                        "input": "4 2\n10 8 6 2",
                        "output": "0",
                        "explanation": "In this case, the stock prices are continuously decreasing. Therefore, the optimal strategy is to make no transactions to avoid any losses."
                    },
                    {
                        "input": "4 0\n2 6 5 2",
                        "output": "0",
                        "explanation": "Since the maximum number of transactions allowed is 0, the maximum profit is 0."
                    },
                    {
                        "input": "4 2\n1 2 3 5",
                        "output": "4",
                        "explanation": "With a maximum of 2 transactions, the optimal strategy is to buy the stock on day 1 (price = 1) and sell it on day 4 (price = 5), yielding a profit of 5 - 1 = 4."
                    },
                    {
                        "input": "6 2\n3 2 6 5 0 3",
                        "output": "7",
                        "explanation": "The optimal way to get the maximum profit is to buy the stock on day 2 (price = 2) and sell it on day 3 (price = 6), then buy it again on day 5 (price = 0) and sell it on day 6 (price = 3). The total profit is (6 - 2) + (3 - 0) = 7."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you come up with a recurrence relation?</p>",
            "<p>Try to optimise Approach 1.</p>",
            "<p>Try to optimise Approach 2.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Number Theory",
                "slug": "number-theory"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}