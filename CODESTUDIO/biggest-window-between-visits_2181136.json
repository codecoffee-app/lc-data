{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 14504,
            "title": "Biggest Window Between Visits",
            "titleSlug": "biggest-window-between-visits_2181136",
            "content": "<h4 id=\"table-uservisits\">Table: <b>UserVisits</b></h4>\n\n<pre><code>+-------------+------+\n| Column Name | Type |\n+-------------+------+\n| user_id          |   int  |\n| visit_date      | date |\n+-------------+------+\n</code></pre>\n\n<p><br></p>\n\n<ul>\n<li>This table does not have a primary key.</li>\n<li>This table contains logs of the dates that users vistied a certain retailer.</li>\n</ul>\n\n<p><br></p>\n\n<h4 id=\"assume-todays-date-is-2021-1-1\">Assume today&#39;s date is &#39;2021-1-1&#39;.</h4>\n\n<p><br></p>\n\n<h4 id=\"write-an-sql-query-that-will-for-each-user_id-find-out-the-largest-window-of-days-between-each-visit-and-the-one-right-after-it-or-today-if-you-are-considering-the-last-visit\">Write an SQL query that will, for each user_id, find out the largest window of days between each visit and the one right after it (or today if you are considering the last visit).</h4>\n\n<p><br></p>\n\n<h4 id=\"return-the-result-table-ordered-by-user_id\">Return the result table ordered by user_id.</h4>\n\n<p><br></p>\n\n<h4 id=\"the-query-result-format-is-in-the-following-example-uservisits-table\">The query result format is in the following example: <b>UserVisits table:</b></h4>\n\n<pre><code>+---------+------------+\n| user_id | visit_date |\n+---------+------------+\n| 1       | 2020-11-28 |\n| 1       | 2020-10-20 |\n| 1       | 2020-12-3  |\n| 2       | 2020-10-5  |\n| 2       | 2020-12-9  |\n| 3       | 2020-11-11 |\n+---------+------------+\n</code></pre>\n\n<h5 id=\"result-table\">Result table:</h5>\n\n<pre><code>+---------+---------------+\n| user_id | biggest_window|\n+---------+---------------+\n| 1       | 39            |\n| 2       | 65            |\n| 3       | 51            |\n+---------+---------------+\n</code></pre>\n\n<p><br></p>\n\n<h5 id=\"explanation\">Explanation:</h5>\n\n<p><br></p>\n\n<ul>\n<li><p>For the first user, the windows in question are between dates:</p>\n\n<pre><code> 1. 2020-10-20 and 2020-11-28 with a total of 39 days. \n 2. 2020-11-28 and 2020-12-3 with a total of 5 days. \n 3. 2020-12-3 and 2021-1-1 with a total of 29 days.\n</code></pre></li>\n<li><p>Making the biggest window the one with 39 days.</p></li>\n<li><p>For the second user, the windows in question are between dates:</p>\n\n<pre><code> 1. 2020-10-5 and 2020-12-9 with a total of 65 days.\n 2. 2020-12-9 and 2021-1-1 with a total of 23 days.\n</code></pre></li>\n<li><p>Making the biggest window the one with 65 days.</p></li>\n<li><p>For the third user, the only window in question is between dates 2020-11-11 and 2021-1-1 with a total of 51 days.</p></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 7,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a table `UserVisits` containing the `user_id` and `visit_date` for each user's visits to a retailer, determine the largest time window (in days) between consecutive visits for each user. For the last visit of each user, calculate the window between the last visit and '2021-01-01'. Return a table containing the `user_id` and the corresponding `biggest_window`, ordered by `user_id`.",
                "constraints": [
                    "The table `UserVisits` does not have a primary key.",
                    "The table `UserVisits` contains logs of the dates that users visited a certain retailer.",
                    "Assume today's date is '2021-01-01'."
                ],
                "testcases": [
                    {
                        "input": "userVisits = [{'user_id': 1, 'visit_date': '2020-11-28'}, {'user_id': 1, 'visit_date': '2020-10-20'}, {'user_id': 1, 'visit_date': '2020-12-03'}, {'user_id': 2, 'visit_date': '2020-10-05'}, {'user_id': 2, 'visit_date': '2020-12-09'}, {'user_id': 3, 'visit_date': '2020-11-11'}]",
                        "output": "[{'user_id': 1, 'biggest_window': 39}, {'user_id': 2, 'biggest_window': 65}, {'user_id': 3, 'biggest_window': 51}]",
                        "explanation": "For user 1, the differences are 39 days (2020-10-20 to 2020-11-28), 5 days (2020-11-28 to 2020-12-03), and 29 days (2020-12-03 to 2021-01-01). The largest window is 39.  For user 2, the differences are 65 days (2020-10-05 to 2020-12-09), and 23 days (2020-12-09 to 2021-01-01). The largest window is 65.  For user 3, the difference is 51 days (2020-11-11 to 2021-01-01). The largest window is 51."
                    },
                    {
                        "input": "userVisits = [{'user_id': 4, 'visit_date': '2020-01-01'}, {'user_id': 4, 'visit_date': '2020-01-02'}, {'user_id': 4, 'visit_date': '2020-12-31'}]",
                        "output": "[{'user_id': 4, 'biggest_window': 364}]",
                        "explanation": "For user 4, the differences are 1 day (2020-01-01 to 2020-01-02), 364 days (2020-01-02 to 2020-12-31), and 1 day (2020-12-31 to 2021-01-01). The largest window is 364."
                    },
                    {
                        "input": "userVisits = [{'user_id': 5, 'visit_date': '2020-12-31'}]",
                        "output": "[{'user_id': 5, 'biggest_window': 1}]",
                        "explanation": "For user 5, the difference is 1 day (2020-12-31 to 2021-01-01). The largest window is 1."
                    },
                    {
                        "input": "userVisits = [{'user_id': 6, 'visit_date': '2020-01-01'},{'user_id': 6, 'visit_date': '2020-01-01'}]",
                        "output": "[{'user_id': 6, 'biggest_window': 366}]",
                        "explanation": "For user 6, visit dates are same, so difference between first and last visit would be 0. But since the last visit difference from 2021-01-01 is 366, the biggest window would be 366."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "SQL",
                "slug": "sql"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}