{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 14504,
            "title": "Biggest Window Between Visits",
            "titleSlug": "biggest-window-between-visits_2181136",
            "content": "<h4 id=\"table-uservisits\">Table: <b>UserVisits</b></h4>\n\n<pre><code>+-------------+------+\n| Column Name | Type |\n+-------------+------+\n| user_id          |   int  |\n| visit_date      | date |\n+-------------+------+\n</code></pre>\n\n<p><br></p>\n\n<ul>\n<li>This table does not have a primary key.</li>\n<li>This table contains logs of the dates that users vistied a certain retailer.</li>\n</ul>\n\n<p><br></p>\n\n<h4 id=\"assume-todays-date-is-2021-1-1\">Assume today&#39;s date is &#39;2021-1-1&#39;.</h4>\n\n<p><br></p>\n\n<h4 id=\"write-an-sql-query-that-will-for-each-user_id-find-out-the-largest-window-of-days-between-each-visit-and-the-one-right-after-it-or-today-if-you-are-considering-the-last-visit\">Write an SQL query that will, for each user_id, find out the largest window of days between each visit and the one right after it (or today if you are considering the last visit).</h4>\n\n<p><br></p>\n\n<h4 id=\"return-the-result-table-ordered-by-user_id\">Return the result table ordered by user_id.</h4>\n\n<p><br></p>\n\n<h4 id=\"the-query-result-format-is-in-the-following-example-uservisits-table\">The query result format is in the following example: <b>UserVisits table:</b></h4>\n\n<pre><code>+---------+------------+\n| user_id | visit_date |\n+---------+------------+\n| 1       | 2020-11-28 |\n| 1       | 2020-10-20 |\n| 1       | 2020-12-3  |\n| 2       | 2020-10-5  |\n| 2       | 2020-12-9  |\n| 3       | 2020-11-11 |\n+---------+------------+\n</code></pre>\n\n<h5 id=\"result-table\">Result table:</h5>\n\n<pre><code>+---------+---------------+\n| user_id | biggest_window|\n+---------+---------------+\n| 1       | 39            |\n| 2       | 65            |\n| 3       | 51            |\n+---------+---------------+\n</code></pre>\n\n<p><br></p>\n\n<h5 id=\"explanation\">Explanation:</h5>\n\n<p><br></p>\n\n<ul>\n<li><p>For the first user, the windows in question are between dates:</p>\n\n<pre><code> 1. 2020-10-20 and 2020-11-28 with a total of 39 days. \n 2. 2020-11-28 and 2020-12-3 with a total of 5 days. \n 3. 2020-12-3 and 2021-1-1 with a total of 29 days.\n</code></pre></li>\n<li><p>Making the biggest window the one with 39 days.</p></li>\n<li><p>For the second user, the windows in question are between dates:</p>\n\n<pre><code> 1. 2020-10-5 and 2020-12-9 with a total of 65 days.\n 2. 2020-12-9 and 2021-1-1 with a total of 23 days.\n</code></pre></li>\n<li><p>Making the biggest window the one with 65 days.</p></li>\n<li><p>For the third user, the only window in question is between dates 2020-11-11 and 2021-1-1 with a total of 51 days.</p></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 7,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a table `UserVisits` containing logs of user visits to a retailer, where each row represents a user's visit on a specific date, write an SQL query to find the largest window (in days) between each user's visits. The window is defined as the number of days between a visit and the next visit for that user. For the last visit of each user, calculate the window between that visit and '2021-01-01'. Return the result table ordered by `user_id`.",
                "constraints": [
                    "The `UserVisits` table does not have a primary key.",
                    "Assume today's date is '2021-01-01'."
                ],
                "testcases": [
                    {
                        "input": "+---------+------------+\n| user_id | visit_date |\n+---------+------------+\n| 1       | 2020-11-28 |\n| 1       | 2020-10-20 |\n| 1       | 2020-12-3  |\n| 2       | 2020-10-5  |\n| 2       | 2020-12-9  |\n| 3       | 2020-11-11 |\n+---------+------------+",
                        "output": "+---------+---------------+\n| user_id | biggest_window|\n+---------+---------------+\n| 1       | 39            |\n| 2       | 65            |\n| 3       | 51            |\n+---------+---------------+",
                        "explanation": "For user 1, the windows are: (2020-10-20 to 2020-11-28 = 39 days), (2020-11-28 to 2020-12-03 = 5 days), (2020-12-03 to 2021-01-01 = 29 days). The largest is 39.  For user 2, the windows are: (2020-10-05 to 2020-12-09 = 65 days), (2020-12-09 to 2021-01-01 = 23 days). The largest is 65. For user 3, the window is: (2020-11-11 to 2021-01-01 = 51 days). The largest is 51."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "SQL",
                "slug": "sql"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}