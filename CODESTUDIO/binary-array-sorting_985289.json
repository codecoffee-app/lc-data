{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9425,
            "title": "Binary Array Sorting",
            "titleSlug": "binary-array-sorting_985289",
            "content": "<h4 id=\"a-binary-array-is-an-array-consisting-of-only-0s-and-1s\">A binary array is an array consisting of only 0s and 1s.</h4>\n\n<h4 id=\"you-are-given-a-binary-array-arr-of-size-n-your-task-is-to-sort-the-given-array-and-return-this-array-after-sorting\">You are given a binary array &quot;arr&quot; of size \u2018N\u2019. Your task is to sort the given array and return this array after sorting.</h4>\n\n<h4 id=\"input-format\">Input Format :</h4>\n\n<pre><code> The first line of input contains an integer \u2018T\u2019 denoting the number of test cases.\n\n The next \u20182*T\u2019 lines represent the \u2018T\u2019 test cases.\n\n The first line of each test case contains an integer \u2018N&#39; denoting the size of the array.\n\n The second line of each test case contains \u2018N\u2019 space-separated integers consisting of 0s and 1s as the array elements.\n</code></pre>\n\n<h4 id=\"output-format\">Output Format :</h4>\n\n<pre><code>For each test case, print \u2018N\u2019 space-separated integers representing the elements of the sorted binary array in a separate line.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h4 id=\"follow-up\">Follow Up :</h4>\n\n<pre><code>1. Can you solve this problem in a linear time and constant space? \n2. Can you solve this problem in a single traversal only?\n</code></pre>\n\n<h4 id=\"constraints\">Constraints :</h4>\n\n<pre><code>1 &lt;= T &lt;= 50\n1 &lt;= N &lt;= 10^4\n0 &lt;= arr[i] &lt;= 1\n\nWhere \u2018T\u2019 is the number of test cases and \u2018N\u2019 is the size of the array.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n3 \n0 1 0\n4\n0 0 0 1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>0 0 1\n0 0 0 1\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1 :</h5>\n\n<pre><code>Test case 1:\nThe sorted array is 0 0 1\n\nTest case 2:\nThe array is already sorted.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n1\n0\n2\n1 0\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>0\n0 1\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-2\">Explanation of Sample Input 2 :</h5>\n\n<pre><code>Test case 1:\nThe array is already sorted\n\nTest case 2:\nThe sorted array is 0 1.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 20,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a binary array (an array containing only 0s and 1s) of size 'N', sort the array in ascending order and return the sorted array. Implement a solution with linear time and constant space complexity, performing the sort in a single traversal if possible.",
                "constraints": [
                    "1 <= T <= 50 (Number of test cases)",
                    "1 <= N <= 10^4 (Size of the array)",
                    "0 <= arr[i] <= 1 (Elements of the array)",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "3\n0 1 0",
                        "output": "0 0 1",
                        "explanation": "The input array [0, 1, 0] is sorted to [0, 0, 1]."
                    },
                    {
                        "input": "4\n0 0 0 1",
                        "output": "0 0 0 1",
                        "explanation": "The input array [0, 0, 0, 1] is already sorted."
                    },
                    {
                        "input": "1\n0",
                        "output": "0",
                        "explanation": "The input array [0] is already sorted."
                    },
                    {
                        "input": "2\n1 0",
                        "output": "0 1",
                        "explanation": "The input array [1, 0] is sorted to [0, 1]."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Count the number of zeros or ones.</p>",
            "<p>Use partitioning logic of quick sorting.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}