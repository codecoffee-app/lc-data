{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12718,
            "title": "Binary Flip",
            "titleSlug": "binary-flip_1473837",
            "content": "<h4 id=\"you-are-given-a-binary-string-of-size-n-and-q-queries-to-work-on\">You are given a binary string of size \u2018N\u2019, and \u2018Q\u2019 queries to work on.</h4>\n\n<h4 id=\"the-queries-are-of-two-types\">The queries are of two types:</h4>\n\n<h4 id=\"i-1-l-r-denoting-that-the-query-is-of-type-1-and-you-have-to-return-the-integer-forming-from-binary-string-in-range-l-r-3\">i)  1 \u2018l\u2019 \u2018r\u2019, denoting that the query is of type-1, and you have to return the integer forming from binary string in range [l, r]  % 3.</h4>\n\n<h4 id=\"ii-2-idx-denoting-that-the-query-is-of-type-2-and-you-have-to-flip-the-bit-at-position-idx\">ii) 2 \u2018idx\u2019, denoting that the query is of type-2, and you have to flip the bit at position \u2018idx\u2019.</h4>\n\n<h4 id=\"eg-if-s-010010-in-query-2-if-l-0-and-r-4-then-then-we-will-take-the-substring-01001-which-is-9-thus-our-answer-will-be-9-3-0\">Eg: If S=\u201d010010\u201d, in query-2 if \u2018l\u2019= 0, and \u2018r\u2019= 4, then then we will take the substring \u201c01001\u201d which is 9, thus our answer will be 9%3 = 0.</h4>\n\n<h4 id=\"note-l-r-idx-are-in-0-based-indexing\">Note: l, r, idx are in 0-based indexing.</h4>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains an integer \u2018N\u2019, denoting the length of binary string \u2018S\u2019.\n\nThe next line contains the binary string \u2018S\u2019.\n\nThe next line contains an integer \u2018Q\u2019, denoting the number of queries.\n\nThe next \u2018Q\u2019 lines contain the queries of type-1 or type-2. The two types of queries are: \ni)  1 \u2018l\u2019 \u2018r\u2019, denoting that the query is of type-1, and you have to return the integer forming from binary string in range [l, r]  % 3.\nii) 2 \u2018idx\u2019, denoting that the query is of type-2, and you have to flip the bit at position \u2018idx\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each query of type-1 return the number forming in the range % 3.\n\nNote: Don&#39;t print anything it has already been taken care of. Just implement the given functions.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= N, Q &lt;= 3000\n0 &lt;= l, r, idx &lt;= N - 1\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>5\n10010\n5\n1 0 4\n2 1\n1 0 3\n2 3\n1 1 4\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>0\n1\n2\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1 :</h5>\n\n<pre><code>S=\u201d10010\u201d\n\nQuery 1: [0, 4] we will have substring  \u201c10010\u201d, which is (2+16)%3 = 0\n\nQuery 2: flip bit at position 1, i.e. flip S[1], which makes,  S=\u201d11010\u201d\n\nQuery 3: [0, 3] we will have substring  \u201c1101\u201d, which is (1+4+8)%3 = 1\n\nQuery 4: flip bit at position 3, i.e. flip S[3], which makes,  S=\u201d11000\u201d\n\nQuery 5: [1, 4] we will have substring  \u201c1000\u201d, which is (8)%3 = 2\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>7\n0111110\n7\n2 4\n1 5 6\n1 6 6\n2 1\n2 6\n1 3 3\n1 0 6\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>2\n0\n1\n0\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 8,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a binary string 's' of length 'n' and a list of 'q' queries, process each query and return the results for type-1 queries. There are two types of queries:\n\nType 1: Given a range [l, r] (inclusive, 0-indexed), calculate the decimal value of the substring s[l...r] and return its value modulo 3.\nType 2: Given an index 'idx' (0-indexed), flip the bit at position 'idx' in the string 's' (i.e., change '0' to '1' or '1' to '0').",
                "constraints": [
                    "1 <= N, Q <= 3000",
                    "0 <= l, r, idx <= N - 1",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "n = 5, s = \"10010\", q = 5, queries = [{1, 0, 4, -1}, {2, -1, -1, 1}, {1, 0, 3, -1}, {2, -1, -1, 3}, {1, 1, 4, -1}]",
                        "output": "[0, 1, 2]",
                        "explanation": "S=\"10010\"\n\nQuery 1: [0, 4] we will have substring  \u201c10010\u201d, which is (2+16)%3 = 0\n\nQuery 2: flip bit at position 1, i.e. flip S[1], which makes,  S=\u201d11010\u201d\n\nQuery 3: [0, 3] we will have substring  \u201c1101\u201d, which is (1+4+8)%3 = 1\n\nQuery 4: flip bit at position 3, i.e. flip S[3], which makes,  S=\u201d11000\u201d\n\nQuery 5: [1, 4] we will have substring  \u201c1000\u201d, which is (8)%3 = 2"
                    },
                    {
                        "input": "n = 7, s = \"0111110\", q = 7, queries = [{2, -1, -1, 4}, {1, 5, 6, -1}, {1, 6, 6, -1}, {2, -1, -1, 1}, {2, -1, -1, 6}, {1, 3, 3, -1}, {1, 0, 6, -1}]",
                        "output": "[2, 0, 1, 0]",
                        "explanation": "S=\"0111110\"\nQuery 1: Flip bit at index 4. S becomes \"0111010\"\nQuery 2: Substring from index 5 to 6 is \"10\". 2 % 3 = 2\nQuery 3: Substring from index 6 to 6 is \"0\". 0 % 3 = 0\nQuery 4: Flip bit at index 1. S becomes \"0011010\"\nQuery 5: Flip bit at index 6. S becomes \"0011011\"\nQuery 6: Substring from index 3 to 3 is \"1\". 1 % 3 = 1\nQuery 7: Substring from index 0 to 6 is \"0011011\". (2+8+16) % 3 = 26 % 3 = 2. Integer value is 27, which is (1+2+8+16)%3 = 0"
                    },
                    {
                        "input": "n = 3, s = \"111\", q = 3, queries = [{1, 0, 2, -1}, {2, -1, -1, 1}, {1, 0, 2, -1}]",
                        "output": "[1, 2]",
                        "explanation": "Initial string: \"111\"\nQuery 1: Substring from 0 to 2 is \"111\". 7 % 3 = 1\nQuery 2: Flip bit at index 1. String becomes \"101\"\nQuery 3: Substring from 0 to 2 is \"101\". 5 % 3 = 2"
                    },
                    {
                        "input": "n = 4, s = \"0000\", q = 2, queries = [{1, 0, 3, -1}, {2, -1, -1, 0}]",
                        "output": "[0]",
                        "explanation": "Initial string: \"0000\"\nQuery 1: Substring from 0 to 3 is \"0000\". 0 % 3 = 0\nQuery 2: Flip bit at index 0. String becomes \"1000\""
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Brute force the queries, calculate answer for each query in linear time</p>",
            "<p>create a segment tree</p>"
        ],
        "relatedTopics": [],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}