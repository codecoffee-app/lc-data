{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10921,
            "title": "Binary Tree Maximum Path Sum",
            "titleSlug": "binary-tree-maximum-path-sum_1280142",
            "content": "<h4 id=\"you-are-given-a-binary-tree-with-n-nodes\">You are given a binary tree with \u2018N\u2019 nodes.</h4>\n\n<h4 id=\"your-task-is-to-find-the-maximum-path-sum-for-any-path\">Your task is to find the \u201cMaximum Path Sum\u201d for any path.</h4>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>1. A \u2018path\u2019 is a sequence of adjacent pair nodes with an edge between them in the binary tree.\n2. The \u2018path\u2019 doesn\u2019t need to pass through the root.\n3. The \u2018path sum\u2019 is the sum of the node\u2019s data in that path. \n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains an integer &#39;T&#39; which denotes the number of test cases to be run.\n\nThe first line of each test case contains elements of the tree in the level order form. The line consists of values of nodes separated by a single space. In case a node is null, we take -1 in its place.\n\nFor example, the input for the tree is depicted in the below image.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/populatingnextii_ex-8467.png\" alt=\"altImage\"></p>\n\n<pre><code>For example, the input for the tree depicted in the above image would be :\n\n1\n2 3\n4 -1 5 6\n-1 -1 -1 -1 -1 -1\n</code></pre>\n\n<h4 id=\"explanation\">Explanation :</h4>\n\n<pre><code>Level 1 :\nThe root node of the tree is 1\n\nLevel 2 :\nLeft child of 1 = 2\nRight child of 1 = 3\n\nLevel 3 :\nLeft child of 2 = 4\nRight child of 2 = null (-1)\nLeft child of 3 = 5\nRight child of 3 =  6\n\nLevel 4 :\nLeft child of 4 = null (-1)\nRight child of 4 = null (-1)\nLeft child of 5 = null (-1)\nRight child of 5 = null (-1)\nLeft child of 6 = null (-1)\nRight child of 6 = null (-1)\n</code></pre>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>The above format was just to provide clarity on how the input is formed for a given tree. \n\nThe sequence will be put together in a single line separated by a single space. Hence, for the above-depicted tree, the input will be given as:\n1 2 3 4 -1 5 6 -1 -1 -1 -1 -1 -1\n</code></pre>\n\n<h4 id=\"output-format\">Output Format :</h4>\n\n<pre><code>For each test case, print an integer denoting the maximum path sum. \n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints :</h4>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 2000\n-5000 &lt;= data &lt;= 5000 and data != \u2018-1\u2019 (because -1  is used to mark the null nodes).\n\nWhere \u2018N\u2019 is the total number of nodes in the given binary tree, and \u2018data\u2019 is the value of the node of the binary tree.\n\nTime Limit : 1sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>1\n-4 -2 3 -1 -1 1 1 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>5\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1 :</h5>\n\n<pre><code>The tree will be\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/maxpathsum_tc1-8530.png\" alt=\"atlImage\"></p>\n\n<pre><code>The path marked in yellow is the maximum sum path.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>1\n-2 2 1 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>2\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation For Sample Input 2 :</h5>\n\n<pre><code>The tree will be:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/maxpathsum_tc2-8529.png\" alt=\"altImage\"></p>\n\n<pre><code>The maximum sum path will only contain one node and marked in yellow.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 3,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a binary tree with 'N' nodes, find the maximum path sum for any path in the tree. A path is a sequence of adjacent nodes with an edge between them. The path doesn't necessarily need to pass through the root, and the path sum is the sum of the node values in that path.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 2000",
                    "-5000 <= data <= 5000 and data != \u2018-1\u2019 (because -1 is used to mark the null nodes).",
                    "Where \u2018N\u2019 is the total number of nodes in the given binary tree, and \u2018data\u2019 is the value of the node of the binary tree.",
                    "Time Limit : 1sec"
                ],
                "testcases": [
                    {
                        "input": "-4 -2 3 -1 -1 1 1 -1 -1 -1 -1",
                        "output": "5",
                        "explanation": "The maximum path sum is achieved by the path -2 -> -4 -> 3, which sums to 5."
                    },
                    {
                        "input": "-2 2 1 -1 -1 -1 -1",
                        "output": "2",
                        "explanation": "The maximum path sum is achieved by a single node with value 2."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><i>Try to form the recursive solution.</i></p>"
        ],
        "relatedTopics": [
            {
                "name": "Depth-first Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Trees",
                "slug": "trees"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}