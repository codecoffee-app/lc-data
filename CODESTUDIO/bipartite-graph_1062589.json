{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9509,
            "title": "Bipartite Graph",
            "titleSlug": "bipartite-graph_1062589",
            "content": "<h4 id=\"given-an-undirected-graph-of-v-vertices-labeled-0-1-v-1-and-e-edges-your-task-is-to-check-whether-the-graph-is-bipartite-or-not\">Given an undirected graph of \u2018V\u2019 vertices (labeled 0,1,..., V-1) and \u2018E\u2019 edges . Your task is to check whether the graph is bipartite or not.</h4>\n\n<pre><code>A bipartite graph is a graph whose vertices can be divided into two sets such that each edge of the graph connects one vertex from the first set and another vertex from the second set.\nWe can also define a bipartite graph as a graph which can be colored using two colors such that no two adjacent vertices have the same color. \n\nFor example: \nInput: \n4 4\n0 1\n0 2\n1 3\n2 3\n\nAn undirected graph to the above input is shown below:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/bi-6872.png\" alt=\"\"></p>\n\n<pre><code>In the given input, the number of vertices is 4, and the number of edges is 4.\nIn the input, following the number of vertices and edges, a list of pairs of numbers is given where each pair (u, v) denotes an edge between vertex u and v.\nAs per the input, there is an edge between vertex 0 and vertex 1.\nThe vertices 0 and 2 have an edge between them.\n\nThe vertices 1 and 3 have an edge between them.\nThe vertices 2 and 3 have an edge between them.\n\nAs the graph can be colored using two colors, and no adjacent vertices share the same color, the graph is bipartite. \n</code></pre>\n\n<h4 id=\"input-format\">Input format:</h4>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases.\nThe first line of each test case contains two integers \u2018V\u2019 and \u2018E\u2019 denoting the number of vertices in the undirected graph and the number of edges in the undirected graph, respectively. \nThe next E lines contain two space-separated integers \u2018u\u2019, \u2018v\u2019, denoting two vertices connected by an edge. \n</code></pre>\n\n<h4 id=\"output-format\">Output format:</h4>\n\n<pre><code>For each test case, return \u201cTrue\u201d (without quotes) if the given graph is bipartite else return \u201cFalse\u201d. \nThe output of each test case is printed in a separate line. \n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>1.  There are no parallel edges i.e no two vertices are directly connected by more than 1 edge.\n2.  The graph is necessarily undirected. \n3.  You are not required to print the output explicitly, it has already been taken care of. Just implement the function that checks whether the given graph is bipartite or not.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n2 &lt;= V &lt;= 200\n1 &lt;= E &lt;= V * (V - 1)/2\nwhere \u2018T\u2019 is the number of test cases,  \u2018V\u2019 is the number of vertices, \u2018E\u2019 is the number of edges.\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1:</h4>\n\n<pre><code>1\n4 4 \n0 1\n0 2 \n2 3 \n1 3\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1:</h4>\n\n<pre><code>True \n</code></pre>\n\n<h4 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1:</h4>\n\n<pre><code>The graph formed by the given input is shown in the above example. We can clearly see that the graph is colored using two colors only and no adjacent vertices have the same color. It means, we can divide the vertices of the graph in two sets such that each edge of the graph connects one vertex from the first set and another vertex from the second set.\nFirst Set: { 0, 2 } \nSecond Set: { 1, 3 } \nHence, the given graph is bipartite and the answer is \u2018True\u2019. \n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2:</h4>\n\n<pre><code>1\n4 5\n0 1\n0 2 \n1 2\n1 3 \n2 3 \n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2:</h4>\n\n<pre><code>False\n</code></pre>\n\n<h4 id=\"explanation-of-sample-output-2\">Explanation of sample output 2:</h4>\n\n<pre><code>The graph formed from the given input is shown below: \n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/bi-6873.png\" alt=\"\">   </p>\n\n<pre><code>We can&#39;t color the vertex 2 by green as it is adjacent to the already green colored vertex 1. Thus, we can\u2019t color the graph using only two colors. It means the graph is not bipartite. \n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 6,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an undirected graph represented by an adjacency list, determine if the graph is bipartite. A bipartite graph is one whose vertices can be divided into two disjoint sets such that every edge connects a vertex in one set to a vertex in the other set.  Equivalently, a graph is bipartite if it can be colored with two colors such that no two adjacent vertices share the same color. Implement the `isBipartite` function to solve this problem.",
                "constraints": [
                    "1 <= T <= 10, where T is the number of test cases",
                    "2 <= V <= 200, where V is the number of vertices",
                    "1 <= E <= V * (V - 1)/2, where E is the number of edges"
                ],
                "testcases": [
                    {
                        "input": "vertices = 4, edges = 4, graph = {{1, 2}, {0, 3}, {0, 3}, {1, 2}}",
                        "output": "True",
                        "explanation": "The graph with edges (0,1), (0,2), (1,3), (2,3) is bipartite.  Vertices 0 and 2 can be in one set, and vertices 1 and 3 can be in another set.  Or it can be colored using two colors, with 0 and 2 having color A, and 1 and 3 having color B."
                    },
                    {
                        "input": "vertices = 4, edges = 5, graph = {{1, 2}, {0, 2, 3}, {0, 1, 3}, {1, 2}}",
                        "output": "False",
                        "explanation": "The graph with edges (0,1), (0,2), (1,2), (1,3), (2,3) is not bipartite.  The cycle 0-1-2-0 prevents a two-coloring."
                    },
                    {
                        "input": "vertices = 2, edges = 1, graph = {{1}, {0}}",
                        "output": "True",
                        "explanation": "A simple graph with two vertices and one edge is bipartite."
                    },
                    {
                        "input": "vertices = 5, edges = 0, graph = {{}, {}, {}, {}, {}}",
                        "output": "True",
                        "explanation": "A graph with no edges is always bipartite."
                    },
                    {
                        "input": "vertices = 6, edges = 6, graph = {{1}, {0, 2}, {1, 3}, {2, 4}, {3, 5}, {4}}",
                        "output": "True",
                        "explanation": "A simple path from 0 to 5 is bipartite."
                    },
                    {
                        "input": "vertices = 3, edges = 3, graph = {{1, 2}, {0, 2}, {0, 1}}",
                        "output": "False",
                        "explanation": "The complete graph K3 is not bipartite. The cycle 0-1-2-0 prevents a two-coloring."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Use the fact that a bipartite graph can be colored using 2 colors such that no two adjacent vertices have the same color. Can we use DFS to traverse the graph?&nbsp;&nbsp;</p>",
            "<p>Try to use BFS instead of DFS.&nbsp;</p>",
            "<p>Can a bipartite graph contain an odd-cycle?&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}