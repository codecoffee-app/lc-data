{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10645,
            "title": "Bird and maximum fruit-gathering",
            "titleSlug": "bird-and-maximum-fruit-gathering_1262295",
            "content": "<h4 id=\"there-are-n-trees-in-a-circle-each-tree-has-a-fruit-value-associated-with-it-a-ninja-bird-eyeing-the-fruits-on-the-tree-is-blazingly-fast-it-can-sit-on-a-tree-for-0-5-sec-to-gather-all-the-fruits-present-on-the-tree-no-matter-the-number-of-fruits-present-in-the-tree-and-then-the-ninja-bird-can-move-to-a-neighboring-tree-it-takes-the-ninja-bird-0-5-seconds-to-move-from-one-tree-to-another-once-all-the-fruits-are-picked-from-a-particular-tree-she-can-t-pick-any-more-fruits-from-that-tree-the-maximum-number-of-fruits-she-can-gather-is-infinite\">There are \u2018N\u2019 trees in a circle. Each tree has a fruit value associated with it. A ninja bird eyeing the fruits on the tree is blazingly fast. It can sit on a tree for 0.5 sec to gather all the fruits present on the tree no matter the number of fruits present in the tree and then the ninja bird can move to a neighboring tree. It takes the ninja bird 0.5 seconds to move from one tree to another. Once all the fruits are picked from a particular tree, she can\u2019t pick any more fruits from that tree. The maximum number of fruits she can gather is infinite.</h4>\n\n<h4 id=\"you-are-given-n-and-m-the-total-number-of-seconds-the-ninja-bird-has-and-the-fruit-values-of-the-trees-your-task-is-to-maximize-the-total-fruit-value-that-the-ninja-bird-can-gather-the-bird-can-start-from-any-tree\">You are given N and M (the total number of seconds the ninja bird has), and the fruit values of the trees. Your task is to maximize the total fruit value that the ninja bird can gather. The bird can start from any tree.</h4>\n\n<h5 id=\"note\">Note</h5>\n\n<pre><code>All trees are in a circle.\n</code></pre>\n\n<h5 id=\"for-example\">For Example:</h5>\n\n<pre><code>Input: N = 7 M = 3\nARR[] = { 2, 1, 3, 5, 0, 1, 4 }\n\nOutput: 9\n\nExplanation: \nShe can start from tree 1 and move to tree 2 and then to tree 3.\nHence, total number of gathered fruits = 1 + 3 + 5 = 9.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format</h5>\n\n<pre><code>The first line of input contains a single integer \u2018T\u2019 denoting the number of test cases for the problem.\n\nThe first line of each test case in the input contains two space-separated integers \u2018N\u2019 and \u2018M\u2019 denoting the number of trees and the seconds given to collect the fruits from the trees.\n\nAnd the second line contains &#39;N&#39; single space-separated integers, denoting the fruits on each tree.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print a single line containing a single integer denoting the maximum number of fruits the ninja bird can gather in the given amount of time.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= M &lt;= 5000\n1 &lt;= N &lt;= 5000\n1 &lt;= ARR[i] &lt;= 5000\n\nTime Limit: 1 sec.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n6 2\n1 6 2 5 3 4\n7 3\n2 1 3 5 0 1 4 \n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>8\n9\n</code></pre>\n\n<h5 id=\"explanation-for-sample-1\">Explanation for Sample 1:</h5>\n\n<pre><code>She can start from tree 1 and move to tree 2. In this case, she will gather 6 + 2 = 8 fruits. She can also start from tree 3 and move to tree 4. In this case, too, she will gather 5 + 3 = 8 fruits. Therefore the answer here is 8.\n\nShe can start from tree 1 and move to tree 2 and then to tree 3. Hence, the total number of gathered fruits = 1 + 3 + 5 = 9.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>1\n8 3\n2 3 4 1 2 1 5 3\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>10\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 8,
            "dislikes": "NA",
            "rephrased": {
                "body": "A ninja bird needs to collect fruits from N trees arranged in a circle. Each tree has a certain number of fruits. The bird takes 0.5 seconds to collect all fruits from a tree and 0.5 seconds to move to an adjacent tree. Given the number of trees (N), the total time (M) in seconds the bird has, and the number of fruits on each tree, determine the maximum number of fruits the bird can collect.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= M <= 5000",
                    "1 <= N <= 5000",
                    "1 <= ARR[i] <= 5000"
                ],
                "testcases": [
                    {
                        "input": "n = 6, arr = [1, 6, 2, 5, 3, 4], m = 2",
                        "output": "8",
                        "explanation": "The bird can start from tree 1 (6 fruits) and move to tree 2 (2 fruits). Total fruits = 6 + 2 = 8. Alternatively, start at tree 3 (5 fruits) and move to tree 4 (3 fruits). Total fruits = 5 + 3 = 8.  Therefore, the answer is 8."
                    },
                    {
                        "input": "n = 7, arr = [2, 1, 3, 5, 0, 1, 4], m = 3",
                        "output": "9",
                        "explanation": "The bird can start from tree 1 (1 fruit), move to tree 2 (3 fruits), and then to tree 3 (5 fruits). Total fruits = 1 + 3 + 5 = 9."
                    },
                    {
                        "input": "n = 8, arr = [2, 3, 4, 1, 2, 1, 5, 3], m = 3",
                        "output": "10",
                        "explanation": "The bird can start at tree 6 (1 fruit) collect it then travel to tree 7 (5 fruits) and collect them and move to tree 8 (3 fruits) making the total collected fruits = 1 + 5 + 3 = 9. Better is starting at index 7 (3 fruits) moving to index 0 (2 fruits) moving to index 1 (3 fruits). 3 + 2 + 3 = 8. Index 1 (3), index 2 (4), index 3 (1) = 8. Index 2(4), index 3(1), index 4(2) = 7. Index 3(1), index 4(2), index 5(1) = 4. Index 4(2), index 5(1), index 6(5) = 8. Index 5(1), index 6(5), index 7(3) = 9. Finally start at index 0 (2), index 1(3), index 2(4) = 9. But Starting at index 7, tree 0, tree 1 = 3 + 2 + 3 = 8. Starting at index 6, tree 7, tree 0 = 5+3+2 = 10. "
                    },
                    {
                        "input": "n = 4, arr = [1, 2, 3, 4], m = 4",
                        "output": "10",
                        "explanation": "The bird can pick all fruits. Possible sequences are [1,2,3,4], [2,3,4,1], [3,4,1,2], [4,1,2,3]. 1 + 2 + 3 + 4 = 10."
                    },
                    {
                        "input": "n = 1, arr = [5], m = 1",
                        "output": "5",
                        "explanation": "The bird can pick the only available fruit which has value 5."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Iterate over the trees from the first tree and keep checking whether the maximum sum is obtained or not.</p>",
            "<p>Try to think about how can the problem be optimised by using keeping track of the maximum sum for a window size equal to the given number of seconds given for collecting all the fruits.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}