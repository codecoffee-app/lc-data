{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12575,
            "title": "Birthday Gift",
            "titleSlug": "birthday-gift_1466953",
            "content": "<h4 id=\"ninja-s-friend-likes-gifts-very-much-so-on-his-birthday-ninja-wants-to-gift-him-a-number-n-he-knows-that-his-friend-will-like-this-number-only-if-it-is-possible-to-represent-n-as-the-distinct-powers-of-3\">Ninja\u2019s friend likes gifts very much. So on his birthday, Ninja wants to gift him a number \u2018N\u2019. He knows that his friend will like this number only if it is possible to represent &#39;N&#39; as the distinct powers of \u20183\u2019.</h4>\n\n<h4 id=\"for-example-10-3-0-3-2\">For example: 10 = 3 ^ 0 + 3 ^ 2.</h4>\n\n<h4 id=\"help-ninja-to-know-whether-his-friend-will-like-this-number-or-not\">Help Ninja to know whether his friend will like this number or not.</h4>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer &#39;T&#39; representing the number of test cases.\n\nThe first line of each test case contains a single integer \u2018N\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, return 1 if the number &#39;N&#39; can be represented as the distinct powers of 3 else return 0.\n\nThe output for each test case is printed in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= N &lt;= 10^9\n\nTime limit: 1 second\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1:</h4>\n\n<pre><code>3\n28 \n11\n29   \n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1:</h4>\n\n<pre><code>1\n0\n0\n</code></pre>\n\n<h4 id=\"explanation-of-sample-output-1\">Explanation of Sample Output 1:</h4>\n\n<pre><code>Test Case 1: We can write 28 = 3 ^ 0 + 3 ^ 3\n\nTest Case 2: It is not possible to write 11 as the sum of distinct powers of 3.\n\nTest Case 3: It is not possible to write 29 as the sum of distinct powers of 3.\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2:</h4>\n\n<pre><code>2\n15\n13\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2:</h4>\n\n<pre><code>0\n1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 9,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an integer 'N', determine if it can be represented as the sum of distinct powers of 3. If it can, return 1; otherwise, return 0.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= N <= 10^9",
                    "Time limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "3\n28\n11\n29",
                        "output": "1\n0\n0",
                        "explanation": "Test Case 1: 28 can be represented as 3^0 + 3^3 = 1 + 27.\nTest Case 2: 11 cannot be represented as the sum of distinct powers of 3.\nTest Case 3: 29 cannot be represented as the sum of distinct powers of 3."
                    },
                    {
                        "input": "2\n15\n13",
                        "output": "0\n1",
                        "explanation": "Test Case 1: 15 cannot be represented as the sum of distinct powers of 3.\nTest Case 2: 13 can be represented as 3^2 + 3^1 + 3^0 = 9 + 3 + 1."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you find all the valid ways of representing the given number as sum of powers of 3?</p>",
            "<p>We can\u2019t write numbers whose remainder with three is two as the power of three.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}