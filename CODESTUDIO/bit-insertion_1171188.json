{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10214,
            "title": "Bit Insertion",
            "titleSlug": "bit-insertion_1171188",
            "content": "<h4 id=\"you-are-given-two-32-bit-positive-integers-x-and-y-and-two-positions-a-and-b-your-task-is-to-insert-y-into-x-starting-from-a-th-position-to-b-th-position-both-inclusive\">You are given two 32 bit positive integers &#39;X&#39; and &#39;Y&#39;, and two positions &#39;A&#39; and &#39;B&#39;. Your task is to insert &#39;Y&#39; into &#39;X&#39; starting from A\u2019th position to B\u2019th position both inclusive.</h4>\n\n<h4 id=\"inserting-a-number-is-resetting-all-the-bits-of-x-from-position-a-to-position-b-and-then-writing-y-in-x-starting-from-index-a\">Inserting a number is resetting all the bits of &#39;X&#39; from position &#39;A&#39; to position &#39;B&#39; and then writing &#39;Y&#39; in &#39;X&#39; starting from index &#39;A&#39;.</h4>\n\n<h5 id=\"note-bit-positions-are-0-indexed\">Note : Bit positions are 0 indexed.</h5>\n\n<p><br></p>\n\n<h5 id=\"for-example\">For example :</h5>\n\n<pre><code>X = 1536 and Y = 7, A = 1 and B = 5,\nX is base 2 = 11000000000, Y in base 2 = 0111\nFirst, we clear all the bits of X from index 1 to index 5 then wrote Y in X starting from A.\nAfter inserting Y in X starting from position result will be 11000001110\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of input contains an integer &#39;T\u2019 denoting the number of test cases to run. Then the test case follows.\n\nThe first and the only line of each test case contain four single space-separated integers \u2018X\u2019, \u2018Y\u2019, \u2018A\u2019, and \u2018B\u2019 denoting the integers and the starting and the ending positions for insertion, respectively. \n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case print the number &#39;X&#39; after inserting the &#39;Y&#39; from A\u2019th to B\u2019th position.\nOutput for each test case is printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don\u2019t need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 5000\n1 &lt;= X,Y &lt;= 2^31\n0 &lt;= A &lt;= B &lt; 32 \n\n\u2018X\u2019, \u2018Y\u2019, \u2018A\u2019, \u2018B\u2019 are two given integers and starting bit positions and ending bit position to insert respectively.\nIt is guaranteed that the position from \u2018A\u2019 to  \u2018B\u2019 is enough to insert Y.\nTime Limit : 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n1 8 5 15\n7 21 11 30\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>257\n43015\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1 :</h5>\n\n<pre><code>X and Y in base 2 are (00001), (01000), after clearing all the bits in X from 5\u2019th to 15\u2019th position and inserting Y we get (1000000001)\nX and Y in base 2 are (111), (10101), after clearing all the bits in X from 11\u2019th to 30\u2019th position and inserting Y we get (0001010100000000111)\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n12143435 564 1 10 \n21321454 129 11 30\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>12143721\n265966\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 11,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two 32-bit positive integers, X and Y, and two positions, A and B, insert Y into X, starting from bit position A to bit position B (inclusive).  Inserting involves resetting all bits of X from position A to position B, and then writing Y into X starting at index A. Bit positions are 0-indexed.",
                "constraints": [
                    "1 <= T <= 5000",
                    "1 <= X, Y <= 2^31",
                    "0 <= A <= B < 32",
                    "X, Y, A, and B are two given integers and starting and ending bit positions to insert, respectively.",
                    "It is guaranteed that the position from A to B is enough to insert Y.",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "1 8 5 15",
                        "output": "257",
                        "explanation": "X (1) and Y (8) in base 2 are (00000000000000000000000000000001) and (00000000000000000000000000001000) respectively. After clearing bits 5 to 15 in X and inserting Y, we get (00000000000000000000000100000001) which is 257 in decimal."
                    },
                    {
                        "input": "7 21 11 30",
                        "output": "43015",
                        "explanation": "X (7) and Y (21) in base 2 are (00000000000000000000000000000111) and (00000000000000000000000000010101) respectively. After clearing bits 11 to 30 in X and inserting Y, we get (000000000000000000010101000000000111) which is 43015 in decimal."
                    },
                    {
                        "input": "12143435 564 1 10",
                        "output": "12143721",
                        "explanation": null
                    },
                    {
                        "input": "21321454 129 11 30",
                        "output": "265966",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can we use some bitwise operations to solve this problem?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}