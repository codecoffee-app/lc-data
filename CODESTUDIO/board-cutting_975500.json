{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9145,
            "title": "Board Cutting",
            "titleSlug": "board-cutting_975500",
            "content": "<h4 id=\"you-have-been-given-a-flat-board-of-size-m-n-and-you-have-to-cut-this-board-into-m-n-pieces-each-of-size-1-1-to-cut-the-board-you-can-make-only-horizontal-and-vertical-cuts\">You have been given a flat board of size M * N and you have to cut this board into M * N pieces each of size 1 * 1. To cut the board, you can make only horizontal and vertical cuts.</h4>\n\n<h4 id=\"the-cost-of-cutting-horizontal-cuts-is-given-by-array-horizontal-and-that-of-cutting-vertical-cuts-is-given-by-array-vertical-the-cost-is-multiplied-by-the-number-of-segments-cut-to-get-the-total-cost\">The cost of cutting horizontal cuts is given by array HORIZONTAL and that of cutting vertical cuts is given by array VERTICAL. The cost is multiplied by the number of segments cut to get the total cost.</h4>\n\n<h4 id=\"your-task-is-to-minimize-the-overall-cost-which-is-the-sum-of-costs-of-all-successive-cuts\">Your task is to minimize the overall cost which is the sum of costs of all successive cuts.</h4>\n\n<h4 id=\"for-example\">For example :</h4>\n\n<pre><code>For the board of size 3 * 2 given below, with horizontal = [2] and vertical = [1, 3], the minimum cost of cutting it is explained below:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/first-6529.png\" alt=\"\"></p>\n\n<pre><code>1st cut: Horizontal cut with cost 3 cutting 1 segment. Cost = 3 * 1.\n2nd cut: Vertical cut with cost 2 cutting 2 segments. Cost = 2 * 2.\n3rd cut: Horizontal cut with cost 1 cutting 2 segments. Cost = 1 * 2.  \n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/second-6528.png\" alt=\"\"></p>\n\n<pre><code>Above is the pictorial representation. \nCost = 3 + 4 + 2 = 9.\n</code></pre>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>As the answer can be large, return your answer modulo 10^9 + 7.  \n</code></pre>\n\n<h5 id=\"input-format\">Input format :</h5>\n\n<pre><code>The first line contains an integer &#39;T&#39; which denotes the number of test cases or queries to be run. Then, the T test cases follow.\n\nThe first line of each test case or query contains two space-separated integers &#39;M&#39; and \u2018N\u2019 denoting the number of rows and columns in the board. \n\nThe second line contains \u2018M-1\u2019 single space-separated integers, representing the costs of cutting Horizontal edges. \n\nThe second line contains &#39;N-1&#39; single space-separated integers, representing the costs of cutting Vertical edges. \n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case, print an integer denoting the minimum possible cost modulo 10^9+7 in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints :</h4>\n\n<pre><code>1 &lt;= T &lt;= 5\n2 &lt;= M &lt;= 10^3 \n2 &lt;= N &lt;= 10^3 \n1 &lt;= horizontal[i] &lt;= 10^9 \n1 &lt;= vertical[i] &lt;= 10^9 \n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample input 1 :</h5>\n\n<pre><code>1\n2 2\n5\n2 \n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample output 1 :</h5>\n\n<pre><code>9 \n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for sample input 1 :</h5>\n\n<pre><code>The board of size 2 * 2 can be cut by cutting 1 segment Horizontally with cost 5, i.e. 5*1 and making the second cut vertically with cost 2 cutting 2 segments i.e. 2*2. \n\nThe final cost becomes 5 + 4 = 9.  \n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample input 2 :</h5>\n\n<pre><code>2\n2 2 \n1\n3\n6 4\n2 1 3 1 4\n4 1 2 \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample output 2 :</h5>\n\n<pre><code>5\n42\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 4,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a flat board of size M * N, the goal is to cut it into M * N pieces of size 1 * 1 using only horizontal and vertical cuts.  The cost of each horizontal cut is given by the array HORIZONTAL, and the cost of each vertical cut is given by the array VERTICAL. The cost of a cut is multiplied by the number of segments being cut. The objective is to minimize the total cost of all cuts, calculated as the sum of the costs of each individual cut.",
                "constraints": [
                    "1 <= T <= 5",
                    "2 <= M <= 10^3",
                    "2 <= N <= 10^3",
                    "1 <= horizontal[i] <= 10^9",
                    "1 <= vertical[i] <= 10^9",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "2 2\n5\n2",
                        "output": "9",
                        "explanation": "A 2x2 board can be cut horizontally with a cost of 5, resulting in 5 * 1 = 5. The next cut is vertical with a cost of 2, cutting 2 segments, resulting in 2 * 2 = 4. The total cost is 5 + 4 = 9."
                    },
                    {
                        "input": "2 2\n1\n3",
                        "output": "5",
                        "explanation": null
                    },
                    {
                        "input": "6 4\n2 1 3 1 4\n4 1 2",
                        "output": "42",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Observe that in order to minimize the cost we need to cut minimum segments with the edge that costs the most.&nbsp;&nbsp;&nbsp;&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Matrices (2D Arrays)",
                "slug": "matrices-(2d-arrays)"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}