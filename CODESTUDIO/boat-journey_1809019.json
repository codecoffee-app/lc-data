{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 13903,
            "title": "Boat Journey",
            "titleSlug": "boat-journey_1809019",
            "content": "<h4 id=\"there-are-n-cities-numbered-from-0-to-n-1-and-m-river-connecting-two-cities-in-a-starlink-kingdom-the-only-way-to-travel-from-one-city-to-another-is-by-swimming-through-a-river-ninja-is-on-a-vacational-journey-and-wants-to-do-q-travel-the-energy-required-to-swim-against-the-river-is-w-and-with-the-flow-of-river-is-zero-it-means-if-the-flow-of-river-is-from-city-u-to-v-then-the-energy-required-to-swim-from-v-to-u-is-w-ninja-has-special-power-to-reverse-the-direction-of-flow-of-water-in-the-river-ninja-wants-to-minimize-his-energy-consumption-for-this-journey-help-ninja-to-find-the-minimum-energy-required-to-complete-his-journey-using-his-special-power-he-can-reverse-the-direction-of-flow-of-any-river-any-number-of-times-before-starting-his-journey-he-may-not-use-his-power\">There are \u2018N\u2019 cities numbered from 0 to \u2018N\u2019 - 1 and \u2018M\u2019 river connecting two cities in a Starlink Kingdom. The only way to travel from one city to another is by swimming through a river. Ninja is on a vacational journey and wants to do \u2018Q\u2019 travel. The energy required to swim against the river is \u2018w\u2019 and with the flow of river is zero, it means if the flow of river is from city \u2018u\u2019 to \u2018v\u2019 then the energy required to swim from \u2018v\u2019 to \u2018u\u2019 is \u2018w\u2019. Ninja has special power to reverse the direction of flow of water in the river. Ninja wants to minimize his energy consumption for this journey. Help Ninja to find the minimum energy required to complete his journey using his special power. He can reverse the direction of flow of any river any number of times before starting his journey( he may not use his power ).</h4>\n\n<h4 id=\"note-energy-consumption-of-one-journey-is-equal-to-the-sum-of-energy-of-each-trip-there-can-be-more-than-one-river-between-any-two-cities\">Note : Energy consumption of one journey is equal to the sum of energy of each trip. There can be more than one river between any two cities.</h4>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains one positive integer \u2018T\u2019, denoting the number of test cases, then \u2018T\u2019 test cases follows\n\nThe first line of each test case contains three integers \u2018N\u2019  \u2018M\u2019 and \u2018Q\u2019, denoting the number of cities, the number of rivers and number of travel.\n\nThe next \u2018M\u2019 lines of each test case contains three space-separated integers \u2019u\u2019 , \u2018v\u2019 and \u2018w\u2019, denoting connection between cities \u2018u\u2019 and \u2018v\u2019 where river flow from \u2018u\u2019 to \u2018v\u2019 and energy required against flow is \u2018w\u2019.\n\nThe next \u2018Q\u2019 lines of each test case contain two integers \u2018x\u2019 and \u2018y\u2019, denoting each travel from \u2018x\u2019 to \u2018y\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>The first and the only line of each test case contains one integer \u2018X\u2019, denoting the minimum energy required to complete his journey using his special power ( he may not use his special power).\n\nOutput of each test case will be printed on a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= N, M, Q &lt;= 1000\n0 &lt;= u, v &lt;= N - 1, u != v\n0 &lt;= \u2018x\u2019, \u2018y\u2019 &lt;= N - 1\n\nTime Limit: 1 sec.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n6 6 2\n0 1 10\n1 2 5\n3 0 7\n3 5 4\n5 4 11\n4 3 5\n4 0\n1 5\n4 4 2\n0 1 3\n1 2 3\n2 3 4\n3 0 5\n0 2\n2 0\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>7\n0\n</code></pre>\n\n<h5 id=\"explanation-of-sample-output1\">Explanation of Sample Output1:</h5>\n\n<pre><code>In the first test case, the Starlink Kingdom looks like this: \n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/boat-journey-2-11502.png\" alt=\"1\"></p>\n\n<pre><code> We can change the direction of the river flow between 0 and 1. \n On the first trip we can go from city 4 to 0 without using any energy.\n On the second trip we swam against the river 0 - 3. So the minimum energy required is 7.\n\nIn the second test case, the Starlink Kingdom looks like this:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/boat-journey-1-11501.png\" alt=\"1\"></p>\n\n<pre><code>We can change the direction of the river flow between (0 4) and (4 3). \nOn the first trip we can go from city 0 -&gt; 1 -&gt; 3 without using any energy.\nOn the second trip we can go from city 3 -&gt; 4 -&gt; 0  without using any energy.\nSo the total required is 0.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n2 2 2\n0 1 10\n1 0 10\n0 1\n1 0\n3 3 2\n1 2 10\n1 2 15\n0 1 10\n2 0\n0 2\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>0\n10\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": -2,
            "dislikes": "NA",
            "rephrased": {
                "body": "There are N cities (0 to N-1) in the Starlink Kingdom, connected by M rivers. Travel between cities is only possible by swimming along these rivers. Ninja is planning Q trips. Swimming against the river flow costs 'w' energy units, while swimming with the flow costs 0. Ninja can reverse the flow direction of any river any number of times before starting the journeys to minimize the total energy consumed. Determine the minimum total energy required for Ninja to complete all Q trips.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= N, M, Q <= 1000",
                    "0 <= u, v <= N - 1, u != v",
                    "0 <= x, y <= N - 1",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "6 6 2\n0 1 10\n1 2 5\n3 0 7\n3 5 4\n5 4 11\n4 3 5\n4 0\n1 5",
                        "output": "7",
                        "explanation": "In the first test case, we can change the direction of the river flow between 0 and 1. On the first trip, Ninja can travel from city 4 to 0 without using any energy. On the second trip, Ninja swims against the river 0 - 3, requiring 7 energy units. Thus, the minimum energy required is 7."
                    },
                    {
                        "input": "4 4 2\n0 1 3\n1 2 3\n2 3 4\n3 0 5\n0 2\n2 0",
                        "output": "0",
                        "explanation": "In the second test case, Ninja can travel from city 0 -> 1 -> 2, with 0 ->1  (cost 0), 1 -> 2 (cost 0). \nSecond Trip : Ninja can go from city 2 -> 3 -> 0, with 2->3 (cost 0), 3-> 0 (cost 0).\nThus the total energy required is 0."
                    },
                    {
                        "input": "2 2 2\n0 1 10\n1 0 10\n0 1\n1 0",
                        "output": "0",
                        "explanation": null
                    },
                    {
                        "input": "3 3 2\n1 2 10\n1 2 15\n0 1 10\n2 0\n0 2",
                        "output": "10",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you think of something from the bridge tree? Count the number of up and down travel along any edge. Take help from lca.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Depth-first Search",
                "slug": "depth-first-search"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}