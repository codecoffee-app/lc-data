{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 7981,
            "title": "Boolean Matrix",
            "titleSlug": "boolean-matrix_798687",
            "content": "<h4 id=\"given-a-2-dimensional-boolean-matrix-mat-of-size-n-x-m-modify-the-matrix-such-that-if-an-element-is-1-set-its-entire-row-and-column-to-1-i-e-if-mat-i-j-1-then-make-all-the-elements-of-the-ith-row-and-the-jth-column-as-1\">Given a 2-dimensional boolean matrix mat of size N x M, modify the matrix such that if an element is 1, set its entire row and column to 1 i.e. if mat[i][j] = 1, then make all the elements of the ith row and the jth column as 1.</h4>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You need to make the modifications in the input matrix.\n\nYou do not need to print anything, it has already been taken care of. \n</code></pre>\n\n<h5 id=\"input-format\">Input Format</h5>\n\n<pre><code>The first line of input contains an integer &#39;T&#39; representing the number of test cases. Then the test cases follow.\n\nThe first line of each test case contains two single-spaced integers N and M, representing the number of rows and columns of the matrix respectively.\n\nThe next N line contains M single-spaced elements (0 or 1). \n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, the modified matrix is printed.\n\nThe output for each test case is in a separate line.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N, M &lt;= 200\n\nWhere N and M are the number of rows and columns respectively.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1\n2 2\n1 0\n0 0\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>1 1\n1 0\n</code></pre>\n\n<h5 id=\"explanation-of-the-sample-input-1\">Explanation of the Sample Input 1:</h5>\n\n<pre><code>For the given matrix, the element in the first row and column is 1, thus all the elements in the first row and first column are set to 1.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n3 4\n1 0 0 1\n0 0 1 0\n0 0 0 0\n2 3\n0 0 0\n0 0 1    \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>1 1 1 1\n1 1 1 1\n1 0 1 1\n0 0 1\n1 1 1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 13,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a 2D boolean matrix represented as a vector of vectors, modify the matrix in-place. If any element `mat[i][j]` is 1 (true), set all elements in the `i`-th row and `j`-th column to 1 (true).",
                "constraints": [
                    "1 <= T <= 10 (Number of test cases)",
                    "1 <= N, M <= 200 (Dimensions of the matrix)",
                    "The matrix contains only boolean values (0 or 1)"
                ],
                "testcases": [
                    {
                        "input": "n = 2, m = 2, mat = [[true, false], [false, false]]",
                        "output": "[[true, true], [true, false]]",
                        "explanation": "The element at mat[0][0] is 1. Therefore, the entire first row and first column are set to 1."
                    },
                    {
                        "input": "n = 3, m = 4, mat = [[true, false, false, true], [false, false, true, false], [false, false, false, false]]",
                        "output": "[[true, true, true, true], [true, false, true, true], [true, false, true, true]]",
                        "explanation": "mat[0][0] and mat[0][3] are 1, so the entire first row and first and fourth columns become 1.  mat[1][2] is 1, so the second row and third column become 1.  Overlapping changes combine to cause the output given."
                    },
                    {
                        "input": "n = 2, m = 3, mat = [[false, false, false], [false, false, true]]",
                        "output": "[[false, false, true], [true, true, true]]",
                        "explanation": "The element at mat[1][2] is 1, so all elements in the second row and third column are set to true."
                    },
                    {
                        "input": "n = 3, m = 4, mat = [[false, false, false, false], [false, false, false, false], [false, false, false, false]]",
                        "output": "[[false, false, false, false], [false, false, false, false], [false, false, false, false]]",
                        "explanation": "There are no 1's in the matrix, so no modifications are made."
                    },
                    {
                        "input": "n = 2, m = 3, mat = [[true, true, true], [true, true, true]]",
                        "output": "[[true, true, true], [true, true, true]]",
                        "explanation": "All elements are already set to true, thus no modifications are needed."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>For any cell in the matrix that has the element 1, try storing its row and column.</p>",
            "<p>Try to solve this problem in place by using the first cell of every column and row as a flag that would determine whether the row or column should be set to 1.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Matrices (2D Arrays)",
                "slug": "matrices-(2d-arrays)"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}