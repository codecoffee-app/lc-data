{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10440,
            "title": "Boyer-Moore for pattern searching",
            "titleSlug": "boyer-moore-for-pattern-searching_1229066",
            "content": "<h4 id=\"you-are-given-a-list-of-n-words-your-task-is-to-find-the-rectangle-of-the-maximum-area-that-can-be-formed-using-the-list-of-words-zero-or-more-times-such-that-the-following-conditions-hold-true\">You are given a list of \u2018N\u2019 words. Your task is to find the rectangle of the maximum area that can be formed using the list of words zero or more times such that the following conditions hold true:</h4>\n\n<h4 id=\"1-let-w-be-a-word-formed-from-reading-some-row-from-left-to-right-then-w-must-be-present-in-the-list\">1. Let \u2018W\u2019 be a word formed from reading some row from left to right then \u2018W\u2019 must be present in the list.</h4>\n\n<h4 id=\"2-let-w-be-a-word-formed-from-reading-some-column-from-top-to-down-then-w-must-be-present-in-the-list\">2. Let \u2018W\u2019 be a word formed from reading some column from top to down, then \u2018W\u2019 must be present in the list.</h4>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>If no such rectangle exists then you need to print 0.\n</code></pre>\n\n<h4 id=\"input-format\">Input Format</h4>\n\n<pre><code>The first line of input contains an integer &#39;T&#39; representing the number of test cases.\n\nThe first line of each test case contains a single integer \u2018N\u2019 denoting the length of the list of words.\n\nThe next \u2018N\u2019 lines contain a single string denoting the word of the given list.\n</code></pre>\n\n<h4 id=\"output-format\">Output Format:</h4>\n\n<pre><code>For each test case, print 0 if no such rectangle exists, else print the maximum area of the rectangle that can be formed.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints:</h4>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;=  N &lt;= 100\n1 &lt;= | WORD[ i ] | &lt;= 10\nWORD[ i ] contains only lowercase English letters.\n\nWhere \u2018T\u2019 is the number of test cases, \u2018N\u2019 is the length of the list and \u2018WORD[ i ]\u2019 is the word of the list at index i.\n\nTime limit: 1 sec.\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1:</h4>\n\n<pre><code>2\n1\naa\n2\naaa\nb\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1:</h4>\n\n<pre><code>4\n9\n</code></pre>\n\n<h4 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1:</h4>\n\n<pre><code>Test Case 1 :  \nGiven list = [ \u201caa\u201d]\nRectangle of area 4 is shown below\naa\naa \n\nTest Case 2 : \nGiven list = [ \u201caaa\u201d, \u201cb\u201d ]\nRectangle of area 9 is shown below\naaa\naaa\naaa\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2:</h4>\n\n<pre><code>2\n1\nabc \n2\ncoding\nninjas \n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2:</h4>\n\n<pre><code>0\n0\n</code></pre>\n\n<h4 id=\"explanation-of-sample-input-2\">Explanation of Sample Input 2:</h4>\n\n<pre><code>Test Case 1 :  \nGiven list = [ \u201cabc\u201d ]\nWe cannot form a rectangle of any area using the given list.\nSo we need to print 0.\n\nTest Case 2 : \nGiven list = [ \u201ccoding\u201d, \u201cninjas\u201d ] \nWe cannot form a rectangle of any area using the given list.\nSo we need to print 0.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 6,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a list of 'N' words, find the rectangle with the maximum area that can be formed using these words (zero or more times) subject to the following conditions:\n\n1.  If 'W' is a word formed by reading a row from left to right, 'W' must be present in the input list.\n2.  If 'W' is a word formed by reading a column from top to bottom, 'W' must be present in the input list.\n\nIf no such rectangle exists, return 0.",
                "constraints": [
                    "1 <= T <= 5 (where T is the number of test cases)",
                    "1 <= N <= 100 (where N is the length of the list of words)",
                    "1 <= |WORD[i]| <= 10 (where WORD[i] is the word at index i)",
                    "WORD[i] contains only lowercase English letters.",
                    "Time limit: 1 sec."
                ],
                "testcases": [
                    {
                        "input": "1\naa",
                        "output": "4",
                        "explanation": "The input list contains the word \"aa\". A rectangle of area 4 can be formed as:\naa\naa\nAll rows and columns form valid words from the list."
                    },
                    {
                        "input": "2\naaa\nb",
                        "output": "9",
                        "explanation": "The input list contains the words \"aaa\" and \"b\". A rectangle of area 9 can be formed as:\naaa\naaa\naaa\nAll rows and columns form valid words from the list."
                    },
                    {
                        "input": "1\nabc",
                        "output": "0",
                        "explanation": "It's impossible to construct a valid rectangle using only \"abc\". No row or column can form a word present in the list when a rectangle is attempted. Thus the answer is 0."
                    },
                    {
                        "input": "2\ncoding\nninjas",
                        "output": "0",
                        "explanation": "It's impossible to construct a valid rectangle using only \"coding\" and \"ninjas\". No row or column can form a word present in the list when a rectangle is attempted. Thus the answer is 0."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to form rectangles of all possible areas.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Depth-first Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Tries",
                "slug": "tries"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}