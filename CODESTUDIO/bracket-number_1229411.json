{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10471,
            "title": "Bracket Number",
            "titleSlug": "bracket-number_1229411",
            "content": "<h4 id=\"given-a-string-s-comprising-of-some-brackets-you-need-to-print-the-number-of-every-bracket\">Given a string \u2018S\u2019 comprising of some brackets. You need to print the number of every bracket.</h4>\n\n<h5 id=\"for-example\">For Example:</h5>\n\n<pre><code>If S = (pq)() \nThen the output will be 1 1 2 2. First pair of opening and closing brackets will get the same number and so does the 2nd pair.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 denoting the number of test cases.\n\nThe first line of each test case contains a string \u2018S\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print the number of every bracket separated by a space.\n\nOutput of each test case will be printed on a new line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 50\n1 &lt;= |S| &lt;= 10^5\n\nWhere \u2018|S|\u2019 is the length of a particular string.\n\nTime Limit: 1 Sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\nab(cd)(e)\n(zyz)\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>1 1 2 2\n1 1\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1:</h5>\n\n<pre><code>Test Case 1: In the given string, there are two pairs of brackets and the order is 1 1 2 2.\n\nTest Case 2: There is only one pair of brackets. So the number of brackets is 1 1.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n(())()\na(b(pq)(t))\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2</h5>\n\n<pre><code>1 2 2 1 3 3\n1 2 2 3 3 1\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation For Sample Input 2:</h5>\n\n<pre><code>Test Case 1: In the given string, there are three pairs of brackets and the order is 1 2 2 1 3 3.\n\nTest Case 2: In the given string, there are three pairs of brackets and the order is 1 2 2 3 3 1.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": -5,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string 'S' containing brackets, determine the number assigned to each bracket pair based on their nesting order. The first pair of brackets encountered is assigned the number 1, the next nested pair within that is assigned 2, and so on. Print the number assigned to each bracket in the string, separated by spaces.",
                "constraints": [
                    "1 <= T <= 50",
                    "1 <= |S| <= 10^5",
                    "Time Limit: 1 Sec"
                ],
                "testcases": [
                    {
                        "input": "ab(cd)(e)",
                        "output": "1 1 2 2",
                        "explanation": "The first pair of parentheses encompasses 'cd', and are labeled 1 1. The second pair encompasses 'e', and are labeled 2 2."
                    },
                    {
                        "input": "(zyz)",
                        "output": "1 1",
                        "explanation": "There is only one pair of brackets, so the output is 1 1."
                    },
                    {
                        "input": "(())()",
                        "output": "1 2 2 1 3 3",
                        "explanation": "The outermost brackets are numbered 1. Within the first pair, the nested brackets are numbered 2. The last independent set of brackets are number 3."
                    },
                    {
                        "input": "a(b(pq)(t))",
                        "output": "1 2 2 3 3 1",
                        "explanation": "The outermost brackets enclosing 'b(pq)(t)' are numbered 1. The next pair enclosing '(pq)(t)' is numbered 2.  The two inner pairs of parenthesis, '(pq)' and '(t)' are both numbered 3."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to iterate through entire string and take note of all starting and ending parenthesis.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Stacks & Queues",
                "slug": "stacks-&-queues"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}