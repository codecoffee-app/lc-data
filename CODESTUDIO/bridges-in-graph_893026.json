{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8547,
            "title": "Bridges in Graph",
            "titleSlug": "bridges-in-graph_893026",
            "content": "<h4 id=\"given-an-undirected-graph-of-v-vertices-and-e-edges-your-task-is-to-find-all-the-bridges-in-the-given-undirected-graph-a-bridge-in-any-graph-is-defined-as-an-edge-which-when-removed-makes-the-graph-disconnected-or-more-precisely-increases-the-number-of-connected-components-in-the-graph\">Given an undirected graph of V vertices and E edges. Your task is to find all the bridges in the given undirected graph. A bridge in any graph is defined as an edge which, when removed, makes the graph disconnected (or more precisely, increases the number of connected components in the graph).</h4>\n\n<h4 id=\"for-example\">For Example :</h4>\n\n<pre><code>If the given graph is :\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/screenshot-62-5893.png\" alt=\"graph\"></p>\n\n<pre><code>Then the edge between 0 and 4 is the bridge because if the edge between 0 and 4 is removed, then there will be no path left to reach from 0 to 4.and makes the graph disconnected, and increases the number of connected components.\n</code></pre>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>There are no self-loops(an edge connecting the vertex to itself) in the given graph.\n\nThere are no parallel edges i.e no two vertices are directly connected by more than 1 edge.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of input contains an integer T, the number of test cases.\n\nThe first line of each test case contains two single space-separated integers V, and E.\n\nFrom the second line onwards of each test case, the next &#39;E&#39; lines will denote the edges of the graph where every edge is defined by two single space-separated integers &#39;a&#39; and &#39;b&#39;, which signifies an edge between vertex &#39;a\u2019 and vertex &#39;b&#39;.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, \nIn the first line, print a single integer C denoting the count of bridges in the given graph.\n\nFrom the second line onwards of each test case, Print C lines, each line contains one edge i.e two space-separated integers a and b, where C denotes the number of bridges in the given graph.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>In the output format\nEach pair of vertices of a bridge will be sorted i.e the first value should be less than or equals to the second value.\n\nThe list of bridge edges will be sorted in non-decreasing order of their first value. In case if two pairs have the same first value, the pair with a smaller second value will come first.\n\nYou do not need to print or sort anything, it has already been taken care of. Just implement the given function. \n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 50\n1 &lt;= V &lt;= 10 ^ 3\nV-1 &lt;= E &lt;= 3 * 10^3\n0 &lt;= a, b &lt; V\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n5 4\n0 1\n3 1\n1 2\n3 4\n3 3\n0 1\n1 2\n2 0\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>4\n0 1\n1 2    \n1 3\n3 4\n0\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1 :</h5>\n\n<pre><code>For the first test case, the graph will be represented as \n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/screenshot-61-5894.png\" alt=\"graph\"></p>\n\n<pre><code>There are four bridges((0-1),(1-2),(1-3),(3-4)) in the above-given graph denoted by red lines.\nFor the second test case, there is no bridge present in the given graph.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>1\n6 7\n1 2\n1 0\n0 2\n0 4\n5 4\n5 3\n3 4\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>1\n0 4\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation for Sample Input 2 :</h5>\n\n<pre><code>For the first test case, the graph will be represented as \n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/screenshot-62-5893.png\" alt=\"graph\"></p>\n\n<pre><code>There is only one bridge((0-4)) in the above-given graph denoted by red lines.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 68,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an undirected graph represented by a list of edges, identify and return all the bridge edges. A bridge is an edge whose removal increases the number of connected components in the graph. The function should accept the number of vertices, the number of edges, and the edge list as input.",
                "constraints": [
                    "1 <= T <= 50",
                    "1 <= V <= 10 ^ 3",
                    "V-1 <= E <= 3 * 10^3",
                    "0 <= a, b < V"
                ],
                "testcases": [
                    {
                        "input": "v = 5, e = 4, edges = [[0, 1], [3, 1], [1, 2], [3, 4]]",
                        "output": "4\n0 1\n1 2\n1 3\n3 4",
                        "explanation": "The bridges are (0-1), (1-2), (1-3), and (3-4). Removing any of these edges will disconnect the graph or increase the number of connected components."
                    },
                    {
                        "input": "v = 3, e = 3, edges = [[0, 1], [1, 2], [2, 0]]",
                        "output": "0",
                        "explanation": "There are no bridges in this graph. Removing any edge does not disconnect the graph."
                    },
                    {
                        "input": "v = 6, e = 7, edges = [[1, 2], [1, 0], [0, 2], [0, 4], [5, 4], [5, 3], [3, 4]]",
                        "output": "1\n0 4",
                        "explanation": "The bridge is (0-4). Removing this edge will disconnect vertex 4 from the rest of the graph, or increase the connected components."
                    },
                    {
                        "input": "v = 4, e = 3, edges = [[0, 1], [1, 2], [2, 3]]",
                        "output": "3\n0 1\n1 2\n2 3",
                        "explanation": "The bridges are (0-1), (1-2), and (2-3). Removing any of these edges will disconnect the graph or increase the number of connected components."
                    },
                    {
                        "input": "v = 2, e = 1, edges = [[0, 1]]",
                        "output": "1\n0 1",
                        "explanation": "The edge (0-1) is a bridge because removing it disconnects the graph."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Think of brute force by not considering each edge one at a time and checking if the edge is bridge or not.</p>",
            "<p>Think of a solution to find all bridges in linear time using Depth First Traversal, there should be only one way between two nodes if they make a bridge.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Depth-first Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}