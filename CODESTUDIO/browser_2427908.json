{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 15247,
            "title": "Browser",
            "titleSlug": "browser_2427908",
            "content": "<h4 id=\"your-task-is-to-maintain-a-data-structure-that-supports-the-following-functions-of-a-web-browser\">Your task is to maintain a data structure that supports the following functions of a web browser.</h4>\n\n<pre><code>1- Browser(homepage): Set homepage of the browser\n\n2- Visit(url): Visit the url from the current page. It clears up all the forward history.\n\n3- Back(steps): Move \u2018steps\u2019 backward in the browser history\n\n4- Forward(steps): Move \u2018steps\u2019 forward in the browser history\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>If you can\u2019t move steps forward or backward, just return the last website that can be reached.\n\nThe Queries are in the given format-:\nThe first line of each query contains the string representing the homepage of the web browser.\n\n(1, url): Visit the url from the current page. \n\n(2, steps): Move \u2018steps\u2019 backward in the browser history.\n\n(3, steps): Move \u2018steps\u2019 forward in the browser history.\n</code></pre>\n\n<h5 id=\"for-example\">For example:</h5>\n\n<pre><code>You are queries as  [[\u201chomepage.com\u201d], [1 , \u201cfacebook.com\u201d], [1, \u201ccodingninjas.com\u201d],[2, 1], [3, 1]]\n1 query is the query that sets the homepage as \u201chomepage.com\u201d.\n2 query is the query to visit \u201cfacebook.com\u201d\n3 query is the query to visit \u201ccodingninjas.com\u201d\n4 query is the query that moves back one step to \u201cfacebook.com\u201d\n5 query is the query that moves forward one step to \u201ccodingninjas.com\u201d\n\nHence the answer is [\u201cfacebook.com\u201d, \u201ccodingninjas.com\u201d]\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains a single integer \u2018Q\u2019, representing the number of queries.\nThe next line contains the homepage.\nThe next \u2018Q-1\u2019 lines contain space-separated strings and integers denoting the queries. \n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>The output is a space-separated strings representing the output of the queries.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the function.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>5\nhomepage.com\n1 facebook.com\n1 codingninjas.com    \n2 1\n3 1\n</code></pre>\n\n<h5 id=\"explaination\">Explaination:</h5>\n\n<pre><code>1 query is the query that sets the homepage as \u201chomepage.com\u201d.\n2 query is the query to visit \u201cfacebook.com\u201d\n3 query is the query to visit \u201ccodingninjas.com\u201d\n4 query is the query that moves back one step to \u201cfacebook.com\u201d\n5 query is the query that moves forward one step to \u201ccodingninjas.com\u201d\n\nHence the answer is [\u201cfacebook.com\u201d, \u201ccodingninjas.com\u201d]\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1</h5>\n\n<pre><code>facebook.com codingninjas.com\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>4\nHomepage.com\n1 page.com\n2 3\n3 3\n</code></pre>\n\n<h5 id=\"sampe-output-2\">Sampe Output 2:</h5>\n\n<pre><code>Homepage.com page.com \n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>2 &lt;= Q &lt;= 10^5\n1 &lt;= |url| &lt;= 10^3\n1 &lt;= steps &lt;= 10^5\n\nTime Limit: 1 sec\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 32,
            "dislikes": "NA",
            "rephrased": {
                "body": "Implement a web browser history management system that supports the following functionalities:\n\n*   **Browser(homepage):** Initializes the browser with a given homepage.\n*   **Visit(url):** Navigates to a new URL, clearing any forward history.\n*   **Back(steps):** Moves backward in the browsing history by a specified number of steps.\n*   **Forward(steps):** Moves forward in the browsing history by a specified number of steps.\n\nIf attempting to move beyond the boundaries of the history (either backward or forward), the browser should remain at the furthest reachable page in that direction.",
                "constraints": [
                    "2 <= Q <= 10^5 (Number of queries)",
                    "1 <= |url| <= 10^3 (Length of the URL string)",
                    "1 <= steps <= 10^5 (Number of steps to move)"
                ],
                "testcases": [
                    {
                        "input": "5\nhomepage.com\n1 facebook.com\n1 codingninjas.com\n2 1\n3 1",
                        "output": "facebook.com codingninjas.com",
                        "explanation": "The browser starts at 'homepage.com'.  Visiting 'facebook.com' then 'codingninjas.com' adds them to the history.  Going back one step returns to 'facebook.com'.  Going forward one step returns to 'codingninjas.com'."
                    },
                    {
                        "input": "4\nHomepage.com\n1 page.com\n2 3\n3 3",
                        "output": "Homepage.com page.com",
                        "explanation": "The browser starts at 'Homepage.com'.  Visiting 'page.com' updates the history.  Trying to go back 3 steps from 'page.com' lands us to 'Homepage.com' as it is the furthest we can go back. Trying to go forward 3 steps from 'Homepage.com' which is not possible, keeps us on 'page.com' which is the furthest we can go forward"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>A Data structure in which you can go backwards and forwards</p>",
            "<p>Try to think of a data structure using last in, first out.</p>",
            "<p>&nbsp;Try to use only a single array.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Stacks & Queues",
                "slug": "stacks-&-queues"
            },
            {
                "name": "Linked List",
                "slug": "linked-list"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}