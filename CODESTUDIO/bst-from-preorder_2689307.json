{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 15734,
            "title": "BST from Preorder",
            "titleSlug": "bst-from-preorder_2689307",
            "content": "<h4 id=\"you-are-given-a-preorder-traversal-of-a-binary-search-tree-your-task-is-to-find-the-postorder-from-the-preorder\">You are given a preorder traversal of a binary search tree. Your task is to find the postorder from the preorder.</h4>\n\n<p><Br></p>\n\n<h4 id=\"return-the-root-of-the-bst-constructed-from-the-given-preorder-the-driver-code-will-then-use-this-root-to-print-the-post-order-traversal\">Return the root of the BST constructed from the given preorder. The driver code will then use this root to print the post-order traversal.</h4>\n\n<p><Br></p>\n\n<h5 id=\"for-example\">For example:</h5>\n\n<pre><code>You are given preOrder = [10, 5, 1, 7, 40, 50], the binary search tree from the given preorder traversal is \n</code></pre>\n\n<p><img src=\"https://ninjasfiles.s3.amazonaws.com/asset_0000000000000520_1635321572_TreeFromPreOrder.jpg\" alt=\"sample1\"></p>\n\n<pre><code>Hence the answer is [1, 7, 5, 50, 40, 10].\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains a single integer \u2018N\u2019 representing the size of the preorder array.\n\nThe second line contains \u2018N\u2019 space-separated integers representing the preorder traversal of the tree.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>The only line contains the postorder of the BST constructed from the given preorder.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the function.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1</h5>\n\n<pre><code>6\n8 5 1 7 10 12\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>1 7 5 12 10 8 \n</code></pre>\n\n<h5 id=\"explanation\">Explanation:</h5>\n\n<pre><code>preOrder = [8, 5, 1, 7, 10, 12], the binary search tree from the given preorder traversal is \n</code></pre>\n\n<p><img src=\"https://ninjasfiles.s3.amazonaws.com/asset_0000000000000521_1635323461_TreeFromPreOrder-Page-2.drawio.png\" alt=\"sample2\"></p>\n\n<pre><code>Hence the answer is [1, 5, 7, 10, 40, 50].\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>3\n1 3 2\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>2 3 1 \n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code> 1 &lt;= N &lt;= 10^5\n 1 &lt;= preorder[i] &lt;= 10^6\n\nTime Limit: 1 sec.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 43,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a preorder traversal of a binary search tree represented as a vector of integers, construct the BST and return its root node. The driver code will then perform a postorder traversal on the constructed tree and print the result.",
                "constraints": [
                    "1 <= N <= 10^5",
                    "1 <= preorder[i] <= 10^6",
                    "Time Limit: 1 sec."
                ],
                "testcases": [
                    {
                        "input": "preOrder = [10, 5, 1, 7, 40, 50]",
                        "output": "[1, 7, 5, 50, 40, 10]",
                        "explanation": "The binary search tree constructed from the preorder traversal [10, 5, 1, 7, 40, 50] has the following postorder traversal: [1, 7, 5, 50, 40, 10]."
                    },
                    {
                        "input": "preOrder = [8, 5, 1, 7, 10, 12]",
                        "output": "[1, 7, 5, 12, 10, 8]",
                        "explanation": "The binary search tree constructed from the preorder traversal [8, 5, 1, 7, 10, 12] has the following postorder traversal: [1, 7, 5, 12, 10, 8]."
                    },
                    {
                        "input": "preOrder = [1, 3, 2]",
                        "output": "[2, 3, 1]",
                        "explanation": "The binary search tree constructed from the preorder traversal [1, 3, 2] has the following postorder traversal: [2, 3, 1]."
                    },
                    {
                        "input": "preOrder = [5]",
                        "output": "[5]",
                        "explanation": "A single node BST has the same preorder and postorder traversals."
                    },
                    {
                        "input": "preOrder = [10, 8, 6, 9, 12, 11, 13]",
                        "output": "[6, 9, 8, 11, 13, 12, 10]",
                        "explanation": "A more complex BST example with a complete postorder traversal."
                    },
                    {
                        "input": "preOrder = [20, 10, 5, 15, 30, 25, 35]",
                        "output": "[5, 15, 10, 25, 35, 30, 20]",
                        "explanation": "A more complex BST example with a complete postorder traversal."
                    },
                    {
                        "input": "preOrder = [1,2,3,4,5]",
                        "output": "[5,4,3,2,1]",
                        "explanation": "A right skewed BST."
                    },
                    {
                        "input": "preOrder = [5,4,3,2,1]",
                        "output": "[1,2,3,4,5]",
                        "explanation": "A left skewed BST."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try using recursion</p>",
            "<p>Try using ranges for the index in the preorder array.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Binary Search Trees",
                "slug": "binary-search-trees"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}