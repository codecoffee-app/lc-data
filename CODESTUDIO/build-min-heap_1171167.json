{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10199,
            "title": "Build Min heap",
            "titleSlug": "build-min-heap_1171167",
            "content": "<h4 id=\"you-are-given-an-array-arr-of-integers-having-n-elements-your-task-is-to-convert-the-input-array-into-a-min-binary-heap\">You are given an array &#39;ARR&#39; of integers having &#39;N&#39; elements. Your task is to convert the input array into a min-Binary Heap.</h4>\n\n<h4 id=\"a-min-binary-heap-is-a-complete-binary-tree-in-which-the-value-of-each-internal-node-is-smaller-than-or-equal-to-the-values-of-the-children-of-that-node\">A min-Binary heap is a complete binary tree in which the value of each internal node is smaller than or equal to the values of the children of that node.</h4>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>1. Input array follows 0 - based indexing. \n\n2. After constructing the min-heap, the Left child of the &#39;i-th&#39; node should be present at the (2*i + 1)-th index if it exists.\n\n3. After constructing the min-heap, the Right child of the &#39;i-th&#39; node should be present at the (2*i + 2)-th index if it exists.\n\n4. Note that you do not need to create a tree, just update the array.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of the input contains an integer, &#39;T,\u2019 denoting the number of test cases.\n\nThe first line of each test case contains an integer \u2018N&#39;, denoting the number of elements in the array &#39;ARR&#39;.\n\nThe second line of each test case contains &#39;N&#39; space-separated integers denoting the array elements.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, the checker will print 1 if the returned array represents a valid min-heap. Otherwise, the checker will print 0.\n\nThe output of each test case will be printed on a new line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 10^4\n-10^9 &lt;= ARR[i] &lt;= 10^9\n\nWhere &#39;ARR[i]&#39; denotes the &#39;i-th&#39; element of the array &#39;ARR&#39;.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n5\n9 3 2 6 7 \n4\n1 3 2 4\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>1\n1\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1 :</h5>\n\n<pre><code>For the first test case:\nOne possible min-heap representation of the input array is the array [ 2, 3, 6, 7, 9 ]. Note that other arrays like [ 2, 6, 3, 9, 7 ], [ 2, 3, 6, 9, 7 ] also represent min-heap.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/bh-8029.png\" alt=\"input\"></p>\n\n<pre><code>For the second test case: \n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/bh-1-8030.png\" alt=\"input\"></p>\n\n<pre><code>The input array is already a min-heap, so we do not need to modify it.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n5\n1 3 5 4 6\n3\n8 9 0\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>1 \n1\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation For Sample Input 2 :</h5>\n\n<pre><code>For the first test case:\nOne possible min-heap representation of the input array is the array [ 1, 3, 5, 4, 6 ] which is the same as the input array. \n\nFor the second test case: \nOne possible min-heap representation of the input array is the array [ 0, 8, 9 ].\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 67,
            "dislikes": "NA",
            "rephrased": {
                "body": "You are given an array of integers. Your task is to convert this array into a min-Binary Heap in-place. A min-Binary heap is a complete binary tree where each internal node's value is less than or equal to the values of its children. The array represents the heap, and indexing is 0-based. Ensure that the left child of the i-th node is at index (2*i + 1) and the right child is at index (2*i + 2), if they exist.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10^4",
                    "-10^9 <= ARR[i] <= 10^9",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "5\n9 3 2 6 7",
                        "output": "1",
                        "explanation": "One possible min-heap representation of the input array [9, 3, 2, 6, 7] is [2, 3, 6, 7, 9].  Other valid min-heap arrangements are also possible."
                    },
                    {
                        "input": "4\n1 3 2 4",
                        "output": "1",
                        "explanation": "The input array [1, 3, 2, 4] is already a valid min-heap."
                    },
                    {
                        "input": "5\n1 3 5 4 6",
                        "output": "1",
                        "explanation": "The input array [1, 3, 5, 4, 6] is already a valid min-heap."
                    },
                    {
                        "input": "3\n8 9 0",
                        "output": "1",
                        "explanation": "One possible min-heap representation of the input array [8, 9, 0] is [0, 8, 9]."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to think of an approach that travels the array from right to left and recursively convert the array into a heap.&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Heap",
                "slug": "heap"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}