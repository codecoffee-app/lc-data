{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 13944,
            "title": "Build Sorted Linked List",
            "titleSlug": "build-sorted-linked-list_1825400",
            "content": "<h4 id=\"you-have-given-two-sorted-linked-lists-first-and-second-your-task-is-to-build-a-new-sorted-list-which-contains-the-elements-of-given-two-sorted-linked-list\">You have given two sorted linked lists &#39;FIRST&#39; and &#39;SECOND&#39;. Your task is to build a new sorted list which contains the elements of given two sorted linked list.</h4>\n\n<h4 id=\"for-example\">For example:</h4>\n\n<pre><code>If the first list is: 1 -&gt; 2 -&gt; 3 -&gt; NULL and the second list is: 2 -&gt; 3 -&gt; 5 -&gt; NULL\n\nThen new sorted linked list will be  1 -&gt; 2 -&gt; 2 -&gt; 3 -&gt; 3 -&gt; 5 -&gt; NULL.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer &#39;T&#39; representing the number of test cases or queries to be processed. Then the test case follows.\n\nThe first line of each test case contains the elements of the first linked list separated by a single space and terminated by -1. Hence, -1 would never be a list element.\n\nThe second line of each test case contains the elements of the second linked list separated by a single space and terminated by -1.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, return the new sorted linked list. The elements of the linked list must be separated by a single space and terminated by -1.\n\nPrint output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You are not required to print the expected output, it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n0 &lt;= | FIRST |, | SECOND | &lt;= 10^5\n1 \u2264 DATA \u2264 10^6 and DATA != -1\n\nTime Limit: 1 sec \n</code></pre>\n\n<h4 id=\"follow-up\">Follow-up:</h4>\n\n<pre><code>Try to solve this problem in linear time complexity and constant space complexity.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n1 2 3 -1\n2 3 5 -1\n7 8 -1\n1 3 4 6 -1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>1 2 2 3 3 5 -1\n1 3 4 6 7 8 -1\n</code></pre>\n\n<h5 id=\"explanation-of-input-1\">Explanation of Input 1:</h5>\n\n<pre><code>The first test case, refer example&#39;s explanation.\n\nThe second test case, the first list is: 7 -&gt; 8 -&gt; NULL\nThe second list is: 1 -&gt; 3 -&gt; 4 -&gt; 6 -&gt; NULL\nThe final list would be: 1 -&gt; 3 -&gt; 4 -&gt; 6 -&gt; 7 -&gt; 8 -&gt; NULL\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n5 -1\n1 3 6 10 -1\n1 1 1 -1\n1 1 1 -1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2</h5>\n\n<pre><code>1 3 5 6 10 -1\n1 1 1 1 1 1 -1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 8,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two sorted singly linked lists, `first` and `second`, merge them into a single sorted linked list. The resulting list should contain all the nodes from both input lists in non-decreasing order.",
                "constraints": [
                    "1 <= T <= 10",
                    "0 <= |FIRST|, |SECOND| <= 10^5",
                    "1 <= DATA <= 10^6 and DATA != -1"
                ],
                "testcases": [
                    {
                        "input": "first=[1, 2, 3], second=[2, 3, 5]",
                        "output": "1 2 2 3 3 5 -1",
                        "explanation": "Merging the two lists results in a sorted list containing all elements: 1 -> 2 -> 2 -> 3 -> 3 -> 5 -> NULL."
                    },
                    {
                        "input": "first=[7, 8], second=[1, 3, 4, 6]",
                        "output": "1 3 4 6 7 8 -1",
                        "explanation": "Merging the two lists results in a sorted list containing all elements: 1 -> 3 -> 4 -> 6 -> 7 -> 8 -> NULL."
                    },
                    {
                        "input": "first=[5], second=[1, 3, 6, 10]",
                        "output": "1 3 5 6 10 -1",
                        "explanation": "Merging the two lists results in a sorted list containing all elements: 1 -> 3 -> 5 -> 6 -> 10 -> NULL."
                    },
                    {
                        "input": "first=[1, 1, 1], second=[1, 1, 1]",
                        "output": "1 1 1 1 1 1 -1",
                        "explanation": "Merging the two lists results in a sorted list containing all elements: 1 -> 1 -> 1 -> 1 -> 1 -> 1 -> NULL."
                    },
                    {
                        "input": "first=[], second=[2,4,6]",
                        "output": "2 4 6 -1",
                        "explanation": "When the first list is empty, the resulting list is simply the second list."
                    },
                    {
                        "input": "first=[1,3,5], second=[]",
                        "output": "1 3 5 -1",
                        "explanation": "When the second list is empty, the resulting list is simply the first list."
                    },
                    {
                        "input": "first=[], second=[]",
                        "output": "-1",
                        "explanation": "When both lists are empty, the resulting list is empty."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}