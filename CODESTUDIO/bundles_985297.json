{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9433,
            "title": "Bundles",
            "titleSlug": "bundles_985297",
            "content": "<h4 id=\"you-are-given-integers-n-and-k-and-a-list-strlist-of-n-strings-you-are-supposed-to-divide-the-string-into-exactly-n-k-n-will-be-divisible-by-k-groups-and-each-group-must-consist-of-exactly-k-strings-each-string-must-belong-to-exactly-one-group-the-score-of-each-group-is-equal-to-the-length-of-the-longest-prefix-that-is-common-to-all-strings-of-that-group\">You are given integers \u2018N\u2019 and \u2018K\u2019, and a list &#39;STRLIST&#39; of \u2018N\u2019 strings. You are supposed to divide the string into exactly \u2018N/K\u2019(N will be divisible by K) groups and each group must consist of exactly \u2018K\u2019 strings. Each string must belong to exactly one group. The score of each group is equal to the length of the longest prefix that is common to all strings of that group.</h4>\n\n<h4 id=\"you-are-supposed-to-find-the-maximum-sum-of-scores-of-the-groups\">You are supposed to find the maximum sum of scores of the groups.</h4>\n\n<h5 id=\"example\">Example :</h5>\n\n<pre><code>{ \u201cabcdty\u201d, \u201cabcdqwse\u201d, \u201cabcfhjgt\u201d, \u201cabcdtt\u201d } \nThe score for this group of strings is 3, as all strings have the longest common prefix as \u201cabc\u201d.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 denoting the number of test cases. The test cases are as follows.\n\nThe first line of each test case contains two integers \u2018N\u2019 and \u2018K\u2019 separated by a single space. \u2018N\u2019 denotes the number of strings and \u2018K\u2019 denotes the size of each group.\n\nThe next \u2018N\u2019 lines contain a single string.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print a single line containing a single integer denoting the maximum sum of the scores of all groups.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don\u2019t need to print anything; It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= K &lt;= N &lt;= 100\n1 &lt;= |STRLIST[i]| &lt;= 1000\n\u201cSTRLIST[i]\u201d contains only lowercase english letters.\n\nWhere \u2018T\u2019 denotes the number of test cases, \u2018N\u2019 denotes the number of strings, \u2018K\u2019 denotes the size of each group of the strings, and |STRLIST[i]| denotes the length of the i\u2019th string.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n2 2\nhello\nworld\n4 2\naboard\ntail\nabove\ntower\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>0\n4\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1 :</h5>\n\n<pre><code>In the first test case, both the strings will be in 1 group and they don\u2019t have any common prefix hence the answer is 0.\n\nIn the second test case, we can form the groups as { \u201cabove, \u201caboard\u201d } and {\u201ctail\u201d, \u201ctower\u201d} , then the first group has a score of 3 and the second group has a score of 1. Hence the total score is 3+1=4.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n6 3\namazing\ngive\namagniz\nam\nhelp\ncode\n4 2\nhello\nhelp\nhome\nninja\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>2\n3\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-2\">Explanation of Sample Input 2 :</h5>\n\n<pre><code>In the first test case, it is optimal to choose one group as { \u201cam\u201d, \u201camazing\u201d, \u201camginza\u201d } and the second group as { \u201chelp\u201d, \u201ccode\u201d, \u201cgive\u201d }. The first group has a score of 2 while the second group has a score of 0. Hence, the total score is 2.\n\nIn the second test case, we can form the groups as { \u201chello, \u201chelp\u201d } and {\u201chome\u201d, \u201cninja\u201d}, then the first group has a score of 3 and the second group has a score of 0. Hence the total score is 3.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 36,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given integers N and K, and a list of N strings, STRLIST, divide the strings into exactly N/K groups, where each group contains exactly K strings. Each string must belong to exactly one group. The score of each group is the length of the longest common prefix of all strings in that group. Find the maximum sum of the scores of all the groups.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= K <= N <= 100",
                    "1 <= |STRLIST[i]| <= 1000",
                    "STRLIST[i] contains only lowercase English letters.",
                    "Where \u2018T\u2019 denotes the number of test cases, \u2018N\u2019 denotes the number of strings, \u2018K\u2019 denotes the size of each group of the strings, and |STRLIST[i]| denotes the length of the i\u2019th string.",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "2\n2 2\nhello\nworld\n4 2\naboard\ntail\nabove\ntower",
                        "output": "0\n4",
                        "explanation": "Test Case 1: The strings \"hello\" and \"world\" form one group. Their longest common prefix has length 0, so the score is 0.\nTest Case 2: The strings can be grouped as {\"above\", \"aboard\"} and {\"tail\", \"tower\"}. The first group has a common prefix of \"abo\" (length 3) and the second group has a common prefix of \"t\" (length 1).  The total score is 3 + 1 = 4."
                    },
                    {
                        "input": "2\n6 3\namazing\ngive\namagniz\nam\nhelp\ncode\n4 2\nhello\nhelp\nhome\nninja",
                        "output": "2\n3",
                        "explanation": "Test Case 1: One optimal grouping is {\"am\", \"amazing\", \"amagniz\"} and {\"help\", \"code\", \"give\"}. The first group has a common prefix of \"am\" (length 2), and the second group has a common prefix of length 0. Total score = 2 + 0 = 2.\nTest Case 2: An optimal grouping is {\"hello\", \"help\"} and {\"home\", \"ninja\"}. The first group has a common prefix of \"hel\" (length 3) and the second group has a common prefix of length 0. Total score = 3 + 0 = 3."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you think about storing all prefixes of each string?</p>",
            "<p>Can you think of an efficient data structure to compare prefixes?</p>",
            "<p>&nbsp;Can you think of improving the access time of a node in trie?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}