{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10760,
            "title": "Busy ninja",
            "titleSlug": "busy-ninja_1264301",
            "content": "<h4 id=\"ninja-is-doing-an-offline-course-that-has-a-duration-of-n-days-after-attending-the-course-the-ninja-gains-some-experience-exp-i-for-the-day-i-on-some-days-the-ninja-is-busy-and-will-not-be-able-to-attend-the-course-hence-not-gaining-any-experience-on-that-day-if-busy-i-1-then-the-ninja-is-busy-on-day-i-otherwise-if-busy-i-0-the-ninja-attends-the-course-on-day-i-to-get-the-most-out-of-the-course-the-ninja-can-focus-for-k-days-straight-only-once-during-the-course-attending-the-course-every-day-for-these-k-consecutive-days-you-are-given-two-arrays-exp-and-busy-each-of-size-n-you-are-also-given-an-integer-k-the-task-is-to-find-the-maximum-experience-that-the-ninja-can-gain-from-this-course\">Ninja is doing an offline course that has a duration of \u2018N\u2019 days. After attending the course, the ninja gains some experience \u2018EXP[i]\u2019 (for the day \u2018i\u2019). On some days, the ninja is busy and will not be able to attend the course, hence not gaining any experience on that day. If \u2018BUSY[i] = 1\u2019, then the ninja is busy on day \u2018i\u2019. Otherwise, if \u2018BUSY[i] = 0\u2019, the ninja attends the course on day \u2018i\u2019. To get the most out of the course, the ninja can focus for \u2018K\u2019 days straight (only once during the course), attending the course every day for these \u2018K\u2019 consecutive days. You are given two arrays, \u2018EXP\u2019 and \u2018BUSY\u2019, each of size \u2018N\u2019. You are also given an integer \u2018K\u2019. The task is to find the maximum experience that the ninja can gain from this course.</h4>\n\n<h5 id=\"example\">Example :</h5>\n\n<pre><code>\u2018N\u2019 = 6, \u2018K\u2019 = 3\n\u2018EXP\u2019 = [1, 4, 2, 2, 3, 6]\n\u2018BUSY\u2019 = [0, 1, 1, 0, 0, 1]\nTo get the maximum experience ninja has to focus on the last \u20183\u2019 days. The maximum experience gained will be = 1 + 2 + 3 + 6 = 12. So, the answer is 12.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 which denotes the number of test cases. Then, the \u2018T\u2019 test cases follow.\n\nThe first line of each test case contains two space-integer \u2018N\u2019 and \u2018K\u2019 denoting the course duration and the number of days ninja can focus on the course.\n\nThe second line of each test case contains \u2018N\u2019 space-separated integers representing the array \u2018EXP\u2019.\n\nThe third line of each test case contains \u2018N\u2019 space-separated integers representing the array \u2018BUSY\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For every test case, print a single line containing a single integer denoting the maximum experience that the ninja can gain from this course.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= N &lt;= 1000\n0 &lt;= K &lt;= N\n0 &lt;= EXP[i] &lt;= 10 ^ 6\nBUSY[i] = {0, 1}\n\nTime limit: 1 second.\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1 :</h4>\n\n<pre><code>2\n7 4\n1 4 1 2 3 4 2\n0 1 1 0 1 1 0\n5 2\n1 2 3 4 5\n0 1 0 1 0\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1 :</h4>\n\n<pre><code>13\n13\n</code></pre>\n\n<h4 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1 :</h4>\n\n<pre><code>Test Case 1:\n\u2018n\u2019 = 7, \u2018k\u2019 = 4\n\u2018exp\u2019 = [1, 4, 1, 2, 3, 4, 2]\n\u2018busy\u2019 = [0, 1, 1, 0, 1, 1, 0]\nTo get the maximum experience ninja has to focus from day 1 to 4 (0-based). The maximum experience gained will be = 1 + 4 + 1 + 2 + 3 + 2 = 13. So, the answer is 13.\n\nTest Case 2:\n\u2018n\u2019 = 5, \u2018k\u2019 = 2\n\u2018exp\u2019 = [1, 2, 3, 4, 5]\n\u2018busy\u2019 = [0, 1, 0, 1, 0]\nTo get the maximum experience, the ninja has to focus on the last \u20182\u2019 days. The maximum experience gained will be = 1 + 3 + 4 + 5 = 13. So, the answer is 13.\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2 :</h4>\n\n<pre><code>2\n8 4\n5 6 3 2 4 5 6 1\n0 1 1 0 1 1 0 1\n4 1\n2 3 2 3\n0 1 0 1\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2 :</h4>\n\n<pre><code>26\n7\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 9,
            "dislikes": "NA",
            "rephrased": {
                "body": "A ninja is undertaking an offline course spanning 'N' days. Each day the ninja attends, they gain experience 'EXP[i]'. The ninja might be busy on certain days, denoted by 'BUSY[i] = 1', preventing them from gaining experience. Otherwise, 'BUSY[i] = 0' indicates attendance. To maximize learning, the ninja can choose a single stretch of 'K' consecutive days to focus intently, ensuring attendance on each of those days. Given the 'EXP' and 'BUSY' arrays of size 'N', and the focus duration 'K', determine the maximum achievable experience.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= N <= 1000",
                    "0 <= K <= N",
                    "0 <= EXP[i] <= 10 ^ 6",
                    "BUSY[i] = {0, 1}"
                ],
                "testcases": [
                    {
                        "input": "exp=[1, 4, 2, 2, 3, 6], busy=[0, 1, 1, 0, 0, 1], n=6, k=3",
                        "output": "12",
                        "explanation": "The maximum experience is achieved by focusing on the last 3 days (index 3, 4, and 5).  Experience gained = 1 (day 0) + 2 (day 3) + 3 (day 4) + 6 (day 5) = 12."
                    },
                    {
                        "input": "exp=[1, 4, 1, 2, 3, 4, 2], busy=[0, 1, 1, 0, 1, 1, 0], n=7, k=4",
                        "output": "13",
                        "explanation": "Focusing on days 0 to 3 (inclusive) yields the maximum experience. Experience gained = 1 + 4 + 1 + 2 + 3 + 2 = 13."
                    },
                    {
                        "input": "exp=[1, 2, 3, 4, 5], busy=[0, 1, 0, 1, 0], n=5, k=2",
                        "output": "13",
                        "explanation": "Focusing on the last two days (index 3 and 4) gives 1 + 3 + 4 + 5 = 13"
                    },
                    {
                        "input": "exp=[5, 6, 3, 2, 4, 5, 6, 1], busy=[0, 1, 1, 0, 1, 1, 0, 1], n=8, k=4",
                        "output": "26",
                        "explanation": "Focusing on days 0 to 3 gives the maximum experience 5+6+3+2+4+5+1 = 26"
                    },
                    {
                        "input": "exp=[2, 3, 2, 3], busy=[0, 1, 0, 1], n=4, k=1",
                        "output": "7",
                        "explanation": "Focusing on either day 0 or day 2 achieves the same maximum: 2+2+3=7 or 2+2+3=7"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Find experience gained for all combinations of \u2018K\u2019 consecutive days.</p>",
            "<p>Try to find the experience gained by focussing on \u2018K\u2019 days starting at day \u2018i\u2019 from that of \u2018K\u2019 days starting at day \u2018i - 1\u2019.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}