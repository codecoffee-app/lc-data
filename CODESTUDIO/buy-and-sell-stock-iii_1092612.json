{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9817,
            "title": "Buy and Sell Stock - III",
            "titleSlug": "buy-and-sell-stock-iii_1092612",
            "content": "<h4 id=\"given-an-array-prices-in-prices-the-ith-element-is-the-price-of-the-stock-on-the-ith-day-your-task-is-to-find-maximum-profit-at-the-end-of-the-ith-day-you-may-complete-at-max-2-transactions\">Given an array &quot;prices&quot;. In &quot;prices&quot; the ith element is the price of the stock on the ith day. Your task is to find maximum profit at the end of the ith day. You may complete at max 2 transactions.</h4>\n\n<h4 id=\"you-can-perform-a-transition-with-these-conditions\">You can perform a transition with these conditions -</h4>\n\n<pre><code>1. Not allowed to engage in more than 1 transaction at a time, which means if you have bought stock then you can buy another stock before selling the first stock.\n\n2. If you bought a stock at \u2018X\u2019 price and sold it at \u2018Y\u2019 price then the profits \u2018Y - X\u2019.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>It is not compulsory to perform an exact &#39;2&#39; transaction.\n</code></pre>\n\n<h5 id=\"input-format\">Input format:</h5>\n\n<pre><code>The first line of input contains an integer &#39;T&#39; denoting the number of test cases.\n\nThe first line of each test case contains a single integer &#39;N&#39;, &#39;N&#39; denotes the length of array \u2018prices\u2019.\n\nThe second line of each test case contains an &#39;N&#39; space-separated integers, in which every integer denotes an element of the array &quot;prices&quot;. \n</code></pre>\n\n<h5 id=\"output-format\">Output Format</h5>\n\n<pre><code>For each test case, you need to print the maximum profit made by selling the stocks.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You do not need to print anything; it has already been taken care of.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 50\n1 &lt;= N &lt;= 10^4\n0 &lt;= A[i] &lt;= 10^9\n\nTime limit: 1 second\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n7\n3 3 5 0 0 1 4\n6\n1 2 3 3 6 9\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>6\n8   \n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1:</h5>\n\n<pre><code>Test Case 1:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/screenshot-177-7347.png\" alt=\"subsequence\"></p>\n\n<pre><code>Buy the first stock at \u20180-th\u2019 day and sell at \u20182-nd\u2019 day - \u2018profit = 5 - 3 = 2\u2019\nBuy the second stock at \u20184\u2019th day and sell at \u20186\u2019th day - \u2018profit = 4 - 0 = 4\u2019\nTotal profit \u20182 + 4 = 6\u2019.\n\nTest Case 2:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/screenshot-173-7346.png\" alt=\"subsequence\"></p>\n\n<pre><code>Buy the stock at \u20180\u2019 day and sell at \u20185\u2019 day - \u2018profit = 9 - 1 = 8\u2019.\n\nSuppose we bought the first stock at \u20180-th \u2018 day and sold at \u20182-nd\u2019 then the profit will be \u20183 - 1 = 2\u2019 and second stock at \u20183-rd\u2019 day and sold at \u20185-th\u2019 day then the profit will be \u20189 - 3 = 6\u2019  so total profit \u20182 + 6 = 8\u2019.\nBut there is no other possibility to get more profit than \u20188\u2019.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n5   \n1 2 4 3 2\n4\n9 8 7 6 \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>3\n0\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 4,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of prices where the i-th element is the price of a stock on the i-th day, find the maximum profit you can achieve by completing at most two transactions. You are not allowed to hold more than one stock at a time (you must sell the stock before buying again). Profit is calculated as the difference between the selling price (Y) and the buying price (X), i.e., Y - X. It is not mandatory to perform exactly two transactions.",
                "constraints": [
                    "1 <= T <= 50",
                    "1 <= N <= 10^4",
                    "0 <= A[i] <= 10^9",
                    "Time limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "7\n3 3 5 0 0 1 4",
                        "output": "6",
                        "explanation": "One possible solution is to buy the stock on day 0 (price 3) and sell on day 2 (price 5) for a profit of 2. Then, buy the stock on day 4 (price 0) and sell on day 6 (price 4) for a profit of 4. The total profit is 2 + 4 = 6."
                    },
                    {
                        "input": "6\n1 2 3 3 6 9",
                        "output": "8",
                        "explanation": "The optimal solution is to buy the stock on day 0 (price 1) and sell on day 5 (price 9) for a profit of 8. Alternatively, buy on day 0 (price 1) sell on day 2 (price 3) (profit=2) then buy on day 3 (price 3) and sell on day 5 (price 9) (profit=6) total profit = 8."
                    },
                    {
                        "input": "5\n1 2 4 3 2",
                        "output": "3",
                        "explanation": "The optimal solution is to buy the stock on day 0 (price 1) and sell on day 2 (price 4) for a profit of 3."
                    },
                    {
                        "input": "4\n9 8 7 6",
                        "output": "0",
                        "explanation": "Since the prices are decreasing, it's not possible to make any profit."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to find all the possible combinations.</p>",
            "<p>Try to store the previous result.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}