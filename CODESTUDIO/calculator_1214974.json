{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10418,
            "title": "Calculator",
            "titleSlug": "calculator_1214974",
            "content": "<h4 id=\"you-are-given-a-string-s-of-length-n-representing-an-arithmetic-expression-your-task-is-to-compute-the-result-of-the-expression\">You are given a string &#39;S&#39; of length &#39;N&#39; representing an arithmetic expression. Your task is to compute the result of the expression.</h4>\n\n<h5 id=\"for-example\">For Example:</h5>\n\n<pre><code>If the given arithmetic expression is: \u201c2*3+5/6*3+15\u201d, then the output will be 23.5.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>1. The arithmetic expression consists of positive integers, +, -, *, and / (no parentheses).\n\n2. The given input will always be a valid arithmetic expression.\n\n3. There will be at least one integer in the given arithmetic equation.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of the input contains an integer T denoting the number of test cases.\n\nThe first line of each test case contains one integer N, as described in the problem statement.\n\nThe second line of each test case contains one string of length N, representing a valid arithmetic expression.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print a single line containing a single integer representing the result of the given arithmetic equation.\n\nThe output for each test case will be printed in a separate line.\n\nYour answer will be considered correct if its absolute or relative error doesn\u2019t exceed 10 ^ (-6).\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= Length of the given string, N &lt;= 30\nIt is guaranteed that the string will only be consisting of positive integers, +, -, * and / (no parentheses).\n0 &lt; positive integers &lt;= 15\n\nTime Limit: 1 sec.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1\n7\n2+3*6-7\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>13\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for sample input 1:</h5>\n\n<pre><code>The output is 13 since the equation will be evaluated as follows (2+3*6-7) \u2192 (2+18-7) \u2192 (20 - 7) \u2192 13.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\n9\n3*5+4/8-2\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>13.5\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation for sample input 2:</h5>\n\n<pre><code>The output is 13.5 since the equation will be evaluated as follows (3*5+4/8-2) \u2192  (15+0.5 -2) \u2192 (15.5 - 2) \u2192 13.5.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 2,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an arithmetic expression represented as a string 'S' of length 'N', evaluate the expression and return the result. The expression consists of positive integers, +, -, *, and / operators. The input expression is guaranteed to be valid and contains at least one integer. No parentheses are present.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= Length of the given string, N <= 30",
                    "The string will only be consisting of positive integers, +, -, * and / (no parentheses). 0 < positive integers <= 15"
                ],
                "testcases": [
                    {
                        "input": "n = 7, s = \"2+3*6-7\"",
                        "output": "13",
                        "explanation": "The expression is evaluated as follows: (2 + 3 * 6 - 7) -> (2 + 18 - 7) -> (20 - 7) -> 13."
                    },
                    {
                        "input": "n = 9, s = \"3*5+4/8-2\"",
                        "output": "13.5",
                        "explanation": "The expression is evaluated as follows: (3 * 5 + 4 / 8 - 2) -> (15 + 0.5 - 2) -> (15.5 - 2) -> 13.5."
                    },
                    {
                        "input": "n = 3, s = \"5+5\"",
                        "output": "10",
                        "explanation": "The expression is evaluated as follows: (5+5) -> 10."
                    },
                    {
                        "input": "n = 3, s = \"5-3\"",
                        "output": "2",
                        "explanation": "The expression is evaluated as follows: (5-3) -> 2."
                    },
                    {
                        "input": "n = 3, s = \"4*2\"",
                        "output": "8",
                        "explanation": "The expression is evaluated as follows: (4*2) -> 8."
                    },
                    {
                        "input": "n = 3, s = \"8/2\"",
                        "output": "4",
                        "explanation": "The expression is evaluated as follows: (8/2) -> 4."
                    },
                    {
                        "input": "n = 5, s = \"1+2*3\"",
                        "output": "7",
                        "explanation": "The expression is evaluated as follows: (1+2*3) -> (1+6) -> 7."
                    },
                    {
                        "input": "n = 5, s = \"6/2-1\"",
                        "output": "2",
                        "explanation": "The expression is evaluated as follows: (6/2-1) -> (3-1) -> 2."
                    },
                    {
                        "input": "n = 5, s = \"2*3+1\"",
                        "output": "7",
                        "explanation": "The expression is evaluated as follows: (2*3+1) -> (6+1) -> 7."
                    },
                    {
                        "input": "n = 5, s = \"1+8/2\"",
                        "output": "5",
                        "explanation": "The expression is evaluated as follows: (1+8/2) -> (1+4) -> 5."
                    },
                    {
                        "input": "n = 1, s = \"5\"",
                        "output": "5",
                        "explanation": "The expression is evaluated as follows: 5 -> 5."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you think of a<i> </i>data structure that can help you evaluate the equation using the precedence of the operators?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Stacks & Queues",
                "slug": "stacks-&-queues"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}