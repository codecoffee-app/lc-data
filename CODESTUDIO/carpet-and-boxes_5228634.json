{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 21537,
            "title": "Carpet and Boxes",
            "titleSlug": "carpet-and-boxes_5228634",
            "content": "<h4 id=\"you-are-given-n-boxes-of-width-1-unit-you-are-also-given-an-array-position-which-denotes-the-positions-of-the-boxes-e-g-position-i-denotes-the-position-of-the-ith-box-you-need-to-cover-any-k-boxes-with-a-carpet\">You are given &#39;N&#39; boxes of width 1 unit. You are also given an array &#39;POSITION&#39;  which denotes the positions of the boxes, e.g  POSITION[ i ] denotes the position of the ith box. You need to cover any &#39;K&#39; boxes with a carpet.</h4>\n\n<h4 id=\"find-the-minimum-length-of-the-carpet-to-cover-any-k-boxes\">Find the minimum length of the carpet to cover any &#39;K&#39; boxes.</h4>\n\n<h5 id=\"example\">Example:</h5>\n\n<pre><code>Input: \u2018N\u2019 = 3, \u2018K\u2019 = 2, &#39;POSITION&#39; = [2, 3, 6] \n\nOutput: 2\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/illustration-17332.png\" alt=\"\"></p>\n\n<pre><code> There are two possible ways to cover exactly two boxes. One covers the boxes at positions 2 and 3 and the other at positions 3 and 6. The carpet lengths required for both ways are 2 ( Since boxes are at positions 2 and 3 each having width 1) and 4, respectively. So the minimum length of the carpet is 2.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line will contain the integer &#39;T&#39;, denoting the number of test cases.\n\nThe first line of each test case contains two integers \u2018N\u2019 and \u2018K\u2019 denoting the length of the array &#39;POSITION&#39; and the number of boxes to be covered respectively.\nThe second line of each test case contains \u2018N\u2019 integers denoting the position of the boxes.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case, return the minimum length of the carpet to cover any \u2018K\u2019 boxes.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don&#39;t need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 10^5\nK &gt; 0\n1 &lt;= POSITION[i] &lt;= 10^9\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n4 3\n4 9 2 6\n2 1\n1 2\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>5\n1\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1 :</h5>\n\n<pre><code>For the first case:\nThere are two possible ways to cover exactly three boxes. One covers the boxes at positions 2, 4 and 6 and the other at positions 4, 6 and 9. The carpet lengths required for both ways are 5 and 6, respectively. So the minimum length of the carpet is 5. \n\nFor the second case:\nSince we need to cover only one box, the minimum length of the carpet is 1.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n5 2\n100 2 95 145 47 \n1 1\n100\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>6\n1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -8,
            "dislikes": "NA",
            "rephrased": {
                "body": "You are given 'N' boxes, each with a width of 1 unit. You are also given an array 'POSITION' representing the positions of these boxes. The goal is to find the minimum length of a carpet required to cover any 'K' boxes.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10^5",
                    "K > 0",
                    "1 <= POSITION[i] <= 10^9",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "4 3\n4 9 2 6",
                        "output": "5",
                        "explanation": "Given positions [2, 4, 6, 9], covering 3 boxes can be done in two ways: [2,4,6] or [4,6,9].  The length to cover [2,4,6] is (6 - 2) + 1 = 5.  The length to cover [4,6,9] is (9 - 4) + 1 = 6.  The minimum length is 5."
                    },
                    {
                        "input": "2 1\n1 2",
                        "output": "1",
                        "explanation": "Since only one box needs to be covered, the carpet length will always be 1 (the width of a single box)."
                    },
                    {
                        "input": "5 2\n100 2 95 145 47",
                        "output": "6",
                        "explanation": "After sorting, the positions are [2, 47, 95, 100, 145]. We need to choose 2 positions such that the difference between them is minimum. Calculating (47-2+1)=46, (95-47+1) = 49, (100-95+1) = 6, (145-100+1) = 46"
                    },
                    {
                        "input": "1 1\n100",
                        "output": "1",
                        "explanation": "Since only one box needs to be covered, the carpet length will always be 1 (the width of a single box)."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you think about some straightforward solution?</p>",
            "<p>Can you think of any two pointers solution?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}