{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 15886,
            "title": "Check AP Sequence",
            "titleSlug": "check-ap-sequence_2825053",
            "content": "<h4 id=\"you-are-given-an-array-containing-n-integers-you-need-to-find-if-it-s-possible-to-convert-the-given-sequence-into-an-arithmetic-progression-by-rearranging-the-array-elements-print-true-if-it-is-possible-else-print-false\">You are given an array containing \u2018N\u2019 integers. You need to find if it\u2019s possible to convert the given sequence into an Arithmetic Progression by rearranging the array elements, print \u201ctrue\u201d if it is possible, else print \u201cfalse\u201d.</h4>\n\n<h5 id=\"for-example\">For Example :</h5>\n\n<pre><code>If \u2018N\u2019 = 5, \u2018ARR\u2019 = {2, 4, 10, 8, 6}\n\nYou can rearrange \u2018ARR\u2019 to now become {2, 4, 6, 8, 10} this is an arithmetic progression. Therefore we will print \u201ctrue\u201d.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 denoting the number of test cases, then each test case follows:\n\nThe first line of each test case contains a single integer \u2018N\u2019, denoting the number of elements in the array.\n\nThe second line of each test case contains N integers \u2018ARR\u2019, denoting the array elements.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print \u201ctrue\u201d if the given array can be rearranged to form an A.P., else print \u201cfalse\u201d.\n\nOutput for each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You are not required to print anything; it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 \u2264 T \u2264 10      \n3 \u2264 N \u2264 5000\n-10^9 \u2264 ARR[i] \u2264 10^9\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n5\n2 4 10 8 6\n4\n2 4 6 9\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>true\nfalse\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1 :</h5>\n\n<pre><code>For test case 1 :\nWe will print \u201ctrue\u201d because:\nThen given array can be rearranged as {2, 4, 6, 8, 10} which is an AP.\n\nFor test case 2 : \nWe will print \u201cfalse\u201d because:\nThere is no way to rearrange the input array so that it forms an AP.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n5\n2 4 8 16 32\n6\n1 1 1 1 1 1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>false\ntrue\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -8,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of 'N' integers, determine if it's possible to rearrange the array elements to form an arithmetic progression. Return \"true\" if possible, otherwise return \"false\".",
                "constraints": [
                    "1 \u2264 T \u2264 10",
                    "3 \u2264 N \u2264 5000",
                    "-10^9 \u2264 ARR[i] \u2264 10^9",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "5\n2 4 10 8 6",
                        "output": "true",
                        "explanation": "The array can be rearranged to form the arithmetic progression {2, 4, 6, 8, 10}."
                    },
                    {
                        "input": "4\n2 4 6 9",
                        "output": "false",
                        "explanation": "There is no way to rearrange the input array to form an arithmetic progression."
                    },
                    {
                        "input": "5\n2 4 8 16 32",
                        "output": "false",
                        "explanation": "There is no rearrangement of the array that forms an arithmetic progression."
                    },
                    {
                        "input": "6\n1 1 1 1 1 1",
                        "output": "true",
                        "explanation": "The array already forms an arithmetic progression with a common difference of 0."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to sort the array and then check for AP sequence.</p>",
            "<p>Calculate the difference between the smallest and largest element and try to remove the need for sorting somehow!</p>"
        ],
        "relatedTopics": [
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}