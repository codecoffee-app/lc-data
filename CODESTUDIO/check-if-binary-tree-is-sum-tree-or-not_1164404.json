{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10105,
            "title": "Check if binary tree is sum tree or not",
            "titleSlug": "check-if-binary-tree-is-sum-tree-or-not_1164404",
            "content": "<h4 id=\"you-are-given-an-arbitrary-binary-tree-consisting-of-n-nodes-where-each-node-is-associated-with-a-certain-value-you-need-to-check-whether-the-given-tree-is-a-sum-tree-or-not\">You are given an arbitrary binary tree consisting of N nodes where each node is associated with a certain value. You need to check whether the given tree is a sum tree or not.</h4>\n\n<h4 id=\"a-binary-tree-is-a-sum-tree-if-the-value-of-each-node-is-equal-to-the-sum-of-nodes-present-in-the-left-and-the-right-subtree-an-empty-tree-is-a-sum-tree-with-0-sums-a-leaf-node-is-also-considered-a-sum-tree-with-a-sum-equal-to-the-value-of-the-leaf-node\">A binary tree is a sum tree if the value of each node is equal to the sum of nodes present in the left and the right subtree. An empty tree is a sum tree with 0 sums. A leaf node is also considered a sum tree with a sum equal to the value of the leaf node.</h4>\n\n<h4 id=\"input-format\">Input Format :</h4>\n\n<pre><code>The first line of the input contains a single integer T, representing the number of test cases. \n\nThe first line of each test case will contain the values of the tree\u2019s nodes in the level order form ( -1 for NULL node). Refer to the example for further clarification.\n</code></pre>\n\n<h4 id=\"example\">Example :</h4>\n\n<pre><code>Consider the binary tree\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/screenshot-from-2020-10-09-12-55-45-5134.png\" alt=\"altImage\"></p>\n\n<pre><code>The input of the tree depicted in the image above will be like: \n\n1\n2 3\n4 -1 5 6\n-1 7 -1 -1 -1 -1\n-1 -1\n\nExplanation :\nLevel 1 :\nThe root node of the tree is 1\n\nLevel 2 :\nLeft child of 1 = 2\nRight child of 1 = 3\n\nLevel 3 :\nLeft child of 2 = 4\nRight child of 2 = null (-1)\nLeft child of 3 = 5\nRight child of 3 = 6\n\nLevel 4 :\nLeft child of 4 = null (-1)\nRight child of 4 = 7\nLeft child of 5 = null (-1)\nRight child of 5 = null (-1)\nLeft child of 6 = null (-1)\nRight child of 6 = null (-1)\n\nLevel 5 :\nLeft child of 7 = null (-1)\nRight child of 7 = null (-1)\n\nThe first not-null node (of the previous level) is treated as the parent of the first two nodes of the current level. The second not-null node (of the previous level) is treated as the parent node for the next two nodes of the current level and so on.\n\nThe input ends when all nodes at the last level are null (-1).\n</code></pre>\n\n<h4 id=\"output-format\">Output Format :</h4>\n\n<pre><code>For each test case, print \u2018true\u2019 if the given binary tree is a sum tree else, print \u2018false\u2019. The output of each test case will be printed in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints :</h4>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= N &lt;= 3000\n\nTime Limit: 1sec\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1 :</h4>\n\n<pre><code>2\n3 1 2 -1 -1 -1 -1\n3 -1 1 2 -1 -1 -1\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1 :</h4>\n\n<pre><code>true\nfalse\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for sample input 1 :</h5>\n\n<pre><code>For the first test case, the given tree is\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/screenshot-from-2021-02-06-12-22-51-7858.png\" alt=\"\"></p>\n\n<pre><code>For each level, we can see that the value of each node is equal to the sum of the left and the right subtree.\n\nFor the second test case, the given tree is\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/screenshot-from-2021-02-06-12-24-30-7857.png\" alt=\"\"></p>\n\n<pre><code>We can see that the sum of a subtree of a node with root 1 is not equal to the value of the node. Hence, the answer is \u2018false\u2019.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 19,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a binary tree consisting of N nodes, where each node has a value, determine if it's a Sum Tree.\n\nA Sum Tree is a binary tree where the value of each node is equal to the sum of all the nodes in its left and right subtrees. An empty tree is considered a Sum Tree with a sum of 0. A leaf node is also considered a Sum Tree, with its sum equal to its own value.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= N <= 3000",
                    "Time Limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "3 1 2 -1 -1 -1 -1",
                        "output": "true",
                        "explanation": "The tree is a Sum Tree because each node's value is the sum of its children. Root is 3, its children are 1, 2 and 1 + 2 =3. Left child is 1 and right child is 2 which are leaf nodes."
                    },
                    {
                        "input": "3 -1 1 2 -1 -1 -1",
                        "output": "false",
                        "explanation": "The tree is not a Sum Tree. Root node is -1, left child is 1 and right child is 2. The sum of the children is 3, but the value of the root node is -1, hence the answer is false."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you use any kind of tree traversal to find the answer.</p>",
            "<p>Can you optimize the previous approach while still using the Depth First Search?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Depth-first Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Trees",
                "slug": "binary-trees"
            },
            {
                "name": "Trees",
                "slug": "trees"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}