{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9093,
            "title": "Check if given words are present in a string",
            "titleSlug": "check-if-given-words-are-present-in-a-string_975324",
            "content": "<h4 id=\"given-a-string-s-and-a-list-wordlist-that-consists-of-n-distinct-words-let-wi-denote-word-at-index-i-in-wordlist-for-each-word-wi-in-wordlist-you-need-to-determine-whether-it-is-present-in-string-s-or-not-return-a-boolean-array-where-a-boolean-value-at-index-i-represents-whether-the-word-wi-is-present-in-the-string-s-or-not\">Given a string &#39;S&#39; and a list &#39;wordList&#39; that consists of &#39;N&#39; distinct words. Let &#39;Wi&#39; denote word at index &#39;i&#39; in &#39;wordList&#39;. For each word &#39;Wi&#39; in &#39;wordList&#39;, you need to determine whether it is present in string &#39;S&#39; or not. Return a boolean array, where a boolean value at index \u2018i\u2019 represents whether the word \u2018Wi\u2019 is present in the string \u2018S\u2019 or not.</h4>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases.\n\nThe next \u20183*T\u2019 lines represent the \u2018T\u2019 test cases.\n\nThe first line of each test case contains the string \u2018S\u2019.\n\nThe second line of each test contains an integer \u2018N\u2019 representing the number of words in the \u2018wordList\u2019.\n\nThe third line of each test case contains the \u2018N\u2019 space-separated strings representing the words in the \u2018wordList\u2019. \n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print a boolean array where the value at index \u2018i\u2019 is \u2018True\u2019 if the word at index \u2018i\u2019 in the \u2018wordList\u2019 is present in string \u2018S\u2019 Otherwise, it is \u2018False\u2019. \n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>1. String \u2018S\u2019 consists of lowercase, uppercase alphabets, and spaces.\n2. String \u2018Wi\u2019 consists of lowercase and uppercase alphabets only.\n3. The word, \u2018Wi\u2019 is case sensitive.\n4. You can\u2019t use language-built-in string-matching methods.\n5. Don\u2019t print anything, just return the boolean array determining the presence or absence of the words present in \u2018wordList\u2019.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 50\n1 &lt;= |S| &lt;= 10^3\n1 &lt;= N &lt;= 10^3\n1 &lt;= |W| &lt;= 10\n\nWhere \u2018|S|\u2019 denotes the length of string and |W| denotes the maximum length of the word present in \u2018wordList\u2019.\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\nThis is a large String\n4\nThis this is age \nILikeCodingNinjas\n3\nNinja Coding Code\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>True False True False\nTrue True False\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1 :</h5>\n\n<pre><code>Test case 1:\n\nHere String \u2018S\u2019 is \u201cThis is a large String\u201d and \u2018wordList\u2019 is [\u201cThis\u201d, \u201cthis\u201d, \u201cis\u201d, \u201cage\u201d] \n\nThe word \u201cThis\u201d is present from index \u20180\u2019 to index \u20183\u2019 in \u2018S\u2019.\nThe word \u201cthis\u201d is not present in \u2018S\u2019.\nThe word \u201cis\u201d is present from index \u20182\u2019 to index \u20183\u2019\u2019 and from  \u20185\u2019 to index \u20186\u2019  in \u2018S\u2019. \nThe word  \u201cage\u201d is not present in \u2018S\u2019.\nNote:  All words are case sensitive and we consider 0 based indexing in &#39;S&#39;.\n\nTest case 2:\n\nHere String \u2018S\u2019 is \u201cILikeCodingNinjas\u201d and \u2018wordList\u2019 is [\u201cNinja\u201d \u201cCoding\u201d \u201cCode\u201d] \n\nThe word \u201cNinja\u201d is present from index \u201811\u2019 to index \u201815\u2019 in \u2018S\u2019.\nThe word \u201cCoding\u201d is present from index \u20185\u2019 to index \u201810\u2019 in \u2018S\u2019.\nThe word \u201cCode\u201d is not present in  \u2018S\u2019. \n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code> 3\n This is String\n 2\n This String\n Code Infy\n 3\n C I F\n coding\n 1\n CodingNinjas\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>True True \nTrue True False \nFalse \n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-2\">Explanation Of Sample Input 2 :</h5>\n\n<pre><code>Test case 1:\nHere String \u2018S\u2019 is \u201cThis is String\u201d and \u2018wordList\u2019 is [\u201cThis\u201d, \u201cString\u201d ] \n\nThe word \u201cThis\u201d is present from index \u20180\u2019 to index \u20183\u2019 in \u2018S\u2019.\nThe word  \u201cString\u201d is present from index \u20188\u2019 to index \u201813\u2019\u2019 in \u2018S\u2019. \n\nTest case 2:\n\nHere String \u2018S\u2019 is \u201cCode Infy\u201d and \u2018wordList\u2019 is [\u201cC\u201d \u201cI\u201d \u201cF\u201d] \n\nThe word \u201cC\u201d is present at index \u20180\u2019 \u2019 in \u2018S\u2019.\nThe word \u201cI\u201d  is present at index \u20185\u2019 in \u2018S\u2019.\nThe word \u201cF\u201d is not present in  \u2018S\u2019. \n\nTest case 3:\n\nHere String \u2018S\u2019 is \u201cCoding\u201d and \u2018wordList\u2019 is [\u201c CodingNinjas\u201d] \n\nThe word \u201cCodingNinjas\u201d is not in \u2018S\u2019.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 3,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string 'S' and a list 'wordList' containing 'N' distinct words, determine if each word in 'wordList' is present in 'S'. Return a boolean array where the i-th element indicates whether the i-th word in 'wordList' is found in 'S'. Case sensitivity is important.",
                "constraints": [
                    "1 <= T <= 50 (Number of test cases)",
                    "1 <= |S| <= 10^3 (Length of string S)",
                    "1 <= N <= 10^3 (Number of words in wordList)",
                    "1 <= |W| <= 10 (Maximum length of a word in wordList)",
                    "String 'S' consists of lowercase, uppercase alphabets, and spaces.",
                    "String 'Wi' consists of lowercase and uppercase alphabets only.",
                    "The word, \u2018Wi\u2019 is case sensitive.",
                    "You can\u2019t use language-built-in string-matching methods."
                ],
                "testcases": [
                    {
                        "input": "2\nThis is a large String\n4\nThis this is age \nILikeCodingNinjas\n3\nNinja Coding Code",
                        "output": "True False True False\nTrue True False",
                        "explanation": "Test case 1: 'This' is present, 'this' is not, 'is' is present, 'age' is not.\nTest case 2: 'Ninja' is present, 'Coding' is present, 'Code' is not."
                    },
                    {
                        "input": "3\nThis is String\n2\nThis String\nCode Infy\n3\nC I F\ncoding\n1\nCodingNinjas",
                        "output": "True True\nTrue True False\nFalse",
                        "explanation": "Test case 1: 'This' is present, 'String' is present.\nTest case 2: 'C' is present, 'I' is present, 'F' is not.\nTest case 3: 'CodingNinjas' is not present."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Iterate through all of the words in wordList, checking if each of them is contained in the \u2018S\u2019.</p>",
            "<p>Optimize the algorithm to check whether a given word is a substring of string \u2018S\u2019 by linear time pattern searching algorithm like Knuth\u2013Morris\u2013Pratt algorithm (KMP) or Rabin-Karp algorithm.</p>",
            "<p>Can we think of the Trie data structure to store all words of \u2018wordList\u2019?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Tries",
                "slug": "tries"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}