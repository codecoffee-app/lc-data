{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9665,
            "title": "Check if number is Binary",
            "titleSlug": "check-if-number-is-binary_1071951",
            "content": "<h4 id=\"given-a-string-of-integers-bin-return-true-if-the-string-represents-a-valid-binary-number-else-return-false-a-binary-number-is-a-number-that-has-only-0-or-1-in-it\">Given a string of integers \u2018bin\u2019. Return &#39;true&#39; if the string represents a valid binary number, else return &#39;false&#39;. A binary number is a number that has only 0 or 1 in it.</h4>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 representing the number of test cases. Then the test cases follow.\n\nThe first line of each testcase contains a single string \u2018bin\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, return a boolean value that is &#39;true&#39; if the string is binary and &#39;false&#39; if the string is not binary.\n\nThe output for each test case is printed on a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 50\n1 &lt;= length(bin) &lt;= 10^4\n\nWhere length(bin) is the length of the binary string.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>3\n1000\n20110\n101013\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>YES\nNO \nNO\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1:</h5>\n\n<pre><code>Test Case 1: \nWe see that the given string is \u201c1000\u201d. We can clearly see that all of the string elements are either \u20181\u2019 or \u20180\u2019. Therefore we return true and print YES in a new line.\n\nTest Case 2:\nWe see that the given string is \u201c20110\u201d. We can clearly see that the first string is not a binary string as the first element of the string is a \u20182\u2019 which is not a binary number. Therefore we return false and print \u201cNO\u201d in a new line.\n\nTest Case 3:\nWe see that the given string is \u201c101013\u201d. We can clearly see that the first string is not a binary string as the last element of the string is a \u20183\u2019 which is not a binary number. Therefore we return false and print \u201cNO\u201d in a new line.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>5\n1010111\n91102\n1010101\n000001\n122345\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>YES\nNO \nYES\nYES \nNO\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 3,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string 'bin' consisting of digits, determine if it represents a valid binary number. A valid binary number contains only the digits '0' and '1'. Return 'true' if the string is a valid binary number, and 'false' otherwise.",
                "constraints": [
                    "1 <= T <= 50",
                    "1 <= length(bin) <= 10^4",
                    "Where length(bin) is the length of the binary string."
                ],
                "testcases": [
                    {
                        "input": "bin = \"1000\"",
                        "output": "true",
                        "explanation": "The string \"1000\" contains only '0' and '1', so it is a valid binary number."
                    },
                    {
                        "input": "bin = \"20110\"",
                        "output": "false",
                        "explanation": "The string \"20110\" contains the digit '2', so it is not a valid binary number."
                    },
                    {
                        "input": "bin = \"101013\"",
                        "output": "false",
                        "explanation": "The string \"101013\" contains the digit '3', so it is not a valid binary number."
                    },
                    {
                        "input": "bin = \"1010111\"",
                        "output": "true",
                        "explanation": "The string \"1010111\" contains only '0' and '1', so it is a valid binary number."
                    },
                    {
                        "input": "bin = \"91102\"",
                        "output": "false",
                        "explanation": "The string \"91102\" contains the digits '9' and '2', so it is not a valid binary number."
                    },
                    {
                        "input": "bin = \"1010101\"",
                        "output": "true",
                        "explanation": "The string \"1010101\" contains only '0' and '1', so it is a valid binary number."
                    },
                    {
                        "input": "bin = \"000001\"",
                        "output": "true",
                        "explanation": "The string \"000001\" contains only '0' and '1', so it is a valid binary number."
                    },
                    {
                        "input": "bin = \"122345\"",
                        "output": "false",
                        "explanation": "The string \"122345\" contains digits other than '0' and '1', so it is not a valid binary number."
                    },
                    {
                        "input": "bin = \"\"",
                        "output": "true",
                        "explanation": "The empty string contains no invalid characters, so it's treated as a valid binary number according to the problem statement and common assumptions in similar problems (although technically not a binary number)."
                    },
                    {
                        "input": "bin = \"1\"",
                        "output": "true",
                        "explanation": "The string \"1\" contains only '0' and '1', so it is a valid binary number."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to find the answer recursively</p>",
            "<p>Try to find the answer iteratively</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}