{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 7176,
            "title": "Check Integer Overflow",
            "titleSlug": "check-integer-overflow_630410",
            "content": "<h4 id=\"you-have-given-two-32-bit-signed-integers-and-you-have-to-check-if-their-multiplication-will-overflow-32-bit-signed-integer-or-not\">You have given two 32 bit signed integers, and you have to check if their multiplication will overflow 32 bit signed integer or not.</h4>\n\n<h4 id=\"an-integer-overflow-occurs-when-you-attempt-to-store-inside-an-integer-variable-a-value-that-is-larger-than-the-maximum-value-the-variable-can-hold\">An integer overflow occurs when you attempt to store inside an integer variable a value that is larger than the maximum value the variable can hold.</h4>\n\n<h5 id=\"input-format\">Input format :</h5>\n\n<pre><code>The first line of input contains the first 32 bit signed integer &#39;A&#39;.\n\nThe second line of input contains the second 32 bit signed integer &#39;B&#39;.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>The only line of output contains &#39;true&#39; if the multiplication of &#39;A&#39; and &#39;B&#39; is overflowing in 32 bit signed integer or &#39;false&#39; otherwise.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>Return the expected boolean value from the function, no need to print anything.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>-2^31 &lt;= A &lt;= 2^31 - 1\n-2^31 &lt;= B &lt;= 2^31 - 1\n\nwhere &#39;A&#39; and &#39;B&#39; are the given integers.\nTime Limit: 0.5 sec.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>Try to solve this problem assuming you can only have 32 bit signed integers (Without using any typecasting to other datatypes)\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>127842721 \n9\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>false\n</code></pre>\n\n<h5 id=\"explanation-for-sample-output-1\">Explanation For Sample Output 1:</h5>\n\n<pre><code>The product of the given two numbers is 1150584489, which is less than 2^31. Hence the output is false.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>-1799120 \n-2323232\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>true\n</code></pre>\n\n<h5 id=\"sample-input-3\">Sample Input 3 :</h5>\n\n<pre><code>-78921277 \n1927279\n</code></pre>\n\n<h5 id=\"sample-output-3\">Sample Output 3 :</h5>\n\n<pre><code>true\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": -4,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two 32-bit signed integers, determine if their product will result in an overflow of a 32-bit signed integer. A 32-bit signed integer can represent values from -2^31 to 2^31 - 1. An overflow occurs when the result of a calculation exceeds this range.",
                "constraints": [
                    "-2^31 <= A <= 2^31 - 1",
                    "-2^31 <= B <= 2^31 - 1",
                    "Time Limit: 0.5 sec."
                ],
                "testcases": [
                    {
                        "input": "127842721\n9",
                        "output": "false",
                        "explanation": "The product of 127842721 and 9 is 1150584489, which falls within the range of a 32-bit signed integer. Therefore, there is no overflow."
                    },
                    {
                        "input": "-1799120\n-2323232",
                        "output": "true",
                        "explanation": "The product of -1799120 and -2323232 is 417990123040, which exceeds the maximum value that a 32-bit signed integer can hold, hence an overflow occurs."
                    },
                    {
                        "input": "-78921277\n1927279",
                        "output": "true",
                        "explanation": "The product of -78921277 and 1927279 is -152098605963983 which is less than the minimum value that a 32-bit signed integer can hold. Thus, an overflow occurs."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Think of the possibilities where the operation may result in an overflow.</p>",
            "<p>Consider positive and negative number in multiplication.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}