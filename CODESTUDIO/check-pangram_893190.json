{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8633,
            "title": "Check Pangram",
            "titleSlug": "check-pangram_893190",
            "content": "<h4 id=\"ninja-is-shifting-to-a-new-place-named-ninjagram-to-take-admission-to-the-new-school-the-teacher-gives-him-a-sentence-and-asks-him-to-check-whether-the-sentence-is-a-pangram\">Ninja is shifting to a new place named NinjaGram. To take admission to the new school, the teacher gives him a sentence and asks him to check whether the sentence is a pangram.</h4>\n\n<h4 id=\"a-word-or-a-sentence-is-called-a-pangram-if-it-contains-all-the-english-alphabet-letters\">A word or a sentence is called a pangram if it contains all the English alphabet letters.</h4>\n\n<h4 id=\"since-ninja-is-new-to-programming-he-doesn-t-have-much-experience-he-asks-you-to-solve-the-problem-can-you-help-ninja-figure-out-whether-the-sentence-is-a-pangram\">Since Ninja is new to programming, he doesn\u2019t have much experience; he asks you to solve the problem. Can you help Ninja figure out whether the sentence is a pangram?</h4>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases. The test cases follow.\n\nThe first line of each test case contains a number \u2018n\u2019 denoting the number of characters in the string.\n\nThe second line of each test case contains the string where the string characters can be both uppercase and lowercase.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, if Ninja managed to solve the problem, print \u201cYES\u201d else \u201cNO\u201d.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You are not required to print the expected output; it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1&lt;= T &lt;= 50\n1&lt;= n &lt;= 10^4\n\n\nWhere \u2019T\u2019 is the number of test cases, \u2018n\u2019 denotes the number of characters in the string.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n12\ntoosmallword\n35\nTheQuickBrownFoxJumpsOverTheLazyDog\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>NO\nYES\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1:</h5>\n\n<pre><code>In the first test case, the given string is \u201ctoosmallword\u201d which contains the characters [\u2018t\u2019,\u2019o\u2019,\u2019s\u2019,\u2019m\u2019,\u2019a\u2019,\u2019l\u2019,\u2019w\u2019,\u2019r\u2019,\u2019d\u2019], which doesn\u2019t contain all the 26 alphabetic characters. Hence the answer is \u201cNO\u201d.\n\n\nIn the second test case, the given string is \u201cTheQuickBrownFoxJumpsOverTheLazyDog\u201d which contains the characters: [\u2018t\u2019,\u2019h\u2019,\u2019e\u2019,\u2019q\u2019,\u2019u\u2019,\u2019i\u2019,\u2019c\u2019,\u2019k\u2019,\u2019b\u2019,\u2019r\u2019,\u2019o\u2019,\u2019w\u2019,\u2019n\u2019,\u2019f\u2019,\u2019x\u2019,\u2019j\u2019,\u2019m\u2019,\u2019p,\u2019\u2019s\u2019,\u2019v\u2019,\u2019l,\u2019a\u2019,\u2019z\u2019,\u2019y\u2019,\u2019 d\u2019,\u2019g\u2019], which contains all the 26 alphabetic characters. Hence the answer is \u201cYES\u201d.\n</code></pre>\n\n<p>Sample Input 2:</p>\n\n<pre><code>2\n16\nCodingNinjas\n10\nCodeStudio\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>NO\nNO\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation for Sample Input 2:</h5>\n\n<pre><code>In the first test case, the given string is \u201cCodingNinjas\u201d which contains the characters [\u2018c\u2019,\u2019o\u2019,\u2019d\u2019,\u2019i\u2019,\u2019n\u2019,\u2019g\u2019,\u2019i\u2019,\u2019j\u2019,\u2019a\u2019,\u2019s\u2019], which doesn\u2019t contain all the 26 alphabetic characters. Hence the answer is \u201cNO\u201d.\n\n\nIn the first test case, the given string is \u201cCodeStudio\u201d which contains the characters [\u2018c\u2019,\u2019o\u2019,\u2019d\u2019,\u2019e\u2019,\u2019s\u2019,\u2019t\u2019,\u2019u\u2019,\u2019i\u2019], which doesn\u2019t contain all the 26 alphabetic characters. Hence the answer is \u201cNO\u201d.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 38,
            "dislikes": "NA",
            "rephrased": {
                "body": "Ninja is learning to code and needs help determining if a sentence is a pangram. A pangram contains all 26 letters of the English alphabet, regardless of case. Given a sentence, determine if it is a pangram.",
                "constraints": [
                    "1 <= T <= 50",
                    "1 <= n <= 10^4",
                    "Where \u2019T\u2019 is the number of test cases, \u2018n\u2019 denotes the number of characters in the string.",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "2\n12\ntoosmallword\n35\nTheQuickBrownFoxJumpsOverTheLazyDog",
                        "output": "NO\nYES",
                        "explanation": "In the first test case, the string 'toosmallword' is missing several letters of the alphabet, so it is not a pangram. In the second test case, 'TheQuickBrownFoxJumpsOverTheLazyDog' contains all 26 letters of the alphabet, so it is a pangram."
                    },
                    {
                        "input": "2\n16\nCodingNinjas\n10\nCodeStudio",
                        "output": "NO\nNO",
                        "explanation": "In the first test case, the string 'CodingNinjas' is missing several letters of the alphabet, so it is not a pangram.  In the second test case, 'CodeStudio' also lacks all 26 letters and is not a pangram."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><strong>&nbsp;</strong>Will it be feasible to maintain a boolean array to check for each character in the string?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}