{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 16580,
            "title": "Chessboad Game",
            "titleSlug": "chessboad-game_3210621",
            "content": "<h4 id=\"there-is-a-chessboard-of-dimensions-15-x-15-and-alice-and-bob-start-playing-a-game-on-it-the-game-is-not-chess-and-involves-just-one-coin\">There is a chessboard of dimensions 15 X 15, and Alice and Bob start playing a game on it. The game is not chess, and involves just one coin.</h4>\n\n<h4 id=\"the-coordinates-of-the-top-left-cell-are-1-1-and-the-bottom-right-are-15-15-the-coin-is-initially-at-x-y-in-each-turn-the-player-whose-turn-it-is-can-move-the-coin-to-any-of-the-four-cells-provided-they-are-inside-the-board\">The coordinates of the top left cell are (1,1) and the bottom right are (15,15). The coin is initially at (x,y). In each turn, the player whose turn it is can move the coin to any of the four cells (provided they are inside the board):</h4>\n\n<pre><code>(x-2,y+1)\n(x-2,y-1)\n(x+1,y-2)\n(x-1,y-2)\n</code></pre>\n\n<h4 id=\"the-figure-below-shows-the-possible-moves-of-a-coin-at-5-4-an-8-x-8-board-is-given-in-the-image-but-in-the-problem-it-will-always-be-a-15-x-15-board\">The figure below shows the possible moves of a coin at (5,4) (An 8 x 8 board is given in the image, but in the problem, it will always be a 15 x 15 board).</h4>\n\n<p><img src=\"https://ninjasfiles.s3.amazonaws.com/asset_0000000000000573_1640933875_chessboard.png\" alt=\"\"></p>\n\n<h4 id=\"alice-makes-the-first-move-both-alice-and-bob-take-alternate-turns-and-move-until-it-is-not-possible-to-move-the-coin-anymore-the-player-unable-to-make-a-move-loses\">Alice makes the first move. Both Alice and Bob take alternate turns and move until it is not possible to move the coin anymore. The player unable to make a move loses.</h4>\n\n<h4 id=\"for-example\">For example:</h4>\n\n<pre><code>If there is a coin at (1,1), Bob wins the game as Alice can make no move to start the game.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains &#39;T&#39;, denoting the number of test cases.\nFor each Test :\nThe first line contains three space-separated integers, \u2019X\u2019 and \u2018Y\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each query, if Alice wins, print \u201cFirst\u201d and if Bob wins, print \u201cSecond\u201d..\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You are not required to print the expected output. It has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints -</h5>\n\n<pre><code>1 &lt;= &#39;T&#39; &lt;= 5 * 10^3\n1 &lt;= &#39;X&#39;,\u2019Y\u2019 &lt;= 15.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n5 2\n2 2\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1</h5>\n\n<pre><code>Second\nSecond\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1:</h5>\n\n<pre><code>For test case 1:\n</code></pre>\n\n<p><img src=\"https://ninjasfiles.s3.amazonaws.com/asset_0000000000000574_1640934049_sample.png\" alt=\"\"></p>\n\n<pre><code>Alice starts at the red square, and moves to either of the blue squares. However, whichever blue square Alice moves to, Bob can move to one of the green squares. It is not possible to make any moves from the green squares, and hence Bob wins. (Only the top 5 x 5 part of the board is shown).\n\nFor Test case 2:\n   Alice cannot make any move, so Bob wins. \n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\n2 3\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>First\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": -7,
            "dislikes": "NA",
            "rephrased": {
                "body": "Alice and Bob are playing a game on a 15x15 chessboard. The coin starts at position (x, y). Players take turns moving the coin according to these rules:\n\n*   (x-2, y+1)\n*   (x-2, y-1)\n*   (x+1, y-2)\n*   (x-1, y-2)\n\nThe moves must remain within the board (1 <= x <= 15, 1 <= y <= 15). Alice goes first. The player who cannot make a move loses. Determine who wins given the starting position (x, y).",
                "constraints": [
                    "1 <= T <= 5 * 10^3",
                    "1 <= X <= 15",
                    "1 <= Y <= 15"
                ],
                "testcases": [
                    {
                        "input": "5 2",
                        "output": "Second",
                        "explanation": "Alice starts at (5,2). Any move Alice makes, Bob can force a situation where Alice cannot make a move in the next turn, leading to Bob winning."
                    },
                    {
                        "input": "2 2",
                        "output": "Second",
                        "explanation": "Alice cannot make any valid move from (2,2) as all possible moves would take the coin off the board. Therefore, Bob wins."
                    },
                    {
                        "input": "2 3",
                        "output": "First",
                        "explanation": "Alice can make a valid move from (2,3). The optimal move from Alice leads her to win"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can we simulate all possible outcomes of the game?</p>",
            "<p><strong>&nbsp;</strong>Can we speed up the recursive approach by storing computed values?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}