{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 16528,
            "title": "Chocolates",
            "titleSlug": "chocolates_3189128",
            "content": "<h4 id=\"you-have-n-chocolates-and-k-empty-bags-your-task-is-to-pack-all-the-chocolates-in-these-bags-such-that-any-bag-can-have-any-number-of-chocolates-but-no-bag-remains-empty-please-note-that-all-the-chocolates-are-different-i-e-they-can-be-numbered-from-1-to-n-but-all-bags-are-identical\">You have &#39;N&#39; chocolates and &#39;K&#39; empty bags. Your task is to pack all the chocolates in these bags such that any bag can have any number of chocolates, but no bag remains empty. Please note that all the chocolates are different, i.e., they can be numbered from 1 to &#39;N&#39;, but all bags are identical.</h4>\n\n<h4 id=\"e-g-if-there-are-3-chocolates-and-2-bags-then-you-can-pack-the-chocolates-in-the-following-three-ways\">E.g., If there are 3 chocolates and 2 bags, then you can pack the chocolates in the following three ways -</h4>\n\n<pre><code>[1, 2] and [3].\n[2, 3] and [1].\n[1, 3] and [2].\n</code></pre>\n\n<h4 id=\"only-the-above-three-packings-are-considered-valid-some-more-packages-are-possible-for-example-packing-2-3-1-is-not-taken-because-1-3-2-is-already-considered-i-e-order-of-bags-and-the-order-of-chocolates-inside-a-bag-dont-matter\">Only the above three packings are considered valid. Some more packages are possible; for example, packing [{2}, {3, 1}] is not taken because [{1, 3}, {2}] is already considered, i.e., order of bags and the order of chocolates inside a bag don&#39;t matter.</h4>\n\n<h4 id=\"you-are-given-the-number-of-chocolates-n-and-the-number-of-bags-k-find-the-number-of-ways-to-pack-the-chocolates-return-your-answer-modulo-10-9-7\">You are given the number of chocolates &#39;N&#39; and the number of bags &#39;K&#39;. Find the number of ways to pack the chocolates. Return your answer modulo 10^9+7.</h4>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains &#39;T&#39;, denoting the number of tests.\nFor each Test :\n    The only line contains two space-separated integers, &#39;N&#39; and &#39;K&#39;, denoting the number of chocolates and bags, respectively.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test, print one integer, denoting the number of valid ways (modulo 10^9+7) to pack given &#39;N&#39; chocolates into &#39;K&#39; bags.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You are not required to print the expected output. It has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints -</h5>\n\n<pre><code>1 &lt;= &#39;T&#39; &lt;= 10\n1 &lt;= &#39;K&#39; &lt;= &#39;N&#39; &lt;= 10^3\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n3 2\n4 4\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>3\n1\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1:</h5>\n\n<pre><code>For case 1:\nThree valid packagings are as follows:\nAny one among [{1, 2}, {3}] , [{2, 1}, {3}] , [{3}, {1, 2}] and [{3}, {2, 1}], as all of these are considered same.\nAny one among [{2, 3}, {1}] , [{3, 2}, {1}] , [{1}, {2, 3}] and [{1}, {3, 2}].\nAny one among [{1, 3}, {2}] , [{3, 1}, {2}] , [{2}, {1, 3}] and [{2}, {3, 1}].\n\nFor Case 2:\nThe only way is to pack one chocolate in each bag.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>3\n3 1\n5 2\n6 3\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>1\n15\n90\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 6,
            "dislikes": "NA",
            "rephrased": {
                "body": "You are given 'N' distinct chocolates and 'K' identical empty bags. Your task is to determine the number of ways to pack all the chocolates into the bags such that no bag is empty. The order of chocolates within a bag and the order of the bags themselves do not matter. Calculate the number of valid packings modulo 10^9 + 7.",
                "constraints": [
                    "1 <= 'T' <= 10",
                    "1 <= 'K' <= 'N' <= 10^3",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "3 2",
                        "output": "3",
                        "explanation": "With 3 chocolates and 2 bags, the valid packings are:\n* {1, 2} and {3}\n* {2, 3} and {1}\n* {1, 3} and {2}\n\nNote that packings like {2}, {1,3} are equivalent to {1,3}, {2}."
                    },
                    {
                        "input": "4 4",
                        "output": "1",
                        "explanation": "With 4 chocolates and 4 bags, the only valid packing is to put one chocolate in each bag."
                    },
                    {
                        "input": "3 1",
                        "output": "1",
                        "explanation": "There is only one way to put 3 chocolates in one bag."
                    },
                    {
                        "input": "5 2",
                        "output": "15",
                        "explanation": "null"
                    },
                    {
                        "input": "6 3",
                        "output": "90",
                        "explanation": "null"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Select all the chocolates one by one, and find all possible ways to pack them.</p>",
            "<p>Can you see the same calculation multiple times in the Naive/Brute force approach?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}