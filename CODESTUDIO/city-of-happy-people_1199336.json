{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10281,
            "title": "City of Happy people",
            "titleSlug": "city-of-happy-people_1199336",
            "content": "<h4 id=\"ninja-is-traveling-to-a-happy-city-where-n-people-reside-in-the-city-the-happiness-of-each-person-is-represented-as-a-number-h-where-h-ranges-from-20-000-000-to-20-000-000-both-inclusive-the-happiness-of-each-person-in-the-city-is-given-in-an-array-list-happiness-where-happiness-i-represents-the-happiness-of-the-i-th-person\">Ninja is traveling to a Happy city where \u2018N\u2019 people reside. In the city, the happiness of each person is represented as a number \u2018H\u2019 where \u2018H\u2019 ranges from  -20,000,000 to 20,000,000 (both inclusive). The happiness of each person in the city is given in an array/list \u2018HAPPINESS\u2019 where  \u2018HAPPINESS[i]\u2019 represents the happiness of the i\u2019th person.</h4>\n\n<h4 id=\"ninja-wants-to-make-a-group-of-people-such-that-the-overall-happiness-of-the-group-sum-of-happiness-value-of-all-the-people-in-the-group-ranges-between-a-and-b-where-500-000-000-a-b-500-000-000-ninja-wants-to-know-in-how-many-ways-he-can-make-this-group\">Ninja wants to make a group of people such that the overall happiness of the group (sum of happiness value of all the people in the group) ranges between \u2018A\u2019 and \u2018B\u2019 where -500,000,000 \u2264 A \u2264 B \u2264 500,000,000. Ninja wants to know in how many ways he can make this group.</h4>\n\n<h5 id=\"for-example\">For example :</h5>\n\n<pre><code>For the given \u2018HAPPINESS[]\u2019 = \u2018[-1, 0, 3]\u2019 and \u2018A\u2019 = 0 , \u2018B\u2019 = 2. Following are the ways to group people such that the overall happiness of the group is between \u2018A\u2019 and \u2018B\u2019:\n\n[-1, 0, 3], the sum of all the happiness values of this group is 2.\n\n[-1, 3], the sum of all the happiness values of this group is 2.\n\n[0], the sum of all the happiness values of this group is 0.\n\n[ ], the sum of all the happiness values of this empty group is 0.\n\nSo the number of ways is 4.\n</code></pre>\n\n<h4 id=\"as-ninja-is-busy-with-some-other-task-so-he-asks-you-for-help-can-you-help-ninja-to-find-out-the-number-of-ways-in-which-he-can-pick-groups-so-that-the-overall-happiness-of-the-group-must-be-in-the-range-between-a-and-b\">As Ninja is busy with some other task so he asks you for help. Can you help Ninja to find out the number of ways in which he can pick groups so that the overall happiness of the group must be in the range between \u2018A\u2019 and \u2018B\u2019?</h4>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 which denotes the number of test cases or queries to be run. Then the test cases follow.\n\nThe first line of each test case contains three single space-separated integers \u2018N\u2019, \u2019A\u2019, and \u2018B\u2019 representing the number of elements in the array/list \u2018HAPPINESS\u2019 and the range in which happiness values of groups must reside respectively.\n\nThe next line of each test case contains \u2018N\u2019 single space-separated integers denoting the  \u2018HAPPINESS\u2019 values.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print the number of ways to pick groups so that the overall happiness of the group lies between \u2018A\u2019 and \u2018B\u2019 inclusive.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= \u2018T\u2019 &lt;= 100\n1 &lt;= \u2018N\u2019 &lt;= 34\n-20,000,000 \u2264 \u2018HAPPINESS[i]\u2019 \u2264 20,000,000\n-500,000,000 \u2264 \u2018A\u2019 \u2264 \u2018B\u2019 \u2264 500,000,000\n\nTime Limit: 1 second\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n2 1 1 \n1 2\n3 -1 1\n-1 1 2\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>1\n5\n</code></pre>\n\n<h5 id=\"explanation-for-sample-output-1\">Explanation For Sample Output 1 :</h5>\n\n<pre><code>For sample test case 1 : \n\nGiven \u2018HAPPINESS[]\u2019 = [1,2] , and \u2018A\u2019, and \u2018B\u2019 are 1 and 1 respectively. Following are all the possible groups with their overall happiness value:\n\n1. [1, 2], where the overall happiness value is 3.\n\n2. [1], where the overall happiness value is 1.\n\n3. [2], where the overall happiness value is 2.\n\n4. [ ], where the overall happiness value is 0.\n\nAs we can see, there is only 1 way to make a group in which overall happiness value lies between 1 and 1 inclusive that is [1].\n\n\nFor sample test case 2 : \n\nGiven \u2018HAPPINESS[]\u2019 = [-1,1,2] ,\u2018A\u2019, and \u2018B\u2019 are -1 and 1 respectively. Following are all the possible groups with their overall happiness value:\n\n1. [-1], where the overall happiness value is -1.\n\n2. [1], where the overall happiness value is 1.\n\n3. [2], where the overall happiness value is 2.\n\n4. [-1,1], where the overall happiness value is 0.\n\n5. [-1,2], where the overall happiness value is 1.\n\n6. [1,2], where the overall happiness value is 3.\n\n7. [-1,1,2], where the overall happiness value is 0.\n\nAs we can see there are 5 ways to make a group in which overall happiness value lies between -1 and 1 inclusive and that are  [-1], [1], [-1,1],  [-1,2], [-1,1,2].\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n3 -10 10\n1 3 5\n2 -4 -1 \n2 3 \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>8\n0\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 14,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of integers representing the happiness of individuals in a city, determine the number of ways to form a group such that the sum of the happiness values of the group falls within a specified range [A, B] (inclusive).",
                "constraints": [
                    "1 <= \u2018T\u2019 <= 100",
                    "1 <= \u2018N\u2019 <= 34",
                    "-20,000,000 \u2264 \u2018HAPPINESS[i]\u2019 \u2264 20,000,000",
                    "-500,000,000 \u2264 \u2018A\u2019 \u2264 \u2018B\u2019 \u2264 500,000,000",
                    "Time Limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "n = 3, happiness = [-1, 0, 3], a = 0, b = 2",
                        "output": "4",
                        "explanation": "The groups with happiness sums between 0 and 2 are: [-1, 0, 3] (sum = 2), [-1, 3] (sum = 2), [0] (sum = 0), and [] (sum = 0)."
                    },
                    {
                        "input": "n = 2, happiness = [1, 2], a = 1, b = 1",
                        "output": "1",
                        "explanation": "The groups are: [1, 2] (sum = 3), [1] (sum = 1), [2] (sum = 2), and [] (sum = 0). Only [1] has a sum between 1 and 1."
                    },
                    {
                        "input": "n = 3, happiness = [-1, 1, 2], a = -1, b = 1",
                        "output": "5",
                        "explanation": "The groups with happiness sums between -1 and 1 are: [-1] (sum = -1), [1] (sum = 1), [-1, 1] (sum = 0), [-1, 2] (sum = 1), and [-1, 1, 2] (sum = 2), [2], [1,2]. Therefore the required groups are [-1], [1], [-1,1],[-1,2],[-1,1,2]."
                    },
                    {
                        "input": "n = 3, happiness = [1, 3, 5], a = -10, b = 10",
                        "output": "8",
                        "explanation": "All possible combinations fall within the range [-10, 10]:[],[1],[3],[5],[1,3],[1,5],[3,5],[1,3,5]."
                    },
                    {
                        "input": "n = 2, happiness = [2, 3], a = -4, b = -1",
                        "output": "0",
                        "explanation": "No combinations of the happiness values result in a sum within the range [-4, -1]."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to use a brute force approach in this problem</p>",
            "<p>Try to break the \u2018HAPPINESS\u2019 down into two parts and think of using a binary search approach.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}