{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10548,
            "title": " Clearing the Forest",
            "titleSlug": "clearing-the-forest_1232649",
            "content": "<h4 id=\"ninja-lives-in-a-beautiful-city-known-as-byteland-a-grand-festive-event-is-going-to-be-organised-in-the-city-to-make-place-for-the-event-king-has-ordered-ninja-to-clear-the-nearby-forest-the-forest-can-be-represented-in-the-form-of-n-m-grid-forest-where-each-cell-of-forest-can-have-one-of-the-possible-values\">Ninja lives in a beautiful city known as Byteland. A grand festive event is going  to be organised in the city. To make place for the event, King has ordered Ninja to clear the nearby forest. The forest can be represented in the form of \u2018N\u2019*\u2018M\u2019 grid  \u2018FOREST\u2019, where each cell of \u2018FOREST\u2019 can have one of the possible values:</h4>\n\n<pre><code>0 -&gt; The cell is empty and Ninja can pass through it.\n\u2018X\u2019  -&gt; The cell contains a tree with a height equal to \u2018X\u2019 where  \u2018X\u2019 &gt; 0 and Ninja can pass through it.\n-1 -&gt; The cell can not be visited by Ninja.\n</code></pre>\n\n<h4 id=\"ninja-is-present-at-the-top-left-corner-of-forest-i-e-at-cell-0-0-and-he-has-to-cut-down-all-the-trees-in-forest-in-one-step-ninja-can-move-to-any-one-of-the-four-directions-east-west-north-south\">Ninja is present at the top left corner of \u2018FOREST\u2019 i.e. at cell(0,0) and he has to cut down all the trees in \u2018FOREST\u2019. In one step ninja can move to any one of the four directions: East, West, North, South.</h4>\n\n<h4 id=\"there-is-a-rule-that-ninja-must-cut-off-the-trees-in-order-from-shortest-to-tallest-and-after-cutting-a-tree-the-value-of-the-cell-will-become-0\">There is a rule that Ninja must cut off the trees in order from shortest to tallest and after cutting a tree, the value of the cell will become 0.</h4>\n\n<h4 id=\"while-standing-on-a-cell-with-a-tree-ninja-always-has-a-choice-to-cut-the-tree-or-pass-through-the-cell-it-is-guaranteed-that-no-two-cells-will-have-the-same-height-and-there-will-always-be-at-least-one-tree-that-need-to-be-cut-off\">While standing on a cell with a tree, Ninja always has a choice to cut the tree or pass through the cell. It is guaranteed that no two cells will have the same height and there will always be at least one tree that need to be cut off.</h4>\n\n<h4 id=\"your-task-is-to-help-ninja-to-cut-down-all-trees-in-forest-with-minimum-steps-and-return-the-number-of-steps\">Your task is to help Ninja to cut down all trees in \u2018FOREST\u2019 with minimum steps and return the number of steps.</h4>\n\n<h4 id=\"if-there-is-at-least-one-tree-that-can-not-be-cut-off-then-return-1\">If there is at least one tree that can not be cut off then return -1.</h4>\n\n<h4 id=\"for-example\">For example :</h4>\n\n<pre><code>If \u2018FOREST\u2019 is :\n[1,2,0]\n[-1,5,-1]\n[0,6,7]\n\nWe can see we need 4 steps to cut down all trees as shown below:\n</code></pre>\n\n<p><img src=\"https://ninjasfiles.s3.amazonaws.com/asset_0000000000000287_1615489405_sample_forest(2).png\" alt=\"Example\"></p>\n\n<pre><code>So, the output will be 4.\n</code></pre>\n\n<h4 id=\"input-format\">Input Format:</h4>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases. Then each test case follows.\n\nThe first line of each test case contains two single space-separated integers \u2018N\u2019 and \u2018M\u2019 representing the number of rows and columns in \u2018FOREST\u2019. \n\nThe next \u2018N\u2019 lines of each test case contain \u2018M\u2019 single space-separated integers denoting the values of \u2018FOREST\u2019.\n</code></pre>\n\n<h4 id=\"output-format\">Output format:</h4>\n\n<pre><code>For each test case, print a single line containing a singe integer representing the minimum number of steps to cut down all the trees.\n\nThe output of every test case will be printed in a separate line. \n</code></pre>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>You don\u2019t have to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints</h4>\n\n<pre><code>1 &lt;= T &lt;=10\n1 &lt;= N, M &lt;= 50\n-1 &lt;= FOREST[i] &lt;= 10 ^ 5\n\nWhere \u2018T\u2019 denotes the number of test cases, \u2018N\u2019 denotes the number of rows and \u2018M\u2019 denotes the number of columns of \u2018FOREST\u2019.\n\nTime limit: 1 second\n</code></pre>\n<h4 id=\"sample-input-1\">Sample input 1:</h4>\n\n<pre><code>1\n3 3\n5 0 7\n3 2 -1\n6 -1 1\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample output 1:</h4>\n\n<pre><code>-1\n</code></pre>\n\n<h4 id=\"explanation-for-sample-input-1\">Explanation for sample input 1:</h4>\n\n<pre><code>The forest can be represented as:\n</code></pre>\n\n<p><img src=\"https://ninjasfiles.s3.amazonaws.com/asset_0000000000000289_1615489428_sample_forest(1).png\" alt=\"Example\"></p>\n\n<pre><code>There is no way such that we can cut off all the trees in \u2018FOREST\u2019, so we will return -1.\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample input 2:</h4>\n\n<pre><code>2    \n3 3\n0 5 6\n2 3 7\n-1 -1 8\n1 1\n8    \n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample output 2:</h4>\n\n<pre><code>6\n0\n</code></pre>\n\n<h4 id=\"explanation-for-sample-input-2\">Explanation for sample input 2:</h4>\n\n<pre><code>For test case 1:\nWe can see from the below image that we need 6 steps to cut off all trees.\n</code></pre>\n\n<p><img src=\"https://ninjasfiles.s3.amazonaws.com/asset_0000000000000288_1615489418_sample_forest(3).png\" alt=\"Example\"></p>\n\n<pre><code>For test case 2:\nThe forest has only 1 tree at (0,0) and Ninja is also at (0,0), so he can cut off the tree without using any moves.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 7,
            "dislikes": "NA",
            "rephrased": {
                "body": "A ninja is tasked with clearing a forest represented as a grid. The ninja starts at the top-left corner (0, 0) and must cut down all trees in order of increasing height. After cutting a tree, the cell becomes empty (0). The ninja can move in four directions (East, West, North, South). The grid contains the height of each tree, empty cells (0), and impassable cells (-1).  Determine the minimum number of steps required to cut down all trees. If it's impossible to cut down all trees, return -1.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N, M <= 50",
                    "-1 <= FOREST[i][j] <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "forest = [[5, 0, 7], [3, 2, -1], [6, -1, 1]], n = 3, m = 3",
                        "output": "-1",
                        "explanation": "There is no way to cut down all the trees in increasing order of height as the tree with height 1 is not accessible before cutting other trees."
                    },
                    {
                        "input": "forest = [[0, 5, 6], [2, 3, 7], [-1, -1, 8]], n = 3, m = 3",
                        "output": "6",
                        "explanation": "The optimal path requires 6 steps. The trees are cut in the order of heights 2, 3, 5, 6, 7, 8."
                    },
                    {
                        "input": "forest = [[8]], n = 1, m = 1",
                        "output": "0",
                        "explanation": "The forest has only one tree at (0,0), and the ninja is already there, so no steps are needed."
                    },
                    {
                        "input": "forest = [[1,2,0],[-1,5,-1],[0,6,7]], n = 3, m = 3",
                        "output": "4",
                        "explanation": "The optimal path requires 4 steps."
                    },
                    {
                        "input": "forest = [[1,5],[2,3]], n = 2, m = 2",
                        "output": "2",
                        "explanation": "The optimal path requires 2 steps."
                    },
                    {
                        "input": "forest = [[1,-1],[-1,2]], n = 2, m = 2",
                        "output": "-1",
                        "explanation": "Tree of height 2 is not reachable after cutting tree of height 1."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you think of an algorithm that helps us find the shortest path between two points?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Matrices (2D Arrays)",
                "slug": "matrices-(2d-arrays)"
            },
            {
                "name": "Breadth-first Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}