{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9365,
            "title": "Closest Leaf To Given Node In Binary Tree",
            "titleSlug": "closest-leaf-to-given-node-in-binary-tree_983627",
            "content": "<h4 id=\"ninja-is-stuck-in-a-maze-which-is-in-a-form-of-a-binary-tree-he-needs-your-help-in-order-to-get-out\">Ninja is stuck in a maze which is in a form of a binary tree. He needs your help in order to get out.</h4>\n\n<h4 id=\"ninja-is-presently-at-the-node-x-the-only-exit-points-of-the-maze-are-the-leaf-nodes-of-the-tree-you-need-to-tell-him-the-distance-to-the-nearest-exit-point-from-his-current-location-this-will-help-him-decide-which-path-he-should-take-in-order-to-escape-from-the-maze\">Ninja is presently at the node \u2018X\u2019. The only exit points of the maze are the leaf nodes of the tree. You need to tell him the distance to the nearest exit point from his current location. This will help him decide which path he should take in order to escape from the maze.</h4>\n\n<h5 id=\"example\">Example:</h5>\n\n<p><img src=\"https://files.codingninjas.in/9365-sample-tree-1-6774.PNG\" alt=\"sample tree 1\"></p>\n\n<pre><code>Suppose, Ninja is stuck at node 62. The possible exit points in the maze are: 40, 10, and 20. From all the possible exit points the closest ones are 10 and 20 which are at a distance of 1 unit.\n</code></pre>\n\n<h5 id=\"input-format\">Input format:</h5>\n\n<pre><code>The very first line of input contains an integer &#39;T&#39; denoting the number of test cases. \n\nThe first of every test case contains the value of node \u2018X\u2019, i.e. Ninja\u2019s current position.\n\nThe second line of every test case contains elements of the binary tree in the level order form. The line consists of values of nodes separated by a single space. In case a node is null, we take -1 on its place.\n</code></pre>\n\n<h5 id=\"example\">Example:</h5>\n\n<pre><code>The level order input for the tree depicted in the above image would be :\n\n15 40 62 -1 -1 10 20 -1 -1 -1 -1\n</code></pre>\n\n<h4 id=\"explanation\">Explanation :</h4>\n\n<pre><code>Level 1 :\nThe root node of the tree is 15.\n\nLevel 2 :\nLeft child of 15 = 40\nRight child of 15 = 62\n\nLevel 3 :\nLeft child of 40 = null (-1)\nRight child of 40 = null (-1)\nLeft child of 62 = 10\nRight child of 62 = 20\n\nLevel 4 :\nLeft child of 10 = null (-1)\nRight child of 10 = null (-1)\nLeft child of 20 = null (-1)\nRight child of 20 = null (-1)\n\n15\n40 62\n-1 -1 10 20\n-1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"output-format\">Output format:</h5>\n\n<pre><code>For each test case, return the distance to the nearest exit point from Ninja\u2019s current location. \n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>1. Node \u2018X\u2019 will always be a unique value and will always be present in the tree.\n\n2. You don&#39;t need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= N &lt;= 3000\n1 &lt;= DATA &lt;= 10^5, DATA !=-1\n\nWhere &#39;N&#39; denotes the number of nodes in the tree and &#39;DATA&#39; denotes the node values of the tree.\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n62\n15 40 62 -1 -1 10 20 -1 -1 -1 -1\n2\n6 1 3 5 -1 -1 2 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>1\n0\n</code></pre>\n\n<h5 id=\"explanation-for-sample-output-1\">Explanation for Sample Output 1:</h5>\n\n<pre><code>In test case 1, Refer to the example given above in the problem description.\n\nIn test case 2, from the input we can say that 2 is already a leaf node and thus it is the exit and hence closest exit distance will be 0.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n3\n1 2 3 -1 -1 4 5 6 -1 -1 7 8 -1 -1 9 -1 -1 -1 -1\n4\n4 3 2 10 -1 3 1 -1 -1 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>2\n2\n</code></pre>\n\n<h5 id=\"explanation-for-sample-output-2\">Explanation for Sample Output 2:</h5>\n\n<pre><code>In test case 1, the tree given in the input can be represented as:-\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/9365-sample-tree-2-6775.PNG\" alt=\"sample tree 2\"></p>\n\n<pre><code>Ninja is stuck at node 3. The possible exit points in the maze are: 2, 8, and 9. From all the possible exit points the closest one is 2 which are at a distance of 2 units.\n\nIn test case 2, similarly we can notice that closest exit will be at distance 2.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 8,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a binary tree and a node value 'X', find the shortest distance from the node 'X' to the nearest leaf node in the tree. The maze exits are at the leaf nodes.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= N <= 3000",
                    "1 <= DATA <= 10^5, DATA !=-1"
                ],
                "testcases": [
                    {
                        "input": "root = [15, 40, 62, -1, -1, 10, 20, -1, -1, -1, -1], x = 62",
                        "output": "1",
                        "explanation": "Ninja is stuck at node 62. The possible exit points in the maze are: 40, 10, and 20. From all the possible exit points the closest ones are 10 and 20 which are at a distance of 1 unit."
                    },
                    {
                        "input": "root = [6, 1, 3, 5, -1, -1, 2, -1, -1, -1, -1], x = 2",
                        "output": "0",
                        "explanation": "The node 2 is already a leaf node, so the distance to the nearest exit point is 0."
                    },
                    {
                        "input": "root = [1, 2, 3, -1, -1, 4, 5, 6, -1, -1, 7, 8, -1, -1, 9, -1, -1, -1, -1], x = 3",
                        "output": "2",
                        "explanation": "Ninja is stuck at node 3. The possible exit points in the maze are: 2, 8, and 9. From all the possible exit points the closest one is 2 which are at a distance of 2 units."
                    },
                    {
                        "input": "root = [4, 3, 2, 10, -1, 3, 1, -1, -1, -1, -1, -1, -1], x = 4",
                        "output": "2",
                        "explanation": "The closest exit (leaf node) from node 4 is either node 10 or node 1 and they are both at distance 2."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>A simple and intuitive approach could be to find the distance of the closest leaf node (from the node \u2018X\u2019) in the subtree rooted with the node \u2018X\u2019. Also find the distance of the closest leaf node (from the node \u2018X\u2019) in subtrees rooted with ancestors of node \u2018X\u2019. The minimum of these distances gives us the final answer.</p>",
            "<p>The previous approach can be optimised by avoiding the traversal of subtrees which won\u2019t give us the smallest distance.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Trees",
                "slug": "trees"
            },
            {
                "name": "Binary Trees",
                "slug": "binary-trees"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}