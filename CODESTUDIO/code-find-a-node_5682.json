{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 1156,
            "title": "Code : Find a node",
            "titleSlug": "code-find-a-node_5682",
            "content": "<h4 id=\"for-a-given-binary-tree-of-type-integer-and-a-number-x-find-whether-a-node-exists-in-the-tree-with-data-x-or-not\">For a given Binary Tree of type integer and a number X, find whether a node exists in the tree with data X or not.</h4>\n\n<h5 id=\"input-format\">\u00a0Input Format:</h5>\n\n<pre><code>The first line of each test case contains elements of the first tree in the level order form. The line consists of values of nodes separated by a single space. In case a node is null, we take -1 in its place.\n\nThe second line of each test case contains the node value you have to find.\n</code></pre>\n\n<h5 id=\"example\">Example</h5>\n\n<p><img src=\"https://ninjasfiles.s3.amazonaws.com/asset_0000000000001576_1687869799_14.jpg\" alt=\"example\"></p>\n\n<pre><code>The sequence will be put together in a single line separated by a single space. Hence, for the above-depicted tree, the input will be given as:\n\n1 2 3 4 -1 5 6 -1 7 -1 -1 -1 -1 -1 -1\n</code></pre>\n\n<h4 id=\"explanation\">Explanation:</h4>\n\n<pre><code>Level 1:\nThe root node of the tree is 1\n\nLevel 2:\nLeft child of 1 = 2\nRight child of 1 = 3\n\nLevel 3:\nLeft child of 2 = 4\nRight child of 2 = null (-1)\nLeft child of 3 = 5\nRight child of 3 = 6\n\nLevel 4:\nLeft child of 4 = null (-1)\nRight child of 4 = 7\nLeft child of 5 = null (-1)\nRight child of 5 = null (-1)\nLeft child of 6 = null (-1)\nRight child of 6 = null (-1)\n\nLevel 5:\nLeft child of 7 = null (-1)\nRight child of 7 = null (-1)\n\nThe first not-null node(of the previous level) is treated as the parent of the first two nodes of the current level. The second not-null node (of the previous level) is treated as the parent node for the next two nodes of the current level and so on.\nThe input ends when all nodes at the last level are null(-1).\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>The only line of output prints &#39;true&#39; or &#39;false&#39;.\n\nThe output of each test case should be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You are not required to print anything explicitly. It has already been taken care of.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= N &lt;= 10^5\n\nWhere N is the total number of nodes in the binary tree.\n\nTime Limit: 1 sec.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>8 3 10 1 6 -1 14 -1 -1 4 7 13 -1 -1 -1 -1 -1 -1 -1\n7\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>true\n</code></pre>\n\n<h5 id=\"explanation-for-output-1\">Explanation For Output 1:</h5>\n\n<pre><code>Clearly, we can see that 7 is present in the tree. So, the output will be true.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2 3 4 -1 -1 -1 -1\n10\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>false\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 11,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a binary tree of integers and a target integer X, determine if a node with the value X exists within the tree.",
                "constraints": [
                    "1 <= N <= 10^5, where N is the total number of nodes in the binary tree.",
                    "Time Limit: 1 sec."
                ],
                "testcases": [
                    {
                        "input": "8 3 10 1 6 -1 14 -1 -1 4 7 13 -1 -1 -1 -1 -1 -1 -1\n7",
                        "output": "true",
                        "explanation": "The tree contains the node with value 7."
                    },
                    {
                        "input": "2 3 4 -1 -1 -1 -1\n10",
                        "output": "false",
                        "explanation": "The tree does not contain the node with value 10."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>How can you check every node in a tree? Can recursion help?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Binary Trees",
                "slug": "binary-trees"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}