{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8890,
            "title": "Coin Game",
            "titleSlug": "coin-game_920479",
            "content": "<h4 id=\"wong-is-hungry-and-wants-to-eat-tuna-melt-he-checks-his-pocket-and-finds-that-he-has-only-a-buck-left-he-asked-dr-strange-to-lend-him-some-money-for-which-strange-agrees-but-to-get-the-money-wong-has-to-beat-strange-in-a-game-of-coins-the-game-will-be-played-by-two-players-being-kind-enough-strange-allows-wong-to-play-first-now-strange-arranges-n-coins-in-a-row-each-coin-is-associated-with-a-value-in-his-turn-every-player-can-remove-only-one-coin-from-either-end-once-a-player-removes-a-coin-it-can-not-be-placed-back-into-the-row-at-the-end-when-all-coins-are-removed-the-player-with-the-maximum-value-of-coins-wins-wong-will-only-get-money-if-he-wins-the-game-wong-knows-that-he-can-not-beat-sorcerer-supreme-so-he-asked-for-your-help\">Wong is hungry and wants to eat tuna melt. He checks his pocket and finds that he  has only a buck left. He asked Dr. Strange to lend him some money, for which Strange agrees but to get the money, Wong has to beat Strange in a game of coins. The game will be played by two players. Being kind enough Strange allows Wong to play first. Now, Strange arranges N coins in a row. Each coin is associated with a value. In his turn, every player can remove only one coin from either end. Once a player removes a coin, it can not be placed back into the row. At the end when all coins are removed, the player with the maximum value of coins wins. Wong will only get money if he wins the game. Wong knows that he can not beat sorcerer supreme, so he asked for your help.</h4>\n\n<h4 id=\"you-are-given-an-array-of-integers-say-arr-of-size-n-containing-the-values-associated-with-n-coins-your-task-is-to-determine-the-maximum-value-of-coins-you-can-obtain-by-following-two-rules\">You are given an array of integers, say, \u2018ARR\u2019 of size \u2018N\u2019 containing the values associated with \u2018N\u2019 coins. Your task is to determine the maximum value of coins you can obtain by following two rules:</h4>\n\n<pre><code>a) Both players play in alternate turns and they can remove only one coin in their turn.\nb) Any player can remove coins only from either of the two ends of \u2018ARR\u2019.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>There can be more than one set of coins with maximum value.\n</code></pre>\n\n<h4 id=\"for-example\">For example:</h4>\n\n<pre><code>a) Consider 3 coins are placed with values [10, 20, 30]: Wong removes 30, then Strange removes 20, then Wong removes 10. Now all coins are taken, and Wong has coins with value 40 and he wins.\n\nb) Consider 1 coin is placed with value [100]: Wong removes the coin and no other coin is left. So, Wong wins with value 100.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>a) The game only ends when NO MORE COIN IS LEFT to play with.\n\nb) If a game ends in a draw, Wong is declared the winner. \n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of input contains an integer &#39;T&#39;, which denotes the number of the test cases. Then the test case follows.\n\nThe first line of every test case contains an integer \u2018N\u2019 representing the size of the array.\n\nThe second line of every test case contains \u2018N\u2019 single space-separated integers representing the array elements.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print a single integer representing the maximum value of coins you can get for a winning case.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= N &lt;= 10 ^ 3\n1 &lt;= ARR[i] &lt;= 10 ^ 7\n\nWhere \u2018ARR[ i ]\u2019 denotes the value for \u2018ith\u2019 element of the array \u2018ARR\u2019.\n\nTime Limit: 1 sec.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n5 \n5 1 3 2 4\n5 \n6 8 9 2 1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>8\n16\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1:</h5>\n\n<pre><code>For the First test case, Wong can win by making moves [5, 2, 1].\n\nFor the first time Wong will take coin with value \u20185\u2019 from [5, 1, 3, 2, 4]\nThen for the next turn Strange will take the coin with value \u20184\u2019 from [1, 3, 2, 4]\nThen for the next turn Wong will take the coin with value \u20182\u2019 from [1, 3, 2]\nThen Strange will take the coin with value \u20183\u2019 from [1, 3]\nAt last Wong will take the coin with value \u20181\u2019 from [1]\n\n\nFor the Second test case, Wong can win by making moves [6, 9, 1].\n\nFor the first time Wong will take coin with value \u20186\u2019 from [6, 8, 9, 1, 2]\nThen for the next turn Strange will take the coin with value \u20188\u2019 from [8, 9, 1, 2]\nThen for the next turn Wong will take the coin with value \u20189\u2019 from [9, 1, 2]\nThen Strange will take the coin with value \u20182\u2019 from [1, 2]\nAt last Wong will take the coin with value \u20181\u2019 from [1]\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n3\n1 2 3\n4 \n63 22 56 94 \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>4\n150\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 12,
            "dislikes": "NA",
            "rephrased": {
                "body": "Two players, Wong and Strange, are playing a coin game.  There are 'N' coins arranged in a row, each with a specific value. Players take turns removing a coin from either end of the row. Wong plays first. The game ends when all coins are removed. The player with the maximum total value of coins wins. If the game ends in a draw, Wong wins. Given an array 'coins' representing the values of the coins and the number of coins 'numberOfCoins', determine the maximum value of coins Wong can obtain assuming both players play optimally.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= N <= 10 ^ 3",
                    "1 <= ARR[i] <= 10 ^ 7"
                ],
                "testcases": [
                    {
                        "input": "numberOfCoins = 5, coins=[5, 1, 3, 2, 4]",
                        "output": "8",
                        "explanation": "Wong can win by making moves [5, 2, 1].\nFor the first time Wong will take coin with value \u20185\u2019 from [5, 1, 3, 2, 4]\nThen for the next turn Strange will take the coin with value \u20184\u2019 from [1, 3, 2, 4]\nThen for the next turn Wong will take the coin with value \u20182\u2019 from [1, 3, 2]\nThen Strange will take the coin with value \u20183\u2019 from [1, 3]\nAt last Wong will take the coin with value \u20181\u2019 from [1]"
                    },
                    {
                        "input": "numberOfCoins = 5, coins=[6, 8, 9, 2, 1]",
                        "output": "16",
                        "explanation": "Wong can win by making moves [6, 9, 1].\nFor the first time Wong will take coin with value \u20186\u2019 from [6, 8, 9, 1, 2]\nThen for the next turn Strange will take the coin with value \u20188\u2019 from [8, 9, 1, 2]\nThen for the next turn Wong will take the coin with value \u20189\u2019 from [9, 1, 2]\nThen Strange will take the coin with value \u20182\u2019 from [1, 2]\nAt last Wong will take the coin with value \u20181\u2019 from [1]"
                    },
                    {
                        "input": "numberOfCoins = 3, coins=[1, 2, 3]",
                        "output": "4",
                        "explanation": "One optimal strategy for Wong is to pick 3 first, then Strange picks 2 and Wong picks 1. Wong's total value is 3 + 1 = 4."
                    },
                    {
                        "input": "numberOfCoins = 4, coins=[63, 22, 56, 94]",
                        "output": "150",
                        "explanation": "One optimal strategy for Wong is to pick 63 first, then Strange picks 94, then Wong picks 56.  Wong's total value is 63 + 56 = 119. Another option is Wong picks 94, Strange picks 63, Wong picks 56. Wong's total would be 94 + 56 = 150."
                    },
                    {
                        "input": "numberOfCoins = 1, coins=[100]",
                        "output": "100",
                        "explanation": "Wong removes the only coin which has value 100. No other coin is left. So, Wong wins with value 100."
                    },
                    {
                        "input": "numberOfCoins = 2, coins=[5,2]",
                        "output": "5",
                        "explanation": "Wong picks 5, Strange picks 2. Wong's score is 5"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you think of a Recursive solution?</p>",
            "<p>Try to reduce the computations involved in solving the same recurring sub-problems.</p>",
            "<p>Think about how you can use the smaller subproblems to build larger problems.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}