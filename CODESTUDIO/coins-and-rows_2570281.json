{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 15582,
            "title": "Coins and Rows",
            "titleSlug": "coins-and-rows_2570281",
            "content": "<h4 id=\"ninja-and-his-friend-is-playing-a-matrix-game-in-which-a-matrix-having-2-rows-and-n-columns-each-cell-of-the-matrix-has-some-gold-coins-initially-ninja-will-start-from-the-cell-1-1-and-will-move-to-cell-2-n-which-the-following-moves\">Ninja and his friend is playing a matrix game in which a matrix having 2 rows and N columns. Each cell of the matrix has some gold coins. Initially, Ninja will start from the cell (1,1) and will move to cell (2, N) which the following moves:</h4>\n\n<pre><code>1. Move Right - From cell (i,j) to cell (i,j+1).\n2. Move Down - From cell (i,j) to cell (i+1,j).\n</code></pre>\n\n<h4 id=\"ninja-will-pick-the-coins-from-each-cell-he-visits-now-it-s-his-friend-s-turn-he-also-performs-the-moves-to-reach-2-n-from-1-1-but-he-can-collect-only-the-coins-that-ninja-hasn-t-picked\">Ninja will pick the coins from each cell he visits. Now, it\u2019s his friend\u2019s turn. He also performs the moves to reach (2, N) from (1,1). But he can collect only the coins that Ninja hasn\u2019t picked.</h4>\n\n<h4 id=\"the-score-of-the-game-is-the-total-coins-picked-by-ninja-s-friend-ninja-will-try-to-minimize-the-score-while-his-friend-will-try-to-maximize-the-score-find-the-score-of-the-game-if-both-the-players-play-optimally\">The score of the game is the total coins picked by Ninja\u2019s Friend. Ninja will try to minimize the score while his friend will try to maximize the score. Find the score of the game if both the players play optimally.</h4>\n\n<h4 id=\"you-are-given-a-matrix-m-of-size-2-n-your-task-is-to-find-the-score-of-the-game-if-both-players-play-optimally\">You are given a matrix \u2018M\u2019 of size 2*N. Your task is to find the score of the game if both players play optimally.</h4>\n\n<h5 id=\"for-example\">For Example</h5>\n\n<pre><code>If the given matrix is \u2018M\u2019 = [ [1,3, 9] , [3,5,1 ].The path taken by \nNinja is 1,3,9,1 and the path taken by his friend is 1,3,5,1. So the total coins picked by his friend is 3+5 =8.\nSo, the score is 8.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of the input contains an integer, &#39;T,\u2019 denoting the number of test cases.\n\nThe first line of each test case contains a single integer, &#39;N\u2019 denoting the number of columns in the matrix.\n\nThe next two lines contain N elements representing row 1 and row 2 of the matrix.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print an integer corresponding to the score of the game if both players play optimally. \n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N&lt;= 10^5.\n1 &lt;= M[i][j] &lt;=5 * 10^3.  \n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n3\n1 3 9\n3 5 1\n3\n1 3 7\n3 5 1 \n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>8\n7\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of sample input 1:</h5>\n\n<pre><code>For the first test case,\n\nOne of the optimal path for Ninja is 1,3,9,1. His friend will follow the path 1,3,5,1 .So the total coins collected by his friend is 3+5 as all other are already collected by Ninja.So the score is 8.Hence,the answer is 8. \n\nFor the second test case:\n\nOne of the optimal path for Ninja is 1,3,5,1.His friend will follow the path 1,3,7,1 .So the total coins collected by his friend is 7. So the score is 7. Hence, the answer is 7.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n4\n6 4 6 1 \n5 7 8 7 \n4\n7 7 10 5 \n2 7 10 5\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>7\n9\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 10,
            "dislikes": "NA",
            "rephrased": {
                "body": "Two players, Ninja and his friend, are playing a game on a 2xN matrix where each cell contains gold coins. Ninja starts at (1,1) and moves to (2,N) using only rightward and downward moves, collecting coins along the way. Then, his friend moves from (1,1) to (2,N) using the same moves, but can only collect coins Ninja hasn't already picked. Ninja aims to minimize the friend's score, while the friend tries to maximize it.  Given a matrix 'M' of size 2*N, determine the score of the game assuming both players play optimally.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10^5",
                    "1 <= M[i][j] <= 5 * 10^3"
                ],
                "testcases": [
                    {
                        "input": "n = 3, m = [[1, 3, 9], [3, 5, 1]]",
                        "output": "8",
                        "explanation": "One optimal path for Ninja is 1, 3, 9, 1. The friend takes the path 1, 3, 5, 1, collecting 3 + 5 = 8 coins."
                    },
                    {
                        "input": "n = 3, m = [[1, 3, 7], [3, 5, 1]]",
                        "output": "7",
                        "explanation": "One optimal path for Ninja is 1, 3, 5, 1. The friend takes the path 1, 3, 7, 1, collecting only 7."
                    },
                    {
                        "input": "n = 4, m = [[6, 4, 6, 1], [5, 7, 8, 7]]",
                        "output": "7",
                        "explanation": "Ninja can pick a path to limit the friend to collecting only coins that add up to 7."
                    },
                    {
                        "input": "n = 4, m = [[7, 7, 10, 5], [2, 7, 10, 5]]",
                        "output": "9",
                        "explanation": "Ninja's best path allows the friend to collect 9 coins."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to observe a pattern about the coins left to be collected by the second player.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}