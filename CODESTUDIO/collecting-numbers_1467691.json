{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12639,
            "title": "Collecting Numbers",
            "titleSlug": "collecting-numbers_1467691",
            "content": "<h4 id=\"you-are-given-an-array-arr-of-size-n-containing-each-number-between-1-to-n-exactly-once-your-task-is-to-find-the-minimum-total-number-of-rounds-required-to-collect-all-the-numbers-from-1-to-n-in-increasing-order-present-in-the-array-arr-on-each-round-you-can-traverse-through-the-array-arr-from-left-to-right-and-collect-as-many-numbers-as-possible-in-increasing-order\">You are given an array \u2018ARR\u2019 of size \u2018N\u2019 containing each number between 1 to N exactly once. Your task is to find the minimum total number of rounds required to collect all the numbers from 1 to N in increasing order present in the array \u2018ARR\u2019. On each round, you can traverse through the array \u2018ARR\u2019 from left to right and collect as many numbers as possible in increasing order.</h4>\n\n<h4 id=\"for-example\">For example :</h4>\n\n<pre><code>Consider the array ARR = [4, 5, 1, 2, 3], we will collect 1,2 and 3 in the first round, and the array ARR after the first round will be [4, 5]. Finally, we will collect 4 and 5 in the second round. The minimum total number of rounds required is 2. Hence, the answer is 2 in this case.\n</code></pre>\n\n<h4 id=\"input-format\">Input Format :</h4>\n\n<pre><code>The first line of the input contains an integer, &#39;T,\u2019 denoting the number of test cases. The &#39;T&#39; test cases follow.\n\nThe first line of each test case contains a single integer, &#39;N&#39;, denoting the number of elements in the array.\n\nThe second line of each test case contains &#39;N&#39; space-separated integers denoting the elements of the array &#39;ARR&#39;.\n</code></pre>\n\n<h4 id=\"output-format\">Output Format :</h4>\n\n<pre><code>For each test case, print a single integer - the minimum total number of rounds required to collect the numbers from 1 to \u2018N\u2019  in increasing order.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints :</h4>\n\n<pre><code>1 &lt;=  T  &lt;= 10\n1 &lt;=  N &lt;= 10^5\n1 &lt;=  ARR[i]  &lt;= N\n\nAll elements present in the array ARR are unique.\n\nTime limit: 1 sec\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1 :</h4>\n\n<pre><code>2\n3 \n2 1 3\n3\n3 2 1\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1 :</h4>\n\n<pre><code>2\n3\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of sample input 1 :</h5>\n\n<pre><code>For the first test case, \nWe will collect 1 in the first round, and the array ARR after the first round will be [2,3]. Finally, we will collect 2 and 3 in the second round. The minimum total number of rounds required is 2. Hence, the answer is 2 in this case.\n\nFor the second test case,\nWe will collect 1 in the first round, and the array ARR after the first round will be [3, 2]. Similarly, we will collect 2 in the second round, and the ARR will be [3]. Finally, we will collect 3 in the third round. The minimum total number of rounds required is 3. Hence, the answer is 3 in this case.\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2 :</h4>\n\n<pre><code>2\n5\n4 2 1 5 3\n5\n1 2 3 4 5\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2 :</h4>\n\n<pre><code>3\n1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 6,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array 'ARR' of size 'N' containing distinct integers from 1 to N, determine the minimum number of rounds required to collect all numbers from 1 to N in increasing order. In each round, you traverse 'ARR' from left to right and collect as many numbers as possible in increasing order.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10^5",
                    "1 <= ARR[i] <= N"
                ],
                "testcases": [
                    {
                        "input": "n = 3, nums = [2, 1, 3]",
                        "output": "2",
                        "explanation": "Round 1: Collect 1. Remaining array: [2, 3]. Round 2: Collect 2, 3. Total rounds: 2."
                    },
                    {
                        "input": "n = 3, nums = [3, 2, 1]",
                        "output": "3",
                        "explanation": "Round 1: Collect 1. Remaining array: [3, 2]. Round 2: Collect 2. Remaining array: [3]. Round 3: Collect 3. Total rounds: 3."
                    },
                    {
                        "input": "n = 5, nums = [4, 2, 1, 5, 3]",
                        "output": "3",
                        "explanation": "Round 1: Collect 1. Remaining array: [4, 2, 5, 3]. Round 2: Collect 2, 3. Remaining array: [4, 5]. Round 3: Collect 4, 5. Total rounds: 3."
                    },
                    {
                        "input": "n = 5, nums = [1, 2, 3, 4, 5]",
                        "output": "1",
                        "explanation": "Round 1: Collect 1, 2, 3, 4, 5. Total rounds: 1."
                    },
                    {
                        "input": "n = 5, nums = [5, 4, 3, 2, 1]",
                        "output": "5",
                        "explanation": "Round 1: Collect 1.  Remaining array: [5, 4, 3, 2]. Round 2: Collect 2. Remaining array: [5, 4, 3]. Round 3: Collect 3. Remaining array: [5, 4]. Round 4: Collect 4. Remaining array: [5]. Round 5: Collect 5. Total rounds = 5"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Traverse through the array in the described manner and collect as many numbers as possible in each round.</p>",
            "<p>Try to think of an approach using an array to store the index of all elements present in the given array.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}