{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 14682,
            "title": "Combine The Slimes",
            "titleSlug": "combine-the-slimes_2221404",
            "content": "<h4 id=\"steve-has-n-slimes-each-slime-has-a-size-between-0-to-99-he-wants-to-convert-all-these-slimes-into-one-slime-but-he-can-only-mix-two-adjacent-slimes-at-one-time-on-mixing-two-slimes-of-size-a-and-b-the-size-of-the-slime-becomes-a-b-and-the-cost-of-mixing-two-slimes-is-a-b-but-if-he-mixes-two-slimes-and-the-size-becomes-greater-than-or-equal-to-100-the-slime-gets-unstable-and-loses-its-size-by-100-ie-the-size-of-slime-becomes-a-b-mod-100\">Steve has \u2019N\u2019 slimes. Each slime has a size between 0 to 99. He wants to convert all these slimes into one slime but he can only mix two adjacent slimes at one time. On mixing two slimes of size \u2018a\u2019 and \u2018b\u2019 the size of the slime becomes a+b and the cost of mixing two slimes is a*b. But if he mixes two slimes and the size becomes greater than or equal to 100, the slime gets unstable and loses its size by 100. Ie. the size of slime becomes a+b mod 100.</h4>\n\n<h4 id=\"help-steve-to-find-the-minimum-cost-in-mixing-for-mixing-all-these-slimes\">Help Steve to find the minimum cost in mixing for mixing all these slimes.</h4>\n\n<h5 id=\"for-example\">For Example :</h5>\n\n<pre><code>Slimes = {10, 7, 3}\nOn mixing slime 3 and 7 remaining slimes are: {10, 10} and the cost is 3 * 7 = 21.\n\nOn mixing slime 10 and 10 remaining slimes are: {10} and the cost of mixing is 10 * 10 = 100. \n\nSo the final cost of mixing the slime is 121.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 denoting the number of test cases, then each test case follows:\n\nThe first line of each test case contains a single integer \u2018N\u2019 denoting the total number of slimes.\n\nThe next line contains &#39;n&#39; integers denoting the size of the slimes.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print a single integer \u201cans\u201d denoting the minimum cost of converting all these slime into one single slime.\n\nOutput for each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You are not required to print anything; it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10    \n1 &lt;= N &lt;= 100\n0 &lt;= slime[i] &lt;= 99\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n2\n11 13\n3\n40 60 20\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>143\n2400\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1 :</h5>\n\n<pre><code>In the first test case, there are two slimes, Hence the answer is 11 * 13 = 143\n\nIn the second test case, we will first combine slime 1 and slime 2 which will result in slime 100 and 20, now the slime with size 100 will lose its size by 100. Now the slimes are 0 and 20 which will give the final answer 2400.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n3\n13 57 43\n4\n1 2 3 4\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>2451\n35\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 6,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given 'N' slimes with sizes between 0 and 99, the goal is to merge them into a single slime with the minimum cost. You can only merge adjacent slimes at a time. The cost of merging slimes of sizes 'a' and 'b' is a*b, and the resulting slime has a size of (a+b) % 100.  Find the minimum total cost to merge all slimes into one.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 100",
                    "0 <= slime[i] <= 99"
                ],
                "testcases": [
                    {
                        "input": "n = 2, slimes = [11, 13]",
                        "output": "143",
                        "explanation": "There are two slimes.  The cost is 11 * 13 = 143."
                    },
                    {
                        "input": "n = 3, slimes = [40, 60, 20]",
                        "output": "2400",
                        "explanation": "Combine slime 1 and slime 2:  40 + 60 = 100, size becomes 0.  Cost is 40 * 60 = 2400.  Then combine 0 and 20: 0+20=20, and Cost is 0 * 20 = 0. total cost is 2400 + 0= 2400"
                    },
                    {
                        "input": "n = 3, slimes = [13, 57, 43]",
                        "output": "2451",
                        "explanation": "First, combine 57 and 43: 57+43 = 100, size becomes 0. Cost is 57 * 43 = 2451. Then combine 13 and 0: 13+0 = 13. Cost is 13 * 0 = 0. Total cost is 2451."
                    },
                    {
                        "input": "n = 4, slimes = [1, 2, 3, 4]",
                        "output": "35",
                        "explanation": "Combine 1 and 2: 1+2 = 3, Cost is 1 * 2 = 2. Slimes: [3, 3, 4]. Combine 3 and 3: 3+3=6, cost is 3 * 3 = 9. Slimes: [6, 4]. Combine 6 and 4: 6+4 = 10, Cost is 6 * 4 = 24. Slimes: [10]. Total cost is 2 + 9 + 24 = 35."
                    },
                    {
                        "input": "n = 5, slimes=[1, 2, 3, 4, 5]",
                        "output": "55",
                        "explanation": "Combine 1 and 2: cost is 2, resulting slime is 3, new slimes are [3,3,4,5]. Combine 3 and 3, cost is 9, resulting slime is 6, new slimes are [6,4,5]. Combine 6 and 4, cost is 24, resulting slime is 10, new slimes are [10,5]. Combine 10 and 5, cost is 50, resultin slime is 15, new slimes are [15]. total cost is 2+9+24+20 = 55"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to break the problem into subproblems starting with two slimes to n slimes.</p>",
            "<p>There can be many repetitive calculations in the brute force approach which can be skipped by storing them while computing for the first time.</p>",
            "<p>Try calculating the minimum value starting from 2 slimes and then add more slimes</p>"
        ],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}