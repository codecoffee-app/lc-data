{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 7301,
            "title": "Common Digit Longest Subsequence",
            "titleSlug": "common-digit-longest-subsequence_630566",
            "content": "<h4 id=\"you-have-been-given-an-array-of-n-integers-find-the-length-of-the-longest-subsequence-such-that-each-adjacent-element-of-the-subsequence-has-at-least-one-digit-in-common\">You have been given an array of &#39;N&#39; Integers. Find the length of the longest subsequence such that each adjacent element of the subsequence has at least one digit in common.</h4>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>A sequence &#39;A&#39; is a subsequence of a sequence &#39;B&#39; if &#39;A&#39; can be obtained from &#39;B&#39; by deletion of several (possibly, zero) elements. For example, [3,1] is a subsequence of [3,2,1] and [4,3,1], but not a subsequence of [1,3,3,7] and [3,10,4].\n</code></pre>\n\n<h5 id=\"input-format\">Input format :</h5>\n\n<pre><code>The first line of each test case contains an Integer &#39;N&#39; denoting the size of the array.\n\nThe second line of each test case contains &#39;N&#39; space-separated integers denoting the elements of the array.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>Print the length of the longest subsequence such that each adjacent elements of the subsequence have at least one digit in common.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You are not required to print the output explicitly, it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= N &lt;= 10 ^ 5\n1 &lt;= Arr[i] &lt;= 10 ^ 9\n\nWhere Arr[i] is the i-th element in the array.\n\nTime Limit: 1sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>7\n11 122 77 92 55 69 98\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>5\n</code></pre>\n\n<h5 id=\"explanation-to-sample-input-1\">\u00a0Explanation to Sample Input 1 :</h5>\n\n<pre><code>The longest subsequence is: 11 122 92 69 98\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>6\n21 32 65 34 83 95\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>4\n</code></pre>\n\n<h5 id=\"explanation-to-sample-input-2\">\u00a0Explanation to Sample Input 2 :</h5>\n\n<pre><code>The longest subsequence is: 21 32 34 83\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 13,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of integers, find the length of the longest subsequence such that each adjacent element in the subsequence shares at least one digit in common. A subsequence is formed by deleting zero or more elements from the original array without changing the order of the remaining elements.",
                "constraints": [
                    "1 <= N <= 10^5",
                    "1 <= Arr[i] <= 10^9",
                    "Time Limit: 1sec"
                ],
                "testcases": [
                    {
                        "input": "n = 7, arr = [11, 122, 77, 92, 55, 69, 98]",
                        "output": "5",
                        "explanation": "The longest subsequence is: 11, 122, 92, 69, 98.  11 and 122 share '1', 122 and 92 share '2', 92 and 69 share '9', 69 and 98 share '9'."
                    },
                    {
                        "input": "n = 6, arr = [21, 32, 65, 34, 83, 95]",
                        "output": "4",
                        "explanation": "The longest subsequence is: 21, 32, 34, 83. 21 and 32 share no digits, but 32 and 34 share 3, 34 and 83 share 3."
                    },
                    {
                        "input": "n = 5, arr = [1, 2, 3, 4, 5]",
                        "output": "0",
                        "explanation": "No two adjacent numbers share a digit. So length of longest subsequence is 0"
                    },
                    {
                        "input": "n = 4, arr = [12, 23, 34, 45]",
                        "output": "4",
                        "explanation": "The entire sequence can form the required subsequence. The digits are 12, 23, 34, 45. The common digits are 2, 3, 4"
                    },
                    {
                        "input": "n = 3, arr = [123, 456, 789]",
                        "output": "0",
                        "explanation": "None of the numbers shares digits with each other."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you relate this problem to Dynamic Programming Problem of Longest Increasing Subsequence and think of a similar solution.</p>",
            "<p>Can you think of a better state of DP where we don\u2019t need to traverse all the previous position for the current position?</p>",
            "<p>Can you think of reducing the space in our previous DP state? Do we really need N*10 Matrix?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}