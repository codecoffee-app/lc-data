{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9128,
            "title": "Common element in rows",
            "titleSlug": "common-element-in-rows_975481",
            "content": "<h4 id=\"you-are-given-a-row-wise-sorted-matrix-of-size-m-n-your-task-is-to-return-the-smallest-element-that-is-present-in-all-rows\">You are given a row-wise sorted matrix of size \u2018M*N\u2019. Your task is to return the smallest element that is present in all rows.</h4>\n\n<h4 id=\"if-no-common-element-exist-return-1\">If no common element exist, return -1.</h4>\n\n<p>&nbsp;</p>\n\n<h5 id=\"example\">Example :</h5>\n\n<pre><code>If M = 4 and N = 5, and the matrix is:\n{ {1, 2, 3, 4, 5},\n  {2, 3, 4, 5, 6},\n  {2, 3, 5, 6, 7},\n  {1, 3, 4, 5, 6} }\nFor the given matrix, 3 is the possible smallest element that is present in all the rows.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 denoting the number of test cases. Then each test case follows.\n\nThe first line of each testcase contains two integers \u2018M\u2019 and \u2018N\u2019, denoting the number of rows and columns respectively.\n\nThe next \u2018M\u2019 line contains \u2018N\u2019 integers, denoting the elements of the matrix.\n\nFor example:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/grid3-12006.jpg\" alt=\"\"></p>\n\n<pre><code>The matrix above contains 3 rows and 4 columns ans will be represented as:\n4 3\n1 2 3 4\n4 6 7 8\n9 10 11 12\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case print a single integer denoting the smallest common element.\n\nOutput for each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You are not required to print anything; it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10      \n1 &lt;= M,N &lt;= 100\n0 &lt;= matrix[i][j] &lt;= 10^9\n\nTime limit: 1 sec\n</code></pre>\n\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n2 3\n1 2 3\n2 3 6\n1 5\n1 2 3 4 5\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>2\n1\n</code></pre>\n\n<h5 id=\"explanation-for-sample-output-1\">Explanation For Sample Output 1 :</h5>\n\n<pre><code>For test case 1 :\nThe given grid is:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/grid1-12001.jpg\" alt=\"\"></p>\n\n<pre><code>2 is the smallest element present in both 1st and 2nd row.\n\nFor test case 2 :\nThe given grid is:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/grid2-12002.jpg\" alt=\"\"></p>\n\n<pre><code>As there is only a single row, so the smallest element in that row will be the smallest common element.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n2 2\n10 20\n30 40\n1 1\n5\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>-1\n5\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 5,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a row-wise sorted matrix of size M*N, find the smallest element that exists in all rows. If no such common element exists, return -1.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= M,N <= 100",
                    "0 <= matrix[i][j] <= 10^9",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "2\n2 3\n1 2 3\n2 3 6\n1 5\n1 2 3 4 5",
                        "output": "2\n1",
                        "explanation": "In the first test case, the smallest element present in both rows {1, 2, 3} and {2, 3, 6} is 2. In the second test case, since there is only one row, the smallest element in that row {1, 2, 3, 4, 5} is 1."
                    },
                    {
                        "input": "2\n2 2\n10 20\n30 40\n1 1\n5",
                        "output": "-1\n5",
                        "explanation": "In the first test case, there is no common element between the rows {10, 20} and {30, 40}. Thus, return -1. In the second test case, since there is only one element i.e 5, it is the smallest common element."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>The common element must belong to the first row, so the answer if exists must be one of the elements from the first row.</p>",
            "<p>To search each element of the first row, do we need to check all the elements in the remaining rows? Trying using the fact that the matrix is row-wise sorted.</p>",
            "<p>Try using Hash Map to get O(1) search time instead of linear or logarithmic.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}