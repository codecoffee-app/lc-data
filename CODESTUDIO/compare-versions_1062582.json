{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9506,
            "title": "Compare Versions",
            "titleSlug": "compare-versions_1062582",
            "content": "<h4 id=\"you-are-given-two-versions-numbers-a-and-b-as-a-string-your-task-is-to-compare-them-and-find-out-which-one-of-them-is-a-newer-version\">You are given two versions numbers A and B as a string. Your task is to compare them and find out which one of them is a newer version.</h4>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>There are no leading zeros in any of the strings except in the case of zero itself. Note that, the leading zeroes are not allowed even after a &#39;.&#39; ie: 121.005 is an invalid version, while 121.5 is an valid version.\n</code></pre>\n\n<h5 id=\"for-example\">For Example:</h5>\n\n<pre><code>A = \u201c1.23.45\u201d, B = \u201c1.23.456\u201d\n\nThe first two parts of both the strings are the same i.e 1 and 23 and the third part of B is greater than the third part of A i.e. 45 &lt; 456, thus string B is the latest version.\n</code></pre>\n\n<h5 id=\"input-format\">Input format:</h5>\n\n<pre><code>The first line contains an integer &#39;T&#39; which denotes the number of test cases or queries to be run. Then, the T test cases follow.\n\nThe first line of each test case contains version A as a string.\n\nThe second line of each test case contains version B as a string.\n</code></pre>\n\n<h5 id=\"output-format\">Output format:</h5>\n\n<pre><code>For each test case, print 1 if version A is latest, -1  if version B is latest and 0 if both versions are the same.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the given functions.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= |A|, |B| &lt;= 10^5\n\nAll the string A and B characters contain digits and dots only and both the strings are started and terminated by a digit.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n1.2.4\n1.2.3\n10.2.2\n10.2.2\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>1\n0\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1:</h5>\n\n<pre><code>For the first test case, the first two parts of both the strings are the same but the third part of the 1st version is bigger than the 2nd version. Hence our answer is 1\n\nFor the second test case, both the versions are identical here, so the answer will be 0.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n123.45\n123\n1.0.0\n1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample output 2:</h5>\n\n<pre><code>1\n0\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 56,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two version strings, 'a' and 'b', determine which version is newer. Return 1 if 'a' is newer, -1 if 'b' is newer, and 0 if they are the same. Version strings consist of digits and dots, and are formatted as 'major.minor.patch', etc. Leading zeros are not allowed within each version segment, except for the segment '0' itself.",
                "constraints": [
                    "1 <= T <= 10 (Number of test cases)",
                    "1 <= |A|, |B| <= 10^5 (Length of version strings A and B)",
                    "All characters in A and B are digits or dots, and both strings start and end with a digit."
                ],
                "testcases": [
                    {
                        "input": "a = \"1.2.4\", b = \"1.2.3\"",
                        "output": "1",
                        "explanation": "The first two parts of both versions are the same (1.2). The third part of 'a' (4) is greater than the third part of 'b' (3), so 'a' is the newer version."
                    },
                    {
                        "input": "a = \"10.2.2\", b = \"10.2.2\"",
                        "output": "0",
                        "explanation": "Both versions are identical, so the result is 0."
                    },
                    {
                        "input": "a = \"123.45\", b = \"123\"",
                        "output": "1",
                        "explanation": "The first part of both versions are the same (123). Version 'a' has a second part, while version 'b' doesn't. Thus, version 'a' is newer."
                    },
                    {
                        "input": "a = \"1.0.0\", b = \"1\"",
                        "output": "0",
                        "explanation": "Both versions are the same because the .0.0 can be neglected."
                    },
                    {
                        "input": "a = \"1.23.45\", b = \"1.23.456\"",
                        "output": "-1",
                        "explanation": "The first two parts of both versions are the same (1.23). The third part of 'b' (456) is greater than the third part of 'a' (45), so 'b' is the newer version."
                    },
                    {
                        "input": "a = \"0.1\", b = \"0.01\"",
                        "output": "1",
                        "explanation": "0.1 is larger than 0.01."
                    },
                    {
                        "input": "a = \"1.0\", b = \"1\"",
                        "output": "0",
                        "explanation": "Both are the same version"
                    },
                    {
                        "input": "a = \"1\", b = \"1.0\"",
                        "output": "0",
                        "explanation": "Both are the same version"
                    },
                    {
                        "input": "a = \"1.1\", b = \"1.10\"",
                        "output": "-1",
                        "explanation": "1.10 is greater than 1.1"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Think of a iterative comparison approach</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}