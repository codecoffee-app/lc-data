{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 7244,
            "title": "Connect n ropes with minimum cost",
            "titleSlug": "connect-n-ropes-with-minimum-cost_630476",
            "content": "<h4 id=\"you-have-been-given-n-ropes-of-different-lengths-we-need-to-connect-these-ropes-into-one-rope-the-cost-to-connect-two-ropes-is-equal-to-sum-of-their-lengths-we-need-to-connect-the-ropes-with-minimum-cost\">You have been given &#39;N&#39; ropes of different lengths, we need to connect these ropes into one rope. The cost to connect two ropes is equal to sum of their lengths. We need to connect the ropes with minimum cost.</h4>\n\n<h4 id=\"the-test-data-is-such-that-the-result-will-fit-into-a-32-bit-integer\">The test-data is such that the result will fit into a 32-bit integer.</h4>\n\n<h4 id=\"input-format\">Input format :</h4>\n\n<pre><code>The first line of input contains an integer value &#39;N&#39;. It denotes the total number of ropes.\n\nThe second line of input contains &#39;N&#39; single space separated integers representing length of each rope i.e. a1, a2, a3, ... an.\n</code></pre>\n\n<h4 id=\"output-format\">Output Format :</h4>\n\n<pre><code>The only line of output will contain an integer, the minimum cost for connecting all the ropes.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You need not to print anything, it has been already taken care of. Just implement the given function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints :</h4>\n\n<pre><code>1 &lt;= N &lt;= 10^5\n1 &lt;= ai &lt;= 10^9\n\nTime Limit : 1 sec\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1:</h4>\n\n<pre><code>4\n4 3 2 6\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1:</h4>\n\n<pre><code>29\n</code></pre>\n\n<h4 id=\"explanation\">Explanation:</h4>\n\n<pre><code>1) If we first connect ropes of lengths 2 and 3, we will left with three ropes of lengths 4, 6 and 5.\n\n2) Now then, if we connect ropes of lengths 4 and 5, we will left with two ropes of lengths 6 and 9.\n\n3) Finally, we connect the remaining two ropes and all ropes are now connected.\n\nTotal cost for connecting all ropes in this way is 5 + 9 + 15 = 29  which is the optimized cost.\nNow there are other ways also for connecting ropes. For example, if we connect 4 and 6 first (we get three ropes of lengths 3, 2 and 10), then connect 10 and 3 (we get two ropes of length 13 and 2). Finally we connect 13 and 2. Total cost in this way is 10 + 13 + 15 = 38 which is not the optimal cost\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2:</h4>\n\n<pre><code>5\n1 2 3 4 5\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2:</h4>\n\n<pre><code>33\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 36,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given 'N' ropes of varying lengths represented by an array, determine the minimum cost to connect all the ropes into a single rope. The cost of connecting two ropes is equal to the sum of their lengths. Implement the `connectRopes` function to calculate this minimum cost.",
                "constraints": [
                    "1 <= N <= 10^5",
                    "1 <= ai <= 10^9",
                    "The test-data is such that the result will fit into a 32-bit integer."
                ],
                "testcases": [
                    {
                        "input": "n = 4, arr=[4, 3, 2, 6]",
                        "output": "29",
                        "explanation": "Connect ropes of lengths 2 and 3 (cost 5). Remaining ropes: 4, 6, 5. Connect 4 and 5 (cost 9). Remaining ropes: 6, 9. Connect 6 and 9 (cost 15). Total cost: 5 + 9 + 15 = 29."
                    },
                    {
                        "input": "n = 5, arr=[1, 2, 3, 4, 5]",
                        "output": "33",
                        "explanation": "Connect ropes of lengths 1 and 2 (cost 3). Remaining ropes: 3, 4, 5, 3. Connect 3 and 3 (cost 6). Remaining ropes: 4, 5, 6. Connect 4 and 5 (cost 9). Remaining ropes: 6, 9. Connect 6 and 9 (cost 15). Total cost: 3 + 6 + 9 + 15 = 33."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Think how many times a rope\u2019s length is getting added to the final cost.</p>",
            "<p>Can you reduce the time for finding the smallest two ropes using some data structure.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Stacks & Queues",
                "slug": "stacks-&-queues"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}