{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 22186,
            "title": "Connect The Villages",
            "titleSlug": "connect-the-villages_5558697",
            "content": "<h4 id=\"you-are-the-road-constructor-in-charge-in-a-country-of-n-villages-there-are-n-1-roads-which-are-represented-by-u-v-and-w-which-represents-there-is-a-road-between-village-u-and-village-v-and-w-represents-the-distance-between-village-u-and-v\">You are the road constructor in charge in a country of \u2018N\u2019 villages. There are \u2018N\u2019 - 1 roads which are represented by \u2018U\u2019, \u2018V\u2019, and \u2018W\u2019. Which represents there is a  road between village \u2018U\u2019 and Village \u2018V\u2019 and \u2018W\u2019 represents the distance between village \u2018U\u2019 and \u2018V\u2019.</h4>\n\n<h4 id=\"there-was-a-meeting-scheduled-between-people-of-these-n-villages-and-they-came-up-with-q-questions\">There was a meeting scheduled between people of these \u2018N\u2019 villages and they came up with \u2018Q\u2019 questions.</h4>\n\n<h4 id=\"each-question-is-of-the-following-format\">Each question is of the following format :</h4>\n\n<pre><code>U V W\n</code></pre>\n\n<h4 id=\"this-represents-if-we-connect-village-u-with-village-v-directly-with-a-road-of-distance-w-and-remove-anyone-already-connected-road-from-the-village-in-such-a-way-that-villages-stay-connected\">This represents if we connect village \u2018U\u2019 with village \u2018V\u2019 directly with a road of distance \u2018W\u2019 and remove anyone already connected road from the village in such a way that villages stay connected.</h4>\n\n<h4 id=\"you-have-to-tell-whether-after-adding-the-current-road-the-total-sum-of-all-the-distances-of-roads-is-strictly-lesser-than-the-previous-sum-of-all-the-distances-of-the-roads\">You have to tell whether after adding the current road, the total sum of all the distances of roads is strictly lesser than the previous sum of all the distances of the roads.</h4>\n\n<h5 id=\"example\">Example:</h5>\n\n<pre><code>Input: \u2018N\u2019 = 4, \u2018ROADS\u2019 = [[1, 2, 2], [1, 3, 3], [2, 4, 3]], \u2018Q\u2019 = 1, \u2018Queries\u2019 = [[3, 4, 2]]\nOutput: YES\nIf we remove the road between 2 and 4 and add the current road of queries then the sum becomes 7 which previously was 8.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line will contain the integer &#39;T&#39;, denoting the number of test cases.\nThe next line contains a single integer \u2018N\u2019 representing the number of villages.\nThe next \u2018N\u2019-1 lines contain three integers \u2018U\u2019, \u2018V\u2019, and \u2018W\u2019 representing the villages \u2018U\u2019 and \u2018V\u2019 where a road of distance \u2018W\u2019 is made.\nThe next line contains an integer \u2018Q\u2019 representing the number of queries.\nThe next \u2018Q\u2019 lines contain \u2018U\u2019, \u2018V\u2019, and \u2018W\u2019 representing the query of making a road between villages \u2018U\u2019, \u2018V\u2019 with a distance \u2018W\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test query, you should output \u2018YES\u2019 if the total distance strictly reduces else print \u2018NO\u2019.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don&#39;t need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 10^5\n1 &lt;= W &lt;= 10^9\n1 &lt;= U, V &lt;= N\n1 &lt;= Q &lt;= 10^5\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n4\n1 2 2\n1 3 3\n2 4 3\n1\n3 4 1\n3\n1 2 4\n2 3 5\n2\n1 3 2\n1 2 5\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>YES\nYES NO\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1 :</h5>\n\n<pre><code>For the first test case:-\nIf we remove the road between 2 and 4 and add the current road of query then the sum becomes 6 which previously was 8 so the answer is \u2018YES\u2019.\n\nFor the second test case:-\nInitially, the total distance is 9.\nFor the first query if we add the road between villages 1 and 3 with the distance 2 and remove the road between 2 and 3 which has a distance of 5 so now the total distance of all the roads is 6 which is less than 9 so the answer is \u2018YES\u2019.\nFor the second query, the initial road between 1 and 2 has a distance of 4 but now we are trying to create a road of distance 5 which will increase the total distance to 10 so the answer is \u2018NO\u2019.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n7\n1 2 3\n1 3 3\n3 4 2\n3 5 3\n4 6 4\n5 7 5\n4\n1 4 2\n4 7 10\n6 7 1\n1 5 12\n4\n1 2 1\n2 3 1\n3 4 1\n5\n1 2 1\n1 3 2\n2 3 5\n3 1 1\n3 4 2  \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>YES NO YES NO\nNO NO NO NO NO\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 9,
            "dislikes": "NA",
            "rephrased": {
                "body": "You are given a network of villages connected by roads. The initial road network is represented by a set of roads, where each road connects two villages with a certain distance.  You are also given a series of queries. Each query proposes adding a new road between two villages with a given distance and removing an existing road connected to either of the villages in such a way that all villages remain connected. For each query, determine if adding the new road would strictly decrease the total distance of all roads in the network.  Return a vector of strings, where each string is either 'YES' or 'NO' indicating whether the total distance is reduced for the corresponding query.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10^5",
                    "1 <= W <= 10^9",
                    "1 <= U, V <= N",
                    "1 <= Q <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "n = 4, road = [[1, 2, 2], [1, 3, 3], [2, 4, 3]], q = 1, query = [[3, 4, 2]]",
                        "output": "[\"YES\"]",
                        "explanation": "Initial total distance is 2 + 3 + 3 = 8.  Query proposes connecting 3 and 4 with distance 2. Removing the road between 2 and 4 (distance 3) and adding the new road results in a total distance of 2 + 3 + 2 = 7, which is strictly less than 8. Hence, the output is YES."
                    },
                    {
                        "input": "n = 3, road = [[1, 2, 4], [2, 3, 5]], q = 2, query = [[1, 3, 2], [1, 2, 5]]",
                        "output": "[\"YES\", \"NO\"]",
                        "explanation": "Initially, the total distance is 4 + 5 = 9.\nQuery 1: Connect 1 and 3 with distance 2. Removing road 2-3(5) and adding road 1-3 with cost 2 makes the roads 1-2(4) and 1-3(2), with total cost 6 which is less than 9. Thus, Output is YES.\nQuery 2: Connect 1 and 2 with distance 5. Removing the existing 1-2 (4) and adding the new 1-2 (5) makes the cost roads 1-2(5) and 2-3(5) with total cost 10. Since total cost becomes greater than the original cost which was 9, the output is NO."
                    },
                    {
                        "input": "n = 7, road = [[1, 2, 3], [1, 3, 3], [3, 4, 2], [3, 5, 3], [4, 6, 4], [5, 7, 5]], q = 4, query = [[1, 4, 2], [4, 7, 10], [6, 7, 1], [1, 5, 12]]",
                        "output": "[\"YES\", \"NO\", \"YES\", \"NO\"]",
                        "explanation": "Various road removals will result in total costs being higher or lower after the query."
                    },
                    {
                        "input": "n = 4, road = [[1, 2, 1], [2, 3, 1], [3, 4, 1]], q = 5, query = [[1, 2, 1], [1, 3, 2], [2, 3, 5], [3, 1, 1], [3, 4, 2]]",
                        "output": "[\"NO\", \"NO\", \"NO\", \"NO\", \"NO\"]",
                        "explanation": "Adding queries makes total cost higher always."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Depth First Search</p>",
            "<p><strong>&nbsp;</strong>Dynamic Programming</p>",
            "<p>Binary Lifting</p>",
            "<p>For each query Check the path between the two villages and find the longest distance road which connects two consecutive cities on the road connecting the villages and see how this thing is related to the query?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Depth-first Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}