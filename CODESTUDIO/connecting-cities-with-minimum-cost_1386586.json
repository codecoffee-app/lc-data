{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 11810,
            "title": "Connecting Cities With Minimum Cost",
            "titleSlug": "connecting-cities-with-minimum-cost_1386586",
            "content": "<h4 id=\"there-are-n-cities-numbered-from-1-to-n-and-m-roads-each-road-connectss-two-different-cities-and-described-as-a-two-way-road-using-three-integers-u-v-w-which-represents-the-cost-w-to-connect-city-u-and-city-v-together\">There are \u2018N\u2019 cities numbered from 1 to \u2018N\u2019 and \u2018M\u2019 roads. Each road connectss two different cities and described as a two-way road using three integers (\u2018U\u2019, \u2018V\u2019, \u2018W\u2019) which represents the cost \u2018W\u2019 to connect city \u2018U\u2019  and city \u2018V\u2019 together.</h4>\n\n<h4 id=\"now-you-are-supposed-to-find-the-minimum-cost-so-that-for-every-pair-of-cities-there-exists-a-path-of-connections-possibly-of-length-1-that-connects-those-two-cities-together-the-cost-is-the-sum-of-the-connection-costs-used-if-the-task-is-impossible-return-1\">Now, you are supposed to find the minimum cost so that for every pair of cities, there exists a path of connections (possibly of length 1) that connects those two cities together. The cost is the sum of the connection costs used. If the task is impossible, return -1.</h4>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases. Then each test case follows.\n\nThe first line of each test case contains two single space-separated integers \u2018N\u2019 and \u2018M\u2019 denoting the number of cities and roads respectively.\n\nEach of the next \u2018M\u2019 lines contains three single space-separated integers \u2018U\u2019, \u2018V\u2019, and \u2018W\u2019 denoting a two-way road between city \u2018U\u2019 and \u2018V\u2019 of cost \u2018W\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, return an integer denoting the minimum cost.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don&#39;t need to print the output, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 50\n1 &lt;= N &lt;= 10^4\n1 &lt;= M &lt;= 10^4\n1 &lt;= W &lt;= 10^3\n1 &lt;= U, V &lt;= N\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n5 6\n1 2 6\n2 3 5\n3 4 4\n1 4 1\n1 3 2\n3 5 3\n3 1\n1 2 4\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample output 1 :</h5>\n\n<pre><code>11\n-1\n</code></pre>\n\n<h5 id=\"explanation-of-sample-output-1\">Explanation of Sample output 1  :</h5>\n\n<pre><code>For the first test case, the graph below describes the connection between the cities:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/mst1-7060.png\" alt=\"Example\"></p>\n\n<pre><code>We can choose the following roads to connect all the cities getting minimum cost:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/mst2-7059.png\" alt=\"Example\"></p>\n\n<pre><code>And its cost is 1 + 2 + 5 + 3 = 11\n\nFor the second test case, there is no way to connect all cities. So print -1.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n3 3\n1 2 1\n2 3 2\n3 1 3\n4 3\n1 2 4\n2 3 5\n3 4 1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample output 2 :</h5>\n\n<pre><code>3\n10\n</code></pre>\n\n<h5 id=\"explanation-of-sample-output-2\">Explanation of Sample output 2 :</h5>\n\n<pre><code>For the first test case, the minimum cost will be 3.\n\nFor the second test case, the minimum cost will be 10.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 6,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given 'N' cities numbered from 1 to 'N' and 'M' two-way roads connecting them. Each road is defined by three integers ('U', 'V', 'W'), where 'U' and 'V' are the cities connected, and 'W' is the cost to travel between them. The goal is to find the minimum total cost to connect all cities such that there exists a path between every pair of cities. If it's impossible to connect all cities, return -1.",
                "constraints": [
                    "1 <= T <= 50",
                    "1 <= N <= 10^4",
                    "1 <= M <= 10^4",
                    "1 <= W <= 10^3",
                    "1 <= U, V <= N",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "5 6\n1 2 6\n2 3 5\n3 4 4\n1 4 1\n1 3 2\n3 5 3",
                        "output": "11",
                        "explanation": "Selecting the roads (1,4,1), (1,3,2), (2,3,5), (3,5,3) connects all cities with a minimum cost of 1 + 2 + 5 + 3 = 11."
                    },
                    {
                        "input": "3 1\n1 2 4",
                        "output": "-1",
                        "explanation": "It is impossible to connect all 3 cities, therefore the result is -1."
                    },
                    {
                        "input": "3 3\n1 2 1\n2 3 2\n3 1 3",
                        "output": "3",
                        "explanation": "Selecting the edges (1,2,1) and (2,3,2) connects all the nodes with total cost 3"
                    },
                    {
                        "input": "4 3\n1 2 4\n2 3 5\n3 4 1",
                        "output": "10",
                        "explanation": "Selecting the edges (1,2,4), (2,3,5), (3,4,1) connects all the nodes with total cost 10"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you think of a minimum spanning tree for this task?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}