{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 15937,
            "title": "Connecting Ropes",
            "titleSlug": "connecting-ropes_3114342",
            "content": "<h4 id=\"ninja-visited-his-village-after-a-long-time-his-village-is-having-a-river-in-its-center-with-n-houses-on-the-northern-bank-with-distinct-x-coordinates-a-1-a-2-a-n-and-n-houses-on-the-southern-bank-with-distinct-x-coordinates-b-1-b-2-b-n\">Ninja visited his village after a long time. His village is having a river in its center with \u2018N\u2019 houses on the northern bank with distinct X-coordinates \u2018A[1]\u2019 , A[2]\u2019 , \u2026 , \u2018A[N]\u2019 and \u2018N\u2019 houses on the southern bank with distinct X-coordinates \u2018B[1]\u2019 , \u2018B[2]\u2019 , \u2026, \u2018B[N]\u2019.</h4>\n\n<h4 id=\"ninja-aims-to-connect-as-many-north-south-pairs-of-houses-with-ropes-as-possible-such-that-no-ropes-cross-each-other-he-will-only-connect-house-a-i-with-house-b-i\">Ninja aims to connect as many north-south pairs of houses with ropes as possible such that no ropes cross each other. He will only connect house \u2018A[i]\u2019 with house \u2018B[i]\u2019.</h4>\n\n<h4 id=\"given-an-integer-n-and-arrays-a-and-b-representing-the-coordinates-of-houses-find-the-maximum-number-of-pairs-of-houses-ninja-can-connect\">Given an integer \u2018N\u2019 and arrays \u2018A\u2019 and \u2018B\u2019 representing the coordinates of houses. Find the maximum number of pairs of houses Ninja can connect.</h4>\n\n<h5 id=\"example\">Example :</h5>\n\n<pre><code>N = 3\nA = [ 1, 2, 3 ]\nB = [ 2, 1, 3 ]\n\nExplanation : \n\nOne of the possible connections can be (1,2) and (3,3).\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/capture1-13587.JPG\" alt=\"\"></p>\n\n<pre><code>Another possible connection is (2,1) and (3,3).\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/capture2-13588.JPG\" alt=\"\"></p>\n\n<pre><code>Ninja cannot connect all 3 pairs (1,2) , (2,1) and (3,3) as the first 2 pairs cross each other.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/capture3-13589.JPG\" alt=\"\"></p>\n\n<pre><code>So, the maximum connection is 2.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains an integer &#39;T&#39; which denotes the number of test cases to be run. Then the test cases follow.\n\nThe first line of each test case contains an integer \u2018N\u2019.\n\nThe next line contains \u2018N\u2019 integers representing the elements of array \u2018A\u2019 which denotes the coordinates of the northern houses.\n\nThe next line contains \u2018N\u2019 integers representing the elements of array \u2018B\u2019 which denotes the coordinates of the southern  houses.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case, output an integer denoting the maximum connections of houses possible.\n\nPrint the output of each test case in a new line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don\u2019t need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 5\n1\u2009&lt;= N &lt;= 10^5\n1 &lt;= A[i] &lt;= 10^5\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n2\n1 2\n1 2\n3\n1 2 3\n3 2 1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>2\n1\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1 :</h5>\n\n<pre><code>For test case 1 we have, \n\nBoth the pairs (1,1) and (2,2) can be connected without any ropes crossing each other. \n\nSo, we output 2.\n\nFor test case 2 we have,\n\nAny two pairs of houses will cross with each other.\n\nSo, we can only connect 1 of the 3 pairs of houses.\n\nSo, we output 1.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n4\n5 4 7 2 \n5 3 4 2 \n3\n6 4 3 \n3 7 5     \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>3\n2\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": -1,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two arrays, 'A' and 'B', representing the x-coordinates of houses on the northern and southern banks of a river, respectively.  The goal is to maximize the number of north-south house pairs (A[i], B[i]) that can be connected with ropes, ensuring that no ropes cross each other.  Determine the maximum number of such non-crossing connections.",
                "constraints": [
                    "1 <= T <= 5 (Number of test cases)",
                    "1 <= N <= 10^5 (Number of houses on each bank)",
                    "1 <= A[i] <= 10^5 (X-coordinate of houses on the northern bank)",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "2\n2\n1 2\n1 2",
                        "output": "2",
                        "explanation": "In the first test case, the pairs (1, 1) and (2, 2) can be connected without crossing. Hence, the maximum number of connections is 2."
                    },
                    {
                        "input": "3\n1 2 3\n3 2 1",
                        "output": "1",
                        "explanation": "In the second test case, connecting any two pairs will result in crossing ropes. Therefore, only one pair can be connected."
                    },
                    {
                        "input": "4\n5 4 7 2\n5 3 4 2",
                        "output": "3",
                        "explanation": null
                    },
                    {
                        "input": "3\n6 4 3\n3 7 5",
                        "output": "2",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Think about when two pairs cross each other.</p>",
            "<p>&nbsp;Think about optimising the time complexity of the previous approach.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}