{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 14333,
            "title": "Consecutive Available Seats",
            "titleSlug": "consecutive-available-seats_2111953",
            "content": "<pre><code> Several friends at a cinema ticket office would like to reserve consecutive available seats.\n Can you help to query all the consecutive available seats order by the seat_id using the following cinema table?\n\n | seat_id | free |\n |------- |------|\n | 1       | 1    |\n | 2       | 0    |\n | 3       | 1    |\n | 4       | 1    |\n | 6       | 1    |\n\n Your query should return the following result for the sample case above.\n\n| seat_id |\n|---------|\n| 3       |\n| 4       |\nNote:\nThe seat_id is an auto increment int, and free is bool (&#39;1&#39; means free, and &#39;0&#39; means occupied.).\n Consecutive available seats are more than 2(inclusive) seats consecutively available.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 4,
            "dislikes": "NA",
            "rephrased": {
                "body": "Several friends want to reserve consecutive available seats at a cinema.  Given a table `cinema` with `seat_id` (auto-incrementing integer) and `free` (boolean, '1' for free, '0' for occupied), find all consecutive available seats (at least two seats consecutively available) and order the results by `seat_id`.",
                "constraints": [],
                "testcases": [
                    {
                        "input": "CREATE TABLE cinema (seat_id INT, free BOOLEAN);\nINSERT INTO cinema (seat_id, free) VALUES (1, 1);\nINSERT INTO cinema (seat_id, free) VALUES (2, 0);\nINSERT INTO cinema (seat_id, free) VALUES (3, 1);\nINSERT INTO cinema (seat_id, free) VALUES (4, 1);\nINSERT INTO cinema (seat_id, free) VALUES (6, 1);",
                        "output": "seat_id\n3\n4",
                        "explanation": "Seats 3 and 4 are consecutive and available."
                    },
                    {
                        "input": "CREATE TABLE cinema (seat_id INT, free BOOLEAN);\nINSERT INTO cinema (seat_id, free) VALUES (1, 1);\nINSERT INTO cinema (seat_id, free) VALUES (2, 1);\nINSERT INTO cinema (seat_id, free) VALUES (3, 0);\nINSERT INTO cinema (seat_id, free) VALUES (4, 1);\nINSERT INTO cinema (seat_id, free) VALUES (5, 1);",
                        "output": "seat_id\n1\n2\n4\n5",
                        "explanation": "Seats 1 and 2 are consecutive and available, and seats 4 and 5 are consecutive and available."
                    },
                    {
                        "input": "CREATE TABLE cinema (seat_id INT, free BOOLEAN);\nINSERT INTO cinema (seat_id, free) VALUES (1, 1);\nINSERT INTO cinema (seat_id, free) VALUES (2, 0);\nINSERT INTO cinema (seat_id, free) VALUES (3, 0);\nINSERT INTO cinema (seat_id, free) VALUES (4, 1);\n",
                        "output": "",
                        "explanation": "There are no consecutive available seats."
                    },
                    {
                        "input": "CREATE TABLE cinema (seat_id INT, free BOOLEAN);\nINSERT INTO cinema (seat_id, free) VALUES (1, 1);\nINSERT INTO cinema (seat_id, free) VALUES (2, 1);\n",
                        "output": "seat_id\n1\n2",
                        "explanation": "Seats 1 and 2 are consecutive and available."
                    },
                    {
                        "input": "CREATE TABLE cinema (seat_id INT, free BOOLEAN);\nINSERT INTO cinema (seat_id, free) VALUES (1, 1);\nINSERT INTO cinema (seat_id, free) VALUES (3, 1);\nINSERT INTO cinema (seat_id, free) VALUES (5, 1);",
                        "output": "",
                        "explanation": "There are no consecutive available seats."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "SQL",
                "slug": "sql"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}