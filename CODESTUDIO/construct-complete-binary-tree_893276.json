{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8659,
            "title": "Construct complete Binary Tree",
            "titleSlug": "construct-complete-binary-tree_893276",
            "content": "<h4 id=\"you-are-given-an-array-list-arr-storing-values-of-n-nodes-of-a-binary-tree\">You are given an array/list &#39;ARR&#39; storing values of &#39;N&#39; nodes of a binary tree.</h4>\n\n<h4 id=\"your-task-is-to-construct-a-complete-binary-tree-from-the-given-array-in-level-order-fashion-i-e-elements-from-left-in-the-array-will-be-filled-in-the-tree-level-wise-starting-from-level-0\">Your task is to construct a complete binary tree from the given array in level order fashion, i.e. elements from left in the array will be filled in the tree level-wise starting from level 0.</h4>\n\n<h4 id=\"a-binary-tree-is-a-complete-binary-tree-if-all-the-levels-are-completely-filled-except-possibly-the-last-level-and-the-last-level-has-all-nodes-as-left-as-possible\">A Binary Tree is a Complete Binary Tree if all the levels are completely filled except possibly the last level and the last level has all nodes as left as possible.</h4>\n\n<h4 id=\"for-example-the-following-binary-tree-is-a-complete-binary-tree\">For example, the following binary tree is a complete binary tree:</h4>\n\n<p><img src=\"https://files.codingninjas.in/cbt-5985.png\" alt=\"example\"></p>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You need to return the root of the binary tree, the tree will be printed in level order format.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 representing the number of test cases. Then the test cases follow.\n\nThe first line of each test case contains an integer \u2018N\u2019 representing the size of the input array.\n\nThe second line of each test case contains elements of an array from which the complete binary tree is to be generated.\n\nFor example, the input array for the complete binary tree depicted in the below image would be [5, 6, 10, 2, 3, 5, 9]\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/binary-tree-1-5965.png\" alt=\"example\"></p>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print a single line containing nodes of the binary tree in the level order form. The line consists of values of nodes separated by a single space. In case a node is null, we take -1 in its place. Refer to the example given below.\n\nThe output for each test case is in a separate line.\n\nFor example, the output for the tree depicted in the below image would be:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/binary-tree-1-5965.png\" alt=\"example\"></p>\n\n<pre><code>5\n6 10\n2 3 5 9\n-1 -1 -1 -1 -1 -1 -1 -1\n</code></pre>\n\n<h4 id=\"explanation\">Explanation:</h4>\n\n<pre><code>Level 1:\nThe root node of the tree is 4\n\nLevel 2:\nLeft child of 5 = 6\nRight child of 5 = 10\n\nLevel 3:\nLeft child of 6 = 2\nRight child of 6 = 3\nLeft child of 10 = 5\nRight child of 10 = 9\n\nLevel 4:\nLeft child of 2 = null (-1)\nRight child of 2 = null (-1)\nLeft child of 3 = null (-1)\nRight child of 3 = null (-1)\nLeft child of 5 = null (-1)\nRight child of 5 = null (-1)\nLeft child of 9 = null (-1)\nRight child of 9 = null (-1)\n\nThe first not-null node(of the previous level) is treated as the parent of the first two nodes of the current level. The second not-null node (of the previous level) is treated as the parent node for the next two nodes of the current level and so on.\nThe output ends when all nodes at the last level are null(-1).\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>The above format was just to provide clarity on how the output is formed for a given tree.\nThe sequence will be put together in a single line separated by a single space. Hence, for the above-depicted tree, the output will be given as:\n\n5 6 10 2 3 5 9 -1 -1 -1 -1 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= N &lt;= 3000\n0 &lt;= ARR[i] &lt;= 10 ^ 6\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1\n7\n5 6 10 2 3 5 9\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>5 6 10 2 3 5 9 -1 -1 -1 -1 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1:</h5>\n\n<pre><code>For the first test case, the binary tree is printed in the level order format.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/binary-tree-1-5965.png\" alt=\"Sample Input 1\"></p>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n2\n1 2\n5\n1 2 3 4 5\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>1 2 -1 -1 -1\n1 2 3 4 5 -1 -1 -1 -1 -1 -1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 1,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of integers representing node values, construct a complete binary tree in level order. The array elements are filled into the tree level-wise, starting from the root (level 0) and proceeding from left to right. Return the root of the constructed tree.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= N <= 3000",
                    "0 <= ARR[i] <= 10 ^ 6"
                ],
                "testcases": [
                    {
                        "input": "n = 7, arr = [5, 6, 10, 2, 3, 5, 9]",
                        "output": "5 6 10 2 3 5 9 -1 -1 -1 -1 -1 -1 -1 -1",
                        "explanation": "The complete binary tree is constructed level by level. Root is 5, level 1 has 6 and 10, level 2 has 2, 3, 5, and 9, and level 3 has -1s representing NULL nodes."
                    },
                    {
                        "input": "n = 2, arr = [1, 2]",
                        "output": "1 2 -1 -1 -1",
                        "explanation": "The complete binary tree has root 1, left child 2, and the rest are null (-1)."
                    },
                    {
                        "input": "n = 5, arr = [1, 2, 3, 4, 5]",
                        "output": "1 2 3 4 5 -1 -1 -1 -1 -1 -1",
                        "explanation": "The complete binary tree has root 1, level 1 has 2 and 3, level 2 has 4 and 5 and the remaining nodes will be null"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you think of indexes of left and right child if the parent node is present at ith index?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Trees",
                "slug": "trees"
            },
            {
                "name": "Binary Trees",
                "slug": "binary-trees"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}