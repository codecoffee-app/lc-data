{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 16414,
            "title": "Construct The String",
            "titleSlug": "construct-the-string_3146850",
            "content": "<h4 id=\"your-friend-gave-you-a-challenge-he-gave-you-a-string-s-of-length-n-consisting-only-of-lowercase-english-alphabets-he-asked-you-to-construct-the-given-string-using-the-minimum-number-of-operations-in-each-operation-you-can-do-one-of-the-steps\">Your friend gave you a challenge. He gave you a string \u2018S\u2019 of length \u2018N\u2019 consisting only of lowercase English alphabets. He asked you to construct the given string using the minimum number of operations. In each operation, you can do one of the steps.</h4>\n\n<pre><code>1) Add a lowercase English alphabet at the end of the string.\n2) Create a copy of the string and concatenate both of the strings.\n</code></pre>\n\n<h4 id=\"initially-you-have-an-empty-string-so-if-you-perform-the-second-operation-you-will-get-an-empty-string\">Initially, you have an empty string. So if you perform the second operation, you will get an empty string.</h4>\n\n<h4 id=\"for-example-if-the-current-string-is-abc-then-after-performing-the-second-operation-the-current-string-will-be-abcabc\">For example: If the current string is \u201cabc\u201d, then after performing the second operation, the current string will be \u201cabcabc\u201d.</h4>\n\n<h5 id=\"input-format\">Input Format-</h5>\n\n<pre><code>First-line contains \u2018T\u2019, denoting the number of Test cases.\nFor each Test case:\nThe first line contains an integer, \u2018N\u2019, denoting the length of the input string S.\nThe following line contains the string \u2018S\u2019 of length \u2018N\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format-</h5>\n\n<pre><code>For each test case, you have to print an integer denoting the minimum number of operations required to form the given string \u2018S\u2019.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don\u2019t need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints -</h5>\n\n<pre><code>1 &lt;= \u2018T\u2019 &lt;= 10\n1 &lt;= \u2018N\u2019 &lt;= 10^5 \nNote- Sum of \u2018N\u2019 over all test cases does not exceed 10^5.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input-1</h5>\n\n<pre><code>2\n3\naba\n4\naaaa\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output-1</h5>\n\n<pre><code>3\n3\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1:</h5>\n\n<pre><code>For test case 1:\n    Add \u2018a\u2019 to the string. Hence the current string is \u2018a\u2019.\n    Add \u2018b\u2019 to the string. Hence the current string is \u201cab\u201d.\n    Add \u2018a\u2019 to the string. Hence the current string is \u201caba\u201d.\n    We needed three operations to get the desired string.\nFor test case 2:\n    Add \u2018a\u2019 to the string. Hence the current string is \u2018a\u2019.\n    Add \u2018a\u2019 to the string. Hence the current string is \u201caa\u201d.\n    Add \u201caa\u201d to the string. Hence the current string is \u201caaaa\u201d.\n    We needed three operations to get the desired string.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input -2</h5>\n\n<pre><code>2\n6\nabcabc\n2\naa\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output -2</h5>\n\n<pre><code>4\n2\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 10,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string 'S' of length 'N' consisting of lowercase English alphabets, construct 'S' from an initially empty string using the minimum number of operations. The allowed operations are:\n\n1.  Add a lowercase English alphabet to the end of the string.\n2.  Concatenate the string with a copy of itself (e.g., \"abc\" becomes \"abcabc\").",
                "constraints": [
                    "1 <= T <= 10 (where T is the number of test cases)",
                    "1 <= N <= 10^5 (where N is the length of the string S)",
                    "Sum of 'N' over all test cases does not exceed 10^5",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "3\naba",
                        "output": "3",
                        "explanation": "Initially empty string.\n1. Add 'a': \"a\"\n2. Add 'b': \"ab\"\n3. Add 'a': \"aba\"\nTotal operations: 3"
                    },
                    {
                        "input": "4\naaaa",
                        "output": "3",
                        "explanation": "Initially empty string.\n1. Add 'a': \"a\"\n2. Add 'a': \"aa\"\n3. Concatenate with itself: \"aaaa\"\nTotal operations: 3"
                    },
                    {
                        "input": "6\nabcabc",
                        "output": "4",
                        "explanation": "Initially empty string.\n1. Add 'a': \"a\"\n2. Add 'b': \"ab\"\n3. Add 'c': \"abc\"\n4. Concatenate with itself: \"abcabc\"\nTotal operations: 4"
                    },
                    {
                        "input": "2\naa",
                        "output": "2",
                        "explanation": "Initially empty string.\n1. Add 'a': \"a\"\n2. Add 'a': \"aa\"\nTotal operations: 2"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>When should you use the second operation?</p>",
            "<p><strong>&nbsp;</strong>Can we use the second operation when we have already made the first \u2018i\u2019 characters?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}