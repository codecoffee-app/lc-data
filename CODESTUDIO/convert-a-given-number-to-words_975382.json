{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9111,
            "title": "Convert a given number to words",
            "titleSlug": "convert-a-given-number-to-words_975382",
            "content": "<h4 id=\"given-an-integer-number-num-your-task-is-to-convert-num-into-a-word\">Given an integer number \u2018num\u2019. Your task is to convert \u2018num\u2019 into a word.</h4>\n\n<h4 id=\"suppose-the-given-number-num-is-9823-then-you-have-to-return-a-string-nine-thousand-eight-hundred-twenty-three-that-is-word-conversion-of-the-given-num-9823\">Suppose the given number \u2018num\u2019 is \u20189823\u2019 then you have to return a string \u201cnine thousand eight hundred twenty three\u201d that is word conversion of the given \u2018num\u2019 9823.</h4>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases.\n\nEach of the next \u2018T\u2019 lines contains a single integer \u2018num\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, return a string/character array that is the word form of the given number \u2018num\u2019.\n</code></pre>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>1. In every two consecutive words, there must be a space.\n2. All the characters of the word must be English lower letter.\n3. The return type must be a string.\n4. You are not required to print the output explicitly, it has already been taken care of. Just implement the function and return the word.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10^5\n0 &lt;= N &lt;= 9999\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n8743\n649\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>eight thousand seven hundred forty three\nsix hundred forty nine\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1 :</h5>\n\n<pre><code>Test Case 1:\n\n\nGiven \u2018num\u2019 is \u20188743\u2019 \n\n\u20188743\u2019 can be written as \u2018 8 x 1000 + 7 x 100 + 4 x 10 + 3\u2019 and the word form of this number is \u201ceight thousand seven hundred forty three\u201d.\n\n\nTest Case 2:\n\nGiven \u2018num\u2019 is \u2018649\u2019\n\n\u2018649\u2019 can be written as \u2018 6 x 100 + 4 x 10 + 9 \u2019 and the word form of this number is \u201csix hundred forty nine\u201d.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n10\n123\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>ten\none hundred twenty three\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": -3,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a non-negative integer `num` (0 <= num <= 9999), convert it into its equivalent word representation. The word representation should be in lowercase with spaces separating the words.",
                "constraints": [
                    "1 <= T <= 10^5",
                    "0 <= N <= 9999",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "8743",
                        "output": "eight thousand seven hundred forty three",
                        "explanation": "The number 8743 can be decomposed as 8 * 1000 + 7 * 100 + 4 * 10 + 3. Therefore, its word representation is 'eight thousand seven hundred forty three'."
                    },
                    {
                        "input": "649",
                        "output": "six hundred forty nine",
                        "explanation": "The number 649 can be decomposed as 6 * 100 + 4 * 10 + 9. Therefore, its word representation is 'six hundred forty nine'."
                    },
                    {
                        "input": "10",
                        "output": "ten",
                        "explanation": null
                    },
                    {
                        "input": "123",
                        "output": "one hundred twenty three",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to think recursive.</p>",
            "<p>Convert a single digit into an English word.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}