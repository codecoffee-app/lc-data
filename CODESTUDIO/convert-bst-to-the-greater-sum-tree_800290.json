{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8061,
            "title": "Convert Bst To The Greater Sum Tree",
            "titleSlug": "convert-bst-to-the-greater-sum-tree_800290",
            "content": "<h4 id=\"you-have-been-given-a-binary-search-tree-of-integers-you-are-supposed-to-convert-it-to-a-greater-sum-tree-such-that-the-value-of-every-node-in-the-given-bst-is-replaced-with-the-sum-of-the-values-of-all-the-nodes-which-are-greater-than-the-value-of-the-current-node-in-the-tree\">You have been given a Binary Search Tree of integers. You are supposed to convert it to a greater sum tree such that the value of every node in the given BST is replaced with the sum of the values of all the nodes which are greater than the value of the current node in the tree.</h4>\n\n<h4 id=\"a-binary-search-tree-is-a-tree-whose-internal-nodes-each-store-a-value-greater-than-all-the-values-in-the-nodes-left-subtree-and-less-than-those-in-its-right-subtree\">A Binary Search Tree is a tree, whose internal nodes each store a value greater than all the values in the node&#39;s left subtree and less than those in its right subtree.</h4>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>You need to modify the given tree only. You are not allowed to create a new tree.\n</code></pre>\n\n<h5 id=\"for-example\">For example:</h5>\n\n<pre><code>For the given binary search tree\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/sumbst-5368.jpg\" alt=\"Example\"></p>\n\n<pre><code>11 will be replaced by {15 + 29 + 35 + 40}, i.e. 119.\n2 will be replaced by {7 + 11 + 15 + 29 + 35 + 40}, i.e. 137.\n29 will be replaced by {35 + 40}, i.e. 75.\n1 will be replaced by {2 + 7 + 11 + 15 + 29 + 35 + 40}, i.e. 139.\n7 will be replaced by {11 + 15 + 29 + 35 + 40}, i.e. 130.\n15 will be replaced by {15 + 29 + 35 + 40}, i.e. 104.\n40 will be replaced by 0 {as there is no node with a value greater than 40}.\n35 will be replaced by {40}, i.e. 40.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains an integer &#39;T&#39;, which denotes the number of test cases. Then the test cases follow.\n\nThe first line of each test case contains elements in the level order form. The line consists of values of nodes separated by a single space. In case a node is null, we take -1 on its place.\n\nFor example, the input for the tree depicted in the below image would be :\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/btree-5038.png\" alt=\"Example\"></p>\n\n<pre><code>1\n2 3\n4 -1 5 6\n-1 7 -1 -1 -1 -1\n-1 -1\n</code></pre>\n\n<h4 id=\"explanation\">Explanation :</h4>\n\n<pre><code>Level 1 :\nThe root node of the tree is 1\n\nLevel 2 :\nLeft child of 1 = 2\nRight child of 1 = 3\n\nLevel 3 :\nLeft child of 2 = 4\nRight child of 2 = null (-1)\nLeft child of 3 = 5\nRight child of 3 = 6\n\nLevel 4 :\nLeft child of 4 = null (-1)\nRight child of 4 = 7\nLeft child of 5 = null (-1)\nRight child of 5 = null (-1)\nLeft child of 6 = null (-1)\nRight child of 6 = null (-1)\n\nLevel 5 :\nLeft child of 7 = null (-1)\nRight child of 7 = null (-1)\n\nThe first not-null node(of the previous level) is treated as the parent of the first two nodes of the current level. The second not-null node (of the previous level) is treated as the parent node for the next two nodes of the current level and so on.\nThe input ends when all nodes at the last level are null(-1).\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>The above format was just to provide clarity on how the input is formed for a given tree. \nThe sequence will be put together in a single line separated by a single space. Hence, for the above-depicted tree, the input will be given as:\n\n1 2 3 4 -1 5 6 -1 7 -1 -1 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print a single line that contains the level order traversal of the greater sum tree where all nodes are printed in a single-space separated manner.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= &#39;T&#39; &lt;= 100\n0 &lt;= &#39;N&#39; &lt;= 1000\n0 &lt;= &#39;DATA&#39; &lt;= 10 ^ 4 and &#39;DATA&#39; != -1\n\nWhere \u2018N\u2019 is the total number of nodes in the binary search tree, and &#39;DATA&#39; is the value of the binary search tree node.\n\nTime Limit: 1sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n5 2 7 1 3 6 8 -1 -1 -1 -1 -1 -1 -1 -1\n4 2 5 -1 3 -1 6 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>21 29 8 31 26 15 0\n11 18 6 15 0\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1:</h5>\n\n<pre><code>For the first test case, after converting the given binary tree into the greater sum tree, the level order traversal of the tree will be {21, 29, 8, 31, 26, 15, 0}, where 5 will be replaced by {6+7+8} i.e. 21, 3 will be replaced by {5+6+7+8} i.e. 26, 7 will be replaced by {8} i.e. 8, 1 will be replaced by {2+3+5+6+7+8} i.e. 33, 2 will be replaced by {3+5+6+7+8} i.e. 26, 6 will be replaced by {7+8} i.e. 15 and 8 will be replaced by 0 (because no node has a value greater than 8 in the given tree).\n\nFor the second test case, after converting the given binary tree into the greater sum tree, the level order traversal of the tree will be {11, 18, 6, 15, 0}, where, 4 will be replaced by {5+6} i.e. 11, 2 will be replaced by {3+4+5+6} i.e. 18, 5 will be replaced by {6} i.e. 6, 3 will be replaced by {4+5+6} i.e. 15 and 6 will be replaced by 0 (because no node has a value greater than 6 in the given tree).\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n11 2 29 1 7 15 40 -1 -1 -1 -1 -1 -1 35 -1 -1 -1\n10 5 15 2 7 12 20 -1 -1 -1 -1 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>119 137 75 139 130 104 0 40\n47 64 20 69 57 35 0\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-2\">Explanation of Sample Input 2:</h5>\n\n<pre><code>For the first test case, after converting the given binary tree into the greater sum tree, the level order traversal of the tree will be {119, 137, 75. 130, 104, 0, 40}.\n\nFor the second test case, after converting the given binary tree into the greater sum tree, the level order traversal of the tree will be {47, 64, 20, 69, 57, 35, 0}.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 46,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a Binary Search Tree (BST) of integers, convert it into a Greater Sum Tree. In a Greater Sum Tree, the value of each node is replaced by the sum of all nodes with values greater than the original node's value in the BST.  You must modify the given tree in-place; creating a new tree is not allowed.",
                "constraints": [
                    "1 <= 'T' <= 100 (Number of test cases)",
                    "0 <= 'N' <= 1000 (Total number of nodes in the BST)",
                    "0 <= 'DATA' <= 10^4 and 'DATA' != -1 (Value of each node, -1 represents null)",
                    "Time Limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "5 2 7 1 3 6 8 -1 -1 -1 -1 -1 -1 -1 -1",
                        "output": "21 29 8 31 26 15 0",
                        "explanation": "The BST is converted to a Greater Sum Tree.  The level order traversal of the modified tree is {21, 29, 8, 31, 26, 15, 0}. For instance, 5 is replaced by 6+7+8 = 21, 3 is replaced by 5+6+7+8 = 26, and so on."
                    },
                    {
                        "input": "4 2 5 -1 3 -1 6 -1 -1 -1 -1",
                        "output": "11 18 6 15 0",
                        "explanation": "The BST is converted to a Greater Sum Tree. The level order traversal of the modified tree is {11, 18, 6, 15, 0}. For example, 4 is replaced by 5+6 = 11, 2 is replaced by 3+4+5+6 = 18, and so on."
                    },
                    {
                        "input": "11 2 29 1 7 15 40 -1 -1 -1 -1 -1 -1 35 -1 -1 -1",
                        "output": "119 137 75 139 130 104 0 40",
                        "explanation": "The BST is converted to a Greater Sum Tree. The level order traversal of the modified tree is {119, 137, 75, 139, 130, 104, 0, 40}."
                    },
                    {
                        "input": "10 5 15 2 7 12 20 -1 -1 -1 -1 -1 -1 -1 -1",
                        "output": "47 64 20 69 57 35 0",
                        "explanation": "The BST is converted to a Greater Sum Tree. The level order traversal of the modified tree is {47, 64, 20, 69, 57, 35, 0}."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>For replacing the value of a node, find all the nodes which have the value greater than that node.</p>",
            "<p>Can you solve the problem with some modification of the in-order traversal?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Binary Search Trees",
                "slug": "binary-search-trees"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Trees",
                "slug": "trees"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}