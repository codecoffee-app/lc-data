{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10806,
            "title": "Convert Sorted Array to BST",
            "titleSlug": "convert-sorted-array-to-bst_1264995",
            "content": "<h4 id=\"you-have-been-given-a-sorted-array-of-length-n-you-need-to-construct-a-balanced-binary-search-tree-from-the-array-if-there-can-be-more-than-one-possible-tree-then-you-can-return-any\">You have been given a sorted array of length \u2018N\u2019. You need to construct a balanced binary search tree from the array. If there can be more than one possible tree, then you can return any.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>1. A balanced binary tree is a binary tree structure in which the left and right subtrees of every node differ in height by no more than 1.\n\n2. A binary search tree is a binary tree data structure, with the following properties\n    a. The left subtree of any node contains nodes with value less than the node\u2019s value.\n    b. The right subtree of any node contains nodes with values equal to or greater than the node\u2019s value.\n    c. Right, and left subtrees are also binary search trees.\n</code></pre>\n\n<h4 id=\"example\">Example:</h4>\n\n<pre><code>Below tree, is a balanced binary search tree\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/bbst-8418.png\" alt=\"1\"></p>\n\n<pre><code>Below tree is not a balanced tree as the height of the left subtree and right subtree of node \u20185\u2019 differs by more than 1. Moreover, the tree is also not a BST as node \u20182\u2019 is less than node \u20183\u2019 but \u20182\u2019 is the right child of \u20183\u2019.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/nbst-8419.png\" alt=\"1\"></p>\n\n<h4 id=\"input-format\">Input Format:</h4>\n\n<pre><code>The first line contains an integer &#39;T&#39; which denotes the number of test cases or queries to be run.\n\nThe first line of each test case contains an integer \u2018N\u2019 which denotes the number of elements in the array.\n\nThe second line of each test case contains \u2018N\u2019 space-separated integers denoting the elements of the array in strictly increasing order.\n</code></pre>\n\n<h4 id=\"output-format\">Output Format:</h4>\n\n<pre><code>For each test case, the output will be \u201c1\u201d if you have returned the correct answer, else it will be \u201c0\u201d.\n</code></pre>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>You do not need to input or print anything, and it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints:</h4>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= N &lt;= 3000\n1 &lt;= arr[i] &lt;= 10 ^ 5\n\nWhere &#39;arr[i]\u2019 is the value of i-th element of the given array\narr[0] &lt; arr[1] &lt; arr[2] . . . &lt; arr[N]. \n\nTime Limit: 1 sec\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1:</h4>\n\n<pre><code>2\n5\n1 2 3 4 5\n1\n12 \n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1:</h4>\n\n<pre><code>1\n1\n</code></pre>\n\n<h4 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1:</h4>\n\n<pre><code>For the first test case, one of the possible balanced BST will look like.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/1tc-8415.png\" alt=\"1\"></p>\n\n<pre><code>Level order traversal of the above tree is [ 3, 2, 5, 1, -1, 4 ], if you return this tree then you will get the output as 1.\n\nFor the second test case, the tree has only one node that is \u201812\u2019.\nLevel order traversal is [ 12 ], if you return this tree then you will get the output as 1.\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2:</h4>\n\n<pre><code>1\n2\n5 17\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2:</h4>\n\n<pre><code>1\n</code></pre>\n\n<h4 id=\"explanation-of-sample-input-2\">Explanation of Sample Input 2:</h4>\n\n<pre><code>The tree will look like this.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/2tc-8416.png\" alt=\"1\"></p>\n\n<pre><code>Another possible tree is\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/2tca-8417.png\" alt=\"1\"></p>\n\n<pre><code>Level order traversal is [ 17, 5 ] and [ 5, -1, 17 ], if you return any of this tree you will get the output as 1.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 21,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a sorted array of length 'N', construct a balanced binary search tree (BST). A balanced BST is one where the height difference between the left and right subtrees of any node is no more than 1. If multiple balanced BSTs are possible, you can return any one of them.\n\nNote: The left subtree of a node contains values less than the node's value. The right subtree contains values greater than or equal to the node's value. Both subtrees are also BSTs.",
                "constraints": [
                    "1 <= T <= 5 (Number of test cases)",
                    "1 <= N <= 3000 (Size of the array)",
                    "1 <= arr[i] <= 10^5 (Value of elements in the array)",
                    "arr[0] < arr[1] < arr[2] < ... < arr[N] (Array is strictly increasing)",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "5\n1 2 3 4 5",
                        "output": "1",
                        "explanation": "For an array [1, 2, 3, 4, 5], one possible balanced BST has '3' as the root, '2' as the left child, '5' as the right child, '1' as the left child of '2', and '4' as the left child of '5'."
                    },
                    {
                        "input": "1\n12",
                        "output": "1",
                        "explanation": "For an array [12], the BST will only have one node with value '12'."
                    },
                    {
                        "input": "2\n5 17",
                        "output": "1",
                        "explanation": "For the array [5, 17], two possible balanced BSTs exist. One has '17' as the root and '5' as the left child. Another has '5' as the root and '17' as the right child."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Think recursively by dividing the array into two half.</p>",
            "<p>Use stack for the iterative solution</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Stacks & Queues",
                "slug": "stacks-&-queues"
            },
            {
                "name": "Binary Trees",
                "slug": "binary-trees"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Trees",
                "slug": "trees"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}