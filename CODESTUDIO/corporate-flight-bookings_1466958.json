{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12580,
            "title": "Corporate Flight Bookings",
            "titleSlug": "corporate-flight-bookings_1466958",
            "content": "<h4 id=\"you-have-been-given-an-array-list-bookings-of-booking-details-of-n-flights-from-1-to-n-each-booking-detail-contains-three-positive-integers-first-last-seats-which-represent-a-booking-for-flights-first-through-last-inclusive-with-seats-seats-reserved-for-each-flight-in-the-range\">You have been given an array/list \u201cBOOKINGS\u201d of booking details of \u2018N\u2019 flights from 1 to \u2018N\u2019. Each booking detail contains three positive integers [first, last, seats] which represent a booking for flights \u201cfirst\u201d through \u201clast\u201d (inclusive) with \u201cseats\u201d seats reserved for each flight in the range.</h4>\n\n<h4 id=\"now-you-are-supposed-to-return-an-array-list-answer-of-length-n-where-answer-i-represents-the-total-number-of-seats-reserved-for-ith-flight\">Now, you are supposed to return an array/list \u201cANSWER\u201d of length \u2018N\u2019, where answer[i] represents the total number of seats reserved for ith flight.</h4>\n\n<h4 id=\"input-format\">Input Format :</h4>\n\n<pre><code>The first line contains an integer \u2018T\u2019 denoting the number of test cases. Then each test case follows.\n\nThe first input line of each test case contains two space-separated integers \u2018N\u2019 and \u2018M\u2019 denoting the number of flights and booking details, respectively.\n\nEach of the next \u2018M\u2019 lines contains three space-separated integers [first, last, seats] denoting the booking details.\n</code></pre>\n\n<h4 id=\"output-format\">Output Format :</h4>\n\n<pre><code>For each test case, print the \u2018N\u2019 space-separated integers denoting the elements of the \u201cANSWER\u201d array/list.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You are not required to print the expected output; it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints :</h4>\n\n<pre><code>1 &lt;= T &lt;= 50\n1 &lt;= N, M &lt;= 10^4\n1 &lt;= first, last &lt;= N\n1 &lt;= seats &lt;= 10^3\n\nWhere \u2018T\u2019 is the number of test cases, \u2018N\u2019 is the number of flights, \u2018M\u2019 is the length of booking details array/list and the three integers [first, last, seats] denote the details of a booking.\n\nTime Limit: 1 sec\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1 :</h4>\n\n<pre><code>2\n4 4\n1 2 3\n2 3 2\n1 3 1\n3 4 2 \n1 1\n1 1 7\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample output 1 :</h4>\n\n<pre><code>4 6 5 2\n7\n</code></pre>\n\n<h4 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1  :</h4>\n\n<pre><code>For the first test case,\nFlight labels:               1   2   3   4\nBooking 1 reserved:          3   3\nBooking 2 reserved:              2   2\nBooking 3 reserved:          1   1   1\nBooking 4 reserved:                  2   2    \nTotal seats:                 4   6   5   2\nHence, answer = [4, 6, 5, 2].\n\nFor the second test case, there is only one flight and single booking detail. So, answer = [7].\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2 :</h4>\n\n<pre><code>2\n3 2\n1 2 2\n2 3 3\n2 1\n1 2 1\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample output 2 :</h4>\n\n<pre><code>2 5 3\n1 1\n</code></pre>\n\n<h4 id=\"explanation-for-sample-input-2\">Explanation For Sample Input 2  :</h4>\n\n<pre><code>For the first test case,\nFlight labels:              1   2   3\nBooking 1 reserved:         2   2\nBooking 2 reserved:             3   3\nTotal seats:                2   5   3\nHence, answer = [2, 5, 3].\n\nFor the second test case, answer = [1, 1].\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 12,
            "dislikes": "NA",
            "rephrased": {
                "body": "You are given a list of flight booking details. There are 'N' flights, numbered from 1 to 'N'.  Each booking detail consists of three integers: `[first, last, seats]`. This means 'seats' number of seats are reserved for flights from 'first' to 'last' (inclusive). Your task is to determine the total number of seats reserved for each flight.",
                "constraints": [
                    "1 <= T <= 50",
                    "1 <= N, M <= 10^4",
                    "1 <= first, last <= N",
                    "1 <= seats <= 10^3",
                    "Where \u2018T\u2019 is the number of test cases, \u2018N\u2019 is the number of flights, \u2018M\u2019 is the length of booking details array/list and the three integers [first, last, seats] denote the details of a booking.",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "2\n4 4\n1 2 3\n2 3 2\n1 3 1\n3 4 2 \n1 1\n1 1 7",
                        "output": "4 6 5 2\n7",
                        "explanation": "Test Case 1:\nFor the first test case with N=4 flights and M=4 bookings:\n- Booking 1: Flights 1 and 2 each get 3 seats.\n- Booking 2: Flights 2 and 3 each get 2 seats.\n- Booking 3: Flights 1, 2, and 3 each get 1 seat.\n- Booking 4: Flights 3 and 4 each get 2 seats.\nTotal seats per flight: Flight 1: 3 + 1 = 4, Flight 2: 3 + 2 + 1 = 6, Flight 3: 2 + 1 + 2 = 5, Flight 4: 2 = 2.\nAnswer: [4, 6, 5, 2].\n\nTest Case 2:\nFor the second test case with N=1 flight and M=1 booking:\n- Booking 1: Flight 1 gets 7 seats.\nAnswer: [7]."
                    },
                    {
                        "input": "2\n3 2\n1 2 2\n2 3 3\n2 1\n1 2 1",
                        "output": "2 5 3\n1 1",
                        "explanation": "Test Case 1:\nFor the first test case with N=3 flights and M=2 bookings:\n- Booking 1: Flights 1 and 2 each get 2 seats.\n- Booking 2: Flights 2 and 3 each get 3 seats.\nTotal seats per flight: Flight 1: 2, Flight 2: 2 + 3 = 5, Flight 3: 3.\nAnswer: [2, 5, 3].\n\nTest Case 2:\nFor the second test case with N=2 flights and M=1 booking:\n- Booking 1: Flights 1 and 2 each get 1 seat.\nAnswer: [1, 1]."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you think of a brute force solution?</p>",
            "<p>Can you try to reduce the time taken and optimise?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}