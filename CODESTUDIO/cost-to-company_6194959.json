{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 22895,
            "title": "Cost To Company",
            "titleSlug": "cost-to-company_6194959",
            "content": "<h4 id=\"sam-is-a-recruiter-for-an-mnc-he-had-recruited-the-best-talents-this-hiring-season-there-are-n-candidates-where-n-is-even-his-task-is-to-divide-them-into-n-2-teams-each-team-consisting-of-2-candidates-a-junior-dev-and-senior-dev-and-the-problem-solving-skills-of-the-senior-dev-must-be-greater-than-the-junior-dev\">Sam is a recruiter for an MNC. He had recruited the best talents this hiring season. There are \u2018N\u2019 candidates, where \u2018N\u2019 is even. His task is to divide them into \u2018N\u2019/2 teams, each team consisting of 2 candidates - a junior dev and senior dev, and the problem-solving skills of the senior dev must be greater than the junior dev.</h4>\n\n<h4 id=\"the-candidates-are-sorted-in-decreasing-order-of-their-problem-solving-skills\">The candidates are sorted in decreasing order of their problem-solving skills.</h4>\n\n<h4 id=\"each-candidate-has-a-salary-expectation-for-the-junior-role-and-senior-role\">Each candidate has a SALARY expectation for the junior role and senior role.</h4>\n\n<h4 id=\"sam-wants-to-know-the-minimum-cost-to-the-company-for-the-optimal-arrangement-of-candidates-in-teams\">Sam wants to know the minimum cost to the company for the optimal arrangement of candidates in teams.</h4>\n\n<h4 id=\"the-salary-expectation-of-the-same-candidate-is-higher-for-senior-roles-than-the-junior-roles-but-after-the-arrangement-in-teams-the-salary-of-the-junior-may-be-higher-than-the-senior\">The salary expectation of the same candidate is higher for senior roles than the junior roles but after the arrangement in teams, the salary of the junior may be higher than the senior.</h4>\n\n<h5 id=\"example\">Example:</h5>\n\n<pre><code>Input: \u2018N\u2019 = 4 ,  &#39;SALARY&#39; =  [[8000,10000],[16000,25000],[10000,11000],[16000,20000]]\n\nOutput: 53000\nExplanation:\nArray elements represent the SALARY expectations of candidates sorted in decreasing order of problem-solving skills.\n\nThe first and second candidates can be put in a team, with the senior role for the first, so 10000+16000 = 26000.\nThe third and fourth candidates can be put in a team, with the senior role for the third, so 11000+16000 = 27000.\nThus, The Cost to Company =  26000 + 27000 = 53000.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of the input contains an integer denoting the number of test cases.\n\nThe first line of each test case contains an even integer, &#39;N\u2019, denoting the number of candidates.\n\nThe next \u2018N\u2019 lines of each test case contain 2 space-separated integers denoting SALARY expectations for the junior role and senior role in order.    \n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>Return an integer denoting the minimum cost to the company.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1  &lt;= T &lt;= 10\n2  &lt;= N &lt;= 10000\n1 &lt;= SALARY[i][0] &lt; SALARY[i][1] &lt;= 100000\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n4\n8000 10000\n16000 25000\n10000 11000 \n16000 20000\n4\n5000 6000 \n6000 7000 \n7000 8000\n8000 9000\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>53000\n28000\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1 :</h5>\n\n<pre><code>Test 1:\nArray elements represent the SALARY expectations of candidates sorted in decreasing order of problem-solving skills.\n\nThe first and second candidates can be put in a team, with the senior role for the first, so 10000+16000 = 26000.\nThe third and fourth candidates can be put in a team, with the senior role for the third, so 11000+16000 = 27000.\nThus, The Cost to Company =  26000 + 27000 = 53000.\n\nTest 2:\nThe first and second candidates can be put in a team, with the senior role for the first, so 6000+6000 = 12000.\nThe third and fourth candidates can be put in a team, with the senior role for the third, so 8000+8000 = 16000.\nThus, The Cost to Company =  12000 + 16000 = 28000.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n6\n5000 6000\n7700 8500\n6000 7000\n7000 8000\n9800 10000\n8000 9000\n2\n800 900\n1000 1100\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>45500\n1900\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -9,
            "dislikes": "NA",
            "rephrased": {
                "body": "A recruiter, Sam, needs to form N/2 teams from N candidates. Each team must consist of one junior and one senior developer. The candidates are already sorted by problem-solving skills in decreasing order. Each candidate has a salary expectation for both junior and senior roles. The goal is to minimize the total cost to the company while ensuring the senior developer's salary isn't lower than the junior's, even if their general salary expectation is higher for a senior role. Find the minimum total salary cost to the company.",
                "constraints": [
                    "1 <= T <= 10 (Number of test cases)",
                    "2 <= N <= 10000 (Number of candidates, always even)",
                    "1 <= SALARY[i][0] < SALARY[i][1] <= 100000 (Junior salary < Senior salary)",
                    "Time Limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "4\n8000 10000\n16000 25000\n10000 11000\n16000 20000",
                        "output": "53000",
                        "explanation": "Pair the first and second candidates, assigning the senior role to the first (10000 + 16000 = 26000).  Then, pair the third and fourth candidates, assigning the senior role to the third (11000 + 16000 = 27000). The total cost is 26000 + 27000 = 53000."
                    },
                    {
                        "input": "4\n5000 6000\n6000 7000\n7000 8000\n8000 9000",
                        "output": "28000",
                        "explanation": "Pair the first and second candidates, assigning the senior role to the first (6000 + 6000 = 12000).  Then, pair the third and fourth candidates, assigning the senior role to the third (8000 + 8000 = 16000). The total cost is 12000 + 16000 = 28000."
                    },
                    {
                        "input": "6\n5000 6000\n7700 8500\n6000 7000\n7000 8000\n9800 10000\n8000 9000",
                        "output": "45500",
                        "explanation": null
                    },
                    {
                        "input": "2\n800 900\n1000 1100",
                        "output": "1900",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Check for all permutations.</p>",
            "<p>There can be maximum \u2018N\u2019/2 seniors or juniors.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}