{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9307,
            "title": "Count Complete Binary Tree Nodes",
            "titleSlug": "count-complete-binary-tree-nodes_982774",
            "content": "<h4 id=\"given-a-complete-binary-tree-you-are-supposed-to-return-the-number-of-nodes-in-the-given-tree\">Given a complete binary tree, you are supposed to return the number of nodes in the given tree.</h4>\n\n<h4 id=\"in-a-complete-binary-tree-every-level-except-possibly-the-last-is-completely-filled-and-all-nodes-in-the-last-level-are-as-far-left-as-possible\">In a complete binary tree every level, except possibly the last, is completely filled, and all nodes in the last level are as far left as possible.</h4>\n\n<h5 id=\"for-example\">For example:</h5>\n\n<pre><code>For the binary trees in the image below.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/complete_binary_tree-6731.png\" alt=\"alt text\"></p>\n\n<pre><code>The left tree in the image is not a complete binary tree that\u2019s why it is invalid and the right tree in the image is a valid complete binary tree which contains total 6 nodes.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains an integer &#39;T&#39; which denotes the number of test cases or queries to be run. Then the test cases are as follows.\n\nThe only line of each test case contains elements in the level order form. The line consists of values of nodes separated by a single space. In case a node is null, we take -1 in its place. So -1 would not be a part of the tree nodes.\n\nFor example, the input for the tree depicted in the below image will be:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/0000000000004189.png\" alt=\"alt text\"></p>\n\n<pre><code>For example taking a tree:\n\n1\n2 3\n4 -1 5 6\n-1 7 -1 -1 -1 -1\n-1 -1\n</code></pre>\n\n<h4 id=\"explanation\">Explanation :</h4>\n\n<pre><code>Level 1 :\nThe root node of the tree is 1\n\nLevel 2 :\nLeft child of 1 = 2\nRight child of 1 = 3\n\nLevel 3 :\nLeft child of 2 = 4\nRight child of 2 = null (-1)\nLeft child of 3 = 5\nRight child of 3 = 6\n\nLevel 4 :\nLeft child of 4 = null (-1)\nRight child of 4 = 7\nLeft child of 5 = null (-1)\nRight child of 5 = null (-1)\nLeft child of 6 = null (-1)\nRight child of 6 = null (-1)\n\nLevel 5 :\nLeft child of 7 = null (-1)\nRight child of 7 = null (-1)\n\nThe first not-null node(of the previous level) is treated as the parent of the first two nodes of the current level. The second not-null node (of the previous level) is treated as the parent node for the next two nodes of the current level and so on.\n\nThe input ends when all nodes at the last level are null(-1).\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>The above format was just to provide clarity on how the input is formed for a given tree. \nThe sequence will be put together in a single line separated by a single space. Hence, for the above-depicted tree, the input will be given as:\n\n1 2 3 4 -1 5 6 -1 7 -1 -1 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print the number of nodes in the given binary tree.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You don\u2019t need to print anything, it has already been taken care of.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n0 &lt;= N &lt;= 3000\n0 &lt;= val &lt;= 10^5\n\nWhere \u2018T\u2019 is the number of test cases, and \u2018N\u2019 is the total number of nodes in the binary tree, and \u201cval\u201d is the value of the binary tree node\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n1 2 3 4 -1 -1 -1 -1 -1\n1 2 -1 -1 -1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>4 \n2 \n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1:</h5>\n\n<pre><code>For the first test case, the total number of nodes is 4.\n\nFor the second test case, the total number of nodes is 2.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n2 1 -1 -1 -1\n0 1 2 4 5 3 6 7 -1 -1 -1 -1 -1 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>2\n8 \n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-2\">Explanation of Sample Input 2:</h5>\n\n<pre><code>For the first test case, the total number of nodes is 2.\n\nFor the second test case, the total number of nodes is 8.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 11,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a complete binary tree represented in level order, determine the total number of nodes in the tree. A complete binary tree has all levels completely filled except possibly the last level, where nodes are as far left as possible. The tree is represented by a space-separated sequence of integers, where -1 indicates a null node.",
                "constraints": [
                    "1 <= T <= 100 (T is the number of test cases)",
                    "0 <= N <= 3000 (N is the total number of nodes)",
                    "0 <= val <= 10^5 (val is the value of the node)"
                ],
                "testcases": [
                    {
                        "input": "1 2 3 4 -1 -1 -1 -1 -1",
                        "output": "4",
                        "explanation": "The tree has 4 nodes: 1, 2, 3, and 4."
                    },
                    {
                        "input": "1 2 -1 -1 -1",
                        "output": "2",
                        "explanation": "The tree has 2 nodes: 1 and 2."
                    },
                    {
                        "input": "2 1 -1 -1 -1",
                        "output": "2",
                        "explanation": "The tree has 2 nodes: 2 and 1."
                    },
                    {
                        "input": "0 1 2 4 5 3 6 7 -1 -1 -1 -1 -1 -1 -1 -1 -1",
                        "output": "8",
                        "explanation": "The tree has 8 nodes: 0, 1, 2, 4, 5, 3, 6, and 7."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Think of how the left and right subtrees nodes can be used to calculate the current number of nodes.</p>",
            "<p>Do we really need to iterate each node since it is a complete binary tree?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Binary Trees",
                "slug": "binary-trees"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}