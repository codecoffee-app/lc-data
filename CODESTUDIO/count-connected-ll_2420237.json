{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 15151,
            "title": "Count Connected LL",
            "titleSlug": "count-connected-ll_2420237",
            "content": "<h4 id=\"ninjas-is-practicing-problems-on-the-linked-list-he-came-across-a-problem-in-which-he-has-given-a-linked-list-of-n-nodes-and-an-array-arr-of-size-m-that-is-the-subset-of-the-values-present-in-the-linked-list-he-has-to-print-the-number-of-connected-components-present-in-the-array-two-values-are-said-to-be-connected-if-they-present-next-to-each-other-in-the-linked-list\">Ninjas is practicing problems on the linked list. He came across a problem in which he has given a linked list of \u2018N\u2019 nodes and an array \u2018ARR\u2019 of size \u2018M\u2019 that is the subset of the values present in the linked list. He has to print the number of connected components present in the array. Two values are said to be connected if they present next to each other in the linked list.</h4>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019, the number of test cases.\n\nThe first line of each test case contains the linked list separated by space and terminated by -1.\n\nThe second line of each test case contains an integer \u2018M\u2019, representing the size of the array \u2018ARR\u2019.\n\nThe third line of each test case contains \u2018M\u2019 space-separated integers, representing the array \u2018ARR\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print the number of connected components.\n\nOutput for each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 3*10^3\n1 &lt;= M &lt;= N\nThe linked list consists of unique integers only.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n1 3 2 4 6 5 -1\n2\n1 3\n1 3 7 4 -1 \n3\n1 7 4\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>1\n2\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1 :</h5>\n\n<pre><code>For the first test case :\n\n1 3  appears consecutively in the linked list. So, they are connected.  \nCount: 1\n\nFor the second test case :\n\n1 and 7 4 are connected.\nCount: 2\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n1 3 4 5 -1\n4\n1 3 4 5\n1 2 -1\n1\n1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>1\n1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 4,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a singly linked list of 'N' nodes and an array 'ARR' of size 'M' containing a subset of the linked list's values, determine the number of connected components in 'ARR'. Two values are considered connected if they appear consecutively in the linked list.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 3*10^3",
                    "1 <= M <= N",
                    "The linked list consists of unique integers only."
                ],
                "testcases": [
                    {
                        "input": "head = 1 -> 3 -> 2 -> 4 -> 6 -> 5 -> NULL, arr = [1, 3], m = 2",
                        "output": "1",
                        "explanation": "The values 1 and 3 appear consecutively in the linked list (1 -> 3), hence they form a single connected component."
                    },
                    {
                        "input": "head = 1 -> 3 -> 7 -> 4 -> NULL, arr = [1, 7, 4], m = 3",
                        "output": "2",
                        "explanation": "The value 1 appears as a single node, and 7 and 4 are consecutive in the linked list (7 -> 4), so they form separate connected components. Total components = 2."
                    },
                    {
                        "input": "head = 1 -> 3 -> 4 -> 5 -> NULL, arr = [1, 3, 4, 5], m = 4",
                        "output": "1",
                        "explanation": "The values 1, 3, 4, and 5 appear consecutively in the linked list (1 -> 3 -> 4 -> 5), hence they form a single connected component."
                    },
                    {
                        "input": "head = 1 -> 2 -> NULL, arr = [1], m = 1",
                        "output": "1",
                        "explanation": "The array arr contains only 1, which is a single node in the linked list. So, total connected components = 1."
                    },
                    {
                        "input": "head = 5 -> 6 -> 7 -> 8 -> NULL, arr = [5, 8], m = 2",
                        "output": "2",
                        "explanation": "The values 5 and 8 are not adjacent in the linked list. They are disconnected and therefore have 2 connected components."
                    },
                    {
                        "input": "head = 1 -> 2 -> 3 -> 4 -> 5 -> NULL, arr = [2,4], m=2",
                        "output": "0",
                        "explanation": "The values 2 and 4 are not adjacent. They are not connected component. Therefore output is 0"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Traverse the recursively linked list while checking whether the value is present in the array or not.</p>",
            "<p>Traverse the iteratively linked list while checking whether the value of the nodes is present in the array or not</p>"
        ],
        "relatedTopics": [
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}