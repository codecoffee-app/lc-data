{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10021,
            "title": "Count customers who did not get a computer",
            "titleSlug": "count-customers-who-did-not-get-a-computer_1115775",
            "content": "<h4 id=\"mr-x-runs-an-internet-cafe-which-has-k-computers-his-internet-cafe-has-n-customers-who-can-come-anytime-throughout-the-day-initially-all-the-k-computers-are-available-for-customer-use-when-a-customer-enters-the-cafe-he-first-checks-whether-any-available-computer-is-there-if-he-finds-one-he-starts-using-it-and-it-is-marked-unavailable-when-he-leaves-the-cafe-that-computer-is-again-marked-as-available-if-the-customer-is-not-able-to-find-any-available-computer-he-leaves-the-cafe-immediately\">Mr. X runs an internet cafe which has &#39;K&#39; computers. His internet cafe has &#39;N&#39; customers who can come anytime throughout the day. Initially, all the &#39;K&#39; computers are available for customer use. When a customer enters the cafe he first checks whether any available computer is there. If he finds one he starts using it and it is marked unavailable. When he leaves the cafe that computer is again marked as available. If the customer is not able to find any available computer he leaves the cafe immediately.</h4>\n\n<h4 id=\"you-are-given-an-integer-array-arr-in-which-each-value-occurs-exactly-2-times-the-index-of-the-first-occurrence-of-any-value-denotes-the-arrival-time-of-the-customer-while-the-second-occurrence-denotes-the-departing-time-of-the-customer-your-task-is-to-find-the-no-of-customers-who-were-not-able-to-find-any-available-computer-and-had-to-leave-the-cafe-immediately\">You are given an integer array \u2018ARR\u2019 in which each value occurs exactly 2 times, the index of the first occurrence of any value denotes the arrival time of the customer while the second occurrence denotes the departing time of the customer. Your task is to find the no. of customers who were not able to find any available computer and had to leave the cafe immediately.</h4>\n\n<h5 id=\"for-example\">For example :</h5>\n\n<pre><code>Consider the sequence of customers as [ 1, 2, 3, 2, 3, 1 ] for N = 3 and K = 2.\n\nThe procedure takes place as follows :\n1) At the start, Customer 1 comes and finds an available computer and starts using it and now the number of available computers is reduced by 1. \n\n2) Customer 2 comes and he is also able to find an available computer and he starts using the computer. Now all the computers are unavailable.\n\n3) Customer 3 comes and goes back immediately as there are no computers available currently. \n\n4) Customer 2 leaves the cafe making 1 computer available. \n\n5) As customer 3 has already left no new computers are made available.\n\n6) Customer 1 leaves the cafe and all the computers are again available. \n\nAs only Customer 3 was unable to find any available computers therefore the answer is 1 for this case.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of the input contains an integer &#39;T&#39;, denoting the number of test cases.\n\nThe first line of each test case contains two space-separated integers &#39;N&#39; and &#39;K&#39; denoting the number of customers and the number of computers available in the cafe respectively.\n\nThe second line of each test case &#39;2*N&#39; space-separated integers denoting the array &#39;ARR&#39;.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case print the number of customers who left the cafe without using a computer. Print the output of each test case in a new line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 10^5\n1 &lt;= K &lt;= 10^5\n1 &lt;= ARR[i] &lt;= N\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n2 2\n1 2 2 1\n3 2 \n1 3 2 1 2 3\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>0\n1\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1:</h5>\n\n<pre><code>For the first test case:\n1) Initially, Customer 1 comes and finds an available computer and starts using it. Now only 1 computer is available.\n\n2) Then Customer 2 comes and takes the only available computer. Now all computers are unavailable.\n\n3) Customer 1 leaves the cafe making 1 computer available.\n\n4) Customer 2 leaves the cafe making all the computers available.\n\nAs all customers were able to find an available computer and nobody left without using a computer. Hence, the answer is 0 in this case.\n\nFor the second test case : \nThe procedure takes place as follows :\n1) At the start, Customer 1 comes and finds an available computer and starts using it and now the number of available computers is reduced by 1. \n\n2) Customer 3 comes and he is also able to find an available computer and he starts using the computer. Now all the computers are unavailable.\n\n3) Customer 2 comes and goes back immediately as there are no computers available currently. \n\n4) Customer 1 leaves the cafe making 1 computer available. \n\n5) As customer 2 has already left no new computers are made available. \n\n6) Customer 3 leaves the cafe and all the computers are again available. \n\nAs only Customer 2 was unable to find any available computers therefore the answer is 1 for this case.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n4 1\n1 2 3 4 4 3 2 1\n2 2\n1 2 1 2\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>3\n0\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 16,
            "dislikes": "NA",
            "rephrased": {
                "body": "Mr. X's internet cafe has K computers. N customers arrive throughout the day. Initially, all K computers are free. A customer takes a free computer if available, otherwise, they leave. You are given an array ARR of length 2*N, where each customer ID appears exactly twice. The first occurrence represents arrival, and the second represents departure. Your task is to find the number of customers who leave immediately due to the lack of available computers.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10^5",
                    "1 <= K <= 10^5",
                    "1 <= ARR[i] <= N",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "2 2\n1 2 2 1",
                        "output": "0",
                        "explanation": "With 2 computers, Customer 1 arrives and takes one. Customer 2 arrives and takes the other. Customer 2 leaves, freeing a computer. Customer 1 leaves, freeing another computer. No customers left without a computer."
                    },
                    {
                        "input": "3 2\n1 3 2 1 2 3",
                        "output": "1",
                        "explanation": "With 2 computers, Customer 1 arrives and takes one. Customer 3 arrives and takes the other. Customer 2 arrives and finds no computers, so leaves immediately. Customer 1 leaves, freeing a computer. Customer 3 leaves, freeing another computer. Only customer 2 leaves without using computer."
                    },
                    {
                        "input": "2\n4 1\n1 2 3 4 4 3 2 1",
                        "output": "3",
                        "explanation": "With 1 computer, customer 1 takes the only computer. Customer 2 finds no computers and leaves. Customer 3 finds no computers and leaves. Customer 4 finds no computers and leaves. Customer 4 leaves. Customer 3 leaves. Customer 2 leaves. Customer 1 leaves. 3 customers left without using computer."
                    },
                    {
                        "input": "2 2\n1 2 1 2",
                        "output": "0",
                        "explanation": "With 2 computers, customer 1 takes one, customer 2 takes the other. Customer 1 leaves and customer 2 leaves. 0 customers left without computers."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to think of an approach that stores the information about every customer in a data structure.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}