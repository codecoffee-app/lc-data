{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 11023,
            "title": "Count diagonal paths from a node to a leaf consisting of the same valued nodes",
            "titleSlug": "count-diagonal-paths-from-a-node-to-a-leaf-consisting-of-the-same-valued-nodes_1376437",
            "content": "<h4 id=\"you-are-given-a-binary-tree-your-task-is-to-return-the-count-of-the-diagonal-paths-to-the-leaf-of-the-given-binary-tree-such-that-all-the-values-of-the-nodes-on-the-diagonal-are-equal\">You are given a binary tree. Your task is to return the count of the diagonal paths to the leaf of the given binary tree such that all the values of the nodes on the diagonal are equal.</h4>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>A diagonal traversal Consider lines of slope -1 passing between nodes.\n         1\n       /    \\\n     4        2\n    /  \\        \\\n   8    5         3\n       /  \\       /\n      9    7      6\n\nExample: Here potential diagonals are: \n1 -- 2 -- 3\n4 -- 5 -- 7 -- 6\n8 -- 9 -- 7 \n</code></pre>\n\n<h5 id=\"for-example\">For Example</h5>\n\n<pre><code>Input: \n\n     5\n  /  \\\n 6      5\n  \\       \\\n   6       5\n\nOutput: 2 \n\nExplanation: \n\nDiagonal 6 \u2013 6 and 5 \u2013 5 contains equal value. Therefore, the required output is 2.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases.\nThe next \u2018T\u2019 lines represent the \u2018T\u2019 test cases.\n\nThe first line of input contains the elements of the tree in the level order form separated by a single space.\nIf any node does not have a left or right child, take -1 in its place. Refer to the example below.\n\nExample:\n\nElements are in the level order form. The input consists of values of nodes separated by a single space in a single line. In case a node is null, we take -1 in its place.\n\nFor example, the input for the tree depicted below :\n\n        1\n       /    \\\n     4        2\n    /  \\        \\\n   8    5         3\n       /   \\     /\n       9    7   6\n\n\n 1\n 4 2\n 8 5 -1 3\n-1 -1 9 7 6 -1\n-1 -1 -1 -1 -1 -1\n\nExplanation :\nLevel 1 :\nThe root node of the tree is 1\n\nLevel 2 :\nLeft child of 1 = 4\nRight child of 1 = 2\n\nLevel 3 :\nLeft child of 4 = 8\nRight child of 4 = 5\nLeft child of 2 = null (-1)\nRight child of 2 = 3\n\nLevel 4 :\nLeft child of 8 = null (-1)\nRight child of 8 = null (-1)\nLeft child of 5 = 9\nRight child of 5 = 7\nLeft child of3 = 6\nRight child of 5 = null (-1)\n\nLevel 5 :\nLeft child of 9 = null (-1)\nRight child of 9 = null (-1)\nLeft child of 7 = null (-1)\nRight child of 7 = null (-1)\nLeft child of 6 = null (-1)\nRight child of 6 = null (-1)\n\n\n\nThe first not-null node (of the previous level) is treated as the parent of the first two nodes of the current level. The second not- \nnull node (of the previous level) is treated as the parent node for the next two nodes of the current level and so on.\n\nThe input ends when all nodes at the last level are null (-1).\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>The above format was just to provide clarity on how the input is formed for a given tree. \n\nThe sequence will be put together in a single line separated by a single space. Hence, for the above-depicted tree, the input will be given as:\n\n1 4 2 8 5 -1 3 -1 -1 9 7 6 -1 -1 -1 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For every test case, return the count of the diagonal paths to the leaf of the given binary tree such that all the values of the nodes on the diagonal are equal.\n</code></pre>\n\n<h5 id=\"constraint\">Constraint :</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= N &lt;= 3000\n1 &lt;= data &lt;= 10^9\n\nWhere \u2018T\u2019 represents the number of test cases, \u2018N\u2019 is the number of nodes in the tree, and data denotes data contained in the node of a binary tree.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n5 6 5 -1 6 -1 5 -1 -1 -1 -1\n5 6 5 -1 5 -1 5 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample output 1:</h5>\n\n<pre><code>2\n1\n</code></pre>\n\n<h5 id=\"explanation-to-sample-input-1\">Explanation to Sample Input 1</h5>\n\n<pre><code>Test case 1:\n\n  5\n /  \\\n 6   5\n  \\    \\\n   6     5\n\n\nit is clear that the first diagonal path is 6 \u2013 6 and the second is 5 \u2013 5 contains an equal value. Therefore, the required output is 2.\n\n\n\nTest case 2:\n\n  5\n /    \\\n 6     5\n  \\       \\\n   5      5\n\n\nit is clear that the first diagonal path is 6 -- 5, and the second is 5 -- 5.\nHence diagonal binary tree traversal when combined is 1 3 5 2 4\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\n1 -1 2 3 4 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample output 2:</h5>\n\n<pre><code>1\n</code></pre>\n\n<h5 id=\"note-since-there-is-only-one-such-diagonal-consisting-of-the-only-node-3-therefore-the-count-is-1\">Note: Since there is only one such diagonal consisting of the only node 3, therefore, the count is 1</h5>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": -7,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a binary tree, your task is to determine the number of diagonal paths from the root to a leaf node where all node values along each diagonal path are equal. A diagonal path is defined by following lines of slope -1 from the root to a leaf.",
                "constraints": [
                    "1 <= T <= 100 (Number of test cases)",
                    "1 <= N <= 3000 (Number of nodes in the tree)",
                    "1 <= data <= 10^9 (Value of a node)",
                    "Time Limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "5 6 5 -1 6 -1 5 -1 -1 -1 -1",
                        "output": "2",
                        "explanation": "The tree can be visualized as:\n\n  5\n /  \\\n 6   5\n  \\    \\\n   6     5\n\nThere are two diagonal paths with equal values: 6-6 and 5-5. Therefore, the count is 2."
                    },
                    {
                        "input": "5 6 5 -1 5 -1 5 -1 -1 -1 -1",
                        "output": "1",
                        "explanation": "The tree can be visualized as:\n\n  5\n /    \\\n 6     5\n  \\       \\\n   5      5\n\nOnly the diagonal path 5-5 has equal values. Note that 6-5 does not consist of equal values.  Therefore, the count is 1."
                    },
                    {
                        "input": "1 -1 2 3 4 -1 -1 -1 -1",
                        "output": "1",
                        "explanation": "The tree can be visualized as:\n\n  1\n   \\ \n    2\n   / \\\n  3   4\n\nThere is one diagonal path starting at '3' to a leaf with value 3. The diagnols 1-2, 4 does not sastify the given condition. Thus, the count is 1."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to sort the array based on the decreasing order of their frequency counts and increasing order of their index values.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            },
            {
                "name": "Trees",
                "slug": "trees"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}