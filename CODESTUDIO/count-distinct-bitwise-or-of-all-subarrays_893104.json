{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8608,
            "title": "Count distinct Bitwise OR of all subarrays",
            "titleSlug": "count-distinct-bitwise-or-of-all-subarrays_893104",
            "content": "<h4 id=\"you-are-given-an-array-consisting-of-n-positive-integers-your-task-is-to-count-the-number-of-distinct-possible-values-that-can-be-obtained-by-taking-the-bitwise-or-of-the-elements-of-all-possible-subarrays-of-the-given-array\">You are given an array consisting of N positive integers, your task is to count the number of distinct possible values that can be obtained by taking the bitwise OR of  the elements of all possible subarrays of the given array</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>1) A subarray is a part of the array which is contiguous (i.e. elements in the original array occupy consecutive positions) and inherently maintains the order of elements. For example, the subarrays of the array {1, 2, 3} are {1}, {1, 2}, {1, 2, 3}, {2}, {2, 3}, and {3}.\n2) Bitwise OR operation takes two numbers and performs OR operation on every bit of those two numbers. For example, consider two numbers 2 and 3 their bitwise OR will be 3. Because the binary representation of 2 is 10 and the binary representation of 3 is 11. And OR of 10 and 11 will be 11 which evaluates to 3.\n3) The array may contain duplicate elements.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of the input contains an integer T denoting the number of test cases.\n\nThe first line of each test case contains an integer N, denoting the size of the array.\n\nThe second line of each test case contains N space-separated integers, representing the elements of the array.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>The only line of output of each test case consists of an integer, the count of distinct possible values of bitwise OR of all the subarrays. \n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= N &lt;= 10^5\n1 &lt;= ARR[i] &lt;= 10^9\n\nTime Limit : 1sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1\n3\n1 2 3\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>3\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for sample input 1:</h5>\n\n<pre><code>The possible subarrays of {1,2,3} are {1},{2},{3},{1,2},{1,2,3},{2,3}. And bitwise ORs of all the elements for all the subarrays will be 1,2,3,3,3,3 respectively. So, the count of distinct OR will be 3.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\n2\n1 5\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>2\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation for sample input 2:</h5>\n\n<pre><code>The possible subarrays of {1,5} are {1},{5},{1,5}. And bitwise ORs of the elements for all the subarrays will be 1,5,5 respectively. So, the count of distinct OR will be 2.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 18,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of positive integers, determine the number of unique values that can be obtained by performing a bitwise OR operation on all possible subarrays of the array.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= N <= 10^5",
                    "1 <= ARR[i] <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "size = 3, inputVector = [1, 2, 3]",
                        "output": "3",
                        "explanation": "The possible subarrays of {1,2,3} are {1},{2},{3},{1,2},{1,2,3},{2,3}. And bitwise ORs of all the elements for all the subarrays will be 1,2,3,3,3,3 respectively. So, the count of distinct OR will be 3."
                    },
                    {
                        "input": "size = 2, inputVector = [1, 5]",
                        "output": "2",
                        "explanation": "The possible subarrays of {1,5} are {1},{5},{1,5}. And bitwise ORs of the elements for all the subarrays will be 1,5,5 respectively. So, the count of distinct OR will be 2."
                    },
                    {
                        "input": "size = 5, inputVector = [1, 2, 3, 4, 5]",
                        "output": "5",
                        "explanation": "Possible subarray OR values: 1, 2, 3, 4, 5, 3, 5, 7, 7, 6, 7, 7, 7, 7, 7. Distinct OR values: 1, 2, 3, 4, 5, 6, 7. Count is 7"
                    },
                    {
                        "input": "size = 4, inputVector = [4, 2, 1, 8]",
                        "output": "8",
                        "explanation": "Possible subarray OR values: 4, 2, 1, 8, 6, 3, 9, 7, 11, 15.  Distinct OR values: 1, 2, 3, 4, 6, 7, 8, 9, 11, 15 Count is 10."
                    },
                    {
                        "input": "size = 1, inputVector = [10]",
                        "output": "1",
                        "explanation": "Only one subarray {10}. Bitwise OR is 10. Count is 1."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Traverse over all possible subarrays and calculate their bitwise OR</p>",
            "<p>Try to optimize the above approach by finding out some pattern between the answers we are adding at each step to our set.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}