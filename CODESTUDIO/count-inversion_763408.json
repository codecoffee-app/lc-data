{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 7769,
            "title": "Count Inversion",
            "titleSlug": "count-inversion_763408",
            "content": "<h4 id=\"given-a-singly-linked-list-of-integers-return-its-inversion-count-the-inversion-count-of-a-linked-list-is-a-measure-of-how-far-it-is-from-being-sorted\">Given a Singly Linked List of integers, return its inversion count. The inversion count of a linked list is a measure of how far it is from being sorted.</h4>\n\n<h4 id=\"two-nodes-n1-and-n2-form-an-inversion-if-the-value-of-n1-is-greater-than-the-value-of-n2-and-n1-appears-before-n2-in-the-linked-list\">Two nodes &#39;N1&#39; and &#39;N2&#39; form an inversion if the value of &#39;N1&#39; is greater than the value of &#39;N2&#39; and &#39;N1&#39; appears before &#39;N2&#39; in the linked list.</h4>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first and the only line of the input contains the elements of the singly linked list separated by a single space and terminated by -1. Hence, -1 would not be a list element.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>Print a single integer denoting the inversion count of the given linked list.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You don&#39;t need to print the output, it has already been taken care of. Just implement the given function. \n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>0 &lt;= L &lt;= 10^5\n-10^9 &lt;= data &lt;= 10^9 and data != -1\n\nWhere L is the number of nodes in the linked list and &#39;data&#39; is the node value of the linked list.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>3 2 1 5 4 -1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>4\n</code></pre>\n\n<h5 id=\"explanation-of-the-sample-input-1\">Explanation of the Sample Input 1:</h5>\n\n<pre><code>For the given linked list, there are 4 inversions: (3, 2), (3, 1), (2, 1) and (5, 4). Thus, the inversion count of the given linked list is 4.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>0 6 8 7 -1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>1\n</code></pre>\n\n<h5 id=\"explanation-of-the-sample-output-2\">Explanation of the Sample Output 2:</h5>\n\n<pre><code>For the given linked list, there is only 1 inversion: (8, 7). Thus, the inversion count of the given linked list is 1.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 38,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given the head of a singly linked list of integers, determine the number of inversions present in the list. An inversion occurs when two nodes, 'N1' and 'N2', exist such that 'N1' appears before 'N2' in the list, and the value of 'N1' is greater than the value of 'N2'.",
                "constraints": [
                    "0 <= L <= 10^5 (where L is the number of nodes in the linked list)",
                    "-10^9 <= data <= 10^9 and data != -1 (where 'data' is the node value of the linked list)",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "head=Node(3)->Node(2)->Node(1)->Node(5)->Node(4)",
                        "output": "4",
                        "explanation": "The inversions are: (3, 2), (3, 1), (2, 1), and (5, 4).  Therefore, the inversion count is 4."
                    },
                    {
                        "input": "head=Node(0)->Node(6)->Node(8)->Node(7)",
                        "output": "1",
                        "explanation": "The only inversion is (8, 7). Therefore, the inversion count is 1."
                    },
                    {
                        "input": "head=Node(1)->Node(2)->Node(3)->Node(4)->Node(5)",
                        "output": "0",
                        "explanation": "The list is sorted in ascending order, so there are no inversions."
                    },
                    {
                        "input": "head=Node(5)->Node(4)->Node(3)->Node(2)->Node(1)",
                        "output": "10",
                        "explanation": "All pairs form an inversion, resulting in an inversion count of 10."
                    },
                    {
                        "input": "head=Node(10)->Node(5)->Node(12)->Node(1)",
                        "output": "3",
                        "explanation": "The inversions are (10, 5), (10, 1), and (12, 1). The inversion count is 3."
                    },
                    {
                        "input": "head=Node(1)->Node(1)->Node(1)->Node(1)->Node(1)",
                        "output": "0",
                        "explanation": "All values are equal, therefore there are no inversions."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to find the number of nodes that form an inversion pair for each node in the linked list.</p>",
            "<p>Try to solve this problem using merge sort as an underlying approach.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Linked List",
                "slug": "linked-list"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}