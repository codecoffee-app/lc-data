{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12626,
            "title": "Count Messages",
            "titleSlug": "count-messages_1467167",
            "content": "<h4 id=\"you-are-given-a-task-to-do-some-analysis-for-a-messaging-service-application\">You are given a task to do some analysis for a messaging service application.</h4>\n\n<h4 id=\"you-are-given-series-of-queries-of-two-types\">You are given series of queries of two types :</h4>\n\n<pre><code>1 &#39;user&#39; &#39;time&#39;, denoting that the query is of type-1, and a person named &#39;user&#39; has received a message at the time &#39;time&#39;.\n\n2 \u2018l\u2019 \u2018r\u2019 &#39;user&#39; \u2018k\u2019, denoting that the query is of type-2, and [l, r] being a range of time, &#39;user&#39; is a name of a person, \u2018k\u2019 is the chunk size.\n</code></pre>\n\n<h4 id=\"for-query-of-type-2-you-need-to-print-a-list-of-integers-representing-the-number-of-messages-the-person-user-received-in-each-of-the-time-chunks-of-size-k-in-time-period-l-r\">For query of type-2 you need to print a list of integers, representing the number of messages the person &#39;user&#39; received in each of the time chunks of size \u2018k\u2019, in time period [l, r].</h4>\n\n<h5 id=\"example\">Example:</h5>\n\n<pre><code>If [l, r] = [10, 100] and \u2018k\u2019 = 35, then the chunks of size \u2018k\u2019 for the range will be:  [10, 44], [45, 79], [80, 100]. You need to return a list of size 3 here for each of these 3 chunks, where you tell the number of times a message is received by the person in that particular chunk (or sliced range).\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>Here you will implment function receiveMessage(user,time) for query of type-1, and implement function getMessageCount(l,r,user,k) for query fo type-2.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains an integer \u2018q\u2019, denoting the number of queries.\n\nThe next \u2018q\u2019 lines contain the queries of type-1 or type-2. The two types of queries are: \n\n1 &#39;user&#39; &#39;time&#39;, denoting that the query is of type-1, and a person named &#39;user&#39; has received a message at the time &#39;time&#39;.\n\n2 \u2018l\u2019 \u2018r\u2019 &#39;user&#39; \u2018k\u2019, denoting that the query is of type-2, and [l, r] being a range of time, &#39;user&#39; is a name of a person, \u2018k\u2019 is the chunk size.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each query of type-2 return a list of integers, representing the number of messages the person in the time chunks.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>Don&#39;t print anything it has already been taken care of. Just implement the given functions.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= q &lt;= 100\n1 &lt;= |user| &lt;= 10\n1 &lt;= k &lt;= 100\n0 &lt;= l, r , time &lt;= 3000\n\n|user| denotes the length of the string \u2018user\u2019\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>5\n1 abc 5\n1 def 7\n1 abc 9\n1 abc 3\n2 5 10 abc 3\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>1 1\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1 :</h5>\n\n<pre><code>Before the query of type-2, we have 4 queries of type-1, where 3 are the ones where the user is \u201cabc\u201d, who received messages at the time [3, 5, 9].\n\nWe need to find messages in the range [5, 10] in chunks of 3. I.e. [5, 6, 7], [8, 9, 10].\n\nThe user \u201cabc\u201d received a message at timestamp 3: which doesn\u2019t belong to any chunk\n\nThe user \u201cabc\u201d received a message at timestamp 5: which belongs to chunk 1\n\nThe user \u201cabc\u201d received a message at timestamp 7: which belongs to chunk 2.\n\nThus the answer is [1, 1], one message in each chunk.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>6\n1 nnax 85\n1 nqwl 35\n1 nnax 86\n1 nqwl 30\n1 nnax 1\n2 5 43 nqwl 10\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>0 0 1 1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 18,
            "dislikes": "NA",
            "rephrased": {
                "body": "You are developing a messaging service application. Implement two functions: `receiveMessage` to record when a user receives a message, and `getMessageCount` to analyze message frequency within specified time intervals. `receiveMessage` takes the user's name and the timestamp of the message as input. `getMessageCount` analyzes how many messages a specific user received within a given time range [l, r], divided into chunks of size k.  Specifically, `getMessageCount` should return a list where each element represents the number of messages the given user received within a given chunk of the range [l, r].",
                "constraints": [
                    "1 <= q <= 100",
                    "1 <= |user| <= 10",
                    "1 <= k <= 100",
                    "0 <= l, r, time <= 3000"
                ],
                "testcases": [
                    {
                        "input": "q = 5, queries = ['1, abc, 5', '1, def, 7', '1, abc, 9', '1, abc, 3', '2, 5, 10, abc, 3']",
                        "output": "[1, 1]",
                        "explanation": "User 'abc' received messages at times 3, 5, and 9. The range is [5, 10] with chunk size 3, creating chunks [5, 7] and [8, 10]. 'abc' received one message (at time 5) in the first chunk and one message (at time 9) in the second chunk."
                    },
                    {
                        "input": "q = 6, queries = ['1, nnax, 85', '1, nqwl, 35', '1, nnax, 86', '1, nqwl, 30', '1, nnax, 1', '2, 5, 43, nqwl, 10']",
                        "output": "[0, 0, 1, 1]",
                        "explanation": "User 'nqwl' received messages at times 35 and 30. The range is [5, 43] with chunk size 10, creating chunks [5, 14], [15, 24], [25, 34], and [35, 43]. 'nqwl' received zero messages in the first two chunks, one message (at time 30 falls outside the chunk [25,34]) in the third one, and one message (at time 35) in the final chunk."
                    },
                    {
                        "input": "q = 3, queries = ['1, user1, 10', '2, 0, 20, user1, 5']",
                        "output": "[1, 0, 0, 0, 0]",
                        "explanation": "User 'user1' received a message at time 10. The range [0, 20] with chunk size 5 creates chunks [0, 4], [5, 9], [10, 14], [15, 19], [20,20]. 'user1' received one message (at time 10) in the third chunk."
                    },
                    {
                        "input": "q = 4, queries = ['1, testUser, 0', '1, testUser, 99', '2, 50, 150, testUser, 50']",
                        "output": "[1, 0, 0]",
                        "explanation": "User 'testUser' received messages at times 0 and 99.  The range [50, 150] with chunk size 50 creates chunks [50, 99], [100, 149], [150, 150]. User received one message (at time 99) in the first chunk."
                    },
                    {
                        "input": "q = 2, queries = ['1, messageUser, 1000', '2, 900, 1100, messageUser, 200']",
                        "output": "[1, 0]",
                        "explanation": "User 'messageUser' received a message at time 1000. The range [900, 1100] with chunk size 200 creates chunks [900, 1099], [1100, 1100].  The user received one message (at time 1000) in the first chunk."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Hash/map the user with timestamp</p>"
        ],
        "relatedTopics": [
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}