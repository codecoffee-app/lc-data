{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 21772,
            "title": "Count minimum steps",
            "titleSlug": "count-minimum-steps_5259190",
            "content": "<h4 id=\"ram-is-a-bright-student-in-his-class-he-is-very-good-at-mathematics-so-to-test-his-skills-one-of-his-friends-shyam-thought-of-giving-him-a-task\">Ram is a bright student in his class. He is very good at mathematics. So to test his skills, one of his friends Shyam thought of giving him a task.</h4>\n\n<h4 id=\"in-the-task-shyam-would-give-ram-a-target-array-of-n-length-and-also-give-him-an-array-arr-of-length-n-with-all-zeros-ram-has-to-change-the-array-arr-into-the-target-array-using-the-minimum-number-of-operations-the-two-types-of-operation-that-can-be-performed-on-the-array-arr-are-as-follows\">In the task, Shyam would give Ram a \u2018TARGET\u2019 array of \u2018N\u2019 length. And also give him an array \u2018ARR\u2019 of length \u2018N\u2019 with all zeros. Ram has to change the array \u2018ARR\u2019 into the \u2018TARGET\u2019 array using the minimum number of operations. The two types of operation that can be performed on the array \u2018ARR\u2019 are as follows:</h4>\n\n<h4 id=\"1-incremental-operations-choose-1-element-from-the-array-arr-and-increment-its-value-by-one\">1) Incremental operations: Choose 1 element from the array \u2018ARR\u2019 and increment its value by one.</h4>\n\n<h4 id=\"2-doubling-operation-double-the-values-of-all-the-elements-of-the-array-arr\">2) Doubling operation: Double the values of all the elements of the array \u2018ARR\u2019.</h4>\n\n<h4 id=\"shyam-is-not-as-smart-as-ram-he-needs-your-assistance-to-find-the-minimum-number-of-operations-required-to-change-the-array-arr-into-target-so-that-he-can-verify-the-correctness-of-the-answer-given-by-ram-can-you-help-him-to-find-the-minimum-steps\">Shyam is not as smart as Ram, He needs your assistance to find the minimum number of operations required to change the array \u2018ARR\u2019 into \u2018TARGET\u2019. So that he can verify the correctness of the answer given by Ram. Can you help him to find the minimum steps?.</h4>\n\n<h4 id=\"we-are-given-the-desired-array-target-containing-n-elements-compute-and-return-the-smallest-possible-number-of-the-operations-needed-to-change-the-array-from-all-zeros-to-the-desired-array\">We are given the desired array \u2018TARGET\u2019 containing \u2018N\u2019 elements. Compute and return the smallest possible number of the operations needed to change the array from all zeros to the desired array.</h4>\n\n<h5 id=\"example\">Example :</h5>\n\n<pre><code>Input: \u2018N\u2019 = 2, \u2018TARGET\u2019 = {2, 3}\n\nOutput: 4\nIn this case, To get the target array from {0, 0}, we first, increment both elements by 1 (2 operations), then double the array (1 operation). Finally, increment the second element (1 more operation).\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line will contain the integer &#39;T&#39;, the number of test cases.\n\nEach test case consists of two lines.\n\nThe first line of input contains one integer, &#39;N&#39;, the length of the \u2018TARGET\u2019 array\n\nFollowed by a line containing space-separated \u2018N\u2019 non-negative integers, denoting the elements of the array.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case, print the minimum number of operations required to get the target array.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don&#39;t need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= &#39;T&#39; &lt;= 10\n1 &lt;= &#39;N&#39; &lt;= 10^5\n0 &lt;= \u2018TARGET[i]\u2019 &lt;= 10^9\nIt is guaranteed that sum of \u2018N\u2019 over all test cases is &lt;= 10^5\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n2 \n2 1\n3\n4 4 4\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>3\n5\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1 :</h5>\n\n<pre><code>For the first test case, One of the optimal solutions is to apply the incremental operation 2 times to the first and once on the second element.\n\nHence, the output will be: 3\n\nFor the second test case, The output solution looks as follows. First, apply an incremental operation to each element. Then apply the doubling operation two times. total number of operations is 3+2 = 5\n\nHence, the output will be: 5\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n5\n0 0 0 1 2\n4\n0 1 1 3\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>3\n5\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 10,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array 'TARGET' of 'N' non-negative integers, representing the desired state, determine the minimum number of operations needed to transform an initial array 'ARR' of the same length, filled with all zeros, into the 'TARGET' array. The allowed operations are: 1) Incrementing a single element of 'ARR' by one. 2) Doubling all elements of 'ARR'. Calculate and return the smallest number of operations to achieve the target state.",
                "constraints": [
                    "1 <= 'T' <= 10",
                    "1 <= 'N' <= 10^5",
                    "0 <= \u2018TARGET[i]\u2019 <= 10^9",
                    "It is guaranteed that the sum of \u2018N\u2019 over all test cases is <= 10^5",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "n = 2, target = [2, 1]",
                        "output": "3",
                        "explanation": "One optimal solution is to increment the first element twice and the second element once. This results in 3 incremental operations and no doubling operations needed. Therefore, the output is 3."
                    },
                    {
                        "input": "n = 3, target = [4, 4, 4]",
                        "output": "5",
                        "explanation": "First, apply an incremental operation to each element (3 operations). Then apply the doubling operation two times (2 operations). Total number of operations is 3 + 2 = 5."
                    },
                    {
                        "input": "n = 5, target = [0, 0, 0, 1, 2]",
                        "output": "3",
                        "explanation": "Increment the 4th element once and the 5th element twice. This results in 3 incremental operations and no doubling operations needed.  Therefore, the output is 3."
                    },
                    {
                        "input": "n = 4, target = [0, 1, 1, 3]",
                        "output": "5",
                        "explanation": "One possible optimal sequence is: Increment the 2nd and 3rd elements once, and the 4th element three times (5 incremental operations), no doubling needed."
                    },
                    {
                        "input": "n = 2, target = [2, 3]",
                        "output": "4",
                        "explanation": "In this case, to get the target array from {0, 0}, we first increment both elements by 1 (2 operations), then double the array (1 operation). Finally, increment the second element (1 more operation)."
                    },
                    {
                        "input": "n = 1, target = [5]",
                        "output": "5",
                        "explanation": "Increment the single element 5 times (5 operations)."
                    },
                    {
                        "input": "n = 3, target = [2, 4, 6]",
                        "output": "7",
                        "explanation": "Increment each element twice (6 operations), and double the array once (1 operation). Therefore, the total operations are 7."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><strong>Can we try out every possible sequence of moves?.</strong></p>",
            "<p><strong>Can we try to analyze the target array and find the minimum operations?.</strong></p>"
        ],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}