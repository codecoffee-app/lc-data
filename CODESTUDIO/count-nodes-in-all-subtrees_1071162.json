{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9649,
            "title": "Count nodes in all subtrees",
            "titleSlug": "count-nodes-in-all-subtrees_1071162",
            "content": "<h4 id=\"you-are-given-an-arbitrary-tree-consisting-of-n-nodes-numbered-from-0-to-n-1-you-need-to-find-the-total-number-of-elements-in-all-the-subtrees-of-the-given-tree-in-other-words-given-a-generic-tree-find-the-count-of-elements-in-the-subtrees-rooted-at-each-node\">You are given an arbitrary tree consisting of &#39;N&#39; nodes numbered from 0 to &#39;N&#39; - 1. You need to find the total number of elements in all the subtrees of the given tree. In other words, given a generic tree, find the count of elements in the subtrees rooted at each node.</h4>\n\n<pre><code>A subtree of a tree T is a tree S consisting of a node in T and all of its descendants in T. The subtree corresponding to the root node is the entire tree. For better understanding, refer to the image below:-\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/subtree-6967.png\" alt=\"alt text\"></p>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>1. The tree will always be rooted at 0. \n2. You can return the count of nodes in any order.\n3. The root of any subtree is also counted in the subtree thus the count of nodes in a subtree rooted at a leaf node is \n4. You can return the numbers in any order.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of the input contains a single integer &#39;T&#39;, representing the number of test cases. \nThe first line of each test case consists of a single integer &#39;N&#39;, representing the number of nodes in the given tree.\nThe next &#39;N&#39; - 1 lines of each test case contain two space-separated integers &#39;U&#39; and &#39;V&#39;, denoting an edge between the node &#39;U&#39; and the node &#39;V&#39;.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print the number of nodes in all subtrees of the given tree, in any order.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= N, E &lt;= 10^4\n0 &lt;= U,V &lt; N \nTime Limit: 1sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1\n7 \n0 1\n0 3\n0 4\n1 5\n3 2\n3 6\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>7 2 1 3 1 1 1 \n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for sample input 1:</h5>\n\n<pre><code>The above tree looks like - \n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/custom-tree-6968.png\" alt=\"alt text\"></p>\n\n<pre><code>The subtrees rooted at 5, 2, 6, 4 have 1 node each.\nThe subtree rooted at 1 has 2 nodes.\nThe subtree rooted at 3 has 3 nodes.\nThe subtree rooted at 0 has 7 nodes.\nHence, the output is {1, 1, 1, 1, 2, 3, 7}.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\n3 \n0 1\n0 2\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>1 1 3\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 4,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an arbitrary tree consisting of 'N' nodes numbered from 0 to 'N' - 1, determine the number of nodes in each subtree of the tree. A subtree is defined as a node and all its descendants. The tree is rooted at node 0.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= N <= 10^4",
                    "0 <= U,V < N"
                ],
                "testcases": [
                    {
                        "input": "n = 7, adj = [[1, 0], [3, 0], [4, 0], [5, 1], [2, 3], [6, 3]]",
                        "output": "7 2 1 3 1 1 1",
                        "explanation": "The tree has 7 nodes. The subtree rooted at 5, 2, 6, 4 have 1 node each. The subtree rooted at 1 has 2 nodes. The subtree rooted at 3 has 3 nodes. The subtree rooted at 0 has 7 nodes. The adjacency list represents the following edges: 0-1, 0-3, 0-4, 1-5, 3-2, 3-6."
                    },
                    {
                        "input": "n = 3, adj = [[1, 0], [2, 0]]",
                        "output": "3 1 1",
                        "explanation": "The tree has 3 nodes. The subtrees rooted at 1 and 2 have 1 node each. The subtree rooted at 0 has 3 nodes. The adjacency list represents the following edges: 0-1, 0-2."
                    },
                    {
                        "input": "n = 5, adj = [[1, 0], [2, 1], [3, 2], [4, 3]]",
                        "output": "5 4 3 2 1",
                        "explanation": "The tree is a linear chain 0->1->2->3->4. The subtree sizes are: 0 (5), 1 (4), 2 (3), 3 (2), 4 (1)."
                    },
                    {
                        "input": "n = 1, adj = []",
                        "output": "1",
                        "explanation": "A single node tree, the subtree is just the node itself, size 1."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><i>DFS&nbsp;</i></p>"
        ],
        "relatedTopics": [
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Trees",
                "slug": "trees"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}