{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 13914,
            "title": "Count of paths",
            "titleSlug": "count-of-paths_1821876",
            "content": "<h4 id=\"given-a-sequence-of-n-integers-arr0-arr1-arr2-arrn-1-and-an-integer-k\">Given a sequence of <strong>N</strong> integers: arr<sub>0</sub>, arr<sub>1</sub>, arr<sub>2</sub>, \u2026.. arr<sub>N-1</sub> and an integer <strong>K</strong></h4>\n\n<h4 id=\"k-is-divisible-by-all-the-array-elements-ie-k-arri-0-for-0-i-n-1\"><strong>K</strong> is divisible by all the array elements, ie: <strong>K % arr<sub>i</sub> = 0</strong> for (0 &lt;= i &lt;= N-1).</h4>\n\n<h5 id=\"a-directed-graph-is-built-using-this-sequence-a-directed-edge-from-the-jth-to-the-ith-array-element-exists-if-j-i-and-ai-is-divisible-by-aj-ie-ai-aj-0\">A directed graph is built using this sequence. A directed edge from the j<sup>th</sup> to the i<sup>th</sup> array element exists if <strong>j &lt; i</strong> and a<sub>i</sub> is divisible by a<sub>j</sub>, ie: <strong>a<sub>i</sub> % a<sub>j</sub> = 0</strong>.</h5>\n\n<h4 id=\"find-the-count-of-different-paths-from-0th-element-to-ith-element-for-0-i-n-1-as-the-answer-can-be-very-large-return-answer-modulo-109-7\">Find the count of different paths from 0<sup>th</sup> element to i<sup>th</sup> element for  0 &lt;= i &lt;= N-1. As the answer can be very large, return answer modulo 10<sup>9</sup>+7.</h4>\n\n<p>&nbsp;</p>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains a single integer &#39;T&#39; denoting the number of test cases to be run. Then the test cases follow. \n\nThe first line contains two integers, &#39;N&#39; and &#39;K&#39;, where N represents the sequence length.\n\nThe next line contains N integers, &#39;ai&#39; for (0 &lt;= i &lt;= N-1).\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>Print N integers, where ith element denotes the count of different paths from 1st element to ith element.\n\nOutput for each test case will be printed in a separate line,\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You are not required to print anything; it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 5 * 10^4    \n1 &lt;= K &lt;= 10^9  \n1 &lt;= ai &lt;= 10^5\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n6 60\n1 2 3 4 5 6\n1 10\n5\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>1 1 1 2 1 3 \n1 \n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of sample input 1:</h5>\n\n<pre><code>For test case 1:\nThere is exactly one path to reach 2: 1-&gt;2\nThere is exactly one path to reach 3: 1-&gt;3\nThere are two paths to reach 4: 1-&gt;4 and 1-&gt;2-&gt;4\nThere is exactly one path to reach 5: 1-&gt;5\nThere are three paths to reach 6: 1-&gt;6, 1-&gt;2-&gt;6 and 1-&gt;3-&gt;6\n\nFor test case 2:\nThere is only one element, therefore output will be 1.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\n7 120\n2 3 4 8 5 6 10\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>1 0 1 2 0 1 1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 7,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a sequence of N integers, `arr[0], arr[1], arr[2], ..., arr[N-1]`, and an integer K, where K is divisible by all elements in the array (i.e., `K % arr[i] == 0` for all `0 <= i < N`).  Construct a directed graph based on this sequence. A directed edge exists from the j-th element to the i-th element if `j < i` and `arr[i]` is divisible by `arr[j]` (i.e., `arr[i] % arr[j] == 0`).  Determine the number of distinct paths from the 0-th element to the i-th element for each `0 <= i < N`. Return the counts modulo 10^9 + 7.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 5 * 10^4",
                    "1 <= K <= 10^9",
                    "1 <= ai <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "N = 6, K = 60, arr = [1, 2, 3, 4, 5, 6]",
                        "output": "[1, 1, 1, 2, 1, 3]",
                        "explanation": "Paths to each element:\n- 1st element (1): 1 path (starting point).\n- 2nd element (2): 1 path (1 -> 2).\n- 3rd element (3): 1 path (1 -> 3).\n- 4th element (4): 2 paths (1 -> 4, 1 -> 2 -> 4).\n- 5th element (5): 1 path (1 -> 5).\n- 6th element (6): 3 paths (1 -> 6, 1 -> 2 -> 6, 1 -> 3 -> 6)."
                    },
                    {
                        "input": "N = 1, K = 10, arr = [5]",
                        "output": "[1]",
                        "explanation": "Only one element, so there is 1 path to reach it."
                    },
                    {
                        "input": "N = 7, K = 120, arr = [2, 3, 4, 8, 5, 6, 10]",
                        "output": "[1, 0, 1, 2, 0, 1, 1]",
                        "explanation": "Paths to each element:\n- 1st element (2): 1 path.\n- 2nd element (3): 0 paths (3 is not divisible by 2).\n- 3rd element (4): 1 path (2 -> 4).\n- 4th element (8): 2 paths (2 -> 4 -> 8, 2 -> 8).\n- 5th element (5): 0 paths (not divisible by earlier elements).\n- 6th element (6): 1 path (2 -> 6).\n- 7th element (10): 1 path (2 -> 10)."
                    },
                    {
                        "input": "N = 4, K = 24, arr = [1, 2, 4, 8]",
                        "output": "[1, 1, 2, 4]",
                        "explanation": "Paths to each element: \n -1st (1): 1 (starting point) \n -2nd (2): 1 (1->2) \n -3rd (4): 2 (1->4, 1->2->4) \n -4th (8): 4 (1->8, 1->2->8, 1->4->8, 1->2->4->8)"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>The graph formed will be a Directed Acyclic Graph.</p>",
            "<p>Edge can only exist from j to i if j &lt; i. We don\u2019t need to worry about elements to the right-side of i<sup>th</sup> position while finding the count of paths from 0<sup>th </sup>to i<sup>th </sup>element.</p>",
            "<p>To calculate the count of paths to i<sup>th</sup> element, do we need to iterate all elements from 0 to i-1?&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Depth-first Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}