{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9133,
            "title": "Count of plates",
            "titleSlug": "count-of-plates_975488",
            "content": "<h4 id=\"you-are-given-3-integers-n-r-r-where-n-is-the-number-of-plates\">You are given 3 Integers \u2018n\u2019, \u2018R\u2019 &amp; \u2018r\u2019 where \u2018n\u2019 is the number of plates,</h4>\n\n<h4 id=\"r-is-the-radius-of-the-table-and-r-is-the-radius-of-the-n-plates-the-task-is-to-find-out-whether-the-given-table-has-enough-space-to-accommodate-the-given-number-of-plates-of-radius-r-consider-the-table-and-plates-to-be-round-and-no-plate-can-be-placed-above-any-other\">\u2018R\u2019 is the radius of the table, and \u2018r\u2019 is the radius of the \u2018n\u2019 plates. The task is to find out whether the given table has enough space to accommodate the given number of plates of radius \u2018r\u2019. Consider the table and plates to be round and no plate can be placed above any other.</h4>\n\n<h4 id=\"each-plate-must-be-completely-inside-the-table-and-must-touch-the-edge-of-the-table-of-course-the-plates-must-not-intersect-but-they-can-touch-each-other\">Each plate must be completely inside the table and must touch the edge of the table. Of course, the plates must not intersect, but they can touch each other.</h4>\n\n<h4 id=\"you-have-to-return-true-if-the-table-can-accommodate-the-given-number-of-plates-else-return-false\">You have to return true if the table can accommodate the given number of plates else return false.</h4>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains an integer &#39;T&#39; which denotes the number of test cases or queries to be run. Then the test cases follow.\n\nThe first line of each test case contains 3 space-separated integers \u2018n\u2019, \u2018R\u2019 &amp; \u2018r\u2019\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case, print Yes if the table can accommodate the given number of plates else print No.\n\nPrint the output of each test case in a new line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don\u2019t need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10^5\n1\u2009&lt;= n &lt;= 10^6\n1 &lt;= r &lt;= 10^9\n1 &lt;= R &lt;= 10^9\n1 &lt;= r &lt;= R\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1</h5>\n\n<pre><code>3\n4 10 4\n5 10 4\n1 10 10\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1</h5>\n\n<pre><code>Yes\nNo\nYes\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1 :</h5>\n\n<pre><code>Test Case 1: n = 4 , R = 10 , r = 4\nOne of the possible arrangements can be : \n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/p1-11659.png\" alt=\"\"></p>\n\n<pre><code>Test case 2 : n = 5, R = 10, r = 4\nFrom the above figure we can see that we can place no more plates with \u201cr\u201d = 4.\nSo, we print No.\n\nTest case 3 : n = 1, R = 10, r = 10\nSince R=r , and n=1 so we can place the only plate over the table such that it overlaps\nwith the table.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/p2-11677.JPG\" alt=\"\"></p>\n\n<pre><code>So, we print Yes.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2</h5>\n\n<pre><code>2\n2 10 5\n10 10 10\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2</h5>\n\n<pre><code>Yes\nNo\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 21,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given the radius of a table 'R' and the radius of 'n' identical plates 'r', determine if the table has sufficient space to accommodate all 'n' plates. The plates are circular, must lie entirely within the table (also circular), and must touch the table's edge. Plates cannot overlap, although they may touch each other.",
                "constraints": [
                    "1 <= T <= 10^5",
                    "1 <= n <= 10^6",
                    "1 <= r <= 10^9",
                    "1 <= R <= 10^9",
                    "1 <= r <= R",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "4 10 4",
                        "output": "Yes",
                        "explanation": "It is possible to arrange 4 plates of radius 4 within a table of radius 10 such that each plate touches the edge of the table."
                    },
                    {
                        "input": "5 10 4",
                        "output": "No",
                        "explanation": "It is not possible to fit 5 plates of radius 4 inside a table of radius 10 while adhering to the given constraints."
                    },
                    {
                        "input": "1 10 10",
                        "output": "Yes",
                        "explanation": "When n=1 and R=r, the single plate exactly fits inside the table."
                    },
                    {
                        "input": "2 10 5",
                        "output": "Yes",
                        "explanation": "Two plates of radius 5 can fit inside a table of radius 10, each touching the table's edge."
                    },
                    {
                        "input": "10 10 10",
                        "output": "No",
                        "explanation": "It's not possible to arrange 10 plates, each with radius equal to the table's radius such that all plates lies within the table"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Think about the constraint , each plate of radius r must touch the edge of the table.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}