{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 16318,
            "title": "Count on a Tree",
            "titleSlug": "count-on-a-tree_3125881",
            "content": "<h4 id=\"there-are-n-cities-in-pokeland-and-they-are-connected-by-n-1-roads-it-is-possible-to-reach-from-any-city-to-any-other-city-and-there-is-a-unique-path-between-each-pair-of-cities\">There are \u2018N\u2019 cities in Pokeland, and they are connected by \u2018N-1\u2019 roads. It is possible to reach from any city to any other city and there is a unique path between each pair of cities.</h4>\n\n<h4 id=\"each-city-has-one-pokemon-represented-by-an-integer-between-1-and-10-9-in-each-city-given-queries-in-the-form-of-pairs-of-cities-u-and-v-find-the-number-of-pokemon-ash-catches-while-traveling-from-city-u-to-v-if-he-already-has-a-pokemon-x-and-he-comes-across-it-again-he-does-not-catch-it\">Each city has one Pokemon represented by an integer between 1 and 10^9. In each city. Given queries in the form of pairs of cities \u2018U\u2019 and \u2018V\u2019, find the number of Pokemon Ash catches while traveling from city \u2018U\u2019 to \u2018V\u2019. If he already has a Pokemon \u2018X\u2019 and he comes across it again, he does NOT catch it.</h4>\n\n<h3 id=\"note-each-query-is-independent-that-is-he-starts-each-query-with-zero-pokemon\">Note: Each query is independent, that is, he starts each query with zero Pokemon.</h3>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains &#39;T&#39;, denoting the number of test cases.\nFor each Test :\n    The first line contains two space separated integers &#39;N&#39; and \u2018Q\u2019, denoting the number of cities and the number of queries respectively.\nThe next N-1 lines contain a pair of cities \u2018X\u2019 and \u2018Y\u2019, indicating that there is a road between \u2018X\u2019 and \u2018Y\u2019.\nThe next line contains an array \u2018P\u2019 of \u2018N\u2019 integers, representing the type of Pokemon found in each city. \nThe next \u2018Q\u2019 lines contain a pair of cities \u2018U\u2019 and \u2018V\u2019, indicating each query.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>Print Q lines, i.e, for each query print the number of Pokemon Ash catches in that travel.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You are not required to print the expected output. It has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints -</h5>\n\n<pre><code>1 &lt;= &#39;T&#39; &lt;= 10\n2 &lt;= &#39;N&#39; &lt;= 10^4\n1 &lt;= \u2018Q\u2019 &lt;= 10^5\n1 &lt;= X,Y,U,V &lt;= N\n1&lt;= A[i] &lt;= 10^9, i \u2208 (1,N) \n\nNote - The sum of &#39;N&#39; over all test cases does not exceed 10^4 and the sum of \u2018Q\u2019 does not exceed 10^5.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1\n5 2\n1 2\n1 3\n2 4\n2 5\n1 2 3 3 4\n4 3\n1 5 \n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1</h5>\n\n<pre><code>3\n3\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1:</h5>\n\n<pre><code>For query 1:\nThe nodes on the path from 4 to 3 would be [4,2,1,3] and the Pokemon would be [3,2,1,3]. Since Ash already catches a Pokemon of type 3 in node 4, he does not catch the Pokemon at node 3. He ends his journey with 3 Pokemon.\n\nFor query 2:\nThe nodes on the path from 1 to 5 would be [1,2,5] and the Pokemon would be [1,2,4]. So, he ends his journey with 3 Pokemon.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\n3 2\n1 2\n1 3\n1 1 1\n2 3\n1 2\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>1\n1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Ninja",
            "likes": 8,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a tree-structured Pokeland with N cities and N-1 roads, where each city has a unique Pokemon type, determine the number of distinct Pokemon Ash catches while traveling between specified city pairs. Ash starts with no Pokemon for each query and does not catch duplicates.",
                "constraints": [
                    "1 <= 'T' <= 10",
                    "2 <= 'N' <= 10^4",
                    "1 <= \u2018Q\u2019 <= 10^5",
                    "1 <= X,Y,U,V <= N",
                    "1 <= A[i] <= 10^9, i \u2208 (1,N)",
                    "The sum of 'N' over all test cases does not exceed 10^4 and the sum of \u2018Q\u2019 does not exceed 10^5.",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "n = 5, edges = [(1, 2), (1, 3), (2, 4), (2, 5)], poke = [1, 2, 3, 3, 4], q = 2, queries = [(4, 3), (1, 5)]",
                        "output": "[3, 3]",
                        "explanation": "For query 1 (4 to 3), the path is [4, 2, 1, 3] and the Pokemon types are [3, 2, 1, 3]. Ash catches 3, then 2, then 1. He encounters 3 again, but doesn't catch it.  Total: 3 distinct Pokemon. For query 2 (1 to 5), the path is [1, 2, 5] and the Pokemon types are [1, 2, 4]. Ash catches 1, then 2, then 4. Total: 3 distinct Pokemon."
                    },
                    {
                        "input": "n = 3, edges = [(1, 2), (1, 3)], poke = [1, 1, 1], q = 2, queries = [(2, 3), (1, 2)]",
                        "output": "[1, 1]",
                        "explanation": "For query 1 (2 to 3), the path is [2, 1, 3] and the Pokemon types are [1, 1, 1]. Ash catches 1 at city 2. He encounters 1 again at city 1 and again at city 3, but doesn't catch them. Total: 1 distinct Pokemon. For query 2 (1 to 2), the path is [1, 2] and the Pokemon types are [1, 1]. Ash catches 1 at city 1. He encounters 1 again at city 2, but doesn't catch it. Total: 1 distinct Pokemon."
                    },
                    {
                        "input": "n = 4, edges = [(1,2),(2,3),(3,4)], poke = [10,20,10,5], q = 1, queries = [(1,4)]",
                        "output": "[3]",
                        "explanation": "For query 1 (1 to 4), the path is [1,2,3,4] and the pokemon types are [10,20,10,5]. Ash catches pokemon of type 10, 20, then encounters 10 again and doesn't catch. Finnaly catches 5. Total: 3 distinct pokemon (10, 20, 5)"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>For each pair of cities, what is the path between them?</p>",
            "<p>Can we reorder the queries in a way to compute them more efficiently?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Trees",
                "slug": "trees"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}