{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 17290,
            "title": "Count Pairs",
            "titleSlug": "count-pairs_3844022",
            "content": "<h4 id=\"you-are-given-an-array-a-of-length-n-consisting-only-of-integers-you-are-also-given-three-integers-x-y-and-sum-count-the-number-of-pairs-i-j-where-i-j-such-that-a-i-x-a-j-y-sum\">You are given an array &#39;A&#39; of length &#39;N&#39; consisting only of integers. You are also given three integers &#39;X&#39;, &#39;Y&#39; and &#39;SUM&#39;. Count the number of pairs (&#39;i&#39;, &#39;j&#39;) where &#39;i&#39; &lt; &#39;j&#39; such that (&#39;A[i]&#39; * &#39;X&#39; + &#39;A[j]&#39; * &#39;Y&#39;) = &#39;SUM&#39;.</h4>\n\n<h5 id=\"example\">Example :</h5>\n\n<pre><code>&#39;N&#39; = 3, &#39;A&#39; = {3, 1, 2, 3}, &#39;X&#39; = 4, &#39;Y&#39;= 2, &#39;SUM&#39; = 14\n\nFor &#39;i&#39; = 1, &#39;j&#39; = 2, Value of the expression = 4 * 3 + 2 * 1 = 14.\nFor &#39;i&#39; = 1, &#39;j&#39; = 3, Value of the expression = 4 * 3 + 2 * 2 = 16.\nFor &#39;i&#39; = 1, &#39;j&#39; = 4, Value of the expression = 4 * 3 + 2 * 3 = 18.\nFor &#39;i&#39; = 2, &#39;j&#39; = 3, Value of the expression = 4 * 1 + 2 * 2 = 8.\nFor &#39;i&#39; = 2, &#39;j&#39; = 4, Value of the expression = 4 * 1 + 2 * 3 = 10.\nFor &#39;i&#39; = 3, &#39;j&#39; = 4, Value of the expression = 4 * 2 + 2 * 3 = 14.\n\nThe possible pairs are :\n(1, 3), (3,4)\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains an integer &#39;T&#39;, which denotes the number of test cases to be run. Then the test cases follow.\n\nThe first line of each test case contains four integers &#39;N&#39;, &#39;X&#39;, &#39;Y&#39;, &#39;SUM&#39; denoting the size of the array, coefficient of the first element, coefficient of the second element, and the sum to be searched for.\n\nThe next line contains &#39;N&#39; space-separated integers representing the elements of the array.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case, print an integer, which denotes the number of pairs (&#39;i&#39;, &#39;j&#39;) such that (&#39;A[i]*X&#39; + &#39;A[j]*Y&#39;) = &#39;SUM&#39;.\n\nPrint the output of each test case in a new line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don\u2019t need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 10^5\n1 &lt;= X, Y &lt;= 10^4\n1 &lt;= SUM &lt;= 10^9\n0 &lt;= A[i] &lt;= 10^5\n\nIt is guaranteed that the count of pairs will fit in a 32-bit integer.\n\nThe Sum of &#39;N&#39; over all test cases is &lt;= 10^5.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n3 1 2 7\n1 3 2 \n2 1 1 2\n1 2\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>2\n0\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1 :</h5>\n\n<pre><code>For test 1:\nFor &#39;i&#39; = 1, &#39;j&#39; = 2, Value of the expression = 1 * 1 + 2 * 3 = 7.\nFor &#39;i&#39; = 1, &#39;j&#39; = 3, Value of the expression = 1 * 1 + 2 * 2 = 5.\nFor &#39;i&#39; = 2, &#39;j&#39; = 3, Value of the expression = 1 * 3 + 2 * 2 = 7.\n\n\nFor test 2:\nFor &#39;i&#39; = 1, &#39;j&#39; = 2, Value of the expression = 1 * 1 + 1 * 2 = 3.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n7 1 3 124\n13 4 82 40 14 27 37\n9 5 6 203\n13 19 7 23 23 19 28 18 18\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>3\n7\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -6,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array 'A' of length 'N' containing integers, and three integers 'X', 'Y', and 'SUM', determine the number of pairs (i, j) such that i < j and (A[i] * X + A[j] * Y) equals SUM.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10^5",
                    "1 <= X, Y <= 10^4",
                    "1 <= SUM <= 10^9",
                    "0 <= A[i] <= 10^5",
                    "The sum of 'N' over all test cases is <= 10^5.",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "3 1 2 7\n1 3 2",
                        "output": "2",
                        "explanation": "In the first test case:\n- For i=0, j=1: (1 * 1 + 3 * 2) = 7. So, (0,1) is a valid pair.\n- For i=0, j=2: (1 * 1 + 2 * 2) = 5.\n- For i=1, j=2: (3 * 1 + 2 * 2) = 7. So, (1,2) is a valid pair.\n\nTherefore, there are 2 such pairs."
                    },
                    {
                        "input": "2 1 1 2\n1 2",
                        "output": "0",
                        "explanation": "In the second test case:\n- For i=0, j=1: (1 * 1 + 2 * 1) = 3, which is not equal to 2.\n\nTherefore, there are no such pairs."
                    },
                    {
                        "input": "7 1 3 124\n13 4 82 40 14 27 37",
                        "output": "3",
                        "explanation": null
                    },
                    {
                        "input": "9 5 6 203\n13 19 7 23 23 19 28 18 18",
                        "output": "7",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>How can you find the required sum for all possible pairs ?</p>",
            "<p>How can you check if for an element 'A[j]', there exist a suitable 'A[i]' where 'i' &lt; 'j' in an efficient way?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}