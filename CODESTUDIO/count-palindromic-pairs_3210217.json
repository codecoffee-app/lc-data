{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 16568,
            "title": "Count Palindromic Pairs",
            "titleSlug": "count-palindromic-pairs_3210217",
            "content": "<h4 id=\"you-are-given-a-list-of-n-words-words-your-task-is-to-return-all-pairs-of-the-distinct-indices-i-j-in-words-such-that-the-concatenation-of-words-i-and-words-j-is-a-palindrome\">You are given a list of \u2018N\u2019 words \u2018WORDS\u2019. Your task is to return all pairs of the distinct indices (i, j) in \u2018WORDS\u2019, such that the concatenation of WORDS[i] and WORDS[j] is a palindrome.</h4>\n\n<h4 id=\"for-example\">For Example:</h4>\n\n<pre><code>You are given \u2018WORDS\u2019 = [\u201ccat\u201d, \u201cmat\u201d, \u201ctac\u201d]. Then the answer will be [(0, 2), (2, 0)}, because \u201ccat\u201d + \u201ctac\u201d = \u201ccattac\u201d which is a palindrome and \u201ctac\u201d + \u201ccat\u201d = \u201ctaccat\u201d which is also a palindrome.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of the input contains a single integer &#39;T&#39;, representing the number of test cases.\n\nThe first line of each test case contains an integer \u2018N\u2019, representing the number of words in \u2018WORDS\u2019.\n\nThe next \u2018N\u2019 lines contain a String, representing a word of \u2018WORDS\u2019\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print all pairs of the distinct indices (i, j) in \u2018WORDS\u2019, such that the concatenation of WORDS[i] and WORDS[j] is a palindrome.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n2 &lt;= N &lt;= 1000\n0 &lt;= WORDS[i].LENGTH &lt;= 100\nWORDS[i] consists of lowercase English letters\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n3\ncat\nmat\ntac\n3\nab  \nba\nbb\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>0 2 \n2 0\n0 1\n1 0\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1:</h5>\n\n<pre><code>For the first test case, the answer will be [(0, 2), (2, 0)], because \u201ccat\u201d + \u201ctac\u201d = \u201ccattac\u201d which is a palindrome, and \u201ctac\u201d + \u201ccat\u201d = \u201ctaccat\u201d which is also a palindrome.\n\nFor the second test case, the answer will be [(0, 1), (1, 0)], because \u201cab\u201d + \u201cba\u201d = \u201cabba\u201d which is a palindrome, and \u201cba\u201d + \u201cab\u201d = \u201cbaab\u201d which is also a palindrome.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n2\nabc \ncba\n3\nwow\nbow \nwob \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>0 1\n1 0\n1 2\n2 1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -5,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a list of 'N' words, 'WORDS', find all distinct pairs of indices (i, j) such that the concatenation of WORDS[i] and WORDS[j] forms a palindrome.",
                "constraints": [
                    "1 <= T <= 10 (Number of test cases)",
                    "2 <= N <= 1000 (Number of words in WORDS)",
                    "0 <= WORDS[i].LENGTH <= 100 (Length of each word)",
                    "WORDS[i] consists of lowercase English letters",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "3\ncat\nmat\ntac",
                        "output": "0 2\n2 0",
                        "explanation": "The concatenations \"cat\" + \"tac\" = \"cattac\" and \"tac\" + \"cat\" = \"taccat\" are both palindromes. The indices of \"cat\" and \"tac\" are 0 and 2, respectively."
                    },
                    {
                        "input": "3\nab\nba\nbb",
                        "output": "0 1\n1 0",
                        "explanation": "The concatenations \"ab\" + \"ba\" = \"abba\" and \"ba\" + \"ab\" = \"baab\" are both palindromes.  The indices of \"ab\" and \"ba\" are 0 and 1, respectively."
                    },
                    {
                        "input": "2\nabc\ncba",
                        "output": "0 1\n1 0",
                        "explanation": "The concatenations \"abc\" + \"cba\" = \"abccba\" and \"cba\" + \"abc\" = \"cbaabc\" are both palindromes. The indices of \"abc\" and \"cba\" are 0 and 1, respectively."
                    },
                    {
                        "input": "3\nwow\nbow\nwob",
                        "output": "1 2\n2 1",
                        "explanation": "The concatenations \"bow\" + \"wob\" = \"bowwob\" and \"wob\" + \"bow\" = \"wobbow\" are both palindromes. The indices of \"bow\" and \"wob\" are 1 and 2, respectively."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Check every pair of words.</p>",
            "<p>Is there a way to avoid checking all the pairs?</p>",
            "<p>Can we use any other data structure like the hash map?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Tries",
                "slug": "tries"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}