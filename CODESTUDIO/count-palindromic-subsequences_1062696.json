{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9594,
            "title": "Count Palindromic Subsequences",
            "titleSlug": "count-palindromic-subsequences_1062696",
            "content": "<h4 id=\"a-subsequence-of-a-string-is-achieved-by-removing-some-possibly-0-characters-without-changing-the-order-of-the-remaining-characters\">A subsequence of a string is achieved by removing some (possibly 0) characters without changing the order of the remaining characters.</h4>\n\n<p><br/></p>\n\n<h4 id=\"you-have-been-given-a-string-s\">You have been given a string <em><strong>&#39;s&#39;</strong></em>.</h4>\n\n<p><br/></p>\n\n<h4 id=\"find-the-number-of-non-empty-palindromic-subsequences-not-necessarily-be-distinct-in-string-s-and-return-that-number-modulo-10-9-7\">Find the number of non-empty palindromic subsequences (not necessarily be distinct) in string &#39;s&#39; and return that number modulo 10 ^ 9 + 7.</h4>\n\n<p><br/></p>\n\n<h5 id=\"example\">Example :</h5>\n\n<pre><code>Input: &#39;s&#39; = &quot;pqqr&quot;\n\nOutput: 5\n\nExplanation: The subsequences are:\n\np\n\nq\n\nq\n\nr\n\nqq\n\nPlease note that both &quot;q&quot; are considered different.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains a string &#39;s&#39;.\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>Print the number of non-empty palindromic subsequences modulo 10 ^ 9 + 7.\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the given function.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>pqqr\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"sample-output-1\">Sample output 1 :</h5>\n\n<pre><code>5\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"explanation-of-sample-output-1\">Explanation of Sample output 1 :</h5>\n\n<pre><code>The subsequences are:\np\nq\nq\nr\nqq\nPlease note that both &quot;q&quot; are considered different.\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>abc\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"sample-output-2\">Sample output 2 :</h5>\n\n<pre><code>3\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"sample-input-3\">Sample Input 3:</h5>\n\n<pre><code>aaaa\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"sample-output-3\">Sample Output 3:</h5>\n\n<pre><code>15\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"expected-time-complexity\">Expected time complexity :</h5>\n\n<pre><code>The expected time complexity is O(|s| ^ 2).\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= |s| &lt;= 1000\n\nWhere |s| denotes the length of &#39;s&#39;.\n\nTime limit: 1 sec\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 24,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string 's', find the number of non-empty palindromic subsequences (not necessarily distinct) in 's'. Return the count modulo 10^9 + 7.  A subsequence is formed by removing zero or more characters from the string without altering the order of the remaining characters. A palindrome reads the same forwards and backward.",
                "constraints": [
                    "1 <= |s| <= 1000, where |s| denotes the length of 's'.",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "pqqr",
                        "output": "5",
                        "explanation": "The palindromic subsequences are: 'p', 'q', 'q', 'r', 'qq'. Note that duplicate characters at different positions are treated as distinct."
                    },
                    {
                        "input": "abc",
                        "output": "3",
                        "explanation": "The palindromic subsequences are: 'a', 'b', 'c'."
                    },
                    {
                        "input": "aaaa",
                        "output": "15",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you think of breaking the problem into sub-problems?</p>",
            "<p>Can you optimize your recursive solution using some extra space?</p>",
            "<p>Can you think of doing it iteratively to avoid stack size problems?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}