{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10337,
            "title": "Count the number of subsequences having product not more than \u2018p\u2019",
            "titleSlug": "count-the-number-of-subsequences-having-product-not-more-than-p_1214647",
            "content": "<h4 id=\"given-an-array-of-non-negative-integers-a-and-an-integer-p-find-the-total-number-of-subsequences-of-a-such-that-the-product-of-any-subsequence-should-not-be-more-than-p\">Given an array of non-negative integers \u2018A\u2019 and an integer \u2018P\u2019, find the total number of subsequences of \u2018A\u2019 such that the product of any subsequence should not be more than \u2018P\u2019.</h4>\n\n<pre><code>A subsequence is a sequence that can be derived from another sequence by deleting some or no elements without changing the order of the remaining elements.\n</code></pre>\n\n<h5 id=\"note\">Note</h5>\n\n<pre><code>You need to print your answer modulo 10^9 + 7.\n</code></pre>\n\n<h5 id=\"for-example\">For Example</h5>\n\n<pre><code>Let us take  A = [1,2,3] and P = 4. \nAll the subsequences not having product more than \u20184\u2019 are {1}, {2}, {3}, {1,2}, {1,3}. Therefore count is equal to \u20185\u2019.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 denoting the number of test cases.\n\nThe first line of each test case contains two integers, \u2018N\u2019-number of elements in the array and \u2018P\u2019.\n\nThe second line of each test case contains \u2018N\u2019 space-separated integers that make up \u2018A\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format</h5>\n\n<pre><code>For each test case, Print an integer denoting the count of subsequences not having a product more than \u2018P\u2019.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 10^3\n1 &lt;= A[i] &lt;= 10^3\n1 &lt;= P &lt;= 10^3\n\nWhere A[i] is array element at index \u2018i\u2019,  \u2018P\u2019 is product value.\nThe Sum of &#39;N&#39; over all test cases is &lt;= 10 ^ 3.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n3 8\n2 3 5  \n4 10\n15 20 30 25 \n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>4\n0\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1:</h5>\n\n<pre><code>Test Case 1: The given array is [2,3,5]. \nAll the possible subsequences of this array are {2}, {3}, {5}, {2,3}, {2,5}, {3,5}, {2,3,5}. But product of elements of subsequence {2,5}, {3,5}, {2,3,5} is more than p i.e 8. Therefore required count is 4.\n\nTest Case 2: The given array is [15, 20. 30, 25] and p=10. \nAs all the subsequences have product more than10\u2019. So answer equals 0.    \n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2</h5>\n\n<pre><code>2\n5 6\n2 7 3 6 1\n6 24\n1 5 4 9 8 16\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2</h5>\n\n<pre><code>9\n13\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation For Sample Input 2:</h5>\n\n<pre><code>Test Case 1: The given array is [2, 7, 3, 6, 1]. \nThe total number of subsequences having product less than 6 are 9.\n\nTest Case 2: The given array is [1, 5, 4, 9, 8, 16] \nThe total number of subsequences having product less than 24 are 13.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 15,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of non-negative integers `A` and an integer `P`, determine the number of subsequences of `A` whose product is no greater than `P`. A subsequence is derived by deleting zero or more elements from the original sequence, preserving the order of the remaining elements. Return the count modulo 10^9 + 7.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10^3",
                    "1 <= A[i] <= 10^3",
                    "1 <= P <= 10^3",
                    "The Sum of 'N' over all test cases is <= 10 ^ 3"
                ],
                "testcases": [
                    {
                        "input": "n = 3, nums=[2,3,5], p = 8",
                        "output": "4",
                        "explanation": "The valid subsequences are {2}, {3}, {5}, and {2, 3}. The products are 2, 3, 5, and 6 respectively, all less than or equal to 8."
                    },
                    {
                        "input": "n = 4, nums=[15,20,30,25], p = 10",
                        "output": "0",
                        "explanation": "All subsequences have a product greater than 10, so the count is 0."
                    },
                    {
                        "input": "n = 5, nums=[2,7,3,6,1], p = 6",
                        "output": "9",
                        "explanation": "Valid subsequences are {2}, {7}, {3}, {6}, {1}, {2,3}, {2,1}, {3,1}, {1,2} The count is 9. Note that {7}, {6}, {2,7}... and all other subsequences have products greater than 6"
                    },
                    {
                        "input": "n = 6, nums=[1,5,4,9,8,16], p = 24",
                        "output": "13",
                        "explanation": "The valid subsequences are {1}, {5}, {4}, {9}, {8}, {16}, {1, 5}, {1, 4}, {1, 9}, {1, 8}, {1, 16}, {5, 4}, {4,5}. The products are 1, 5, 4, 9, 8, 16, 5, 4, 9, 8, 16, 20, 20, all less than or equal to 24.  There are more valid subsequences in total of 13 count."
                    },
                    {
                        "input": "n = 3, nums=[1,2,3], p = 4",
                        "output": "5",
                        "explanation": "The valid subsequences are {1}, {2}, {3}, {1,2}, {1,3}.  Therefore count is equal to \u20185\u2019."
                    },
                    {
                        "input": "n = 2, nums=[1,1000], p = 1000",
                        "output": "3",
                        "explanation": "The valid subsequences are {1}, {1000}, {1,1000}. The count is 3."
                    },
                    {
                        "input": "n=1, nums=[1000], p = 1",
                        "output": "1",
                        "explanation": "Only the empty subsequence and subsequence {1000} exists but empty is not considered, subsequnece {1000} has product 1000>1, but the problem requires finding subsequence that should not be more than p, in such case, only subsequence having elements that equals p exists in such conditions and other elements can be included if it doesnt make the product more than p"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to find all subsequences using recursion.</p>",
            "<p>Try to think of the overlapping subproblems.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}