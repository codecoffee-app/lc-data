{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9422,
            "title": "Count triplets in a sorted doubly linked list whose sum is equal to a given value x",
            "titleSlug": "count-triplets-in-a-sorted-doubly-linked-list-whose-sum-is-equal-to-a-given-value-x_985286",
            "content": "<h4 id=\"you-are-given-a-sorted-doubly-linked-list-of-distinct-nodes-that-means-no-two-nodes-present-in-the-list-have-the-same-data-you-are-also-given-an-integer-x-your-task-is-to-count-the-number-of-triplets-in-the-list-that-sum-up-to-a-given-value-x\">You are given a sorted doubly linked list of distinct nodes that means no two nodes present in the list have the same data. You are also given an integer &#39;X&#39;.Your task is to count the number of triplets in the list that sum up to a given value &#39;X&#39;.</h4>\n\n<h4 id=\"a-doubly-linked-list-dll-contains-an-extra-pointer-called-the-previous-pointer-together-with-the-next-pointer-and-data-which-are-there-in-the-singly-linked-list-such-that-both-forward-and-backward-navigation-is-possible\">A doubly linked List (DLL) contains an extra pointer, called the previous pointer, together with the next pointer and data, which are there in the singly linked list such that both forward and backward navigation is possible.</h4>\n\n<h4 id=\"for-example-dll-is-1-2-3-4-null-and-the-given-integer-x-is-9-then-the-number-of-triplets-having-the-sum-9-is-only-one-and-that-is-2-3-4\">For example, DLL is 1&lt;-&gt;2&lt;-&gt;3&lt;-&gt;4 NULL and the given integer &#39;X&#39; is 9, then the number of triplets having the sum 9 is only one, and that is (2,3,4).</h4>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>1. If no such triplets exist, return zero.\n2. At least three elements will always be present in the linked list.\n</code></pre>\n\n<h5 id=\"input-format\">Input format :</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases.\n\nThe next \u20182*T\u2019 lines represent the \u2018T\u2019 test cases.\n\nThe first line of each test case contains space-separated integers denoting the nodes of the linked list. Each line is guaranteed to have -1 at the end to signify the end of the linked list.\n\nThe second line of each test case contains a single integer &#39;X&#39; denoting the value of triplet sum.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case, print an integer denoting the count of the triplets.\n\nThe output of every test case will be printed in a separate line. \n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You don\u2019t have to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= &#39;T&#39; &lt;= 10\n3 &lt;= &#39;N&#39; &lt;= 100\n1 &lt;= &#39;X&#39; &lt;= 10^8\n1 &lt;= &#39;V&#39; &lt;= 10^8\n\nWhere &#39;V&#39; denotes any linked list element.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>3\n1 2 3 8 9 -1\n13\n1 2 3 4 5 6 7 8 9 -1\n15\n7 33 88 91 -1\n40\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>2\n8\n0\n</code></pre>\n\n<h5 id=\"explanation-of-the-sample-input-1\">Explanation of the Sample Input 1:</h5>\n\n<pre><code>For the first test case:\nThe linked List is 1&lt;--&gt;2&lt;--&gt;3&lt;--&gt;8&lt;--&gt;9 NULL\nWe can clearly see that 2 triplets exist for this case, i.e., (2,3,8) and (1,3,9)\n\nFor the second test case:\nThe linked List is :1&lt;--&gt;2&lt;--&gt;3&lt;--&gt;4\u2190&gt;5&lt;--&gt;6&lt;--&gt;7&lt;--&gt;8&lt;--&gt;9 NULL\nFor this case we can see that there are total of eight triplets i.e. (2,4,9),(4,5,6),(2,6,7),(3,4,8),(1,5,9),(1,6,8),(2,5,8)and (3,5,7)\n\nFor the third test case:\nThe Linked List is 7&lt;--&gt;33&lt;--&gt;88&lt;--&gt;91 NULL\nFor this test case, we can see that there is no such triplet that gives us the 40, so the answer will be zero here.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>1\n3 7 9 23 45 -1\n19\n8 13 16 -1\n37\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>1 \n1\n</code></pre>\n\n<h5 id=\"explanation-of-the-sample-input-2\">Explanation of the Sample Input 2:</h5>\n\n<pre><code>In the first test case only the triplets (3, 7, 9) sum up to 19, Therefore the answer is 1.\n\nIn the second test case there is only 1 triplet (8, 13, 16) and that does sum to 37. Therefore the answer is 1.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 26,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a sorted doubly linked list of distinct nodes and an integer 'X', determine the number of triplets in the list that sum up to 'X'. A doubly linked list contains a 'prev' pointer in addition to 'next' and 'data', allowing for forward and backward navigation. If no such triplets exist, return 0. Assume there are always at least three elements in the linked list.",
                "constraints": [
                    "1 <= 'T' <= 10",
                    "3 <= 'N' <= 100",
                    "1 <= 'X' <= 10^8",
                    "1 <= 'V' <= 10^8 (where 'V' is any linked list element)"
                ],
                "testcases": [
                    {
                        "input": "list=[1,2,3,8,9], x=13",
                        "output": "2",
                        "explanation": "The linked List is 1<-->2<-->3<-->8<-->9 NULL. Two triplets exist for this case: (2,3,8) and (1,3,9)."
                    },
                    {
                        "input": "list=[1,2,3,4,5,6,7,8,9], x=15",
                        "output": "8",
                        "explanation": "The linked List is 1<-->2<-->3<-->4<-->5<-->6<-->7<-->8<-->9 NULL. There are eight triplets: (2,4,9), (4,5,6), (2,6,7), (3,4,8), (1,5,9), (1,6,8), (2,5,8), and (3,5,7)."
                    },
                    {
                        "input": "list=[7,33,88,91], x=40",
                        "output": "0",
                        "explanation": "The Linked List is 7<-->33<-->88<-->91 NULL. No triplet sums to 40."
                    },
                    {
                        "input": "list=[3,7,9,23,45], x=19",
                        "output": "1",
                        "explanation": "Only the triplet (3, 7, 9) sums up to 19."
                    },
                    {
                        "input": "list=[8,13,16], x=37",
                        "output": "1",
                        "explanation": "There is only 1 triplet (8, 13, 16) and that does sum to 37."
                    },
                    {
                        "input": "list=[1,2,3], x=6",
                        "output": "1",
                        "explanation": "The only triplet (1, 2, 3) sums to 6."
                    },
                    {
                        "input": "list=[1,2,3,4,5], x=10",
                        "output": "2",
                        "explanation": "The triplets (1, 4, 5) and (2, 3, 5) sums to 10."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try and think of how you can check for each element, whether including it in triplet can make the sum <strong>X</strong></p>",
            "<p>Try mapping the values for checking the sum in further iterations.</p>",
            "<p>Try to use a two pointer approach for checking the sum.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}