{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12069,
            "title": "Count unsorted columns",
            "titleSlug": "count-unsorted-columns_1402918",
            "content": "<h4 id=\"you-are-given-an-array-strings-having-n-number-of-strings-the-strings-are-assumed-to-be-arranged-such-that-there-is-one-string-in-one-line\">You are given an array \u2018STRINGS\u2019 having \u2018N\u2019 number of strings. The strings are assumed to be arranged such that there is one string in one line.</h4>\n\n<h4 id=\"you-need-to-return-the-number-of-columns-that-are-not-sorted-lexicographically\">You need to return the number of columns that are not sorted lexicographically.</h4>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>The length of all the strings in the array is the same.\n</code></pre>\n\n<h5 id=\"for-example\">For Example:</h5>\n\n<pre><code>If the given array is [ \u201cbde\u201d, \u201cdcf\u201d, \u201cgat\u201d ], then it can be assumed to arranged as\nbde\ndcf \ngat \n\nNow the \u20180-th\u2019 column (\u2018b\u2019, \u2018d\u2019, \u2018e\u2019) and \u20182-th\u2019 column ( \u2018e\u2019, \u2018f\u2019, \u2018t\u2019 ) are lexicographically sorted but the \u20181-st\u2019 column ( \u2018d\u2019, \u2018c\u2019, \u2018a\u2019 ) is not sorted lexicographically. So you need to return 1.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019, denoting the number of test cases.\n\nEach test case\u2019s first line contains \u2018N\u2019, denoting the number of strings in the array.\n\nThe next \u2018N\u2019 lines contain strings of the same length that make up \u2018Strings\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print a single line containing a single integer denoting the number of columns that are not sorted lexicographically.\n\nThe output of each test case will be printed in a separated line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You don\u2019t need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 50\n1 &lt;= N &lt;= 100\n1 &lt;= L &lt;= 10 ^ 3\n\nWhere \u2018T\u2019 is the number of test cases, \u2018n\u2019 is the number of strings, and \u2018L\u2019  is each string\u2019s length.\n\nTime limit: 1 sec.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n3\nbccde\ndehrt\ngabzy\n2\nwr\nyz\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>2\n0\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1:</h5>\n\n<pre><code>Test Case 1: In the given strings -\nColumn 0 - b, d, g is sorted\nColumn 1 - c, e, a is not sorted\nColumn 2 - c, h, b is not sorted\nColumn 3 - d, r, z is sorted\nColumn 4 - e, t, y is sorted.\n\nColumn 1, column 2 is not sorted, so the required answer is \u20182\u2019.\n\nTest Case 2: Both the columns (\u2018w\u2019, \u2018y\u2019) and (\u2018r\u2019, \u2018z\u2019 ) are sorted. So the answer is \u20180\u2019.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n4\nu\ne \ny \nb\n2\ncterub\naybsgn\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>1\n3\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 15,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of strings, determine the number of columns that are not lexicographically sorted. A column is considered sorted if the characters in that column, when read from top to bottom, are in non-decreasing order (lexicographical order).",
                "constraints": [
                    "1 <= T <= 50 (Number of test cases)",
                    "1 <= N <= 100 (Number of strings)",
                    "1 <= L <= 10^3 (Length of each string)"
                ],
                "testcases": [
                    {
                        "input": "strings = [\"bccde\", \"dehrt\", \"gabzy\"]",
                        "output": "2",
                        "explanation": "Column 0: 'b', 'd', 'g' (sorted)\nColumn 1: 'c', 'e', 'a' (not sorted)\nColumn 2: 'c', 'h', 'b' (not sorted)\nColumn 3: 'd', 'r', 'z' (sorted)\nColumn 4: 'e', 't', 'y' (sorted)\nColumns 1 and 2 are not sorted, so the answer is 2."
                    },
                    {
                        "input": "strings = [\"wr\", \"yz\"]",
                        "output": "0",
                        "explanation": "Column 0: 'w', 'y' (sorted)\nColumn 1: 'r', 'z' (sorted)\nBoth columns are sorted, so the answer is 0."
                    },
                    {
                        "input": "strings = [\"u\", \"e\", \"y\", \"b\"]",
                        "output": "1",
                        "explanation": "Column 0: 'u', 'e', 'y', 'b' (not sorted)\nOnly one column exists and it is not sorted, so the answer is 1."
                    },
                    {
                        "input": "strings = [\"cterub\", \"aybsgn\"]",
                        "output": "3",
                        "explanation": "Column 0: c,a (not sorted)\nColumn 1: t,y (sorted)\nColumn 2: e,b (not sorted)\nColumn 3: r,s (sorted)\nColumn 4: u,g (not sorted)\nColumn 5: b,n (sorted)\nColumns 0, 2, and 4 are not sorted, so the answer is 3."
                    },
                    {
                        "input": "strings = [\"abc\", \"bcd\", \"cde\", \"def\"]",
                        "output": "0",
                        "explanation": "All columns are lexicographically sorted."
                    },
                    {
                        "input": "strings = [\"zyx\", \"wvu\", \"tsr\"]",
                        "output": "3",
                        "explanation": "All columns are reverse lexicographically sorted, hence none are lexicographically sorted"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Think of traversing the strings column-wise.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}