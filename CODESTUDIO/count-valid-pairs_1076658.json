{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9674,
            "title": "Count Valid Pairs",
            "titleSlug": "count-valid-pairs_1076658",
            "content": "<h4 id=\"ninja-has-been-learning-about-strings-recently-while-studying-he-was-fascinated-by-a-pair-of-strings-say-p-and-q-in-which-every-character-in-the-first-string-p-is-less-than-the-corresponding-character-in-the-second-string-q-i-e-p-i-q-i-where-0-i-length\">Ninja has been learning about strings recently. While studying, he was fascinated by a pair of strings, say P and Q, in which every character in the first string, P, is less than the corresponding character in the second string, Q, i.e. P[i] &lt; Q[i], where 0 &lt;= &#39;i&#39; &lt; Length.</h4>\n\n<h4 id=\"now-he-wants-to-count-the-number-of-such-pairs-of-strings-of-length-n-which-satisfies-this-rule\">Now, he wants to count the number of such pairs of strings, of length &#39;N&#39;, which satisfies this rule.</h4>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>1. Strings contain only lower-case English alphabets.\n2. Since the number of such pairs can be very large, return the answer modulo 10^9 + 7.\n</code></pre>\n\n<h4 id=\"example\">Example:</h4>\n\n<pre><code>Let\u2019s say length &#39;N&#39; = 1. So, we\u2019ll consider only the strings with length 1: \u201ca\u201d, \u201cb\u201d, \u201cc\u201d, \u2026.., \u201cz\u201d. Now, If P = \u201ca\u201d, then Q can be \u201cb\u201d, \u201cc\u201d, \u201cd\u201d....., \u201cz\u201d (25 possibilities). If P = \u201cb\u201d, then Q can be \u201cc\u201d, \u201cd\u201d....., \u201cz\u201d (24 possibilities). And so on till P = \u201cy\u201d, then Q can be \u201cz\u201d (1 possibility).\n\nHence, the total number of pairs of strings that satisfy the given condition is: 25 + 24 + \u2026\u2026 + 1 = 325.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 representing the number of test cases.\n\nThe first and the only line of every test case contains an integer \u2018N\u2019 representing the length of the pairs of strings to be found.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, return the number of pairs of strings that satisfy the given condition.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You don&#39;t need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 100 \n1 &lt;= N &lt;= 10^8\n\nWhere \u2018N\u2019 is the length of the pairs of strings to be found.\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n1\n100\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>325\n34244837\n</code></pre>\n\n<h5 id=\"explanation-for-sample-output-1\">Explanation for Sample Output 1:</h5>\n\n<pre><code>In test case 1, refer to the example explained above.\n\nIn test case 2, similarly, we can calculate for the string of length 100 as above logic in test case 1 and we get total valid pairs as 34244837.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n2\n1234567\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>105625\n198263616\n</code></pre>\n\n<h5 id=\"explanation-for-sample-output-2\">Explanation for Sample Output 2:</h5>\n\n<pre><code>In test case 1, we consider only the string of length 2: \u201caa\u201d, \u201cab\u201d,......, \u201caz\u201d, \u201cba\u201d, \u201cbb\u201d, \u2026\u2026, \u201cbz\u201d,....., \u201czz\u201d.\n\nNow, if P = \u201caa\u201d, then Q can be \u201cbb\u201d, \u201cbc\u201d,....., \u201cbz\u201d, \u201ccb\u201d, \u201ccd\u201d....., \u201czz\u201d (625 possibilities).\n\nSimilarly, by calculating the number of possible pairs for the rest of the strings we get a total of 105625 possible pairs.\n\nIn test case 2, similarly, we can calculate for the string of length 1234567 as above logic in test case 1 and we get total valid pairs as 198263616.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -7,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a length N, find the number of string pairs (P, Q) of length N such that each character in string P is lexicographically smaller than the corresponding character in string Q (i.e., P[i] < Q[i] for all 0 <= i < N). Strings consist of lowercase English alphabets only. Return the answer modulo 10^9 + 7.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= N <= 10^8"
                ],
                "testcases": [
                    {
                        "input": "1\n1",
                        "output": "325",
                        "explanation": "When N = 1, consider strings of length 1 (a, b, c, ..., z). If P = 'a', Q can be 'b', 'c', ..., 'z' (25 options). If P = 'b', Q can be 'c', 'd', ..., 'z' (24 options). This continues until P = 'y', where Q can only be 'z' (1 option). The total is 25 + 24 + ... + 1 = 325."
                    },
                    {
                        "input": "1\n100",
                        "output": "34244837",
                        "explanation": "For N = 100, the calculation follows the same logic as N = 1, but the result is larger. Applying the formula and taking modulo 10^9 + 7 gives 34244837."
                    },
                    {
                        "input": "2\n2\n1234567",
                        "output": "105625\n198263616",
                        "explanation": "When N = 2, consider strings of length 2 (aa, ab, ..., az, ba, bb, ..., bz, ..., zz). If P = 'aa', Q can be 'bb', 'bc', ..., 'bz', 'cb', ..., 'zz' (625 options). The total valid pairs, summed over all possible P, is 105625. For N = 1234567, the calculation yields 198263616 (modulo 10^9 + 7)."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try generating all the possible strings of length N and then count the possible pairs.</p>",
            "<p>Identify the pattern in the output by counting the number of possible pairs of strings for different lengths.</p>",
            "<p>Use the concept of binary exponentiation to calculate the answer.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Number Theory",
                "slug": "number-theory"
            },
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}