{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12625,
            "title": "Count Ways To Make Array With Product",
            "titleSlug": "count-ways-to-make-array-with-product_1467166",
            "content": "<h4 id=\"there-are-two-friends-ranbir-and-alia-ranbir-gave-a-question-to-alia-that-you-are-given-q-queries-in-the-form-n-p\">There are two friends Ranbir and Alia. Ranbir gave a question to Alia that you are given \u2018Q\u2019 queries in the form [N, P].</h4>\n\n<h4 id=\"for-each-query-alia-has-to-count-how-many-arrays-consisting-of-positive-integers-of-size-n-she-could-build-such-that-the-product-of-all-the-array-elements-is-equal-to-p\">For each query, Alia has to count how many arrays consisting of positive integers of size \u2018N\u2019 she could build such that the product of all the array elements is equal to \u2018P\u2019.</h4>\n\n<h4 id=\"since-the-answer-could-be-large-return-the-answer-to-each-query-modulo-10-9-7\">Since the answer could be large, return the answer to each query modulo 10^9 + 7.</h4>\n\n<h5 id=\"input-format\">Input format :</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019, denoting the number of test cases. \n\nThe first line of each test contains an integer \u2018Q\u2019 denoting the total number of Queries.\n\nThen each of the next \u2018Q\u2019 lines contains two space-separated integers \u2018N\u2019 and \u2018P\u2019 denoting the size of the array to be formed and the product it should have after the array is formed respectively.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case, print the count of arrays formed for each query in a single line.\n\nOutput for each test case is printed on a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= Q &lt;= 10^4\n1 &lt;= N , P &lt;= 10^4\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n2\n2 6\n1 1\n1\n5 1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>4 1\n1 \n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1 :</h5>\n\n<pre><code>For the first test case, consider each query independently\n\nFor the first query where we have to build an array of size 2 and the product of array, elements should be equal to 6. So all the possible arrays are: {1, 6}, {6, 1}, {2, 3} and {3, 2}. Therefore, the answer will be 4 for the given query.\n\nFor the second query where we have to build an array of size 1 and the product of the array, elements should be equal to 1. So the only possible array is {1}. Therefore, the answer will be 1 for the given query.\n\nFor the second test case, consider each query independently\n\nFor the first query where we have to build an array of size 5 and the product of array elements should be equal to 1. So the only possible array is {1, 1, 1, 1, 1}. Therefore, the answer will be 1 for the given query.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n2\n7 20\n2 2\n2\n3 6\n3 4\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>196 2\n9 6\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 4,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a list of queries, where each query consists of two integers, 'N' and 'P'. For each query, determine the number of arrays of size 'N' that can be formed using positive integers such that the product of all elements in the array is equal to 'P'. Since the answer can be very large, return the result modulo 10^9 + 7 for each query.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= Q <= 10^4",
                    "1 <= N, P <= 10^4"
                ],
                "testcases": [
                    {
                        "input": "queries = [[2, 6], [1, 1]]",
                        "output": "[4, 1]",
                        "explanation": "For the first query [2, 6], the possible arrays are {1, 6}, {6, 1}, {2, 3}, and {3, 2}. Hence, the count is 4.\nFor the second query [1, 1], the only possible array is {1}. Hence, the count is 1."
                    },
                    {
                        "input": "queries = [[5, 1]]",
                        "output": "[1]",
                        "explanation": "For the query [5, 1], the only possible array is {1, 1, 1, 1, 1}. Hence, the count is 1."
                    },
                    {
                        "input": "queries = [[7, 20], [2, 2]]",
                        "output": "[196, 2]",
                        "explanation": "This test case likely represents a scenario where a previously incorrect solution might have had issues calculating the total number of possible arrays correctly. It's difficult to give a precise explanation without the internal workings of an algorithm that was proven to be faulty."
                    },
                    {
                        "input": "queries = [[3, 6], [3, 4]]",
                        "output": "[9, 6]",
                        "explanation": "Again, this test case aims to expose possible flaws in the algorithm's logic for constructing positive integer arrays. An exact breakdown is difficult without analyzing a problematic algorithm implementation, but it tests cases where the values N and P are moderately large."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Make a dynamic programming solution where each DP[i][j] state will denote ways to fill i places in an array whose product is j.&nbsp;</p>",
            "<p>Prime factorize P and distribute its prime factors in N slots. Each slot is defined as an N-sized array.&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}