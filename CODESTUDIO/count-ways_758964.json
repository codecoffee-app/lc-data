{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 7664,
            "title": "Count Ways",
            "titleSlug": "count-ways_758964",
            "content": "<h4 id=\"you-have-been-given-a-directed-graph-of-v-vertices-and-e-edges\">You have been given a directed graph of &#39;V&#39; vertices and &#39;E&#39; edges.</h4>\n\n<h4 id=\"your-task-is-to-count-the-total-number-of-ways-to-reach-different-nodes-in-the-graph-from-the-given-source-node-s-a-way-is-called-as-different-from-others-if-the-destination-node-or-used-edges-differ\">Your task is to count the total number of ways to reach different nodes in the graph from the given source node \u2018S\u2019. A way is called as different from others if the destination node or used edges differ.</h4>\n\n<h4 id=\"as-the-total-number-of-such-ways-can-be-large-print-the-total-ways-modulo-10-9-7\">As the total number of such ways can be large, print the total ways modulo 10 ^ 9 + 7.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>1. Include the source node as a destination also.\n2. There are no cycles in the given graph.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input will contain three integers &#39;V&#39;, &#39;E&#39;, and \u2018S\u2019, separated by a single space.\n\nFrom the second line onwards, the next &#39;E&#39; lines will denote the directed edge of the graphs.\n\nEvery edge is defined by two single space-separated integers &#39;A&#39; and &#39;B&#39;, which signifies a directed edge from vertex &#39;A&#39; to vertex &#39;B&#39;.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each input, print a single line containing a single integer denoting the total number of ways modulo 10 ^ 9 + 7.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= &#39;S&#39;, &#39;V&#39; &lt;= 10 ^ 5\n0 &lt;= &#39;E&#39; &lt;= 2 * 10 ^ 5\n\nWhere \u2018S\u2019 represents the value of a given source node, \u2018V\u2019 represents the number of vertices and \u2018E\u2019 represents the number of edges.\n\nTime Limit: 1 sec.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>4 3 2\n1 2\n2 3\n3 4\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>3\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1:</h5>\n\n<pre><code>From node 2 we can reach each of 2, 3, 4 nodes only in one way.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>5 6 2\n1 2\n2 3\n3 4\n4 5\n3 5\n1 5\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>5\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 34,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a directed acyclic graph with 'V' vertices and 'E' edges, determine the number of distinct paths from a source node 'S' to all reachable nodes in the graph. Two paths are considered different if they have a different destination node or use a different sequence of edges.  The result should be calculated modulo 10^9 + 7. Include the source node itself in the count of reachable nodes.",
                "constraints": [
                    "1 <= S, V <= 10^5",
                    "0 <= E <= 2 * 10^5",
                    "The graph is acyclic."
                ],
                "testcases": [
                    {
                        "input": "V = 4, E = 3, S = 2, edges = [[1, 2], [2, 3], [3, 4]]",
                        "output": "3",
                        "explanation": "From node 2, we can reach nodes 2, 3, and 4 in one way each. Total ways = 3."
                    },
                    {
                        "input": "V = 5, E = 6, S = 2, edges = [[1, 2], [2, 3], [3, 4], [4, 5], [3, 5], [1, 5]]",
                        "output": "5",
                        "explanation": "From node 2, we can reach nodes 2, 3, 4, and 5. There are two distinct paths to 5 (2->3->5 and 2->3->4->5). Total ways = 5."
                    },
                    {
                        "input": "V = 3, E = 2, S = 1, edges = [[1, 2], [1, 3]]",
                        "output": "3",
                        "explanation": "From node 1, we can reach nodes 1, 2, and 3.  There's one way to reach each."
                    },
                    {
                        "input": "V = 6, E = 0, S = 4, edges = []",
                        "output": "1",
                        "explanation": "From node 4, we can only reach node 4 itself."
                    },
                    {
                        "input": "V = 2, E = 1, S = 1, edges = [[1, 2]]",
                        "output": "2",
                        "explanation": "From node 1, we can reach node 1 and node 2."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Iterate over all possible paths.</p>",
            "<p>Try to use extra space to optimize the previous approach.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}