{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9611,
            "title": "Course Schedule II",
            "titleSlug": "course-schedule-ii_1069243",
            "content": "<h4 id=\"you-have-been-given-n-courses-and-some-courses-may-have-prerequisites-now-consider-a-matrix-prerequisites-of-size-m-x-2-which-represents-that-you-must-complete-the-course-prerequisites-i-1-before-the-course-prerequisites-i-0\">You have been given <em><strong>\u2018N\u2019</strong></em> courses and some courses may have prerequisites. Now consider a matrix <em><strong>\u2018PREREQUISITES\u2019</strong></em> of size <em><strong>&#39;M&#39;</strong></em> x 2 which represents that you must complete the course &#39;PREREQUISITES[i][1]&#39; before the course &#39;PREREQUISITES[i][0]&#39;.</h4>\n\n<p><Br></p>\n\n<h4 id=\"your-task-is-to-return-the-order-of-courses-you-should-take-to-finish-all-courses\">Your task is to return the order of courses you should take to finish all courses.</h4>\n\n<p><Br></p>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>If it is impossible to finish all courses, return an empty array. If there are multiple answers, return any one.\n</code></pre>\n\n<p><Br></p>\n\n<h5 id=\"for-example\">For example:</h5>\n\n<pre><code>Input:\n3 2\n1 2\n2 3\n\nThere are three courses to take. To start with, First course 3 is taken. Then course 2 is taken for which course 3 must be completed. \n\nAt last course 1 is taken for which course 2 must be completed. So the correct course order is [3,2,1].    \n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains two integers &#39;N&#39; and &#39;M&#39; representing the number of courses and the number of prerequisite pairs.\n\nThe next \u2018M\u2019 lines in each test case contain a matrix \u2018PREREQUISITES\u2019 containing two integers denoting a prerequisite pair.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>The only line contains a single integer 1 if the returned order of the courses is correct, otherwise 0.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You don&#39;t need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>4 4\n2 1\n3 1\n4 2\n4 3\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>1\n</code></pre>\n\n<h5 id=\"explanation-of-sample-output-1\">Explanation of Sample Output 1:</h5>\n\n<pre><code>There are a total of 4 courses to take. To take course 4 you should have finished both courses 2 and 3. \n\nBoth courses 2 and 3 should be taken after you finish course 1. So one correct course order is [1,2,3,4]. Another correct ordering is [1,3,2,4]. \n\nWhen the ordering is one of the above two sets then output is 1.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2 1\n2 1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>1\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>2 &lt;= &#39;N&#39; &lt;= 10^5\n0 &lt;= &#39;M&#39; &lt;= 10^5\n\nWhere \u2018PREREQUISITES\u2019 denotes the prerequisites matrix.\n\nTime limit: 1 sec\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 21,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given 'N' courses with potential prerequisites, and a matrix 'PREREQUISITES' of size 'M' x 2. Each row in 'PREREQUISITES' represents a dependency: you must complete course 'PREREQUISITES[i][1]' before taking course 'PREREQUISITES[i][0]'. The task is to determine a valid order in which to take the courses to complete all of them. If it's impossible to finish all courses due to circular dependencies, return an empty array. If multiple valid orderings exist, return any one of them.",
                "constraints": [
                    "2 <= 'N' <= 10^5",
                    "0 <= 'M' <= 10^5",
                    "'PREREQUISITES' denotes the prerequisites matrix.",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "4 4\n2 1\n3 1\n4 2\n4 3",
                        "output": "1",
                        "explanation": "There are 4 courses. Course 4 depends on courses 2 and 3. Courses 2 and 3 both depend on course 1. A valid order is [1, 2, 3, 4] or [1, 3, 2, 4]. The output is 1 because any of these valid ordering return 1."
                    },
                    {
                        "input": "2 1\n2 1",
                        "output": "1",
                        "explanation": "The course 2 depends on course 1 and so a valid order is [1,2]"
                    },
                    {
                        "input": "3 2\n1 2\n2 3",
                        "output": "1",
                        "explanation": "There are three courses to take. First course 3 is taken. Then course 2 is taken for which course 3 must be completed. At last course 1 is taken for which course 2 must be completed. So the correct course order is [3,2,1]."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you think of using the BFS approach?</p>",
            "<p>Try to arrange prerequisite courses before the other courses.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Depth-first Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-first Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}