{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12304,
            "title": "Create Lexicographically Greatest Array",
            "titleSlug": "create-lexicographically-greatest-array_1459216",
            "content": "<h4 id=\"you-are-given-a-positive-integer-k-and-two-arrays-arr1-and-arr2-of-the-length-n-and-m-respectively-both-the-given-arrays-only-contain-integers-from-0-to-9\">You are given a positive integer \u2018K\u2019 and two arrays \u2018arr1\u2019 and \u2018arr2\u2019 of the length \u2018N\u2019 and \u2018M\u2019 respectively. Both the given arrays only contain integers from \u20180\u2019 to \u20189\u2019.</h4>\n\n<h4 id=\"an-operation-is-defined-as-follows\">An operation is defined as follows.</h4>\n\n<pre><code>Select any subsequence from \u2018arr1\u2019 and \u2018arr2\u2019 say \u2018S1\u2019 and \u2018S2\u2019, of any length.\n\nMake a new array by merging \u2018S1\u2019 and \u2018S2\u2019 while keeping relative order of elements in \u2018S1\u2019 and \u2018S2\u2019.\n</code></pre>\n\n<h4 id=\"you-need-to-return-the-resulting-array-after-doing-the-above-operation-in-a-way-such-that-size-of-the-resulting-array-is-k-and-it-is-the-lexicography-maximum-among-all-such-possible-arrays\">You need to return the resulting array after doing the above operation in a way such that, size of the resulting array is \u2018K\u2019 and it is the lexicography maximum among all such possible arrays.</h4>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>Array \u2018X\u2019 of size \u2018K\u2019 is lexicographically larger than array \u2018Y\u2019 of size \u2018K\u2019, if for some \u2018j\u2019 &lt; \u2018K\u2019 \u2018Xi\u2019 = \u2018Yi\u2019 for all \u2018i\u2019 &lt; \u2018j\u2019 and \u2018Xj\u2019 &gt; \u2018Yj\u2019.\n\nA subsequence is a sequence that can be derived from another sequence by deleting some or no elements without changing the order of the remaining elements.\n</code></pre>\n\n<h4 id=\"input-format\">Input Format :</h4>\n\n<pre><code>The first line contains an integer &#39;T&#39; which denotes the number of test cases or queries to be run.\n\nThe first line of each test case contains three space-separated integers \u2018N\u2019, \u2018M\u2019 denoting the size of the first array and second array respectively, and \u2018K\u2019 denoting the size of the lexicographically greatest array needed.\n\nThe second line of each test case contains \u2018N\u2019 space-separated integers, representing the elements of the first array, \u2018arr1\u2019.\n\nThe last line of the test cases contains \u2018M\u2019 space-separated integers, representing the elements of the second array, \u2018arr2\u2019.\n</code></pre>\n\n<h4 id=\"output-format\">Output Format :</h4>\n\n<pre><code>For each test case, print \u2018K\u2019 space-separated integers denoting the elements of the lexicographically maximum possible array.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>You do not need to input or print anything, and it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints :</h4>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= N, M &lt;= 50\n1 &lt;= K &lt;= N + M\n0 &lt;= arr1[i], arr2[i] &lt;= 9\n\nWhere \u2018T\u2019 is the total number of test cases, \u2018N\u2019 and \u2018M \u2019are the size of the given first and second array, \u2018K\u2019 is the size of the array that is to be returned, and \u2018arr1[i]\u2019, \u2018arr2[i]\u2019 represents the \u2018i-th\u2019 elements in the first and second array respectively.\n\nTime Limit : 1 sec\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1 :</h4>\n\n<pre><code>2\n4 5 4\n2 1 6 5\n2 2 8 9 1\n2 2 2\n4 4\n5 3\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1 :</h4>\n\n<pre><code>9 6 5 1\n5 4\n</code></pre>\n\n<h4 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1 :</h4>\n\n<pre><code>Test case 1 :\nWe choose a subsequence [ 2, 6, 5] from the first array and subsequence [9] from the second array and merge them as [9, 2, 6, 5] to get the lexicographically maximum possible array of size 4.\n\nTest case 2 :\nSelect subsequence [4] from the first array and [5] from the second array and merge them to get [5, 4] which is  lexicographically maximum possible.\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2 :</h4>\n\n<pre><code>1\n2 3 3\n4 1\n9 2 3\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2 :</h4>\n\n<pre><code>9 4 3\n</code></pre>\n\n<h4 id=\"explanation-of-sample-input-2\">Explanation of Sample Input 2 :</h4>\n\n<pre><code>Test case 1:\n Select subsequence [4] from the first array and [9, 3] from the second array and merge them as  [9, 4, 3] which is  lexicographically maximum possible\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 6,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two arrays, `arr1` and `arr2`, containing digits from 0 to 9, and a positive integer `K`, find the lexicographically largest array of size `K` that can be formed by merging subsequences from `arr1` and `arr2` while maintaining the relative order of elements within each subsequence.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= N, M <= 50",
                    "1 <= K <= N + M",
                    "0 <= arr1[i], arr2[i] <= 9"
                ],
                "testcases": [
                    {
                        "input": "n = 4, m = 5, arr1 = [2, 1, 6, 5], arr2 = [2, 2, 8, 9, 1], k = 4",
                        "output": "[9, 6, 5, 1]",
                        "explanation": "Choosing subsequence [2, 6, 5] from arr1 and subsequence [9] from arr2 and merging them as [9, 6, 5, 1] yields the lexicographically maximum possible array of size 4."
                    },
                    {
                        "input": "n = 2, m = 2, arr1 = [4, 4], arr2 = [5, 3], k = 2",
                        "output": "[5, 4]",
                        "explanation": "Selecting subsequence [4] from arr1 and [5] from arr2 and merging them as [5, 4] gives the lexicographically maximum possible array."
                    },
                    {
                        "input": "n = 2, m = 3, arr1 = [4, 1], arr2 = [9, 2, 3], k = 3",
                        "output": "[9, 4, 3]",
                        "explanation": "Selecting subsequence [4] from arr1 and [9, 3] from arr2 and merging them as [9, 4, 3] provides the lexicographically maximum possible array."
                    },
                    {
                        "input": "n = 3, m = 3, arr1 = [6, 7, 3], arr2 = [6, 0, 4], k = 3",
                        "output": "[7, 6, 4]",
                        "explanation": "Selecting subsequence [7, 3] from arr1 and [4] from arr2 and merging them as [7,6,4] gives lexicographically largest array of size 3."
                    },
                    {
                        "input": "n = 5, m = 4, arr1 = [8, 3, 8, 6, 7], arr2 = [3, 9, 6, 9], k = 6",
                        "output": "[9, 8, 9, 6, 7, 3]",
                        "explanation": "Selecting subsequence [8, 6, 7] from arr1 and [9, 9, 6] from arr2 and merging them as [9, 8, 9, 6, 7, 6] gives lexicographically largest array of size 6."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Consider subsequences of all sizes.</p>",
            "<p>Try optimizing function to find the lexicographically maximum subsequence from an array.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}