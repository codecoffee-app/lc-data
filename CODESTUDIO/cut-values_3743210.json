{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 16938,
            "title": "Cut Values",
            "titleSlug": "cut-values_3743210",
            "content": "<h4 id=\"on-your-birthday-your-friends-gifted-you-n-boxes-of-chocolates-which-are-represented-as-an-array-a-of-n-positive-integers-where-a-i-denotes-the-number-of-chocolates-in-the-i-th-box-you-want-to-give-these-boxes-as-return-gifts-to-your-guests-but-with-an-equal-number-of-chocolates-in-each-box-for-that-you-are-going-to-perform-the-following-operation-on-the-boxes-where-each-operation-is-as-follows\">On your birthday, your friends gifted you &#39;N&#39; boxes of chocolates, which are represented as an array &#39;A&#39; of &#39;N&#39; positive integers where &#39;A[i]&#39; denotes the number of chocolates in the i-th box. You want to give these boxes as return gifts to your guests but with an equal number of chocolates in each box. For that, you are going to perform the following operation on the boxes, where each operation is as follows:</h4>\n\n<pre><code>Choose a positive integer &#39;x&#39;.\nIf any of the boxes contains more than &#39;x&#39; chocolates, take out the extra chocolates from that box, i.e., if &#39;A[i]&#39; &gt; &#39;x&#39;, make &#39;A[i]&#39; = &#39;x&#39;  ( for all &#39;i&#39; where 1 &lt;= &#39;i&#39; &lt;= &#39;N&#39;)\n</code></pre>\n\n<h4 id=\"the-cost-of-an-operation-is-the-total-number-of-chocolates-taken-out-from-all-the-boxes-i-e-cost-sum-of-a-before-operation-sum-of-a-after-operation\">The cost of an operation is the total number of chocolates taken out from all the boxes, i.e., cost = (sum of &#39;A&#39; before operation) - (sum of &#39;A&#39; after operation).</h4>\n\n<h4 id=\"your-task-is-to-find-the-minimum-number-of-operations-such-that-there-is-an-equal-number-of-chocolates-in-each-box-and-the-cost-of-each-operation-does-not-exceed-k\">Your task is to find the minimum number of operations such that there is an equal number of chocolates in each box and the cost of each operation does not exceed &#39;K&#39;.</h4>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>1. &#39;x&#39; can be any positive integer of your choice. It may or may not be present in array &#39;A&#39;.\n2. &#39;K&#39; is large enough to have at least one &#39;x&#39; for the operation.\n</code></pre>\n\n<h5 id=\"example\">Example :</h5>\n\n<pre><code>N = 4\nK = 5\nA = [ 5, 2, 3, 4 ]\n\nIn the first operation, choose x = 3, the updated array &#39;A&#39; becomes [3, 2, 3, 3]. The cost of this operation is (5+2+3+4)-(3+2+3+3) = 3.\n\nIn the second operation, choose x = 2, the updated array &#39;A&#39; becomes [2, 2, 2, 2]. The cost of this operation is (3+2+3+3)-(2+2+2+2) = 3.\n\nAfter the second operation, all elements in array &#39;A&#39; become equal. Hence return 2 as our final answer.\n\nWe can&#39;t choose x = 2 in our first operation, because (5+2+3+4)-(2+2+2+2) = 6 which exceeds K = 5.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains an integer &#39;T&#39;, denoting the number of test cases.\nThen the test cases follow:\n\nThe first line of each test case contains two space-separated integers, &#39;N&#39; and &#39;K&#39;, denoting the number of boxes (or size of array &#39;A&#39;) and maximum cost of an operation, respectively.\n\nThe next line contains &#39;N&#39; integers, denoting the number of chocolates in each box (or array &#39;A&#39; elements).\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print an integer denoting the minimum number of operations needed to perform on array &#39;A&#39; to make all elements equal.\n\nPrint the output of each test case in a new line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You are not required to print the expected output. It has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= &#39;T&#39; &lt;= 10\n1 &lt;= &#39;N&#39; &lt;= 10^5\nN &lt;= &#39;K&#39; &lt;= 10^9\n1 &lt;= &#39;A[i]&#39; &lt;= 10^5\nSum of &#39;N&#39; over all test cases doesn\u2019t exceed 10^5.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n5 6\n3 1 3 6 3\n5 5\n2 2 2 2 3\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>3\n1\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1 :</h5>\n\n<pre><code>For test case 1:\n\nIn the first operation, choose x = 3, the updated array &#39;A&#39; becomes [3, 1, 3, 3, 3]. The cost of this operation is (3+1+3+6+3)-(3+1+3+3+3) = 3.\n\nIn the second operation, choose x = 2, the updated array &#39;A&#39; becomes [2, 1, 2, 2, 2]. The cost of this operation is (3+1+3+3+3)-(2+1+2+2+2) = 4.\n\nIn the third operation, choose x = 1, the updated array &#39;A&#39; becomes [1, 1, 1, 1, 1]. The cost of this operation is (2+1+2+2+2)-(1+1+1+1+1) = 4.\n\nAfter the third operation, all elements in array &#39;A&#39; become equal. Hence return 3 as our final answer.\n\nFor test case 2:\n\nIn the first operation, choose x = 2, the updated array &#39;A&#39; becomes [2, 2, 2, 2, 2]. The cost of this operation is (2+2+2+2+3)-(2+2+2+2+2) = 1.\n\nAfter the first operation, all elements in array &#39;A&#39; become equal. Hence return 1 as our final answer.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>3\n5 7\n3 3 3 3 3\n4 8\n4 3 2 1\n4 4\n1 5 3 7\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>0\n1\n4\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -10,
            "dislikes": "NA",
            "rephrased": {
                "body": "You are given 'N' boxes of chocolates represented by an array 'A' of 'N' positive integers, where 'A[i]' is the number of chocolates in the i-th box. Your goal is to distribute these boxes as return gifts with an equal number of chocolates in each box. To achieve this, you can perform a series of operations. In each operation, you choose a positive integer 'x'. If any box contains more than 'x' chocolates, you take out the extra chocolates from that box, setting 'A[i]' to 'x' for all 'i' where 'A[i] > x'. The cost of an operation is the total number of chocolates removed. Find the minimum number of operations needed to make the number of chocolates equal in each box, such that the cost of each operation does not exceed 'K'.",
                "constraints": [
                    "1 <= 'T' <= 10",
                    "1 <= 'N' <= 10^5",
                    "N <= 'K' <= 10^9",
                    "1 <= 'A[i]' <= 10^5",
                    "Sum of 'N' over all test cases doesn\u2019t exceed 10^5"
                ],
                "testcases": [
                    {
                        "input": "5 6\n3 1 3 6 3",
                        "output": "3",
                        "explanation": "First operation: x = 3, A becomes [3, 1, 3, 3, 3], cost = 3.\nSecond operation: x = 2, A becomes [2, 1, 2, 2, 2], cost = 4.\nThird operation: x = 1, A becomes [1, 1, 1, 1, 1], cost = 4.\nTotal operations: 3."
                    },
                    {
                        "input": "5 5\n2 2 2 2 3",
                        "output": "1",
                        "explanation": "First operation: x = 2, A becomes [2, 2, 2, 2, 2], cost = 1.\nTotal operations: 1."
                    },
                    {
                        "input": "5 7\n3 3 3 3 3",
                        "output": "0",
                        "explanation": "All elements are already equal, so no operations are needed."
                    },
                    {
                        "input": "4 8\n4 3 2 1",
                        "output": "1",
                        "explanation": "Choose x = 1. A becomes [1, 1, 1, 1]. The cost is (4 + 3 + 2 + 1) - (1 + 1 + 1 + 1) = 8, which is <= K. Therefore one operation is enough to get to the required state."
                    },
                    {
                        "input": "4 4\n1 5 3 7",
                        "output": "4",
                        "explanation": "First operation: choose x = 3, A becomes [1, 3, 3, 3], cost is (1+5+3+7)-(1+3+3+3)=4 \nSecond operation: choose x = 1, A becomes [1, 1, 1, 1], cost is (1+3+3+3)-(1+1+1+1)= 7.\nIn the first operation, choose x = 3, the updated array &#39;A&#39; becomes [1, 3, 3, 3]. The cost of this operation is (1+5+3+7)-(1+3+3+3) = 4.\nIn the second operation, choose x = 2, the updated array &#39;A&#39; becomes [1, 2, 2, 2]. The cost of this operation is (1+3+3+3)-(1+2+2+2) = 2.\nIn the third operation, choose x = 1, the updated array &#39;A&#39; becomes [1, 1, 1, 1]. The cost of this operation is (1+2+2+2)-(1+1+1+1) = 3.\n"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>The chosen value of 'x' will be strictly decreasing in continuous operations.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}