{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12578,
            "title": "Decryption",
            "titleSlug": "decryption_1466956",
            "content": "<h4 id=\"you-are-given-a-string-message-the-receiver-of-this-message-has-a-set-of-instructions-on-how-to-decrypt-the-message-in-order-to-decrypt-the-message-we-need-to-perform-some-rotation-operations-on-the-string\">You are given a string, &#39;MESSAGE&#39;. The receiver of this \u2018MESSAGE\u2019 has a set of instructions on how to decrypt the message. In order to decrypt the message, we need to perform some rotation operations on the string.</h4>\n\n<h4 id=\"these-rotations-can-either-be-left-rotations-or-right-rotations-the-set-of-instructions-contains-information-about-which-type-of-rotation-is-to-be-performed-and-how-many-times-your-task-is-to-determine-the-decrypted-message\">These rotations can either be left rotations or right rotations. The set of instructions contains information about which type of rotation is to be performed and how many times. Your task is to determine the decrypted message.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>Performing a &#39;left rotation&#39; means deleting the first character of the string and appending it to the end of the string.\n\nPerforming a &#39;right rotation&#39; means deleting the last character of the string and appending it to the beginning of the string.\n\nFor example, if we perform a left rotation on the string \u201ccoding\u201d, it will become \u201codingc\u201d. If we perform a right rotation on the string \u201cninja\u201d, it will become \u201caninj\u201d.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains an integer \u2018T\u2019, which denotes the number of test cases to be run. Then, the T test cases follow. \n\nThe first line of each test case contains a single string, &#39;MESSAGE&#39;, \n\nThe second line of each test case contains an integer, \u2018N\u2019, denoting the number of rotations we need to perform in order to decrypt the message. Then, \u2018N\u2019 lines follow. \n\nEach line contains two space-separated integers, \u2018A\u2019 and \u2018B\u2019. If \u2018A\u2019 is \u2018-1\u2019, you need to perform the left rotation on the string \u2018MESSAGE\u2019, \u2018B\u2019 times. If \u2018A\u2019 is \u20181\u2019, you need to perform the right rotation, \u2018B\u2019 times.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, return a single string, denoting the decrypted message after performing all the required operations.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= |MESSAGE| &lt;= 500\n1 &lt;= N &lt;= 1000\nN is always even\n\nTime Limit: 1sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1\nabcde \n4\n-1 2\n1 1\n-1 2\n-1 1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>eabcd\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for sample input 1:</h5>\n\n<pre><code>Initially, the given string is \u201cabcde\u201d. After performing the left rotation on it two times, we will get \u201ccdeab\u201d. After performing the right rotation on this string once, we will get \u201cbcdea\u201d. Next time, the string will become \u201cdeabc\u201d. And finally, the string will become \u201ceabcd\u201d. Hence, we print the final result.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\nbabb \n3\n-1 1\n1 2\n1 3\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>babb\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation for sample input 2:</h5>\n\n<pre><code>Initially, the given string is \u201cbabb\u201d. After performing the left rotation on it once, we will get \u201cabbb\u201d. After performing the right rotation on this string two times, we will get \u201cbbab\u201d. And finally, the string will become \u201cbabb\u201d. Hence, we print the final result.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": -8,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string 'MESSAGE', decrypt it by performing a series of left or right rotations based on provided instructions. Each instruction specifies the type of rotation (left or right) and the number of times to perform it.\n\nLeft Rotation: Moves the first character of the string to the end.\nRight Rotation: Moves the last character of the string to the beginning.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= |MESSAGE| <= 500",
                    "1 <= N <= 1000",
                    "N is always even",
                    "Time Limit: 1sec"
                ],
                "testcases": [
                    {
                        "input": "1\nabcde\n4\n-1 2\n1 1\n-1 2\n-1 1",
                        "output": "eabcd",
                        "explanation": "Starting with 'abcde':\n1. Left rotation (2 times): 'cdeab'\n2. Right rotation (1 time): 'bcdea'\n3. Left rotation (2 times): 'deabc'\n4. Left rotation (1 time): 'eabcd'"
                    },
                    {
                        "input": "1\nbabb\n3\n-1 1\n1 2\n1 3",
                        "output": "babb",
                        "explanation": "Starting with 'babb':\n1. Left rotation (1 time): 'abbb'\n2. Right rotation (2 times): 'bbab'\n3. Right rotation (3 times): 'babb'"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><i>If the size of the string is \u2018LEN\u2019, rotation of \u2018LEN\u2019 effectively means no rotation.&nbsp;</i></p>",
            "<p><i>Equal number of rotations in the opposite directions will cancel each other.</i></p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}