{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12646,
            "title": "Defend The Village",
            "titleSlug": "defend-the-village_1468962",
            "content": "<h4 id=\"you-are-given-an-array-list-of-positive-integers-houses-that-represents-the-positions-of-n-different-houses-in-ninja-s-village-on-a-horizontal-line-there-is-an-attack-by-the-enemy-that-a-group-of-m-ninjas-positioned-at-different-houses-can-stop-as-long-as-the-houses-are-within-their-radius-range-the-positions-of-these-m-ninjas-are-given-in-an-array-list-ninjas\">You are given an array/list of positive integers \u2018HOUSES\u2019 that represents the positions of &#39;N&#39; different houses in Ninja\u2019s village on a horizontal line. There is an attack by the enemy that a group of &#39;M&#39; Ninjas positioned at different houses can stop as long as the houses are within their radius range. The positions of these &#39;M&#39; Ninjas are given in an array/list &#39;NINJAS&#39;.</h4>\n\n<h4 id=\"your-task-is-to-return-the-minimum-radius-standard-of-the-defender-ninjas-so-that-those-ninjas-could-defend-all-houses-in-houses-array\">Your task is to return the minimum radius standard of the defender Ninjas so that those Ninjas could defend all houses in &#39;HOUSES&#39; array.</h4>\n\n<h4 id=\"example\">Example :</h4>\n\n<pre><code>Suppose given \u2018HOUSES\u2019 is [1,2,3] and \u2018NINJAS\u2019 is [2] then\nThe defending radius range of the ninjas (\u2018NINJAS\u2019) is 1 since there is only one ninja that is defending at position 2, and if we use the radius 1 standard, then all the houses can be protected.\n</code></pre>\n\n<p><img src=\"https://ninjasfiles.s3.amazonaws.com/asset_0000000000000428_1619160174_defend_the_village_example_1.png\" alt=\"\"></p>\n\n<h4 id=\"input-format\">Input Format :</h4>\n\n<pre><code>The first line of input contains a single integer \u2018T\u2019 denoting the number of test cases given. Then next \u2018T\u2019 lines follow:\n\nThe first line of each test case input contains two space-separated integers, where  the first integer &#39;N&#39; represents the length of the \u2018HOUSES\u2019 array while the second integer &#39;M&#39; represents the length of \u2018NINJAS&#39; array.\n\nThe second line of each test contains \u2018N\u2019 space-separated integers which are the elements of the position of houses (\u2018HOUSES\u2019) array.\n\nThe third line of each test contains \u2018M\u2019 space-separated integers which are the elements of the position of Ninjas (\u2018NINJAS\u2019) array.\n</code></pre>\n\n<h4 id=\"output-format\">Output Format :</h4>\n\n<pre><code>For every test case, print an integer denoting the minimum radius standard of (\u2018NINJAS\u2019) Ninjas so that those Ninjas could defend all houses. \n</code></pre>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>1. You do not need to print anything, it has already been taken care of. Just Implement the given function.\n2. Notice that all the ninjas (\u2018NINJAS\u2019) follow your radius standard, and the defending radius will be the same.\n</code></pre>\n\n<h4 id=\"constraint\">Constraint :</h4>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N, M &lt;= 3 * 10^3\n1 &lt;= HOUSES[i], NINJAS[i] &lt;= 10^9\n\nWhere &#39;HOUSES[i]&#39; represent the position of &#39;ith&#39; house and &#39;NINJAS[i]&#39; represent the position of &#39;ith&#39; Ninja.\n\nTime Limit: 1 sec\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1 :</h4>\n\n<pre><code>2\n4 2\n1 2 3 4\n1 4\n2 1\n1 5\n2    \n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1 :</h4>\n\n<pre><code>1\n3\n</code></pre>\n\n<h4 id=\"explanation-for-sample-output-1\">Explanation For Sample Output 1 :</h4>\n\n<pre><code>Test Case 1:\n</code></pre>\n\n<p><img src=\"https://ninjasfiles.s3.amazonaws.com/asset_0000000000000429_1619160182_defend_the_village_example_2.png\" alt=\"\"></p>\n\n<pre><code>1 is the required standard radius range that the Ninjas should have to defend/cover to protect all the houses \nSince the given positions of the houses are 1, 2, 3 and 4 and the given positions of the two Ninjas who would be available to defend all the houses are at house 1 and house 2. So if the minimum radius range standard is kept as 1 then they would be able to successfully defend the houses in their village and defeat the enemies.\n\n\nTest Case 2:\n\n3 is the required standard radius range that the Ninjas should have to defend/cover to protect all the houses.\nSince the given positions of the houses are 1 and 5 and the given position of the only Ninja who would be available to defend all the houses is at house 2. So if the minimum radius range standard is kept as 3 then the Ninja would be able to successfully defend the houses in the village and defeat all the enemies.\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2 :</h4>\n\n<pre><code>2\n4 4\n1 9 17 25\n3 7 15 20\n3 1\n1 2 3\n2\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample output 2 :</h4>\n\n<pre><code>5\n1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 4,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given the locations of houses and ninjas along a horizontal line, determine the minimum radius required for the ninjas to protect all houses. The goal is to find the smallest radius such that every house is within the protection range of at least one ninja.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N, M <= 3 * 10^3",
                    "1 <= HOUSES[i], NINJAS[i] <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "n = 4, m = 2, houses=[1, 2, 3, 4], ninjas=[1, 4]",
                        "output": "1",
                        "explanation": "With a radius of 1, the ninja at position 1 protects houses 1 and 2, and the ninja at position 4 protects houses 3 and 4. Thus, all houses are protected."
                    },
                    {
                        "input": "n = 2, m = 1, houses=[1, 5], ninjas=[2]",
                        "output": "3",
                        "explanation": "To protect both houses 1 and 5 from the ninja at position 2, the minimum radius must be 3.  A radius of 3 allows the ninja at 2 to cover from -1 to 5, encompassing both houses."
                    },
                    {
                        "input": "n = 4, m = 4, houses=[1, 9, 17, 25], ninjas=[3, 7, 15, 20]",
                        "output": "5",
                        "explanation": "The house at position 1 is closest to ninja at position 3. A radius of abs(1-3) = 2 does not cover the house at 9. The house at 9 is closest to ninja at position 7, meaning we need the radius to be abs(9-7) = 2. But the house at 17 and ninja at 15 have an absolute distance of 2, which may not be sufficient. By manually going through each house, we find the house at 25 is closest to ninja at 20, so a radius of 5 is needed. With radius 5: ninja at 3 covers 1, ninjas at 7, 15 and 20 cover 9, 17, and 25 respectively."
                    },
                    {
                        "input": "n = 3, m = 1, houses=[1, 2, 3], ninjas=[2]",
                        "output": "1",
                        "explanation": "With a radius of 1, the ninja at position 2 protects houses 1, 2 and 3. Thus, all houses are protected."
                    },
                    {
                        "input": "n = 5, m = 2, houses=[1,5,10,15,20], ninjas=[3,17]",
                        "output": "3",
                        "explanation": "With a radius of 3, the ninja at position 3 covers houses at 1 and 5. Ninja at 17 covers houses at 15 and 20. Remaining house at 10 is not covered. Now with radius of 7, the ninja at position 3 covers houses at 1,5,10 while ninja at position 17 will cover houses at 15 and 20. Finally with a radius of 2, ninja at position 3 covers house at 1 and 5, while ninja at 17 covers houses at 15 and 20, the houses at 10 remains uncovered, hence minimum raidus is 3"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to use a brute-force approach to iterate over the \u2018HOUSES\u2019 and \u2018NINJAS\u2019 arrays/list and find the minimum required standard radius range.</p>",
            "<p>We can use a modified binary search to yield the index of the nearest number.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}