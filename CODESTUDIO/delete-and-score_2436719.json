{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 15320,
            "title": "Delete And Score",
            "titleSlug": "delete-and-score_2436719",
            "content": "<h4 id=\"you-are-given-an-integer-array-arr-of-size-n-you-need-to-perform-the-following-operation-any-number-of-times\">You are given an integer array \u2018arr\u2019 of size \u2018N\u2019. You need to perform the following operation any number of times.</h4>\n\n<pre><code>1- Select a element arr[i] and add it to your score. \n\n2- Delete every element equal to arr[i] - 1 and arr[i] + 1.\n</code></pre>\n\n<h4 id=\"your-task-is-to-return-the-maximum-possible-score\">Your task is to return the maximum possible score.</h4>\n\n<h5 id=\"for-example\">For example:</h5>\n\n<pre><code>You are given arr = {5, 6, 7, 8}. Then our answer will be 14. \n\nFirst select arr[1] = 6 and add it to your score. Score will be 6. Now, we also have to delete all elements equal to arr[1] - 1 = 5 and arr[i] + 1 = 7. \n\nIn next move select arr[3] = 8. Delete it and add it to your score. Score = 14. Now, no element is left to be deleted. \n\nSo, our final score is 14, which is the correct answer.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains an integer &#39;T&#39; which denotes the number of test cases.\n\nThe first line of each test case contains an integer, \u2018N\u2019, denoting the size of the array.\n\nThe second contains \u2018N\u2019 space-separated integers representing the elements of the array \u2018arr\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print a single integer, denoting the maximum score possible after performing the operation any number of times.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10 \n1 &lt;= N  &lt;= 10 ^ 6\n1 &lt;= arr[i] &lt;= 10 ^ 4\n\nTime limit: 1 sec\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to input or print anything, as it has already been taken care of. Just implement the given function.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n4\n5 6 7 8\n5\n3 4 9 10 11\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code> 14\n 24\n</code></pre>\n\n<h5 id=\"explanation\">Explanation:</h5>\n\n<pre><code>For the first test case, \nFirst select arr[1] = 6 and add it to your score. Score will be 6. Now, we also have to delete all elements equal to arr[1] - 1 = 5 and arr[i] + 1 = 7. \n\nIn next move select arr[3] = 8. Delete it and add it to your score. Score = 14. Now, no element is left to be deleted. \n\nSo, our final score is 14, which is the correct answer.\n\nFor the second test case, \nYou are given \u2018arr\u2019 = {3,4,9,10,11}. Then our answer will be 24.     \n\nFirst select arr[1] = 4. Delete it and add it to your score. Score will be 4. Now, we also have to delete arr[1] - 1 = 3 and arr[1] + 1 = 5. Then arr = {9, 10, 11}.\n\nIn the next move select arr[0] = 9. Delete it and add it your score. Score = 13. Now, we also have to delete all elements equal to arr[0] - 1 = 8 and arr[0] + 1 = 10. Then arr = {11}.\n\nSelect arr[0] = 11. Delete it and add it to your score. Score = 24. Now, no element is left to be deleted. \n\nSo, our final score is 24, which is the correct answer.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n4\n1 6 4 9\n5\n4 4 7 9 10\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>20\n25\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -2,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an integer array 'arr' of size 'N', you can perform the following operation any number of times to maximize your score:\n\n1.  Select an element `arr[i]` and add it to your score.\n2.  Delete every element equal to `arr[i] - 1` and `arr[i] + 1` from the array.\n\nReturn the maximum possible score you can achieve after performing the operations.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10 ^ 6",
                    "1 <= arr[i] <= 10 ^ 4",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "4\n5 6 7 8",
                        "output": "14",
                        "explanation": "First, select 6, adding 6 to the score. Remove 5 and 7. Then, select 8, adding 8 to the score. The final score is 6 + 8 = 14."
                    },
                    {
                        "input": "5\n3 4 9 10 11",
                        "output": "24",
                        "explanation": "First, select 4, adding 4 to the score. Remove 3. Then select 9, adding 9 to the score. Remove 10. Finally, select 11, adding 11 to the score. The final score is 4 + 9 + 11 = 24."
                    },
                    {
                        "input": "4\n1 6 4 9",
                        "output": "20",
                        "explanation": "Select 1, adding 1 to the score. Remove nothing. Select 6, adding 6 to the score. Remove nothing. Select 4, adding 4 to the score. Remove nothing. Select 9, adding 9 to the score. Remove nothing. The final score is 1 + 6 + 4 + 9 = 20."
                    },
                    {
                        "input": "5\n4 4 7 9 10",
                        "output": "25",
                        "explanation": "Select the first 4, adding 4 to the score. Remove 3 and 5. Select the second 4, adding 4 to the score. Remove 3 and 5. Select 7, adding 7 to the score. Remove 6 and 8. Select 9, adding 9 to the score. Remove 8 and 10. Select 10, adding 10 to the score, remove 9 and 11. Final result is 4+4+7+9+10=25"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to use recursion.</p>",
            "<p>Try to store computed values.</p>",
            "<p>Try to implement a bottom-up approach.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}