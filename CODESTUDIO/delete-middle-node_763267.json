{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 7728,
            "title": "Delete middle node",
            "titleSlug": "delete-middle-node_763267",
            "content": "<h4 id=\"given-a-singly-linked-list-of-n-nodes-your-task-is-to-delete-the-middle-node-of-this-list-and-return-the-head-of-the-modified-list\">Given a singly linked list of <em><strong>&#39;N&#39;</strong></em> nodes. Your task is to delete the middle node of this list and return the head of the modified list.</h4>\n\n<p><br></p>\n\n<h4 id=\"however-if-the-list-has-an-even-number-of-nodes-we-delete-the-second-middle-node\">However, if the list has an even number of nodes, we delete the second middle node</h4>\n\n<p><br></p>\n\n<h5 id=\"example\">Example:</h5>\n\n<pre><code>If given linked list is 1-&gt;2-&gt;3-&gt;4 then it should be modified to 1-&gt;2-&gt;4.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains an integer &#39;N&#39;, the size of the linked list.\nThe second line contains &#39;N&#39; space-separated integers.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>The output contains all the nodes of linked list except the middle node. If the list is empty, &#39;-1&#39; will be printed.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You are not required to print the output, it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"follow-up\">Follow up :</h5>\n\n<pre><code>Try to solve this problem in O(N) time complexity and O(1) space complexity.\n\nCan you solve it in only one traversal of the Linked List?\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>5\n1 2 3 4 5\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>1 2 4 5 \n</code></pre>\n\n<h5 id=\"explanation-to-sample-input-1\">Explanation to Sample Input 1 :</h5>\n\n<pre><code>We can clearly see that there are 5 nodes in the linked list therefore the middle node is the node with value &#39;3&#39;.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>1\n2\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>-1\n</code></pre>\n\n<h5 id=\"explanation-to-sample-input-1\">Explanation to Sample Input 1 :</h5>\n\n<pre><code>We can clearly see that there is only one node in the linked list.\nTherefore, after deleting that one node, the linked list becomes empty, resulting in an output of -1.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= N &lt;= 10^3\n0 &lt;= data &lt;= 10^3 \n\nWhere &#39;N&#39; is the length of the linked list.\n\nTime Limit: 1 sec\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 63,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a singly linked list of N nodes, delete the middle node. If the list has an even number of nodes, delete the second middle node. Return the head of the modified list.",
                "constraints": [
                    "1 <= N <= 10^3, where N is the length of the linked list.",
                    "0 <= data <= 10^3, where data represents the value of a node in the list.",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "5\n1 2 3 4 5",
                        "output": "1 2 4 5",
                        "explanation": "The linked list is 1->2->3->4->5. The middle node is 3. After deleting 3, the linked list becomes 1->2->4->5."
                    },
                    {
                        "input": "1\n2",
                        "output": "-1",
                        "explanation": "The linked list is 2. After deleting the only node, the list is empty, resulting in -1."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>The middle node has around half the total number of nodes towards its left side. Can you use this idea somehow to solve the problem?</p>",
            "<p>Can you use two pointers approach here and solve the problem in only one traversal?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}