{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10027,
            "title": "Delete Nodes Which Have A Greater Value On Right Side",
            "titleSlug": "delete-nodes-which-have-a-greater-value-on-right-side_1115785",
            "content": "<h4 id=\"you-are-given-a-linked-list-of-integers-where-each-node-has-two-fields-data-field-which-contains-a-value-next-field-which-points-to-its-adjacent-node-to-the-right-or-null-if-it-is-the-last-node-your-task-is-to-delete-all-such-nodes-x-whose-adjacent-nodes-to-the-right-have-strictly-greater-value-than-the-value-of-x\">You are given a linked list of integers where each node has two fields: data field which contains a value, &#39;next&#39; field which points to its adjacent node to the right or NULL if it is the last node. Your task is to delete all such nodes X, whose adjacent nodes to the right have strictly greater value than the value of X.</h4>\n\n<h4 id=\"a-singly-linked-list-is-a-linear-data-structure-in-which-we-can-traverse-only-in-one-direction-i-e-from-head-to-tail-it-consists-of-several-nodes-where-each-node-contains-some-data-and-a-reference-to-the-next-node\">A singly linked list is a linear data structure in which we can traverse only in one direction i.e. from Head to Tail. It consists of several nodes where each node contains some data and a reference to the next node.</h4>\n\n<h5 id=\"a-sample-linked-list\">A sample Linked List-</h5>\n\n<p><img src=\"https://files.codingninjas.in/samplelinkedlist-7675.png\" alt=\"singly_linkedlist\"></p>\n\n<h5 id=\"follow-up\">Follow Up:</h5>\n\n<pre><code>Can you solve this in linear time and constant space complexity?\n</code></pre>\n\n<h5 id=\"input-format\">Input format:</h5>\n\n<pre><code>The first line contains an integer &#39;T&#39; which denotes the number of test cases or queries to be run. Then, the T test cases follow.\n\nThe first and only line of each test case contains space-separated integers denoting the values of nodes of the Linked List. The Linked List is terminated with -1. Hence, -1 is never a node value of the Linked List.\nFor more clarity please refer to the sample inputs.\n</code></pre>\n\n<h5 id=\"output-format\">Output format:</h5>\n\n<pre><code>For each test case, delete all the nodes which have a strictly greater value on the right side to this node.\n\nOutput for each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= N &lt;= 5000\n1 &lt;= node.data &lt;= 10^9 (node.data != -1) \n\nTime limit: 1 second\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n8 7 8 4 5 6 2 1 -1\n6 5 3 2 1 -1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>8 8 6 2 1 -1\n6 5 3 2 1 -1\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for sample input 1:</h5>\n\n<pre><code>For the first test case, the given Linked List is\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/deletenodesgreaterinput1-7818.png\" alt=\"singly_linkedlist_input\"></p>\n\n<pre><code>So, the 2nd, 4th and the 5th nodes have greater values on their right sides. Hence, we delete these nodes. So, after deleting these nodes the Linked List becomes 8 \u2192 8 \u2192 6 \u2192 2 \u2192 1, which is shown in the below figure.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/input1afterdelete-7819.png\" alt=\"after_delete\"></p>\n\n<pre><code>For the second test case, the given Linked List is\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/input1_example2-7820.png\" alt=\"singly_linkedlist_input\"></p>\n\n<pre><code>Since there are no such nodes that have greater values on the right sides, the Linked List remains unchanged.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n10 8 7 12 5 -1\n5 6 7 8 10 12 -1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>12 5 -1\n12 -1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 4,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a singly linked list of integers, where each node contains a 'data' field (integer value) and a 'next' field (pointer to the next node or NULL if it's the last node), remove all nodes X such that the value of the node immediately to the right of X is strictly greater than the value of X.",
                "constraints": [
                    "1 <= T <= 100 (Number of test cases)",
                    "1 <= N <= 5000 (Number of nodes in the linked list)",
                    "1 <= node.data <= 10^9 (Node value, node.data != -1)",
                    "Time limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "8 7 8 4 5 6 2 1 -1",
                        "output": "8 8 6 2 1 -1",
                        "explanation": "The linked list is 8 -> 7 -> 8 -> 4 -> 5 -> 6 -> 2 -> 1.  7, 4, and 5 are removed because 8 > 7, 6 > 4, and 6 > 5. The resulting list is 8 -> 8 -> 6 -> 2 -> 1."
                    },
                    {
                        "input": "6 5 3 2 1 -1",
                        "output": "6 5 3 2 1 -1",
                        "explanation": "The linked list is 6 -> 5 -> 3 -> 2 -> 1. No nodes have a greater value to their right, so the list remains unchanged."
                    },
                    {
                        "input": "10 8 7 12 5 -1",
                        "output": "12 5 -1",
                        "explanation": "The linked list is 10 -> 8 -> 7 -> 12 -> 5. 10, 8 and 7 are removed because 12 > 10, 12 > 8, and 12 > 7. The resulting list is 12 -> 5."
                    },
                    {
                        "input": "5 6 7 8 10 12 -1",
                        "output": "12 -1",
                        "explanation": "The linked list is 5 -> 6 -> 7 -> 8 -> 10 -> 12.  5, 6, 7, 8 and 10 are removed because 6 > 5, 7 > 6, 8 > 7, 10 > 8, and 12 > 10. The resulting list is 12."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Think of a brute force solution to check whether there exists a greater node on the right side for each node.</p>",
            "<p>Think of a brute force recursive solution for the above approach.</p>",
            "<p>Think of a solution to reverse the Linked List and store the maximum value till the current node.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Linked List",
                "slug": "linked-list"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}