{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10131,
            "title": "Deleting and Adding the last node",
            "titleSlug": "deleting-and-adding-the-last-node_1170051",
            "content": "<h4 id=\"you-are-provided-with-a-singly-linked-list-all-you-have-to-do-is-to-delete-the-last-node-of-the-linked-list-and-add-it-to-the-front-of-the-linked-list\">You are provided with a singly linked list, all you have to do is to delete the last node of the linked list and add it to the front of the linked list.</h4>\n\n<h4 id=\"example\">Example:</h4>\n\n<p><img src=\"https://files.codingninjas.in/deleting-and-adding-last-node-7944.png\" alt=\"Example\"></p>\n\n<h4 id=\"please-note-that-the-linked-list-will-only-contain-numeric-values\">Please note that the linked list will only contain numeric values.</h4>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 representing the number of test cases. \n\nThe first line of each test case will contain the elements of the linked list separated by a single space and terminated by -1. Hence, -1 would never be a list element.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, return the new head node of the linked list after adding the last node to its front.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You don\u2019t need to print anything, It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n0 &lt;= N &lt;= 10000\n-10^4 &lt;= LIST[i] &lt;= 10^4\n\nWhere &#39;N&#39; is the total number of nodes in the given linked list. \u2018LIST[i]\u2019 represents the node value of the node \u2018i\u2019.\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n2 5 3 11 1 -1\n2 -1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>1 2 5 3 11 -1\n2 -1\n</code></pre>\n\n<h5 id=\"explanation-of-sample-output-1\">Explanation of Sample Output 1:</h5>\n\n<pre><code>In test case 1, the new linked list after doing delete and add operations to the last node: 1 2 5 3 11 -1.\n\nIn test case 2, the linked list has only one node and so, the last node is itself at the front.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n4 3 -1\n1 1 1 1 -1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>3 4 -1\n1 1 1 1 -1\n</code></pre>\n\n<h5 id=\"explanation-for-sample-output-2\">Explanation for Sample Output 2:</h5>\n\n<pre><code>In test case 1, the new linked list after doing delete and add operations to the last node: 3 4 -1.\n\nIn test case 2, the new linked list after swapping first and last nodes: 1 1 1 1 -1.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 3,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a singly linked list, move the last node to the beginning of the list. Implement a function that takes the head of the linked list as input, removes the last node, and inserts it at the head. The linked list contains only numeric values.",
                "constraints": [
                    "1 <= T <= 10",
                    "0 <= N <= 10000",
                    "-10^4 <= LIST[i] <= 10^4",
                    "Where 'N' is the total number of nodes in the given linked list. 'LIST[i]' represents the node value of the node 'i'.",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "2 5 3 11 1 -1",
                        "output": "1 2 5 3 11 -1",
                        "explanation": "The last node '1' is moved to the front of the list. The resulting linked list is 1 -> 2 -> 5 -> 3 -> 11."
                    },
                    {
                        "input": "2 -1",
                        "output": "2 -1",
                        "explanation": "The linked list has only one node, so moving the last node to the beginning results in the same list."
                    },
                    {
                        "input": "4 3 -1",
                        "output": "3 4 -1",
                        "explanation": "The last node '3' is moved to the front of the list. The resulting linked list is 3 -> 4."
                    },
                    {
                        "input": "1 1 1 1 -1",
                        "output": "1 1 1 1 -1",
                        "explanation": "The last node '1' is moved to the front of the list. The resulting linked list is 1 -> 1 -> 1 -> 1."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you break the linked list into two parts?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}