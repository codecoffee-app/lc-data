{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 7175,
            "title": "Deletion in Circular Linked List",
            "titleSlug": "deletion-in-circular-linked-list_630409",
            "content": "<h4 id=\"you-are-given-a-circular-linked-list-of-integers-and-an-integer-key\">You are given a Circular Linked List of integers, and an integer, &#39;key&#39;.</h4>\n\n<h4 id=\"you-have-to-write-a-function-that-finds-the-given-key-in-the-list-and-deletes-it-if-no-such-key-is-present-then-the-list-remains-unchanged\">You have to write a function that finds the given key in the list and deletes it. If no such key is present, then the list remains unchanged.</h4>\n\n<h5 id=\"for-example\">For Example :</h5>\n\n<pre><code>This is a visualization of the Circular Linked List, represented by:\n1 2 3 4 5 -1\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/0000000000004480.png\" alt=\"linked_list_1\"></p>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>The Circular Linked List before/after deletion may happen to be empty. In that case, only print -1.\n\nAll integers in the list are unique.\n</code></pre>\n\n<p><br></p>\n\n<h5 id=\"input-format\">Input format :</h5>\n\n<pre><code>The first input line contains the integers present in the circular linked list in order. \n\nThe second input line contains a single integer &#39;key&#39;, the key to be deleted.\n</code></pre>\n\n<h5 id=\"remember-consider\">Remember/Consider :</h5>\n\n<pre><code>-1 marks the end of the linked list however, the tail of the linked list would be pointing to the head making it circular in nature.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>The only output line contains the updated circular linked list post deletion.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>0 &lt;= N &lt;= 10 ^ 5\n1 &lt;= key &lt;= 10 ^ 5\n\nWhere &#39;N&#39; is the length of the Circular Linked List.\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>1 2 3 4 5 -1\n3\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>1 2 4 5 -1\n</code></pre>\n\n<h5 id=\"explanation-for-sample-1\">Explanation for Sample 1 :</h5>\n\n<pre><code>The given linked list, before deletion:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/0000000000004480.png\" alt=\"linked_list_1\"></p>\n\n<pre><code>After deletion :\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/0000000000004481.png\" alt=\"linked_list_2\"></p>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>1 2 3 4 5 -1\n1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>2 3 4 5 -1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 30,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a circular linked list of integers represented by its head node, and an integer 'key', implement a function to find the 'key' in the list and delete the node containing it. If the 'key' is not found, the list should remain unchanged. If the list becomes empty after deletion, the function should still handle that case correctly.",
                "constraints": [
                    "0 <= N <= 10^5, where N is the number of nodes in the circular linked list.",
                    "1 <= key <= 10^5",
                    "All integers in the list are unique."
                ],
                "testcases": [
                    {
                        "input": "head = [1,2,3,4,5], key = 3",
                        "output": "1 2 4 5 -1",
                        "explanation": "The linked list initially is 1 -> 2 -> 3 -> 4 -> 5. Deleting 3 results in 1 -> 2 -> 4 -> 5."
                    },
                    {
                        "input": "head = [1,2,3,4,5], key = 1",
                        "output": "2 3 4 5 -1",
                        "explanation": "The linked list initially is 1 -> 2 -> 3 -> 4 -> 5. Deleting 1 results in 2 -> 3 -> 4 -> 5."
                    },
                    {
                        "input": "head = [1,2,3,4,5], key = 5",
                        "output": "1 2 3 4 -1",
                        "explanation": "The linked list initially is 1 -> 2 -> 3 -> 4 -> 5. Deleting 5 results in 1 -> 2 -> 3 -> 4."
                    },
                    {
                        "input": "head = [1,2,3,4,5], key = 6",
                        "output": "1 2 3 4 5 -1",
                        "explanation": "The key 6 is not present in the linked list, so the list remains unchanged."
                    },
                    {
                        "input": "head = [1], key = 1",
                        "output": "-1",
                        "explanation": "The linked list is 1. Deleting 1 makes the list empty, represented by -1."
                    },
                    {
                        "input": "head = [2, 4, 6, 8], key = 4",
                        "output": "2 6 8 -1",
                        "explanation": "The linked list is 2 -> 4 -> 6 -> 8.  After deleting 4, the result is 2 -> 6 -> 8."
                    },
                    {
                        "input": "head = [5, 10, 15, 20], key = 20",
                        "output": "5 10 15 -1",
                        "explanation": "Deleting the last node (20) in the list: 5 -> 10 -> 15 -> 20 becomes 5 -> 10 -> 15."
                    },
                    {
                        "input": "head = [1], key = 2",
                        "output": "1 -1",
                        "explanation": "key 2 is not present, the list remains unchanged."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to think of a recursive approach to solve the problem.</p>",
            "<p>Think about what you'll do for deletion in a non-circular linked list. Can you adapt your approach to accomodate for circular linked list? What changes can you make?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}