{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 7175,
            "title": "Deletion in Circular Linked List",
            "titleSlug": "deletion-in-circular-linked-list_630409",
            "content": "<h4 id=\"you-are-given-a-circular-linked-list-of-integers-and-an-integer-key\">You are given a Circular Linked List of integers, and an integer, &#39;key&#39;.</h4>\n\n<h4 id=\"you-have-to-write-a-function-that-finds-the-given-key-in-the-list-and-deletes-it-if-no-such-key-is-present-then-the-list-remains-unchanged\">You have to write a function that finds the given key in the list and deletes it. If no such key is present, then the list remains unchanged.</h4>\n\n<h5 id=\"for-example\">For Example :</h5>\n\n<pre><code>This is a visualization of the Circular Linked List, represented by:\n1 2 3 4 5 -1\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/0000000000004480.png\" alt=\"linked_list_1\"></p>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>The Circular Linked List before/after deletion may happen to be empty. In that case, only print -1.\n\nAll integers in the list are unique.\n</code></pre>\n\n<p><br></p>\n\n<h5 id=\"input-format\">Input format :</h5>\n\n<pre><code>The first input line contains the integers present in the circular linked list in order. \n\nThe second input line contains a single integer &#39;key&#39;, the key to be deleted.\n</code></pre>\n\n<h5 id=\"remember-consider\">Remember/Consider :</h5>\n\n<pre><code>-1 marks the end of the linked list however, the tail of the linked list would be pointing to the head making it circular in nature.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>The only output line contains the updated circular linked list post deletion.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>0 &lt;= N &lt;= 10 ^ 5\n1 &lt;= key &lt;= 10 ^ 5\n\nWhere &#39;N&#39; is the length of the Circular Linked List.\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>1 2 3 4 5 -1\n3\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>1 2 4 5 -1\n</code></pre>\n\n<h5 id=\"explanation-for-sample-1\">Explanation for Sample 1 :</h5>\n\n<pre><code>The given linked list, before deletion:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/0000000000004480.png\" alt=\"linked_list_1\"></p>\n\n<pre><code>After deletion :\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/0000000000004481.png\" alt=\"linked_list_2\"></p>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>1 2 3 4 5 -1\n1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>2 3 4 5 -1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 30,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a circular linked list of integers and a key, delete the node containing the key from the list. If the key is not present in the list, the list remains unchanged. The circular linked list is represented by a sequence of integers terminated by -1, where the last node points back to the head. All integers in the list are unique.",
                "constraints": [
                    "0 <= N <= 10^5 (where N is the length of the Circular Linked List)",
                    "1 <= key <= 10^5",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "1 2 3 4 5 -1\n3",
                        "output": "1 2 4 5 -1",
                        "explanation": "The key '3' is found in the linked list and is deleted. The resulting list is 1 2 4 5 -1."
                    },
                    {
                        "input": "1 2 3 4 5 -1\n1",
                        "output": "2 3 4 5 -1",
                        "explanation": "The key '1' is found in the linked list (head of list) and is deleted. The resulting list is 2 3 4 5 -1."
                    },
                    {
                        "input": "1 2 3 4 5 -1\n6",
                        "output": "1 2 3 4 5 -1",
                        "explanation": "The key '6' is not found in the linked list. Therefore, the list remains unchanged and is 1 2 3 4 5 -1."
                    },
                    {
                        "input": "5 -1\n5",
                        "output": "-1",
                        "explanation": "The key '5' is the only element and head of the list. Therefore, list becomes empty and -1 is printed."
                    },
                    {
                        "input": "1 -1\n1",
                        "output": "-1",
                        "explanation": "The key '1' is the only element in the list and the first node. After deletion, the list is empty so output should be -1"
                    },
                    {
                        "input": "1 2 3 -1\n2",
                        "output": "1 3 -1",
                        "explanation": "The key '2' is found in the middle of the linked list and is deleted. The resulting list is 1 3 -1."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to think of a recursive approach to solve the problem.</p>",
            "<p>Think about what you'll do for deletion in a non-circular linked list. Can you adapt your approach to accomodate for circular linked list? What changes can you make?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}