{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8908,
            "title": "Deletion in Circular Linked List",
            "titleSlug": "deletion-in-circular-linked-list_920512",
            "content": "<h4 id=\"you-are-given-a-circular-singly-linked-list-of-integers-given-a-value-val-delete-the-first-occurrence-of-this-value-in-the-linked-list-if-the-given-value-is-not-present-return-the-same-linked-list\">You are given a Circular Singly Linked List of integers. Given a value \u2018VAL\u2019, delete the first occurrence of this value in the linked list. If the given value is not present, return the same linked list.</h4>\n\n<h4 id=\"a-circular-linked-list-is-a-sequence-of-elements-in-which-every-element-has-a-link-to-its-next-element-in-the-sequence-and-the-last-element-has-a-link-to-the-first-element-this-means-that-the-circular-linked-list-is-similar-to-the-single-linked-list-except-that-the-last-node-points-to-the-first-node-in-the-list\">A circular linked list is a sequence of elements in which every element has a link to its next element in the sequence and the last element has a link to the first element. This means that the circular linked list is similar to the single linked list except that the last node points to the first node in the list.</h4>\n\n<h4 id=\"example\">Example:</h4>\n\n<p><img src=\"https://files.codingninjas.in/cll-6381.png\" alt=\"Circular Linked List\"></p>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer &#39;T&#39;, the number of test cases. Then each test case follows.\n\nThe first line of each test case contains the elements of the circular linked list separated by a single space and terminated by -1. Hence, -1 would never be a list element.\n\nThe second line contains an integer \u2018VAL\u2019, the value of the node to be deleted.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print the circular linked list after deletion. The elements of the list will be single-space separated, terminated by -1.\n\nThe output of each test case is printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don&#39;t need to print the output, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= &#39;T&#39; &lt;= 10\n1 &lt;= &#39;N&#39; &lt;= 5 * 10^4\n-10^9 &lt;= &#39;data&#39; &lt;= 10^9 &#39;and &#39;data&#39; != -1\n-10^9 &lt;= &#39;VAL&#39; &lt;= 10^9 and &#39;VAL&#39; != -1\n\nWhere &#39;N&#39; denotes the number of elements in the Circular Singly Linked List and &#39;data&#39; represents the value of those elements.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>3\n10 20 30 40 -1\n20\n8 9 8 -1\n8\n4 -1\n4\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>10 30 40 -1\n9 8 -1\n-1\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1:</h5>\n\n<pre><code>For the first test case:\n2nd element ( which has a value of 20 ) will be deleted.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/capture1-9836.JPG\" alt=\"Sample Input 1\"></p>\n\n<pre><code>For the second test case:\n8 occur two times, but only the first occurrence will be deleted.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/capture-9835.JPG\" alt=\"Sample Input 2\"></p>\n\n<pre><code>For the third test case, the list has only one element with a value of 4. So after deletion, the list will become empty.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/capture2-9837.JPG\" alt=\"Sample Input 3\"></p>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n1 5 4 -1\n7\n1 1 1 -1\n1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>1 5 4 -1\n1 1 -1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": -10,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a circular singly linked list of integers, delete the first occurrence of a given value 'VAL' from the list. If 'VAL' is not present, return the original linked list.",
                "constraints": [
                    "1 <= T <= 10 (Number of test cases)",
                    "1 <= N <= 5 * 10^4 (Number of elements in the linked list)",
                    "-10^9 <= data <= 10^9 and data != -1 (Value of list elements)",
                    "-10^9 <= VAL <= 10^9 and VAL != -1 (Value to delete)",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "10 20 30 40 -1\n20",
                        "output": "10 30 40 -1",
                        "explanation": "The first occurrence of 20 is removed from the list."
                    },
                    {
                        "input": "8 9 8 -1\n8",
                        "output": "9 8 -1",
                        "explanation": "The first occurrence of 8 is removed from the list."
                    },
                    {
                        "input": "4 -1\n4",
                        "output": "-1",
                        "explanation": "The list contains only the value 4, so after deletion, the list becomes empty, represented by -1."
                    },
                    {
                        "input": "1 5 4 -1\n7",
                        "output": "1 5 4 -1",
                        "explanation": "The value 7 is not present in the list, so the original list is returned."
                    },
                    {
                        "input": "1 1 1 -1\n1",
                        "output": "1 1 -1",
                        "explanation": "The first occurrence of 1 is removed from the list."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Traverse the list until you find the node to be deleted.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}