{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8275,
            "title": "Design a hashset",
            "titleSlug": "design-a-hashset_842492",
            "content": "<h4 id=\"design-a-hashset-without-using-any-built-in-hash-table-libraries\">Design a HashSet without using any built-in hash table libraries.</h4>\n\n<h4 id=\"implement-the-following-public-functions\">Implement the following public functions :</h4>\n\n<pre><code>1) Constructor: It initializes the data members as required.\n\n2) add(value): It inserts an element into the HashSet. The function takes one argument which is the value that needs to be added and returns nothing\n\n3) contains(value): It checks whether the element exists in the HashSet or not. The function takes one argument which is the value that needs to be searched for in the HashSet. The function returns true if the element exists, otherwise returns false.\n\n4) remove(value): It removes an element from the HashSet. The function takes one argument which is the value that needs to be removed from the HashSet and returns the element which is being removed. If the element does not exist in the HashSet or if HashSet is empty, return -1.\n</code></pre>\n\n<h5 id=\"operations-performed-on-the-hashset\">Operations Performed on the HashSet:</h5>\n\n<pre><code>Query-1 (Denoted by an integer 1)- Inserts an element in the HashSet\n\nQuery-2 (Denoted by an integer 2)- Returns a boolean value denoting whether the element is present in the HashSet or not.\n\nQuery-3 (Denoted by an integer 3)- Removes the element from the HashSet.\n</code></pre>\n\n<h5 id=\"input-format\">Input format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018Q\u2019 denoting the number of queries.\nThe next \u2018Q\u2019 lines represent the queries that need to be performed.\n\nEach query case contains two integers, two integers separated by a single space, representing the type of the operation, and a value on which operation needs to be performed.\n</code></pre>\n\n<h5 id=\"output-format\">Output format</h5>\n\n<pre><code>For Query 1, you do not need to return anything.\n\nFor Query 2, return true or false depending upon whether the element is present or not.\n\nFor Query 3, return the element which is being removed from the HashSet.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= Q &lt;= 10^3\n1 &lt;= query type &lt;= 3\n0 &lt;= VALUE &lt;= 10^6\n\nWhere \u2018Q\u2019 is the total number of queries, \u2018value\u2019 is the element that will be added, removed, or whose existence in the HashSet is to be checked.\n\nTime limit: 1 second\n</code></pre>\n<h5 id=\"sample-input-1\">Sample input 1</h5>\n\n<pre><code>6\n1 500\n1 200\n1 400\n2 200\n2 600\n3 200\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>True\nFalse\n200\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of sample input 1:</h5>\n\n<pre><code>There are 6 queries.\n\nQuery 1: 1 represents the add function. 500 is added to the HashSet.\nQuery 2: 1 represents the add function. 200 is added to the HashSet.\nQuery 3: 1 represents the add function. 400 is added to the HashSet.\nQuery 4: 2 represents the contains function. Since 200 is present in the HashSet, it returns true.\nQuery 5: 2 represents the contains function. Since 600 is not present in the HashSet, it returns false.\nQuery 6: 3 represents the remove function. Since 200 is present in the HashSet, it is removed and 200 is returned.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample input 2</h5>\n\n<pre><code>5\n1 20\n1 50\n2 30\n3 20\n3 50\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>False\n20\n50\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -2,
            "dislikes": "NA",
            "rephrased": {
                "body": "Design a HashSet without using any built-in hash table libraries. Implement the `add`, `contains`, and `remove` functions.  `add(value)` inserts an element, `contains(value)` checks if an element exists, and `remove(value)` removes an element.\n\nOperations are performed based on the following queries:\n\n*   1: Insert an element into the HashSet.\n*   2: Check if an element is present in the HashSet (return true or false).\n*   3: Remove an element from the HashSet (return the removed element, or -1 if not found).",
                "constraints": [
                    "1 <= Q <= 10^3 (Q is the number of queries)",
                    "1 <= query type <= 3",
                    "0 <= VALUE <= 10^6 (VALUE is the element to be added, removed, or searched)",
                    "Time limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "6\n1 500\n1 200\n1 400\n2 200\n2 600\n3 200",
                        "output": "True\nFalse\n200",
                        "explanation": "Query 1: Adds 500. Query 2: Adds 200. Query 3: Adds 400. Query 4: Contains(200) returns True. Query 5: Contains(600) returns False. Query 6: Remove(200) removes 200 and returns 200."
                    },
                    {
                        "input": "5\n1 20\n1 50\n2 30\n3 20\n3 50",
                        "output": "False\n20\n50",
                        "explanation": "Query 1: Adds 20. Query 2: Adds 50. Query 3: Contains(30) returns False. Query 4: Remove(20) removes 20 and returns 20. Query 5: Remove(50) removes 50 and returns 50."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can we use hashing to reduce space?</p>",
            "<p>Use vector or similar data structure to store the elements.</p>",
            "<p>Use extra space and try marking the elements.&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}