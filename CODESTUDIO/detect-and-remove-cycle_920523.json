{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8918,
            "title": "Detect and Remove Cycle",
            "titleSlug": "detect-and-remove-cycle_920523",
            "content": "<h4 id=\"you-have-been-given-a-singly-linked-list-of-integers-determine-if-it-forms-a-cycle-or-not-if-there-is-a-cycle-remove-the-cycle-and-return-the-list\">You have been given a Singly Linked List of integers, determine if it forms a cycle or not. If there is a cycle, remove the cycle and return the list.</h4>\n\n<h4 id=\"a-cycle-occurs-when-a-nodes-next-points-back-to-a-previous-node-in-the-list\">A cycle occurs when a node&#39;s \u2018next\u2019 points back to a previous node in the list.</h4>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of input contains a single integer T, representing the number of test cases or queries to be run. \n\nThe first line of each test case contains the elements of the singly linked list separated by a single space and terminated by -1 and hence -1 would never be a list element.\n\nThe second line contains the integer position &quot;pos&quot; which represents the position (0-indexed) in the linked list where the tail connects to. If &quot;pos&quot; is -1, then there is no cycle in the linked list.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print two lines.\n\nThe first line contains &#39;True&#39; if the linked list has a cycle, otherwise &#39;False&#39;.\n\nThe second line contains the elements of the singly linked list separated by a single space and terminated by -1. Hence, -1 would never be a list element.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don&#39;t have to explicitly print anything yourself. It has been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 5 * 10^4\n-1 &lt;= pos &lt; N\n-10^9 &lt;= data &lt;= 10^9 and data != -1\n\nWhere &#39;N&#39; is the size of the singly linked list, and &quot;data&quot; is the Integer data of the singly linked list.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n3 2 0 -4 -1\n1\n1 2 -1\n-1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>True\n3 2 0 -4 -1\nFalse\n1 2 -1\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1 :</h5>\n\n<pre><code>In the 1st test case, there is a cycle, from index 1 -&gt; 2 -&gt; 3 -&gt; 1. The cycle&#39;s length is 3.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/inp-6397.png\" alt=\"sample input1\"></p>\n\n<pre><code>In the 2nd test case, there is no cycle.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n1 1 1 -1\n0\n3 -3 -1\n-1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>True\n1 1 1 -1\nFalse\n3 -3 -1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 32,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a singly linked list of integers, determine if it contains a cycle. If a cycle exists, remove it from the list. Return `true` if a cycle was detected and removed, and `false` otherwise. After removing the cycle (if any), the linked list should be null-terminated (the `next` pointer of the last node should be `NULL`).",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 5 * 10^4",
                    "-10^9 <= data <= 10^9 and data != -1 (where 'data' is the Integer data of the singly linked list)."
                ],
                "testcases": [
                    {
                        "input": "nums=[3,2,0,-4], pos=1",
                        "output": "True\n3 2 0 -4 -1",
                        "explanation": "The linked list contains a cycle where the tail connects to the node at index 1 (value 2). The function should detect and remove this cycle, and return the modified list.  'True' indicates a cycle was found and removed."
                    },
                    {
                        "input": "nums=[1,2], pos=-1",
                        "output": "False\n1 2 -1",
                        "explanation": "The linked list does not contain a cycle. The function should return the original list and 'False'."
                    },
                    {
                        "input": "nums=[1,1,1], pos=0",
                        "output": "True\n1 1 1 -1",
                        "explanation": "The linked list contains a cycle where the tail connects to the head (index 0). The function should detect and remove this cycle."
                    },
                    {
                        "input": "nums=[3,-3], pos=-1",
                        "output": "False\n3 -3 -1",
                        "explanation": "The linked list does not contain a cycle and should return False and the original list."
                    },
                    {
                        "input": "nums=[1], pos=-1",
                        "output": "False\n1 -1",
                        "explanation": "Single node linked list with no cycle"
                    },
                    {
                        "input": "nums=[1,2,3,4,5], pos=4",
                        "output": "True\n1 2 3 4 5 -1",
                        "explanation": "The linked list contains a cycle where the tail connects to the last element. The function should detect and remove this cycle."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Think of checking every node to detect the cycle.</p>",
            "<p>If we visit the same node more than once, it means there is a cycle.</p>",
            "<p>Can you solve it without using the hash table?</p>",
            "<p>Solve it without finding the length of the cycle.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}