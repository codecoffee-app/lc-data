{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 13919,
            "title": "Detect The Cycle",
            "titleSlug": "detect-the-cycle_1822910",
            "content": "<h4 id=\"kevin-has-given-you-a-singly-linked-list-that-contains-only-integers-you-have-to-determine-if-it-forms-a-cycle-or-not\">Kevin has given you a Singly Linked List that contains only integers. You have to determine if it forms a cycle or not.</h4>\n\n<h4 id=\"a-cycle-occurs-when-a-nodes-next-pointer-points-back-to-a-previous-node-in-the-list\">A cycle occurs when a node&#39;s next pointer points back to a previous node in the list.</h4>\n\n<h5 id=\"input-format\">Input format :</h5>\n\n<pre><code>The first line of each test case contains the elements of the singly linked list separated by a single space and terminated by -1 and hence -1 would never be a list element.\n\nThe second line contains the integer position &#39;POS&#39; that represents the position (0-indexed) in the linked list where the tail connects to. If &#39;POS&#39; is -1, then there is no cycle in the linked list.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>The only line of output contains &#39;true&#39; if the linked list has a cycle or &#39;false&#39; otherwise.\n\nYou don&#39;t have to explicitly print by yourself. It has been taken care of.\n</code></pre>\n\n<h5 id=\"follow-up\">Follow Up:</h5>\n\n<pre><code>Try to solve this problem in O(N) Time Complexity and O(1) space Complexity.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>0 &lt;= N &lt;= 10^6\n-1 &lt;= POS &lt; N\n-10^9 &lt;= DATA &lt;= 10^9 and DATA != -1\n\nWhere &#39;N&#39; is the size of the singly linked list, &#39;POS&#39; represents the position (0-indexed) in the linked list where the tail connects to and &#39;DATA&#39; is the Integer data of the singly linked list.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>3 2 0 -4 -1\n1\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/0000000000004224.png\" alt=\"Sample Input 1\"></p>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>true\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1:</h5>\n\n<pre><code>The linked list has a cycle that connects back to index 1.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>1 -1\n-1\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/0000000000004227.png\" alt=\"Sample Input 1\"></p>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>false\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 34,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given the head of a singly linked list, determine if the linked list has a cycle. A cycle exists if there is a node in the list that can be reached again by continuously following the 'next' pointer. Implement the `detectCycle` function to return `true` if a cycle exists, and `false` otherwise.",
                "constraints": [
                    "0 <= N <= 10^6",
                    "-1 <= POS < N",
                    "-10^9 <= DATA <= 10^9 and DATA != -1"
                ],
                "testcases": [
                    {
                        "input": "nums=[3, 2, 0, -4], pos=1",
                        "output": "true",
                        "explanation": "The linked list has a cycle that connects back to index 1."
                    },
                    {
                        "input": "nums=[1], pos=-1",
                        "output": "false",
                        "explanation": "The linked list does not have a cycle."
                    },
                    {
                        "input": "nums=[1,2], pos=0",
                        "output": "true",
                        "explanation": "The linked list has a cycle that connects back to index 0."
                    },
                    {
                        "input": "nums=[1,2], pos=-1",
                        "output": "false",
                        "explanation": "The linked list does not have cycle"
                    },
                    {
                        "input": "nums=[1,2,3,4,5], pos=4",
                        "output": "true",
                        "explanation": "The tail node 5 points to itself forming a cycle"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Think of 2 people starting from the initial node. One person takes a single jump and the other person takes twice the first person's jump each time. Extend this idea on every node and track the destination of both persons. Draw it on paper and find what happens!</p>"
        ],
        "relatedTopics": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}