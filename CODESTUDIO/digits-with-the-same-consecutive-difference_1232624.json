{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10536,
            "title": "Digits with the same consecutive difference",
            "titleSlug": "digits-with-the-same-consecutive-difference_1232624",
            "content": "<h4 id=\"you-are-given-two-integers-n-and-k-the-task-is-to-return-all-non-negative-integers-having-n-digits-such-that-the-absolute-difference-between-each-consecutive-digit-is-k\">You are given two integers, \u2018N\u2019 and \u2018K\u2019. The task is to return all non-negative integers having \u2018N\u2019 digits such that the absolute difference between each consecutive digit is \u2018K\u2019.</h4>\n\n<h5 id=\"example\">Example:</h5>\n\n<pre><code>Input: N = 2, K = 6\nWe need to return all two-digit numbers where the absolute difference between each consecutive digit is \u20186\u2019. Note that \u201806\u2019 is not a valid two-digit number. So, the answer is:\nOutput: [17, 28, 39, 60, 71, 82, 93]\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>1. Every number in the answer should not contain leading zeroes. E.g., the number \u201809\u2019 is invalid.\n\n2. You can return the answer in any order.\n</code></pre>\n\n<h5 id=\"input-format\">Input format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 which denotes the number of test cases. Then, the \u2018T\u2019 test cases follow.\n\nThe first and only line of each test case contains two space-separated integers, \u2018N\u2019 and \u2018K\u2019, denoting the number of digits and the absolute difference between each consecutive digit.\n</code></pre>\n\n<h5 id=\"output-format\">Output format:</h5>\n\n<pre><code>For every test case, return an array of integers where each integer has \u2018N\u2019 digits, and the absolute difference between each digit is \u2018K\u2019. You may return output in any order, but the printed output will be in sorted order.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n2 &lt;= N &lt;= 9\n0 &lt;= K &lt;= 9\n\nTime limit: 1 sec\n</code></pre>\n<h4 id=\"sample-input-1\">Sample input 1:</h4>\n\n<pre><code>2\n2 0\n3 6\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample output 1:</h4>\n\n<pre><code>11 22 33 44 55 66 77 88 99\n171 282 393 606 717 828 939\n</code></pre>\n\n<h4 id=\"explanation-of-sample-input-1\">Explanation of sample input 1:</h4>\n\n<pre><code>Test Case 1:\nWe need to return all two-digit numbers where the absolute difference between each consecutive digit is \u20180\u2019. So, the answer is:\nOutput: [11, 22, 33, 44, 55, 66, 77, 88, 99]\n\nTest Case 2:\nWe need to return all three-digit numbers where the absolute difference between each consecutive digit is \u20186\u2019. So, the answer is:\nOutput: [171, 282, 393, 606, 717, 828, 939]\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample input 2:</h4>\n\n<pre><code>2\n4 9\n2 3\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample output 2:</h4>\n\n<pre><code>9090\n14 25 30 36 41 47 52 58 63 69 74 85 96\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 7,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two integers, 'N' representing the number of digits and 'K' representing the absolute difference between consecutive digits, find all non-negative integers of length 'N' where the absolute difference between each pair of adjacent digits is exactly 'K'. The integers should not have leading zeros.",
                "constraints": [
                    "1 <= T <= 100",
                    "2 <= N <= 9",
                    "0 <= K <= 9"
                ],
                "testcases": [
                    {
                        "input": "n = 2, k = 6",
                        "output": "[17, 28, 39, 60, 71, 82, 93]",
                        "explanation": "We need to return all two-digit numbers where the absolute difference between each consecutive digit is \u20186\u2019. For example, 17 is a valid number because |1 - 7| = 6.  \u201806\u2019 is not a valid two-digit number because it has a leading zero."
                    },
                    {
                        "input": "n = 3, k = 6",
                        "output": "[171, 282, 393, 606, 717, 828, 939]",
                        "explanation": "We need to return all three-digit numbers where the absolute difference between each consecutive digit is \u20186\u2019. For example, 171 is a valid number because |1-7| = 6 and |7-1| = 6."
                    },
                    {
                        "input": "n = 2, k = 0",
                        "output": "[11, 22, 33, 44, 55, 66, 77, 88, 99]",
                        "explanation": "We need to return all two-digit numbers where the absolute difference between each consecutive digit is \u20180\u2019. This means both digits must be the same."
                    },
                    {
                        "input": "n = 4, k = 9",
                        "output": "[9090]",
                        "explanation": "We need to return all four-digit numbers where the absolute difference between each consecutive digit is \u20189\u2019. The only possible solution is 9090 since the absolute difference between consecutive digits must be 9"
                    },
                    {
                        "input": "n = 2, k = 3",
                        "output": "[14, 25, 30, 36, 41, 47, 52, 58, 63, 69, 74, 85, 96]",
                        "explanation": "We need to return all two-digit numbers where the absolute difference between each consecutive digit is \u20183\u2019.  For example, 14, 25, etc. are all valid, as their digit difference is 3."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Using BFS try to create a tree where we add a new digit at each level with an absolute difference as K.</p>",
            "<p>Using DFS try to create a tree where we add a new digit at each level with absolute difference as K.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Breadth-first Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}