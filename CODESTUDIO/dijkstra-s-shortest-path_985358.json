{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9454,
            "title": "Dijkstra's shortest path",
            "titleSlug": "dijkstra-s-shortest-path_985358",
            "content": "<h4 id=\"you-have-been-given-an-undirected-connected-graph-of-v-vertices-labelled-from-0-to-v-1-and-e-edges-each-edge-connecting-two-nodes-u-and-v-has-a-weight-denoting-the-distance-between-them\">You have been given an undirected, connected graph of <em><strong>\u2018V\u2019</strong></em> vertices (labelled from 0 to V-1) and <em><strong>\u2018E\u2019</strong></em> edges. Each edge connecting two nodes &#39;u&#39; and &#39;v&#39; has a weight denoting the distance between them.</h4>\n\n<p><Br></p>\n\n<h4 id=\"your-task-is-to-find-the-shortest-path-distance-from-the-source-node-s-to-all-the-vertices-you-have-to-return-a-list-of-integers-denoting-the-shortest-distance-between-each-vertex-and-source-vertex-s\">Your task is to find the shortest path distance from the source node <em><strong>&#39;S&#39;</strong></em> to all the vertices. You have to return a list of integers denoting the shortest distance between each vertex and source vertex &#39;S&#39;.</h4>\n\n<p><Br></p>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>1. There are no self-loops(an edge connecting the vertex to itself) in the given graph.\n\n2. There are no parallel edges i.e no two vertices are directly connected by more than 1 edge.\n</code></pre>\n\n<p><Br></p>\n\n<h4 id=\"for-example\">For Example:</h4>\n\n<pre><code>Input:\n4 5\n0 1 5\n0 2 8\n1 2 9\n1 3 2\n2 3 6\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/untitled-diagram-16-6326.jpg\" alt=\"alt te\"></p>\n\n<pre><code>The source node is node 0.\n\nThe shortest distance from node 0 to node 0 is 0.\n\nThe shortest distance from node 0 to node 1 is 5. In the above figure, the green path represents this distance. The path goes from node 0-&gt;1, giving distance = 5.\n\nThe shortest distance from node 0 to node 2 is 8. In the above figure, the pink path represents this distance. The path goes from node 0-&gt;2, giving distance = 8.\n\nThe shortest distance from node 0 to node 3 is 7. In the above figure, the yellow path represents this distance. The path goes from node 0-&gt;1-&gt;3, giving distance = 7.\n</code></pre>\n\n<h4 id=\"input-format\">Input format:</h4>\n\n<pre><code>The first line contains three space-separated integers \u2018V\u2019, \u2018E\u2019 and &#39;S&#39;, denoting the number of vertices, the number of edges in the undirected graph and starting vertex, respectively.\n\nThe next \u2018E\u2019 lines each contain three single space-separated integers \u2018u\u2019, \u2018v\u2019, and \u2018distance\u2019, denoting a node \u2018u\u2019, a node \u2018v\u2019, and the distance between nodes (u, v), respectively.\n</code></pre>\n\n<h4 id=\"output-format\">Output format:</h4>\n\n<pre><code>The only line contains the list of integers denoting the shortest distance between each node and source vertex &#39;S&#39;.\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1</h4>\n\n<pre><code>5 7 0\n0 1 7\n0 2 1\n0 3 2\n1 2 3\n1 3 5 \n1 4 1\n3 4 7\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1</h4>\n\n<pre><code>0 4 1 2 5\n</code></pre>\n\n<h4 id=\"explanation-of-sample-input-1\">Explanation of sample input 1</h4>\n\n<p><img src=\"https://files.codingninjas.in/untitled-diagram-15-6327.jpg\" alt=\"alt text\"></p>\n\n<pre><code>The source node is node 0.\n\nThe shortest distance from node 0 to node 0 is 0.\n\nThe shortest distance from node 0 to node 1 is 4. In the above figure, the green path represents this distance. The path goes from node 0-&gt;2-&gt;1, giving distance = 1+3 = 4.\n\nThe shortest distance from node 0 to node 2 is 1. In the above figure, the red path represents this distance. The path goes from node 0-&gt;2, giving distance = 1\n\nThe shortest distance from node 0 to node 3 is 2. In the above figure, the pink path represents this distance. The path goes from node 0-&gt;3, giving distance = 2.\n\nThe shortest distance from node 0 to node 4 is 5. In the above figure, the yellow path represents this distance. The path goes from node 0-&gt;2-&gt;1-&gt;4, giving distance = 1+3+1 = 5.\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2:</h4>\n\n<pre><code>3 3 2\n1 0 9\n2 1 8\n0 2 4\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2:</h4>\n\n<pre><code>4 8 0 \n</code></pre>\n\n<h4 id=\"constraints\">Constraints:</h4>\n\n<pre><code>1 &lt;= &#39;V&#39; &lt;= 10^5\n1 &lt;= &#39;E&#39; &lt;= 10^5\n1 &lt;= distance between vertices &lt;= 10^5\n\nTime limit: 1 second\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 40,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an undirected, connected graph with 'V' vertices (labeled 0 to V-1) and 'E' edges, where each edge connecting nodes 'u' and 'v' has a weight representing the distance between them. The task is to find the shortest path distance from a source node 'S' to all other vertices in the graph. Return a list of integers representing the shortest distance from each vertex to the source vertex 'S'.",
                "constraints": [
                    "1 <= 'V' <= 10^5",
                    "1 <= 'E' <= 10^5",
                    "1 <= distance between vertices <= 10^5",
                    "There are no self-loops in the graph.",
                    "There are no parallel edges in the graph."
                ],
                "testcases": [
                    {
                        "input": "5 7 0\n0 1 7\n0 2 1\n0 3 2\n1 2 3\n1 3 5 \n1 4 1\n3 4 7",
                        "output": "0 4 1 2 5",
                        "explanation": "The source node is 0. The shortest distances from node 0 to all other nodes are: node 0: 0, node 1: 4 (0->2->1, distance = 1+3 = 4), node 2: 1 (0->2, distance = 1), node 3: 2 (0->3, distance = 2), node 4: 5 (0->2->1->4, distance = 1+3+1 = 5)."
                    },
                    {
                        "input": "3 3 2\n1 0 9\n2 1 8\n0 2 4",
                        "output": "4 8 0",
                        "explanation": "The source node is 2. The shortest distances from node 2 to all other nodes are: node 0: 4 (2->0, distance = 4), node 1: 8 (2->1, distance = 8), node 2: 0."
                    },
                    {
                        "input": "4 5 0\n0 1 5\n0 2 8\n1 2 9\n1 3 2\n2 3 6",
                        "output": "0 5 8 7",
                        "explanation": "The source node is 0. The shortest distances from node 0 to all other nodes are: node 0: 0, node 1: 5 (0->1, distance = 5), node 2: 8 (0->2, distance = 8), node 3: 7 (0->1->3, distance = 5+2 = 7)."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Consider the minimum distance vertices and relax their adjacent vertices.</p>",
            "<p>Use min-heap to reduce time complexity.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}