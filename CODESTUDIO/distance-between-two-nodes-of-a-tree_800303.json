{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8072,
            "title": "Distance between two nodes of a Tree",
            "titleSlug": "distance-between-two-nodes-of-a-tree_800303",
            "content": "<h4 id=\"given-a-binary-tree-and-the-value-of-two-nodes-find-the-distance-between-the-given-two-nodes-of-the-binary-tree\">Given a binary tree and the value of two nodes, find the distance between the given two nodes of the Binary Tree.</h4>\n\n<h4 id=\"distance-between-two-nodes-is-defined-as-the-minimum-number-of-edges-in-the-path-from-one-node-to-another\">Distance between two nodes is defined as the minimum number of edges in the path from one node to another.</h4>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 representing the number of test cases. Then the test cases follow.\n\nThe first line of each test case contains elements in the level order form, and all the node values in the given tree are unique. The line consists of values of nodes separated by a single space. In case a node is null, we take -1 in its place.\n\nThe second line of each test case contains two single-spaced integers, Node 1 and Node 2, representing the values of the two nodes.\n\nFor example, the input for the tree depicted in the below image would be:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/binary-tree-2-5399.png\" alt=\"example\"></p>\n\n<pre><code>1\n2 3\n4 -1 5 6\n-1 7 -1 -1 -1 -1\n-1 -1\n7 5\n</code></pre>\n\n<h4 id=\"explanation\">Explanation:</h4>\n\n<pre><code>First 5 lines represent the tree, and the last line contains the value of the nodes between which we have to find the distance.\n\nLevel 1:\nThe root node of the tree is 1\n\nLevel 2:\nLeft child of 1 = 2\nRight child of 1 = 3\n\nLevel 3:\nLeft child of 2 = 4\nRight child of 2 = null (-1)\nLeft child of 3 = 5\nRight child of 3 = 6\n\nLevel 4:\nLeft child of 4 = null (-1)\nRight child of 4 = 7\nLeft child of 5 = null (-1)\nRight child of 5 = null (-1)\nLeft child of 6 = null (-1)\nRight child of 6 = null (-1)\n\nLevel 5:\nLeft child of 7 = null (-1)\nRight child of 7 = null (-1)\n\nThe first not-null node(of the previous level) is treated as the parent of the first two nodes of the current level. The second not-null node (of the previous level) is treated as the parent node for the next two nodes of the current level and so on.\nThe input ends when all nodes at the last level are null(-1). The last line contains the value of the two nodes (7 and 5) between which we have to find the distance.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>The above format was just to provide clarity on how the input is formed for a given tree.\nThe sequence will be put together in a single line separated by a single space. Hence, for the above-depicted tree, the input will be given as:\n\n1 2 3 4 -1 5 6 -1 7 -1 -1 -1 -1 -1 -1\n7 5\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, a single integer denoting the distance between the two nodes is printed. In case, if any of the nodes is not found in the tree, return -1.\n\nThe output for each test case is in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the give function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10 ^ 2\n1 &lt;= N &lt;= 3 * 10 ^ 3\n0 &lt;= DATA &lt;= 10 ^ 6 and DATA != -1\n\nWhere \u2018T\u2019 is the number of test cases, \u2018N\u2019 is the total number of nodes in the binary tree, and \u2018DATA\u2019 is the value of the binary tree node.\n\nTime Limit: 1 sec.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n5 6 2 4 3 -1 -1 9 7 -1 -1 -1 -1 -1 -1\n7 2\n1 3 -1 2 -1 -1 -1\n2 4\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>4\n-1\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1:</h5>\n\n<p><img src=\"https://files.codingninjas.in/binary-tree-3-5400.png\" alt=\"Sample Input 1\"></p>\n\n<pre><code>For the first test case, the distance between node 7 and node 2 will be 4 as there are 4 edges between these two given nodes, i.e. 7 -&gt; 4, 4 -&gt; 6, 6 -&gt; 5, and 5 -&gt; 2. \n\nFor the second test case, the answer will be -1 as node 4 is not present in the binary tree.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n1 2 3 4 5 6 7 8 9 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n7 1\n1 2 3 4 5 -1 -1 -1 -1 -1 -1\n3 5\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>2\n3\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 29,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a binary tree and the values of two nodes, determine the distance between those nodes. The distance is defined as the minimum number of edges in the path connecting them. If either node is not found in the tree, return -1.",
                "constraints": [
                    "1 <= T <= 100 (Number of test cases)",
                    "1 <= N <= 3000 (Number of nodes in the binary tree)",
                    "0 <= DATA <= 1000000 and DATA != -1 (Value of a binary tree node)"
                ],
                "testcases": [
                    {
                        "input": "5 6 2 4 3 -1 -1 9 7 -1 -1 -1 -1 -1 -1\n7 2",
                        "output": "4",
                        "explanation": "The distance between node 7 and node 2 is 4."
                    },
                    {
                        "input": "1 3 -1 2 -1 -1 -1\n2 4",
                        "output": "-1",
                        "explanation": "Node 4 is not present in the tree, so the output is -1."
                    },
                    {
                        "input": "1 2 3 4 5 6 7 8 9 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n7 1",
                        "output": "2",
                        "explanation": "The distance between node 7 and node 1 is 2."
                    },
                    {
                        "input": "1 2 3 4 5 -1 -1 -1 -1 -1 -1\n3 5",
                        "output": "3",
                        "explanation": "The distance between node 3 and node 5 is 3."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you think about using LCA(Lowest Common Ancestor)?</p>",
            "<p>Is it necessary to find the distance between the root and the LCA of the given nodes?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Binary Trees",
                "slug": "binary-trees"
            },
            {
                "name": "Trees",
                "slug": "trees"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}