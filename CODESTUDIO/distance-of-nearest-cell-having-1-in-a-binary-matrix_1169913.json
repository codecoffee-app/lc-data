{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10123,
            "title": "Distance of nearest cell having 1 in a binary matrix.",
            "titleSlug": "distance-of-nearest-cell-having-1-in-a-binary-matrix_1169913",
            "content": "<h4 id=\"you-have-been-given-a-binary-matrix-mat-containing-only-0-s-and-1-s-of-size-n-x-m-you-need-to-find-the-distance-of-the-nearest-cell-having-1-in-the-matrix-for-each-cell\">You have been given a binary matrix &#39;MAT&#39; containing only 0\u2019s and 1\u2019s of size N x M. You need to find the distance of the nearest cell having 1 in the matrix for each cell.</h4>\n\n<pre><code>The distance is calculated as |i1 \u2013 i2| + |j1 \u2013 j2|, where i1, j1 are the coordinates of the current cell and i2, j2 are the coordinates of the nearest cell having value 1.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You can only move in four directions which are : Up, Down, Left and Right.\n</code></pre>\n\n<h5 id=\"for-example\">For example :</h5>\n\n<pre><code>If N = 3, M = 4\n\nand mat[ ][ ] = { 0, 0, 0, 1,\n                  0, 0, 1, 1,\n                  0, 1, 1, 0 }\n\nthen the output matrix will be\n\n3  2  1  0\n2  1  0  0\n1  0  0  1\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains an integer &#39;T&#39; which denotes the number of test cases or queries to be run. Then the test cases are as follows.\n\nThe first line of each test case contains two space-separated integers \u2018N\u2019 and \u2018M\u2019 which denotes the size of the matrix.\n\nThe \u2018N\u2019 lines of each test case contain \u2018M\u2019 space-separated elements of the matrix.  \n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print a matrix of the same size containing the distance of the nearest cell having \u20181\u2019 for each cell.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= N &lt;= 2*10^2\n1 &lt;= M &lt;= 2*10^2\n\nWhere \u2018T\u2019 is the number of test cases, \u2018N\u2019 is the number of rows in the matrix and \u2018M\u2019 is the number of columns in the matrix.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1\n3 4\n0 0 0 1\n0 0 1 1\n0 1 1 0\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>3 2 1 0\n2 1 0 0\n1 0 0 1\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\n3 3\n1 0 0 \n0 0 1 \n0 1 1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>0 1 1 \n1 1 0 \n1 0 0\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 23,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a binary matrix 'MAT' of size N x M containing only 0s and 1s, find the Manhattan distance of the nearest cell containing a 1 for each cell in the matrix. The Manhattan distance between two cells (i1, j1) and (i2, j2) is defined as |i1 - i2| + |j1 - j2|.  You can only move in four directions: Up, Down, Left, and Right.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= N <= 2 * 10^2",
                    "1 <= M <= 2 * 10^2"
                ],
                "testcases": [
                    {
                        "input": "n = 3, m = 4, mat = [[0, 0, 0, 1], [0, 0, 1, 1], [0, 1, 1, 0]]",
                        "output": "[[3, 2, 1, 0], [2, 1, 0, 0], [1, 0, 0, 1]]",
                        "explanation": "The output matrix represents the Manhattan distance to the nearest '1' for each cell in the input matrix."
                    },
                    {
                        "input": "n = 3, m = 3, mat = [[1, 0, 0], [0, 0, 1], [0, 1, 1]]",
                        "output": "[[0, 1, 1], [1, 1, 0], [1, 0, 0]]",
                        "explanation": "The output matrix shows the calculated distances to the nearest '1' for each cell. For example, mat[0][1] has nearest one at mat[0][0] with distance 1."
                    },
                    {
                        "input": "n = 2, m = 2, mat = [[0, 0], [0, 0]]",
                        "output": "[[inf, inf], [inf, inf]]",
                        "explanation": "There's no cell containing '1' here. So output will contain infinity but since question asks about integer matrix, it should compute the max distances."
                    },
                    {
                        "input": "n = 1, m = 5, mat = [[0, 0, 0, 0, 1]]",
                        "output": "[[4, 3, 2, 1, 0]]",
                        "explanation": "All cells distances computed relative to 1"
                    },
                    {
                        "input": "n = 4, m = 1, mat = [[1], [0], [0], [0]]",
                        "output": "[[0], [1], [2], [3]]",
                        "explanation": "All cells distances computed relative to 1"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you think of traversing each cell and finding the nearest cell having 1?</p>",
            "<p>Make use of BFS(breadth-first search) technique.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Breadth-first Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Matrices (2D Arrays)",
                "slug": "matrices-(2d-arrays)"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}