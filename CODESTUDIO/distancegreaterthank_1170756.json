{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10168,
            "title": "DistanceGreaterthanK",
            "titleSlug": "distancegreaterthank_1170756",
            "content": "<h4 id=\"you-are-given-an-undirected-graph-a-source-vertex-and-an-integer-k-check-if-there-is-any-simple-path-without-any-cycle-from-source-to-any-vertex-such-that-its-distance-is-greater-than-k\">You are given an undirected graph, a source vertex, and an integer k. Check if there is any simple path(without any cycle) from source to any vertex such that its distance is greater than &#39;k&#39;.</h4>\n\n<h4 id=\"path-in-a-graph-is-a-finite-or-infinite-sequence-of-edges-that-joins-a-sequence-of-vertices-that-are-all-distinct\">Path in a graph is a finite or infinite sequence of edges that joins a sequence of vertices that are all distinct.</h4>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains four integers &#39;n&#39;, &#39;m&#39;, &#39;s&#39;, and &#39;k&#39; where &#39;n&#39; is the number of vertices, &#39;m&#39; is the no of edges, and &#39;s&#39; is the source vertex.\n\nThe next &#39;m&#39; lines describe the edge. Each edge is characterized by three integers a, b, and c where a and b denote the endpoints of the edge and c the length of the edge.\n\n The edges[i][0] ,edges[i][1] contains the vertex that is connected to the edge. The edges[i][2] contains the length of edge for all 0&lt;i&lt;m.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>Return true if there is any such path otherwise false.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>Graph does not contain self-loops.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= &#39;n&#39; &lt;= 10\n1 &lt;= &#39;m&#39; &lt;= min(n*(n-1))/2,100)\n0 &lt;= &#39;a&#39;, &#39;b&#39;, &#39;s&#39; &lt;= n-1\n1 &lt;= ci, k &lt;= 1000000\nFor all 1 &lt;= i &lt;= m\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>6 6 0 23\n0 1 5\n1 2 4\n2 3 5\n3 4 5\n4 5 5\n0 5 1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>true\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1 :</h5>\n\n<pre><code>The graph will be :\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/image1-7988.png\" alt=\"\"></p>\n\n<pre><code>One of the longer paths from 0 to 5 will be from the vertex 0-&gt;1-&gt;2-&gt;3-&gt;4-&gt;5.\n\nAdding the edge weights, we get 5+4+5+5+5=24 which is greater than 23. Hence we return true.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>4 3 1 25\n0 1 1\n0 2 2\n2 3 3\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>false\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -9,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an undirected graph with 'n' vertices and 'm' edges, a source vertex 's', and an integer 'k', determine if there exists a simple path (without cycles) from the source vertex 's' to any other vertex in the graph such that the total weight of the path's edges is strictly greater than 'k'.",
                "constraints": [
                    "1 <= 'n' <= 10",
                    "1 <= 'm' <= min(n*(n-1))/2, 100)",
                    "0 <= 'a', 'b', 's' <= n-1",
                    "1 <= ci, k <= 1000000",
                    "Graph does not contain self-loops.",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "6 6 0 23\n0 1 5\n1 2 4\n2 3 5\n3 4 5\n4 5 5\n0 5 1",
                        "output": "true",
                        "explanation": "There is a path from vertex 0 to vertex 5 with a total weight greater than 23. For example, the path 0 -> 1 -> 2 -> 3 -> 4 -> 5 has a total weight of 5 + 4 + 5 + 5 + 5 = 24, which exceeds 23."
                    },
                    {
                        "input": "4 3 1 25\n0 1 1\n0 2 2\n2 3 3",
                        "output": "false",
                        "explanation": "There is no path starting from vertex 1 that has a total weight exceeding 25. The possible paths and their weights are limited due to the structure of the graph."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Use backtracking from the source vertex to find all the paths.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}