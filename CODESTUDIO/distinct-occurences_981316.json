{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9282,
            "title": "Distinct Occurences",
            "titleSlug": "distinct-occurences_981316",
            "content": "<h4 id=\"you-are-given-two-strings-a-and-b-of-length-n-and-m-respectively-your-task-is-to-find-the-number-of-distinct-occurrences-of-string-b-in-the-string-a-as-a-subsequence\">You are given two strings &#39;A&#39; and &#39;B&#39; of length &#39;N&#39; and &#39;M&#39; respectively, your task is to find the number of distinct occurrences of string &#39;B&#39; in the string A as a subsequence.</h4>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>1. A subsequence is a sequence generated from a string after deleting some characters of string without changing the order of remaining string characters.\n\n2. &#39;A&#39; and &#39;B&#39; will be non-empty strings.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of the input contains an integer &#39;T&#39; denoting the number of test cases.\n\nThe first line of each test case contains two space-separated integers &#39;N&#39; and &#39;M&#39;, the length of string &#39;A&#39; and &#39;B&#39; respectively.\n\nThe second line of each test case contains a string &#39;A&#39;. \n\nThe third line of each test case contains a string &#39;B&#39;. \n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, return an integer denoting the number of distinct occurrences of &#39;B&#39; in &#39;A&#39; as a subsequence.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don&#39;t need to print anything, it has already been taken care of. Just implement the given function. \n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= M, N &lt;= 100\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n12 3\ncodingninjas\ncij\n2 1\naa\nb\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>2\n0\n</code></pre>\n\n<h5 id=\"explanation-of-sample-output-1\">Explanation of Sample Output 1:</h5>\n\n<pre><code>In test case 1, Possible subsequences are: [c  i     j  ], [c      i j  ].\n\nIn test case 2, There is no possible subsequence.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n4 2\nabcd\nac\n6 3\nbanana\nban\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>1\n3\n</code></pre>\n\n<h5 id=\"explanation-of-sample-output-2\">Explanation of Sample Output 2:</h5>\n\n<pre><code>In test case 1, Possible subsequence is: [a c ].\n\nIn test case 2, Possible subsequences are: [ban], [ba  n ],[b   an ].\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -6,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two strings 'A' of length 'N' and 'B' of length 'M', determine the number of distinct times 'B' appears as a subsequence within 'A'. A subsequence is derived from a string by deleting zero or more characters without altering the order of the remaining characters. Both strings 'A' and 'B' are guaranteed to be non-empty.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= M, N <= 100",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "12 3\ncodingninjas\ncij",
                        "output": "2",
                        "explanation": "The string 'cij' appears twice as a subsequence in 'codingninjas'. The subsequences are [c  i     j  ] and [c      i j  ]."
                    },
                    {
                        "input": "2 1\naa\nb",
                        "output": "0",
                        "explanation": "The string 'b' does not appear as a subsequence in 'aa'."
                    },
                    {
                        "input": "4 2\nabcd\nac",
                        "output": "1",
                        "explanation": "The string 'ac' appears once as a subsequence in 'abcd'. The subsequence is [a c ]."
                    },
                    {
                        "input": "6 3\nbanana\nban",
                        "output": "3",
                        "explanation": "The string 'ban' appears three times as a subsequence in 'banana'. The subsequences are [ban], [ba  n ], and [b   an ]."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to generate all subsequences of string \u2018A\u2019.</p>",
            "<p>Start from the end and check if the last characters of both the strings match or not and make cases accordingly.&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}