{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10000,
            "title": "Distinct Strings With Odd and Even Swapping Allowed",
            "titleSlug": "distinct-strings-with-odd-and-even-swapping-allowed_1115650",
            "content": "<h4 id=\"you-are-given-an-array-of-strings-your-task-is-to-find-the-number-of-unique-strings\">You are given an array of strings. Your task is to find the number of unique strings.</h4>\n\n<h4 id=\"a-string-is-considered-unique-if-it-cannot-be-formed-from-any-other-string-present-in-the-array-even-after-applying-the-following-operations-any-number-of-times-and-in-any-order\">A string is considered unique if it cannot be formed from any other string, present in the array, even after applying the following operations any number of times and in any order:</h4>\n\n<h4 id=\"1-swapping-two-characters-present-at-odd-indices\">1. Swapping two characters present at odd indices.</h4>\n\n<h4 id=\"2-swapping-two-characters-present-at-even-indices\">2. Swapping two characters present at even indices.</h4>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>Strings contain only lowercase English alphabets.\n</code></pre>\n\n<h5 id=\"example\">Example:</h5>\n\n<pre><code>Let the array of strings be [\u201cabcd\u201d, \u201ccbad\u201d, \u201cbdac\u201d, \u201cadcb\u201d]. From the given array, strings \u201cabcd\u201d, \u201ccbad\u201d, and \u201cadcb\u201d can be transformed into one another by applying the given operations. But \u201cbdac\u201d cannot be transformed into any other string. Hence, there are only 2 unique strings in the array.\n</code></pre>\n\n<h5 id=\"input-format\">Input format:</h5>\n\n<pre><code>The very first line of input contains an integer \u2018T\u2019 denoting the number of test cases. \n\nThe first line of every test case contains an integer \u2018N\u2019 denoting the number of strings present in the array.\n\nThe second line of every test case contains \u2018N\u2019 space-separated strings, which are present in the array.\n</code></pre>\n\n<h5 id=\"output-format\">Output format:</h5>\n\n<pre><code>For each test case, the number of unique strings present in the array is printed.\n\nOutput for each test case is printed on a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just return the number of unique strings. \n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10 \n1 &lt;= N &lt;= 2000\n1 &lt;= Length of String &lt;= 1000\n\nTime Limit: 1 sec\n\nWhere  \u2018T\u2019 represents the number of test cases and \u2018N\u2019 represents the number of strings present in the array.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n4\nabcd cbad bdac adcb\n2\nabc cba\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>2\n1\n</code></pre>\n\n<h5 id=\"explanation-1\">Explanation 1:</h5>\n\n<pre><code>For the first test case refer to the example explained above.\n\nFor the second test case we have, array: [\u201cabc\u201d, \u201ccba\u201d] and N = 2. From the given array, strings \u201cabc\u201d and \u201ccba\u201d can be transformed into one another by applying the given operations. Hence, there is only 1 unique string in the array.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n4\ncoding ninja docgni ainjn\n3\ncode good code\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>2\n2\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 6,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of strings, determine the number of unique strings. A string is considered unique if it cannot be transformed into any other string in the array by repeatedly applying the following operations:\n\n1.  Swapping any two characters at odd indices.\n2.  Swapping any two characters at even indices.",
                "constraints": [
                    "1 <= T <= 10 (Number of test cases)",
                    "1 <= N <= 2000 (Number of strings in the array)",
                    "1 <= Length of String <= 1000"
                ],
                "testcases": [
                    {
                        "input": "N = 4, arr = [\"abcd\", \"cbad\", \"bdac\", \"adcb\"]",
                        "output": "2",
                        "explanation": "Strings \"abcd\", \"cbad\", and \"adcb\" can be transformed into each other. \"bdac\" cannot be transformed into any of the other strings."
                    },
                    {
                        "input": "N = 2, arr = [\"abc\", \"cba\"]",
                        "output": "1",
                        "explanation": "\"abc\" and \"cba\" can be transformed into each other via swapping characters at even and odd indices."
                    },
                    {
                        "input": "N = 4, arr = [\"coding\", \"ninja\", \"docgni\", \"ainjn\"]",
                        "output": "2",
                        "explanation": "\"coding\" and \"docgni\" can be transformed to each other and \"ninja\" and \"ainjn\" can be transformed to each other. But \"coding\" cannot be transformed to \"ninja\" and vice-versa. So 2 unique strings exist."
                    },
                    {
                        "input": "N = 3, arr = [\"code\", \"good\", \"code\"]",
                        "output": "2",
                        "explanation": "\"code\" and \"code\" are the same so they can be considered one and \"good\" can't be transformed to \"code\" so its unique. Number of unique strings = 2"
                    },
                    {
                        "input": "N = 5, arr = [\"aaaa\", \"bbbb\", \"abab\", \"baba\", \"aaaa\"]",
                        "output": "3",
                        "explanation": "\"aaaa\" and \"aaaa\" can be grouped together. \"bbbb\" is distinct. \"abab\" and \"baba\" can be interconverted. Total unique strings: 3"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to avoid sorting and find a better way to encode the strings.</p>",
            "<p>Try encoding the string using its even and odd index characters and use a hash table to check for uniqueness.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}