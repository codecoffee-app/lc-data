{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8018,
            "title": "Distinct Subsequences",
            "titleSlug": "distinct-subsequences_799558",
            "content": "<h4 id=\"you-have-been-given-string-s-of-length-n-that-may-contain-duplicate-alphabets-your-task-is-to-return-the-count-of-distinct-subsequences-of-it\">You have been given string &#39;S&#39; of length &#39;N&#39; that may contain duplicate alphabets. Your task is to return the count of distinct subsequences of it.</h4>\n\n<h4 id=\"for-example\">For example:</h4>\n\n<pre><code>For the given string \u201cdeed\u201d :\nThe possible subsequences are {\u201c\u201d}, {\u201cd\u201d}, {\u201ce\u201d}, {\u201cde\u201d}, {\u201ce\u201d}, {\u201cde\u201d}, {\u201cee\u201d}, {\u201cdee\u201d}, {\u201cd\u201d}, {\u201cdd\u201d}, {\u201ced\u201d}, {\u201cded\u201d}, {\u201ced\u201d}, {\u201cded\u201d}, {\u201ceed\u201d} and {\u201cdeed\u201d}.\n\nAs, {\u201cd\u201d}, {\u201ce\u201d}, {\u201cde\u201d}, {\u201ced\u201d} and {\u201cded\u201d} are repeated. \n\nThe distinct subsequences are {\u201c\u201d}, {\u201cd\u201d}, {\u201ce\u201d}, {\u201cde\u201d}, {\u201cee\u201d}, {\u201cdee\u201d}, {\u201cdd\u201d}, {\u201ced\u201d}, {\u201cded\u201d}, {\u201ceed\u201d} and {\u201cdeed\u201d}\n\nThus, the output will be 11. \n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>As the answer can be large, return your answer modulo 10^9  + 7.  \n</code></pre>\n\n<h5 id=\"input-format\">Input format:</h5>\n\n<pre><code>The first line contains an integer &#39;T&#39; which denotes the number of test cases or queries to be run. Then, the T test cases follow.\n\nThe first and only line of each test case or query contains the string &#39;S&#39;. \n</code></pre>\n\n<h5 id=\"output-format\">Output format:</h5>\n\n<pre><code>For each test case, print a single line containing the count of distinct subsequences modulo 10^9+7.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10 \n1 &lt;= N &lt;= 10 ^ 4 \n\nwhere &#39;T&#39; is the number of test cases and &#39;N&#39; is the length of the given string &#39;S&#39;.\n\nTime limit: 1 sec.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample input 1:</h5>\n\n<pre><code>2\nabcd\ndad \n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample output 1:</h5>\n\n<pre><code>16\n7\n</code></pre>\n\n<h5 id=\"explanation\">Explanation</h5>\n\n<pre><code>For test case 1: \n\n\nDistinct subsequence are: {\u201c\u201d}, {a}, {b}, {ab}, {c}, {ac}, {bc}, {abc}, {d}, {ad}, {bd}, {abd}, {cd}, {acd}, {bcd} and {abcd}. Thus, the answer will be 16. \n\nFor test case 2:\n\nDistinct subsequences are: {\u201c\u201d}, {d}, {a}, {da}, {dd}, {ad} and {dad}. Thus, the answer is 7.    \n\nFor better understanding, let us take all the subsequences of string dad. They will be: \n\n{\u201c \u201d}, {d}, {a}, {da}, {d}, {dd}, {ad} and {dad}\nNow, {d} occurs twice and thus we will count it only once. \n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample input 2:</h5>\n\n<pre><code>2\nxyzpqrs\nabba\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample output 2:</h5>\n\n<pre><code>128\n11\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 48,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string 'S' of length 'N' that may contain duplicate characters, determine the number of distinct subsequences of 'S'. Since the answer can be very large, return the result modulo 10^9 + 7.",
                "constraints": [
                    "1 <= T <= 10, where 'T' is the number of test cases.",
                    "1 <= N <= 10^4, where 'N' is the length of the string 'S'."
                ],
                "testcases": [
                    {
                        "input": "abcd",
                        "output": "16",
                        "explanation": "The distinct subsequences are: {\"\"}, {a}, {b}, {ab}, {c}, {ac}, {bc}, {abc}, {d}, {ad}, {bd}, {abd}, {cd}, {acd}, {bcd} and {abcd}. Thus, the answer will be 16."
                    },
                    {
                        "input": "dad",
                        "output": "7",
                        "explanation": "The distinct subsequences are: {\"\"}, {d}, {a}, {da}, {dd}, {ad} and {dad}. Thus, the answer is 7."
                    },
                    {
                        "input": "xyzpqrs",
                        "output": "128",
                        "explanation": null
                    },
                    {
                        "input": "abba",
                        "output": "11",
                        "explanation": null
                    },
                    {
                        "input": "deed",
                        "output": "11",
                        "explanation": "The possible subsequences are {\"\"}, {\"d\"}, {\"e\"}, {\"de\"}, {\"e\"}, {\"de\"}, {\"ee\"}, {\"dee\"}, {\"d\"}, {\"dd\"}, {\"ed\"}, {\"ded\"}, {\"ed\"}, {\"ded\"}, {\"eed\"} and {\"deed\"}.\n\nAs, {\"d\"}, {\"e\"}, {\"de\"}, {\"ed\"} and {\"ded\"} are repeated. \n\nThe distinct subsequences are {\"\"}, {\"d\"}, {\"e\"}, {\"de\"}, {\"ee\"}, {\"dee\"}, {\"dd\"}, {\"ed\"}, {\"ded\"}, {\"eed\"} and {\"deed\"}\n\nThus, the output will be 11."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try creating all the possible subsequences. Along with creating all the subsequences and maintain the count of all the distinct subsequences.&nbsp;</p>",
            "<p>Think of eliminating the need for creating all the subsequences and rather maintaining a count of them.&nbsp;&nbsp;</p>",
            "<p>Try to think of storing the count of elements in a separate data structure.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}