{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9246,
            "title": "Distinct Subsequences",
            "titleSlug": "distinct-subsequences_981277",
            "content": "<h4 id=\"given-two-strings-s-and-t-consisting-of-lower-case-english-letters-the-task-is-to-count-the-distinct-occurrences-of-t-in-s-as-a-subsequence\">Given two strings S and T consisting of lower case English letters. The task is to count the distinct occurrences of T in S as a subsequence.</h4>\n\n<h4 id=\"a-subsequence-is-a-sequence-generated-from-a-string-after-deleting-some-or-no-characters-of-the-string-without-changing-the-order-of-the-remaining-string-characters-i-e-ace-is-a-subsequence-of-abcde-while-aec-is-not\">A subsequence is a sequence generated from a string after deleting some or no characters of the string without changing the order of the remaining string characters. (i.e. \u201cace\u201d is a subsequence of \u201cabcde\u201d while \u201caec\u201d is not).</h4>\n\n<h4 id=\"for-example-for-the-strings-s-banana-and-t-ban-output-is-3-as-t-appears-in-s-as-below-three-subsequences\">For example, for the strings S = \u201cbanana\u201d and T=\u201dban\u201d, output is 3 as T appears in S as below three subsequences.</h4>\n\n<h4 id=\"ban-ba-n-b-an\">[ban], [ba  n], [b  an ]</h4>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 representing the number of test cases. Then the test cases follow.\n\nThe first line of each test case contains string S consisting of lowercase English letters.\n\nThe second line of each test case contains string T consisting of lowercase English letters.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print a single integer denoting the count of distinct occurrences of T in S as a subsequence.\n\nThe output for each test case is in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything; it has already been taken care of.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 100\n\nWhere \u2018T\u2019 is the number of test cases, and \u2018N\u2019 is the length of the strings.\n\nTime Limit: 1sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\nbanana\nban\nbabgbag\nbag\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>3\n5\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1:</h5>\n\n<pre><code>For the first test case, there are 3 ways we can generate \u201cban\u201d from S, i.e. [ban], [ba  n], [b  an ].\n\nFor the second test case, there are 5 ways we can generate \u201cbag\u201d from S, i.e. [ba g   ], [ba    g], [b    ag], [  b  ag] and [    bag].\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\nrabbbit\nrabbit\nabcd\nabe\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>3\n0\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 7,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two strings S and T consisting of lowercase English letters, the task is to count the number of distinct occurrences of T in S as a subsequence. A subsequence is formed by deleting zero or more characters from S without altering the order of the remaining characters.  For example, 'ace' is a subsequence of 'abcde', but 'aec' is not.",
                "constraints": [
                    "1 <= T <= 10 (Number of test cases)",
                    "1 <= N <= 100 (Length of the strings)"
                ],
                "testcases": [
                    {
                        "input": "banana\nban",
                        "output": "3",
                        "explanation": "The string 'ban' appears in 'banana' as a subsequence 3 times: [ban], [ba  n], [b  an]."
                    },
                    {
                        "input": "babgbag\nbag",
                        "output": "5",
                        "explanation": "The string 'bag' appears in 'babgbag' as a subsequence 5 times: [ba g   ], [ba    g], [b    ag], [  b  ag] and [    bag]."
                    },
                    {
                        "input": "rabbbit\nrabbit",
                        "output": "3",
                        "explanation": null
                    },
                    {
                        "input": "abcd\nabe",
                        "output": "0",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Recursively process all characters of both the strings from one side.</p>",
            "<p>Can you think of storing the subproblem solutions rather than computing them again and again?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}