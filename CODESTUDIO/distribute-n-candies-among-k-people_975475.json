{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9122,
            "title": "Distribute N candies among K people",
            "titleSlug": "distribute-n-candies-among-k-people_975475",
            "content": "<h4 id=\"sanyam-has-n-candies-he-wants-to-distribute-that-into-k-of-his-friends-he-made-his-k-friends-stand-in-line-in-increasing-order-of-his-likeness-not-being-so-smart-he-gives-1-candy-to-the-first-friend-2-to-the-second-person-and-so-on-till-the-kth-person-in-the-next-turn-the-first-person-gets-k-1-candies-the-second-person-gets-k-2-candies-and-so-on\">Sanyam has \u2018N\u2019 candies, he wants to distribute that into \u2018K\u2019 of his friends. He made his \u2018K\u2019 friends stand in line, in increasing order of his likeness. Not being so smart he gives 1 candy to the first friend, 2 to the second person, and so on till the kth person. In the next turn, the first person gets \u2018K + 1\u2019 candies, the second person gets \u2018K + 2\u2019 candies, and so on.</h4>\n\n<h4 id=\"while-distributing-the-candies-if-at-a-turn-the-number-of-candies-to-be-given-to-a-friend-is-less-than-the-required-candies-then-that-friend-gets-all-the-remaining-candies-and-sanyam-stops-the-distribution\">While distributing the candies, if at a turn, the number of candies to be given to a friend is less than the required candies, then that friend gets all the remaining candies and Sanyam stops the distribution.</h4>\n\n<h4 id=\"your-task-is-to-find-the-total-number-of-candies-every-person-has-at-the-end\">Your task is to find the total number of candies every person has at the end.</h4>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases.\n\nThe next \u2018T\u2019 lines represent the \u2018T\u2019 test cases.\n\nThe first and only line of each test case contains two space-separated integers \u2018N\u2019 and \u2018K\u2019 denoting the number of candies and number of friends respectively.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, return the total number of candies every person has at the end.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the given functions.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 50\n1 &lt;= N &lt;= 10^9\n1 &lt;= K &lt;= 10^5\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n7 4\n4 1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>1 2 3 1\n4\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input1\">Explanation For Sample Input1:</h5>\n\n<pre><code>Test case 1:\nSanyam has 7 candies and 4 friends.\nIn the first turn, the first friend gets 1 candy, the second friend gets 2 candies and the third friend gets 3 candies. Now he has used up 6 candies and 1 candy is left. As per the condition, the fourth friend has to be given 4 candies, but there is only 1 left, hence he takes one only. \n\nTest case 2:\nAs there is only one friend he will get the first candy, then the next two, and then the last one making the count 4.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n10 3\n3 2\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>5 2 3 \n1 2\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 4,
            "dislikes": "NA",
            "rephrased": {
                "body": "Sanyam has N candies and wants to distribute them among K friends standing in a line, ordered by preference. He initially gives 1 candy to the first friend, 2 to the second, and so on, up to K candies to the Kth friend. In the subsequent turn, he gives K+1 candies to the first friend, K+2 to the second, and so on.  If, at any point, Sanyam doesn't have enough candies to give the required amount to a friend, that friend receives all the remaining candies, and the distribution stops. Your task is to determine the final number of candies each friend has.",
                "constraints": [
                    "1 <= T <= 50",
                    "1 <= N <= 10^9",
                    "1 <= K <= 10^5",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "7 4",
                        "output": "1 2 3 1",
                        "explanation": "Sanyam starts with 7 candies and 4 friends. In the first round, the friends receive 1, 2, and 3 candies respectively, using 6 candies in total.  Sanyam is left with 1 candy. He needs to give the fourth friend 4 candies, but only has 1. Therefore, the fourth friend gets the remaining 1 candy, and the process stops.  The final distribution is 1, 2, 3, 1."
                    },
                    {
                        "input": "4 1",
                        "output": "4",
                        "explanation": "Sanyam starts with 4 candies and 1 friend. The friend receives 1 candy in the first round. Sanyam has 3 candies left. The friend receives 2 candy in the second round. Sanyam has 1 candies left. The friend receives 1 candy in the third round.Sanyam has 0 candies left. So the friend has total 1+2+1=4 candies."
                    },
                    {
                        "input": "10 3",
                        "output": "5 2 3",
                        "explanation": null
                    },
                    {
                        "input": "3 2",
                        "output": "1 2",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to do as asked in the problem and simply give candy to every friend one by one.</p>",
            "<p>Here we will try to find the number of times he will visit all of his friends and work our solution around that.</p>",
            "<p>Try to do as asked in the problem and simply use binary search to find the number of operations.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}