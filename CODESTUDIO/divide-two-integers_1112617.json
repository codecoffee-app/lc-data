{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9956,
            "title": " Divide Two Integers",
            "titleSlug": "divide-two-integers_1112617",
            "content": "<h4 id=\"you-are-given-two-integers-dividend-and-divisor\">You are given two integers, <em><strong>\u2018dividend\u2019</strong></em> and <em><strong>\u2018divisor\u2019</strong></em>.</h4>\n\n<p><br></p>\n\n<h4 id=\"you-are-required-to-divide-the-integers-without-using-multiplication-division-and-modular-operators\">You are required to divide the integers without using multiplication, division, and modular operators.</h4>\n\n<p><br></p>\n\n<h4 id=\"your-task-is-to-return-the-quotient-after-dividing-dividend-by-divisor\">Your task is to return the quotient after dividing \u2018dividend\u2019 by \u2018divisor\u2019.</h4>\n\n<p><br></p>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>In cases where the dividend is not perfectly divisible by the divisor, you are required to return the integer value of the quotient which is closer to zero.\n\nFor example - If the answer is &#39;8.34&#39;, we return the integer part, i.e., &#39;8&#39;. Also, If the answer is &#39;-2.67&#39;, we return the integer part, i.e., &#39;-2&#39;.\n\nAssume we&#39;re dealing with a system that can only store integers in the 32-bit signed integer range: [2^31, 2^31-1]. If the quotient is higher than 2^31 - 1, return 2^31 - 1; if it is less than -2^31, return -2^31. \n</code></pre>\n\n<h4 id=\"for-example\">For example :</h4>\n\n<pre><code>If the answer is \u20189.333\u2019, then return \u20189\u2019, or if the answer is \u2018-8.123\u2019, then return \u2018-8\u2019.\n</code></pre>\n\n<h5 id=\"input-format\">Input format:</h5>\n\n<pre><code>The first input line contains two space-separated integers, \u2018dividend\u2019 and \u2018divisor\u2019. \n</code></pre>\n\n<h5 id=\"output-format\">Output Format</h5>\n\n<pre><code>The only line contains the result after division, following the above rules.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>10 3\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>3\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of sample input 1:</h5>\n\n<pre><code>Given \u2018dividend = 10\u2019 and \u2018divisor = 3\u2019\n\nSo the division is \u201810/3 = 3.3333\u2026\u2026\u2019.\n\nReturn only integer part \u20183\u2019\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>7 -3\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>-2\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>-10^9 &lt;= dividend, divisor &lt;= 10^9 \ndivisor != 0  \n\nTime limit: 1 second\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 36,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two integers, `dividend` and `divisor`, divide the `dividend` by the `divisor` without using multiplication, division, or the modulo operator. Return the integer part of the quotient, rounded towards zero.  Assume a 32-bit signed integer range: [-2^31, 2^31 - 1]. If the quotient exceeds this range, return 2^31 - 1 if positive, or -2^31 if negative.",
                "constraints": [
                    "-10^9 <= dividend, divisor <= 10^9",
                    "divisor != 0"
                ],
                "testcases": [
                    {
                        "input": "10 3",
                        "output": "3",
                        "explanation": "10 divided by 3 is 3.333.... The integer part, rounded towards zero, is 3."
                    },
                    {
                        "input": "7 -3",
                        "output": "-2",
                        "explanation": "7 divided by -3 is -2.333.... The integer part, rounded towards zero, is -2."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Change multiplicative property as a subtraction.</p>",
            "<p>Try to apply some bits properties.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}