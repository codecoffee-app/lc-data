{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 17115,
            "title": "Divisible Set",
            "titleSlug": "divisible-set_3754960",
            "content": "<h4 id=\"you-are-given-an-array-of-distinct-numbers-arr-of-size-n\">You are given an array of distinct numbers <em><strong>\u2018arr\u2019</strong></em> of size <em><strong>&#39;n&#39;</strong></em>.</h4>\n\n<p><br></p>\n\n<h4 id=\"your-task-is-to-return-the-largest-subset-of-numbers-from-arr-such-that-any-pair-of-numbers-a-and-b-from-the-subset-satisfies-the-following-a-b-0-or-b-a-0\">Your task is to return the largest subset of numbers from \u2018arr\u2019, such that any pair of numbers \u2018a\u2019 and \u2018b\u2019 from the subset satisfies the following: a % b == 0 or b % a == 0.</h4>\n\n<p><br></p>\n\n<h4 id=\"a-subset-is-nothing-but-any-possible-combination-of-the-original-array\">A subset is nothing but any possible combination of the original array</h4>\n\n<p><br></p>\n\n<h5 id=\"example\">Example:</h5>\n\n<pre><code>Input: \u2018arr\u2019 = [1, 16, 7, 8, 4]\n\nOutput: [1, 4, 8, 16].\n\nExplanation: In the set {1, 4, 8, 16}, you can take any pair from the set, and either one of the elements from the pair will divide the other.\n\nThere are other possible sets, but this is the largest one.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of each test case contains a single integer \u2018n\u2019 representing the number of elements in the array.\n\nThe second line of each test case contains \u2018n\u2019 space-separated integers representing the elements of the array.\n</code></pre>\n\n<h6 id=\"output-format\">Output Format:</h6>\n\n<pre><code>Since there can be multiple possible answers, the Output will be &quot;Correct&quot; or &quot;Incorrect&quot; based on the validity of your answer.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function. \n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>3\n1 2 5\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1   :</h5>\n\n<pre><code> Correct\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of sample input 1:</h5>\n\n<pre><code>The sets {1, 2} or {1, 5} are the two largest sets that satisfy the given condition.\n\nHence either of them could be the answer.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code> 3\n 3 3 3\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>Correct\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-2\">Explanation of sample input 2:</h5>\n\n<pre><code>The set {3, 3, 3} is the largest set that satisfies the given condition.\n</code></pre>\n\n<h5 id=\"expected-time-complexity\">Expected Time Complexity:</h5>\n\n<pre><code>The expected time complexity is O(n^2).\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= N &lt;= 5000\n0 &lt;= arr[i] &lt;= 10^8    \n\nTime Limit: 1 sec\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 47,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array 'arr' of 'n' distinct integers, find the largest subset such that for any two numbers 'a' and 'b' in the subset, either 'a' is divisible by 'b' (a % b == 0) or 'b' is divisible by 'a' (b % a == 0). Return the largest subset.",
                "constraints": [
                    "1 <= N <= 5000",
                    "0 <= arr[i] <= 10^8",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "n = 5, nums=[1, 16, 7, 8, 4]",
                        "output": "Correct",
                        "explanation": "One possible largest subset is {1, 4, 8, 16}. In this set, every pair satisfies the divisibility condition."
                    },
                    {
                        "input": "n = 3, nums=[1, 2, 5]",
                        "output": "Correct",
                        "explanation": "Possible largest subsets are {1, 2} or {1, 5}. Either of these satisfies the divisibility condition."
                    },
                    {
                        "input": "n = 3, nums=[3, 3, 3]",
                        "output": "Correct",
                        "explanation": "The largest subset is {3, 3, 3}. Every pair satisfies the divisibility condition (3 % 3 == 0)."
                    },
                    {
                        "input": "n = 4, nums=[10, 5, 3, 15]",
                        "output": "Correct",
                        "explanation": "One possible largest subset is {5, 10, 15}. Any pair chosen from the subset meets the required condition"
                    },
                    {
                        "input": "n=6, nums=[2,4,8,16,32,64]",
                        "output": "Correct",
                        "explanation": "The entire array forms a valid subset since each number is divisible by the numbers preceding it."
                    },
                    {
                        "input": "n=5, nums=[3,7,11,13,17]",
                        "output": "Correct",
                        "explanation": "The largest possible subsets will contain just one element since no number is divisible by another. Any single-element subset is valid."
                    },
                    {
                        "input": "n=4, nums=[1,2,4,6]",
                        "output": "Correct",
                        "explanation": "One possible largest subset is {1,2,4}."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>&nbsp;Try to solve this using a recursive approach</p>",
            "<p>Try to memoize the recursive approach</p>",
            "<p>&nbsp;Try to do further optimisation and build a bottom-up solution.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}