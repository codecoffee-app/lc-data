{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8925,
            "title": "Duplicate Subtrees",
            "titleSlug": "duplicate-subtrees_920530",
            "content": "<h4 id=\"you-have-been-given-a-binary-tree-you-are-supposed-to-return-the-root-values-of-all-the-duplicate-subtrees-for-each-duplicate-subtree-you-only-need-to-return-the-root-value-of-any-one-of-them\">You have been given a binary tree, you are supposed to return the root values of all the duplicate subtrees. For each duplicate subtree, you only need to return the root value of any one of them.</h4>\n\n<h4 id=\"two-subtrees-are-duplicate-if-and-only-if-they-have-the-same-structure-with-the-same-node-values\">Two subtrees are duplicate if and only if they have the same structure with the same node values.</h4>\n\n<h5 id=\"for-example\">For example:</h5>\n\n<pre><code>In the below binary tree :\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/duplicatesubtrees-6391.PNG\" alt=\"alt text\"></p>\n\n<pre><code>The duplicate subtrees are {{2, 3}, {3}} and we have to just return the root values of each duplicate subtree, so the output is {2, 3}.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains an integer &#39;T&#39; which denotes the number of test cases or queries to be run. Then the test cases are as follows.\n\nThe only line of each test case contains elements in the level order form. The line consists of values of nodes separated by a single space. In case a node is null, we take -1 in its place. So -1 would not be a part of the tree nodes.\n\nFor example, the input for the tree depicted in the below image will be:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/0000000000004189.png\" alt=\"alt text\"></p>\n\n<pre><code>For example taking a tree:\n\n1\n2 3\n4 -1 5 6\n-1 7 -1 -1 -1 -1\n-1 -1\n</code></pre>\n\n<h4 id=\"explanation\">Explanation :</h4>\n\n<pre><code>Level 1 :\nThe root node of the tree is 1\n\nLevel 2 :\nLeft child of 1 = 2\nRight child of 1 = 3\n\nLevel 3 :\nLeft child of 2 = 4\nRight child of 2 = null (-1)\nLeft child of 3 = 5\nRight child of 3 = 6\n\nLevel 4 :\nLeft child of 4 = null (-1)\nRight child of 4 = 7\nLeft child of 5 = null (-1)\nRight child of 5 = null (-1)\nLeft child of 6 = null (-1)\nRight child of 6 = null (-1)\n\nLevel 5 :\nLeft child of 7 = null (-1)\nRight child of 7 = null (-1)\n\nThe first not-null node(of the previous level) is treated as the parent of the first two nodes of the current level. The second not-null node (of the previous level) is treated as the parent node for the next two nodes of the current level and so on.\n\nThe input ends when all nodes at the last level are null(-1).\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>The above format was just to provide clarity on how the input is formed for a given tree.\nThe sequence will be put together in a single line separated by a single space. Hence, for the above-depicted tree, the input will be given as:\n\n1 2 3 4 -1 5 6 -1 7 -1 -1 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print space-separated root node value of all the duplicate subtrees. If no duplicate subtree is present in the binary tree print \u2018-1\u2019. The order of the list of node values does not matter.\n\nPrint the output for each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You don\u2019t need to print anything; it has already been taken care of.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= N &lt;= 100\n1 &lt;= val &lt;=10^5\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n2 1 2 2 1 -1 -1 -1 -1 -1 -1 \n1 2 3 4 -1 2 4 -1 -1 4 -1 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>2\n2 4\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1:</h5>\n\n<pre><code>For the first test case, the duplicate subtrees are {{2}}, and we have to just print the root values of each duplicate subtree, so the output is {2}.\n\nFor the second test case, the duplicate subtrees are {{2, 4}, {4}} and we have to just print the root values of each duplicate subtree, so the output is {2, 4}.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n1 -1 6 4 1 -1 -1 -1 3 -1 -1\n1 5 9 3 3 -1 -1 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>-1\n3\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 3,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given the root of a binary tree, identify and return the root values of all duplicate subtrees. A subtree is considered a duplicate if it has the same structure and node values as another subtree within the original tree. For each unique duplicate subtree, return only one of its root values. If no duplicate subtrees exist, return a list containing only -1.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= N <= 100 (where N is the number of nodes in the tree)",
                    "1 <= val <= 10^5 (where val is the value of a node)"
                ],
                "testcases": [
                    {
                        "input": "root=[2,1,2,2,1,-1,-1,-1,-1,-1,-1]",
                        "output": "2",
                        "explanation": "The binary tree represented by [2,1,2,2,1,-1,-1,-1,-1,-1,-1] has a duplicate subtree rooted at the node with value 2."
                    },
                    {
                        "input": "root=[1,2,3,4,-1,2,4,-1,-1,4,-1,-1,-1,-1,-1]",
                        "output": "2 4",
                        "explanation": "The binary tree represented by [1,2,3,4,-1,2,4,-1,-1,4,-1,-1,-1,-1,-1] has duplicate subtrees rooted at nodes with values 2 and 4."
                    },
                    {
                        "input": "root=[1,-1,6,4,1,-1,-1,-1,3,-1,-1]",
                        "output": "-1",
                        "explanation": "The binary tree represented by [1,-1,6,4,1,-1,-1,-1,3,-1,-1] does not contain any duplicate subtrees."
                    },
                    {
                        "input": "root=[1,5,9,3,3,-1,-1,-1,-1,-1,-1]",
                        "output": "3",
                        "explanation": "The binary tree represented by [1,5,9,3,3,-1,-1,-1,-1,-1,-1] has a duplicate subtree rooted at the node with value 3."
                    },
                    {
                        "input": "root=[1,2,3,-1,-1,4,5]",
                        "output": "-1",
                        "explanation": "The binary tree represented by [1,2,3,-1,-1,4,5] has no duplicate subtrees."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Keep track of the subtrees which you have already visited.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Trees",
                "slug": "trees"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}