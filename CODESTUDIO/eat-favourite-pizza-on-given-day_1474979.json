{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12759,
            "title": "Eat Favourite Pizza on given Day!",
            "titleSlug": "eat-favourite-pizza-on-given-day_1474979",
            "content": "<h4 id=\"ninja-is-a-pizza-lover-he-can-eat-as-much-pizza-as-he-wants-given-an-array-arr-containing-positive-integers-where-arr-i-denotes-the-number-of-pizzas-of-the-i-th-type-available-in-the-shop-his-friend-emma-gave-him-some-challenges-and-asked-if-it-is-possible-to-complete-the-challenges-or-not-by-following-the-given-rules\">Ninja is a Pizza lover. He can eat as much pizza as he wants. Given an array, \u2018arr\u2019 containing positive integers, where \u2018arr[i]\u2019 denotes the number of pizzas of the \u2018i\u2019th&#39; type available in the shop. His friend \u2018Emma\u2019 gave him some challenges and asked if it is possible to complete the challenges or not by following the given rules?</h4>\n\n<h5 id=\"the-rules-are\">The Rules are :</h5>\n\n<pre><code>1. Ninja starts eating Pizzas on day 0.\n\n2.Ninja must eat at least one Pizza per day as he loves Pizza until he has eaten all the Pizzas.\n\n3.If Ninja has eaten all the pizzas of &#39;i&#39; - 1 type, then only he can eat a pizza of the \u2018i\u2019 type.\n</code></pre>\n\n<h4 id=\"the-challenges-are-given-in-the-form-of-a-matrix-mat-in-which-the-number-of-rows-is-equal-to-the-number-of-challenges-emma-offers-and-the-number-of-columns-is-equal-to-3-for-any-challenge-i-the-three-integers-currenttype-currentday-maxconsumption-denotes-that-ninja-has-to-eat-the-pizza-of-type-currenttype-on-day-currentday-without-eating-more-than-maxconsumption-number-of-pizzas-on-any-day-respectively-note-that-all-the-challenges-are-independent\">The challenges are given in the form of a matrix \u2018mat\u2019 in which the number of rows is equal to the number of challenges Emma offers and the number of columns is equal to 3. For any challenge &#39;i&#39;, the three integers \u2018currentType\u2019, \u2018currentDay\u2019, \u2018maxConsumption\u2019, denotes that Ninja has to eat the pizza of type \u2018currentType\u2019 on day \u2018currentDay\u2019 without eating more than \u2018maxConsumption\u2019 number of pizzas on any day respectively. Note that all the challenges are independent.</h4>\n\n<h5 id=\"for-example\">For Example :</h5>\n\n<pre><code>If there are two challenges [0, 1, 1] and [3, 3, 2]. For challenge 1, Ninja has to eat at least one pizza of type 0 on day 1 while eating at most 1 pizza per day. Similarly, for challenge 2, Ninja has to eat at least one pizza of type 3 on day 3 while eating at most 2 pizzas per day. \n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019, denoting the number of test cases. The test cases follow.\n\nThe first line of each test case contains two space-separated integers \u2018N\u2019 and \u2018M\u2019, which denotes the number of elements in the array \u2018arr\u2019 and the number of challenges Emma gave to Ninja.\n\nThe second line of each test case contains &#39;N&#39; space-separated integers denoting the elements of the array \u2018arr\u2019.\n\nThe next \u2018M\u2019 lines contain 3 space-separated integers \u2018currentType\u2019, \u2018currentDay\u2019, \u2018maxConsumption\u2019 denoting that Ninja has to eat the pizza of type currentType on day currentDay without eating more than maxConsumption number of pizzas on any day respectively. \n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print the answer for each challenge separated by spaces(1 denoting Ninja can complete the challenge and 0 if he can not complete the challenge).\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You are not required to print the expected output, it has already been taken care of. Just implement the function and return the answer for each challenge in an array.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1&lt;= T &lt;= 100\n1 &lt;= N &lt;= 10^4\n1 &lt;= arr[i] &lt;= 10^5\n1 &lt;= mat.length = 10^4\nmat[i].length = 3\n0 &lt;= type &lt; arr.length\n0 &lt;= day &lt; 10^5\n1 &lt;= maxConsumption &lt; 10^5\n\nWhere &#39;arr[i]&#39; denotes the element at index \u2018i\u2019 of the array &#39;arr&#39;, type\u2019, \u2018day\u2019, \u2018maxConsumption\u2019 denotes that Ninja has to eat the pizza of type \u2018type\u2019 on day \u2018day\u2019 without eating more than \u2018maxConsumption\u2019 number of pizzas on any day respectively. \n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n6 3\n6 7 8 9 5 5\n0 2 5\n3 2 3\n3 13 50\n4 2\n1 2 3 4\n0 2 5\n3 2 10\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>1 0 1\n0 1\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1 :</h5>\n\n<pre><code>In the first test case, there are 6 different types of pizzas, and the given array is [6, 7, 8, 9, 5, 5]. There are 3 challenges:\nChallenge 1: Ninja has to eat pizza of 0th type on day 2. The ninja can eat a maximum of 5 pizzas per day.\nOne of the ways is if he eats 2 pizzas of type 0 on day 0, 2 pizzas of type 0 on day 1, 2 pizzas of type 0 on day 2, then he can complete challenge 1. \nThe other way is if he eats 3 pizzas of type 0 on day 0, 2 pizzas of type 0 on day 1, 1 pizza on day 2,  then also he can complete challenge 1. \nIn this way, he can complete challenge 1. So, the answer is 1.\nChallenge 2:\nNinja has to eat pizza of 3rd type on day 2. The ninja can eat a maximum of 3 pizzas per day. Before day 2, he has to eat all the pizzas of type 0 and 1, i.e., he has to eat 6 + 7 = 13 pizzas before day 2, and he can eat a maximum of 3 pizzas, and there are only 2 days. \nIn this way, he can\u2019t complete challenge 2. So, the answer is 0.\nChallenge 3: Ninja has to eat pizza of 3rd type on day 13. The ninja can eat a maximum of 50 pizzas per day.\nHe has to complete all the pizzas of type 0, 1, and 2 before day 13, i.e., eat 6 + 7 + 8 = 21 pizzas before day 13. \nOne of the ways is if he eats 2 pizzas per day from day 1 to day 9, and then eats 1 pizza per day from day 10 to day 12, then he can eat all 21 pizzas on day 12 and start eating pizza of type 3 on day 13. \nIn this way, he can complete challenge 3. So, the answer is 1.\n\nIn the second test case, there are 4 different types of pizzas, and the given array is [1, 2, 3, 4]. There are 2 challenges:\nChallenge 1: \nNinja has to eat pizza of the 0th type on day 2. The ninja can eat a maximum of 5 pizzas per day.\nThere is only 1 pizza of type 0, which he has to eat on day 1, and after that, there is no pizza of type 0 remaining. \nIn this way, he can\u2019t complete challenge 1. So, the answer is 0.\nChallenge 2:\nNinja has to eat pizza of 3rd type on day 2. The ninja can eat a maximum of 10 pizzas per day. \nOne of the ways is that he can eat 1 pizza of type 0 on day 0, eat 2 pizzas of type 1 on day 1 and then eat pizza of type 3 on day 2. In this way, he can complete challenge 2. So, the answer is 1.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n7 3\n4 5 7 6 8 2 4 \n5 5 9\n1 3 1 \n3 2 5 \n6 3\n12 14 16 18 20 22 \n1 2 10 \n2 3 4 \n4 5 20 \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>1 0 0\n1 0 1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 6,
            "dislikes": "NA",
            "rephrased": {
                "body": "A pizza shop has various types of pizzas, with 'arr[i]' representing the number of pizzas of the i-th type. Ninja wants to eat all the pizzas, but he must eat pizza types in order (i.e., he can only eat type 'i' pizzas after finishing all type 'i-1' pizzas). Emma provides challenges in a matrix 'mat'. Each row in 'mat' represents a challenge: 'currentType', 'currentDay', 'maxConsumption'. This means Ninja must eat at least one pizza of 'currentType' on 'currentDay' while limiting daily consumption to 'maxConsumption'. Determine if Ninja can complete each challenge independently.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= N <= 10^4",
                    "1 <= arr[i] <= 10^5",
                    "1 <= mat.length <= 10^4",
                    "mat[i].length = 3",
                    "0 <= type < arr.length",
                    "0 <= day < 10^5",
                    "1 <= maxConsumption <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "n = 6, arr = [6, 7, 8, 9, 5, 5], m = 3, mat = [[0, 2, 5], [3, 2, 3], [3, 13, 50]]",
                        "output": "[1, 0, 1]",
                        "explanation": "Challenge 1: Ninja has to eat pizza of 0th type on day 2 with max consumption 5. This is possible. Challenge 2: Ninja has to eat pizza of 3rd type on day 2 with max consumption 3. He needs to eat 6 + 7 = 13 pizzas before day 2, but can only eat a max of 3 pizzas per day. Impossible. Challenge 3: Ninja has to eat pizza of 3rd type on day 13 with max consumption 50. He needs to eat 6+7+8 = 21 pizzas before day 13, which is possible."
                    },
                    {
                        "input": "n = 4, arr = [1, 2, 3, 4], m = 2, mat = [[0, 2, 5], [3, 2, 10]]",
                        "output": "[0, 1]",
                        "explanation": "Challenge 1: Ninja has to eat pizza of type 0 on day 2, but there is only 1 pizza of type 0. So, impossible. Challenge 2: Ninja has to eat pizza of type 3 on day 2 with max consumption 10. Eat pizza 0 on day 0, pizza 1 on day 1 and eat pizza of type 3 on day 2. This is possible."
                    },
                    {
                        "input": "n = 7, arr = [4, 5, 7, 6, 8, 2, 4], m = 3, mat = [[5, 5, 9], [1, 3, 1], [3, 2, 5]]",
                        "output": "[1, 0, 0]",
                        "explanation": "Challenge 1: Pizza of type 5 on day 5 max consumption 9. He needs to consume 4+5+7+6+8 = 30 pizzas before day 5.  Can eat 9 pizzas per day so can consume max 45 pizzas before day 5. So possible. Challenge 2: Pizza of type 1 on day 3 max consumption 1. Before that, Ninja needs to consume 4 pizzas. Can eat max 1 pizza per day which will need 4 days which is not possible. Challenge 3: Pizza of type 3 on day 2 max consumption 5. Ninja needs to consume 4+5+7=16 pizzas before day 2. Max consumption 5, for 2 days = 10 pizzas so not possible."
                    },
                    {
                        "input": "n = 6, arr = [12, 14, 16, 18, 20, 22], m = 3, mat = [[1, 2, 10], [2, 3, 4], [4, 5, 20]]",
                        "output": "[1, 0, 1]",
                        "explanation": "Challenge 1: Ninja has to eat pizza of type 1 on day 2 with max consumption of 10. Requires consuming 12 pizzas before day 2. Possible to consume 12 pizzas in 2 days with max consumption 10. Challenge 2: Ninja has to eat pizza of type 2 on day 3 with max consumption of 4. Requires consuming 12+14 pizzas before day 3 which is 26 pizzas. Maximum consumed in 3 days is 3*4 = 12 pizzas so impossible. Challenge 3: Ninja has to eat pizza of type 4 on day 5 with max consumption of 20. Requires consuming 12+14+16+18= 60 pizzas before day 5. Can do this in 5 days as maximum pizza is 5*20 = 100."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you find out an expression for the minimum and the maximum number of days required to eat the pizza of the given type in the challenge?</p>",
            "<p>Will making a prefix sum array of the number of pizzas help?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}