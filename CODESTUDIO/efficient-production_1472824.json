{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12682,
            "title": "Efficient Production",
            "titleSlug": "efficient-production_1472824",
            "content": "<h4 id=\"kevin-has-started-a-new-production-line-he-has-n-machines-that-can-work-simultaneously-all-machines-produce-the-same-product-but-at-a-different-speed-time-taken-to-produce-one-product-by-machines-is-given-as-an-array-arr\">Kevin has started a new production line. He has \u2018N\u2019 machines that can work simultaneously. All machines produce the same product but at a different speed. Time taken to produce one product by machines is given as an array \u2018ARR\u2019.</h4>\n\n<h4 id=\"kevin-is-new-in-the-production-business-and-so-he-wants-your-help-in-producing-k-products-in-the-minimum-possible-time\">Kevin is new in the production business and so, he wants your help in producing \u2018K\u2019 products in the minimum possible time.</h4>\n\n<h4 id=\"input-format\">Input Format :</h4>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 representing the number of test cases. The &#39;T&#39; test cases follow.\n\nThe first line of each test case will contain two space-separated integers \u2018N\u2019, and \u2018K\u2019 which denotes the number of machines and the total number of products, respectively.\n\nThe next line contains the \u2018N\u2019 space-separated integers, where \u2018i-th\u2019 element denotes the time taken by \u2018i-th\u2019 machine to produce one product. \n</code></pre>\n\n<h4 id=\"output-format\">Output Format :</h4>\n\n<pre><code>For each test case, print an integer denoting the minimum time required to produce \u2018K\u2019 products. \n\nOutput for every test case will be printed in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>You do not need to print anything; It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints :</h4>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 100000\n1 &lt;= K, ARR[i] &lt;= 10^9\n\nWhere &#39;ARR[i]&#39; denotes the &#39;ith&#39; element of ARR.\n\nTime limit: 1 sec\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1 :</h4>\n\n<pre><code>2\n1 10\n5 \n2 3\n1 2 \n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1 :</h4>\n\n<pre><code>50\n2 \n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of sample input 1 :</h5>\n\n<pre><code>In the first test case:\nThere is only one machine and it takes 5 units of time to produce one product. So, to produce 50 units it will take 50 units of time.\n\nIn the second test case:\nAfter the first unit of time, the first machine will produce one product, total products = 1.\nBy the second unit of time, the first machine has produced 2 products and the second machine has produced 1 product. So, total products = 3 = &#39;K&#39;.\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2 :</h4>\n\n<pre><code>2\n6 7\n11 11 11 11 11 11\n5 5\n1 1 1 1 1\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2 :</h4>\n\n<pre><code>22 \n1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": -7,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given 'N' machines with varying production speeds, represented by the array 'ARR' (time to produce one product for each machine), determine the minimum time required to produce 'K' products collectively.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 100000",
                    "1 <= K, ARR[i] <= 10^9",
                    "Where 'ARR[i]' denotes the 'i-th' element of ARR.",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "1 10\n5",
                        "output": "50",
                        "explanation": "There is one machine that takes 5 units of time per product. To produce 10 products, it requires 5 * 10 = 50 units of time."
                    },
                    {
                        "input": "2 3\n1 2",
                        "output": "2",
                        "explanation": "Machine 1 produces one product in 1 unit of time and Machine 2 produces one product in 2 unit of time. In the first unit time, machine 1 produces one product, so total products=1. By the second unit of time, the first machine has produced 2 products and the second machine has produced 1 product. So, total products = 3 = K."
                    },
                    {
                        "input": "2\n6 7\n11 11 11 11 11 11",
                        "output": "22",
                        "explanation": "Since all machines have the same production time of 11, the optimal strategy is to utilize all machines simultaneously. To produce 7 products, we need to wait until at least 7 products are made.  The minimum time will be 2 * 11 = 22 because 6 machines working together can at max produce 6 * (2) = 12 products in two instances where each machine takes 11 units of time each production instance. In the first instance, 6 products are made across the six machines in 11 units of time.  In the second instance another one product will be produced for one of the machine across another 11 unit of time. So it takes 22 units of time to produce more than 7 products."
                    },
                    {
                        "input": "5 5\n1 1 1 1 1",
                        "output": "1",
                        "explanation": "All machines produce one product in 1 unit of time. Therefore, with 5 machines, 5 products can be made in 1 unit of time."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can we iterate on time from 1 to 10 ^ 18 and check the number of products produced till this time?</p>",
            "<p>If we can produce \u2018K\u2019 items in \u2018i\u2019 days then we can also do it in \u2018i+1\u2019 days also.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}