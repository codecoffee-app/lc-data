{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 14273,
            "title": "Element with large number of occurrence",
            "titleSlug": "element-with-large-number-of-occurrence_2105392",
            "content": "<h4 id=\"ninja-gets-very-irritated-when-he-finds-duplicate-elements-with-large-number-of-occurrences-in-an-array-say-arr-of-n-integers-he-wants-to-find-the-element-with-large-number-of-occurrences-in-the-array-so-that-he-can-remove-that-element-later-from-that-array\">Ninja gets very irritated when he finds duplicate elements with large number of occurrences in an array, say &#39;ARR&#39; of &#39;N&#39; integers. He wants to find the element with large number of occurrences in the array so that he can remove that element later from that array.</h4>\n\n<h4 id=\"ninja-asks-for-your-help-to-find-such-element-from-the-array-help-ninja\">Ninja asks for your help to find such element from the array. Help Ninja!</h4>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>An element is having large number of occurrence if that element occurs more than floor(&#39;N&#39; / 2) times in the array. If there is no such element present, print -1.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer &#39;T&#39; representing the number of test cases.\n\nThe first line of each test case contains a single positive integer \u2018N\u2019 representing the size of the array/list.\n\nThe second line of each test case contains \u2018N\u2019 single space-separated integers representing the array elements of &#39;ARR&#39;.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print an integer denoting the majority element present in the array. Print-1 in case of no majority element.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don&#39;t need to print the output, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= N &lt;= 5 * 10^3\n-10^5 &lt;= ARR[i] &lt;= 10^5\n\nWhere &#39;ARR[i]&#39; denotes the element at the &#39;i&#39;th index in the array/list &#39;ARR&#39;.\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n7\n2 4 5 2 2 3 4\n4\n8 5 1 9 \n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>2\n-1\n</code></pre>\n\n<h4 id=\"explanation-of-sample-output-1\">Explanation of Sample Output 1:</h4>\n\n<pre><code>In test case 1, frequencies of occurrences of different elements are:\n\n2 \u2192 3 times\n4 \u2192 2 times\n5 \u2192 1 time\n\nAs 2 occurs more than floor(5/2) (i.e. floor(2.5) = 2) times, it is the element with large number of occurrences.\n\nIn test case 2, frequencies of occurrences of different elements are:\n\n8 \u2192 1 time\n5 \u2192 1 time\n1 \u2192 1 time\n9 \u2192 1 time\n\nAs no element occurs more than floor(4/2) = 2 times. Thus no element with large number of occurrences is present.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n7\n8 8 8 8 8 9 1 \n4\n2 2 3 3\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>8\n-1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": -8,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array 'ARR' of 'N' integers, find the element that occurs more than floor(N / 2) times. This element is considered the majority element. If no such element exists, return -1.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= N <= 5 * 10^3",
                    "-10^5 <= ARR[i] <= 10^5",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "7\n2 4 5 2 2 3 4",
                        "output": "2",
                        "explanation": "The frequencies of elements are: 2 (3 times), 4 (2 times), 5 (1 time), 3 (1 time). Since 2 occurs more than floor(7/2) = 3 times, it's the majority element."
                    },
                    {
                        "input": "4\n8 5 1 9",
                        "output": "-1",
                        "explanation": "The frequencies of elements are: 8 (1 time), 5 (1 time), 1 (1 time), 9 (1 time). No element occurs more than floor(4/2) = 2 times. Therefore, no majority element exists."
                    },
                    {
                        "input": "7\n8 8 8 8 8 9 1",
                        "output": "8",
                        "explanation": "The frequencies of elements are: 8 (5 times), 9 (1 time), 1 (1 time). Since 8 occurs more than floor(7/2) = 3 times, it's the majority element."
                    },
                    {
                        "input": "4\n2 2 3 3",
                        "output": "-1",
                        "explanation": "The frequencies of elements are: 2 (2 times), 3 (2 times).  No element occurs more than floor(4/2) = 2 times. Therefore, no majority element exists."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}