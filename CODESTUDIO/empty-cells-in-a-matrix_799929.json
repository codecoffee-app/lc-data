{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8053,
            "title": "Empty Cells in a Matrix",
            "titleSlug": "empty-cells-in-a-matrix_799929",
            "content": "<h4 id=\"you-are-given-an-integer-n-denoting-the-size-of-a-n-n-matrix-initially-each-cell-of-the-matrix-is-empty-you-are-also-given-an-integer-k-denoting-the-number-of-tasks-in-each-task-you-are-given-two-integers-i-j-where-i-represents-the-ith-row-and-j-represents-the-jth-column-of-the-matrix\">You are given an integer &#39;N&#39; denoting the size of a &#39;N&#39; * &#39;N&#39; matrix. Initially, each cell of the matrix is empty. You are also given an integer &#39;K&#39; denoting the number of tasks. In each task, you are given two integers (&#39;I&#39;,&#39;J&#39;) where &#39;I&#39; represents the ith row, and &#39;J&#39; represents the jth column of the matrix.</h4>\n\n<h4 id=\"you-have-to-perform-each-task-in-the-given-order-for-each-task-you-have-to-place-0-in-each-cell-of-ith-row-and-jth-column-after-completing-all-the-tasks-you-have-to-return-an-array-of-size-k-where-the-nth-element-of-the-array-is-the-number-of-empty-cells-in-the-matrix-after-the-nth-task\">You have to perform each task in the given order. For each task, you have to place 0 in each cell of ith row and jth column. After completing all the tasks, you have to return an array of size &#39;K&#39; where the nth element of the array is the number of empty cells in the matrix after the nth task.</h4>\n\n<pre><code>For example: Consider an empty matrix of size &#39;N&#39;*&#39;N&#39; where &#39;N&#39; = 3. \n\n[[ &#39;NULL&#39;, &#39;NULL&#39;, &#39;NULL&#39;] \n [ &#39;NULL&#39;, &#39;NULL&#39;, &#39;NULL&#39;]\n [ &#39;NULL&#39;, &#39;NULL&#39;, &#39;NULL&#39;]]\n\nSuppose the value of &#39;K&#39; is 2, which means we have to perform 2 tasks. \n\nTask 1: (0, 0)\nMatrix after placing 0 in each cell of 0th row and 0th column:\n[[0, 0, 0] \n[ 0, &#39;NULL&#39;, &#39;NULL&#39;]\n[ 0, &#39;NULL&#39;, &#39;NULL&#39;]]\n\nThe number of empty cells now: 4\n\nTask 2: (1,0)\nMatrix after placing 0 in each cell of 1st row and 0th column:\n[[0, 0, 0] \n[ 0, 0, 0]\n[ 0, &#39;NULL&#39;, &#39;NULL&#39;]]\n\nThe number of empty cells now: 2\n\nReturn the array [4,2]\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>1. We call a cell empty only if it does not contain any value.\n2. Indexing is 0-based.  \n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains a single integer T, representing the number of test cases or queries to be run. \nThen the T test cases follow.\n\nThe first line of every test case contains two space-separated integers &#39;N&#39; and &#39;K&#39;, where &#39;N&#39; is the number of rows, and the columns of the given matrix and &#39;K&#39; is the number of tasks.  \n\nNext &#39;K&#39; lines of each test case contain two space-separated integers &#39;I&#39; and &#39;J&#39;.\n</code></pre>\n\n<h5 id=\"output-format\">Output format:</h5>\n\n<pre><code>For each test case, print a line that contains a vector/array containing the number of empty cells in the matrix after each task.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You are not required to print anything it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= &#39;N&#39; &lt;= 10^5\n0 &lt;= &#39;K&#39; &lt;= 10^5 \n0 &lt;= &#39;I&#39;,&#39;J&#39; &lt; &#39;N&#39;\n\nTime limit: 1 second\n</code></pre>\n<h5 id=\"sample-input-1\">Sample input 1:</h5>\n\n<pre><code>1\n2 2\n0 0\n0 1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample output 1:</h5>\n\n<pre><code>1 0\n</code></pre>\n\n<h5 id=\"explanation-for-input-1\">Explanation for input 1 :</h5>\n\n<pre><code>Initial Matrix:  [[NULL, NULL]\n                  [NULL, NULL]]\n\nMatrix after task (0,0)\n[[ 0,0 ]\n[ 0,NULL]] \n\nAs we can see, there is only one empty cell. So we will print 1.\n\nMatrix after task (0,1)\n[[0,0]\n[0,0]] \n\nNow there is no empty cell in the matrix so print 0.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample input 2:</h5>\n\n<pre><code>1\n1 1 \n0 0 \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample output 2:</h5>\n\n<pre><code>0\n</code></pre>\n\n<h5 id=\"explanation-for-input-2\">Explanation for input 2:</h5>\n\n<pre><code>Initial matrix: [[NULL]] \nAfter processing the task, the matrix will become [[0]].\nAs there are no empty cells in the matrix, 0 is the answer.\n</code></pre>\n\n<h5 id=\"sample-input-3\">Sample input 3:</h5>\n\n<pre><code>2\n4 2\n0 1 \n2 3\n3 3\n0 0\n1 1\n2 2 \n</code></pre>\n\n<h5 id=\"sample-output-3\">Sample output 3:</h5>\n\n<pre><code>9 4 \n4 1 0 \n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 18,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an integer N, representing the size of an N x N matrix, initially filled with empty cells (NULL). You are also given an integer K, denoting the number of tasks to perform. Each task consists of placing 0 in all cells of a specified row I and column J.  After each task, determine the number of empty cells remaining in the matrix.  Return an array of size K, where each element represents the count of empty cells after the corresponding task.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= N <= 10^5",
                    "0 <= K <= 10^5",
                    "0 <= I, J < N",
                    "Time limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "2 2\n0 0\n0 1",
                        "output": "1 0",
                        "explanation": "Initial Matrix: [[NULL, NULL], [NULL, NULL]]\n\nTask 1 (0,0): Matrix becomes [[0, 0], [0, NULL]]. 1 empty cell.\nTask 2 (0,1): Matrix becomes [[0, 0], [0, 0]]. 0 empty cells."
                    },
                    {
                        "input": "1 1\n0 0",
                        "output": "0",
                        "explanation": "Initial matrix: [[NULL]]\nAfter task (0,0), matrix becomes [[0]].  0 empty cells."
                    },
                    {
                        "input": "2\n4 2\n0 1\n2 3\n3 3\n0 0\n1 1\n2 2",
                        "output": "9 4\n4 1 0",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try applying brute force. Can you do it by creating a matrix and then updating it?</p>",
            "<p>Can you do this problem without actually using a matrix? Just think of the impact of a task on the matrix. Try to use the size of the matrix in a more efficient manner.&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Matrices (2D Arrays)",
                "slug": "matrices-(2d-arrays)"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}