{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10999,
            "title": "Encode N-ary tree to binary tree.",
            "titleSlug": "encode-n-ary-tree-to-binary-tree_1281859",
            "content": "<h4 id=\"you-have-been-given-an-n-ary-tree-n-nodes-with-node-1-as-head-of-the-tree-encode-the-above-n-ary-tree-into-a-binary-tree-such-that-if-only-the-encoded-binary-tree-was-given-to-you-you-could-restore-the-n-ary-tree-from-the-encoded-binary-tree-you-also-need-to-write-a-function-that-could-decode-a-given-binary-tree-and-return-a-n-ary-tree-as-in-input-format\">You have been given an N-ary tree \u2018N\u2019 nodes with node \u20181\u2019 as head of the tree. Encode the above N-ary tree into a binary tree such that if only the encoded binary tree was given to you, you could restore the N-ary tree from the encoded binary tree. You also need to write a function that could decode a given binary tree and return a N-ary tree as in input format.</h4>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>There is no restriction on how you encode/decode the N-ary tree.\n</code></pre>\n\n<h5 id=\"example\">Example:</h5>\n\n<pre><code>N-ary Tree is given as follows:-\n6\n1 -1 2 3 4 -1 5 -1 6 -1 -1 -1 -1\nThe above N-ary tree and its encoded binary tree can be represented as follows:-\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/narytree2-8591.png\" alt=\"subsequence\"></p>\n\n<pre><code>The above binary tree can be represented as follows in their level order traversal:-\n1\n2 -1\n5 3\n-1 -1 6 4\n-1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 representing the number of test cases.\n\nThe first line of input contains the elements of the tree in the level order form separated by a single space.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>N-ary Tree is represented in their level order traversal. Each group of children is separated by -1.\n</code></pre>\n\n<h5 id=\"example\">Example:</h5>\n\n<p><img src=\"https://files.codingninjas.in/narytree4-8596.png\" alt=\"subsequence\"></p>\n\n<pre><code>1 -1\n2 3 4 -1\n5 -1 6 -1 -1\n-1 -1\n\nThe sequence will be put together in a single line separated by a single space. Hence, for the above-depicted tree, the input will be given as:\n\n1 -1 2 3 4 -1 5 -1 6 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, for Encode function/method: return the binary tree. For Decode function/method: return the N-ary tree\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>1. The list/array storing binary tree must contain \u2018N&#39; + 1 element as nodes are numbered from 1 to \u2018N\u2019. The &#39;i&#39;th element of the list/array must contain first the left child then the right child.\n\n2. If a node does not have a left/right child just display that child as -1.\n\n3. You do not need to print anything; it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 1000\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n1 -1 2 3 4 -1 5 -1 6 -1 -1 -1 -1\n1 -1 2 3 -1 -1 -1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>1 -1 2 3 4 -1 5 -1 6 -1 -1 -1 -1\n1 -1 2 3 -1 -1 -1\n</code></pre>\n\n<h4 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1:</h4>\n\n<pre><code>In test case 1,\n\n1 2 -1 5 3 -1 -1 6 4 -1 -1 -1 -1 is the binary tree user will return. Now we will pass this binary tree to be decoded. The decoded N-ary tree will be 1 -1 2 3 4 -1 5 -1 6 -1 -1 -1 -1. It is not necessary to return the same binary tree as above.\n\nTherefore the answer is 1 -1 2 3 4 -1 5 -1 6 -1 -1 -1 -1.\n\nIn test case 2,\n\n1 2 -1 -1 3 -1 - is the binary tree encode will return. Now we will pass this binary tree to be decoded. The decoded N-ary tree will be 1 -1 2 3 -1 -1 -1. It is not necessary to return the same binary tree as above.\n\nTherefore the answer is 1 -1 2 3 -1 -1 -1.\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation for Sample Input 2:</h5>\n\n<pre><code>2\n1 -1 2 -1 -1\n1 -1 -1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>1 -1 2 -1 -1\n1 -1 -1 \n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 3,
            "dislikes": "NA",
            "rephrased": {
                "body": "You are given an N-ary tree with N nodes, where node 1 is the root.  Encode this N-ary tree into a binary tree such that the original N-ary tree can be reconstructed from the encoded binary tree.  Implement both an encoding function (N-ary to Binary) and a decoding function (Binary to N-ary).  There are no restrictions on the encoding/decoding method you choose. The N-ary tree is represented in level order traversal, with each group of children separated by -1.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 1000",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "1 -1 2 3 4 -1 5 -1 6 -1 -1 -1 -1",
                        "output": "1 -1 2 3 4 -1 5 -1 6 -1 -1 -1 -1",
                        "explanation": "The encoded binary tree is decoded back to the original N-ary tree. One possible encoded binary tree is 1 2 -1 5 3 -1 -1 6 4 -1 -1 -1 -1. Decoded tree will be the same as the input."
                    },
                    {
                        "input": "1 -1 2 3 -1 -1 -1",
                        "output": "1 -1 2 3 -1 -1 -1",
                        "explanation": "The encoded binary tree is decoded back to the original N-ary tree. One possible encoded binary tree is 1 2 -1 -1 3 -1 -. Decoded tree will be the same as the input."
                    },
                    {
                        "input": "1 -1 2 -1 -1",
                        "output": "1 -1 2 -1 -1",
                        "explanation": "The encoded binary tree is decoded back to the original N-ary tree."
                    },
                    {
                        "input": "1 -1 -1",
                        "output": "1 -1 -1",
                        "explanation": "The encoded binary tree is decoded back to the original N-ary tree."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Recur by Making the right sibling as child.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Trees",
                "slug": "trees"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}