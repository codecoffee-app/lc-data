{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 16824,
            "title": "Encode The String",
            "titleSlug": "encode-the-string_3651409",
            "content": "<h4 id=\"you-are-given-a-string-s-of-length-n-the-string-can-be-encoded-using-the-following-rules\">You are given a string \u2018S\u2019 of length \u2018N\u2019. The string can be encoded using the following rules:</h4>\n\n<h4 id=\"1-if-the-i-th-character-is-a-vowel-change-it-to-the-next-character-in-the-alphabetical-sequence-for-example-the-next-character-of-o-is-p\">1) If the \u2018i-th\u2019 character is a vowel, change it to the next character in the alphabetical sequence. For example, the next character of \u2018o\u2019 is \u2018p\u2019.</h4>\n\n<h4 id=\"2-if-the-i-th-character-is-a-consonant-change-it-to-the-previous-character-in-the-alphabetical-sequence-for-example-the-previous-character-of-h-is-g\">2) If the \u2018i-th\u2019 character is a consonant, change it to the previous character in the alphabetical sequence. For example, the previous character of \u2018h\u2019 is \u2018g\u2019.</h4>\n\n<h4 id=\"3-the-next-character-of-z-is-a\">3) The next character of \u2018z\u2019 is \u2018a\u2019.</h4>\n\n<h4 id=\"4-the-previous-character-of-a-is-z\">4) The previous character of \u2018a\u2019 is \u2018z\u2019.</h4>\n\n<h4 id=\"find-the-encoded-string\">Find the encoded string.</h4>\n\n<h5 id=\"example\">Example :</h5>\n\n<pre><code>\u2018N\u2019 = 4, \u2018S\u2019 = \u201ccode\u201d\n\nCharacter \u2018c\u2019 gets changed to \u2018b\u2019.\nCharacter \u2018o\u2019 gets changed to \u2018p\u2019.\nCharacter \u2018d\u2019 gets changed to \u2018c\u2019.\nCharacter \u2018e\u2019 gets changed to \u2018f\u2019.\n\nEncoded string = \u201cbpcf\u201d\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains an integer \u2018T\u2019, which denotes the number of test cases to be run. Then the test cases follow.\n\nThe first line of each test case contains an integer \u2018N\u2019, denoting the length of the string.\n\nThe second line of each test case contains a string \u2018S\u2019 of length \u2018N\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>Print a string that denotes the encoded string of the original string.\n\nPrint the output of each test case in a new line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don\u2019t need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;=  N &lt;= 10^5\n\nThe Sum of \u2018N\u2019 over all test cases is &lt;= 10^5.\nThe string \u2018S\u2019 contains only lowercase letters.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n3\ndog\n4\ncazz\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>cpf\nbbyy\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1 :</h5>\n\n<pre><code>For the first test case :\n\nCharacter \u2018d\u2019 gets changed to \u2018c\u2019.\nCharacter \u2018o\u2019 gets changed to \u2018p\u2019.\nCharacter \u2018g\u2019 gets changed to \u2018f\u2019.\n\nEncoded string = \u201ccpf\u201d.\n\n\nFor the second test case :\n\nCharacter \u2018c\u2019 gets changed to \u2018b\u2019.\nCharacter \u2018a\u2019 gets changed to \u2018b\u2019.\nCharacter \u2018z\u2019 gets changed to \u2018y\u2019.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n4\ngjmf\n3\nabc\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>file\nbab\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 48,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string 'S' of length 'N', encode it based on the following rules:\n\n1.  If a character is a vowel (a, e, i, o, u), replace it with the next character in the alphabet. The next character after 'z' is 'a'.\n2.  If a character is a consonant, replace it with the previous character in the alphabet. The previous character before 'a' is 'z'.\n\nReturn the encoded string.",
                "constraints": [
                    "1 <= T <= 10 (Number of test cases)",
                    "1 <= N <= 10^5 (Length of the string)",
                    "Sum of 'N' over all test cases <= 10^5",
                    "The string 'S' contains only lowercase letters."
                ],
                "testcases": [
                    {
                        "input": "3\ndog\n4\ncazz",
                        "output": "cpf\nbbyy",
                        "explanation": "Test Case 1: 'dog' -> 'cpf' (d->c, o->p, g->f)\nTest Case 2: 'cazz' -> 'bbyy' (c->b, a->b, z->y, z->y)"
                    },
                    {
                        "input": "4\ngjmf\n3\nabc",
                        "output": "file\nbab",
                        "explanation": "Test Case 1: 'gjmf' -> 'file' (g->f, j->i, m->l, f->e)\nTest Case 2: 'abc' -> 'bab' (a->b, b->a, c->b)"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Simulate the problem statement.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}