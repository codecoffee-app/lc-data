{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12640,
            "title": "Equal Candies",
            "titleSlug": "equal-candies_1467692",
            "content": "<h4 id=\"on-christmas-eve-all-people-at-coding-ninjas-are-given-some-candies-but-due-to-some-error-all-people-do-not-get-the-same-number-of-candies\">On Christmas Eve, all people at coding ninjas are given some candies but due to some error all people do not get the same number of candies.</h4>\n\n<h4 id=\"you-are-given-an-array-of-size-n-that-represents-the-number-of-candies-given-to-n-people-you-have-to-divide-candies-among-all-people-such-that-each-person-receives-the-same-number-of-candies-for-this-you-can-either-increase-or-decrease-the-number-of-candies-for-any-person-by-any-amount-your-task-is-to-minimise-total-increase-decrease-for-each-person-i-e-if-you-increase-or-decrease-xi-number-of-candies-for-the-person-i-1-i-n-then-the-sum-of-all-xi-should-be-minimum\">You are given an array of size \u2018N\u2019 that represents the number of candies given to \u2018N\u2019 people. You have to divide candies among all people such that each person receives the same number of candies. For this You can either increase or decrease the number of candies for any person by any amount. Your task is  to minimise total increase/decrease for each person i.e. If you increase or decrease \u2018Xi\u2019 number of candies for the person \u2018i\u2019 ( 1 &lt;= \u2018i\u2019 &lt;= \u2018N\u2019), then the sum of all \u2018Xi\u2019 should be minimum.</h4>\n\n<h4 id=\"input-format\">Input Format :</h4>\n\n<pre><code>The first line contains an integer &#39;T&#39; which denotes the number of test cases or queries to be run.\n\nThe first line of each test case contains an integer \u2018N\u2019 representing the total number of people.\n\nThe second line of each test case contains \u2018N\u2019 space-separated integers representing the initial count of candies for each person.\n</code></pre>\n\n<h4 id=\"output-format\">Output Format :</h4>\n\n<pre><code>For each test case, print an integer representing the minimum possible total increase/decrease in candies count to make equal number of candies for each person.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>You do not need to input or print anything, and it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints :</h4>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= N &lt;= 5000\n1 &lt;= candies[i] &lt;= 10 ^ 9\n\nWhere \u2018candies[i]\u2019 is the initial count of candies for each person &#39;i&#39; from 1 to \u2018N\u2019.\n\nTime Limit : 1sec\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1:</h4>\n\n<pre><code>2\n5\n4 5 1 2 3\n4\n1 1 1 2\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1:</h4>\n\n<pre><code>6\n1\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1:</h5>\n\n<pre><code>Test case 1:\nWe can make the final number of candies equal to [3, 3, 3, 3, 3 ] with total changes equal to 6, which is the minimum possible.\n\nTest case 2:\nWe can make the last element \u20182\u2019 to \u20181\u2019 by decreasing it one time. Hence the minimum changes is 1.\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2:</h4>\n\n<pre><code>1\n1\n10\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2:</h4>\n\n<pre><code>0\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-2\">Explanation of Sample Input 2:</h5>\n\n<pre><code>Test case 1:\nAs there is only one element, we don&#39;t need to change anything.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 7,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array representing the number of candies each person at Coding Ninjas received on Christmas Eve, where not everyone has the same amount due to an error. The goal is to redistribute the candies so that each person has the same number. Minimize the total amount of candies increased or decreased across all people to achieve this equal distribution.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= N <= 5000",
                    "1 <= candies[i] <= 10 ^ 9",
                    "Where \u2018candies[i]\u2019 is the initial count of candies for each person 'i' from 1 to \u2018N\u2019.",
                    "Time Limit : 1sec"
                ],
                "testcases": [
                    {
                        "input": "5\n4 5 1 2 3",
                        "output": "6",
                        "explanation": "To equalize the candies, a possible solution is to make each person have 3 candies. This requires a total change of |4-3| + |5-3| + |1-3| + |2-3| + |3-3| = 1 + 2 + 2 + 1 + 0 = 6 candies."
                    },
                    {
                        "input": "4\n1 1 1 2",
                        "output": "1",
                        "explanation": "To equalize the candies, a possible solution is to make each person have 1 candy. This requires changing the last person from 2 candies to 1 candy for a total change of 1."
                    },
                    {
                        "input": "1\n10",
                        "output": "0",
                        "explanation": "Since there is only one person, no redistribution is needed, and the total change is 0."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try all possible cases.</p>",
            "<p>Considered sorting the given array&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}