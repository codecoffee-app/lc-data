{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10643,
            "title": "Equalize Weights",
            "titleSlug": "equalize-weights_1262281",
            "content": "<h4 id=\"you-are-given-an-integer-n-denoting-the-total-number-of-bags-each-bag-contains-some-items-and-each-item-has-a-value-attached-to-it-your-task-is-to-equalize-the-total-value-of-all-the-bags-by-swapping-any-two-items-and-the-following-rules-must-be-followed\">You are given an integer \u2018N\u2019, denoting the total number of bags. Each bag contains some items, and each item has a value attached to it. Your task is to equalize the total value of all the bags by swapping any two items, and the following rules must be followed :</h4>\n\n<pre><code>The number of items in a bag must remain constant before and after swapping.\nAny number of swappings is permitted.\nIt is guaranteed that there is at least one way to make the values of all the bags equal to each other. \n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains an integer \u2018T\u2019, which denotes the number of test cases or queries to be run. Then, the \u2018T\u2019 test cases follow. \n\nThe first line of each test case contains an integer \u2018N\u2019, denoting the total number of bags. The next 2*\u2019N\u2019 lines contain the following :\n\nThe first line contains a single integer \u2018M\u2019, denoting the number of items in the bag.\n\nThe second line contains \u2018M\u2019 space-separated integers, denoting the value of each item in the bag.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print in a new line the contents of every bag in non-decreasing order. \n\nOutput for each test case will be printed in a separate line.\n\nThe contents of all the bags must be printed in separate lines, and the following rules must be followed :\n\nThe contents of the bag that contains the item having the least value must be printed on the first line. \n\nThe contents of the bag that contains the item having the second least value must be printed on the second line and so on and so forth. \n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N,M &lt;= 10\n1 &lt;= X &lt;= 10^4\n\nWhere  &#39;X&#39; is the value of any item in any bag\n\nTime Limit: 1sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>1\n3\n3\n9 1 4\n2\n5 6\n3\n2 11 7\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>1 5 9\n2 6 7\n4 11 \n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1 :</h5>\n\n<pre><code>There are a total of three bags. After swapping 4 from the first bag and 5 from the second bag, the total sum of the first bag becomes equal to 15, and the total value of the second bag becomes 10. After swapping 6 from the second bag and 11 from the third bag, the total sum of the second bag becomes 15, and the sum of the third bag becomes 15, and thus, the total values of every bag become equal.\nSince the least value is 1, we print the contents of the bag, which has the value 1 followed by the bag having the value 2, and finally the bag, which has the value 4.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>1\n2\n3\n4 1 2\n2\n5 6\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>2\n1 2 6\n4 5\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation For Sample Input 2 :</h5>\n\n<pre><code>There are a total of two bags. After swapping 4 from the first bag and 6 from the second bag, the total sum of the first bag becomes equal to 9, and the total value of the second bag becomes 9, and thus, the total values of every bag become equal.\nSince the least value is 1, we print the contents of the bag, which has the value 1, and finally the bag, which has the value 4.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 2,
            "dislikes": "NA",
            "rephrased": {
                "body": "You are given an integer 'N', representing the number of bags. Each bag contains items with associated values. The goal is to equalize the total value of all bags by swapping items between them, adhering to these rules:\n\n*   The number of items in each bag must remain constant.\n*   Any number of swaps is allowed.\n*   It's guaranteed that a solution exists to equalize the bag values.\n\nGiven the initial configuration of items in each bag, determine the final arrangement of items in each bag after performing swaps such that all bags have equal total value. The bags should be printed in ascending order of their smallest element.",
                "constraints": [
                    "1 <= T <= 10 (Number of test cases)",
                    "1 <= N, M <= 10 (Number of bags and items per bag)",
                    "1 <= X <= 10^4 (Value of any item)",
                    "Time Limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "1\n3\n3\n9 1 4\n2\n5 6\n3\n2 11 7",
                        "output": "1 5 9\n2 6 7\n4 11",
                        "explanation": "There are three bags.  After swapping 4 from the first bag and 5 from the second, the first bag's sum becomes 15 and the second's becomes 10. Swapping 6 from the second and 11 from the third results in each bag having a sum of 15. The bags are then printed based on the ascending order of their minimum value: bag with '1', then the bag with '2' , and lastly the bag with '4'."
                    },
                    {
                        "input": "1\n2\n3\n4 1 2\n2\n5 6",
                        "output": "1 2 6\n4 5",
                        "explanation": "There are two bags. Swapping 4 from the first bag and 6 from the second bag makes the total value of each bag 9. The bags are then printed according to the ascending order of their minimum value, beginning with the bag having '1' and then the one having '4'."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Find out the required value for each bag. We need to store the sizes of all the bags and the values of all the items.&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}