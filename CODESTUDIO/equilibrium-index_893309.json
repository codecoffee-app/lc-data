{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8692,
            "title": "Equilibrium index",
            "titleSlug": "equilibrium-index_893309",
            "content": "<h4 id=\"after-a-long-lockdown-alex-and-rome-want-to-meet-there-are-n-checkpoints-in-between-their-homes-numbered-from-0-to-n-1-where-checkpoint-0-is-closest-to-alex-and-checkpoint-n-1-is-closest-to-rome-each-checkpoint-has-a-token-with-a-number-written-on-it-if-someone-crosses-some-checkpoint-he-will-collect-the-token-alex-and-rome-will-meet-at-some-checkpoint-i-0-i-n-1-they-aim-to-have-the-same-total-sum-of-numbers-on-the-tokens-they-have-collected-individually-when-they-meet-at-the-checkpoint-i-they-don-t-want-any-fights-so-no-one-will-take-the-token-at-checkpoint-i\">After a long lockdown, Alex and Rome want to meet. There are \u2018N\u2019 checkpoints in between their homes numbered from 0 to N - 1, where checkpoint 0 is closest to Alex and checkpoint N - 1 is closest to Rome. Each checkpoint has a token with a number written on it. If someone crosses some checkpoint, he will collect the token. Alex and Rome will meet at some checkpoint \u2018i\u2019, 0 &lt;= i &lt;= N - 1. They aim to have the same total sum of numbers on the tokens they have collected individually when they meet at the checkpoint \u2018i\u2019. They don\u2019t want any fights, so no one will take the token at checkpoint \u2018i\u2019.</h4>\n\n<h4 id=\"you-are-given-an-array-token-consisting-of-n-integers-signifying-the-number-on-each-token-find-out-the-checkpoint-number-i-such-that-alex-and-rome-will-have-the-same-sum-of-numbers-on-their-tokens-since-alex-is-lazy-find-out-the-index-closest-to-alex-such-that-the-above-conditions-hold-also-notify-if-no-such-checkpoints-exist\">You are given an array \u2018token\u2019 consisting of \u2018N\u2019 integers, signifying the number on each token. Find out the checkpoint number \u2018i\u2019 such that Alex and Rome will have the same sum of numbers on their tokens. Since Alex is lazy, find out the index closest to Alex such that the above conditions hold. Also, notify if no such checkpoints exist.</h4>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains \u2018T\u2019, the number of test cases.\n\nThe first line of each test case contains an integer \u2018N\u2019, the number of checkpoints.\n\nThe second line of each test case contains an array \u2018token\u2019 of \u2018N\u2019 space-separated integers, signifying the number on each token.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print an integer denoting the checkpoint number i, 0 &lt;= i &lt;= N - 1. In case no such checkpoint exists, print \u2018-1\u2019.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You are not required to print the expected output. It has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 10^5\n-10^4 &lt;= token[i] &lt;= 10^4\n\nWhere token[i] is the token number at checkpoint i, 0 &lt;= i &lt;= N - 1.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n5\n1 4 9 3 2\n4\n1 -2 5 -1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>2\n2\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1:</h5>\n\n<pre><code>In the first test case, the token numbers are [1, 4, 9, 3, 2]. If they meet at index 2, Alex will have token 0 and token 1, with the sum = 1 + 4 = 5. Rome will have token 3 and token 5, with the sum = 3 + 2 = 5. Hence, the sums are equal and the answer is 2.\n\nIn the second test case, the token numbers are [1, -2, 5, -1]. If they meet at index 2, Alex will have a sum of 1 + (-2) = -1, and Rome will have a sum of -1. Hence, the answer is 2.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n3\n1 4 6\n3\n1 -1 4\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>-1\n2\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 24,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of integers representing tokens at checkpoints, find the earliest checkpoint where the sum of tokens collected by Alex (starting from index 0) equals the sum of tokens collected by Rome (starting from the last index). They meet at checkpoint 'i' and do not take the token at 'i'. Return the index 'i' if such a checkpoint exists, otherwise return -1.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10^5",
                    "-10^4 <= token[i] <= 10^4"
                ],
                "testcases": [
                    {
                        "input": "token=[1, 4, 9, 3, 2]",
                        "output": "2",
                        "explanation": "Alex's sum up to index 1 is 1 + 4 = 5. Rome's sum from index N-1 down to index 3 is 3 + 2 = 5.  Meeting at index 2 satisfies the condition."
                    },
                    {
                        "input": "token=[1, -2, 5, -1]",
                        "output": "2",
                        "explanation": "Alex's sum up to index 1 is 1 + (-2) = -1. Rome's sum from index N-1 down to index 3 is -1. Meeting at index 2 satisfies the condition."
                    },
                    {
                        "input": "token=[1, 4, 6]",
                        "output": "-1",
                        "explanation": "There is no checkpoint where Alex's and Rome's token sums are equal."
                    },
                    {
                        "input": "token=[1, -1, 4]",
                        "output": "2",
                        "explanation": "Alex's sum up to index 1 is 1 + (-1) = 0. Rome's sum from index N-1 down to index 3 (which is none) is 0 if they meet at index 2"
                    },
                    {
                        "input": "token=[1, 1, 1, 1, 1]",
                        "output": "2",
                        "explanation": "Alex's sum up to index 1 is 1 + 1 = 2. Rome's sum from index N-1 down to index 3 is 1 + 1 = 2. Meeting at index 2 satisfies the condition."
                    },
                    {
                        "input": "token=[10, -5, 5, 0]",
                        "output": "1",
                        "explanation": "Alex's sum up to index 0 is 10. Rome's sum from index N-1 down to index 2 is 0 + 5 = 5.  That doesn't match, but when meeting at 1,  Alex sums up to index 0, resulting in 10 and Rome sums from index 3 down to index 2, so 0+5=5 this is incorrect. Meeting at Index 2, Alex would have 10 + -5, which is 5. Rome would have 0, which means it does not satify"
                    },
                    {
                        "input": "token=[0, 0, 0, 0]",
                        "output": "1",
                        "explanation": "Alex has 0 at index 0 and Rome has 0, they match. Meeting at index 1 gives Alex a sum of 0, and Rome's sum is 0 starting from index 3 (no tokens). So index 1 is valid and minimal"
                    },
                    {
                        "input": "token=[5, 0, 5]",
                        "output": "1",
                        "explanation": "Meeting at index 1: Alex sum is 5. Rome sum is 5"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>For each index, can we calculate the sums of Alex and Rome?</p>",
            "<p>Can you perform the same task in a single pass by finding a relation between the tokens collected by Alex and Rome?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}