{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 15999,
            "title": "Equilibrium",
            "titleSlug": "equilibrium_3114407",
            "content": "<h4 id=\"there-are-n-water-balls-arranged-in-a-line-some-of-them-are-hot-water-balls-and-some-are-cold-i-e-temperatures-of-balls-may-be-negative-zero-or-positive-you-have-an-empty-bag-with-you-and-you-will-be-collecting-some-balls-in-this-bag-starting-from-left-to-right\">There are \u2018N\u2019 water balls arranged in a line. Some of them are hot water balls, and some are cold, i.e., temperatures of balls may be negative, zero or positive. You have an empty bag with you, and you will be collecting some balls in this bag, starting from left to right.</h4>\n\n<h4 id=\"for-each-ball-you-decide-whether-to-collect-this-ball-or-not-once-you-collect-a-ball-you-can-t-drop-it-and-you-can-t-go-left-from-any-position\">For each ball, you decide whether to collect this ball or not. Once you collect a ball, you can\u2019t drop it, and you can\u2019t go left from any position.</h4>\n\n<h4 id=\"total-temperature-of-the-bag-at-any-moment-is-the-sum-of-temperatures-of-water-balls-collected-in-it-till-that-moment-your-task-is-to-find-the-maximum-number-of-balls-you-can-collect-such-that-the-total-temperature-of-your-bag-must-not-go-negative-at-any-instance\">Total temperature of the bag at any moment is the sum of temperatures of water balls collected in it till that moment. Your task is to find the maximum number of balls you can collect, such that the total temperature of your bag must not go negative at any instance.</h4>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains \u2018T\u2019, denoting the number of tests.\nFor each Test :\n    The first line contains an integer \u2018N\u2019, denoting the number of water balls.\n    The second line contains an array \u2018A\u2019 of length \u2018N\u2019, denoting the temperatures of water balls.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test, print an integer, denoting the maximum number of balls you can collect, such that the total temperature of the bag is non-negative at each instance.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You are not required to print the expected output. It has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints -</h5>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= N &lt;= 10^5\n-10^9 &lt;= A[i] &lt;= 10^9  i \u2208  (1,N)\n\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n6\n4 -4 1 -3 1 -3\n3\n2 -3 -1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>5\n2\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1 :</h5>\n\n<pre><code>For case 1:\nThe optimal selection is to collect balls [4, 1, -3, 1, -3], where you will be able to collect five balls. For any other selection, you can\u2019t collect more than five balls. Hence answer is 5.\n\nFor Case 2:\nOptimal selection is balls [2, -1]. Hence answer is 2.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n3\n-1 -2 1\n4\n0 3 2 1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>1\n4\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 10,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of integers representing the temperatures of water balls arranged in a line, determine the maximum number of balls you can collect from left to right such that the running sum of temperatures of collected balls never becomes negative. You can only collect balls from left to right, and once a ball is collected, it cannot be dropped.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= N <= 10^5",
                    "-10^9 <= A[i] <= 10^9  i \u2208  (1,N)"
                ],
                "testcases": [
                    {
                        "input": "nums = [4, -4, 1, -3, 1, -3]",
                        "output": "5",
                        "explanation": "The optimal selection is to collect balls [4, 1, -3, 1, -3]. The sum is always non-negative. Collecting 5 balls is the maximum possible."
                    },
                    {
                        "input": "nums = [2, -3, -1]",
                        "output": "2",
                        "explanation": "The optimal selection is balls [2, -1]. The sum is always non-negative.  You can only select 2 balls."
                    },
                    {
                        "input": "nums = [-1, -2, 1]",
                        "output": "1",
                        "explanation": "The optimal selection is [1]. You can only select 1 ball to keep the sum non-negative."
                    },
                    {
                        "input": "nums = [0, 3, 2, 1]",
                        "output": "4",
                        "explanation": "All the balls can be selected [0, 3, 2, 1] without the sum going negative. Total 4 balls."
                    },
                    {
                        "input": "nums = [1, 2, 3, 4, 5]",
                        "output": "5",
                        "explanation": "All the balls can be selected [1, 2, 3, 4, 5] without the sum going negative. Total 5 balls."
                    },
                    {
                        "input": "nums = [-1, -2, -3]",
                        "output": "0",
                        "explanation": "No balls can be selected. Any ball selection results in negative sum at some point."
                    },
                    {
                        "input": "nums = [-1, 1, -1, 1, -1]",
                        "output": "2",
                        "explanation": "The optimal selection is [1, 1].  This avoids negative sums while selecting the maximum number of balls."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you check for all possible selections of water balls?</p>",
            "<p>Can you see overlapping subproblems?</p>",
            "<p>If maximum balls are collected, try to maximize total temperature at each step.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}