{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 14519,
            "title": "Evaluate Boolean Expression",
            "titleSlug": "evaluate-boolean-expression_2181287",
            "content": "<pre><code>Table Variables:\n\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| name          | varchar |\n| value         | int     |\n+---------------+---------+\nname is the primary key for this table.\nThis table contains the stored variables and their values.\n\n\nTable Expressions:\n\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| left_operand  | varchar |\n| operator      | enum    |\n| right_operand | varchar |\n+---------------+---------+\n(left_operand, operator, right_operand) is the primary key for this table.\nThis table contains a boolean expression that should be evaluated.\noperator is an enum that takes one of the values (&#39;&lt;&#39;, &#39;&gt;&#39;, &#39;=&#39;)\nThe values of left_operand and right_operand are guaranteed to be in the Variables table.\n\n\nWrite an SQL query to evaluate the boolean expressions in Expressions table.\n\nReturn the result table in any order.\n\nThe query result format is in the following example.\n\nVariables table:\n+------+-------+\n| name | value |\n+------+-------+\n| x    | 66    |\n| y    | 77    |\n+------+-------+\n\nExpressions table:\n+--------------+----------+---------------+\n| left_operand | operator | right_operand |\n+--------------+----------+---------------+\n| x            | &gt;        | y             |\n| x            | &lt;        | y             |\n| x            | =        | y             |\n| y            | &gt;        | x             |\n| y            | &lt;        | x             |\n| x            | =        | x             |\n+--------------+----------+---------------+\n\nResult table:\n+--------------+----------+---------------+-------+\n| left_operand | operator | right_operand | value |\n+--------------+----------+---------------+-------+\n| x            | &gt;        | y             | false |\n| x            | &lt;        | y             | true  |\n| x            | =        | y             | false |\n| y            | &gt;        | x             | true  |\n| y            | &lt;        | x             | false |\n| x            | =        | x             | true  |\n+--------------+----------+---------------+-------+\nAs shown, you need find the value of each boolean exprssion in the table using the variables table.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 8,
            "dislikes": "NA",
            "rephrased": {
                "body": "Evaluate boolean expressions in the 'Expressions' table using variable values from the 'Variables' table. Return a table showing the original expression and a boolean 'value' indicating whether the expression is true or false, based on the evaluated operands.",
                "constraints": [
                    "The values of 'left_operand' and 'right_operand' in the 'Expressions' table are guaranteed to be present in the 'Variables' table.",
                    "The 'operator' column in the 'Expressions' table will only contain one of these values: '<', '>', or '='.",
                    "The 'name' column in the 'Variables' table is the primary key."
                ],
                "testcases": [
                    {
                        "input": "Variables=[('x', 66), ('y', 77)], Expressions=[('x', '>', 'y'), ('x', '<', 'y'), ('x', '=', 'y'), ('y', '>', 'x'), ('y', '<', 'x'), ('x', '=', 'x')]",
                        "output": "[('x', '>', 'y', 'false'), ('x', '<', 'y', 'true'), ('x', '=', 'y', 'false'), ('y', '>', 'x', 'true'), ('y', '<', 'x', 'false'), ('x', '=', 'x', 'true')]",
                        "explanation": "The 'Variables' table contains x=66 and y=77. The query evaluates each expression in the 'Expressions' table using these values. For example, 'x > y' evaluates to '66 > 77', which is false."
                    },
                    {
                        "input": "Variables=[('a', 10), ('b', 10)], Expressions=[('a', '=', 'b'), ('a', '>', 'b'), ('a', '<', 'b')]",
                        "output": "[('a', '=', 'b', 'true'), ('a', '>', 'b', 'false'), ('a', '<', 'b', 'false')]",
                        "explanation": "The 'Variables' table contains a=10 and b=10.  'a = b' is true because 10 equals 10. 'a > b' is false because 10 is not greater than 10. 'a < b' is false because 10 is not less than 10."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "SQL",
                "slug": "sql"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}