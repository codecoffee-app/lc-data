{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 14519,
            "title": "Evaluate Boolean Expression",
            "titleSlug": "evaluate-boolean-expression_2181287",
            "content": "<pre><code>Table Variables:\n\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| name          | varchar |\n| value         | int     |\n+---------------+---------+\nname is the primary key for this table.\nThis table contains the stored variables and their values.\n\n\nTable Expressions:\n\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| left_operand  | varchar |\n| operator      | enum    |\n| right_operand | varchar |\n+---------------+---------+\n(left_operand, operator, right_operand) is the primary key for this table.\nThis table contains a boolean expression that should be evaluated.\noperator is an enum that takes one of the values (&#39;&lt;&#39;, &#39;&gt;&#39;, &#39;=&#39;)\nThe values of left_operand and right_operand are guaranteed to be in the Variables table.\n\n\nWrite an SQL query to evaluate the boolean expressions in Expressions table.\n\nReturn the result table in any order.\n\nThe query result format is in the following example.\n\nVariables table:\n+------+-------+\n| name | value |\n+------+-------+\n| x    | 66    |\n| y    | 77    |\n+------+-------+\n\nExpressions table:\n+--------------+----------+---------------+\n| left_operand | operator | right_operand |\n+--------------+----------+---------------+\n| x            | &gt;        | y             |\n| x            | &lt;        | y             |\n| x            | =        | y             |\n| y            | &gt;        | x             |\n| y            | &lt;        | x             |\n| x            | =        | x             |\n+--------------+----------+---------------+\n\nResult table:\n+--------------+----------+---------------+-------+\n| left_operand | operator | right_operand | value |\n+--------------+----------+---------------+-------+\n| x            | &gt;        | y             | false |\n| x            | &lt;        | y             | true  |\n| x            | =        | y             | false |\n| y            | &gt;        | x             | true  |\n| y            | &lt;        | x             | false |\n| x            | =        | x             | true  |\n+--------------+----------+---------------+-------+\nAs shown, you need find the value of each boolean exprssion in the table using the variables table.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": -8,
            "dislikes": "NA",
            "rephrased": {
                "body": "You are given two tables, `Variables` and `Expressions`. The `Variables` table stores variable names and their integer values. The `Expressions` table stores boolean expressions consisting of a left operand, an operator, and a right operand. Both operands are guaranteed to exist as variable names in the `Variables` table. The operator is an enum taking values '<', '>', or '='.\n\nYour task is to write an SQL query to evaluate each boolean expression in the `Expressions` table using the values from the `Variables` table. The result should include the original expression components (left_operand, operator, right_operand) along with a boolean `value` indicating whether the expression is true or false.  Return the result table in any order.",
                "constraints": [
                    "name is the primary key for the Variables table.",
                    "(left_operand, operator, right_operand) is the primary key for the Expressions table.",
                    "Values of left_operand and right_operand in Expressions table are guaranteed to be present in the Variables table."
                ],
                "testcases": [
                    {
                        "input": "Variables table:\n+------+-------+\n| name | value |\n+------+-------+\n| x    | 66    |\n| y    | 77    |\n+------+-------+\n\nExpressions table:\n+--------------+----------+---------------+------------+\n| left_operand | operator | right_operand |\n+--------------+----------+---------------+------------+\n| x            | >        | y             |\n| x            | <        | y             |\n| x            | =        | y             |\n| y            | >        | x             |\n| y            | <        | x             |\n| x            | =        | x             |\n+--------------+----------+---------------+------------+",
                        "output": "+--------------+----------+---------------+-------+\n| left_operand | operator | right_operand | value |\n+--------------+----------+---------------+-------+\n| x            | >        | y             | false |\n| x            | <        | y             | true  |\n| x            | =        | y             | false |\n| y            | >        | x             | true  |\n| y            | <        | x             | false |\n| x            | =        | x             | true  |\n+--------------+----------+---------------+-------+",
                        "explanation": "The example demonstrates the evaluation of each expression based on the values of 'x' and 'y' from the Variables table."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "SQL",
                "slug": "sql"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}