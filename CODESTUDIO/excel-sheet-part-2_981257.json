{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9229,
            "title": "Excel Sheet | Part-2",
            "titleSlug": "excel-sheet-part-2_981257",
            "content": "<h4 id=\"you-are-given-a-string-str-representing-the-column-title-in-an-excel-sheet-you-need-to-find-its-corresponding-column-number\">You are given a string STR representing the column title in an Excel Sheet. You need to find its corresponding column number.</h4>\n\n<h4 id=\"for-example-a-corresponds-to-1-b-to-2-c-to-3-z-to-26-aa-to-27-and-so-on\">For example: A corresponds to 1, B to 2, C to 3, \u2026 , Z to 26, AA to 27, .. and so on.</h4>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains a single integer T, representing the number of test cases or queries to be run. \n\nThen the T test cases follow.\n\nThe first and only line of each test case contains a string STR denoting the column title. It is guaranteed that all the characters would be capital English alphabets.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, you need to return the corresponding excel column number of STR.\n\nThe output of each query must be printed in a new line.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You are not required to print the expected output, it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 \u2264 T \u2264 50\n1 \u2264 |STR| \u2264 12\n\nwhere &#39;T&#39; denotes number of testcases, and |STR| denotes the length of the string.\n\nTime Limit : 1 sec \n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>3\nA\nAB\nF\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>1\n28\n6\n</code></pre>\n\n<h5 id=\"explanation-of-input-1\">Explanation of Input 1:</h5>\n\n<pre><code>The first test case, STR = \u201cA\u201d. This corresponds to column number 1.\n\nThe second test case, STR = \u201cAB\u201d. This corresponds to column number 28.\n\nThe third test case, STR = \u201cF\u201d. This corresponds to column number 6.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>3\nAZ\nCOD\nZZZ\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2</h5>\n\n<pre><code>52\n2422\n18278\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 211,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string `str` representing an Excel column title, convert it to its corresponding column number.  The mapping is A=1, B=2, ..., Z=26, AA=27, AB=28, and so on. Implement the `titleToNumber` function to achieve this.",
                "constraints": [
                    "1 \u2264 T \u2264 50 (Number of test cases)",
                    "1 \u2264 |STR| \u2264 12 (Length of the input string)",
                    "The input string `str` will only contain uppercase English alphabets."
                ],
                "testcases": [
                    {
                        "input": "str = \"A\"",
                        "output": "1",
                        "explanation": "The column title 'A' corresponds to the column number 1."
                    },
                    {
                        "input": "str = \"AB\"",
                        "output": "28",
                        "explanation": "The column title 'AB' corresponds to the column number 28 (26 * 1 + 2)."
                    },
                    {
                        "input": "str = \"F\"",
                        "output": "6",
                        "explanation": "The column title 'F' corresponds to the column number 6."
                    },
                    {
                        "input": "str = \"AZ\"",
                        "output": "52",
                        "explanation": "The column title 'AZ' corresponds to the column number 52 (26 * 1 + 26)."
                    },
                    {
                        "input": "str = \"COD\"",
                        "output": "2422",
                        "explanation": "The column title 'COD' corresponds to the column number 2422 (26*26*3 + 26*15 + 4)."
                    },
                    {
                        "input": "str = \"ZZZ\"",
                        "output": "18278",
                        "explanation": "The column title 'ZZZ' corresponds to the column number 18278 (26*26*26 + 26*26*1 + 26*1*1)."
                    },
                    {
                        "input": "str = \"BA\"",
                        "output": "53",
                        "explanation": "The column title 'BA' corresponds to the column number 53 (26 * 2 + 1)."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you relate this to base conversion of numbers?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "cpp",
                "full_func": "/*\r\n    Time Complexity - O(N)\r\n    Space Complexity - O(1)\r\n\r\n    where N is the length of the string.\r\n*/\r\n\r\nlong long titleToNumber(string str) {\r\n    long long titleNumber = 0;\r\n\r\n    for (int i = 0; i < str.size(); ++i) {\r\n        titleNumber *= 26;\r\n        titleNumber += str[i] - 'A' + 1;\r\n    }\r\n\r\n    return titleNumber;\r\n}",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "java",
                "full_func": "/*\n    Time Complexity - O(N)\n    Space Complexity - O(1)\n\n    where N is the length of the string.\n*/\n\npublic class Solution {\n    public static long titleToNumber(String str)\n    {\n        long titleNumber = 0;\n\n        for (int i = 0; i < str.length(); i++) {\n            titleNumber *= 26;\n            titleNumber += str.charAt(i) - 'A' + 1;\n        }\n\n        return titleNumber;\n    }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "python",
                "full_func": "'''\r\n\r\n    Time Complexity - O(N)\r\n    Space Complexity - O(1)\r\n\r\n    where N is the length of the string.\r\n'''\r\n\r\ndef titleToNumber(stringStr):\r\n    titleNumber = 0\r\n\r\n    for i in range(len(stringStr)):\r\n        titleNumber *= 26\r\n        titleNumber += ord(stringStr[i])-ord('A')+1\r\n\r\n    return titleNumber\r\n",
                "lang_text": "py"
            }
        },
        "platform": "CODESTUDIO"
    }
}