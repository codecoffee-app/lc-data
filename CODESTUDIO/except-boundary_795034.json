{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 7889,
            "title": "Except Boundary",
            "titleSlug": "except-boundary_795034",
            "content": "<h4 id=\"given-a-binary-tree-find-and-return-the-sum-of-all-the-internal-nodes-internal-nodes-consist-of-all-the-nodes-which-are-not-at-the-boundary\">Given a Binary Tree, find and return the sum of all the internal nodes. Internal nodes consist of all the nodes which are not at the boundary.</h4>\n\n<h5 id=\"example\">Example:</h5>\n\n<pre><code> Input:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/tree2-5139.png\" alt=\"Tree Image\"></p>\n\n<pre><code>Output:\n\nThe internal Node is only 5, and the other nodes are boundary nodes.\nSum: 5\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains an Integer &#39;T&#39; which denotes the number of test cases or queries to be run. Then the test cases follow.\n\nThe first line of input contains the elements of the tree in the level order form separated by a single space.\n\nIf any node does not have left or right child, take -1 in its place. Refer to the example below.\n\nExample:\n\nElements are in the level order form. The input consists of values of nodes separated by a single space in a single line. In case a node is null, we take -1 in its place.\n\nFor example, the input for the tree depicted in the below image would be :\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/tree2-5139.png\" alt=\"Tree image\"></p>\n\n<pre><code>1\n2 3\n4 -1 5 6\n-1 7 -1 -1 -1 -1\n-1 -1\n\nExplanation :\nLevel 1 :\nThe root node of the tree is 1\n\nLevel 2 :\nLeft child of 1 = 2\nRight child of 1 = 3\n\nLevel 3 :\nLeft child of 2 = 4\nRight child of 2 = null (-1)\nLeft child of 3 = 5\nRight child of 3 = 6\n\nLevel 4 :\nLeft child of 4 = null (-1)\nRight child of 4 = 7\nLeft child of 5 = null (-1)\nRight child of 5 = null (-1)\nLeft child of 6 = null (-1)\nRight child of 6 = null (-1)\n\nLevel 5 :\nLeft child of 7 = null (-1)\nRight child of 7 = null (-1)\n\nThe first not-null node (of the previous level) is treated as the parent of the first two nodes of the current level. The second not-null node (of the previous level) is treated as the parent node for the next two nodes of the current level and so on.\n\nThe input ends when all nodes at the last level are null (-1).\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>The above format was just to provide clarity on how the input is formed for a given tree. \n\nThe sequence will be put together in a single line separated by a single space. Hence, for the above-depicted tree, the input will be given as:\n\n1 2 3 4 -1 5 6 -1 7 -1 -1 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, return the sum of internal nodes.\n\nOutput for every test case will be denoted in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything; It has already been taken care of.\n</code></pre>\n\n<h5 id=\"constraint\">Constraint :</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= N &lt;= 1000\n-10^6 &lt;= DATA &lt;= 10^6\n\nTime Limit : 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n1 2 3 4 5 6 7 9 -1 -1 1 -1 1 -1 1 -1 -1 -1 -1 -1 -1 -1 -1\n1 2 3 4 10 12 7 8 9 10 11 12 13 14 15  -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>11\n22\n</code></pre>\n\n<h5 id=\"explanation-of-the-sample-input1\">Explanation of the Sample Input1:</h5>\n\n<pre><code>Here we have 2 test cases.\n\nTest Case 1: For the given tree, node 5 and 6 are not the boundary nodes, hence they are internal nodes of the binary tree. Therefore the sum of internal nodes is 11.\n</code></pre>\n\n<p><img src=\"https://ninjasfiles.s3.amazonaws.com/asset_0000000000000452_1622496440_except-boundary-problem-example.png\" alt=\"Test case\"></p>\n\n<pre><code>Test Case 2: For the tree in the above image, nodes 10 and 12 consists of the internal node, other nodes represent the boundary of the binary tree. Hence the sum would be 10+12=22\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 8,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a binary tree represented by its root node, calculate the sum of all internal nodes. An internal node is defined as a node that is not a boundary node (i.e., not a leaf node or the root node if it only has one child).",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= N <= 1000",
                    "-10^6 <= DATA <= 10^6"
                ],
                "testcases": [
                    {
                        "input": "root = [1, 2, 3, 4, -1, 5, 6, -1, 7, -1, -1, -1, -1, -1, -1]",
                        "output": "5",
                        "explanation": "The internal Node is only 5, and the other nodes are boundary nodes. Sum: 5"
                    },
                    {
                        "input": "root = [1, 2, 3, 4, 10, 12, 7, 8, 9, 10, 11, 12, 13, 14, 15, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]",
                        "output": "22",
                        "explanation": "The nodes 10 and 12 consists of the internal nodes. Therefore the sum of internal nodes is 10 + 12 = 22."
                    },
                    {
                        "input": "root = [1]",
                        "output": "0",
                        "explanation": "The tree consists of only the root node which is considered a boundary node.  Therefore, there are no internal nodes, and the sum is 0."
                    },
                    {
                        "input": "root = [1, 2, -1]",
                        "output": "0",
                        "explanation": "The node 2 is a boundary node and 1 is root.  Therefore, there are no internal nodes, and the sum is 0."
                    },
                    {
                        "input": "root = [1, -1, 2]",
                        "output": "0",
                        "explanation": "The node 2 is a boundary node and 1 is root.  Therefore, there are no internal nodes, and the sum is 0."
                    },
                    {
                        "input": "root = [1, 2, 3, -1, -1, -1, -1]",
                        "output": "0",
                        "explanation": "The nodes 2 and 3 are boundary nodes and 1 is root. Therefore, there are no internal nodes, and the sum is 0."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Find the sum of boundary nodes and subtract it with the sum of all the nodes of the binary tree.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Binary Trees",
                "slug": "binary-trees"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Trees",
                "slug": "trees"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}