{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12464,
            "title": "Fastest Ninja",
            "titleSlug": "fastest-ninja_1461492",
            "content": "<h4 id=\"after-the-pandemic-ended-alice-and-bob-finally-got-the-chance-to-play-some-outdoor-games-they-decided-to-play-fastest-ninja-along-with-their-n-other-friends-the-game-is-as-follows\">After the pandemic ended, Alice and Bob finally got the chance to play some outdoor games. They decided to play \u201cFastest Ninja\u201d along with their \u2018N\u2019 other friends. The game is as follows,</h4>\n\n<pre><code>1. Bob and Alice are standing at coordinates (0, 0) and (\u2018X\u2019, \u2018Y\u2019), respectively, in the X-Y plane.\n\n2. All the other \u2018N\u2019 friends are standing at some coordinates in the X-Y plane. The starting positions of all the \u2018N\u2019 friends are given as a 2 - Dimensional array of integers \u2018positions\u2019, where \u2018position[i]\u2019 denotes the starting position of the i-th friend.\n\n3. In one move, Bob and his \u2018N\u2019 friends can independently choose to do one of the following two things:\n\n    1. Stay at their current position.\n\n    2. Move to any of the four neighboring positions, i.e., for any (x, y) move to north(x, y + 1), south(x, y - 1), east(x + 1, y), or west(x - 1, y).\n</code></pre>\n\n<h4 id=\"to-win-the-game-bob-has-to-reach-alice-before-any-of-his-n-friends-catches-him-as-bob-s-friend-your-task-is-to-tell-him-whether-he-can-win-the-game-or-not\">To win the game, Bob has to reach Alice before any of his \u2018N\u2019 friends catches him. As Bob\u2019s friend, your task is to tell him whether he can win the game or not.</h4>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>All the coordinates are integral coordinates on the X-Y plane\n\nThere can be multiple friends with the same starting position(including Alice and Bob).\n\nBob and his \u2018N\u2019 friends move simultaneously.\n\nBob loses if he reaches any coordinate(including Alice\u2019s position) at the same time as any of his \u2018N\u2019 friends.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format</h5>\n\n<pre><code>The first line of input contains an integer &#39;T&#39; representing the number of test cases.\n\nThe first line of each test case contains a single integer, \u2018N\u2019, where \u2018N\u2019 denotes the number of other friends of Alice and Bob.\n\nThe second line of each test case contains two space-separated integers, \u2018X\u2019 and \u2018Y\u2019, where (\u2018X\u2019, \u2018Y\u2019) denote Alice\u2019s position.\n\nThe next \u2018N\u2019 lines of each test case contain two space-separated integers, \u2018position[i][0]\u2019  and \u2018position[i][1]\u2019, where (\u2018position[i][0]\u2019, \u2018position[i][1]\u2019) denotes the starting position of the i-th friend.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print 1 if Bob can win the game, else print 0.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code> You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= N &lt;= 5000\n-10 ^ 7 &lt;= X, Y &lt;= 10 ^ 7\n-10 ^ 7 &lt;= position[i][0], position[i][1] &lt;= 10 ^ 7\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n3\n2 2\n0 1\n1 0\n1 1\n4\n3 0\n-1 0\n-5 2\n5 5\n0 1      \n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>0\n1\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1:</h5>\n\n<pre><code>Test Case 1 :  \n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/image3-9127.png\" alt=\"1\"></p>\n\n<pre><code>Starting positions of Bob and his three friends are marked in orange and red color, respectively. The position of Alice is marked with green color.\n\nBob cannot win, as his friend at (1, 1) can reach Alice before him.\n\nTest Case 2 :     \n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/image1-9128.png\" alt=\"1\">   </p>\n\n<pre><code>Starting positions of Bob and his four friends are marked in orange and red color, respectively. The position of Alice is marked with green color.\n\nNo one can reach Alice before Bob. Hence he will win the game.\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2:</h4>\n\n<pre><code>1\n4\n0 0\n1 -1\n1 2\n3 -4\n0 1\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2:</h4>\n\n<pre><code>1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 9,
            "dislikes": "NA",
            "rephrased": {
                "body": "Alice and Bob are playing a game called \"Fastest Ninja\" with their N friends. Bob starts at (0, 0) and Alice is at (X, Y). The N friends have initial positions given by the 'position' array.  Everyone can move simultaneously to neighboring cells (north, south, east, west) or stay in place in each turn. Determine if Bob can reach Alice's position before any of his friends do. Bob loses if he arrives at Alice's position (or any other position) at the same time as any of his friends.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= N <= 5000",
                    "-10 ^ 7 <= X, Y <= 10 ^ 7",
                    "-10 ^ 7 <= position[i][0], position[i][1] <= 10 ^ 7",
                    "Bob and his \u2018N\u2019 friends move simultaneously."
                ],
                "testcases": [
                    {
                        "input": "n = 3, x = 2, y = 2, position = [[0, 1], [1, 0], [1, 1]]",
                        "output": "0",
                        "explanation": "Bob cannot win, as his friend at (1, 1) can reach Alice before him."
                    },
                    {
                        "input": "n = 4, x = 3, y = 0, position = [[-1, 0], [-5, 2], [5, 5], [0, 1]]",
                        "output": "1",
                        "explanation": "No one can reach Alice before Bob. Hence he will win the game."
                    },
                    {
                        "input": "n = 4, x = 0, y = 0, position = [[1, -1], [1, 2], [3, -4], [0, 1]]",
                        "output": "0",
                        "explanation": "Here the friends are faster than Bob so bob cannot win."
                    },
                    {
                        "input": "n = 4, x = 0, y = 0, position = [[100, 1], [1, 2], [3, -4], [0, 1]]",
                        "output": "0",
                        "explanation": "Here the friends are faster than Bob so bob cannot win."
                    },
                    {
                        "input": "n = 4, x = 100, y = 100, position = [[1, -1], [1, 2], [3, -4], [0, 1]]",
                        "output": "1",
                        "explanation": "Bob is much closer than all other friends."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to think about the scenarios when Bob cannot win the game. What happens if any of Bob\u2019s \u2018N\u2019&nbsp; friends can reach Alice before him?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}