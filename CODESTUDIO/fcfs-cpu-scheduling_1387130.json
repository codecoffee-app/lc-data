{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 11853,
            "title": "FCFS CPU Scheduling",
            "titleSlug": "fcfs-cpu-scheduling_1387130",
            "content": "<h4 id=\"you-are-given-the-n-processes-with-their-burst-times-and-the-arrival-time-for-each-process-is-0\">You are given the \u2018N\u2019 processes with their \u201cburst times\u201d, and the \u201carrival time\u201d for each process is 0.</h4>\n\n<h4 id=\"your-task-is-to-find-the-waiting-time-and-the-turn-around-time-of-each-process-using-the-fcfs-cpu-scheduling-algorithm\">Your task is to find the \u201cwaiting time\u201d and the \u201cturn-around time\u201d of each process using the \u2018FCFS CPU Scheduling\u2019 algorithm.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>The process that comes first will be executed first. \n\nAssume all the process has arrived at same time and you have to consider the process with low process id to have arrived first.\n\nThe next process starts only after the previous gets fully executed.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains an integer \u2018T\u2019, which denotes the number of test cases to be run. Then, the T test cases follow. \n\nThe first line of each test case contains a single positive integer, \u2018N\u2019, denoting the number of Processes.\n\nThe second line of each test case contains \u2018N\u2019 space-separated non-negative integers denoting the \u2018burst\u2019 time of each process.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print the two lines.\n\nThe first will contain the \u201cwaiting time\u201d of each process separated by the space in the same order in which they are input.\n\nThe second will contain the \u201cturn-around time\u201d of each process separated by the space in the same order in which they are input.\n\nOutput for each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 10^6\n1 &lt;= BURST[i], ARRIVAL[i]&lt;= 1000\n\nWhere \u2018T\u2019 denotes the number of test cases, \u2018N\u2019 denotes the number of processes, \u2018BURST\u2019 represents the \u2018burst time\u2019 of each process, and \u2018ARRIVAL\u2019 represents the \u2018arrival time\u2019 of each process.   \n\nTime Limit: 1sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1\n5\n4 6 7 2 1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>0 4 10 17 19 \n4 10 17 19 20\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1:</h5>\n\n<pre><code>For first test case, as per FCFS algorithm process with get completed line wise. So, 1 process get start at 0 and gets completed at 4 and similarly it goes on till last process. Thus, the waiting time of all process are [ 0, 4, 10, 17, 19] and Finishing time are [ 4, 10, 17, 19, 20].\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\n1\n3\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>0\n3\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation For Sample Input 2:</h5>\n\n<pre><code>For first test case, We have only one process, so it starts at time 0 and ends at time 3.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 6,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given 'N' processes with their burst times, assuming all processes arrive at time 0, calculate the waiting time and turnaround time for each process using the First-Come, First-Served (FCFS) CPU scheduling algorithm. The process with the lower process ID is considered to have arrived earlier. The next process starts execution only after the previous one completes.",
                "constraints": [
                    "1 <= T <= 10 (where T is the number of test cases)",
                    "1 <= N <= 10^6 (where N is the number of processes)",
                    "1 <= BURST[i] <= 1000 (where BURST[i] is the burst time of the i-th process)"
                ],
                "testcases": [
                    {
                        "input": "n = 5, burstTime = [4, 6, 7, 2, 1]",
                        "output": "0 4 10 17 19 \n4 10 17 19 20",
                        "explanation": "The first process starts at 0 and completes at 4.  The second process waits for 4 units and completes at 10.  The third process waits for 10 units and completes at 17, and so on.  Waiting times are [0, 4, 10, 17, 19], and turnaround times are [4, 10, 17, 19, 20]."
                    },
                    {
                        "input": "n = 1, burstTime = [3]",
                        "output": "0\n3",
                        "explanation": "With only one process, it starts immediately at time 0 and completes at time 3.  Waiting time is 0, and turnaround time is 3."
                    },
                    {
                        "input": "n = 3, burstTime = [10, 5, 8]",
                        "output": "0 10 15\n10 15 23",
                        "explanation": "Process 1 starts at 0, finishes at 10. Process 2 starts at 10, finishes at 15. Process 3 starts at 15, finishes at 23.  Waiting times are [0, 10, 15], and turnaround times are [10, 15, 23]."
                    },
                    {
                        "input": "n = 4, burstTime = [1, 2, 3, 4]",
                        "output": "0 1 3 6\n1 3 6 10",
                        "explanation": "Waiting times are [0, 1, 3, 6], and turnaround times are [1, 3, 6, 10]."
                    },
                    {
                        "input": "n = 2, burstTime = [5, 2]",
                        "output": "0 5\n5 7",
                        "explanation": "The first process starts at 0 and completes at 5. The second process starts at 5 and completes at 7. Waiting times are [0, 5] and turnaround times are [5, 7]."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to build an algorithm.</p>"
        ],
        "relatedTopics": [],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}