{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 11881,
            "title": "FCFS Scheduling Algorithm with Different Arrival Time",
            "titleSlug": "fcfs-scheduling-algorithm-with-different-arrival-time_1387176",
            "content": "<h4 id=\"there-are-n-numbers-of-processes-with-process-id-0-to-n-1-you-are-given-two-arrays-arrival-and-burst-representing-the-arrival-time-and-burst-time-of-each-of-these-processes\">There are \u2018N\u2019 numbers of processes with process id \u20180\u2019 to \u2018N - 1\u2019. You are given two arrays \u2018arrival\u2019 and \u2018burst\u2019, representing the arrival time and burst time of each of these processes.</h4>\n\n<h4 id=\"if-the-cpu-uses-the-fcfs-process-scheduling-algorithm-you-need-to-find-waiting-time-turnaround-time-and-completion-time-for-each-process-finally-find-the-average-waiting-time-and-average-turnaround-time-for-the-given-processes\">If the CPU uses the FCFS process scheduling algorithm, you need to find waiting time, turnaround time, and completion time for each process. Finally, find the average waiting time and average turnaround time for the given processes.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>1. All the processes will have different arrival times.\n\n2. In the FCFS scheduling algorithm, processes that come first ( i.e have lesser arrival time) will be executed first.\n\n3. Turn around time of a Process is the time difference between arrival time and the time at which the process completed.\n\n4. The waiting time of a process is the total time, the process is waiting, i.e. difference between turnaround time and burst time.\n\n5. Completion time is the time at which a process completes.\n</code></pre>\n\n<h4 id=\"example\">Example:</h4>\n\n<pre><code>Let there be 4 Processes with the following arrival time and burst time.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/1-8894.png\" alt=\"1\"></p>\n\n<pre><code>Wait time, turnaround, and completion time for each process are:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/2-8895.png\" alt=\"1\"></p>\n\n<h4 id=\"input-format\">Input format:</h4>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases. The description of \u2018T\u2019 test cases follows\n\nThe first line of each test case contains an integer \u2018N\u2019 representing the number of processes.\n\nThe second line of each test case contains \u2018N\u2019 space-separated integers, where \u2018i-th\u2019 integer represents the arrival time for the \u2018i-th\u2019 processes.\n\nThe last line of the test cases contains \u2018N\u2019 space-separated integers, where \u2018i-th\u2019 integer represents the burst time for the \u2018i-th\u2019 processes.\n</code></pre>\n\n<h4 id=\"output-format\">Output format :</h4>\n\n<pre><code>For each test case, print four lines.\n\nIn the first line, print \u2018N\u2019 space-separated integers, where \u2018i-th\u2019 integer represents the waiting time of the \u2018i-th\u2019 process.\n\nIn the second line of each test case, print \u2018N\u2019 space-separated integers, where \u2018i -th\u2019 integer represents the turnaround time of \u2018i-th\u2019 process.\n\nIn the third line of each test case, print \u2018N\u2019 space-separated integers, where \u2018i -th\u2019 integer represents the completion time of \u2018i-th\u2019 process.\n\nIn the last line print two space-separated integers, representing the floor value of average waiting time and the average turnaround time respectively. \n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints:</h4>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= N &lt;= 5000\n0 &lt;= arrival[i], burst[i] &lt;= 10 ^ 9\n\nWhere \u2018T\u2019 is the total number of test cases, \u2018N\u2019 is the number of processes, and \u2018arrival[i]\u2019,  \u2018burst[i]\u2019 represents the arrival time and burst time of the \u2018i-th\u2019 processes.\n\nTime Limit: 1 sec\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1:</h4>\n\n<pre><code>2\n5\n0 3 5 4 6\n2 3 4 2 2\n3\n1 3 6\n1 2 4\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1:</h4>\n\n<pre><code>0 0 3 2 6\n2 3 7 4 8\n2 6 12 8 14\n2 4\n0 0 0\n1 2 4\n2 5 10\n0 2\n</code></pre>\n\n<h4 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1:</h4>\n\n<pre><code>Test case 1:\nThe below table shows the waiting time, turnaround time, and completion time for each process\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/3-8896.png\" alt=\"1\"></p>\n\n<pre><code>Average wait time = ( 0 + 0 + 3 + 2 + 6) / 5 = 2.2\nAverage turnaround time = (2 + 3 + 7 + 4 +8) / 5 = 4.8\n\nTest case 2:\nThe below table shows the waiting time, turnaround time, and completion time for each process\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/4-8897.png\" alt=\"1\"></p>\n\n<pre><code>The average waiting time is 0.\nAverage turnaround time is (1 + 2 + 4) / 3 = 2.3\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2:</h4>\n\n<pre><code>1\n1\n2\n5\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2:</h4>\n\n<pre><code>0\n5\n7\n0 5\n</code></pre>\n\n<h4 id=\"explanation-for-sample-input-2\">Explanation For Sample Input 2:</h4>\n\n<pre><code>Test case 1:\nAs there is only one process, so its waiting time will be 0, and the turnaround time will be the same as the burst time i.e. 5, and the completion time will be arrival time + burst time i.e 2 + 5 = 7.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -9,
            "dislikes": "NA",
            "rephrased": {
                "body": "You are given the arrival time and burst time for 'N' processes, labeled from 0 to 'N-1'. Implement the First-Come, First-Served (FCFS) scheduling algorithm to determine the waiting time, turnaround time, and completion time for each process. Calculate and return the average waiting time and average turnaround time.",
                "constraints": [
                    "1 <= T <= 5 (Number of test cases)",
                    "1 <= N <= 5000 (Number of processes)",
                    "0 <= arrival[i], burst[i] <= 10^9 (Arrival and burst times)",
                    "All processes have different arrival times.",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "5\n0 3 5 4 6\n2 3 4 2 2",
                        "output": "0 0 3 2 6\n2 3 7 4 8\n2 6 12 8 14\n2 4",
                        "explanation": "For 5 processes with arrival times [0, 3, 5, 4, 6] and burst times [2, 3, 4, 2, 2]:\n- Waiting times are [0, 0, 3, 2, 6]\n- Turnaround times are [2, 3, 7, 4, 8]\n- Completion times are [2, 6, 12, 8, 14]\n- Average waiting time is 2 and Average turnaround time is 4."
                    },
                    {
                        "input": "3\n1 3 6\n1 2 4",
                        "output": "0 0 0\n1 2 4\n2 5 10\n0 2",
                        "explanation": "For 3 processes with arrival times [1, 3, 6] and burst times [1, 2, 4]:\n- Waiting times are [0, 0, 0]\n- Turnaround times are [1, 2, 4]\n- Completion times are [2, 5, 10]\n- Average waiting time is 0 and Average turnaround time is 2."
                    },
                    {
                        "input": "1\n1\n2\n5",
                        "output": "0\n5\n7\n0 5",
                        "explanation": "For 1 process with arrival time 2 and burst time 5:\n- Waiting time is [0]\n- Turnaround time is [5]\n- Completion time is [7]\n- Average waiting time is 0 and Average turnaround time is 5."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to form a constructive algorithm.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}