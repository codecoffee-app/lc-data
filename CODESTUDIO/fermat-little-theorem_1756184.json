{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 13643,
            "title": "Fermat Little Theorem",
            "titleSlug": "fermat-little-theorem_1756184",
            "content": "<h4 id=\"you-are-given-two-integers-n-and-r-and-a-prime-number-p-your-task-is-to-find-ncr-p-where-ncr-can-be-calculated-as-n-r-n-r\">You are given two integers &#39;n&#39; and &#39;r&#39; and a prime number &#39;p&#39;. Your task is to find (nCr) % p where nCr can be calculated as n! / (r! * (n - r)!).</h4>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>N!  =  1 * 2 * 3 *... N\n</code></pre>\n\n<h5 id=\"input-format\">Input format :</h5>\n\n<pre><code>The first line of input contains a single integer &#39;T&#39;, representing the number of test cases. \n\nThe first line of each test case contains three space-separated integers &#39;n&#39;, &#39;r&#39;, and &#39;p&#39;.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case, print a single line containing an integer representing the value of (nCr) % p.\n\nThe output of each test case will be printed on a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You don&#39;t need to input or print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 5 \n1 &lt;= n, r, p &lt;= 5 * 10 ^ 2\np is prime number.\n\nTime limit: 1 sec.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2 \n5 2 11\n4 3 13\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>10\n4\n</code></pre>\n\n<h5 id=\"explanation-for-sample-output-1\">Explanation for Sample Output 1:</h5>\n\n<pre><code>In test case 1, \nn = 5, r = 2, and p = 11\nn C r = 5 C 2 = (5 * 4) / (2!) = 10\nn C r % p = 10 % 11 = 10. \nSo the answer will be 10.\n\nIn test case 2,\nn = 4, r = 3, and p = 13 \nn C r = 4 C 3 = 4 C 1 = 4 \nn C r % p = 4 % 13 = 4. \nSo the answer will be 4.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n5 2 17\n10 2 13\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>10\n6\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -9,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two integers 'n' and 'r', and a prime number 'p', calculate (nCr) % p. nCr is defined as n! / (r! * (n - r)!). Note that N! = 1 * 2 * 3 * ... * N.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= n, r, p <= 5 * 10 ^ 2",
                    "p is a prime number",
                    "Time limit: 1 sec."
                ],
                "testcases": [
                    {
                        "input": "5 2 11",
                        "output": "10",
                        "explanation": "For n = 5, r = 2, and p = 11, nCr = (5 * 4) / (2!) = 10. Therefore, (nCr) % p = 10 % 11 = 10."
                    },
                    {
                        "input": "4 3 13",
                        "output": "4",
                        "explanation": "For n = 4, r = 3, and p = 13, nCr = 4C3 = 4C1 = 4. Therefore, (nCr) % p = 4 % 13 = 4."
                    },
                    {
                        "input": "5 2 17",
                        "output": "10",
                        "explanation": null
                    },
                    {
                        "input": "10 2 13",
                        "output": "6",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to find the inverse modulo and then apply dynamic programming to calculate the binomial expression. Try to find inverse using Fermat little theorem.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}