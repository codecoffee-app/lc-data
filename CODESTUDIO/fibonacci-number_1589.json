{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 977,
            "title": "Fibonacci Number",
            "titleSlug": "fibonacci-number_1589",
            "content": "<h4 id=\"create-a-function-that-determines-whether-a-given-number-n-belongs-to-the-fibonacci-sequence-if-n-is-found-in-the-fibonacci-sequence-the-function-should-return-true-otherwise-it-should-return-false\">Create a function that determines whether a given number N belongs to the Fibonacci sequence. If N is found in the Fibonacci sequence, the function should return true; otherwise, it should return false.</h4>\n\n<p><br></p>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>Integer N\n</code></pre>\n\n<h5 id=\"output-format\">Output  Format :</h5>\n\n<pre><code>true or false\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>0 &lt;= n &lt;= 10^4\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>5\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>true\n</code></pre>\n\n<h5 id=\"explanation\">Explanation :</h5>\n\n<pre><code>Fibonacci sequence begins 0, 1, 1, 2, 3, 5, ... and so on. Since 5 appears in the sequence.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>14\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>false    \n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 17,
            "dislikes": "NA",
            "rephrased": {
                "body": "Write a function that efficiently determines if a given integer `n` is a member of the Fibonacci sequence.",
                "constraints": [
                    "0 <= n <= 10^4"
                ],
                "testcases": [
                    {
                        "input": "n = 5",
                        "output": "true",
                        "explanation": "The Fibonacci sequence is 0, 1, 1, 2, 3, 5, 8, ... Since 5 is in the sequence, the function returns true."
                    },
                    {
                        "input": "n = 14",
                        "output": "false",
                        "explanation": "The Fibonacci sequence is 0, 1, 1, 2, 3, 5, 8, 13, 21, ... Since 14 is not in the sequence, the function returns false."
                    },
                    {
                        "input": "n = 0",
                        "output": "true",
                        "explanation": "The Fibonacci sequence starts with 0, so the function should return true."
                    },
                    {
                        "input": "n = 1",
                        "output": "true",
                        "explanation": "The Fibonacci sequence is 0, 1, 1, 2, 3, ... Since 1 appears in the sequence, return true."
                    },
                    {
                        "input": "n = 21",
                        "output": "true",
                        "explanation": "The Fibonacci sequence contains 21, so the function returns true."
                    },
                    {
                        "input": "n = 10000",
                        "output": "false",
                        "explanation": "10000 is not a Fibonacci number.  A correct implementation should efficiently determine this without calculating the entire sequence."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}