{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 14941,
            "title": "Fill the matrix ",
            "titleSlug": "fill-the-matrix_2319020",
            "content": "<h4 id=\"you-are-given-an-integer-n-you-have-to-return-a-matrix-of-n-rows-and-n-columns-formed-from-integers-1-to-n-n-such-that-the-sum-of-each-row-column-and-two-diagonals-are-equal-if-it-s-not-possible-you-have-to-return-an-empty-array\">You are given an integer \u2018N\u2019. You have to return a matrix of \u2018N\u2019 rows and \u2018N\u2019 columns formed from integers 1 to N*N, such that the sum of each row, column, and two diagonals are equal. If it\u2019s not possible, you have to return an empty array.</h4>\n\n<h5 id=\"for-example\">For Example:</h5>\n\n<pre><code> You are given \u2018N\u2019 = 3,  the matrix formed such that sum of rows, columns, and two diagonals are equal is\n[[8, 3, 4],\n [1, 5, 9]\n [6, 7, 2]]\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code> The first line of input contains the integer \u2018T\u2019 representing the number of test cases.\n\nThe first line of each test case contains the single integer \u2018N\u2019 representing the given integer.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print \u2018CORRECT\u2019 if the returned matrix is correct, print \u2018NULL\u2019 if it\u2019s impossible to form the matrix with the given number.\n\nPrint a separate line for each test case.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 1000\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n2\n3\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>NULL\nCORRECT\n</code></pre>\n\n<h5 id=\"explaination\">Explaination:</h5>\n\n<pre><code>For the first test case, N = 2, we have to make the matrix with 1 2 3 4, which is impossible with the given conditions; hence the answer is NULL.\n\nFor the second test case N = 3, one of the matrices formed such that the sum of rows, columns, and two diagonals are equal is\n[[8, 3, 4]\n [1, 5, 9]\n [6, 7, 2]]\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\n4\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>CORRECT\n</code></pre>\n\n<h5 id=\"explanation\">Explanation:</h5>\n\n<pre><code>For the test case n = 4, one of the matrices formed such that the sum of rows, columns, and two diagonals are equal is \n[[16, 2, 3, 13],\n [5, 11, 10, 8],\n [9, 7, 6, 12],\n [4, 14, 15, 1]]\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 1,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an integer 'N', construct an N x N matrix using integers from 1 to N*N, such that the sum of each row, column, and both diagonals are equal. If such a matrix cannot be formed, return an empty array.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 1000",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "2\n2\n3",
                        "output": "NULL\nCORRECT",
                        "explanation": "For N = 2, it's impossible to form a matrix with numbers 1, 2, 3, and 4 satisfying the required conditions.\n\nFor N = 3, a possible matrix is [[8, 3, 4], [1, 5, 9], [6, 7, 2]]. The sum of each row, column, and diagonal is 15."
                    },
                    {
                        "input": "1\n4",
                        "output": "CORRECT",
                        "explanation": "For N = 4, a possible matrix is [[16, 2, 3, 13], [5, 11, 10, 8], [9, 7, 6, 12], [4, 14, 15, 1]]. The sum of each row, column, and diagonal is 34."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to use backtracking.&nbsp;</p>",
            "<p>Try to build the matrix from the middle.&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Matrices (2D Arrays)",
                "slug": "matrices-(2d-arrays)"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}