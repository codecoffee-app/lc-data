{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12603,
            "title": "finalProblemOfweek",
            "titleSlug": "finalproblemofweek_1467108",
            "content": "<h4 id=\"an-encoded-string-s-is-given-to-find-and-write-the-decoded-string-to-a-tape-the-encoded-string-is-read-one-character-at-a-time-and-the-following-steps-are-taken\">An encoded string \u2018S\u2019 is given. To find and write the decoded string to a tape, the encoded string is read one character at a time, and the following steps are taken:</h4>\n\n<h4 id=\"if-the-character-read-is-a-letter-that-letter-is-written-onto-the-tape-if-the-character-read-is-a-digit-say-d-the-entire-current-tape-is-repeatedly-written-d-1-more-times-in-total\">If the character read is a letter, that letter is written onto the tape. If the character read is a digit (say \u2018D\u2019), the entire current tape is repeatedly written (D - 1) more times in total.</h4>\n\n<h4 id=\"now-for-some-encoded-string-s-and-an-index-k-1-find-and-return-the-k-th-letter-0-indexed-in-the-decoded-string\">Now, for some encoded string S and an index (K - 1), find and return the \u2018K-th\u2019 letter (0 indexed) in the decoded string.</h4>\n\n<h4 id=\"for-example\">For example:</h4>\n\n<pre><code>Given:- &#39;S&#39; = \u201ccodingninjas\u201d, \u2018K\u2019 = 5\n\nThe output will be &#39;n&#39;.\nSince the character at the kth index is S[4] = \u2018n\u2019.\n</code></pre>\n\n<h4 id=\"input-format\">Input format :</h4>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases.\n\nThe following \u2018T\u2019 lines contain a string \u2018S\u2019 and an integer \u2018K.\u2019\n</code></pre>\n\n<h4 id=\"output-format\">Output format :</h4>\n\n<pre><code>For each test case, print a single line containing a single character denoting the \u2018K-th\u2019 letter (0 indexed) in the decoded string.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints:</h4>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= |S| &lt;= 100\n1 &lt;= K &lt;= |S| * |S|\n\nWhere \u2018T\u2019 is the total number of test cases, and \u2018|S|\u2019 is the length of the string and \u2018K\u2019 is the number given.\n\nTime limit: 1 sec.\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1 :</h4>\n\n<pre><code>2\ncodingninjas 5\ncode2it 7\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1 :</h4>\n\n<pre><code>n \nd \n</code></pre>\n\n<h4 id=\"explanation-of-the-sample-input-1\">Explanation of the Sample Input 1:</h4>\n\n<pre><code>For the first test case :  \nThe output will be &#39;n&#39;.\nSince the character at the k\u2019th index is S[4] = \u2018n\u2019.\n\nFor the second test case : \nThe output will be \u2018d\u2019.\nSince the final string would be codecodeit.\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2 :</h4>\n\n<pre><code>2\npro3player4 12\nnoob2player 8\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2 :</h4>\n\n<pre><code>a\nb\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": -10,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an encoded string 'S', the decoding process involves reading the string character by character. If a character is a letter, it's appended to the decoded string. If a character is a digit 'D', the current decoded string is repeated 'D - 1' more times. The task is to find the K-th letter (0-indexed) in the fully decoded string.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= |S| <= 100",
                    "1 <= K <= |S| * |S|",
                    "T is the number of test cases.",
                    "|S| is the length of the string S.",
                    "K is the index of the desired character (1-indexed originally but needs to be treated as 0-indexed internally).",
                    "Time limit: 1 sec."
                ],
                "testcases": [
                    {
                        "input": "codingninjas 5",
                        "output": "n",
                        "explanation": "The 5th character (index 4) in 'codingninjas' is 'n'."
                    },
                    {
                        "input": "code2it 7",
                        "output": "d",
                        "explanation": "The decoded string is 'codecodeit'. The 7th character (index 6) is 'd'."
                    },
                    {
                        "input": "pro3player4 12",
                        "output": "a",
                        "explanation": "The decoded string is 'proproproplayerplayerplayerplayer'.  The 12th character (index 11) is 'a'."
                    },
                    {
                        "input": "noob2player 8",
                        "output": "b",
                        "explanation": "The decoded string is 'noobnoobplayer'. The 8th character (index 7) is 'b'."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can we traverse the string and change the length of the decoded string as and when needed?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Number Theory",
                "slug": "number-theory"
            },
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}