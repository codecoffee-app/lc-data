{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 1146,
            "title": "Find a Node in Linked List",
            "titleSlug": "find-a-node-in-linked-list_625049",
            "content": "<h4 id=\"you-have-been-given-a-singly-linked-list-of-integers-write-a-function-that-returns-the-index-position-of-integer-data-denoted-by-n-if-it-exists-return-1-otherwise\">You have been given a singly linked list of integers. Write a function that returns the index/position of integer data denoted by &#39;N&#39; (if it exists). Return -1 otherwise.</h4>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>Assume that the Indexing for the singly linked list always starts from 0.\n</code></pre>\n\n<h5 id=\"input-format\">Input format :</h5>\n\n<pre><code>The first line contains an Integer &#39;T&#39; which denotes the number of test cases. \n\nThe first line of each test case or query contains the elements of the singly linked list separated by a single space. \n\nThe second line contains the integer value &#39;N&#39;. It denotes the data to be searched in the given singly linked list.\n</code></pre>\n\n<h5 id=\"remember-consider\">Remember/Consider :</h5>\n\n<pre><code>While specifying the list elements for input, -1 indicates the end of the singly linked list and hence -1 would never be a list element.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case, return the index/position of &#39;N&#39; in the singly linked list. Return -1, otherwise.\n\nOutput for every test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">\u00a0Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10^2\n0 &lt;= M &lt;= 10^5\n\nWhere &#39;M&#39; is the size of the singly linked list.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n3 4 5 2 6 1 9 -1\n5\n10 20 30 40 50 60 70 -1\n6\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>2\n-1\n</code></pre>\n\n<h5 id=\"explanation-for-sample-output-1\">\u00a0Explanation for Sample Output 1:</h5>\n\n<pre><code>In test case 1, &#39;N&#39; = 5 appears at position 2 (0-based indexing) in the given linked list.\n\nIn test case 2, we can see that &#39;N&#39; = 6 is not present in the given linked list.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n1 -1\n2\n3 4 5 2 6 1 9 -1\n6\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>-1\n4\n</code></pre>\n\n<h5 id=\"explanation-for-sample-output-2\">\u00a0Explanation for Sample Output 2:</h5>\n\n<pre><code>In test case 1, we can see that &#39;N&#39; = 2 is not present in the given linked list.\n\nIn test case 2, &#39;N&#39; = 6 appears at position 4 (0-based indexing) in the given linked list.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 21,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a singly linked list of integers, write a function that finds the index of a given integer 'N'. The list is indexed starting from 0. If 'N' is present in the list, return its index; otherwise, return -1.",
                "constraints": [
                    "1 <= T <= 10^2",
                    "0 <= M <= 10^5  (where 'M' is the size of the singly linked list)",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "3 4 5 2 6 1 9 -1\n5",
                        "output": "2",
                        "explanation": "'N' = 5 is present at index 2 in the linked list."
                    },
                    {
                        "input": "10 20 30 40 50 60 70 -1\n6",
                        "output": "-1",
                        "explanation": "'N' = 6 is not present in the linked list."
                    },
                    {
                        "input": "1 -1\n2",
                        "output": "-1",
                        "explanation": "'N' = 2 is not present in the linked list."
                    },
                    {
                        "input": "3 4 5 2 6 1 9 -1\n6",
                        "output": "4",
                        "explanation": "'N' = 6 is present at index 4 in the linked list."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>If you knew the position of the element in the list that starts from the second node of the original list, could you calculate your answer through recursion?</p>",
            "<p>How can you iterate through a linked list? Maintaining current pointer to a node.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}