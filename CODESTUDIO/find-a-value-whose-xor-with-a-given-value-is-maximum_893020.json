{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8543,
            "title": "Find a value whose XOR with a given value is maximum.",
            "titleSlug": "find-a-value-whose-xor-with-a-given-value-is-maximum_893020",
            "content": "<h4 id=\"you-are-given-an-integer-x-and-your-task-is-to-find-an-integer-y-such-that-the-bitwise-xor-of-the-integers-x-and-y-give-the-maximum-possible-value-the-integer-y-should-not-be-greater-than-2305843009213693951-2-61-1\">You are given an integer &#39;X&#39; and your task is to find an integer &#39;Y&#39; such that the bitwise XOR of the integers  &#39;X&#39; and &#39;Y&#39; give the maximum possible value. The integer &#39;Y&#39; should not be greater than 2305843009213693951 ((2^61) - 1).</h4>\n\n<h4 id=\"a-bitwise-xor-is-a-binary-operation-that-takes-two-bit-patterns-of-equal-length-and-performs-the-logical-exclusive-or-operation-on-each-pair-of-corresponding-bits-the-result-in-each-position-is-1-if-only-one-of-the-bits-is-1-but-will-be-0-if-both-are-0-or-both-are-1\">A bitwise XOR is a binary operation that takes two bit patterns of equal length and performs the logical exclusive OR operation on each pair of corresponding bits. The result in each position is 1 if only one of the bits is 1, but will be 0 if both are 0 or both are 1.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>1. The maximum obtainable value can always be stored in 64-bit memory space.\n2. The given number &#39;X&#39; is always non-negative.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of the input contains an integer &#39;T&#39; denoting the number of test cases.\n\nThe first line and the only line of each test case contains an integer &#39;X&#39;.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print an integer &#39;Y&#39; whose XOR with &#39;X&#39; yields the maximum obtainable value in separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10^4\n0 &lt;= X &lt;= 10^18\n\nTime Limit: 1sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1\n16\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>2305843009213693935\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for sample input 1:</h5>\n\n<pre><code>The XOR of numbers 16 and 2305843009213693935 equals 2305843009213693951, which is the maximum allowed XOR value.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\n0 \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>2305843009213693951\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 12,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a non-negative integer 'X', find an integer 'Y' such that the bitwise XOR of 'X' and 'Y' results in the maximum possible value. The integer 'Y' must be less than or equal to 2305843009213693951 (2^61 - 1). Return the value of 'Y'.",
                "constraints": [
                    "1 <= T <= 10^4",
                    "0 <= X <= 10^18",
                    "Time Limit: 1sec"
                ],
                "testcases": [
                    {
                        "input": "X = 16",
                        "output": "2305843009213693935",
                        "explanation": "The XOR of 16 and 2305843009213693935 equals 2305843009213693951, which is the maximum allowed XOR value (2^61 - 1)."
                    },
                    {
                        "input": "X = 0",
                        "output": "2305843009213693951",
                        "explanation": "The XOR of 0 and 2305843009213693951 equals 2305843009213693951, which is the maximum allowed XOR value (2^61 - 1)."
                    },
                    {
                        "input": "X = 1",
                        "output": "2305843009213693950",
                        "explanation": "The XOR of 1 and 2305843009213693950 equals 2305843009213693951, which is the maximum allowed XOR value (2^61 - 1)."
                    },
                    {
                        "input": "X = 2305843009213693951",
                        "output": "0",
                        "explanation": "The XOR of 2305843009213693951 and 0 equals 2305843009213693951, which is the maximum allowed XOR value (2^61 - 1)."
                    },
                    {
                        "input": "X = 1024",
                        "output": "2305843009213692927",
                        "explanation": "The XOR of 1024 and 2305843009213692927 equals 2305843009213693951, which is the maximum allowed XOR value (2^61 - 1)."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}