{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10127,
            "title": "Find Conflicting Meetings",
            "titleSlug": "find-conflicting-meetings_1170047",
            "content": "<h4 id=\"mr-x-is-a-busy-person-he-has-to-attend-n-meetings-throughout-the-day-you-are-given-the-schedule-of-mr-x-in-a-2d-matrix-meetings-having-n-rows-and-2-columns-the-ith-element-of-the-first-column-contains-the-starting-time-of-the-ith-meeting-and-the-ith-element-of-the-second-column-contains-the-ending-time-of-the-ith-meeting\">Mr. X is a busy person. He has to attend &#39;N&#39; meetings throughout the day. You are given the schedule of Mr. X in a 2D Matrix &#39;MEETINGS&#39; having &#39;N&#39; rows and 2 columns. The &#39;i&#39;th element of the first column contains the starting time of the &#39;i&#39;th meeting, and the &#39;i&#39;th element of the second column contains the ending time of the &#39;i&#39;th meeting.</h4>\n\n<h4 id=\"two-meetings-are-conflicting-with-each-other-if-they-overlap-each-other-for-some-non-zero-time-if-a-meeting-x-starts-at-the-same-time-as-the-meeting-y-ends-then-they-do-not-conflict\">Two meetings are conflicting with each other if they overlap each other for some non-zero time. If a meeting &#39;X&#39; starts at the same time as the meeting &#39;Y&#39; ends, then they do not conflict.</h4>\n\n<h4 id=\"given-the-schedule-of-the-day-of-mr-x-find-the-index-of-any-one-conflicting-meeting-for-each-of-the-n-meetings\">Given the schedule of the day of Mr. X. Find the index of any one conflicting meeting for each of the &#39;N&#39; meetings.</h4>\n\n<h4 id=\"in-case-a-particular-meeting-does-not-conflict-with-any-meeting-take-1-as-the-index-of-the-conflicting-meeting-for-that-meeting\">In case a particular meeting does not conflict with any meeting, take -1 as the index of the conflicting meeting for that meeting.</h4>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>If there are multiple conflicting meetings for a particular meeting. You can return any one of them.\n</code></pre>\n\n<h4 id=\"example\">Example :</h4>\n\n<pre><code>Consider the matrix MEETINGS = [ [ 1, 3 ] , [ 4, 5 ] , [ 2, 5 ] ] \n\nThe array containing the Conflicting Meetings will be [ 3, 3, 1 ].\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of the input contains an integer &#39;T,\u2019 denoting the number of test cases.\n\nThe first line of each test case contains an integer &#39;N&#39;, denoting the number of meetings.\n\nThe second line of each test case contains &#39;N&#39; space-separated integers denoting the first column of the matrix &#39;MEETINGS&#39;.\n\nThe third line of each test case contains &#39;N&#39; space-separated integers denoting the second column of the matrix &#39;MEETINGS&#39;.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, return the array of conflicting meetings.\n\nThe output is &#39;1&#39; if the returned conflicting meetings array is correct, otherwise, it will print &#39;0&#39;.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 10^4\n1 &lt;= MEETING[i][0] &lt; 10^9\nMEETING[i][0] &lt; MEETING[i][1] &lt;= 10^9\n\nTime Limit : 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n3\n1 2 5\n3 4 7\n2\n1 3 \n2 4\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>1\n1\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1 :</h5>\n\n<pre><code>For the first test case,\nThe two meetings, Meeting 1 and Meeting 2 overlap with each other. Hence, they are conflicting. Meeting 3 does not overlap with any other meeting. \nTherefore, the output array is : [ 2, 1, -1 ] in this case.\n\nFor the second test case,\nBoth the meetings do not overlap with each other. So, there are no conflicting meetings. \nTherefore, the output array : [ -1, -1 ] in this case.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n4\n6 2 6 1\n7 6 8 4\n4\n5 6 1 3\n6 8 4 5\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>1\n1\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation For Sample Input 2 :</h5>\n\n<pre><code>For the first test case,\nThe two meetings, Meeting 1 and Meeting 3, overlap with each other, and Meeting 2 and Meeting 4 overlap with each other. Therefore, the output array is : [ 3, 4, 1, 2 ] in this case.\n\nFor the second test case,\nThe first two meetings do not conflict with any of the meetings. The two meetings, Meeting 3  and Meeting 4, overlap with each other. Therefore, the output array is : [ -1, -1, 4, 3 ] in this case.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": -4,
            "dislikes": "NA",
            "rephrased": {
                "body": "Mr. X has a busy schedule with 'N' meetings. You are given a 2D array 'MEETINGS' of size N x 2, where MEETINGS[i][0] is the start time and MEETINGS[i][1] is the end time of the i-th meeting. Two meetings are considered conflicting if they overlap for a non-zero duration.  A meeting ending at the exact time another starts is NOT a conflict.\n\nYour task is to find, for each meeting, the index of any *one* conflicting meeting. If a meeting has no conflicts, return -1 as its conflicting meeting index.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10^4",
                    "1 <= MEETING[i][0] < 10^9",
                    "MEETING[i][0] < MEETING[i][1] <= 10^9",
                    "Time Limit : 1 sec"
                ],
                "testcases": [
                    {
                        "input": "3\n1 2 5\n3 4 7",
                        "output": "1",
                        "explanation": "Meeting 1 and Meeting 2 overlap. Meeting 3 doesn't overlap with any other meeting.  The conflicting meeting indices are [2, 1, -1]."
                    },
                    {
                        "input": "2\n1 3\n2 4",
                        "output": "1",
                        "explanation": "Meetings 1 and 2 do not overlap, thus there is no conflict, resulting in [-1, -1]."
                    },
                    {
                        "input": "4\n6 2 6 1\n7 6 8 4",
                        "output": "1",
                        "explanation": "Meeting 1 and Meeting 3 overlap, and Meeting 2 and Meeting 4 overlap. Therefore, the output array is : [ 3, 4, 1, 2 ]."
                    },
                    {
                        "input": "4\n5 6 1 3\n6 8 4 5",
                        "output": "1",
                        "explanation": "The first two meetings do not conflict with any of the meetings. The two meetings, Meeting 3  and Meeting 4, overlap with each other. Therefore, the output array is : [ -1, -1, 4, 3 ]."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to find out the Conflicting Meeting for each of the meetings by iterating through all the meetings and checking whether the two meetings overlap.</p>",
            "<p>Try to think of an approach by sorting all the meetings based on their start times.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Matrices (2D Arrays)",
                "slug": "matrices-(2d-arrays)"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}