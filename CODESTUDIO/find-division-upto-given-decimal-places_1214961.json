{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10407,
            "title": "Find Division Upto Given Decimal Places",
            "titleSlug": "find-division-upto-given-decimal-places_1214961",
            "content": "<h4 id=\"you-are-given-three-integers-x-y-and-n-find-the-value-of-division-x-y-up-to-n-decimal-places\">You are given three integers \u2018X\u2019, \u2018Y\u2019 and \u2018N\u2019.  Find the value of division X / Y  up to \u2018N\u2019 decimal places.</h4>\n\n<h4 id=\"you-should-return-a-string-that-represents-the-value-x-y-up-to-n-decimal-places-this-string-must-have-n-digits-after-decimals-you-don-t-need-to-round-off-the-result-to-n-decimal-places-just-find-the-first-n-places-after-decimals\">You should return a string that represents the value X / Y  up to \u2018N\u2019 decimal places. This string must have \u2018N\u2019 digits after decimals. You don\u2019t need to round off the result to \u2018N\u2019 decimal places, just find the first \u2018N\u2019 places after decimals.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>1. It is guaranteed that division X / Y is always finite.\n</code></pre>\n\n<h4 id=\"example\">Example:</h4>\n\n<pre><code>Consider X = 5, Y = 4 and N = 5, then you should return \u201c1.25000\u201d. \nNote, here we add 3 trailing zeros so that it has exactly 5 digits after decimals.    \n</code></pre>\n\n<h5 id=\"input-format\">Input format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases, then \u2018T\u2019 test cases follow.\n\nThe first and only line of each test case consists of three space-separated integers, \u2018X\u2019, \u2018Y\u2019, \u2018N\u2019 respectively.    \n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case, print in a separate line, a string representing the value X / Y  up to \u2018N\u2019 decimal places, and it must have \u2018N\u2019 digits after decimals.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 50\n-10^8  &lt;= X &lt;= 10^8\n-10^8  &lt;= Y &lt;= 10^8\nY != 0\n1 &lt;= N &lt;= 10^4\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n5 4 1\n5 4 5   \n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>1.2\n1.25000\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1:</h5>\n\n<pre><code>Test case 1:\nDivision 5/4 = 1.25, but we need to print only \u20181\u2019 digit after decimals, thus we should print 1.2.\n\nTest case 2:\nSee the problem statement for an explanation.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>3\n-1 -2 1\n1 -5 6\n-1 1000 2\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>0.5\n-0.200000\n-0.00\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 21,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given three integers, `x`, `y`, and `n`, calculate the decimal representation of `x / y` up to `n` decimal places. The result should be returned as a string with exactly `n` digits after the decimal point. No rounding is required; simply truncate the result after `n` decimal places and add trailing zeros if needed to ensure `n` digits are present after the decimal point.",
                "constraints": [
                    "1 <= T <= 50",
                    "-10^8 <= X <= 10^8",
                    "-10^8 <= Y <= 10^8, Y != 0",
                    "1 <= N <= 10^4"
                ],
                "testcases": [
                    {
                        "input": "x = 5, y = 4, n = 1",
                        "output": "1.2",
                        "explanation": "5 / 4 = 1.25. We need to print only \u20181\u2019 digit after decimals, thus we should print 1.2."
                    },
                    {
                        "input": "x = 5, y = 4, n = 5",
                        "output": "1.25000",
                        "explanation": "5 / 4 = 1.25. We need 5 digits after the decimal point, so we add three trailing zeros to get 1.25000."
                    },
                    {
                        "input": "x = -1, y = -2, n = 1",
                        "output": "0.5",
                        "explanation": "-1 / -2 = 0.5.  We need 1 digit after the decimal point, so the output is 0.5."
                    },
                    {
                        "input": "x = 1, y = -5, n = 6",
                        "output": "-0.200000",
                        "explanation": "1 / -5 = -0.2. We need 6 digits after the decimal point, so we add five trailing zeros to get -0.200000."
                    },
                    {
                        "input": "x = -1, y = 1000, n = 2",
                        "output": "-0.00",
                        "explanation": "-1 / 1000 = -0.001. We need 2 digits after the decimal point, so we take -0.00."
                    },
                    {
                        "input": "x = 10, y = 3, n = 3",
                        "output": "3.333",
                        "explanation": "10 / 3 = 3.33333.... We need 3 digits after the decimal so we take 3.333"
                    },
                    {
                        "input": "x = 0, y = 7, n = 4",
                        "output": "0.0000",
                        "explanation": "0 / 7 = 0.0 We need 4 digits after the decimal point, add 4 trailing zeros giving 0.0000"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Repeatedly multiply the remainder by 10 and divide it with the given dividend to find digits after the decimal.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}