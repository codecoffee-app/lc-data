{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10409,
            "title": " Find K-th Element",
            "titleSlug": "find-k-th-element_1214963",
            "content": "<h4 id=\"ninja-has-been-given-two-sorted-arrays-lists-arr1-and-arr2-of-lengths-m-and-n-respectively-he-is-also-provided-with-an-integer-k-he-has-to-find-the-k-th-element-1-based-indexing-in-the-sorted-array-list-of-length-m-n-made-by-merging-arr1-and-arr2\">Ninja has been given two sorted arrays/lists, \u2018ARR1\u2019 and \u2018ARR2\u2019 of lengths \u2018M\u2019 and \u2018N\u2019 respectively. He is also provided with an integer \u2018K\u2019. He has to find the \u2018K\u2019th element (1 based indexing) in the sorted array/list of length \u2018M + N\u2019 made by merging \u2018ARR1\u2019 and \u2018ARR2\u2019.</h4>\n\n<h4 id=\"for-example\">For example :</h4>\n\n<pre><code>\u2018ARR1\u2019 = {1, 4, 6, 7} \n\u2018ARR2\u2019 = {2, 3, 5, 6} \n\u2018K\u2019 = 6\n\nSo the sorted array after merging \u2018ARR1\u2019 and \u2018ARR2\u2019 will be:\n{1, 2, 3, 4, 5, 6, 6, 7}\nSo the 6th element (1 based indexing) is in the new sorted merged array/list is 6.\n</code></pre>\n\n<h4 id=\"as-ninja-is-busy-with-the-preparation-of-his-upcoming-exams-so-he-asks-you-for-help-can-you-help-ninja-to-solve-this-problem\">As Ninja is busy with the preparation of his upcoming exams so, he asks you for help. Can you help Ninja to solve this problem?</h4>\n\n<h4 id=\"follow-up\">Follow Up :</h4>\n\n<pre><code>Try to do this problem without using any extra space.\n</code></pre>\n\n<h4 id=\"input-format\">Input Format:</h4>\n\n<pre><code>The first line of input contains a single integer T\u2019, representing the number of test cases.\nThen the \u2018T\u2019 test cases follow.\n\nThe first line of each test case contains three single space-separated numbers, \u2018M\u2019, \u2018N\u2019 and \u2018K\u2019, denoting the size of \u2018ARR1\u2019, the size of \u2018ARR2\u2019, and the position of the element in the new sorted array/list.\n\nThe second line contains \u2018M\u2019 space-separated distinct integers denoting the \u2018ARR1\u2019 elements.\n\nThe third line contains \u2018N\u2019 space-separated distinct integers denoting the \u2018ARR2\u2019 elements.\n</code></pre>\n\n<h4 id=\"output-format\">Output format:</h4>\n\n<pre><code>For each test case print a single integer representing the \u2018K\u2019th element in the new sorted array.\n\nThe output of every test case will be printed in a separate line. \n</code></pre>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>You don\u2019t have to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints</h4>\n\n<pre><code>1 &lt;= T &lt;=100\n1 &lt;= M,N &lt;= 10^4\n1 &lt;= K &lt;= M+N\n0 &lt;=  ARR1[i]\u2019 , ARR2[i] &lt;= 10^5\n\nWhere &#39;ARR1[i]&#39; and &#39;ARR2[i]&#39; denote the i&#39;th element of &#39;ARR1&#39; and &#39;ARR2&#39; respectively.\n\nTime limit: 1 sec\n</code></pre>\n<h4 id=\"sample-input-1\">Sample input 1:</h4>\n\n<pre><code>2\n4 3 4\n1 4 7 10\n2 5 6\n1 1 2\n7\n1\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample output 1:</h4>\n\n<pre><code>5\n7\n</code></pre>\n\n<h4 id=\"explanation-for-sample-input-1\">Explanation for sample input 1:</h4>\n\n<pre><code>For test case 1:\nThe sorted array/list made by merging \u2018ARR1\u2019 and \u2018ARR2\u2019 = {1, 2, 4, 5, 6, 7, 10}.\n We can see the element at the 4th position is 5.\n\nFor test case 2:\nThe sorted arraylist made by merging \u2018ARR1\u2019 and \u2018ARR2\u2019 = {1, 7}.\nWe can see the element at the 2nd position is 7.\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample input 2:</h4>\n\n<pre><code>2\n5 5 6\n1 2 3 4 5\n7 8 9 10 11\n2 3 1\n5 6\n1 4 8\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample output 2:</h4>\n\n<pre><code>7\n1\n</code></pre>\n\n<h4 id=\"explanation-for-sample-input-2\">Explanation for sample input 2:</h4>\n\n<pre><code>For test case 1:\nThe sorted array made by merging \u2018ARR1\u2019 and \u2018ARR2\u2019 = {1, 2,3 ,4, 5, 7, 8, 9, 10, 11}.\nWe can see the element at the 6th position is 7.\n\nFor test case 2:\nThe sorted array made by merging \u2018ARR1\u2019 and \u2018ARR2\u2019 = {1, 4, 5, 6, 8}.\nWe can see the element at the 1st position is 1.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 3,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two sorted arrays, `ARR1` and `ARR2`, of lengths `M` and `N` respectively, and an integer `K`, find the Kth smallest element (1-based indexing) in the merged sorted array formed by combining `ARR1` and `ARR2`.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= M, N <= 10^4",
                    "1 <= K <= M + N",
                    "0 <= ARR1[i], ARR2[i] <= 10^5",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "4 3 4\n1 4 7 10\n2 5 6",
                        "output": "5",
                        "explanation": "The merged sorted array is {1, 2, 4, 5, 6, 7, 10}. The 4th element is 5."
                    },
                    {
                        "input": "1 1 2\n7\n1",
                        "output": "7",
                        "explanation": "The merged sorted array is {1, 7}. The 2nd element is 7."
                    },
                    {
                        "input": "5 5 6\n1 2 3 4 5\n7 8 9 10 11",
                        "output": "7",
                        "explanation": "The merged sorted array is {1, 2, 3, 4, 5, 7, 8, 9, 10, 11}. The 6th element is 7."
                    },
                    {
                        "input": "2 3 1\n5 6\n1 4 8",
                        "output": "1",
                        "explanation": "The merged sorted array is {1, 4, 5, 6, 8}. The 1st element is 1."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you think of a brute force approach?</p>",
            "<p>Can we traverse the two arrays alternatively to get a sorted array?</p>",
            "<p>Can we make any use of the fact that arrays are sorted and decrease the time complexity to logarithmic?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}