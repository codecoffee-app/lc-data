{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8734,
            "title": "Find Longest Sequence",
            "titleSlug": "find-longest-sequence_893353",
            "content": "<h4 id=\"you-are-given-a-n-n-matrix-where-all-numbers-are-distinct-from-1-to-n-n-you-are-required-to-find-the-maximum-length-path-starting-from-any-cell-such-that-all-cells-along-the-path-are-in-increasing-order-with-a-difference-of-1\">You are given a \u2018N\u2019 * \u2018N\u2019 matrix where all numbers are distinct from (1 to N * N). You are required to find the maximum length path (starting from any cell) such that all cells along the path are in increasing order with a difference of 1.</h4>\n\n<h4 id=\"only-four-possible-movements-are-allowed-i-e-up-down-left-and-right\">Only four possible movements are allowed i.e, Up, Down, Left , and Right.</h4>\n\n<h5 id=\"for-example\">For example :</h5>\n\n<pre><code>Input:  Mat [ ][ ] = { { 9 , 1 , 3 }\n                       { 7 , 4 , 2 }\n                       { 6 , 5 , 8 } }\nOutput: 4\nExplanation: The longest path is of length \u20184\u2019 { 4 - 5 - 6 - 7 }\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 denoting the number of test cases to be run. Then the test cases follow.\nThe first line of each test case contains a single integer &#39;N&#39; denoting the size of the matrix as N*N.\n\u2018N\u2019 lines follow. Each of the next \u2018N\u2019 lines contains \u2018N\u2019 space separated integers separated by space.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, return an integer denoting the maximum length path.\nOutput for each test case should be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note</h5>\n\n<pre><code>You are not required to print anything, it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 100   \n1 &lt;= N &lt;= 10^3\n\nTime Limit : 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n3\n1 2 9 \n5 3 8\n4 6 7 \n4\n1 15 13 14 \n2 8 9 10 \n3 11 16 12 \n4 5 6 7\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>4\n7\n</code></pre>\n\n<h5 id=\"explanation-for-sample-output-1\">Explanation For Sample Output 1 :</h5>\n\n<pre><code>In test case 1:\nFor \u2018N\u2019 = 3,\n1 2 9 \n5 3 8\n4 6 7\nThe longest path is of length \u20184\u2019 { 6 -&gt; 7 -&gt; 8 -&gt; 9 }\n\nIn test case 2:\nFor \u2018N\u2019 = 4,\n\n1 15 13 14 \n2 8  9  10 \n3 11 16 12 \n4 5  6 7\n\nThe longest path is of length \u20187\u2019 { 1 -&gt; 2 -&gt; 3 -&gt; 4 -&gt; 5 -&gt; 6 -&gt; 7 }\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n2\n1 2\n3 4\n3\n1 5 6\n9 4 7\n2 3 8\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>2\n7\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 20,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an N x N matrix where all numbers are distinct, ranging from 1 to N*N, find the maximum length path starting from any cell. The path must be in increasing order with a difference of 1 between consecutive cells. Only movements up, down, left, and right are allowed.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= N <= 10^3",
                    "Time Limit : 1 sec"
                ],
                "testcases": [
                    {
                        "input": "3\n3\n1 2 9 \n5 3 8\n4 6 7 \n4\n1 15 13 14 \n2 8 9 10 \n3 11 16 12 \n4 5 6 7",
                        "output": "4\n7",
                        "explanation": "Test case 1:\nFor N = 3,\n1 2 9\n5 3 8\n4 6 7\nThe longest path is of length 4 (6 -> 7 -> 8 -> 9).\n\nTest case 2:\nFor N = 4,\n1 15 13 14\n2 8 9 10\n3 11 16 12\n4 5 6 7\nThe longest path is of length 7 (1 -> 2 -> 3 -> 4 -> 5 -> 6 -> 7)."
                    },
                    {
                        "input": "2\n2\n1 2\n3 4\n3\n1 5 6\n9 4 7\n2 3 8",
                        "output": "2\n7",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can we use a recursive function to calculate<strong> </strong>the longest path?</p>",
            "<p>Try to use memoization to optimize the recursive solution.</p>",
            "<p>Try the Dynamic Programming approach.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Matrices (2D Arrays)",
                "slug": "matrices-(2d-arrays)"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}