{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8737,
            "title": "Find max difference",
            "titleSlug": "find-max-difference_893356",
            "content": "<h4 id=\"given-an-n-x-n-matrix-mat-n-n-of-integers-find-the-maximum-value-of-mat-c-d-mat-a-b-over-all-choices-of-indexes-such-that-both-c-a-and-d-b\">Given an n x n matrix mat[n][n] of integers, find the maximum value of mat[c][d] \u2013 mat[a][b] over all choices of indexes such that both  c &gt; a and d &gt; b.</h4>\n\n<h4 id=\"example\">Example:-</h4>\n\n<pre><code>1 2 3 4 \n5 6 7 8\n1 9 2 3\n\nIn this example, the maximum value is 8 (mat[2][1]-mat[0][0]).\n</code></pre>\n\n<h5 id=\"input-format\">Input format :</h5>\n\n<pre><code>The first line contains a single integer T representing the number of test cases.\n\nThe first line of each test case contains a single integer \u2018N\u2019 denoting the size of the matrix.\n\nThe next N lines contain \u2018N\u2019 integers each where each line denotes a row of the matrix.    \n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print an integer denoting the maximum value of mat[c][d] \u2013 mat[a][b].\n\nThe output of each test case should be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You are not required to print anything, it has already been taken care of. Just implement the function.   \n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= N &lt;= 10^2\n1 &lt;= mat[i][j] &lt;= 10^8\n\nTime Limit - 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n4\n9 9 5 1 \n4 5 8 0 \n7 0 9 7 \n5 5 5 6\n2\n1 2 \n1 2\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>6\n1\n</code></pre>\n\n<h5 id=\"explanation-of-sample-output-1\">Explanation of Sample Output 1 :</h5>\n\n<pre><code>In the first test case :\n\nChoose a=3, b=2, c=4, and d=4. So we get 6 \n(mat[4][4] - mat[3][2]) as the maximum value. So output will be 6.\n\n In the second test :\n\nChoose a=1, b=1, c=2, and d=2. So we get 1 \n(mat[4][4] - mat[3][2]) as the maximum value. So output will be 1.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n4\n1 2 3 4 \n5 6 7 8\n1 2 3 4 \n1 2 3 4\n1\n1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>7\n0\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 0,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an n x n matrix `mat` of integers, find the maximum value of `mat[c][d] - mat[a][b]` over all choices of indices such that `c > a` and `d > b`.",
                "constraints": [
                    "1 <= N <= 10^2",
                    "1 <= mat[i][j] <= 10^8",
                    "Time Limit - 1 sec"
                ],
                "testcases": [
                    {
                        "input": "2\n4\n9 9 5 1 \n4 5 8 0 \n7 0 9 7 \n5 5 5 6\n2\n1 2 \n1 2",
                        "output": "6\n1",
                        "explanation": "Test Case 1:\nFor the first test case, the maximum difference is achieved when `mat[3][3] - mat[0][2] = 6`. i.e (6 - 0 = 6)\nTest Case 2:\nFor the second test case, the maximum difference is achieved when `mat[1][1] - mat[0][0] = 1`. i.e (2 - 1 = 1)"
                    },
                    {
                        "input": "2\n4\n1 2 3 4 \n5 6 7 8\n1 2 3 4 \n1 2 3 4\n1\n1",
                        "output": "7\n0",
                        "explanation": "Test Case 1:\nFor the first test case, the maximum difference is achieved when `mat[1][3] - mat[0][0] = 7`. i.e (8 - 1 = 7)\nTest Case 2:\nFor the second test case, the maximum difference is achieved when `mat[0][0] - mat[0][0] = 0` i.e (1 - 1 = 0) "
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Recursively find the maximum number of the submatrix.</p>",
            "<p>Recursively find and memorize the maximum number of a submatrix in the top left corner to reduce the time complexity.</p>",
            "<p>Store the maximum number of the submatrix in the top left corner.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Matrices (2D Arrays)",
                "slug": "matrices-(2d-arrays)"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}