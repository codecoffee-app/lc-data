{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10121,
            "title": "Find Maximum number possible by doing at-most K swaps",
            "titleSlug": "find-maximum-number-possible-by-doing-at-most-k-swaps_1169469",
            "content": "<h4 id=\"you-are-given-an-array-of-n-non-negative-integers-representing-the-digits-of-a-number-and-an-integer-k-your-task-is-to-find-the-maximum-possible-number-that-can-be-made-by-swapping-the-digits-of-the-given-number-at-most-k-times\">You are given an array of &#39;N&#39; non-negative integers, representing the digits of a number, and an integer &#39;K&#39;. Your task is to find the maximum possible number that can be made by swapping the digits of the given number at most &#39;K&#39; times.</h4>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>1. The input may have 0 before the most significant digit, [0,3,5,7] is a valid input and it represents number 357.\n2. Digits in the number can be repeated, i.e [3, 3, 4, 4] is a valid input and it represents the number 3344.\n</code></pre>\n\n<h4 id=\"input-format\">Input Format :</h4>\n\n<pre><code>The first line of input contains a single integer &#39;T&#39;, representing the number of test cases.\nThen the test cases follow.\n\nThe first line of each test case contains two space-separated integers &#39;N&#39; and &#39;K&#39;, denoting the size of the array and the number of swaps permitted respectively.\n\nThe second line contains &#39;N&#39; space-separated integers representing the digits as described in the problem statement.\n</code></pre>\n\n<h4 id=\"output-format\">Output format :</h4>\n\n<pre><code>For each test case, print the space-separated digits of the maximum number possible.\n</code></pre>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>You don\u2019t have to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints :</h4>\n\n<pre><code>1&lt;= T &lt;=10\n2 &lt;= N &lt;= 10\n0 &lt;= K &lt;= min(N,5)\n0 &lt;= NUM[i] &lt;= 9\n\nTime Limit: 1 sec\n</code></pre>\n<h4 id=\"sample-input-1\">Sample input 1 :</h4>\n\n<pre><code>1\n5 2\n0 4 1 2 3 \n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample output 1:</h4>\n\n<pre><code>4 3 1 2 0\n</code></pre>\n\n<h4 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1 :</h4>\n\n<pre><code>Given &#39;K&#39; : 2, so the two swaps which will result in the maximum possible number will be :\nSwapping indices 1 and 2, resultant array [4,0,1,2,3].\nSwapping indices 2 and 5, resultant array [4,3,1,2,0].\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample input 2 :</h4>\n\n<pre><code>1\n7 4\n9 2 6 4 3 7 1\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample output 2 :</h4>\n\n<pre><code>9 7 6 4 3 2 1\n</code></pre>\n\n<h4 id=\"explanation-for-sample-input-2\">Explanation For Sample Input 2 :</h4>\n\n<pre><code>Given &#39;K&#39; : 4, so at most 4 swaps which will result in the maximum possible number are :\nSwapping indices 2 and 6, resultant array [9,7,6,4,3,2,1].\nNow the resultant array will result in a maximum possible number, so we do not need to perform more operations.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 0,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of N non-negative integers representing the digits of a number, and an integer K, find the maximum possible number that can be formed by swapping the digits of the given number at most K times. The input number can contain leading zeros and repeated digits.",
                "constraints": [
                    "1 <= T <= 10",
                    "2 <= N <= 10",
                    "0 <= K <= min(N,5)",
                    "0 <= NUM[i] <= 9",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "5 2\n0 4 1 2 3",
                        "output": "4 3 1 2 0",
                        "explanation": "Starting with [0, 4, 1, 2, 3] and K = 2, we swap the first digit with the largest digit to its right (4 at index 1) resulting in [4, 0, 1, 2, 3].  Then, we swap the second digit (0 at index 1) with the largest digit to its right (3 at index 4) leading to [4, 3, 1, 2, 0]. These two swaps maximize the number."
                    },
                    {
                        "input": "7 4\n9 2 6 4 3 7 1",
                        "output": "9 7 6 4 3 2 1",
                        "explanation": "Given [9, 2, 6, 4, 3, 7, 1] and K = 4, we first find the largest digit to the right of 9 (which is already the largest digit). Then we swap 2 with 7 resulting in [9, 7, 6, 4, 3, 2, 1]. The result now represents the maximum possible arrangement, and no further swaps are necessary."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Find out all the possible combinations by using recursion.</p>",
            "<p>Find out all the possible combinations by using recursion but we can avoid some combination about which we are sure never that this is not&nbsp; going to give the maximum number.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}