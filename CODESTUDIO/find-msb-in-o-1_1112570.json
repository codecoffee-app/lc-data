{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9940,
            "title": "Find MSB In O(1)",
            "titleSlug": "find-msb-in-o-1_1112570",
            "content": "<h4 id=\"you-are-given-a-positive-integer-n-your-task-is-to-find-the-greatest-integer-less-than-or-equal-to-n-which-is-a-power-of-2\">You are given a positive integer &#39;N&#39;. Your task is to find the greatest integer less than or equal to &#39;N&#39; which is a power of 2.</h4>\n\n<h5 id=\"for-example\">For Example:</h5>\n\n<pre><code>If N = 14, then the nearest integer that is less than or equal to 14 and is a power of two is 8(2^3). So, the answer is 8.\n</code></pre>\n\n<h5 id=\"follow-up\">Follow Up:</h5>\n\n<pre><code>Can you solve this in constant time and space complexity?\n</code></pre>\n\n<h5 id=\"input-format\">Input format:</h5>\n\n<pre><code>The first line contains an integer &#39;T&#39; which denotes the number of test cases. Then, the &#39;T&#39; test cases area as follow.\n\nThe first and only line of each test case contains a single integer &#39;N&#39;.\n</code></pre>\n\n<h5 id=\"output-format\">Output format:</h5>\n\n<pre><code>For each test case, print the nearest integer that is less than or equal to &#39;N&#39; and also is a power of 2.\n\nOutput for each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 2 * 10^3\n1 &lt;= N &lt;= 10^9\n\nTime Limit: 1 second\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n4\n22\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>4\n16\n</code></pre>\n\n<h5 id=\"explanation-for-sample-1\">Explanation for sample 1:</h5>\n\n<pre><code>For the first test case, 4 itself is a power of two.\nFor the second test case, the nearest integer that is less than or equal to 22 and also is a power of two is 16.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n1\n63\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>1\n32\n</code></pre>\n\n<h5 id=\"explanation-for-sample-1\">Explanation for sample 1:</h5>\n\n<pre><code>For the first test case, 1 itself is a power of two.\nFor the second test case, the nearest integer that is less than or equal to 63 and also is a power of two is 32.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 27,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a positive integer 'N', find the largest power of 2 that is less than or equal to 'N'.",
                "constraints": [
                    "1 <= T <= 2 * 10^3",
                    "1 <= N <= 10^9",
                    "Time Limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "4\n22",
                        "output": "4\n16",
                        "explanation": "For N=4, 4 itself is a power of 2. For N=22, the largest power of 2 less than or equal to 22 is 16."
                    },
                    {
                        "input": "1\n63",
                        "output": "1\n32",
                        "explanation": "For N=1, 1 itself is a power of 2. For N=63, the largest power of 2 less than or equal to 63 is 32."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you think of a brute force solution to divide N by 2 until it becomes 1?</p>",
            "<p>Can you think of a solution by using a log and pow function?</p>",
            "<p>Can you think of a solution to set all the bits of N?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}