{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8856,
            "title": "Find Node",
            "titleSlug": "find-node_920443",
            "content": "<h4 id=\"you-are-given-a-linked-list-with-a-cycle-you-need-to-find-and-return-the-nth-node-from-where-the-cycle-starts-in-the-input-linked-list-moving-towards-the-head-of-the-linked-list\">You are given a linked list with a cycle. You need to find and return the Nth node from where the cycle starts in the input Linked List (moving towards the head of the linked list).</h4>\n\n<h4 id=\"the-cycle-is-created-by-connecting-the-last-element-of-linked-list-i-e-tail-to-some-other-node-given-in-input\">The cycle is created by connecting the last element of Linked List (i.e., tail) to some other node given in input.</h4>\n\n<h4 id=\"return-null-if-no-such-part-exists\">Return null if no such part exists.</h4>\n\n<h4 id=\"the-counting-of-nodes-starts-from-1\">The counting of nodes starts from 1.</h4>\n\n<h5 id=\"for-example\">For Example:</h5>\n\n<pre><code>head = [5 , 4 , 0 , -1]\n\npos = 2\n\nN = 1\n</code></pre>\n\n<p>You have to find the node where the cycle begins and return the Nth node from that point in the direction of the head.</p>\n\n<h5 id=\"input-format\">Input format :</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 denoting the number of test cases to be run. Then the test cases follow.\n\nThe first line of each test case contains elements of a  linked list terminated by -1, (hence -1 will never be the value of any node in the linked list.\n\nThe second line of each test case contains an integer representing the position where the cycle begins.\n\nThe third line of each test case contains an integer N, denoting the position to find.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case print, an integer denoting the Nth node from the start of the loop.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 50\n1 &lt;= X &lt;= 10^4\n-10^5 &lt;= Node.val &lt;= 10^5\n1 &lt;= N &lt;= 10^5\nWhere \u2018X\u2019 is the number of nodes in the linked list.\nTime Limit: 1 sec.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n5 4 0 -1\n2\n1\n9 8 1 2 5 14 -1\n5\n3\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>5\n8\n</code></pre>\n\n<h5 id=\"explanation\">Explanation:</h5>\n\n<pre><code>For test case one:- The cycle starts at 4. So the 1st node from 4 in the direction of the head is 5.\nFor test case two:- The cycle starts at 5. So the 3rd node from 5 in the direction of the head is 8.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n1 2 3 4 5 6 7 8 -1\n4\n2\n5 4 3 2 1 -1\n3\n4\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>2\nnull\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 5,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a linked list containing a cycle, determine the Nth node encountered when traversing the list from the cycle's starting point *towards the head* of the list. The cycle is formed by connecting the tail (last node) to a node within the list. Return `null` if a cycle does not exist or if the Nth node from the cycle start moving towards head does not exist.",
                "constraints": [
                    "1 <= T <= 50 (Number of test cases)",
                    "1 <= X <= 10^4 (Number of nodes in the linked list)",
                    "-10^5 <= Node.val <= 10^5 (Value of each node)",
                    "1 <= N <= 10^5 (The Nth node to find)"
                ],
                "testcases": [
                    {
                        "input": "head = [5, 4, 0, -1], pos = 2, n = 1",
                        "output": "5",
                        "explanation": "The cycle starts at the node with value 4. Moving one node towards the head from 4, we reach the node with value 5."
                    },
                    {
                        "input": "head = [9, 8, 1, 2, 5, 14, -1], pos = 5, n = 3",
                        "output": "8",
                        "explanation": "The cycle starts at the node with value 5. Moving three nodes towards the head from 5, we reach the node with value 8."
                    },
                    {
                        "input": "head = [1, 2, 3, 4, 5, 6, 7, 8, -1], pos = 4, n = 2",
                        "output": "2",
                        "explanation": "The cycle starts at the node with value 4. Moving two nodes towards the head from 4, we reach the node with value 2."
                    },
                    {
                        "input": "head = [5, 4, 3, 2, 1, -1], pos = 3, n = 4",
                        "output": "null",
                        "explanation": "The cycle starts at the node with value 2. Moving four nodes towards head is not possible as there are not enough nodes to move towards head. Hence, return null."
                    },
                    {
                        "input": "head = [1, 2, 3, -1], pos = -1, n = 1",
                        "output": "null",
                        "explanation": "There is no cycle present, since pos = -1. Thus, return null."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to solve this using two pointers, moving at different speeds.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}