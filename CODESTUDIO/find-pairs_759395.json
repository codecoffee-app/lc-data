{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 7696,
            "title": "Find Pairs",
            "titleSlug": "find-pairs_759395",
            "content": "<h4 id=\"we-are-given-a-sorted-doubly-linked-list-which-contains-distinct-positive-integers-and-an-integer-x-print-all-such-unique-pairs-from-the-given-list-so-that-their-sum-is-equal-to-x\">We are given a sorted doubly-linked list which contains distinct positive integers, and an integer \u2018X\u2019. Print all such unique pairs from the given list so that their sum is equal to \u2018X\u2019.</h4>\n\n<h5 id=\"input-format\">Input format :</h5>\n\n<pre><code>The first line of the input contains the elements of the doubly linked list separated by a single space and terminated by -1. Hence, -1 would never be a list element.\n\nThe second line contains a single integer \u2018X\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>Print pair elements separated by a single pace where the first element of the pair should be less than the second element of the pair. The order of pairs does not matter.\n\nPrint each unique pair in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the function and return the answer. \n</code></pre>\n\n<h5 id=\"follow-up\">Follow Up:</h5>\n\n<pre><code>Try to solve this problem in linear time complexity without using any other data structures.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= N &lt;= 5*10^5\n-2*10^9 &lt;= X &lt;= 2*10^9\n-10^9 &lt;= data &lt;= 10^9 and data != -1\n\nWhere \u2018N\u2019 is the length of the linked list and \u2018X\u2019 is the required pair sum value.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2 7 10 14 15 19 22 27 -1\n29\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>2 27\n7 22\n10 19\n14 15\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1:</h5>\n\n<pre><code>There are four such pairs possible (2, 27), (7, 22), (10, 19), (14, 15) whose sum is 29.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1 4 7 9 11 21 23 29 31 37 41 43 45 48 -1\n52\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>4 48\n7 45\n9 43\n11 41\n21 31\n23 29\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation For Sample Input 2:</h5>\n\n<pre><code>There are six such pairs possible (3, 48), (7, 45), (9, 43), (11, 41), (21, 31), (23, 29) whose sum is 52.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 4,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a sorted doubly linked list containing distinct positive integers and a target integer 'X', find all unique pairs within the list whose sum equals 'X'. Return these pairs as a vector of vectors, where each inner vector represents a pair (with the smaller element listed first).",
                "constraints": [
                    "1 <= N <= 5 * 10^5, where \u2018N\u2019 is the length of the linked list",
                    "-2 * 10^9 <= X <= 2 * 10^9",
                    "-10^9 <= data <= 10^9 and data != -1, where 'data' is the value of a node in the linked list"
                ],
                "testcases": [
                    {
                        "input": "linkedlist = [2, 7, 10, 14, 15, 19, 22, 27], x = 29",
                        "output": "[[2, 27], [7, 22], [10, 19], [14, 15]]",
                        "explanation": "The pairs (2, 27), (7, 22), (10, 19), and (14, 15) each sum to 29."
                    },
                    {
                        "input": "linkedlist = [1, 4, 7, 9, 11, 21, 23, 29, 31, 37, 41, 43, 45, 48], x = 52",
                        "output": "[[4, 48], [7, 45], [9, 43], [11, 41], [21, 31], [23, 29]]",
                        "explanation": "The pairs (4, 48), (7, 45), (9, 43), (11, 41), (21, 31), and (23, 29) each sum to 52."
                    },
                    {
                        "input": "linkedlist = [1, 2, 3, 4, 5], x = 7",
                        "output": "[[2, 5], [3, 4]]",
                        "explanation": "The pairs (2, 5) and (3, 4) each sum to 7."
                    },
                    {
                        "input": "linkedlist = [1, 2, 3, 4, 5], x = 10",
                        "output": "[]",
                        "explanation": "There are no pairs in the list that sum to 10."
                    },
                    {
                        "input": "linkedlist = [1, 3, 5, 7, 9], x = 10",
                        "output": "[[1, 9], [3, 7]]",
                        "explanation": "The pairs (1, 9) and (3, 7) each sum to 10."
                    },
                    {
                        "input": "linkedlist = [1, 2, 3], x = 4",
                        "output": "[[1, 3]]",
                        "explanation": "The pair (1, 3) sums to 4."
                    },
                    {
                        "input": "linkedlist = [10, 20, 30, 40, 50], x = 60",
                        "output": "[[10, 50], [20, 40]]",
                        "explanation": "The pairs (10, 50) and (20, 40) sum to 60."
                    },
                    {
                        "input": "linkedlist = [5, 10, 15, 20, 25], x = 30",
                        "output": "[[5, 25], [10, 20]]",
                        "explanation": "The pairs (5, 25) and (10, 20) sum to 30."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to explore all the possible pairs.</p>",
            "<p>Can you think about a data structure which can speed up the checking of the compliment node for a particular node to make the sum equal to \u2018X\u2019?</p>",
            "<p>Can you think about exploiting the property of sorted doubly linked-list?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}