{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9960,
            "title": "Find Pattern in String",
            "titleSlug": "find-pattern-in-string_1112621",
            "content": "<h4 id=\"you-are-given-two-strings-s-and-p-consisting-of-lowercase-english-alphabets-your-task-is-to-find-whether-the-p-is-present-in-s-as-a-substring-or-not\">You are given two strings &#39;S&#39; and &#39;P&#39; consisting of lowercase English alphabets. Your task is to find whether the &#39;P&#39; is present in &#39;S&#39; as a substring or not.</h4>\n\n<h5 id=\"note\">Note</h5>\n\n<pre><code>1. There may be more than one occurrence of &#39;P&#39; in &#39;S&#39;.\n2. Some alphabets in the strings may be repeated.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains a single integer &#39;T&#39;, representing the number of test cases\n\nThen the &#39;T&#39; test cases follow.\n\nThe first line of each test case contains two space-separated strings &#39;P&#39; and &#39;S&#39; respectively.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print a single line containing \u201cYES\u201d if string &#39;P&#39; is present in string &#39;S&#39; as a substring, otherwise print \u201cNO\u201d.\n\nThe output for each test case will be printed in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note</h4>\n\n<pre><code>You don\u2019t have to print anything, it has already been taken care of. Just implement the given function. \n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= |S| &lt;= 10000\n1 &lt;= |P| &lt; |S|\n\nWhere |S| and |P| represents the length of the string &#39;S&#39; and &#39;P&#39; respectively.\n\nTime limit: 1 sec.\n</code></pre>\n<h4 id=\"sample-input-1\">Sample input 1:</h4>\n\n<pre><code>3\nxxy yxxyxxy\na baac\ncfg cgfgfc\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample output 1</h4>\n\n<pre><code>YES\nYES\nNO\n</code></pre>\n\n<h4 id=\"explanation-for-sample-output-1\">Explanation for sample output 1</h4>\n\n<pre><code>In the first test case, there are two substrings equal to P on index 1 and 4 in S.\n\nIn the second test case, there are two substrings equal to P on indexes 1 and 2 in S.\nIn the third test case, P does not exist in S.\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample input 2:</h4>\n\n<pre><code>3\nbbb abba\niqw hdhhdqoa\ncar caribbean \n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample output 2</h4>\n\n<pre><code>NO\nNO\nYES\n</code></pre>\n\n<h4 id=\"explanation-for-sample-output-2\">Explanation for sample output 2</h4>\n\n<pre><code> In the first test case, P does not exist in S.\n In the second test case, P does not exist in S.\n In the third test case, there is one substring equal to P on index 1 in S.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 31,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two strings, 's' (the source string) and 'p' (the pattern string), both consisting of lowercase English alphabets, determine if 'p' is a substring of 's'.",
                "constraints": [
                    "1 <= T <= 100 (Number of test cases)",
                    "1 <= |s| <= 10000 (Length of source string)",
                    "1 <= |p| < |s| (Length of pattern string)"
                ],
                "testcases": [
                    {
                        "input": "p = \"xxy\", s = \"yxxyxxy\"",
                        "output": "YES",
                        "explanation": "The pattern \"xxy\" appears as a substring in \"yxxyxxy\" at indices 1 and 4."
                    },
                    {
                        "input": "p = \"a\", s = \"baac\"",
                        "output": "YES",
                        "explanation": "The pattern \"a\" appears as a substring in \"baac\" at indices 1 and 2."
                    },
                    {
                        "input": "p = \"cfg\", s = \"cgfgfc\"",
                        "output": "NO",
                        "explanation": "The pattern \"cfg\" does not appear as a substring in \"cgfgfc\"."
                    },
                    {
                        "input": "p = \"bbb\", s = \"abba\"",
                        "output": "NO",
                        "explanation": "The pattern \"bbb\" does not exist in string \"abba\"."
                    },
                    {
                        "input": "p = \"iqw\", s = \"hdhhdqoa\"",
                        "output": "NO",
                        "explanation": "The pattern \"iqw\" does not exist in string \"hdhhdqoa\"."
                    },
                    {
                        "input": "p = \"car\", s = \"caribbean\"",
                        "output": "YES",
                        "explanation": "The pattern \"car\" appears as a substring in \"caribbean\" at index 0."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can we check all possible substrings to find the pattern?</p>",
            "<p>Can KMP algorithm be useful?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}