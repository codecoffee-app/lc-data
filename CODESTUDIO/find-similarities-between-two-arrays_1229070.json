{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10444,
            "title": "Find similarities between two arrays. ",
            "titleSlug": "find-similarities-between-two-arrays_1229070",
            "content": "<h4 id=\"you-have-been-given-two-arrays-list-arr1-and-arr2-consisting-of-n-and-m-integers-respectively-your-task-is-to-return-the-number-of-elements-common-to-arr1-and-arr2-and-the-number-of-elements-in-the-union-of-arr1-and-arr2\">You have been given two arrays/list \u2018ARR1\u2019 and \u2018ARR2\u2019 consisting of \u2018N\u2019 and \u2018M\u2019 integers respectively. Your task is to return the number of elements common to \u2018ARR1\u2019 and \u2018ARR2\u2019 and the number of elements in the union of \u2018ARR1\u2019 and \u2018ARR2\u2019.</h4>\n\n<h5 id=\"example\">Example:</h5>\n\n<pre><code>Let\u2019s assume \u2018ARR1\u2019 is [1,2,3,4,5] and \u2018ARR2\u2019 is [2,4,6,8]. Elements common to \u2018ARR1\u2019 and \u2018ARR2\u2019 are [2,4] as they occur in both \u2018ARR1\u2019 and \u2018ARR2\u2019. Therefore the number of elements common to \u2018ARR1\u2019 and \u2018ARR2\u2019 is 2. Union of \u2018ARR1\u2019 and \u2018ARR2\u2019 is [1,2,3,4,5,6,8]. Therefore the number of distinct elements in the union of \u2018ARR1\u2019 and \u2018ARR2\u2019 is 7. So, the answer will be 2 7.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>1. \u2018ARR1\u2019 consists of distinct integers i.e no number occurs twice in array/list.\n\n2. \u2018ARR2\u2019 consists of distinct integers i.e no number occurs twice in array/list.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 representing the number of test cases.\n\nThe first line of each test case contains two single space-separated integers \u2018N&#39; and \u2018M\u2019 representing the size of the array/list \u2018ARR1\u2019 and \u2018ARR2\u2019 respectively.\n\nThe second line of input of each test case contains \u2018N\u2019 single space-separated integers representing the array/list elements of \u2018ARR1\u2019.\n\nThe third line and the last line of input of each test contains \u2018M\u2019 single space-separated integers representing the array/list elements of \u2018ARR2\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, return the number of elements common to \u2018ARR1\u2019 and \u2018ARR2\u2019 and the number of distinct elements in the union of \u2018ARR1\u2019 and \u2018ARR2\u2019. \n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 1000\n1 &lt;= M &lt;= 1000\n1 &lt;= \u2018arr1[i]\u2019 &lt;= 10^5\n1 &lt;= \u2018arr2[i]\u2019 &lt;= 10^5  \n\nTime Limit: 1sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n2 2\n1 2\n3 4  \n2 1\n2 3\n3\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>0 4\n1 2\n</code></pre>\n\n<h4 id=\"sample-output-1-explanation\">Sample Output 1 Explanation:</h4>\n\n<pre><code>Test case 1:\n\n\u2018ARR1\u2019 is [1,2]\n\u2018ARR2\u2019 is [3,4] \nElements common to \u2018ARR1\u2019 and \u2018ARR2\u2019 are []. Therefore the number of elements common to \u2018arr\u2019 and \u2018brr\u2019 is 0. \nThe union of \u2018ARR1\u2019 and \u2018ARR2\u2019 is [1,2,3,4]. Therefore the number of distinct elements in the union of \u2018ARR1\u2019 and \u2018ARR2\u2019 is 4.\n\nTherefore the answer is 0 4.\n\nTest case 2:\n\n\u2018ARR1\u2019 is [2,3].\n\u2018ARR2\u2019 is [3] \nElements common to \u2018ARR1\u2019 and \u2018ARR2\u2019 are [3]. Therefore the number of elements common to \u2018ARR1\u2019 and \u2018ARR2\u2019 is 1. \nThe union of \u2018ARR1\u2019 and \u2018ARR2\u2019 is [2,3]. Therefore the number of distinct elements in the union of \u2018ARR1\u2019 and \u2018ARR2\u2019 is 2.\n\nTherefore the answer is 1 2.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n5 3\n1 2 3 4 5\n4 6 2\n1 2\n1\n3 2\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>2 6\n0 3\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 171,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two arrays `ARR1` and `ARR2` of sizes `N` and `M` respectively, containing integers. Find the number of common elements between `ARR1` and `ARR2`, and the number of unique elements in the union of `ARR1` and `ARR2`.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 1000",
                    "1 <= M <= 1000",
                    "1 <= arr1[i] <= 10^5",
                    "1 <= arr2[i] <= 10^5",
                    "Time Limit: 1sec",
                    "`ARR1` consists of distinct integers.",
                    "`ARR2` consists of distinct integers."
                ],
                "testcases": [
                    {
                        "input": "2\n2 2\n1 2\n3 4\n2 1\n2 3\n3",
                        "output": "0 4\n1 2",
                        "explanation": "Test case 1:\nARR1 is [1, 2] and ARR2 is [3, 4].\nThe common elements are []. The number of common elements is 0.\nThe union is [1, 2, 3, 4]. The number of unique elements in the union is 4.\nTherefore, the answer is 0 4.\n\nTest case 2:\nARR1 is [2, 3] and ARR2 is [3].\nThe common elements are [3]. The number of common elements is 1.\nThe union is [2, 3]. The number of unique elements in the union is 2.\nTherefore, the answer is 1 2."
                    },
                    {
                        "input": "2\n5 3\n1 2 3 4 5\n4 6 2\n1 2\n1\n3 2",
                        "output": "2 6\n0 3",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>For each element in \u2018ARR1\u2019 check if present in \u2018ARR2\u2019.&nbsp;</p>",
            "<p>If we sort the arrays, can we improve our searching process?</p>",
            "<p>Do we really need to sort the arrays?&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "solutions": [
            {
                "lang": "cpp",
                "full_func": "/*\n    Time Complexity: O(N + M)\n    Space Complexity: O(N)\n\n    where 'N' denotes the size of array/list 'ARR1' and 'M' denotes the size of array/list 'ARR2'.\n*/\n\npair < int, int > findSimilarity(vector < int > arr1, vector < int > arr2, int n, int m) {\n  int intersectionSize = 0;\n  unordered_map < int, int > ma;\n\n  for (int i = 0; i < n; i++)\n    ma[arr1[i]] = 1;\n  for (int i = 0; i < m; i++) {\n    if (ma.count(arr2[i]) == 1)\n      intersectionSize++;\n  }\n\n  int unionSize = n + m - intersectionSize;\n  pair < int, int > res;\n  res.first = intersectionSize;\n  res.second = unionSize;\n\n  return res;\n}",
                "lang_text": "cpp"
            },
            {
                "lang": "python",
                "full_func": "'''\r\n    Time Complexity: O(N + M)\r\n    Space Complexity: O(N)\r\n\r\n    where 'N' denotes the size of array/list 'ARR1' and 'M' denotes the size of array/list 'ARR2'.\r\n'''\r\n\r\ndef findSimilarity(arr1,  arr2,  n,  m):\r\n\r\n    intersectionSize = 0\r\n\r\n    mp = {}\r\n\r\n    for i in range(n):\r\n\r\n        if(arr1[i] in mp):\r\n            mp[arr1[i]] += 1\r\n\r\n        else:\r\n            mp[arr1[i]] = 1\r\n\r\n    for i in range(m):\r\n\r\n        if(arr2[i] in mp and mp[arr2[i]] == 1):\r\n            intersectionSize += 1\r\n\r\n    unionSize = n + m - intersectionSize\r\n\r\n    return [intersectionSize, unionSize]\r\n",
                "lang_text": "python"
            },
            {
                "lang": "java",
                "full_func": "/*\n    Time Complexity: O(N + M)\n    Space Complexity: O(N)\n\n    where 'N' denotes the size of array/list 'ARR1' and 'M' denotes the size of array/list 'ARR2'.\n*/\n    \nimport java.util.*;\n\npublic class Solution {\n\tpublic static ArrayList<Integer> findSimilarity(ArrayList<Integer> arr1, ArrayList<Integer> arr2, int n, int m) {\n\t\t  int intersectionSize = 0;\n\t\t  Map < Integer, Integer > ma = new HashMap <Integer, Integer > ();\n\n\t\t  for (int i = 0; i < n; i++)\n\t\t    {\n\t\t    \tma.put(arr1.get(i),1);\n\t\t    }\n\n\t\t    for (int i = 0; i < m; i++) {\n\t\t\t    if (ma.containsKey(arr2.get(i)))\n\t\t\t     { \n\t\t\t     \tintersectionSize++;\n\t\t\t     }\n\t  \t\t}\n\n\t\t  int unionSize = n + m - intersectionSize;\n\t\t  ArrayList < Integer > res = new ArrayList < Integer > ();\n\t\t  res.add(intersectionSize);\n\t\t  res.add(unionSize);\n\n\n\t\t  return res;\n\t}\n}",
                "lang_text": "java"
            }
        ],
        "platform": "CODESTUDIO"
    }
}