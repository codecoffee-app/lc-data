{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 7716,
            "title": "Find Slope",
            "titleSlug": "find-slope_762941",
            "content": "<h4 id=\"given-a-linked-list-whose-nodes-represent-the-coordinates-of-the-cartesian-plane-find-the-minimum-and-the-maximum-slope-of-simultaneous-points-of-coordinates\">Given a linked list, whose nodes represent the coordinates of the cartesian plane. Find the minimum and the maximum slope of simultaneous points of coordinates.</h4>\n\n<h4 id=\"linked-list-p1-x1-y1-p2-x2-y2-p3-x3-y3\">Linked List : P1(X1, Y1)  -&gt; P2( X2, Y2)  -&gt; P3(X3, Y3).</h4>\n\n<h4 id=\"here-p1-point1-corresponds-to-coordinates-x1-y1-similarly-p2-point2-corresponds-to-coordinates-x2-y2\">Here P1(point1) corresponds to coordinates (X1, Y1), similarly P2(point2) corresponds to coordinates (X2, Y2).</h4>\n\n<h4 id=\"your-task-is-to-find-the-maximum-slope-p1-p2-slope-p2-p3-and-minimum-slope-p1-p2-slope-p2-p3\">Your task is to find the Maximum(Slope(P1, P2), Slope(P2, P3)) and Minimum(Slope(P1, P2), Slope(P2, P3)).</h4>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You only need to return the starting node for minimum and maximum slope. So if slope(P1, P2) is maximum, just return P1.\n\nIn case of more than one possible solution return the first occurring solution.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer &#39;T&#39; representing the number of Test cases.\n\nThe first line of each test case contains linked list elements/nodes separated by space and terminated by -1. Each node would consist of &#39;X&#39; and &#39;Y&#39; coordinates.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print the Maximum(Slope(P1, P2), Slope(P2, P3)) and Minimum(Slope(P1, P2), Slope(P2, P3)).\n</code></pre>\n\n<h5 id=\"note\">Note</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10        \n2 &lt;= N &lt;= 10^3\n-10^9 &lt;= X &lt;= 10^9\n-10^9 &lt;= Y &lt;= 10^9\n\nWhere &#39;N&#39; denotes the length of the linked list and &#39;X&#39; and &#39;Y&#39; denote the coordinates of the &#39;X&#39; and &#39;Y&#39; axis respectively.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n1 5 7 9 6 3 -1\n3 2 4 3 5 4 6 5 -1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>1 5 7 9\n3 2 3 2\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input1\">Explanation For Sample Input1:</h5>\n\n<pre><code>Here we have 2 test cases, hence there are 2 linked lists.\n\nTest Case 1: For the first linked list (1,5)-&gt;(7,9)-&gt;(6,3), the minimum slope is between nodes (1,5) and (7,9) so we print the first node i.e (1, 5) and the maximum slope is between nodes (7,9) and (6,3) so we print the first node i.e (7, 9).\n\nTese Case 2: For the second linked list (3,2)-&gt;(4,3)-&gt;(5,4)-&gt;(6,5), there are multiple answers, but we only need first occurring nodes. So the first minimum slope is between nodes (3,2) and (4,3) so we print the first node i.e (3, 2) and the first maximum slope is between nodes (3,2) and (4,3) so we print the first node i.e (3, 2).\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n4 3 8 6 2 9 4 18 -1\n2 9 4 18 4 3 8 6 -1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>8 6 2 9 \n4 3 4 18 \n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": -1,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a linked list where each node represents coordinates on a Cartesian plane, find the minimum and maximum slope calculated from consecutive pairs of points. For the given three consecutive points P1, P2, and P3, the task is to determine Maximum(Slope(P1, P2), Slope(P2, P3)) and Minimum(Slope(P1, P2), Slope(P2, P3)). Return the starting node corresponding to the first occurrence of the minimum and maximum slopes.",
                "constraints": [
                    "1 <= T <= 10",
                    "2 <= N <= 10^3",
                    "-10^9 <= X <= 10^9",
                    "-10^9 <= Y <= 10^9",
                    "Where 'N' denotes the length of the linked list and 'X' and 'Y' denote the coordinates of the 'X' and 'Y' axis respectively.",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "1 5 7 9 6 3 -1",
                        "output": "1 5 7 9",
                        "explanation": "For the linked list (1,5)->(7,9)->(6,3), the minimum slope is between nodes (1,5) and (7,9), thus returning (1, 5). The maximum slope is between nodes (7,9) and (6,3), thus returning (7, 9)."
                    },
                    {
                        "input": "3 2 4 3 5 4 6 5 -1",
                        "output": "3 2 3 2",
                        "explanation": "For the linked list (3,2)->(4,3)->(5,4)->(6,5), the first minimum slope is between nodes (3,2) and (4,3), returning (3, 2). The first maximum slope is also between nodes (3,2) and (4,3), returning (3, 2)."
                    },
                    {
                        "input": "4 3 8 6 2 9 4 18 -1",
                        "output": "8 6 2 9",
                        "explanation": null
                    },
                    {
                        "input": "2 9 4 18 4 3 8 6 -1",
                        "output": "4 3 4 18",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to recursively traverse on each node and calculate the slope between consecutive nodes.</p>",
            "<p>Can we iteratively traverse on each node and calculate the slope between consecutive nodes?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Computational Geometry",
                "slug": "computational-geometry"
            },
            {
                "name": "Linked List",
                "slug": "linked-list"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}