{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 16467,
            "title": "Find Student",
            "titleSlug": "find-student_3161883",
            "content": "<h4 id=\"there-are-n-students-standing-in-a-line-and-their-heights-are-given-but-the-constraint-is-that-the-difference-in-heights-of-adjacent-students-does-not-exceed-k-i-e\">There are &#39;N&#39; students standing in a line, and their heights are given. But the constraint is that the difference in heights of adjacent students does not exceed &#39;K&#39;, i.e.,</h4>\n\n<pre><code>| height[i] - height[i+1] | &lt;= K, where i \u2208  (1, N-1)\n</code></pre>\n\n<h4 id=\"your-task-is-to-find-the-position-of-a-student-having-height-h-if-no-such-student-is-found-return-1\">Your task is to find the position of a student having height &#39;H&#39;. If no such student is found, return -1.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>Positions are counted starting from 0.\nIf two or more students have height equal to &#39;H&#39;, return the student with the minimum position.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code> The first line contains &#39;T&#39;, denoting the number of tests.\n For each Test :\n     The first line contains three space-separated integers &#39;N&#39;, &#39;K&#39; and &#39;H&#39;,  denoting the number of students, the maximum difference in adjacent heights, and height of target student, respectively.\n     The second line contains an array &#39;A&#39; of length &#39;N&#39;, denoting the heights of students.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test, print an integer, denoting the minimum position of a student having a height equal to &#39;H&#39;.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You are not required to print the expected output. It has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints -</h5>\n\n<pre><code>1 &lt;= &#39;T&#39; &lt;= 5\n1 &lt;= &#39;N&#39; &lt;= 10^5\n1 &lt;= K, A[i] &lt;= 10^9  i \u2208  (1, N)\nNote - Sum of &#39;N&#39; over all test cases does not exceed 10^5.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n5 1 6\n4 5 6 7 6\n3 2 2\n1 2 2\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1</h5>\n\n<pre><code>2\n1\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1:</h5>\n\n<pre><code>For case 1:\nThe first student with height equal to 6, is standing at position 2 (starting from 0).\n\nFor Case 2:\nThe first student with height equal to 2, is standing at position 1 (starting from 0).\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n3 1 2\n1 1 1\n4 1 2\n3 2 1 3\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>-1\n1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 4,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given 'N' students standing in a line with their heights, find the minimum index (0-based) of a student with height 'H'. The absolute difference in heights between adjacent students should not exceed 'K'. If no student has height 'H', return -1.",
                "constraints": [
                    "1 <= 'T' <= 5",
                    "1 <= 'N' <= 10^5",
                    "1 <= K, A[i] <= 10^9 for i in range(N)",
                    "Sum of 'N' over all test cases does not exceed 10^5",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "5 1 6\n4 5 6 7 6",
                        "output": "2",
                        "explanation": "The first student with height 6 is at index 2."
                    },
                    {
                        "input": "3 2 2\n1 2 2",
                        "output": "1",
                        "explanation": "The first student with height 2 is at index 1."
                    },
                    {
                        "input": "3 1 2\n1 1 1",
                        "output": "-1",
                        "explanation": "No student has height 2."
                    },
                    {
                        "input": "4 1 2\n3 2 1 3",
                        "output": "1",
                        "explanation": "The first student with height 2 is at index 1."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Check the heights of all the students?</p>",
            "<p>While iterating on positions, can you skip/jump some of them?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}