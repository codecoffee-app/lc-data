{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10574,
            "title": "Find the largest matching word. ",
            "titleSlug": "find-the-largest-matching-word_1235168",
            "content": "<h4 id=\"you-have-been-given-a-string-st-of-length-n-and-x-words-all-containing-lowercase-alphabets-you-call-a-word-matching-from-st-if-by-removing-some-characters-of-st-you-can-form-that-word\">You have been given a string \u2018ST\u2019 of length \u2018N\u2019 and \u2018X\u2019 words all containing lowercase alphabets. You call a word matching from \u2018ST\u2019 if by removing some characters of \u2018ST\u2019 you can form that word.</h4>\n\n<h4 id=\"your-task-is-to-return-the-largest-matching-word-among-these-x-words-if-there-are-multiple-strings-of-largest-length-return-lexicographically-smallest-string-if-no-word-matches-from-st-return-as-the-string\">Your task is to return the largest matching word among these \u2018X\u2019 words. If there are multiple strings of largest length return lexicographically smallest string. If no word matches from \u2018ST\u2019 return \u2018#\u2019 as the string.</h4>\n\n<h5 id=\"example\">Example:</h5>\n\n<pre><code>Let\u2019s say you have \u201cabcd\u201d as string \u2018ST\u2019 and 2 words \u201cbd\u201d and \u201cdb\u201d. \u201cbd\u201d matches with the string \u2018ST\u2019 as you can remove \u2018a\u2019 and \u2018c\u2019 character to form \u201cbd\u201d. \u201cdb\u201d does not match with the string \u2018ST\u2019 because it is impossible to form \u201cdb\u201d from the string \u2018ST\u2019 by removing characters.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You cannot change the order of characters in \u2018ST\u2019 after removing some characters. \n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 representing the number of test cases.\n\nThe first line of each test case contains two single space-separated integers \u2018N\u2019 and \u2018X\u2019 representing the length of string \u2018ST\u2019 and number of words respectively.\n\nThe second line contains the string \u2018ST\u2019.\n\nEach of the next \u2018X\u2019 lines contains \u2018X\u2019 words.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, return the largest matching word among these \u2018X\u2019 words. If there are multiple strings of largest length return lexicographically smallest string. If no word matches from \u2018ST\u2019 return \u2018#\u2019 as the string.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 100\n1 &lt;= X &lt;= 100\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n4 2\nabcd  \nbd\ncd\n4 2\nefcd  \nbdf\ndb\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>bd\n#\n</code></pre>\n\n<h4 id=\"sample-output-1-explanation\">Sample Output 1 Explanation:</h4>\n\n<pre><code>Test case 1:\n\nMatching from \u2018st\u2019 for each word:-\n\u201cbd\u201d matches with string as we can remove \u2018a\u2019 and \u2018c\u2019 from the string \u2018ST\u2019 to form \u201cbd\u201d.\n\u201ccd\u201d matches with string as we can remove \u2018a\u2019 and \u2018b\u2019 from the string \u2018st\u2019 to form \u201ccd\u201d.\n\nTherefore the answer is \u201cbd\u201d as it is the longest matching word. \u201ccd\u201d is of the same length but \u201cbd\u201d is lexicographically smaller.\n\n\nTest case 2:\n\nMatching from \u2018ST\u2019 for each word:-\n\u201cbdf\u201d does not match with string as \u2018st\u2019 does not contains \u2018b\u2019.\n\u201cdb\u201d does not match with string as \u2018st\u2019 does not contains \u2018b\u2019.\n\nTherefore the answer is \u201c#\u201d as no word matches from the string \u2018st\u2019.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n4 2\ndacb  \nac\ndcb\n4 2\nefcd  \nfd\nef\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>dcb\nef\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 7,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string 'ST' of length 'N' and a list of 'X' words containing lowercase alphabets, determine the largest matching word. A word is considered matching if it can be formed by removing some characters from 'ST' without changing the order of the remaining characters.\n\nYour task is to find the largest matching word among the given 'X' words. If multiple words have the same largest length, return the lexicographically smallest one. If no word matches 'ST', return '#'.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 100",
                    "1 <= X <= 100",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "4 2\nabcd\nbd\ncd",
                        "output": "bd",
                        "explanation": "The words 'bd' and 'cd' both match 'abcd'. 'bd' can be formed by removing 'a' and 'c', and 'cd' can be formed by removing 'a' and 'b'. Both have a length of 2. However, 'bd' is lexicographically smaller than 'cd', so the answer is 'bd'."
                    },
                    {
                        "input": "4 2\nefcd\nbdf\ndb",
                        "output": "#",
                        "explanation": "Neither 'bdf' nor 'db' can be formed from 'efcd' by removing characters. 'bdf' contains 'b' which is not in 'efcd', and 'db' contains 'b' which is not in 'efcd'. Therefore, the output is '#'."
                    },
                    {
                        "input": "4 2\ndacb\nac\ndcb",
                        "output": "dcb",
                        "explanation": "The words 'ac' and 'dcb' both match.  'ac' is formed by removing 'd' and 'b'. 'dcb' is formed by removing 'a'. 'dcb' is longer than 'ac' so the answer is 'dcb'."
                    },
                    {
                        "input": "4 2\nefcd\nfd\nef",
                        "output": "ef",
                        "explanation": "The words 'fd' and 'ef' both match. 'fd' is formed by removing 'e' and 'c'. 'ef' is formed by removing 'c' and 'd'. The length of 'fd' and 'ef' is same. 'ef' is lexicographically smaller than 'fd' so the answer is 'ef'."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Find all words that can be formed from \u2018st\u2019.&nbsp;&nbsp;</p>",
            "<p>For each word check greedily if it can be formed from \u2018ST\u2019.&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}