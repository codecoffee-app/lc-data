{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12045,
            "title": "Find the Most Competitive Subsequence",
            "titleSlug": "find-the-most-competitive-subsequence_1402874",
            "content": "<h4 id=\"you-are-given-an-array-of-integers-arr-and-a-positive-integer-c-your-task-is-to-return-the-most-competitive-subsequence-of-arr-of-size-c\">You are given an array of integers, \u2018ARR\u2019, and a positive integer, \u2018C\u2019. Your task is to return the most competitive subsequence of \u2018ARR\u2019 of size \u2018C\u2019.</h4>\n\n<h4 id=\"given-a1-and-a2-as-subsequences-of-the-same-size-of-arr-subsequence-a1-is-said-to-be-more-competitive-than-subsequence-a2-if-at-the-first-non-matching-position-in-a1-and-a2-subsequence-a1-has-an-integer-less-than-the-corresponding-integer-in-a2\">Given \u2018a1\u2019 and \u2018a2\u2019 as subsequences (of the same size) of \u2018ARR\u2019. Subsequence \u2018a1\u2019 is said to be more competitive than subsequence \u2018a2\u2019 if, at the first non-matching position in \u2018a1\u2019 and \u2018a2\u2019, subsequence \u2018a1\u2019 has an integer less than the corresponding integer in \u2018a2\u2019.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>1) A subsequence is a sequence that can be derived from another sequence by deleting some or no elements without changing the order of the remaining elements.\n\n2) Given arr = {1, 3, 4, 5, 6} and C = 3, subsequence {1, 3, 4} is more competitive than {1, 3, 5} because at the first non-matching position, i.e., at index 2, 4 (in first subsequence) &lt; 5 (in second subsequence).\n</code></pre>\n\n<h4 id=\"input-format\">Input Format:</h4>\n\n<pre><code>The first line of input contains an integer &#39;T&#39; representing the number of test cases.\n\nThe first line of each test case contains an integer \u2018N\u2019 representing the total number of integers in \u2018ARR\u2019.\n\nThe second line of each test case contains &#39;N&#39; space-separated integers representing the array elements.\n\nThe last line of each test case contains an integer \u2018C\u2019 representing the size of the most competitive subsequence.\n</code></pre>\n\n<h4 id=\"output-format\">Output Format:</h4>\n\n<pre><code>For each test case, return the most competitive subsequence.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints:</h4>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= C &lt;= N &lt;= 10^3\n0 &lt;= ARR[ i ] &lt;= 10 ^ 9\n\nTime limit: 1 second\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1:</h4>\n\n<pre><code>2\n4\n2 1 4 3 \n2\n5\n7 4 1 3 6\n3 \n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1:</h4>\n\n<pre><code>1 3\n1 3 6\n</code></pre>\n\n<h4 id=\"explanation-of-sample-output-1\">Explanation of Sample Output 1:</h4>\n\n<pre><code>Test Case 1 :  \n\nGiven arr = {2, 1, 4, 3} and C = 2. Among all the subsequences of size 2: {2, 1}, {2,  4}, {2, 3}, {1, 4}, {1, 3} and {4, 3}, the subsequence {1, 3} is the most competitive.\n\n\nTest Case 2 : \n\nGiven arr = {7, 4, 1, 3, 6} and C = 3. Among all the subsequences of size 3: {7, 4, 1}, {7, 4, 3}, {7, 4, 6}, {7, 1, 3}, {7, 1, 6}, {4, 1, 3}, {4, 1, 6}, {4, 3, 6} and {1, 3, 6}, the subsequence {1, 3, 6} is the most competitive.\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2:</h4>\n\n<pre><code>2\n6\n3 10 8 13 25 7\n3\n4\n8 8 8 8\n2\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2:</h4>\n\n<pre><code>3 8 7\n8 8\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -7,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of integers 'ARR' and a positive integer 'C', find the most competitive subsequence of 'ARR' with a length of 'C'. A subsequence 'a1' is more competitive than 'a2' (both of same size) if, at the first index where they differ, the element in 'a1' is smaller than the element in 'a2'. A subsequence is derived by deleting zero or more elements from the original array without changing the order of the remaining elements.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= C <= N <= 10^3",
                    "0 <= ARR[ i ] <= 10 ^ 9",
                    "Time limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "4\n2 1 4 3\n2",
                        "output": "1 3",
                        "explanation": "Given arr = {2, 1, 4, 3} and C = 2. The subsequence {1, 3} is the most competitive among all subsequences of size 2."
                    },
                    {
                        "input": "5\n7 4 1 3 6\n3",
                        "output": "1 3 6",
                        "explanation": "Given arr = {7, 4, 1, 3, 6} and C = 3. The subsequence {1, 3, 6} is the most competitive among all subsequences of size 3."
                    },
                    {
                        "input": "6\n3 10 8 13 25 7\n3",
                        "output": "3 8 7",
                        "explanation": null
                    },
                    {
                        "input": "4\n8 8 8 8\n2",
                        "output": "8 8",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>In a subsequence, the lesser the integer at the left, the greater is the chances of it being the most competitive. Can you build the subsequence from left to right with the above idea?</p>",
            "<p>Use monotonically increasing stack to check whether the current element is smaller than the last inserted element in the stack. If yes, we can replace it with the current element to get a lexicographically smaller subsequence.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Stacks & Queues",
                "slug": "stacks-&-queues"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}