{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 13760,
            "title": "Find the Nth term",
            "titleSlug": "find-the-nth-term_1796211",
            "content": "<h4 id=\"you-want-to-get-tutelage-under-the-ultimate-ninja-ankush-but-for-that-you-have-to-pass-his-test-his-test-is-simple-he-has-given-you-a-relation-function-f-n-2-f-n-1-3-f-n-2-where-f-0-f-1-1-and-wants-you-to-find-the-n-th-term-for-the-function\">You want to get tutelage under the Ultimate Ninja Ankush, but for that you have to pass his test. His test is simple: he has given you a relation function, F(n) = 2*F(n-1) + 3*F(n-2),where F(0) = F(1) = 1 and wants you to find the \u2018N\u2019th term for the function.</h4>\n\n<h4 id=\"the-nth-term-can-be-very-large-return-it-after-modulus-10-9-7\">The &#39;N&#39;th term can be very large, return it after modulus 10^9 + 7.</h4>\n\n<h4 id=\"for-example\">For example:</h4>\n\n<pre><code>Given \u2018N\u2019 = 3,\nF(3) = 13,This is because F(0) = 1, F(1) = 1, Therefore F(2) = 2*F(1) + 3*F(1), therefore F(2) = 5, and F(3) = 2*F(2) + 3*F(1), therefore F(3) = 13.\n</code></pre>\n\n<h5 id=\"input-format\">Input format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases.\n\nThe next \u2018T\u2019 lines contains a single integer \u2018N\u2019, which denotes the number given to us.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, You are supposed to return the Nth term for the given relation.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You are not required to print the expected output; it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= \u2018T\u2019 &lt;= 10\n1 &lt;= \u2018N\u2019 &lt;= 10 ^ 9\n\nTime Limit: 1sec.\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1 :</h4>\n\n<pre><code>2\n3\n4\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1 :</h4>\n\n<pre><code>13\n41  \n</code></pre>\n\n<h4 id=\"explanation-of-the-sample-input-1\">Explanation of the Sample Input 1:</h4>\n\n<pre><code>In the first test case,F(3) = 13,This is because F(0) = 1, F(1) = 1, Therefore F(2) = 2*F(1) + 3*F(1), therefore F(2) = 5, and F(3) = 2*F(2) + 3*F(1), therefore F(3) = 13.\n\nIn the second test case, F(4) = 41, This is because F(2) = 5, F(3) = 13, F(4) = 2*F(3) + 3*F(2), therefore F(4) = 41.   \n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2 :</h4>\n\n<pre><code>2\n5\n2\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2 :</h4>\n\n<pre><code>121\n5\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 2,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a recurrence relation F(n) = 2*F(n-1) + 3*F(n-2), where F(0) = 1 and F(1) = 1, find the Nth term of the sequence. Return the Nth term modulo 10^9 + 7.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10^9",
                    "Time Limit: 1sec."
                ],
                "testcases": [
                    {
                        "input": "3",
                        "output": "13",
                        "explanation": "F(0) = 1, F(1) = 1, F(2) = 2*F(1) + 3*F(0) = 2*1 + 3*1 = 5, F(3) = 2*F(2) + 3*F(1) = 2*5 + 3*1 = 13."
                    },
                    {
                        "input": "4",
                        "output": "41",
                        "explanation": "F(0) = 1, F(1) = 1, F(2) = 2*F(1) + 3*F(0) = 5, F(3) = 2*F(2) + 3*F(1) = 13, F(4) = 2*F(3) + 3*F(2) = 2*13 + 3*5 = 26 + 15 = 41."
                    },
                    {
                        "input": "5",
                        "output": "121",
                        "explanation": null
                    },
                    {
                        "input": "2",
                        "output": "5",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can this be found recursively?</p>",
            "<p>Can we do this iteratively?</p>",
            "<p>Can we speed up the iteration?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            },
            {
                "name": "Matrices (2D Arrays)",
                "slug": "matrices-(2d-arrays)"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}