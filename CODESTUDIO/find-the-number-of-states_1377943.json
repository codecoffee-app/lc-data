{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 11117,
            "title": "Find the number of states",
            "titleSlug": "find-the-number-of-states_1377943",
            "content": "<h4 id=\"you-are-given-n-cities-some-of-which-are-connected-by-bidirectional-roads-you-are-also-given-an-n-x-n-matrix-i-e-roads-where-if-city-i-and-j-are-connected-by-a-road-then-roads-i-j-1-otherwise-roads-i-j-0\">You are given <em><strong>\u2018n\u2019</strong></em> cities, some of which are connected by bidirectional roads. You are also given an \u2018n x n\u2019 matrix i.e. <em><strong>\u2018roads\u2019</strong></em>, where if city \u2018i\u2019 and \u2018j\u2019 are connected by a road then \u2018roads[i][j]&#39;= 1, otherwise \u2018roads[i][j]&#39; = 0.</h4>\n\n<p><br></p>\n\n<h4 id=\"a-province-is-a-group-of-cities-that-are-either-directly-or-indirectly-connected-to-each-other-through-roads\">A province is a group of cities that are either directly or indirectly connected to each other through roads.</h4>\n\n<p><br></p>\n\n<h4 id=\"the-goal-is-to-count-and-return-the-total-number-of-such-provinces-in-the-given-matrix\">The goal is to count and return the total number of such provinces in the given matrix.</h4>\n\n<p><br></p>\n\n<h5 id=\"example\">Example:</h5>\n\n<pre><code>n = 4, roads = [ [1, 1, 1, 0],\n                 [1, 1, 1, 0],\n                 [1, 1, 1, 0],\n                 [0, 0, 0, 1] ]\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/example-8720.png\" alt=\"example\"></p>\n\n<pre><code>So, there are \u20182\u2019 provinces.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>1. A city is connected to itself. So, for every city \u2018i\u2019, \u2018roads[i][i] = 1\u2019.\n</code></pre>\n\n<h5 id=\"input-format\">Input format:</h5>\n\n<pre><code>The first line contains an integer \u2018n\u2019 denoting the number of cities.\n\nNext \u2018n\u2019 lines contains \u2018n\u2019 space-separated integers denoting a row of \u2018roads\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output format:</h5>\n\n<pre><code>The output contains the number of provinces.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample input 1:</h5>\n\n<pre><code>3\n1 0 0 \n0 1 0 \n0 0 1 \n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample output 1:</h5>\n\n<pre><code>3\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of sample input 1:</h5>\n\n<pre><code>Test Case 1:\nn = 3, roads = [ [1, 0, 0],\n                 [0, 1, 0],\n                 [0, 0, 1] ]\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/sampl1-8721.png\" alt=\"sample1\"></p>\n\n<pre><code>So, there are \u20183\u2019 provinces.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample input 2:</h5>\n\n<pre><code>4\n1 1 0 0 \n1 1 0 0 \n0 0 1 1 \n0 0 1 1 \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample output 2:</h5>\n\n<pre><code>2\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-2\">Explanation of sample input 2:</h5>\n\n<pre><code>n = 4, roads = [ [1, 1, 0, 0],\n                 [1, 1, 0, 0],\n                 [0, 0, 1, 1],\n                 [0, 0, 1, 1] ]\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/sample2-8722.png\" alt=\"sample2\"></p>\n\n<pre><code>So, there are \u20182\u2019 provinces.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= &#39;n&#39; &lt;= 200\nroads[i][j] is 1 or 0.\nroads[i][j] == roads[j][i]\n\nTime limit: 1 sec\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 72,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given 'n' cities, some connected by bidirectional roads represented by an 'n x n' matrix 'roads'. 'roads[i][j] = 1' if cities 'i' and 'j' are connected, otherwise 'roads[i][j] = 0'. A province is a group of cities connected directly or indirectly. The task is to count and return the total number of provinces.",
                "constraints": [
                    "1 <= 'n' <= 200",
                    "roads[i][j] is 1 or 0",
                    "roads[i][j] == roads[j][i]",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "3\n1 0 0 \n0 1 0 \n0 0 1",
                        "output": "3",
                        "explanation": "There are 3 cities and no connections between them. Therefore, each city forms its own province, resulting in 3 provinces."
                    },
                    {
                        "input": "4\n1 1 0 0 \n1 1 0 0 \n0 0 1 1 \n0 0 1 1",
                        "output": "2",
                        "explanation": "Cities 0 and 1 are connected, forming one province. Cities 2 and 3 are connected, forming another province. Hence, there are 2 provinces in total."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Think of using Union-find data structure.</p>",
            "<p>Can we use BFS graph traversal algorithm?</p>",
            "<p>Can we use DFS graph traversal algorithm?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Depth-first Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-first Search",
                "slug": "breadth-first-search"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}