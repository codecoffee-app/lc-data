{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10246,
            "title": "Find the order in which pets are bought from the pet shop. ",
            "titleSlug": "find-the-order-in-which-pets-are-bought-from-the-pet-shop_1199010",
            "content": "<h4 id=\"the-pet-shop-holds-only-dogs-and-cats-it-operates-on-a-first-in-first-out-basis-people-must-adopt-either-the-oldest-of-all-animals-in-the-shop-or-they-can-select-whether-they-would-prefer-a-dog-or-a-cat-but-they-cannot-select-which-specific-animal-they-would-like-each-cat-or-dog-that-is-bought-into-the-shop-is-represented-by-a-unique-identification-number\">The pet shop holds only dogs and cats. It operates on a \u201cfirst-in, first-out\u201d basis. People must adopt either the oldest of all animals in the shop or they can select whether they would prefer a dog or a cat but they cannot select which specific animal they would like. Each cat or dog that is bought into the shop is represented by a unique identification number.</h4>\n\n<h4 id=\"there-are-two-types-of-operations\">There are two types of operations:-</h4>\n\n<h4 id=\"1-uid-type1-where-1-represents-an-animal-is-being-brought-into-the-shop-uid-represents-a-unique-identification-number-allotted-to-the-animal-type1-is-0-if-animal-is-dog-or-1-if-animal-is-cat\">1 \u2018uID\u2019 \u2018type1\u2019 - where 1 represents an animal is being brought into the shop. \u2018uID\u2019 represents a unique identification number allotted to the animal. \u2018type1\u2019 is 0 if animal is dog or 1 if animal is cat.</h4>\n\n<h4 id=\"2-type2-where-2-represents-an-animal-is-being-adopted-type2-is-0-if-the-oldest-dog-is-preferred-type2-is-1-if-the-oldest-cat-is-preferred-type2-is-2-if-either-of-them-is-preferred\">2 \u2018type2\u2019 - where 2 represents an animal is being adopted. \u2018type2\u2019 is 0 if the oldest dog is preferred. \u2018type2\u2019 is 1 if the oldest cat is preferred. \u2018type2\u2019 is 2 if either of them is preferred.</h4>\n\n<h4 id=\"you-have-been-given-n-operations-which-you-need-to-perform-in-the-shop-your-task-is-to-return-a-vector-list-that-contains-the-unique-identification-number-of-pets-that-are-adopted-in-the-order-they-are-adopted\">You have been given \u2018n\u2019 operations which you need to perform in the shop. Your task is to return a vector/list that contains the unique identification number of pets that are adopted in the order they are adopted.</h4>\n\n<h5 id=\"example\">Example :</h5>\n\n<pre><code>Let&#39;s say the pet shop&#39;s oldest dog\u2019s uID that has not yet been adopted is 4 and that of the oldest cat is 3.\nIf operation 2 0 is performed then the oldest dog will be adopted i.e uID 4. \nIf operation 2 1 is performed then the oldest cat will be adopted i.e uID 3. \nIf operation 2 2 is performed then the animal older among them will be adopted.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains a single integer \u2018T&#39; representing the number of test cases.\n\nThe first line of each test case contains a single integer \u2018N\u2019 representing the number of operations.\n\nNext \u2018N&#39; lines contain operations that have to be performed on the shop. Each operation is either of type 1 or 2.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case print a vector/list that contains the unique identification number of pets that are adopted in the order they are adopted.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>1. All the operations are valid. \n2. You do not need to print anything; it has already been taken care of. Just implement the function. \n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 1000\n1 &lt;= uID &lt;= 10^6\n0 &lt;= type1 &lt;= 1\n0 &lt;= type2 &lt;= 2\n\n\nTime Limit: 1sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n2\n1 4 0\n2 2    \n6\n1 2 0\n1 1 0\n1 3 1\n2 1\n2 0\n2 2 \n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>4\n3 2 1\n</code></pre>\n\n<h4 id=\"explanation-of-sample-output-1\">Explanation Of Sample Output 1 :</h4>\n\n<pre><code>Test case1:\n\nLet\u2019s say ith operation takes place at t=i. The status after each operation is as follows.\n1 4 0 - A dog is brought into the shop with uID 4.\n2 2 - A person comes to the shop and wants to adopt any animal. So, the oldest animal from the shop is given to him i.e dog with uID 4.\n\nTherefore the order in which pets were adopted was 4.\n\nTest case 2:\n\nLet\u2019s say ith operation takes place at t=i. Status after each operation is as follows.\n1 2 0 - A dog is brought into the shop with uID 2.\n1 1 0 - A dog is brought into the shop with uID 1.\n1 3 1 - A cat is brought into the shop with uID 3.\n2 1 - A person comes to the shop and wants to adopt a cat. So, the oldest cat from the shop is given to him i.e cat with uID 3.\n2 0 - A person comes to the shop and wants to adopt a dog. So, the oldest dog from the shop is given to him i.e dog with uID 2.\n2 2 - A person comes to the shop and wants to adopt any animal. So, the oldest animal from the shop is given to him i.e dog with uID 1.\nTherefore the order in which pets were adopted was 3,2,1.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/animalshelter-8050.jpg\" alt=\"subsequence\"></p>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n4\n1 1 1\n1 3 0\n2 1\n2 0\n8\n1 1 0\n1 2 1\n1 3 0\n1 4 1\n2 2\n2 2\n2 1\n2 2\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>1 3\n1 2 4 3\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 5,
            "dislikes": "NA",
            "rephrased": {
                "body": "You are tasked with simulating the operation of a pet shop that houses only dogs and cats. The shop operates on a first-in, first-out (FIFO) basis. Customers can either adopt the oldest animal in the shop, or express a preference for either a dog or a cat. Given a sequence of operations representing animals being added to the shop and animals being adopted, your goal is to determine the unique identification numbers (uIDs) of the animals adopted, in the order they are adopted.",
                "constraints": [
                    "1 <= T <= 10 (Number of test cases)",
                    "1 <= N <= 1000 (Number of operations per test case)",
                    "1 <= uID <= 10^6 (Unique identification number for each animal)",
                    "0 <= type1 <= 1 (0 for dog, 1 for cat when adding an animal)",
                    "0 <= type2 <= 2 (0 for dog, 1 for cat, 2 for either when adopting an animal)"
                ],
                "testcases": [
                    {
                        "input": "n = 2, arr = [[1, 4, 0], [2, 2]]",
                        "output": "[4]",
                        "explanation": "Initially, the shop is empty.\nOperation 1: A dog with uID 4 is added.\nOperation 2: A customer wants to adopt any animal. The oldest animal (dog with uID 4) is adopted."
                    },
                    {
                        "input": "n = 6, arr = [[1, 2, 0], [1, 1, 0], [1, 3, 1], [2, 1], [2, 0], [2, 2]]",
                        "output": "[3, 2, 1]",
                        "explanation": "Initially, the shop is empty.\nOperation 1: A dog with uID 2 is added.\nOperation 2: A dog with uID 1 is added.\nOperation 3: A cat with uID 3 is added.\nOperation 4: A customer wants to adopt a cat. The oldest cat (uID 3) is adopted.\nOperation 5: A customer wants to adopt a dog. The oldest dog (uID 2) is adopted.\nOperation 6: A customer wants to adopt any animal. The oldest remaining animal (dog uID 1) is adopted."
                    },
                    {
                        "input": "n = 4, arr = [[1, 1, 1], [1, 3, 0], [2, 1], [2, 0]]",
                        "output": "[1, 3]",
                        "explanation": "Initially, the shop is empty.\nOperation 1: A cat with uID 1 is added.\nOperation 2: A dog with uID 3 is added.\nOperation 3: A customer wants to adopt a cat. The oldest cat (uID 1) is adopted.\nOperation 4: A customer wants to adopt a dog. The oldest dog (uID 3) is adopted."
                    },
                    {
                        "input": "n = 8, arr = [[1, 1, 0], [1, 2, 1], [1, 3, 0], [1, 4, 1], [2, 2], [2, 2], [2, 1], [2, 2]]",
                        "output": "[1, 2, 4, 3]",
                        "explanation": "Initially, the shop is empty.\nOperation 1: A dog with uID 1 is added.\nOperation 2: A cat with uID 2 is added.\nOperation 3: A dog with uID 3 is added.\nOperation 4: A cat with uID 4 is added.\nOperation 5: A customer wants to adopt any animal. Dog uID 1 is the oldest and is adopted.\nOperation 6: A customer wants to adopt any animal. Cat uID 2 is the oldest and is adopted.\nOperation 7: A customer wants to adopt a cat.  Cat uID 4 is the only cat and is adopted\nOperation 8: A customer wants to adopt any animal. Dog uID 3 is the only one left is adopted"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Maintain an array/list to check if a pet has been adopted or not.</p>",
            "<p>Store position of next older cat for each cat and similarly for the dog.&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Stacks & Queues",
                "slug": "stacks-&-queues"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}