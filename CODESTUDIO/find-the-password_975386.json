{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9115,
            "title": "Find the password ",
            "titleSlug": "find-the-password_975386",
            "content": "<h4 id=\"spider-man-needs-to-retrieve-a-secret-file-stored-in-the-computer-of-dr-octavius-he-finds-a-clue-to-the-password-but-since-he-is-running-short-on-time-he-asks-you-for-help-following-is-the-clue-provided\">Spider Man needs to retrieve a secret file stored in the computer of Dr. Octavius. He finds a clue to the password, but since he is running short on time, he asks you for help. Following is the clue provided-</h4>\n\n<h4 id=\"given-n-digits-valued-from-0-to-9-the-password-is-the-minimum-possible-sum-of-two-numbers-formed-by-using-all-the-digits-only-once\">Given \u2018N\u2019 DIGITS valued from 0 to 9, the password is the minimum possible sum of two numbers formed by using all the DIGITS only once.</h4>\n\n<h4 id=\"for-example-for-digits-4-3-2-7-1-9-the-minimum-sum-is-385-which-is-obtained-by-adding-numbers-137-and-249\">For example - For DIGITS = [4, 3, 2, 7, 1, 9], the minimum sum is 385 which is obtained by adding numbers 137 and 249.</h4>\n\n<h4 id=\"can-you-help-spider-man-find-the-password\">Can you help Spider Man find the password?</h4>\n\n<h4 id=\"note-the-number-of-digits-is-always-greater-than-or-equal-to-2-hence-the-answer-will-always-exist\">Note - The number of DIGITS is always greater than or equal to 2. Hence, the answer will always exist.</h4>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer &#39;T&#39; representing the number of test cases or queries to be processed. Then the test case follows.\n\nThe first line of each test case contains a single integer \u2018N\u2019 denoting the number of digits.\n\nThe second line of each test case contains \u2018N\u2019 single space-separated non-negative integers representing the digits.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code> For each test case, print the password.\n\n Print the output of each test case in a separate line.\n\n Note :\n You do not need to print anything; it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n2 &lt;= N &lt;= 5000\n0 &lt;= DIGITS[i] &lt;= 9\n\nWhere \u2018N\u2019 is the number of digits\n\nTime Limit: 1sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n4\n1 2 9 8\n3\n1 1 0\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>47\n2\n</code></pre>\n\n<h4 id=\"sample-output-1-explanation\">Sample Output 1 Explanation:</h4>\n\n<pre><code>For the first test case, the password  is 47 which is the minimum sum obtained by adding numbers 18 and 29.\n\nFor the second test case, the password is 12 which is the minimum sum obtained by adding numbers 01 and 1.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>1\n2\n2 8 \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>10\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": -5,
            "dislikes": "NA",
            "rephrased": {
                "body": "Spider-Man needs your help to crack a password! The password is the minimum possible sum of two numbers formed by using a given set of digits exactly once. Given 'N' digits (0-9), find the smallest sum achievable by splitting these digits into two numbers.",
                "constraints": [
                    "1 <= T <= 100 (Number of test cases)",
                    "2 <= N <= 5000 (Number of digits)",
                    "0 <= DIGITS[i] <= 9 (Value of each digit)",
                    "Time Limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "4\n1 2 9 8",
                        "output": "47",
                        "explanation": "The minimum sum is 47, obtained by adding numbers 18 and 29."
                    },
                    {
                        "input": "3\n1 1 0",
                        "output": "2",
                        "explanation": "The minimum sum is 2, obtained by adding numbers 01 and 1."
                    },
                    {
                        "input": "2\n2 8",
                        "output": "10",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Think of rearranging the DIGITS in a way that helps in finding those two numbers easily.</p>",
            "<p>Can you think of a way to improve the first approach?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}