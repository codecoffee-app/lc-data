{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 11031,
            "title": "Find the sum of the left leaves.",
            "titleSlug": "find-the-sum-of-the-left-leaves_1376446",
            "content": "<h4 id=\"given-a-binary-tree-with-root-your-task-is-to-find-the-sum-of-all-the-left-leaf-nodes\">Given a binary tree with \u2018root\u2019. Your task is to find the sum of all the left leaf nodes.</h4>\n\n<h4 id=\"properties-of-leaf\">Properties of leaf:-</h4>\n\n<h4 id=\"in-a-binary-tree-a-leaf-is-a-node-such-that-it-does-not-have-any-children-node-1-is-always-the-root-of-the-binary-tree-left-leaves-are-those-nodes-that-are-the-left-child-of-their-parent-and-a-leaf-node\">In a binary tree, a leaf is a node such that it does not have any children. Node \u20181\u2019 is always the root of the binary tree. Left leaves are those nodes that are the left child of their parent and a leaf node.</h4>\n\n<h5 id=\"example\">Example:</h5>\n\n<pre><code>Let\u2019s say you have a binary tree as follows:-\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/tree-8583.png\" alt=\"subsequence\"></p>\n\n<h4 id=\"node-4-and-node-5-are-leaf-nodes-and-left-child-of-their-parent-node-6-is-a-leaf-node-but-not-the-left-child-of-its-parent-node-3-therefore-return-4-5-9-as-the-answer\">Node 4 and Node 5 are leaf nodes and left child of their parent. Node 6 is a leaf node but not the left child of its parent node 3. Therefore return \u20184+5= 9\u2019 as the answer.</h4>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018t\u2019 denoting the number of test cases.\nThe next \u2018t\u2019 lines represent the \u2018t\u2019 test cases.\n\nThe first line of input contains the elements of the tree in the level order form separated by a single space.\nIf any node does not have a left or right child, take -1 in its place. Refer to the example below.\n\nExample:\n\nElements are in the level order form. The input consists of values of nodes separated by a single space in a single line. In case a node is null, we take -1 in its place.\n\nFor example, the input for the tree depicted in the below image would be :\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/tree2-5139.png\" alt=\"subsequence\"></p>\n\n<pre><code> 1\n 2 3\n 4 -1 5 6\n-1 7 -1 -1 -1 -1\n-1 -1\n</code></pre>\n\n<h5 id=\"explanation\">Explanation :</h5>\n\n<pre><code>Level 1 :\nThe root node of the tree is 1\n\nLevel 2 :\nLeft child of 1 = 2\nRight child of 1 = 3\n\nLevel 3 :\nLeft child of 2 = 4\nRight child of 2 = null (-1)\nLeft child of 3 = 5\nRight child of 3 = 6\n\nLevel 4 :\nLeft child of 4 = null (-1)\nRight child of 4 = 7\nLeft child of 5 = null (-1)\nRight child of 5 = null (-1)\nLeft child of 6 = null (-1)\nRight child of 6 = null (-1)\n\nLevel 5 :\nLeft child of 7 = null (-1)\nRight child of 7 = null (-1)\n\nThe first not-null node (of the previous level) is treated as the parent of the first two nodes of the current level. The second not-null node (of the previous level) is treated as the parent node for the next two nodes of the current level and so on.\n\nThe input ends when all nodes at the last level are null (-1).\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>The above format was just to provide clarity on how the input is formed for a given tree. \n\nThe sequence will be put together in a single line separated by a single space. Hence, for the above-depicted tree, the input will be given as:\n\n1 2 3 4 -1 5 6 -1 7 -1 -1 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case return the sum of left leaves. \n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 1000\n\nWhere \u2018T\u2019 is the number of test cases.\u2018N\u2019 is the number of nodes in the binary tree.  \n\nTime Limit: 1sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n1 2 -1 3 -1 -1 -1\n1 2 3 4 -1 -1 5 6 -1 -1 7 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>3\n6\n</code></pre>\n\n<h4 id=\"sample-output-1-explanation\">Sample Output 1 Explanation:</h4>\n\n<pre><code>Test case 1:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/tree1-8587.png\" alt=\"subsequence\"></p>\n\n<pre><code>Node 3 is a left leaf.\n\nTherefore the answer is 3.\n\nTest case 2:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/tree2-8588.png\" alt=\"subsequence\"></p>\n\n<pre><code>Node 7 is a leaf node but it is not the left child of their parent. Node 6 is a leaf node and the left child of its parent node 4.\n\nTherefore the answer is 6.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n1 2 3 4 5 -1 -1 -1 -1 -1 -1\n1 2 -1 -1 -1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>4\n2\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 6,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a binary tree represented by its root node, compute the sum of all left leaf nodes in the tree. A left leaf node is a node that is both a leaf (has no children) and is the left child of its parent.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 1000",
                    "Where \u2018T\u2019 is the number of test cases and \u2018N\u2019 is the number of nodes in the binary tree."
                ],
                "testcases": [
                    {
                        "input": "root=[1,2,-1,3,-1,-1,-1]",
                        "output": "3",
                        "explanation": "The tree is 1 -> 2 -> 3. Node 3 is a left leaf, so the sum is 3."
                    },
                    {
                        "input": "root=[1,2,3,4,-1,-1,5,6,-1,-1,7,-1,-1,-1,-1]",
                        "output": "6",
                        "explanation": "The tree has a left leaf node 6, which is the left child of 4 and a leaf. Hence sum is 6."
                    },
                    {
                        "input": "root=[1,2,3,4,5,-1,-1,-1,-1,-1,-1]",
                        "output": "4",
                        "explanation": "The left leaf node is 4. Therefore, the answer is 4."
                    },
                    {
                        "input": "root=[1,2,-1,-1,-1]",
                        "output": "2",
                        "explanation": "The left leaf node is 2. Therefore, the answer is 2."
                    },
                    {
                        "input": "root=[1,-1,-1]",
                        "output": "0",
                        "explanation": "There are no left leaves. Therefore the answer is 0."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Check for each node if the left child is a leaf node by iterating nodes.</p>",
            "<p>Think of a recursive approach.&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Trees",
                "slug": "trees"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}