{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12541,
            "title": "Find the total number of good Triplets",
            "titleSlug": "find-the-total-number-of-good-triplets_1464023",
            "content": "<h4 id=\"you-are-given-two-arrays-arr1-and-arr2-of-size-n-and-m-there-are-two-types-of-good-triplets\">You are given two arrays, \u2018ARR1\u2019 and \u2018ARR2\u2019 of size \u2018N\u2019 and \u2018M\u2019. There are two types of good triplets.</h4>\n\n<pre><code>Type 1: Triplet (i, j, k) If the square of ARR1[i] is equal to the product of ARR2[j] and ARR2[k], where 0 &lt;= i &lt;N and 0 &lt;= j &lt; k &lt; M   \nType 2: Triplet (i, j, k) If the square of ARR2[i] is equal to the product of ARR1[j] and ARR1[k], where 0 &lt;= i &lt;M and 0 &lt;= j &lt; k &lt; N   \n</code></pre>\n\n<h4 id=\"your-task-is-to-find-the-total-number-of-good-triplets\">Your task is to find the total number of good triplets.</h4>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of the input contains an integer, &#39;T,\u2019 denoting the number of test cases.\n\nThe first line of each test case contains two space-separated integers, &#39;N&#39; and &#39;M&#39;, denoting the number of elements in the array &#39;ARR1&#39;, and the number of elements in the array &#39;ARR2&#39; respectively.\n\nThe second line of each test case contains &#39;N&#39; space-separated integers denoting the elements of the array &#39;ARR1&#39;.\n\nThe third line of each test case contains &#39;M&#39; space-separated integers denoting the elements of the array &#39;ARR2&#39;.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print a single line containing a single integer denoting the total number of good triplets following the given conditions.    \n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;=  T  &lt;= 100\n1 &lt;=  N &lt;= 100\n1 &lt;=  M  &lt;= 100    \n1 &lt;= ARR1[i] &lt;= 10^4\n1 &lt;= ARR2[i] &lt;= 10^4\n\nWhere &#39;ARR1[i]&#39; denotes the &#39;i&#39;th&#39; element of the array &#39;ARR1&#39; and &#39;ARR2[i]&#39; denotes the &#39;i&#39;th&#39; element of the array &#39;ARR2&#39;.\n\nTime limit: 1 sec.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n3 3\n2 6 4\n2 2 8\n3 3\n2 1 4 \n2 2 2 \n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>3\n6\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of sample input 1:</h5>\n\n<pre><code>For the first test case, \nAll possible good triplets of type 1 are (0,0,1), (2,0,2) and (2,1,2). There are no possible good triplets of type 2. Hence, the answer is 3 in this case.\n\nFor the second test case,\nAll possible good triplets of type 1 are (0,0,1), (0,0,2) and (0,1,2). All possible good triplets of type 2 are (0,1,2), (1,1,2) and (2,1,2). Hence, the answer is 6 in this case.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n3 4 \n2 5 3\n2 2 3 3\n4 4\n1 1 2 2    \n1 1 1 4\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>2\n15\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 5,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two arrays, `arr1` of size `n` and `arr2` of size `m`, determine the total number of good triplets. A good triplet can be of two types:\n\nType 1: A triplet (i, j, k) is considered good if `arr1[i] * arr1[i] == arr2[j] * arr2[k]`, where `0 <= i < n` and `0 <= j < k < m`.\nType 2: A triplet (i, j, k) is considered good if `arr2[i] * arr2[i] == arr1[j] * arr1[k]`, where `0 <= i < m` and `0 <= j < k < n`.\n\nCalculate the total number of good triplets (sum of type 1 and type 2).",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= N <= 100",
                    "1 <= M <= 100",
                    "1 <= ARR1[i] <= 10^4",
                    "1 <= ARR2[i] <= 10^4"
                ],
                "testcases": [
                    {
                        "input": "n = 3, m = 3, arr1 = [2, 6, 4], arr2 = [2, 2, 8]",
                        "output": "3",
                        "explanation": "Type 1 triplets: (0,0,1) where 2*2 == 2*2, (2,0,2) where 4*4==2*8, (2,1,2) where 4*4==2*8. Total: 3"
                    },
                    {
                        "input": "n = 3, m = 3, arr1 = [2, 1, 4], arr2 = [2, 2, 2]",
                        "output": "6",
                        "explanation": "Type 1 triplets: (0,0,1) where 2*2==2*2, (0,0,2) where 2*2==2*2, (0,1,2) where 2*2==2*2. Type 2 triplets: (0,1,2) where 2*2 == 1*4, (1,1,2) where 2*2 == 1*4, (2,1,2) where 2*2 == 1*4. Total: 3 + 3 = 6"
                    },
                    {
                        "input": "n = 3, m = 4, arr1 = [2, 5, 3], arr2 = [2, 2, 3, 3]",
                        "output": "2",
                        "explanation": "Type 1 triplets: (0,0,1) where 2*2 == 2*2, (2,2,3) where 3*3 == 3*3. Total 2."
                    },
                    {
                        "input": "n = 4, m = 4, arr1 = [1, 1, 2, 2], arr2 = [1, 1, 1, 4]",
                        "output": "15",
                        "explanation": "Type 1: (2,0,3): 4 == 1*4, (2,1,3): 4 == 1*4, (2,2,3): 4 == 1*4, (3,0,3): 4 == 1*4, (3,1,3): 4 == 1*4, (3,2,3): 4 == 1*4 (2,0,1): 4 = 1*1, (3,0,1): 4 = 1*1 , (2,0,2): 4 = 1*1, (3,0,2): 4=1*1, (2,1,2): 4 = 1*1, (3,1,2):4=1*1. total: 12. Type 2: (3,2,3): 16==2*2. (3,0,1): 16==1*1 (not correct cause 16!=1), (3,0,2): 16!=1*2, (3,1,2): 16!=1*2.  (3,0,3)= 16==4, (3,1,3): 16=4. 1*1 cases only. No type 2. Type 1 (i,j,k)  where arr1[i]^2 = arr2[j]*arr2[k]. arr1[0]*arr1[0]=1. possibilities 0,1 and 0,2 and 1,2 . arr1[1]*arr1[1]=1. same as above. so we have 3+3=6. arr1[2]*arr1[2]=4 = 1,3 (4=1*4) j<k 1 set . arr1[3]*arr1[3]=4 = 1,3 (4=1*4) j<k 1 set . TOTAL is 10. WRONG. type1: (2,0,3) (3,0,3) = 2 type 2 : (0,0,1) (0,0,2)(0,1,2) (1,0,1) (1,0,2)(1,1,2) = 6 total (2+6) wrong . ah let's write it out: Type 1: i=2 arr1[2]^2 = 4  arr2 combinations: 1,3 ; (j,k) => so (0,3), (1,3), (2,3) if i=3 also same j,k are valid combinations above. so (2,0,3), (2,1,3), (2,2,3) and (3,0,3), (3,1,3), (3,2,3) = 6 triplets, Type 2: i = 3, arr2[3]^2 = 16. triplets?  j,k can range from 0-3 but only one case exists 2,3 gives 2*2 which is only option. rest is less. so from arr1 pick 2*2 = 4 so j=2,k=3 (2,3) So j=2 and k=3 is ONLY option and then can consider for any i but other constraints are j <k 2<3 TRUE but i from 0-3 no combination is good!  So Type 1 is only choice. wrong again :( ah! no Type 2 gives 0. So its only type 1 that gives 6, what if i have triplets like arr[0]*arr[0] = 1 type1: combinations are 0,1  0,2 1,2 type1: now loop through and check the i. if it matches then. so when i=0 i=1 matches => 6 such triplets . if arr1[i]*arr1[i] =arr2[j]*arr2[k]. 1,0 0,1 0,2, 1,0 1,1 1,2 if 2 the only combination if 3 the only combination (type two should be when i=2,2 and 2,3 but that isnt allowed."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Generate all possible triplets and check for each triplet if the triplet follows the given conditions.</p>",
            "<p>Try to store the frequency of the numbers.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}