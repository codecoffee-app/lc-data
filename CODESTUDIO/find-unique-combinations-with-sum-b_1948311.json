{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 14073,
            "title": "Find unique combinations with sum B",
            "titleSlug": "find-unique-combinations-with-sum-b_1948311",
            "content": "<h4 id=\"given-a-list-of-n-distinct-positive-integers-and-a-non-negative-integer-b-find-the-number-of-unique-combinations-possible-from-the-elements-of-the-list-such-that-the-sum-of-numbers-in-the-combination-is-equal-to-b-we-can-take-an-element-from-the-list-multiple-times-in-our-combination\">Given a list of &#39;n&#39; distinct positive integers and a non-negative integer &#39;B. Find the number of unique combinations possible from the elements of the list such that the sum of numbers in the combination is equal to &#39;B&#39; . We can take an element from the list multiple times in our combination.</h4>\n\n<h4 id=\"elements-in-each-combination-must-be-in-non-decreasing-order\">Elements in each combination must be in non-decreasing order.</h4>\n\n<h4 id=\"for-example\">For example:</h4>\n\n<pre><code>Let the array ARR be [1, 2, 3] and B = 5. Then all possible valid combinations are-\n\n(1, 1, 1, 1, 1)\n(1, 1, 1, 2)\n(1, 1, 3)\n(1, 2, 2)\n(2, 3)\n</code></pre>\n\n<h5 id=\"input-format\">Input Format</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases to run. Then the test case follows.\n\nThen the first line of each test case contains two space separated integers  \u2018N\u2019 and \u2018B\u2019 denoting the number of elements in the array/list and the target sum respectively.\n\nThe second line of each test case contains N space separated integers the elements of array/list ARR.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print all possible valid combinations in separate lines. You can print combinations in any order. Elements in each combination must be in non-decreasing order.\n\nOutput for each test case will be printed in a new line. \n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= N &lt;= 15\n1 &lt;= B &lt;= 20\n1 &lt;= ARR[i] &lt;= 20\n\nTime Limit: 1sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n3 10\n6 4 1\n1 10\n10\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>6 4\n1 1 1 1 1 1 1 1 1 1\n10\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>3\n4 5\n8 5 6 4 \n4 6\n7 4 1 8 \n2 7\n1 3  \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>5 \n1 1 4 \n1 1 1 1 1 1 \n1 3 3 \n1 1 1 1 3 \n1 1 1 1 1 1 1 \n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": -5,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a list of 'n' distinct positive integers and a non-negative integer 'B', find the number of unique combinations possible using the elements of the list such that the sum of the numbers in each combination equals 'B'. You can use each element from the list multiple times within a combination. The elements within each combination must be arranged in non-decreasing order.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= N <= 15",
                    "1 <= B <= 20",
                    "1 <= ARR[i] <= 20",
                    "Time Limit: 1sec"
                ],
                "testcases": [
                    {
                        "input": "3 10\n6 4 1",
                        "output": "6 4\n1 1 1 1 1 1 1 1 1 1",
                        "explanation": null
                    },
                    {
                        "input": "1 10\n10",
                        "output": "10",
                        "explanation": null
                    },
                    {
                        "input": "4 5\n8 5 6 4",
                        "output": "5",
                        "explanation": null
                    },
                    {
                        "input": "4 6\n7 4 1 8",
                        "output": "1 1 4\n1 1 1 1 1 1",
                        "explanation": null
                    },
                    {
                        "input": "2 7\n1 3",
                        "output": "1 3 3\n1 1 1 1 3\n1 1 1 1 1 1 1",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}