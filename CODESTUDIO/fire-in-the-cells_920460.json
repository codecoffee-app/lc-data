{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8873,
            "title": "Fire in the cells",
            "titleSlug": "fire-in-the-cells_920460",
            "content": "<h4 id=\"you-are-given-a-matrix-mat-of-size-n-m-where-n-is-the-number-of-rows-and-m-is-the-number-of-columns-value-0-in-a-cell-represents-that-the-cell-is-set-on-fire-initially-at-time-t-0-and-the-cells-which-don-t-have-fire-initially-have-value-1-and-are-called-safe-cells\">You are given a matrix &#39;MAT&#39; of size \u2018N\u2019 * \u2018M\u2019, where \u2018N\u2019 is the number of rows and \u2018M\u2019 is the number of columns. Value \u20180\u2019 in a cell represents that the cell is set on fire initially, (at time t = \u20180\u2019), and the cells which don\u2019t have fire initially have value = \u20181\u2019, and are called safe cells.</h4>\n\n<h4 id=\"if-a-cell-is-on-fire-then-in-one-second-the-fire-will-expand-to-its-adjacent-cells-left-right-top-bottom-if-they-are-not-already-on-fire\">If a cell is on fire, then in one second the fire will expand to its adjacent cells (left, right, top, bottom) if they are not already on fire.</h4>\n\n<h4 id=\"you-are-given-the-position-of-a-person-as-integers-x-and-y-denoting-the-cell-x-y-in-one-second-the-person-can-move-from-its-current-cell-to-any-one-of-its-adjacent-cells-provided-they-are-not-on-fire\">You are given the position of a person as integers \u2018X\u2019 and \u2018Y\u2019 denoting the cell (\u2018X\u2019, \u2018Y\u2019). In one second the person can move from its current cell to any one of its adjacent cells, provided they are not on fire.</h4>\n\n<h4 id=\"you-have-to-determine-if-the-person-can-move-through-the-matrix-to-one-of-the-escape-cells-without-burning-himself-i-e-without-going-through-the-fire-cells-if-it-s-possible-return-time-taken-else-return-1\">You have to determine if the person can move through the matrix to one of the escape cells without burning himself i.e. without going through the fire cells. If it\u2019s possible, return time taken, else return -1.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>1. Escape cells in this problem are all such cells that lie on the edge of the matrix but not on the corner. i.e all such cells which are in the first row, first column, last row, and last column excluding the four corner cells are considered as valid escape cells.\n\n2. A cell once set on fire continues to remain on fire till the end.\n\n3. Note that rows are indexed from 0 to \u2018N\u2019 - 1 and columns are indexed from 0 to \u2018M\u2019 - 1.\n\n4. The escape cells may also be initially on fire or can catch fire from some neighboring cell.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of the input contains an integer \u2018T\u2019 denoting the number of test cases.\n\nThe first line of each test case contains two space-separated integers \u2018N\u2019 and \u2018M\u2019, where \u2018N\u2019 denotes the number of rows in the given matrix and \u2018M\u2019 denotes the number of columns in the given matrix.\n\nEach of the next \u2018N\u2019 lines contains \u2018M\u2019 space-separated integers (\u20180\u2019 or \u20181\u2019) denoting the initial condition of cells.\n\nThe last line of each test case contains two space-separated integers \u2018X\u2019 and \u2018Y\u2019, where \u2018X\u2019 denotes the initial row of the person at time t = 0 and \u2018Y\u2019 denotes the initial column of the person at time t = 0.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print an integer \u2018K\u2019 representing the time taken by the person to reach the escape cell. If the person cannot reach the escape cell then print -1.\n\nOutput for each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You are not required to print the output, it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= &#39;T&#39; &lt;= 50\n0 &lt;= &#39;N&#39; &lt; 50\n0 &lt;= &#39;M&#39; &lt; 50\n0 &lt;= &#39;X&#39; &lt;= N\n0 &lt;= &#39;Y&#39; &lt;= M\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1\n5 4\n0 1 1 1\n1 0 1 1\n1 1 1 1\n0 1 1 1\n0 0 0 0\n2 1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>-1\n</code></pre>\n\n<h5 id=\"explanation-for-sample-output-1\">Explanation For Sample Output 1:</h5>\n\n<pre><code>The time for the fire to reach the individual cells of the given matrix is as follows:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/screenshot-6-_li-9901.jpg\" alt=\"\"></p>\n\n<pre><code>The person\u2019s initial cell is (2, 1).\nAt time t = 1, the person can only go to cell (2, 2) as the fire won\u2019t have reached the cell yet.\nAt time t = 2, the person can not go anywhere as all the adjacent cells are at the fire, and moving causes him to get burnt.\nSo the answer is -1.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\n4 4\n0 1 1 1\n1 0 1 1\n1 1 1 1\n0 1 1 0\n1 2\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>1   \n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 43,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a matrix 'MAT' of size N x M, where 0 represents a cell on fire and 1 represents a safe cell. Fire spreads to adjacent cells (left, right, top, bottom) in one second.  A person starts at cell (X, Y) and can move to adjacent safe cells in one second. Determine the minimum time the person takes to reach an escape cell (cells on the edge of the matrix, excluding corners) without being burned. If it's impossible, return -1.",
                "constraints": [
                    "1 <= T <= 50",
                    "0 <= N < 50",
                    "0 <= M < 50",
                    "0 <= X < N",
                    "0 <= Y < M"
                ],
                "testcases": [
                    {
                        "input": "n = 5, m = 4, mat = [[0, 1, 1, 1], [1, 0, 1, 1], [1, 1, 1, 1], [0, 1, 1, 1], [0, 0, 0, 0]], x = 2, y = 1",
                        "output": "-1",
                        "explanation": "The person starts at (2, 1). At t=1, the fire hasn't reached (2,2), but after moving there, all adjacent cells are caught in fire at t=2 and no escape cell can be reached before fire burns the path, resulting in -1."
                    },
                    {
                        "input": "n = 4, m = 4, mat = [[0, 1, 1, 1], [1, 0, 1, 1], [1, 1, 1, 1], [0, 1, 1, 0]], x = 1, y = 2",
                        "output": "1",
                        "explanation": "The person starts at (1,2). They can move to (0,2) which is an escape cell in one time unit before the fire reaches the cell. The person can also move to (1,3) which is also a valid escape cell without burning himself. Thus, the time taken is 1."
                    },
                    {
                        "input": "n = 3, m = 3, mat = [[1, 1, 1], [1, 1, 1], [1, 1, 1]], x = 1, y = 1",
                        "output": "1",
                        "explanation": "The matrix is completely safe initially. The person at (1,1) can move to any of the available escape positions in one time unit."
                    },
                    {
                        "input": "n = 2, m = 2, mat = [[0, 0], [0, 0]], x = 0, y = 0",
                        "output": "-1",
                        "explanation": "All cells are initially on fire, making it impossible for the person to move without getting burned. Therefore, the output is -1."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>What if you find the minimum time the fire will reach every cell in the matrix using BFS? And if you possess this information can you try to find if a valid path exists for a person to escape or not?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Matrices (2D Arrays)",
                "slug": "matrices-(2d-arrays)"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}