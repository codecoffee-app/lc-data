{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10387,
            "title": "First K Maximum Elements",
            "titleSlug": "first-k-maximum-elements_1214933",
            "content": "<h4 id=\"you-have-been-given-an-array-of-n-integers-and-an-integer-k-you-have-to-find-the-indexes-of-the-first-k-maximum-elements-in-the-array\">You have been given an array of \u2018N\u2019 integers and an integer &#39;K&#39;. You have to find the indexes of the first &#39;K&#39; maximum elements in the array.</h4>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>&#39;K&#39; must be less than or equal to the number of distinct elements in the given array.\n\nConsider &#39;0\u2019 based indexing of the elements in the given array.\n\nPrint all indexes in increasing order.\n</code></pre>\n\n<h4 id=\"for-example\">For Example :</h4>\n\n<pre><code>If, &#39;ARR&#39; = [4, 2, 4, 2, 1], and K = 2. Then output will be 0, 1, 2, 3.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 representing the number of test cases. \n\nThe first line of each test case will contain two space-separated integers \u2018N\u2019 and &#39;K&#39; where \u2018N\u2019 is the length of the array, and &#39;K&#39; is the integer which is described above.\n\nThe second line of each test case will contain \u2018N\u2019 space-separated integers which denote the elements in the given array.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print the indexes of the first &#39;K&#39; maximum elements in the increasing order.\n\nOutput for every test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don\u2019t need to print anything; It has already been taken care of. Just implement the given function.\n\nThere is no need to sort the indexes in increasing order it has already been taken care of.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 50\n1 &lt;= N &lt;= 10000\n1 &lt;= K &lt;= Distint Element in ARR\n0 &lt;= ARR[i] &lt;= 10 ^ 5\n\nWhere &#39;ARR[i]&#39; is the i&#39;th element of the given array.\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n5 2\n4 2 4 2 1\n1 1\n5  \n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>0 1 2 3\n0\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of sample input 1 :</h5>\n\n<pre><code>In the first test case, the first 2 maximum elements are 4, and 2.\n\nIn the second test case, there is a single element that itself a maximum.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n4 3\n1 2 3 4\n6 1\n2 2 2 2 2 2\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>1 2 3\n0 1 2 3 4 5\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-2\">Explanation of sample input 2 :</h5>\n\n<pre><code>In the first test case, the first 3 maximum elements are 4, 3, and 2.\n\nIn the second test case, all elements are the same and so, maximum exists at every index.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 5,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of integers and an integer 'K', find the indices of the first 'K' maximum elements in the array. Consider 0-based indexing. The indices should be returned in increasing order.",
                "constraints": [
                    "1 <= T <= 50",
                    "1 <= N <= 10000",
                    "1 <= K <= Number of distinct elements in ARR",
                    "0 <= ARR[i] <= 10 ^ 5"
                ],
                "testcases": [
                    {
                        "input": "n = 5, arr=[4, 2, 4, 2, 1], k = 2",
                        "output": "0 1 2 3",
                        "explanation": "The first 2 maximum elements are 4 and 2, found at indices 0, 2, 1, and 3 respectively."
                    },
                    {
                        "input": "n = 1, arr=[5], k = 1",
                        "output": "0",
                        "explanation": "The maximum element is 5, found at index 0."
                    },
                    {
                        "input": "n = 4, arr=[1, 2, 3, 4], k = 3",
                        "output": "1 2 3",
                        "explanation": "The first 3 maximum elements are 4, 3, and 2 found at indices 3, 2 and 1."
                    },
                    {
                        "input": "n = 6, arr=[2, 2, 2, 2, 2, 2], k = 1",
                        "output": "0 1 2 3 4 5",
                        "explanation": "All elements are the same, so maximum exists at every index. Since we need K maximum elements, any K indices can be selected. In this example, the problem requires printing all indices."
                    },
                    {
                        "input": "n = 4, arr=[1, 2, 3, 4], k = 2",
                        "output": "2 3",
                        "explanation": "The first 2 maximum elements are 4 and 3, located at indices 3 and 2 respectively."
                    },
                    {
                        "input": "n = 4, arr=[1, 2, 3, 4], k = 4",
                        "output": "0 1 2 3",
                        "explanation": "All 4 elements are considered to be the first 4 maximum elements. The indices of the elements, 1, 2, 3 and 4 are 0, 1, 2 and 3 respectively. "
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you find the solution by calculating the indexes of maximum element one by one?</p>",
            "<p>Can you find the solution using sorting?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}