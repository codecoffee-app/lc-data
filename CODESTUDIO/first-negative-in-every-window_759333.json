{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 7670,
            "title": "First negative in every window",
            "titleSlug": "first-negative-in-every-window_759333",
            "content": "<h4 id=\"you-have-been-given-an-array-of-integers-arr-of-size-n-you-are-also-provided-with-a-positive-integer-k\">You have been given an array of integers &#39;ARR&#39; of size &#39;N&#39;. You are also provided with a positive integer &#39;K&#39;.</h4>\n\n<h4 id=\"your-task-is-to-find-the-first-negative-element-in-every-window-contiguous-subarray-of-length-k-if-there-is-no-negative-element-in-a-window-then-print-0-for-that-window\">Your task is to find the first negative element in every window (contiguous subarray) of length &#39;K&#39;. If there is no negative element in a window, then print 0 for that window.</h4>\n\n<h5 id=\"for-example\">For example:</h5>\n\n<pre><code>For the given array &#39;ARR&#39; = [5, -3, 2, 3, -4] and &#39;K&#39; = 2.\nOutput = -3 -3 0 -4\n\nWe have four windows of length 2 in &#39;ARR&#39;\n[5, -3] having -3 as first negative element.\n[-3, 2] having -3 as first negative element.\n[2, 3] having no negative element\n[2, -4] having -4 as first negative element.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer &#39;T&#39; representing the number of test cases or queries to be processed. Then the test case follows.\n\nThe first line of each test case contains two single space-separated integers &#39;N&#39; and &#39;K&#39; representing the size of the array/list and the positive integer denoting the length of the window respectively.\n\nThe second line of each test case contains &#39;N&#39; single space-separated integers representing the array/list elements.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print (N - K + 1) single space-separated integers representing the first negative element in each of the windows of length &#39;K&#39;.\n\nPrint output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You are not required to print the expected output; it has already been taken care of. Just implement the function. \n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 5 * 10^4\n1 &lt;= K &lt;= N\n-10^9 &lt;= ARR[i] &lt;= 10^9\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n5 3\n4 0 3 -12 1\n3 1\n45 12 -6\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>0 -12 -12\n0 0 -6\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1:</h5>\n\n<pre><code>For the first sample test case, we have three windows of length 3 in the first test case\n\n[4, 0, 3] having no negative element.\n[0, 3, -12] having -12 as first negative element.\n[3, -12, 1] having -12 as the first negative element. \n\nFor the second sample test case, please refer problem statement for the explanation.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n8 2\n4 -7 4 6 7 -11 2 4 \n3 2\n1 2 3\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>-7 -7 0 0 -11 -11 0\n0 0\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 48,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of integers 'ARR' of size 'N' and a positive integer 'K', find the first negative element in every window (contiguous subarray) of length 'K'. If a window contains no negative elements, output 0 for that window.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 5 * 10^4",
                    "1 <= K <= N",
                    "-10^9 <= ARR[i] <= 10^9",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "5 3\n4 0 3 -12 1",
                        "output": "0 -12 -12",
                        "explanation": "For the array [4, 0, 3, -12, 1] and window size 3, the windows are [4, 0, 3], [0, 3, -12], and [3, -12, 1]. The first window has no negative number, so the output is 0. The second window has -12 as the first negative number. The third window has -12 as the first negative number. Therefore, the output is 0 -12 -12."
                    },
                    {
                        "input": "3 1\n45 12 -6",
                        "output": "45 12 -6",
                        "explanation": "For the array [45, 12, -6] and window size 1, the windows are [45], [12], and [-6]. The first window has 45, the second has 12 and the third has -6. So the first negative numbers are 45 12 -6"
                    },
                    {
                        "input": "8 2\n4 -7 4 6 7 -11 2 4",
                        "output": "-7 -7 0 0 -11 -11 0",
                        "explanation": "For the array [4, -7, 4, 6, 7, -11, 2, 4] and window size 2, the outputs would be -7, -7, 0, 0, -11, -11, 0"
                    },
                    {
                        "input": "3 2\n1 2 3",
                        "output": "0 0",
                        "explanation": "For the array [1, 2, 3] and window size 2, the outputs would be 0, 0"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to naively traverse for every subarray of length \u2018K\u2019 and find the first negative element for each window.</p>",
            "<p>Can you think of a data structure to keep track of the negative elements in each window?&nbsp;</p>",
            "<p>Can you think of using two pointers instead of the whole data structure to store negative elements in each window?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Stacks & Queues",
                "slug": "stacks-&-queues"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}