{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9352,
            "title": "First Unique Character in a String",
            "titleSlug": "first-unique-character-in-a-string_983606",
            "content": "<h4 id=\"given-a-string-str-consisting-of-lower-case-english-letters-the-task-is-to-find-the-first-non-repeating-character-in-the-string-and-return-it-if-it-doesn-t-exist-return\">Given a string \u2018STR\u2019 consisting of lower case English letters, the task is to find the first non-repeating character in the string and return it. If it doesn\u2019t exist, return \u2018#\u2019.</h4>\n\n<h4 id=\"for-example\">For example:</h4>\n\n<pre><code>For the input string &#39;abcab&#39;, the first non-repeating character is \u2018c\u2019. As depicted the character \u2018a\u2019 repeats at index 3 and character \u2018b\u2019 repeats at index 4. Hence we return the character \u2018c\u2019 present at index 2.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 representing the number of test cases. Then the test cases follow.\n\nThe only line of each test case contains a single string \u2018STR\u2019 consisting of only lowercase English letters.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print a single character representing the first non-repeating character in the given string.\n\nThe output for each test case is in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything; it has already been taken care of.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= N &lt;= 10 ^ 4\n\nWhere \u2018T\u2019 is the number of test cases, and \u2018N\u2019 is the length of the string.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\nbbabcbcb\nbabaabea\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>a\ne\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1:</h5>\n\n<pre><code>For the first test case, \nthe first non-repeating character is \u2018a\u2019. As depicted the character \u2018b\u2019 repeats at index 1, 3, 5, 7, and character \u2018c\u2019 repeats at index 6. Hence we return the character \u2018a\u2019 present at index 2.\n\nFor the second test case, \nthe character \u2018e\u2019 is the first non-repeating character. As depicted the character \u2018b\u2019 repeats at index 2, 5, and character \u2018a\u2019 repeats at index 3, 4, and 7. Hence we return the character \u2018e\u2019 present at index 6.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>3\ncbbd\nbebeeed\nabcd\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>c\nd\na\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 51,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string 'STR' consisting of lowercase English letters, find and return the first non-repeating character in the string. If no non-repeating character exists, return '#'.",
                "constraints": [
                    "1 <= T <= 100 (where T is the number of test cases)",
                    "1 <= N <= 10^4 (where N is the length of the string)",
                    "The string 'STR' consists of only lowercase English letters."
                ],
                "testcases": [
                    {
                        "input": "str = \"bbabcbcb\"",
                        "output": "a",
                        "explanation": "The string is \"bbabcbcb\". 'b' appears multiple times, 'c' appears multiple times. 'a' appears only once and is the first non-repeating character."
                    },
                    {
                        "input": "str = \"babaabea\"",
                        "output": "e",
                        "explanation": "The string is \"babaabea\". 'b' appears multiple times, 'a' appears multiple times. 'e' appears only once and is the first non-repeating character."
                    },
                    {
                        "input": "str = \"cbbd\"",
                        "output": "c",
                        "explanation": "The string is \"cbbd\". 'c', 'b', and 'd' each appear only once. 'c' appears first."
                    },
                    {
                        "input": "str = \"bebeeed\"",
                        "output": "d",
                        "explanation": "The string is \"bebeeed\". 'b' and 'e' appears multiple times. 'd' appears only once."
                    },
                    {
                        "input": "str = \"abcd\"",
                        "output": "a",
                        "explanation": "The string is \"abcd\". 'a', 'b', 'c', and 'd' each appear only once. 'a' appears first."
                    },
                    {
                        "input": "str = \"aabbcc\"",
                        "output": "#",
                        "explanation": "The string is \"aabbcc\".  All characters repeat.  Therefore the answer is '#'."
                    },
                    {
                        "input": "str = \"aaaaaaaaaa\"",
                        "output": "#",
                        "explanation": "The string is \"aaaaaaaaaa\". All characters repeats. Therefore the answer is '#'."
                    },
                    {
                        "input": "str = \"z\"",
                        "output": "z",
                        "explanation": "The string is \"z\". The only character appears only once."
                    },
                    {
                        "input": "str = \"\"",
                        "output": "#",
                        "explanation": "The string is \"\". There are no characters, therefore the answer is '#'."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Find the frequency of all characters in the string and check which character has a unit frequency.</p>",
            "<p>Store the indexes of the characters only if it appears only once in the string.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}