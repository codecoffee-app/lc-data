{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10797,
            "title": "Fixed Point",
            "titleSlug": "fixed-point_1264949",
            "content": "<h4 id=\"you-are-given-an-array-arr-of-n-distinct-integers-sorted-in-ascending-order-you-need-to-find-the-smallest-fixed-point-in-the-array-such-that-the-value-stored-at-a-particular-index-is-equal-to-the-index-that-means-arr-i-i-where-arr-i-denotes-element-at-the-the-ith-index\">You are given an array &#39;ARR&#39; of \u2018N\u2019 distinct integers sorted in ascending order. You need to find the smallest fixed point in the array, such that the value stored at a particular index is equal to the index. That means &#39;ARR[i]&#39; == &#39;i&#39;, where &#39;ARR[i]&#39; denotes element at the the &#39;i&#39;th index.</h4>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code> 1.Note that the array contains negative integers as well. \n\n2. Also, note that every array contains a single fixed point.\n</code></pre>\n\n<h5 id=\"example\">Example :</h5>\n\n<pre><code>Given Array = [-1, 1, 3, 5]\nIn the above example &#39;ARR[1]&#39; == 1, so you need to return 1.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains an integer \u2018T\u2019 which denotes the number of test cases. \n\nThe first line of each test case contains a single integer \u2018N\u2019, denoting the size of the input array.\n\nThe next line contains \u2018N\u2019 space-separated integers denoting the elements of the array.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, you need to return a single integer denoting the index or value at which &#39;ARR[i]&#39; == 1. In case no such value exists, return -1.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You don\u2019t need to print anything; It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;=  N  &lt;= 10000\n-10^9 &lt;= ARR[i] &lt;= 10^9\n\nWhere &#39;ARR[i]&#39; denotes element at the the &#39;i&#39;th index.\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n4\n-1 1 3 5\n3\n1 2 3\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>1\n-1\n</code></pre>\n\n<h5 id=\"explanation-of-sample-output-1\">Explanation of Sample Output 1:</h5>\n\n<pre><code>In test case 1, &#39;ARR[1]&#39; == 1, so you need to return 1.\n\nIn test case 2, No such value present, so you need to return -1.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n4\n-1 0 2 4\n5\n-2 -1 0 1 2\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>2\n-1\n</code></pre>\n\n<h5 id=\"explanation-of-sample-output-2\">Explanation of Sample Output 2:</h5>\n\n<pre><code>In test case 1, &#39;ARR[2]&#39; == 2, so you need to return 2.\n\nIn test case 2, No such value present, so you need to return -1.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": -7,
            "dislikes": "NA",
            "rephrased": {
                "body": "You are given an array 'ARR' of 'N' distinct integers sorted in ascending order.  Find the smallest index 'i' such that ARR[i] equals 'i'. In other words, find the smallest fixed point in the array. The array can contain negative integers.",
                "constraints": [
                    "1 <= T <= 10 (Number of test cases)",
                    "1 <= N <= 10000 (Size of the array)",
                    "-10^9 <= ARR[i] <= 10^9 (Value of array elements)",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "4\n-1 1 3 5",
                        "output": "1",
                        "explanation": "ARR[1] == 1, therefore the smallest fixed point is at index 1."
                    },
                    {
                        "input": "3\n1 2 3",
                        "output": "-1",
                        "explanation": "There is no index 'i' where ARR[i] == i. Therefore, return -1."
                    },
                    {
                        "input": "4\n-1 0 2 4",
                        "output": "2",
                        "explanation": "ARR[2] == 2, therefore the smallest fixed point is at index 2."
                    },
                    {
                        "input": "5\n-2 -1 0 1 2",
                        "output": "-1",
                        "explanation": "There is no index 'i' where ARR[i] == i. Therefore, return -1."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you think of using Linear Search till \u2018N\u2019.</p>",
            "<p>Can you think of using Binary Search to search the element in log(N) time.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}