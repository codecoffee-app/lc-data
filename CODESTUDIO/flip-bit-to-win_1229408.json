{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10468,
            "title": "Flip Bit to Win",
            "titleSlug": "flip-bit-to-win_1229408",
            "content": "<h4 id=\"ninjas-are-often-known-for-their-stealth-execution-and-accuracy-to-get-the-job-done-right-while-honing-their-art-of-moving-through-dense-forests-stealthily-they-need-the-maximum-number-of-continuous-trees-one-after-the-other-for-practicing\">Ninjas are often known for their stealth execution and accuracy to get the job done right. While honing their art of moving through dense forests stealthily, they need the maximum number of continuous trees one after the other for practicing.</h4>\n\n<h4 id=\"trees-are-represented-by-1s-and-empty-places-by-0s-basically-a-binary-representation-of-a-given-integer-you-are-also-given-an-extra-tree-which-you-can-plant-at-any-empty-place-i-e-you-can-flip-one-of-the-zeroes-in-the-binary-representation-to-1-the-tree-should-be-planted-such-that-the-maximum-number-of-consecutive-trees-is-maximized\">Trees are represented by 1s and empty places by 0s (basically a binary representation of a given integer). You are also given an extra tree which you can plant at any empty place (i.e. you can flip one of the zeroes in the binary representation to 1). The tree should be planted such that the maximum number of consecutive trees is maximized.</h4>\n\n<h4 id=\"your-task-is-to-report-the-maximum-number-of-consecutive-trees-after-plantation\">Your task is to report the maximum number of consecutive trees after plantation.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You may also choose not to plant that extra tree at all.\n</code></pre>\n\n<h5 id=\"for-example\">For Example:</h5>\n\n<pre><code>Input: 54\nOutput: 5\n\nThe binary representation of 54 is 110110.\nAfter flipping the third bit from the left, we get consecutive 5 bits. i.e. 111110.\n</code></pre>\n\n<h5 id=\"input-format\">Input format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases to run. Then the &#39;T&#39; test cases are as follows.\n\nThe first and the only line of each test contains an integer &#39;N&#39;, denoting the integer whose consecutive ones in the binary representation are to be found out.\n</code></pre>\n\n<h5 id=\"output-format\">Output format:</h5>\n\n<pre><code>For the integer, print the length of the longest sequence of 1 s you could create by flipping exactly one bit. \n\nOutput for each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 1000\n2 &lt;= N &lt;= 10^9\n\nWhere &#39;N&#39; is the integer that is to be looked into for the maximum consecutive ones after flipping 1 bit.\n\nTime limit: 1 second\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>3\n1775         \n12         \n15\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>8\n3\n4\n4\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1:</h5>\n\n<pre><code>For first test case:\nThe binary representation of 1775 is 11011101111.\nAfter flipping the highlighted bit, we get consecutive 8 bits. (11011111111)\n\nFor second test case:\nThe binary representation of 12 is 1100.\nAfter flipping the highlighted bit, we get consecutive 3 bits. (1110)\n\nFor third test case:\nThe binary representation of 15 is 1111.\nThere is no need to flip bits here since all bits are ones.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n71\n54\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>4\n5\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation For Sample Input 2:</h5>\n\n<pre><code>For first test case:\nThe binary representation of 71 is 1000111.\nAfter flipping the 4th bit, we get consecutive 4 bits.\n\nFor second test case:\nThe binary representation of 54 is 110110.\nAfter flipping the 3rd bit, we get consecutive 5 bits.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 4,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an integer, find the length of the longest sequence of 1s you could create in its binary representation by flipping exactly one 0 to a 1. You can also choose not to flip any bits if the maximum consecutive 1s are already achieved. Consider '1' as representing a tree and '0' as an empty space. You are allowed to plant one extra tree in an empty space to maximize the number of consecutive trees.",
                "constraints": [
                    "1 <= T <= 1000",
                    "2 <= N <= 10^9",
                    "Time limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "a = 1775",
                        "output": "8",
                        "explanation": "The binary representation of 1775 is 11011101111. Flipping the third bit from the left (11011111111) results in 8 consecutive 1s."
                    },
                    {
                        "input": "a = 12",
                        "output": "3",
                        "explanation": "The binary representation of 12 is 1100. Flipping the third bit from the left (1110) results in 3 consecutive 1s."
                    },
                    {
                        "input": "a = 15",
                        "output": "4",
                        "explanation": "The binary representation of 15 is 1111.  No flip is needed as the existing representation already has 4 consecutive 1s."
                    },
                    {
                        "input": "a = 71",
                        "output": "4",
                        "explanation": "The binary representation of 71 is 1000111. Flipping the 4th bit results in 4 consecutive 1s (1001111 -> after flip it's similar to 0001111, considering left padding of zero)"
                    },
                    {
                        "input": "a = 54",
                        "output": "5",
                        "explanation": "The binary representation of 54 is 110110. Flipping the third bit from the left (111110) results in 5 consecutive 1s."
                    },
                    {
                        "input": "a = 2",
                        "output": "2",
                        "explanation": "Binary representation of 2 is 10. Flipping the last bit yields 11, resulting in 2 consecutive 1s."
                    },
                    {
                        "input": "a = 5",
                        "output": "2",
                        "explanation": "Binary representation of 5 is 101. Flipping the first bit yields 111, resulting in 2 consecutive 1s after the flip."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Count number of ones around every 0 bit.</p>",
            "<p>Can we use the sliding window technique to solve this problem?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}