{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9064,
            "title": "Flip given bits",
            "titleSlug": "flip-given-bits_973114",
            "content": "<h4 id=\"you-have-been-given-an-integer-num-32-bits-and-an-array-of-size-n\">You have been given an integer &#39;NUM&#39; (32 bits) and an array of size &#39;N&#39;.</h4>\n\n<h4 id=\"your-task-is-to-flip-all-the-bits-of-num-at-position-arr-i-where-0-i-n-1\">Your task is to flip all the bits of &#39;NUM&#39; at position &#39;ARR[i]&#39; where 0&lt;= i &lt;= N-1.</h4>\n\n<h5 id=\"input-format\">Input format :</h5>\n\n<pre><code>The first line contains an Integer &#39;T&#39; which denotes the number of test cases or queries to be run. Then the test cases follow.\n\nThe first line of each test case contains an integer &#39;NUM&#39; representing the number whose binary representation is to be flipped.\n\nThe second line of each test case contains an integer &#39;N&#39; representing the size of the array/list.\n\nThe third line of each test case contains &#39;N&#39; single space-separated integers representing the elements of the given array/list \u2018ARR\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case, print a single line containing an integer that represents the Modified Integer.\n\nOutput for each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note</h5>\n\n<pre><code>You are not required to print the output, it has already been taken care of. Just implement the function. \n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= &#39;T&#39; &lt;= 10\n1 &lt;= &#39;NUM&#39; &lt;= 10^9\n1 &lt;= &#39;N&#39; &lt;= 10^5\n1 &lt;= &#39;ARR[i]&#39; &lt;= 31\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n21\n3\n4 2 1\n40\n1\n4\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>30\n32\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1:</h5>\n\n<pre><code>Before flipping\n21 =&gt; 10101\nAfter flipping the 4th, 2nd and 1st bit from the end we get \n30 =&gt; 11110\n\nBefore flipping\n40 =&gt; 101000\nAfter flipping the 4th bit from the end we get \n32 =&gt; 100000\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\n5\n3\n6 2 5\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>55\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 9,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a 32-bit integer `num` and an array `arr` of bit positions (1-indexed), flip the bits at the specified positions in `num`. Return the modified integer.",
                "constraints": [
                    "1 <= 'T' <= 10 (Number of test cases)",
                    "1 <= 'NUM' <= 10^9",
                    "1 <= 'N' <= 10^5 (Size of the array)",
                    "1 <= 'ARR[i]' <= 31 (Bit positions)"
                ],
                "testcases": [
                    {
                        "input": "num = 21, arr = [4, 2, 1], n = 3",
                        "output": "30",
                        "explanation": "Before flipping: 21 (10101 in binary). Flipping bits at positions 4, 2, and 1 results in 30 (11110 in binary)."
                    },
                    {
                        "input": "num = 40, arr = [4], n = 1",
                        "output": "32",
                        "explanation": "Before flipping: 40 (101000 in binary). Flipping the bit at position 4 results in 32 (100000 in binary)."
                    },
                    {
                        "input": "num = 5, arr = [6, 2, 5], n = 3",
                        "output": "55",
                        "explanation": "Before flipping: 5 (00000000000000000000000000000101).  Flipping the 6th, 2nd and 5th bits from the right results in 55 (00000000000000000000000000110111)."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to use the bitwise operators to perform the bit flipping.</p>",
            "<p>Try to traverse through the index of the binary representation and flip only those bits.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}