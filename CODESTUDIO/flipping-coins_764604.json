{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 7839,
            "title": "Flipping coins",
            "titleSlug": "flipping-coins_764604",
            "content": "<h4 id=\"gary-has-n-coins-placed-in-a-straight-line-some-coins-have-head-side-up-and-others-have-the-tail-side-up\">Gary has N coins placed in a straight line. Some coins have head side up, and others have the tail side up.</h4>\n\n<h5 id=\"convention\">Convention:</h5>\n\n<pre><code>1 denotes the HEAD side is up. \n0 denotes the TAIL side is up. \n</code></pre>\n\n<h4 id=\"now-gary-wants-to-obtain-a-maximum-number-of-head-side-up-coins-he-can-perform-at-most-one-possibly-0-flip-in-which-he-can-flip-the-coins-of-a-continuous-interval-continuous-subarray\">Now, Gary wants to obtain a maximum number of head-side up coins. He can perform at most one(possibly 0) flip in which he can flip the coins of a continuous interval (continuous subarray).</h4>\n\n<h5 id=\"for-example-in-the-given-array-0-based-indexing-1-0-0-1-0-0-1-we-can-obtain-maximum-head-side-up-coins-by-flipping-the-coins-in-range-1-to-5-the-array-will-thus-become-1-1-1-0-1-1-1\">For example: In the given array (0 based indexing), { 1, 0, 0, 1, 0, 0, 1 }, we can obtain maximum head side up coins by flipping the coins in range 1 to 5. The array will thus become {1, 1, 1, 0, 1, 1, 1 }.</h5>\n\n<h4 id=\"return-the-maximum-number-of-heads-side-up-gary-can-obtain\">Return the maximum number of heads side up Gary can obtain.</h4>\n\n<h5 id=\"input-format\">Input format:</h5>\n\n<pre><code>The first line contains an integer &#39;T&#39; which denotes the number of test cases or queries to be run. Then, the test cases follow.\n\nThe first line of each test case or query contains an integer &#39;N&#39; representing the number of coins.\n\nThe second line contains &#39;N&#39; single space-separated integers (0 or 1) representing the upside of the coins.\n</code></pre>\n\n<h5 id=\"output-format\">Output format:</h5>\n\n<pre><code>For each test case, print the count of maximum head side up coins that can be obtained in a single line.\n\nOutput for each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note</h5>\n\n<pre><code>You are not required to print anything, and it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;=10     \n1 &lt;= N &lt;= 10^5 \n0 &lt;= arr[i] &lt;= 1\n\nwhere &#39;T&#39; is the number of test cases, &#39;N&#39; is the total number of coins, and &#39;arr[i]&#39; denotes whether the coin is head side up or tail side up.\nTime limit: 1 sec.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample input 1:</h5>\n\n<pre><code>1\n4\n1 0 1 0 \n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample output 1:</h5>\n\n<pre><code>3\n</code></pre>\n\n<h5 id=\"explanation\">Explanation</h5>\n\n<pre><code>{ 1, 1, 1, 0} is one possible answer if we flip range 1-1. \n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample input 2:</h5>\n\n<pre><code>2\n5\n0 0 1 0 1\n3\n1 1 1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample output 2:</h5>\n\n<pre><code>4\n3\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 5,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of coins represented by 0s and 1s, where 1 represents heads and 0 represents tails, find the maximum number of heads achievable after flipping a single continuous subarray (or no subarray at all). Flipping a subarray means changing 0s to 1s and 1s to 0s within that subarray.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10^5",
                    "0 <= arr[i] <= 1"
                ],
                "testcases": [
                    {
                        "input": "arr=[1, 0, 1, 0]",
                        "output": "3",
                        "explanation": "Flipping the subarray from index 1 to 1 results in [1, 1, 1, 0], which has 3 heads."
                    },
                    {
                        "input": "arr=[0, 0, 1, 0, 1]",
                        "output": "4",
                        "explanation": "Flipping the subarray from index 0 to 1 results in [1, 1, 1, 0, 1], which has 4 heads. Other flips might also yield the same result."
                    },
                    {
                        "input": "arr=[1, 1, 1]",
                        "output": "3",
                        "explanation": "No flip needed. All coins are already heads."
                    },
                    {
                        "input": "arr=[0, 0, 0, 0]",
                        "output": "4",
                        "explanation": "Flipping the whole array results in [1, 1, 1, 1], which has 4 heads."
                    },
                    {
                        "input": "arr=[1, 0, 0, 1, 0, 0, 1]",
                        "output": "6",
                        "explanation": "Flipping the subarray from index 1 to 5 results in [1, 1, 1, 0, 1, 1, 1], which has 6 heads."
                    },
                    {
                        "input": "arr=[0, 1, 0, 1, 0]",
                        "output": "5",
                        "explanation": "Flipping subarray [0,4] gives [1,0,1,0,1] , which becomes [1,0,1,0,1] --> [1,0,1,0,1]. Flipping subarray [0,0] results in [1,1,0,1,0] = 3. Flipping subarray [2,2] results in [0,1,1,1,0] = 3. Flipping subarray [0,2] results in [1,0,1,1,0]=3. Flipping subarray [2,4] results in [0,1,1,0,1]=3. Flipping subarray [1,3] results in [0,0,1,0,0] = 1. Flipping subarray [4,4] results in [0,1,0,1,1]= 3.  Flipping subarray [0,1,2,3,4] results in [1,0,1,0,1] =3. Flipping from index 0 to 0 gives 11010 = 2 heads. If flip from index 0 to 2 result become 1,0,1,1,0 =3 heads. If flip from index 2 to 4 result become 0,1,1,0,1 = 3. Flipping no subarray result [0,1,0,1,0]  . consider flip 0-0 = 1,1,0,1,0 = 3. If flip 0-4, result 1,0,1,0,1  =3 heads. Flip 0-2 , becomes 1,0,1,1,0.  consider flipping 0  to find maximum one and the subarray. flipping 1-3 also. Flipping range [0,4] = 1 0 1 0 1. heads = 3. However flipping range [0,0] 1 1 0 1 0 then heads is 3. Flipping Range [2,2]= 0 1 1 1 0 heads is 3. If flipping range [2,4] = 0 1 1 0 1 heads are 3. flipping array =01010"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>First off, observe that the question focuses on the keyword \u2018subarray\u2019. Thus, all we need to do is work on every subarray one by one.&nbsp;</p>",
            "<p>When it comes to subarrays, notice that we are not concerned about each and every subarray but only the subarray with maximum tails and minimum heads.&nbsp;</p><p>Here, tails can be considered as a positive entity as we can flip it and get it added into our answer. On the other hand, heads can be considered as a negative entity as after flipping; we lose a coin with the head side up.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}