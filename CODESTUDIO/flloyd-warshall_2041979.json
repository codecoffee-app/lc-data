{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 14185,
            "title": "Flloyd Warshall",
            "titleSlug": "flloyd-warshall_2041979",
            "content": "<h4 id=\"you-have-been-given-a-directed-weighted-graph-of-n-vertices-labeled-from-1-to-n-and-m-edges-each-edge-connecting-two-nodes-u-and-v-has-a-weight-w-denoting-the-distance-between-them\">You have been given a directed weighted graph of \u2018N\u2019 vertices labeled from 1 to &#39;N&#39; and \u2018M\u2019 edges. Each edge connecting two nodes &#39;u&#39; and &#39;v&#39; has a weight &#39;w&#39; denoting the distance between them.</h4>\n\n<h4 id=\"your-task-is-to-find-the-length-of-the-shortest-path-between-the-src-and-dest-vertex-given-to-you-in-the-graph-using-flloyd-warshall-s-algorithm-the-graph-may-contain-negatively-weighted-edges\">Your task is to find the length of the shortest path between the \u2018src\u2019 and \u2018dest\u2019 vertex given to you in the graph using Flloyd warshall\u2019s algorithm. The graph may contain negatively weighted edges.</h4>\n\n<h4 id=\"example\">Example :</h4>\n\n<p><img src=\"https://files.codingninjas.in/image-11779.png\" alt=\"Alt text\"></p>\n\n<pre><code>3 3 1 3\n1 2 2\n1 3 2\n2 3 -1\nIn the above graph, the length of the shortest path between vertex 1 and vertex 3 is 1-&gt;2-&gt;3 with a cost of 2 - 1 = 1.\n</code></pre>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>It&#39;s guaranteed that the graph doesn&#39;t contain self-loops and multiple edges. Also the graph does not contain negative weight cycles.\n</code></pre>\n\n<h4 id=\"input-format\">Input Format :</h4>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases. Then each test case follows.\n\nThe first line of each test case contains four single space-separated integers \u2018N\u2019,  \u2018M\u2019 , \u2018src\u2019 and \u2018dest\u2019 denoting the number of vertices, the number of edges in the directed graph the source vertex and the destination vertex respectively.\n\nThe next \u2018M\u2019 lines each contain three single space-separated integers \u2018u\u2019, \u2018v\u2019, and \u2018w\u2019, denoting an edge from vertex \u2018u\u2019 to vertex \u2018v\u2019, having weight \u2018w\u2019.\n</code></pre>\n\n<h4 id=\"output-format\">Output Format:</h4>\n\n<pre><code>For each test case, return an integer denoting the length of the shortest path from \u2018src\u2019 to \u2018dest\u2019. If no path is possible return 10^9. \n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints :</h4>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 50\n1 &lt;= M &lt;= 300\n1 &lt;= src, dest &lt;= N\n1 &lt;= u,v &lt;= N\n-10^5 &lt;= w &lt;= 10^5\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>1    \n4 4 1 4\n1 2 4\n1 3 3\n2 4 7 \n3 4 -2\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>1\n</code></pre>\n\n<h5 id=\"explanation-for-sample-output-1\">Explanation For Sample Output 1 :</h5>\n\n<p><img src=\"https://files.codingninjas.in/colimage-11780.png\" alt=\"Alt text\"></p>\n\n<pre><code>The optimal path from source vertex 1 to destination vertex 4 is 1-&gt;3-&gt;4 with a cost of 3 - 2 = 1.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>1\n2 1 1 2\n2 1 3\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>1000000000\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 31,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a directed weighted graph with 'N' vertices (labeled 1 to 'N') and 'M' edges, where each edge (u, v) has a weight 'w' representing the distance between nodes u and v. Your task is to determine the shortest path length between a given source vertex 'src' and destination vertex 'dest' using the Floyd-Warshall algorithm. The graph may contain edges with negative weights, but it is guaranteed that the graph doesn't contain self-loops, multiple edges, or negative weight cycles.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 50",
                    "1 <= M <= 300",
                    "1 <= src, dest <= N",
                    "1 <= u, v <= N",
                    "-10^5 <= w <= 10^5",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "1\n4 4 1 4\n1 2 4\n1 3 3\n2 4 7\n3 4 -2",
                        "output": "1",
                        "explanation": "The shortest path from vertex 1 to vertex 4 is 1 -> 3 -> 4, with a total cost of 3 + (-2) = 1."
                    },
                    {
                        "input": "1\n2 1 1 2\n2 1 3",
                        "output": "1000000000",
                        "explanation": "There is no path from vertex 1 to vertex 2 in the given graph, so the output is 10^9."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Think of negative edges and see which algorithm works on negative edges.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}