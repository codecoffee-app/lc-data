{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 2008,
            "title": "Flower Shop",
            "titleSlug": "flower-shop_625694",
            "content": "<h4 id=\"oasis-visits-a-florist-shop-shop-has-n-flowers-each-being-of-a-specific-type-and-every-flower-costs-1-unit\">Oasis visits a Florist Shop. Shop has N flowers each being of a specific type and every flower costs 1 unit.</h4>\n\n<h4 id=\"you-are-given-type-of-each-flower-in-an-array-p-p1-p2-pn-if-he-buys-a-flower-of-type-p-then-he-will-get-all-flowers-whose-type-lies-between-p-to-p-4-both-inclusive-for-free\">You are given type of each flower in an array P =  [p1,p2,...,pN]. If he buys a flower of type P\u2019 , then he will get all flowers whose type lies between P\u2019 to P\u2019+4 (both inclusive) for free.</h4>\n\n<h4 id=\"you-need-to-find-and-print-the-price-oasis-has-to-pay-to-buy-all-flowers\">You need to find and print the price Oasis has to pay to buy all flowers.</h4>\n\n<h5 id=\"input-format\">Input Format</h5>\n\n<pre><code>The first line contains an integer N i.e. number of flowers.\nNext line will contain N integers, representing the types of N flowers.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format</h5>\n\n<pre><code>Print minimum cost with which Oasis could buy all of flowers.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints</h5>\n\n<pre><code>1 &lt;= N &lt;= 10^5\n0 &lt;= pi &lt;= 10^4\n</code></pre>\n<h5 id=\"sample-input\">Sample Input</h5>\n\n<pre><code>5\n1 2 3 17 10\n</code></pre>\n\n<h5 id=\"sample-output\">Sample Output</h5>\n\n<pre><code>3\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 581,
            "dislikes": "NA",
            "rephrased": {
                "body": "A florist shop has N flowers, each of a specific type, and each flower costs 1 unit. Given an array P representing the types of the N flowers, determine the minimum cost Oasis needs to pay to acquire all the flowers. If Oasis buys a flower of type p, they receive all flowers of types between p and p+4 (inclusive) for free.",
                "constraints": [
                    "1 <= N <= 10^5",
                    "0 <= pi <= 10^4",
                    "All flower types are non-negative integers"
                ],
                "testcases": [
                    {
                        "input": "n = 5, nums=[1,2,3,17,10]",
                        "output": "3",
                        "explanation": "Oasis buys flower of type 1 (cost 1). This gets flowers of type 1, 2, 3, 4, 5 for free.  Then Oasis buys the flower of type 10(cost 1). This gets flowers of type 10,11,12,13,14 for free. Then Oasis buys the flower of type 17 (cost 1). Final cost = 3."
                    },
                    {
                        "input": "n = 3, nums=[1,2,3]",
                        "output": "1",
                        "explanation": "Oasis buys flower of type 1 (cost 1). This gets flowers of type 1, 2, 3, 4, 5 for free. Since there are only flowers with types 1, 2, and 3, all flowers are acquired."
                    },
                    {
                        "input": "n = 6, nums=[5,5,5,5,5,5]",
                        "output": "1",
                        "explanation": "Oasis buys a flower of type 5 (cost 1). All flowers from 5 to 9 are free. Since all flowers are of type 5, Oasis gets all flowers."
                    },
                    {
                        "input": "n = 4, nums=[1,6,11,16]",
                        "output": "4",
                        "explanation": "Oasis buys type 1 (cost 1), gets 1-5 free. Buys type 6 (cost 1), gets 6-10 free. Buys type 11 (cost 1), gets 11-15 free. Buys type 16 (cost 1), gets 16-20 free. Total cost is 4."
                    },
                    {
                        "input": "n = 7, nums=[0,1,2,3,4,5,6]",
                        "output": "2",
                        "explanation": "Buy flower type 0 (cost 1) gets 0,1,2,3,4 free. Buy flower type 5 (cost 1) gets 5,6,7,8,9 free. Total cost is 2"
                    },
                    {
                        "input": "n = 2, nums=[9999, 10000]",
                        "output": "2",
                        "explanation": "Need to buy both because 9999 only gives flowers from 9999 to 10003 for free and 10000 only gives flowers from 10000 to 10004 for free"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "cpp",
                "full_func": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint visited[10005];\n\nint main() {\n    int n;\n    cin>>n;\n    for(int i=0 ; i< n ; i++)\n    {\n        int x;\n        cin>>x;\n        visited[x]++;\n    }\n    int ans = 0;\n    for(int i =0 ; i<= 10000 ; i++)\n    {\n        if(visited[i] != 0)\n        {\n            ans++;\n            for(int j=0 ; j<=4 ; j++)\n                visited[i+j] = 0;\n        }\n    }\n    cout<<ans<<endl;\n    return 0;\n}",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "java",
                "full_func": "import java.util.*;\n\npublic class Main {\n\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner scn = new Scanner(System.in);\n        int N = scn.nextInt();\n        int w[] = new int[N];\n        for (int i = 0; i < N; i++) {\n            w[i] = scn.nextInt();\n        }\n        Arrays.sort(w);\n        int cost = 1;\n        int last = w[0];\n        for (int i = 1; i < N; i++) {\n            if (w[i] > last + 4) {\n                cost++;\n                last = w[i];\n            }\n        }\n        System.out.println(cost);\n\n\t}\n\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "python",
                "full_func": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint visited[10005];\n\nint main() {\n    int n;\n    cin>>n;\n    for(int i=0 ; i< n ; i++)\n    {\n        int x;\n        cin>>x;\n        visited[x]++;\n    }\n    int ans = 0;\n    for(int i =0 ; i<= 10000 ; i++)\n    {\n        if(visited[i] != 0)\n        {\n            ans++;\n            for(int j=0 ; j<=4 ; j++)\n                visited[i+j] = 0;\n        }\n    }\n    cout<<ans<<endl;\n    return 0;\n}",
                "lang_text": "py"
            }
        },
        "platform": "CODESTUDIO"
    }
}