{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 22707,
            "title": " Food Festival",
            "titleSlug": "food-festival_5848795",
            "content": "<h4 id=\"ninja-is-taking-part-in-a-food-festival-and-he-decided-to-prepare-n-dishes-with-the-spiciness-of-ith-dish-being-dishes-i\">Ninja is taking part in a food festival and he decided to prepare \u2018N\u2019 dishes with the spiciness of ith dish being \u2018DISHES[i]\u2019.</h4>\n\n<h4 id=\"he-has-an-unlimited-supply-of-n-types-of-ingredients-and-the-spiciness-of-ith-type-of-ingredient-is-ingredients-i\">He has an unlimited supply of \u2018N\u2019 types of ingredients and the spiciness of ith type of ingredient is \u2018INGREDIENTS[i]\u2019.</h4>\n\n<h4 id=\"the-spiciness-of-a-dish-is-defined-as-the-sum-of-the-spiciness-of-ingredients-used-in-it\">The spiciness of a dish is defined as the sum of the spiciness of ingredients used in it.</h4>\n\n<h4 id=\"find-the-minimum-number-of-ingredients-needed-to-make-all-the-dishes\">Find the minimum number of ingredients needed to make all the dishes.</h4>\n\n<h4 id=\"it-is-always-possible-to-make-every-dish-with-the-required-spiciness-from-the-combination-of-given-ingredients\">It is always possible to make every dish with the required spiciness from the combination of given ingredients.</h4>\n\n<h4 id=\"note-in-the-problem-statement-1-based-indexing-is-used-and-in-the-code-0-based-indexing-is-used\">Note: In the Problem Statement 1-based indexing is used and in the code 0-based indexing is used.</h4>\n\n<h5 id=\"example\">Example:</h5>\n\n<pre><code>Input: \u2018N\u2019= 4  \u2018DISHES\u2019 =[2, 4, 6, 8] \u2018INGREDIENTS\u2019=[1, 4, 5, 3]\n\nOutput: 7\n\nFirst dish can be made using 2 ingredients of type 1. \nSecond using 1 ingredient of type 2. \nThird using 2 ingredients of type 4. \nFourth using 2 ingredients of type 2. \nSo total 7 ingredients.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line will contain the integer &#39;T&#39;, denoting the number of test cases.\n\nThe first line of each test case contains one integer \u2018N\u2019 denoting the number of dishes and ingredients present.\n\nThe second line of each test case contains \u2018N\u2019 single space-separated integers, elements of the array \u2018DISHES\u2019.\n\nThe third line of each test case contains \u2018N\u2019 single space-separated integers, elements of the array \u2018INGREDIENTS\u2019.     \n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case, Return the minimum number of ingredients to make all dishes.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don&#39;t need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 500\n1 &lt;= N &lt;= 500\n1 &lt;= DISHES[i] &lt;= 1000\n1 &lt;= INGREDIENTS[i] &lt;= 500  \n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n3   \n6 8 16\n2 3 7\n4\n2 12 40 26\n2 8 12 22   \n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>8\n9\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1 :</h5>\n\n<pre><code>For the first case:\nFirst dish can be made using 2 ingredients of type 2.\nSecond using 2 ingredients of type 2 and 1 ingredient of type 1.\nThird dish using 2 ingredients of type 3 and 1 ingredient of type 1.\nSo total of 8 ingredients.\n\nFor the second case:\nFirst dish can be made using 1 ingredient of type 1.\nSecond using 1 ingredient of type 3.\nThird dish using 2 ingredients of type 2 and 2 ingredients of type 3.\nFourth dish using 1 ingredient of type 4 and 2 ingredients of type 1.\nSo a total of 9 ingredients.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n8\n20 98 66 32 16 128 200 168\n2 2 2 4 5 50 4 19\n6\n6 8 16 34 189 155\n1 1 1 3 5 9 \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>38\n54\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -9,
            "dislikes": "NA",
            "rephrased": {
                "body": "Ninja is participating in a food festival and plans to create 'N' dishes. Each dish has a specific spiciness level represented by `DISHES[i]`. He has an unlimited supply of 'N' types of ingredients, where the spiciness of the i-th ingredient is `INGREDIENTS[i]`. The spiciness of a dish is the sum of the spiciness values of the ingredients used.  Your task is to determine the minimum number of ingredients required to prepare all 'N' dishes. It's guaranteed that every dish can be made using the provided ingredients.",
                "constraints": [
                    "1 <= T <= 500",
                    "1 <= N <= 500",
                    "1 <= DISHES[i] <= 1000",
                    "1 <= INGREDIENTS[i] <= 500",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "3\n6 8 16\n2 3 7",
                        "output": "8",
                        "explanation": "First dish can be made using 3 ingredients of type 1 (3 * 2 = 6).\nSecond dish can be made using 2 ingredients of type 2 and 1 ingredient of type 1 (2 * 3 + 1 * 2 = 8).\nThird dish using 2 ingredients of type 3 and 1 ingredient of type 1 (2 * 7 + 1 * 2 = 16).\nSo total of 3+2+1 + 2+1 = 8 ingredients."
                    },
                    {
                        "input": "4\n2 12 40 26\n2 8 12 22",
                        "output": "9",
                        "explanation": "First dish can be made using 1 ingredient of type 1.\nSecond dish using 1 ingredient of type 2.\nThird dish using 2 ingredients of type 2 and 2 ingredients of type 3.\nFourth dish using 1 ingredient of type 4 and 2 ingredients of type 1.\nSo a total of 1 + 1 + 2 + 2 + 1 + 2 = 9 ingredients."
                    },
                    {
                        "input": "8\n20 98 66 32 16 128 200 168\n2 2 2 4 5 50 4 19",
                        "output": "38",
                        "explanation": null
                    },
                    {
                        "input": "6\n6 8 16 34 189 155\n1 1 1 3 5 9",
                        "output": "54",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Think of trying out all possible combinations of ingredients for each dish and add the one with minimum ingredients to the final answer.</p>",
            "<p>Can you think of a way to optimize the recursive approach using memoization?</p>",
            "<p>Can you think of a way to optimize the recursive approach using tabulation?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}