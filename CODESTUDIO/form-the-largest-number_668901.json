{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 7476,
            "title": "Form The Largest Number",
            "titleSlug": "form-the-largest-number_668901",
            "content": "<h4 id=\"you-are-given-an-array-arr-of-length-n-consisting-of-non-negative-integers-using-only-these-given-numbers-rearrange-the-numbers-in-such-a-way-that-the-resultant-number-thus-formed-is-the-largest-possible-you-cannot-change-the-order-of-digits-of-a-number\">You are given an array(ARR) of length &#39;N&#39;, consisting of non-negative integers. Using only these given numbers, rearrange the numbers in such a way that the resultant number thus formed is the largest possible. You cannot change the order of digits of a number.</h4>\n\n<h5 id=\"for-example\">For Example:</h5>\n\n<pre><code>Given array numbers 12, 5, 34, the largest number you can form with them is 53412. There are other possible arrangements like 51234 or 34125, but they are both less than 53412.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/arr-2-4725.png\" alt=\"arr\"></p>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>As the final number formed after concatenation can be very large, print it as a string.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains a single integer &#39;T&#39;, representing the number of test cases or queries to be run. \nThen the test cases follow.\n\nFor each test case, the first input line contains a single integer &#39;N&#39;, the size of the array.\n\nThe second line contains &#39;N&#39; single space-separated integers representing the elements in the array.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print a single line containing a single integer denoting the largest possible number that can be formed using the given array numbers.\n\nThe output for every test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You are not required to print anything explicitly. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= N &lt;= 10 ^ 3\n0 &lt;= ARR[i] &lt;= 10 ^ 3\n\nWhere &#39;T&#39; is the number of test cases, &#39;N&#39; is the size of the array and &#39;ARR[i]&#39; represents the integers present in the array.\n\nTime limit: 1 sec.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n5\n1 20 300 4 50\n3\n98 987 986\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>504300201\n98987986\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1:</h5>\n\n<pre><code>In the first test, if we arrange the number as 50, 4, 300, 20, 1, we get 504300201.\n\nIn the second test, if we arrange the numbers as 98, 987, 986, we get 98987986.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\n2\n90 9\n5 \n5 4 3 2 10\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>990\n543210\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 1,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of non-negative integers, rearrange them to form the largest possible number. The order of digits within each number must remain unchanged. Return the largest number as a string.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= N <= 10 ^ 3",
                    "0 <= ARR[i] <= 10 ^ 3"
                ],
                "testcases": [
                    {
                        "input": "n = 5, nums=[1, 20, 300, 4, 50]",
                        "output": "504300201",
                        "explanation": "Arranging the numbers as 50, 4, 300, 20, 1 results in the largest possible number: 504300201."
                    },
                    {
                        "input": "n = 3, nums=[98, 987, 986]",
                        "output": "98987986",
                        "explanation": "Arranging the numbers as 98, 987, 986 results in the largest possible number: 98987986."
                    },
                    {
                        "input": "n = 2, nums=[90, 9]",
                        "output": "990",
                        "explanation": "Arranging the numbers as 9, 90 results in the largest possible number: 990."
                    },
                    {
                        "input": "n = 5, nums=[5, 4, 3, 2, 10]",
                        "output": "543210",
                        "explanation": "Arranging the numbers as 5, 4, 3, 2, 10 results in the largest possible number: 543210."
                    },
                    {
                        "input": "n = 4, nums=[0,0,0,0]",
                        "output": "0000",
                        "explanation": "All the input numbers are 0, so no matter how we rearrange, the result is always '0000'."
                    },
                    {
                        "input": "n=1, nums=[123]",
                        "output": "123",
                        "explanation": "With only one number, it is already the largest possible arrangement."
                    },
                    {
                        "input": "n = 3, nums = [1, 10, 100]",
                        "output": "110100",
                        "explanation": "1, 10, 100 yields the largest number"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>First off, observe that a seemingly obvious approach of concatenating numbers in descending order won\u2019t work (For numbers 78 and 9, 978 is larger than 789). Now, assume you only have two numbers. There are only two ways of concatenating them, so you try out both, and return the greater number. Whenever you \u2018merge\u2019 two numbers, you want to ensure that both numbers that you are merging are the maximum possible. Can you now think of a \u2018Divide &amp; Conquer\u2019 strategy to solve this?&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}