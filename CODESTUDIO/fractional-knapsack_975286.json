{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9087,
            "title": "Fractional Knapsack",
            "titleSlug": "fractional-knapsack_975286",
            "content": "<h4 id=\"you-have-been-given-weights-and-values-of-n-items-you-are-also-given-a-knapsack-of-size-w\">You have been given weights and values of \u2018N\u2019 items. You are also given a  knapsack of size \u2018W\u2019.</h4>\n\n<h4 id=\"your-task-is-to-put-the-items-in-the-knapsack-such-that-the-total-value-of-items-in-the-knapsack-is-maximum\">Your task is to put the items in the knapsack such that the total value of items in the knapsack is maximum.</h4>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You are allowed to break the items.\n</code></pre>\n\n<h5 id=\"example\">Example:</h5>\n\n<pre><code>If &#39;N = 4&#39; and &#39;W = 10&#39;. The weights and values of items are weights = [6, 1, 5, 3] and values = [3, 6, 1, 4]. \nThen the best way to fill the knapsack is to choose items with weight 6, 1 and  3. The total value of knapsack = 3 + 6 + 4 = 13.00   \n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains an integer \u2018T\u2019 denoting the number of test cases. Then each test case follows.\n\nThe first line of each test case contains two single space-separated integers \u2018N\u2019 and \u2018W\u2019, respectively.\n\nThe second line of each test case contains \u2018N\u2019 single space-separated integers representing the weight of the i-th item.\n\nThe third line of each test case contains \u2018N\u2019 single space-separated integers representing the value of the i-th item.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, the only line of output will print the maximum total value of items in the knapsack.  \n\nThe output must be rounded correctly up to two decimal places.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You are not required to print the expected output; it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= N &lt;= 5000\n1 &lt;= W &lt;= 10^5\n1 &lt;= weights[i] &lt;= 10^5\n1 &lt;= values[i] &lt;= 10^5\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1\n6 200\n50 40 90 120 10 200 \n40 50 25 100 30 45\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample output 1:</h5>\n\n<pre><code>204.00\n</code></pre>\n\n<h5 id=\"explanation-of-sample-output-1\">Explanation of Sample output 1:</h5>\n\n<pre><code>The most optimal way to fill the knapsack is to choose full items with weight 10 and value 30, weight 40 and value 50, weight 120 and value 100. Then take weight 30 from the item with weight 50 and value 40.\n\nThe total value =  30 + 50 + 100 + (30/50)*(40) = 204.00\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\n5 100\n20 24 36 40 42\n12 35 41 25 32\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample output 2:</h5>\n\n<pre><code>106.48\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 76,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given 'N' items with associated weights and values, and a knapsack with a maximum capacity 'W', determine the maximum total value of items that can be placed in the knapsack. Items can be fractionally included.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= N <= 5000",
                    "1 <= W <= 10^5",
                    "1 <= weights[i] <= 10^5",
                    "1 <= values[i] <= 10^5",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "1\n6 200\n50 40 90 120 10 200 \n40 50 25 100 30 45",
                        "output": "204.00",
                        "explanation": "The optimal way to fill the knapsack is to take the full items with weights 10 (value 30), 40 (value 50), and 120 (value 100). Then take a fraction of the item with weight 50 (value 40) - specifically, take 30 units of weight.  The total value is 30 + 50 + 100 + (30/50)*40 = 204.00"
                    },
                    {
                        "input": "1\n5 100\n20 24 36 40 42\n12 35 41 25 32",
                        "output": "106.48",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to pick those items whose value is more and weight is less.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}