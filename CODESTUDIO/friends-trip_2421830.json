{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 15185,
            "title": " Friends Trip",
            "titleSlug": "friends-trip_2421830",
            "content": "<h4 id=\"n-friends-have-to-go-trekking-to-a-location-one-of-them-presents-the-location-map-as-a-list-of-n-nodes-and-m-weighted-directed-edges-between-the-nodes-representing-the-time-it-takes-to-go-from-one-location-to-another-all-the-friends-decide-to-start-from-location-s-and-meet-at-location-d-you-have-to-find-the-minimum-time-it-will-take-such-that-one-friend-in-the-group-will-visit-one-location-each-and-meet-at-location-d-it-takes-1-unit-of-time-to-visit-a-location-if-not-possible-to-visit-all-locations-then-return-1\">\u2018N\u2019 friends have to go trekking to a location. One of them presents the location map as a list of \u2018N\u2019 nodes and \u2018M\u2019 weighted directed edges between the nodes, representing the time it takes to go from one location to another. All the friends decide to start from location \u2018S\u2019 and meet at location \u2018D\u2019. You have to find the minimum time it will take such that one friend in the group will visit one location each and meet at location \u2018D\u2019. It takes 1 unit of time to visit a location. If not possible to visit all locations, then return -1.</h4>\n\n<h5 id=\"for-example\">For example:</h5>\n\n<pre><code>You are given the following graph. S = 1 and D = 3:\n</code></pre>\n\n<p><img src=\"https://ninjasfiles.s3.amazonaws.com/asset_0000000000000510_1632309390_WeightedGraph2.drawio.png\" alt=\"WeightedGraph2\"></p>\n\n<pre><code>Friend 1 will visit location 1 in 1 unit time and then go to location 3 in 6 units of time. The total time is 7.\n\nFriend 2 will go from 1 to 2 in 4 units time, then visited 2 in 1 unit time and go to 3 in 2 units. The total time is 7.\n\nFriend 3 will go from 1 to 3 in 6 units and visit 3 in 1 unit. The total time is 7.\n\nHence everyone will reach location 3 in a maximum of 7 units of time. Therefore 7 is the answer.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains the single integer \u2018T\u2019 representing the number of test cases.\n\nThe first line of each test case contains two space-separated integers, \u2018N\u2019 and \u2018M\u2019, representing the number of nodes and edges in the graph.\n\nThe second line of each test case contains two integers, \u2018S\u2019 and \u2018D\u2019, representing the starting point and destination.\n\nThe next M lines of each test case contain three space-separated integers \u2018A\u2019 \u2018B\u2019 and \u2018W\u2019, representing an edge from the node \u2018A\u2019 to the node \u2018B\u2019 whose weight is \u2018W.\u2019\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print a single integer representing the minimum time it will take such that one friend in the group will visit one location each and meet at location \u2018D.\u2019\n\nFor each test case, print a separate line.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N, M &lt;= 10^5\n1 &lt;= A, B &lt;= N\n1 &lt;= S, D &lt;= N\n1 &lt;= W &lt;= 10^7\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n3 2\n1 3\n1 2 4\n2 3 2\n5 5\n1 5\n1 2 3\n2 3 2\n2 5 5\n3 4 1\n3 5 5\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>7\n-1\n</code></pre>\n\n<h5 id=\"explanation\">Explanation:</h5>\n\n<pre><code>For the first test case, you are given the following graph, S = 1 and D = 3:\n</code></pre>\n\n<p><img src=\"https://ninjasfiles.s3.amazonaws.com/asset_0000000000000510_1632309390_WeightedGraph2.drawio.png\" alt=\"WeightedGraph2\"></p>\n\n<pre><code>Friend 1 will visit location 1 in 1 unit time and then go to location 3 in 6 units of time. The total time is 7\nFriend 2 will go from 1 to 2 in 4 units, then visited 2 in 1 unit and went to 3 in 2 units. The total time is 7\nFriend 3 will go from 1 to 3 in 6 units and visit 3 in 1 unit. The total time is 7\nHence everyone will reach location 3 in a maximum of 7 units of time. Therefore 7 is the answer.\n\nFor the second test case, you are given the following graph, S = 1 and D = 5:\n</code></pre>\n\n<p><img src=\"https://ninjasfiles.s3.amazonaws.com/asset_0000000000000509_1632309006_WeightedGraph.drawio.png\" alt=\"WeightedGraph\"></p>\n\n<pre><code>Here it is not possible to visit location 4 and meet at location 5. Hence the answer is  -1.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n4 4\n1 4\n1 2 3\n2 3 3\n3 4 1\n4 1 2\n3 4\n1 3\n1 2 1\n2 1 2\n2 3 1\n3 2 1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>8\n3\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 7,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a directed weighted graph with 'N' nodes and 'M' edges, representing locations and the time to travel between them, 'N' friends start at location 'S' and must meet at location 'D'. Each friend must visit a unique location (including 'S' but excluding 'D') before arriving at 'D'. The time to visit a location is 1 unit. Find the minimum time it takes for all friends to meet at 'D', ensuring each friend visits a unique location. If it's impossible for all friends to visit a unique location and reach 'D', return -1.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N, M <= 10^5",
                    "1 <= A, B <= N",
                    "1 <= S, D <= N",
                    "1 <= W <= 10^7",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "3 2\n1 3\n1 2 4\n2 3 2",
                        "output": "7",
                        "explanation": "Friend 1 visits location 1 and then travels to location 3. Time: 1 (visit 1) + 6 (1 to 3) = 7.\nFriend 2 travels from 1 to 2, visits location 2, and then goes to 3. Time: 4 (1 to 2) + 1 (visit 2) + 2 (2 to 3) = 7.\nFriend 3 travels from 1 to 3, and then visits location 3. Time: 6(1 to 3) + 1(visit 3) = 7.\nMaximum time among all friends is 7."
                    },
                    {
                        "input": "5 5\n1 5\n1 2 3\n2 3 2\n2 5 5\n3 4 1\n3 5 5",
                        "output": "-1",
                        "explanation": "It is not possible for all 5 friends to visit a unique node and reach node 5, as node 4 cannot be reached from node 1. Hence the answer is -1."
                    },
                    {
                        "input": "4 4\n1 4\n1 2 3\n2 3 3\n3 4 1\n4 1 2",
                        "output": "8",
                        "explanation": "null"
                    },
                    {
                        "input": "3 4\n1 3\n1 2 1\n2 1 2\n2 3 1\n3 2 1",
                        "output": "3",
                        "explanation": "null"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to reverse the path.</p>",
            "<p>Try to use Dijkstra\u2019s algorithm</p>"
        ],
        "relatedTopics": [
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}