{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10238,
            "title": "Fruits and Baskets",
            "titleSlug": "fruits-and-baskets_1172174",
            "content": "<h4 id=\"there-are-n-baskets-each-containing-some-fruits-all-baskets-are-placed-in-a-single-horizontal-line-kevin-and-mark-both-are-very-hungry-and-so-they-want-to-eat-the-fruits-as-much-as-possible-they-have-decided-to-select-a-basket-from-either-end-of-the-line-only-formally-first-or-the-last-basket-in-that-line-only-and-eat-all-the-fruits-in-that-basket-they-will-pick-the-baskets-alternatively\">There are \u2018N\u2019 baskets, each containing some fruits. All baskets are placed in a single horizontal line. Kevin and Mark both are very hungry and so, they want to eat the fruits as much as possible. They have decided to select a basket from either end of the line only (formally, first or the last basket in that line only) and eat all the fruits in that basket. They will pick the baskets alternatively.</h4>\n\n<h4 id=\"you-have-to-tell-how-many-maximum-fruits-kevin-can-eat-if-both-of-them-pick-and-eat-the-fruits-optimally\">You have to tell how many maximum fruits Kevin can eat if both of them pick and eat the fruits optimally.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>Kevin will pick the basket first.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 representing the number of test cases.\n\nThe first line of each test case will contain a single integer \u2018N\u2019 which represents the number of baskets.\n\nThe second line of each test case will contain \u2018N\u2019 non-negative integers each separated by a single whitespace. These numbers will represent the number of fruits in each basket, respectively.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, return the maximum number of fruits Kevin can eat.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You don\u2019t need to print anything, It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= N &lt;= 100\n1 &lt;= BASKET[i] &lt;= 10^4\n\nWhere &#39;BASKET[i]&#39; denotes the number of fruits in the ith basket.\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n3\n6 4 5\n4  \n5 8 2 1  \n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>10\n9\n</code></pre>\n\n<h5 id=\"explanation-of-sample-output-1\">Explanation of Sample Output 1:</h5>\n\n<pre><code>In test case 1, Kevin will first select the front basket (containing 6 fruits) and then after Mark\u2019s selection, he will pick fruits from the 2nd basket as Mark has already selected the 3rd basket.\n\nIn test case 2, The order of selection of baskets are as follows: -\n\nKevin - 4th (1), Mark - 1st (5), Kevin - 2nd (8), and Mark - 3rd (2).\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>3\n1\n5\n2\n8 7\n4\n2 2 2 2     \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>5\n8\n4\n</code></pre>\n\n<h5 id=\"explanation-for-sample-output-2\">Explanation for Sample Output 2:</h5>\n\n<pre><code>In test case 1, there is only one basket and therefore, Kevin can only eat 5 fruits.\n\nIn test case 2, there are two baskets and Kevin wants to eat maximum fruits therefore, he will select 1st basket.\n\nIn test case 3, all baskets have the same number of fruits and so, Kevin can eat 2 + 2 = 4 fruits.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 5,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a line of N baskets, each containing a certain number of fruits. Kevin and Mark take turns selecting a basket from either end of the line. Kevin goes first. Determine the maximum number of fruits Kevin can collect if both players play optimally to maximize their own fruit intake.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= N <= 100",
                    "1 <= BASKET[i] <= 10^4"
                ],
                "testcases": [
                    {
                        "input": "n = 3, basket = [6, 4, 5]",
                        "output": "10",
                        "explanation": "Kevin picks 6, Mark can pick either 4 or 5. If Mark picks 5, Kevin picks 4, total Kevin gets is 6+4=10. If Mark picks 4, Kevin picks 5, total Kevin gets is 6+5 = 11, so Mark should pick 5 at first, since if Mark picks 4, Kevin will pick 5, and Kevin's fruits becomes 6+5 = 11. So Kevin initially pick 6. If Kevin picks 5 at first. Mark can pick either 6 or 4. If Mark picks 6, Kevin picks 4, total Kevin gets is 5+4=9. If Mark picks 4, Kevin picks 6, total Kevin gets is 5+6 = 11. So Mark should pick 6 at first. So Kevin's maxmium fruit to get is min(10,11) = 10."
                    },
                    {
                        "input": "n = 4, basket = [5, 8, 2, 1]",
                        "output": "9",
                        "explanation": "Kevin can pick either 5 or 1. If Kevin picks 5, Mark can pick either 1 or 8. If Mark picks 1, Kevin picks 8, and Mark picks 2. Kevin's fruit is 5+8=13. If Mark picks 8, Kevin picks 1, and Mark picks 2. Kevin's fruit is 5+1=6. If Kevin picks 1, Mark can pick either 5 or 2. If Mark picks 5, Kevin picks 2, and Mark picks 8. Kevin's fruit is 1+2=3. If Mark picks 2, Kevin picks 5, and Mark picks 8. Kevin's fruit is 1+5=6. Optimal pick will maximize Kevin's fruits."
                    },
                    {
                        "input": "n = 1, basket = [5]",
                        "output": "5",
                        "explanation": "Kevin picks the only basket, getting 5 fruits."
                    },
                    {
                        "input": "n = 2, basket = [8, 7]",
                        "output": "8",
                        "explanation": "Kevin picks 8, Mark picks 7."
                    },
                    {
                        "input": "n = 4, basket = [2, 2, 2, 2]",
                        "output": "4",
                        "explanation": "Kevin picks 2, Mark picks 2, Kevin picks 2, Mark picks 2. Kevin gets 2+2 = 4 fruits."
                    },
                    {
                        "input": "n = 5, basket = [1, 2, 3, 4, 5]",
                        "output": "9",
                        "explanation": "Kevin can either pick 1 or 5. This test case requires optimal solution approach, which will result in 9."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to break the problem into smaller subproblems.</p>",
            "<p>Can you reduce the time complexity using the top-down dp approach?</p>",
            "<p>Can you do it iteratively?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}