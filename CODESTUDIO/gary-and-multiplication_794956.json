{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 7857,
            "title": "Gary and multiplication ",
            "titleSlug": "gary-and-multiplication_794956",
            "content": "<h4 id=\"gary-has-recently-learned-about-priority-queues-and-is-quite-excited-about-them-he-has-asked-his-teacher-for-an-interesting-problem-so-his-teacher-came-up-with-a-simple-problem\">Gary has recently learned about priority queues and is quite excited about them. He has asked his teacher for an interesting problem. So, his teacher came up with a simple problem.</h4>\n\n<h4 id=\"the-problem-is-that-he-now-has-an-integer-array-arr-for-every-index-i-he-wants-to-find-the-product-of-the-largest-second-largest-and-the-third-largest-integer-in-the-range-0-i-given-that-array-has-0-based-indexing\">The problem is that he now has an integer array &#39;ARR&#39;. For every index i, he wants to find the product of the largest, second largest and the third largest integer in the range [0, i] given that array has 0 based indexing.</h4>\n\n<h4 id=\"you-have-to-return-the-list-as-required\">You have to return the list as required.</h4>\n\n<h4 id=\"note-two-numbers-can-be-the-same-value-wise-but-they-should-be-distinct-index-wise\">Note: Two numbers can be the same value-wise but they should be distinct index-wise.</h4>\n\n<h5 id=\"example\">Example:</h5>\n\n<pre><code>If the array is [2, 3, 3, 4], the answer should be:-\n\n-1 \n-1\n18 (3 * 3 * 2)\n36 (4 * 3 * 3) \n</code></pre>\n\n<h5 id=\"input-format\">Input format:</h5>\n\n<pre><code>The first line of input contains a single integer T, representing the number of test cases or queries to be run. \n\nThen the T test cases follow.\n\nThe first line of each test case contains an integer N, representing the number of elements in the array.\n\nThe second line contains N single space-separated integers X[0],X[1],X[2].... X[N-1] where X[i] is an element of the array.\n</code></pre>\n\n<h5 id=\"output-format\">Output format:</h5>\n\n<pre><code>For each test case, return the required list. If there is no second largest or third largest number in the array X up to that index then print &quot;-1&quot;, without the quotes.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= N &lt;= 10^5 \n1 &lt;= X[i] &lt;= 10^6 \n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample input 1:</h5>\n\n<pre><code>1\n4  \n2 3 1 4 \n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample output 1:</h5>\n\n<pre><code>-1 -1 6 24\n</code></pre>\n\n<h5 id=\"explanation\">Explanation</h5>\n\n<pre><code>-1 (no second largest as well as third largest element is present)\n-1 (no third largest element is present)\n6 (3 * 2 * 1)\n24 (4 * 3 * 2)\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample input 2:</h5>\n\n<pre><code>1\n6 \n1 5 7 3 9 12\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample output 2:</h5>\n\n<pre><code>1 -1 35 105 315 756\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 6,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an integer array `ARR`, for each index `i`, find the product of the largest, second largest, and third largest integers in the sub-array `ARR[0...i]`. Return a list containing these products for each index. If at any index, there are fewer than three elements available, return -1 for that index. Note that elements with the same value at different indices should be considered distinct.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= N <= 10^5",
                    "1 <= X[i] <= 10^6",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "4\n2 3 1 4",
                        "output": "-1 -1 6 24",
                        "explanation": "-1 (no second largest as well as third largest element is present in [2])\n-1 (no third largest element is present in [2,3])\n6 (3 * 2 * 1 in [2, 3, 1])\n24 (4 * 3 * 2 in [2, 3, 1, 4])"
                    },
                    {
                        "input": "6\n1 5 7 3 9 12",
                        "output": "-1 -1 35 105 315 756",
                        "explanation": "-1 (no second largest as well as third largest element is present in [1])\n-1 (no third largest element is present in [1,5])\n35 (7 * 5 * 1 in [1, 5, 7])\n105 (7 * 5 * 3 in [1, 5, 7, 3])\n315 (9 * 7 * 5 in [1, 5, 7, 3, 9])\n756 (12 * 9 * 7 in [1, 5, 7, 3, 9, 12])"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>It is very clear from the question that it is a priority queue question. All we need to do is work on the first largest, second largest and third largest elements which makes it clear that the max priority queue will come to play.&nbsp;</p>",
            "<p>Although it\u2019s given in the question that it is a priority queue question. But, all we need to do is work on the first largest, second largest and third largest elements which makes it clear that we need the record of only 3 largest numbers.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Heap",
                "slug": "heap"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}