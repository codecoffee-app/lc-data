{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9234,
            "title": "Generate Binary Numbers",
            "titleSlug": "generate-binary-numbers_981264",
            "content": "<h4 id=\"your-friend-ninja-has-been-learning-about-binary-numbers-lately-in-order-to-understand-binary-numbers-with-perfection-ninja-asks-you-to-generate-a-list-of-binary-numbers-from-1-to-n-which-he-can-use-later-for-reference\">Your friend Ninja has been learning about binary numbers lately. In order to understand binary numbers with perfection, Ninja asks you to generate a list of binary numbers from 1 to \u2018N\u2019, which he can use later for reference.</h4>\n\n<h4 id=\"for-every-integer-ninja-gives-your-task-is-to-generate-all-the-binary-numbers-from-1-to-n\">For every integer Ninja gives, your task is to generate all the binary numbers from 1 to \u2018N\u2019.</h4>\n\n<h4 id=\"example\">Example:</h4>\n\n<pre><code>Consider N = 5,\nAll the binary numbers from 1 to 5 are: 1, 10, 11, 100, 101.\n</code></pre>\n\n<h5 id=\"input-format\">Input format:</h5>\n\n<pre><code>The very first line of input contains an integer \u2018T\u2019 denoting the number of test cases. \n\nThe first and the only line of every test case contains a positive integer \u2018N\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output format:</h5>\n\n<pre><code>For each test case, print \u2018N\u2019 space-separated binary numbers from 1 to \u2018N\u2019, in a separate line.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10 \n1 &lt;= N &lt;= 10 ^ 5\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n2\n6\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>1 10\n1 10 11 100 101 110\n</code></pre>\n\n<h5 id=\"explanation-1\">Explanation 1:</h5>\n\n<pre><code>For the first test case when N = 2. \nWe need all the binary numbers from 1 to 2:\n1 -&gt; 1\n2 -&gt; 10\nThus, the output is 1, 10.\n\nFor the second test case when N = 6\nWe need all the binary numbers from 1 to 6:\n1 -&gt; 1\n2 -&gt; 10\n3 -&gt; 11\n4 -&gt; 100\n5 -&gt; 101\n6 -&gt; 110\nThus, the output is 1, 10, 11, 100, 101, 110.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n8\n4\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>1 10 11 100 101 110 111 1000\n1 10 11 100\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 27,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an integer N, generate a list of binary numbers from 1 to N. These binary numbers should be represented as strings.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10^5",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "2\n2\n6",
                        "output": "1 10\n1 10 11 100 101 110",
                        "explanation": "Test Case 1: N = 2. The binary representations of numbers 1 and 2 are '1' and '10' respectively.\nTest Case 2: N = 6. The binary representations of numbers 1 to 6 are '1', '10', '11', '100', '101', and '110' respectively."
                    },
                    {
                        "input": "2\n8\n4",
                        "output": "1 10 11 100 101 110 111 1000\n1 10 11 100",
                        "explanation": "Test Case 1: N = 8. The binary representations of numbers 1 to 8 are '1', '10', '11', '100', '101', '110', '111' and '1000' respectively.\nTest Case 2: N = 4. The binary representations of numbers 1 to 4 are '1', '10', '11', and '100' respectively."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>A simple and intuitive approach could be to generate all the decimal numbers from 1 to N and convert each of them to their corresponding binary representation.</p>",
            "<p>Instead of converting every decimal number to its binary form, we can use a queue data structure to directly generate the binary numbers. Using a queue we can generate the new binary numbers from the previously generated ones.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}