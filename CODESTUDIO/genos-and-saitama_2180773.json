{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 14484,
            "title": "Genos and Saitama",
            "titleSlug": "genos-and-saitama_2180773",
            "content": "<h4 id=\"there-are-n-towns-in-saitama-s-land-each-town-is-connected-to-other-towns-possibly-none-using-a-road-genos-is-in-town-g-and-saitama-is-in-town-s-genos-wants-to-meet-saitama-as-soon-as-possible-help-genos-reach-saitama-with-the-minimum-number-of-roads-taken\">There are \u2018N\u2019 towns in Saitama\u2019s land. Each town is connected to other towns(possibly none) using a road. Genos is in town \u2018g\u2019 and Saitama is in town \u2018s\u2019. Genos wants to meet Saitama as soon as possible. Help Genos reach Saitama with the minimum number of roads taken.</h4>\n\n<h4 id=\"for-example\">For Example:</h4>\n\n<pre><code>g = 1 and s = 0\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/genos_and_saitama_example-12290.png\"/> </p>\n\n<pre><code>Now in this land, there is a path from 1 to 0 through town 4 which is the minimum path. Hence the answer is 2.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 denoting the number of test cases. Then each test case follows:\n\nThe first line of each test case contains two integers, \u2018V\u2019 and \u2018E\u2019, denoting the number of towns and roads.\n\nThe next \u2018E\u2019 lines of the test case contain two space-separated integers, \u2018a\u2019 and \u2018b\u2019, denoting a road between \u2018a\u2019 and \u2018b\u2019.\n\nThe last line of the test case contains two space-separated integers, \u2018g\u2019 and \u2018s\u2019, denoting Genos\u2019s and Saitama\u2019s town.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print the number of minimum roads taken to get from \u2018g\u2019 to \u2018s\u2019.\n\nOutput for each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You are not required to print anything; it has already been taken care of. Just implement the function and return the answer.\n\nIf there is no way to reach Saitama, return -1.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= V &lt;= 1000\n1 &lt;= E &lt;= (V * (V - 1)) / 2\n0 &lt;= g, s &lt;= V-1\n\nTime Limit: 1sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n4 4\n0 1\n0 3\n1 2\n2 3\n1 3\n6 3\n5 3\n0 1\n3 4\n0 3\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>2\n-1\n</code></pre>\n\n<h5 id=\"explanation-for-sample-output-1\">Explanation For Sample Output 1 :</h5>\n\n<p><img src=\"https://files.codingninjas.in/genos_and_saitama_st1-12291.png\"/> </p>\n\n<pre><code>In the first test case, there are two paths from 1 to 3. I.e. 1 -&gt; 2 -&gt; 3 or 1 -&gt; 0 -&gt; 3. So the distance from 1 to 3 is 2.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/genos_and_saitama_st2-12292.png\"/> </p>\n\n<pre><code>In the second test case, there is no path from 0 to 3. Hence the answer is -1.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n2 1\n0 1\n1 0\n5 4\n0 1\n1 2\n2 3\n3 4\n0 4\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>1\n4\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -9,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a network of towns and roads, find the minimum number of roads Genos needs to travel to reach Saitama. You are given the number of towns (V) and roads (E), along with the connections between towns. You are also given the starting town of Genos (g) and the destination town of Saitama (s). If there's no path from Genos's town to Saitama's town, return -1.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= V <= 1000",
                    "1 <= E <= (V * (V - 1)) / 2",
                    "0 <= g, s <= V-1",
                    "Time Limit: 1sec"
                ],
                "testcases": [
                    {
                        "input": "4 4\n0 1\n0 3\n1 2\n2 3\n1 3",
                        "output": "2",
                        "explanation": "There are two paths from town 1 to town 3: 1 -> 2 -> 3 and 1 -> 0 -> 3. The shortest path has a length of 2."
                    },
                    {
                        "input": "6 3\n5 3\n0 1\n3 4\n0 3",
                        "output": "-1",
                        "explanation": "There is no path from town 0 to town 3."
                    },
                    {
                        "input": "2 1\n0 1\n1 0",
                        "output": "1",
                        "explanation": null
                    },
                    {
                        "input": "5 4\n0 1\n1 2\n2 3\n3 4\n0 4",
                        "output": "4",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>&nbsp;Iterate through the graph using BFS and increment the distance by 1 when moving from one level of nodes to another.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Breadth-first Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}