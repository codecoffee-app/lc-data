{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 15116,
            "title": "Go For Gold",
            "titleSlug": "go-for-gold_2410972",
            "content": "<h4 id=\"ninja-is-on-a-hunt-to-collect-all-the-gold-from-the-city-of-ninjago-and-reach-his-home-as-soon-as-possible\">Ninja is on a hunt to collect all the gold from the city of Ninjago and reach his home as soon as possible.</h4>\n\n<h4 id=\"you-are-given-a-matrix-arr-consisting-of-m-rows-and-n-columns-denoting-houses-in-the-city-of-ninjago\">You are given a matrix \u2018Arr\u2019 consisting of \u2018M\u2019 rows and \u2018N\u2019 columns denoting houses in the city of Ninjago.</h4>\n\n<pre><code>Arr[i][j] = 0 denotes that the house is empty\nArr[i][j] = 1 denotes that the house has exactly one gold bar\nArr[i][j] = 2 denotes that the house is secured by the guards\n</code></pre>\n\n<h4 id=\"ninja-starts-from-the-position-0-0-and-wants-to-reach-the-position-x-y-after-collecting-all-the-gold-from-the-city-he-can-move-to-any-adjacent-house-that-is-not-secured-by-the-guards-but-he-is-not-allowed-to-go-outside-the-city-in-other-words-he-can-move-one-unit-up-down-left-or-right-in-a-single-move-but-he-is-neither-allowed-to-move-to-a-house-that-is-secured-by-guards-nor-can-he-leave-the-matrix\">Ninja starts from the position (0,  0) and wants to reach the position (X, Y) after collecting all the gold from the city, he can move to any adjacent house that is not secured by the guards but he is not allowed to go outside the city. In other words, he can move one unit up, down, left or right in a single move, but he is neither allowed to move to a house that is secured by guards nor can he leave the matrix.</h4>\n\n<h4 id=\"find-the-minimum-number-of-steps-required-to-accomplish-the-task-of-collecting-all-the-tasks-and-reaching-his-final-destination-if-it-is-not-possible-to-complete-the-task-then-return-1\">Find the minimum number of steps required to accomplish the task of collecting all the tasks and reaching his final destination. If it is not possible to complete the task, then return \u2018-1\u2019</h4>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>Ninja may visit a house multiple times, but he will be able to collect the gold bar only once from that house.\n</code></pre>\n\n<h5 id=\"for-example\">For Example :</h5>\n\n<pre><code>If \u2018Arr\u2019 consists of 4 rows and 5 columns and is denoted as:\n0 1 1 2 0\n2 2 1 1 2\n0 0 1 2 0\n0 1 1 0 0\nAnd ninja\u2019s home is located at (2, 1).\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/bipolarrz_nrz-12790.PNG\" alt=\"\"></p>\n\n<pre><code>The minimum number of moves required to complete the task is equal to 9, because:\n(0, 0) -&gt; (0, 1) -&gt; (0, 2) -&gt; (1, 2) -&gt; (1, 3) -&gt; (1, 2) -&gt; (2, 2) -&gt; (3, 2) -&gt; (3, 1) -&gt; (2, 1) is the most optimal route to complete the task.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 denoting the number of test cases, then each test case follows:\n\nThe first line of each test case contains two integers \u2018M\u2019 and \u2018N\u2019 denoting the number of rows and columns.\n\nThe following M rows each contain N integers denoting the status of each house.\n\nThe last line of each test case contains two integers \u2018X\u2019 and \u2018Y\u2019 denoting the x-coordinate and y-coordinate of Ninja\u2019s house (his final destination).\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print a single integer denoting the minimum number of steps required.\n\nOutput for each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You are not required to print anything; it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10      \n1 &lt;= M, N &lt;= 20\nArr[i][j] = {0, 1, 2}\n1 &lt;= Number of houses with gold &lt;= 7\n0 &lt;= X &lt; M ,  0 &lt;= Y &lt; N\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n4 5\n0 1 1 2 0\n2 2 1 1 2\n0 0 1 2 0\n0 1 1 0 0\n2 1\n1 3\n0 0 1\n0 1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>9\n3\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1 :</h5>\n\n<pre><code>For test case 1 : \nWe will return 9, because:\n(0,0) -&gt; (0,1) -&gt; (0,2) -&gt; (1,2) -&gt; (1,3) -&gt; (1,2) -&gt; (2,2) -&gt; (3,2) -&gt; (3,1) -&gt; (2,1) is the most optimal route to complete the task.\n\n\nFor test case 2 : \nWe will return 3, because:\n(0,0) -&gt; (0,1) -&gt; (0,2) -&gt; (0,1) is the most optimal route to complete the task.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n3 3\n0 2 0\n2 0 0\n0 0 0\n1 1\n3 3 \n0 0 0\n0 0 0\n0 0 0\n2 2\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>-1\n4\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 3,
            "dislikes": "NA",
            "rephrased": {
                "body": "A ninja is tasked with collecting all gold bars scattered throughout the city of Ninjago and reaching their home as quickly as possible. The city is represented by a grid 'Arr' of M rows and N columns, where each cell indicates the presence of a gold bar (1), a guard (2), or an empty house (0). The ninja starts at (0, 0) and must reach (X, Y) after collecting all gold. Movement is restricted to adjacent cells (up, down, left, or right), and cells guarded by guards are impassable. The goal is to find the minimum number of steps required to collect all the gold and reach home. If the task is impossible, return -1.  The ninja can visit a house multiple times, but can only collect gold once from a house.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= M, N <= 20",
                    "Arr[i][j] = {0, 1, 2}",
                    "1 <= Number of houses with gold <= 7",
                    "0 <= X < M, 0 <= Y < N"
                ],
                "testcases": [
                    {
                        "input": "n = 4, m = 5, arr = [[0, 1, 1, 2, 0], [2, 2, 1, 1, 2], [0, 0, 1, 2, 0], [0, 1, 1, 0, 0]], x = 2, y = 1",
                        "output": "9",
                        "explanation": "The optimal path is (0,0) -> (0,1) -> (0,2) -> (1,2) -> (1,3) -> (1,2) -> (2,2) -> (3,2) -> (3,1) -> (2,1), requiring 9 steps."
                    },
                    {
                        "input": "n = 1, m = 3, arr = [[0, 0, 1], [0, 1, 0]], x = 0, y = 1",
                        "output": "3",
                        "explanation": "The optimal path is (0,0) -> (0,1) -> (0,2) -> (0,1) requiring 3 steps."
                    },
                    {
                        "input": "n = 3, m = 3, arr = [[0, 2, 0], [2, 0, 0], [0, 0, 0]], x = 1, y = 1",
                        "output": "-1",
                        "explanation": "It is impossible to collect all the gold bars since there are no gold bars."
                    },
                    {
                        "input": "n = 3, m = 3, arr = [[0, 0, 0], [0, 0, 0], [0, 0, 0]], x = 2, y = 2",
                        "output": "4",
                        "explanation": "There is no gold to collect, so the path from (0,0) to (2,2) is simply (0,0)->(0,1)->(0,2)->(1,2)->(2,2)."
                    },
                    {
                        "input": "n = 3, m = 3, arr = [[0, 0, 1], [0, 0, 1], [0, 0, 1]], x = 2, y = 2",
                        "output": "8",
                        "explanation": "The optimal path is (0,0)->(0,1)->(0,2)->(1,2)->(1,1)->(1,0)->(2,0)->(2,1)->(2,2)"
                    },
                    {
                        "input": "n = 1, m = 3, arr = [[0], [1], [0]], x = 0, y = 0",
                        "output": "-1",
                        "explanation": "It is impossible to reach start position once gold is taken."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>All we are concerned with is that we have to collect all the gold, once we have thought of how to tackle this, then we have to think of a way to collect all the gold in the most optimal way. As our intuition is revolving around gold, can we create a bitmask for these houses? How will this help us?&nbsp;</p>",
            "<p>Rather than finding the minimum distance to reach (x, y), we should find the minimum distance to reach (x, y, MASK) where x and y denote the coordinates of the position and MASK is our bitmask denoting the gold houses already visited.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Breadth-first Search",
                "slug": "breadth-first-search"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}