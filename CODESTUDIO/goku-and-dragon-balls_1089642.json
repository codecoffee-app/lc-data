{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9775,
            "title": "Goku and Dragon Balls",
            "titleSlug": "goku-and-dragon-balls_1089642",
            "content": "<h4 id=\"goku-has-n-dragon-balls-each-dragon-ball-is-unique-with-the-ith-dragon-ball-having-i-stars-on-it-for-example-the-first-dragon-ball-has-1-star-the-second-dragon-ball-has-2-stars-and-so-on\">Goku has \u2018N\u2019 Dragon Balls. Each Dragon Ball is unique with the ith Dragon Ball having \u2018i\u2019 stars on it. For example, the first Dragon Ball has 1 star, the second Dragon Ball has 2 stars, and so on.</h4>\n\n<h4 id=\"goku-gave-a-task-to-gohan-to-arrange-the-n-dragon-balls-in-a-binary-tree-like-structure-while-making-the-binary-tree-he-has-to-make-sure-that-these-conditions-must-be-fulfilled\">Goku gave a task to Gohan to arrange the \u2018N\u2019 Dragon Balls in a binary tree-like structure. While making the binary tree, he has to make sure that these conditions must be fulfilled:</h4>\n\n<pre><code>The left subtree of any particular Dragon Ball \u2018D\u2019 will always contain Dragon Balls with the number of stars less than that of the Dragon Ball \u2018D\u2019.\n\nThe right subtree of any particular Dragon Ball \u2018D\u2019 will always contain Dragon Ball&#39;s with the number of stars greater than that of the Dragon Ball \u2018D\u2019.\n</code></pre>\n\n<h4 id=\"can-you-find-out-how-many-structurally-unique-binary-trees-gohan-can-make-by-fulfilling-these-conditions\">Can you find out how many structurally unique binary trees Gohan can make by fulfilling these conditions?</h4>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>The number of structurally unique binary trees can be very large, so return the number of structurally unique binary trees modulo 10^9 + 7.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format</h5>\n\n<pre><code>The first line of input contains an integer &#39;T&#39; which denotes the number of test cases or queries to be run. Then the test cases follow.\n\nThe first and the only line of each test case contains a single integer \u2018N\u2019 denoting the number of Dragon Balls.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>Print the number of structurally unique binary trees satisfying the given conditions Gohan can make.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= N &lt;= 5000\n\nTime Limit: 1 second\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>1\n2\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>2\n</code></pre>\n\n<h4 id=\"explanation-for-sample-output-1\">Explanation For Sample Output 1:</h4>\n\n<pre><code>The number of possible binary trees satisfying the given conditions is two.\n\n                       1           2  \n                        \\         /\n                         2       1\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>1\n3\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>5 \n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 12,
            "dislikes": "NA",
            "rephrased": {
                "body": "Goku has N unique Dragon Balls, each with a number of stars corresponding to its index (i.e., the first Dragon Ball has 1 star, the second has 2 stars, and so on). Gohan needs to arrange these Dragon Balls into a binary tree. The arrangement must adhere to these rules:\n\n- The left subtree of a Dragon Ball D can only contain Dragon Balls with fewer stars than D.\n- The right subtree of a Dragon Ball D can only contain Dragon Balls with more stars than D.\n\nDetermine the number of structurally unique binary trees Gohan can create, following these rules. Return the result modulo 10^9 + 7.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= N <= 5000",
                    "Time Limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "1\n2",
                        "output": "2",
                        "explanation": "For N=2, there are two possible binary trees:\n\n1           2\n \\         /\n  2       1\n"
                    },
                    {
                        "input": "1\n3",
                        "output": "5",
                        "explanation": "For N=3, there are five possible binary trees."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you compute the answer for N = n, if you know the answer for&nbsp; N =&nbsp; n - 1?</p><p>&nbsp;</p><p>Also, think of which Dragon Ball to place at the root first and how it will affect the answer.</p>",
            "<p>Examining the recurrence carefully, we find that there are a lot of repeated calculations. So think about memoization to store these repeated calculations.</p>",
            "<p>Try to optimize approach 2.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Binary Trees",
                "slug": "binary-trees"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}