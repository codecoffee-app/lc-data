{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 7994,
            "title": "Gold mine problem",
            "titleSlug": "gold-mine-problem_799363",
            "content": "<h4 id=\"you-have-been-given-a-gold-mine-represented-by-a-2-d-matrix-of-size-n-m-n-rows-and-m-columns-each-field-cell-in-this-mine-contains-a-positive-integer-the-amount-of-gold-in-kgs\">You have been given a gold mine represented by a 2-d matrix of size (&#39;N&#39; * &#39;M&#39;) &#39;N&#39; rows and &#39;M&#39; columns. Each field/cell in this mine contains a positive integer, the amount of gold in kgs.</h4>\n\n<h4 id=\"initially-the-miner-is-at-the-first-column-but-can-be-at-any-row\">Initially, the miner is at the first column but can be at any row.</h4>\n\n<h4 id=\"he-can-move-only-right-right-up-or-right-down-that-is-from-a-given-cell-and-the-miner-can-move-to-the-cell-diagonally-up-towards-the-right-or-right-or-diagonally-down-towards-the-right\">He can move only right, right up, or right down. That is from a given cell and the miner can move to the cell diagonally up towards the right or right or diagonally down towards the right.</h4>\n\n<h4 id=\"find-out-the-maximum-amount-of-gold-he-can-collect\">Find out the maximum amount of gold he can collect.</h4>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains an integer &#39;T\u2019, which denotes the number of Test cases.\nThe next &#39;2&#39; * &#39;T&#39; lines represent the \u2018T\u2019 test cases.\n\nThe first line of each test case contains two single space-separated integers &#39;N&#39; and &#39;M&#39; denoting the size of the gold mine.\n\nThe second line of each test case contains &#39;N&#39; * &#39;M&#39; space-separated integers representing the gold mine.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case print an integer &#39;X&#39;  denoting the maximum amount of gold collected.\n\nOutput for each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You are not required to print the output, it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 100\n1 &lt;= M &lt;= 100\n0 &lt;= gold at each cell &lt;= 10^5 \n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1</h5>\n\n<pre><code>2  \n4 4\n10 33 13 15 22 21 4 1 5 0 2 3 0 6 14 2\n3 3\n1 3 3 2 1 4 0 6 4\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>83 \n12\n</code></pre>\n\n<h5 id=\"explanation-for-the-sample-output-1\">Explanation For The Sample Output 1:</h5>\n\n<pre><code>Here we have 2 test cases in total.\n\nTest case 1: \n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/goldmine1-5239.png\" alt=\"Test case\"></p>\n\n<pre><code>Here miner starts from row 2 of the first column and collects gold of 22 kgs. Then he tries diagonally up towards the right(33 kgs), straight right(21 kgs), and diagonally down towards the right(00 kgs) and chooses the right upper diagonal cell. \nHence the total gold with miner is 22+33=55 kgs. Going forward, miner chose the straight right path with 13 kgs and 15 kgs. Hence the maximum value of gold collected by the miner is 83 kgs. \nThere is no other path starting from any row of the first column, which gives the miner more gold than 83kgs.\n\nTest case 2: \nThe mine has 3 rows, miner chose the second row, the cell with 2 kgs. Going forward, the miner chose to go diagonally down towards the right (2+6=8 kgs). Further miner goes straight right to the cell with the gold of 4 kgs. Hence the maximum value of gold collected by the miner is (2+6+8) 12 kgs.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n3 3\n1 3 4 8 9 8 7 5 6\n1 1\n2\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>25\n2\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 11,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a gold mine represented as a 2D matrix of size N x M, where each cell contains a positive integer representing the amount of gold in kilograms. A miner starts at any row in the first column and can move only right, diagonally up-right, or diagonally down-right. Determine the maximum amount of gold the miner can collect by traversing the mine.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 100",
                    "1 <= M <= 100",
                    "0 <= gold at each cell <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "mine = [[10, 33, 13, 15], [22, 21, 4, 1], [5, 0, 2, 3], [0, 6, 14, 2]], n = 4, m = 4",
                        "output": "83",
                        "explanation": "The miner starts from row 2 of the first column and collects gold of 22 kgs. Then he tries diagonally up towards the right(33 kgs), straight right(21 kgs), and diagonally down towards the right(00 kgs) and chooses the right upper diagonal cell. Hence the total gold with miner is 22+33=55 kgs. Going forward, miner chose the straight right path with 13 kgs and 15 kgs. Hence the maximum value of gold collected by the miner is 83 kgs. There is no other path starting from any row of the first column, which gives the miner more gold than 83kgs."
                    },
                    {
                        "input": "mine = [[1, 3, 3], [2, 1, 4], [0, 6, 4]], n = 3, m = 3",
                        "output": "12",
                        "explanation": "The mine has 3 rows, miner chose the second row, the cell with 2 kgs. Going forward, the miner chose to go diagonally down towards the right (2+6=8 kgs). Further miner goes straight right to the cell with the gold of 4 kgs. Hence the maximum value of gold collected by the miner is (2+6+8) 12 kgs."
                    },
                    {
                        "input": "mine = [[1, 3, 4], [8, 9, 8], [7, 5, 6]], n = 3, m = 3",
                        "output": "25",
                        "explanation": "Starting from 8 -> 9 -> 8 the sum is 25 and it is the highest possible gold collection"
                    },
                    {
                        "input": "mine = [[2]], n = 1, m = 1",
                        "output": "2",
                        "explanation": "Only one cell exists, so the miner collects the gold in that cell which is 2."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Think of a recursive solution.</p>",
            "<p>Try to optimize the recursive solution using some extra space</p>",
            "<p>Try using dynamic programming.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Matrices (2D Arrays)",
                "slug": "matrices-(2d-arrays)"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}