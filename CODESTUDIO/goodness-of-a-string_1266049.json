{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10821,
            "title": "Goodness of a String",
            "titleSlug": "goodness-of-a-string_1266049",
            "content": "<h4 id=\"you-are-provided-with-a-string-s-which-indicates-the-nested-list-for-example-1-2-3-4-5-6-each-number-present-in-the-list-has-some-depth-the-depth-of-a-particular-number-is-the-number-of-nested-lists-in-which-it-is-present-consider-the-previous-example-in-which-the-number-1-is-at-depth-1-numbers-2-3-and-4-are-at-depth-2-and-numbers-5-and-6-are-at-depth-3\">You are provided with a string \u2018S\u2019 which indicates the nested list. For example: \u201c[1, [2, 3], [4, [5, 6] ] ]\u201d. Each number present in the list has some depth. The depth of a particular number is the number of nested lists in which it is present. Consider the previous example in which the number \u20181\u2019 is at depth 1, numbers \u20182\u2019, \u20183\u2019, and \u20184\u2019 are at depth 2, and numbers \u20185\u2019 and \u20186\u2019 are at depth 3.</h4>\n\n<h4 id=\"you-have-to-find-the-goodness-of-the-given-string-nested-list-the-goodness-of-a-string-is-the-sum-of-the-product-of-depths-and-elements-present-in-the-string\">You have to find the goodness of the given string/nested list. The goodness of a string is the sum of the product of depths and elements present in the string.</h4>\n\n<h4 id=\"for-example\">For Example:</h4>\n\n<pre><code>S = \u201c[1, [2, 3], [4, [5, 6] ] ]\u201d\nTotal depth  = 1*1 + 2*2 + 3*2 + 4*2 + 5*3 + 6*3 = 52\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>1. The given string may be empty. \n2. The string will not contain any white spaces. \n3. You have to take the modulo with 10 ^ 9 + 7 as the answer may be very large.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 representing the number of test cases. \n\nThe first line of each test case will contain a string \u2018S\u2019 which denotes the given nested list.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print a single line containing a single integer denoting the goodness of the given string.\n\nThe output for every test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You don\u2019t need to print anything; It has already been taken care of. Just implement the given function. \n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= |S| &lt;= 100000\n1 &lt;= ES[ i ] &lt;= 10^5\n\nWhere \u201c|S|\u201d is the length of the given string,  \u201cES[ i ]\u201d is the element/number stored in the string at the \u201ci-th\u201d position.\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n[1,[2,3],[4,[5,6]]]\n[[],[]]\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>52\n0\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of sample input 1:</h5>\n\n<pre><code>For the first test case, the explanation is given in the description.\n\nIn the second test case, the given string hasn\u2019t contained any element/number therefore the goodness is equal to 0.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>3\n[[[[[1,2,3,4,5]]]]]\n[10,20,30,40]\n[]\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>75\n100\n0\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation for sample input 2:</h5>\n\n<pre><code>In the first test case, all the numbers are at depth 5 and so the goodness is 1*5 + 2*5 + 3*5 + 4*5 + 5*5 = 75.\n\nIn the second test case, all the numbers are at depth 1 and so the goodness is 100.\n\nIn the third test case, there is no number present in the string.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 2,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string representing a nested list, calculate its goodness. The goodness is defined as the sum of the product of each number in the list and its depth. The depth of a number is the number of nested lists it is contained within.\n\nFor example, in the string \"[1, [2, 3], [4, [5, 6] ] ]\", the number 1 has depth 1, numbers 2, 3, and 4 have depth 2, and numbers 5 and 6 have depth 3. The goodness would be calculated as (1 * 1) + (2 * 2) + (3 * 2) + (4 * 2) + (5 * 3) + (6 * 3) = 52.",
                "constraints": [
                    "1 <= T <= 100 (Number of test cases)",
                    "1 <= |S| <= 100000 (Length of the string S)",
                    "1 <= ES[i] <= 10^5 (Value of each element in the string S)",
                    "The given string may be empty.",
                    "The string will not contain any white spaces.",
                    "The answer must be modulo 10^9 + 7."
                ],
                "testcases": [
                    {
                        "input": "[1,[2,3],[4,[5,6]]]",
                        "output": "52",
                        "explanation": "The goodness is calculated as (1*1) + (2*2) + (3*2) + (4*2) + (5*3) + (6*3) = 52"
                    },
                    {
                        "input": "[[],[]]",
                        "output": "0",
                        "explanation": "The string contains no numbers, therefore the goodness is 0."
                    },
                    {
                        "input": "[[[[[1,2,3,4,5]]]]]",
                        "output": "75",
                        "explanation": "All numbers are at depth 5. Goodness = 1*5 + 2*5 + 3*5 + 4*5 + 5*5 = 75"
                    },
                    {
                        "input": "[10,20,30,40]",
                        "output": "100",
                        "explanation": "All numbers are at depth 1. Goodness = 10*1 + 20*1 + 30*1 + 40*1 = 100"
                    },
                    {
                        "input": "[]",
                        "output": "0",
                        "explanation": "The string contains no numbers, therefore the goodness is 0."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>While traversing the string maintain the current depth of the number and then keep track of the result.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}