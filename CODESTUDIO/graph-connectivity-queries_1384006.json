{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 11697,
            "title": "Graph Connectivity Queries. ",
            "titleSlug": "graph-connectivity-queries_1384006",
            "content": "<h4 id=\"you-have-been-given-a-graph-consisting-of-n-nodes-and-a-threshold-value-thresholdvalue-two-different-nodes-x-and-y-are-directly-connected-to-each-other-if-and-only-if-there-exists-a-z-such-that-all-of-the-following-are-true\">You have been given a graph consisting of \u2018N\u2019 nodes and a threshold value \u2018THRESHOLDVALUE\u2019. Two different nodes \u2018X\u2019 and \u2018Y\u2019 are directly connected to each other if and only if there exists a \u2018Z\u2019 such that all of the following are true:-</h4>\n\n<pre><code>\u2018X\u2019 % \u2018Z\u2019 == 0 \n\u2018Y\u2019 % \u2018Z\u2019 == 0\n\u2018Z\u2019 &gt;= \u2018THRESHOLDVALUE\u2019\n</code></pre>\n\n<h4 id=\"you-are-given-q-queries-where-each-query-consists-of-two-distinct-nodes-u-and-v-you-must-determine-if-u-and-v-are-connected-directly-or-indirectly-return-a-vector-list-of-size-q-where-i-th-element-is-1-if-nodes-in-ith-query-are-connected-directly-or-indirectly-otherwise-it-is-0\">You are given \u2018Q\u2019 queries where each query consists of two distinct nodes \u2018U\u2019 and \u2018V\u2019, you must determine if \u2018U\u2019 and \u2018V\u2019 are connected directly or indirectly. Return a vector/list of size \u2018Q\u2019 where \u2018i-th\u2019 element is \u20181\u2019 if nodes in ith query are connected directly or indirectly otherwise it is \u20180\u2019.</h4>\n\n<h5 id=\"example\">Example:</h5>\n\n<pre><code>Let\u2019s say \u2018N\u2019 is 6 and &#39;M&#39; is \u20182\u2019. Then our graph will look as follows:-\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/graph1-8709.png\" alt=\"subsequence\"></p>\n\n<pre><code>There is an edge between \u20182\u2019 and \u20184\u2019, \u20184\u2019 and \u20186\u2019 and \u20182\u2019 and \u20186\u2019 because their gcd is 2 which is equal to \u2018m\u2019. There is an edge between \u20183\u2019 and \u20186\u2019 because their gcd is 3 which is greater than \u2018m\u2019. If the query consists of vertices \u20182\u2019 and \u20183\u2019 answer will be \u20181\u2019 because they are indirectly connected.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains a single integer \u2018t\u2019 representing the number of test cases.\n\nThe first line of each test case contains two space-separated integers \u2018n\u2019 and \u2018THRESHOLDVALUE\u2019 representing the number of nodes and the threshold value.\n\nThe second line contains a single integer \u2018q\u2019 representing the number of queries.\n\nEach of the next \u2018q\u2019 lines contains two space-separated integers representing the vertices for which you need to find if they are connected directly or indirectly.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print a single line containing space-separated integers denoting answers to all the queries. \n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 100\n1 &lt;= THRESHOLDVALUE &lt;= 100\n1 &lt;= Q &lt;= 10000\n1 &lt;= U[i] &lt;= N\n1 &lt;= V[i] &lt;= N\n\nWhere \u2018T\u2019 is the number of test cases.\u2018N\u2019 is the number of nodes in the graph. \u2018THRESHOLDVALUE\u2019 is the threshold value. \u2018Q\u2019 is the number of queries. \u2018U[i]\u2019 and \u2018V[i]\u2019 are vertices of the i-th query.\n\nTime Limit: 1 sec.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n6 2\n3\n1 2\n2 3\n3 4\n6 3\n2\n2 3\n3 6\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>0 1 1\n0 1\n</code></pre>\n\n<h4 id=\"sample-output-1-explanation\">Sample Output 1 Explanation:</h4>\n\n<pre><code>Test case 1:\n\nThe graph looks as follows:-\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/graph1-8709.png\" alt=\"subsequence\"></p>\n\n<pre><code>Nodes 1 and 2 are not connected directly or indirectly. Therefore answer to this query is 0. Nodes 2 and 3 are connected indirectly. Therefore answer to this query is 1. Nodes 3 and 4 are connected indirectly. Therefore answer to this query is 1.\n\nTherefore the answer is [0,1,1].\n\nTest case 2:\n\nThe graph looks as follows:-\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/graph2-8710.png\" alt=\"subsequence\"></p>\n\n<pre><code>Nodes 2 and 3 are not connected directly or indirectly. Therefore answer to this query is 0. Nodes 3 and 6 are connected directly. Therefore answer to this query is 1.\n\nTherefore the answer is [0,1].\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n4 1\n3\n1 2\n2 3\n3 4\n4 4\n2\n1 2\n2 3\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>1 1 1\n0 0\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -4,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a graph with 'N' nodes and a threshold value 'THRESHOLDVALUE', two distinct nodes 'X' and 'Y' are connected if there exists a 'Z' such that 'X' % 'Z' == 0, 'Y' % 'Z' == 0, and 'Z' >= 'THRESHOLDVALUE'. You are given 'Q' queries, each consisting of two distinct nodes 'U' and 'V'. Determine if 'U' and 'V' are connected directly or indirectly. Return a list of size 'Q' where the i-th element is '1' if the nodes in the i-th query are connected (directly or indirectly), and '0' otherwise.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 100",
                    "1 <= THRESHOLDVALUE <= 100",
                    "1 <= Q <= 10000",
                    "1 <= U[i] <= N",
                    "1 <= V[i] <= N",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "6 2\n3\n1 2\n2 3\n3 4",
                        "output": "0 1 1",
                        "explanation": "With N=6 and THRESHOLDVALUE=2, the graph has edges between (2,4), (4,6), and (2,6), and (3,6). Query 1 asks if 1 and 2 are connected, which they are not. Query 2 asks if 2 and 3 are connected; they are connected through 6. Query 3 asks if 3 and 4 are connected; they are connected through 6 and 2 respectively."
                    },
                    {
                        "input": "6 3\n2\n2 3\n3 6",
                        "output": "0 1",
                        "explanation": "With N=6 and THRESHOLDVALUE=3, there is only one edge which is (3,6). Nodes 2 and 3 are not connected. Nodes 3 and 6 are directly connected."
                    },
                    {
                        "input": "4 1\n3\n1 2\n2 3\n3 4",
                        "output": "1 1 1",
                        "explanation": "With N=4 and THRESHOLDVALUE=1, every pair of nodes is connected through the condition X % Z == 0, Y % Z == 0 and Z >= 1 so (1,2,3,4) are all connected to each other"
                    },
                    {
                        "input": "4 4\n2\n1 2\n2 3",
                        "output": "0 0",
                        "explanation": "With N=4 and THRESHOLDVALUE=4, there is no such z that X%Z=0,Y%Z=0 and Z >=4 so there are no connections present between the nodes."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Iterate over all possible pairs of vertices.&nbsp;</p>",
            "<p>Iterate over all possible pairs of vertices and use Disjoint Set Union.&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Number Theory",
                "slug": "number-theory"
            },
            {
                "name": "Breadth-first Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}