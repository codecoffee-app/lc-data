{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10192,
            "title": "Group all 1\u2019s together",
            "titleSlug": "group-all-1-s-together_1171155",
            "content": "<h4 id=\"you-are-given-an-array-list-arr-of-size-n-arr-is-binary-i-e-it-contains-only-0s-and-1s-arr-i-0-1-your-task-is-to-find-out-the-minimum-number-of-swaps-required-to-group-all-1s-together\">You are given an array/list \u2018ARR\u2019 of size \u2018N\u2019. \u2018ARR&#39; is binary i.e. it contains only 0s and 1s (ARR[i] = {0, 1}). Your task is to find out the minimum number of swaps required to group all 1s together.</h4>\n\n<h4 id=\"note-if-arr-contains-only-0-s-then-print-1\">Note: If \u2018ARR\u2019 contains only 0\u2019s then print -1.</h4>\n\n<h4 id=\"example\">Example:</h4>\n\n<pre><code>Let \u2018ARR\u2019 = [ 0, 1, 0, 1]. We can group all 1s together in the following ways: \u2018ARR\u2019 =[0, 0, 1, 1] or \u2018ARR\u2019 = [0, 1, 1, 0]. \n\nIn this example, we need only 1 swap to group all 1\u2019s together which is the minimum possible. \n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 which denotes the number of test cases. \n\nThe first line of each test case contains a single integer \u2018N\u2019 representing the number of elements in the array/list \u2018ARR\u2019.\n\nThe next line of each test case contains \u2018N\u2019 single space-separated integers (0s and 1s) denoting the elements of  \u2018ARR\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, return the minimum number of swaps required to group all 1\u2019s together.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You don&#39;t need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= \u2018T\u2019 &lt;= 100\n2 &lt;= \u2018N\u2019 &lt;= 5000\n0 &lt;= \u2018ARR[i]\u2019 &lt;= 1\n\nWhere \u2018ARR[i]\u2019 represents the elements of array/list \u2018ARR\u2019. \n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n5\n1 0 1 0 1\n6\n1 1 1 1 1 1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>1\n0\n</code></pre>\n\n<h4 id=\"explanation-for-sample-output-1\">Explanation for Sample Output 1:</h4>\n\n<pre><code>In test case 1, swap \u2018ARR[1]\u2019 and \u2018ARR[4]\u2019 (0-based indexing). Then \u2018ARR\u2019 = [1, 1, 1, 0, 0]. So, the minimum swaps to group all 1s together is 1.\n\nIn test case 2, all 1s are already together in &#39;ARR&#39;. So, we don\u2019t need any swaps. Hence, the minimum swaps to group all 1s together is 0.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n4 \n0 0 0 0\n6\n1 1 0 0 1 1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>-1\n 2\n</code></pre>\n\n<h4 id=\"explanation-for-sample-output-2\">Explanation for Sample Output 2:</h4>\n\n<pre><code>In test case 1, the number of 1s in &#39;ARR&#39; is 0. So we return -1.\n\nIn test case 2, first, we swap \u2018ARR[2]\u2019 and \u2018ARR[4]\u2019 (0-based indexing). Now, \u2018ARR\u2019 = [1, 1, 1, 0, 0, 1].\nThen, swap \u2018ARR[3]\u2019 and \u2018ARR[5]\u2019. Now, \u2018ARR\u2019 = [1, 1, 1, 1, 0, 0]. So, the minimum swaps to group all 1s together is 2.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 4,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a binary array (containing only 0s and 1s) of size N, determine the minimum number of swaps required to group all the 1s together in a contiguous block. If the array contains only 0s, return -1.",
                "constraints": [
                    "1 <= T <= 100 (Number of test cases)",
                    "2 <= N <= 5000 (Size of the array)",
                    "0 <= ARR[i] <= 1 (Elements of the array are either 0 or 1)",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "5\n1 0 1 0 1",
                        "output": "1",
                        "explanation": "Swapping the element at index 1 (0-based indexing) with the element at index 4 results in the array [1, 1, 1, 0, 0]. This requires only one swap, which is the minimum possible to group all 1s together."
                    },
                    {
                        "input": "6\n1 1 1 1 1 1",
                        "output": "0",
                        "explanation": "All 1s are already grouped together in the given array. Therefore, no swaps are required."
                    },
                    {
                        "input": "4\n0 0 0 0",
                        "output": "-1",
                        "explanation": "The array contains only 0s, so the result is -1."
                    },
                    {
                        "input": "6\n1 1 0 0 1 1",
                        "output": "2",
                        "explanation": "One possible solution is to swap ARR[2] and ARR[4] to get [1, 1, 1, 0, 0, 1], and then swap ARR[3] and ARR[5] to get [1, 1, 1, 1, 0, 0]. This requires two swaps."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Count the number of 1s and 0s, using brute force.</p>",
            "<p>Traverse the traverse array through the window of the required size.&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}