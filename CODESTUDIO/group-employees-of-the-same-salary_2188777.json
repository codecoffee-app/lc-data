{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 14529,
            "title": "Group Employees of the Same Salary",
            "titleSlug": "group-employees-of-the-same-salary_2188777",
            "content": "<pre><code>Table: Employees\n\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| employee_id | int     |\n| name        | varchar |\n| salary      | int     |\n+-------------+---------+\nemployee_id is the primary key for this table.\nEach row of this table indicates the employee ID, employee name, and salary.\n\n\nA company wants to divide the employees into teams such that all the members on each team have the same salary. The teams should follow these criteria:\n\nEach team should consist of at least two employees.\nAll the employees on a team should have the same salary.\nAll the employees of the same salary should be assigned to the same team.\nIf the salary of an employee is unique, we do not assign this employee to any team.\nA team&#39;s ID is assigned based on the rank of the team&#39;s salary relative to the other teams&#39; salaries, where the team with the lowest salary has team_id = 1. Note that the salaries for employees not on a team are not included in this ranking.\nWrite an SQL query to get the team_id of each employee that is in a team.\n\nReturn the result table ordered by team_id in ascending order. In case of a tie, order it by employee_id in ascending order.\n\nThe query result format is in the following example:\n\n\n\nEmployees table:\n+-------------+---------+--------+\n| employee_id | name    | salary |\n+-------------+---------+--------+\n| 2           | Meir    | 3000   |\n| 3           | Michael | 3000   |\n| 7           | Addilyn | 7400   |\n| 8           | Juan    | 6100   |\n| 9           | Kannon  | 7400   |\n+-------------+---------+--------+\n\nResult table:\n+-------------+---------+--------+---------+\n| employee_id | name    | salary | team_id |\n+-------------+---------+--------+---------+\n| 2           | Meir    | 3000   | 1       |\n| 3           | Michael | 3000   | 1       |\n| 7           | Addilyn | 7400   | 2       |\n| 9           | Kannon  | 7400   | 2       |\n+-------------+---------+--------+---------+\n\nMeir (employee_id=2) and Michael (employee_id=3) are in the same team because they have the same salary of 3000.\nAddilyn (employee_id=7) and Kannon (employee_id=9) are in the same team because they have the same salary of 7400.\nJuan (employee_id=8) is not included in any team because their salary of 6100 is unique (i.e. no other employee has the same salary).\nThe team IDs are assigned as follows (based on salary ranking, lowest first):\n- team_id=1: Meir and Michael, salary of 3000\n- team_id=2: Addilyn and Kannon, salary of 7400\nJuan&#39;s salary of 6100 is not included in the ranking because they are not on a team.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 7,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an `Employees` table containing employee IDs, names, and salaries, the task is to form teams based on salary. A team must consist of at least two employees with the same salary. Employees with unique salaries should not be assigned to any team. Assign a `team_id` to each team based on the rank of the team's salary relative to other team salaries (lowest salary gets `team_id = 1`).  Write an SQL query to return the `employee_id`, `name`, `salary`, and `team_id` for each employee that belongs to a team, ordered first by `team_id` and then by `employee_id`, both in ascending order.",
                "constraints": [
                    "employee_id is the primary key.",
                    "Each team must have at least two employees.",
                    "All employees in the same salary group must be assigned to the same team."
                ],
                "testcases": [
                    {
                        "input": "employees=[(2, 'Meir', 3000), (3, 'Michael', 3000), (7, 'Addilyn', 7400), (8, 'Juan', 6100), (9, 'Kannon', 7400)]",
                        "output": "+-------------+---------+--------+---------+\n| employee_id | name    | salary | team_id |\n+-------------+---------+--------+---------+\n| 2           | Meir    | 3000   | 1       |\n| 3           | Michael | 3000   | 1       |\n| 7           | Addilyn | 7400   | 2       |\n| 9           | Kannon  | 7400   | 2       |\n+-------------+---------+--------+---------+",
                        "explanation": "Employees Meir (ID 2) and Michael (ID 3) form a team with salary 3000 (team_id 1). Addilyn (ID 7) and Kannon (ID 9) form a team with salary 7400 (team_id 2). Juan (ID 8) is not assigned to any team because his salary is unique."
                    },
                    {
                        "input": "employees=[(1, 'A', 100), (2, 'B', 200), (3, 'C', 100), (4, 'D', 200), (5, 'E', 300)]",
                        "output": "+-------------+---------+--------+---------+\n| employee_id | name    | salary | team_id |\n+-------------+---------+--------+---------+\n| 1           | A       | 100    | 1       |\n| 3           | C       | 100    | 1       |\n| 2           | B       | 200    | 2       |\n| 4           | D       | 200    | 2       |\n+-------------+---------+--------+---------+",
                        "explanation": "Employees A (ID 1) and C (ID 3) form a team with salary 100 (team_id 1). Employees B (ID 2) and D (ID 4) form a team with salary 200 (team_id 2). E (ID 5) is not on any team."
                    },
                    {
                        "input": "employees=[(1, 'A', 5000), (2, 'B', 5000), (3, 'C', 5000)]",
                        "output": "+-------------+---------+--------+---------+\n| employee_id | name    | salary | team_id |\n+-------------+---------+--------+---------+\n| 1           | A       | 5000   | 1       |\n| 2           | B       | 5000   | 1       |\n| 3           | C       | 5000   | 1       |\n+-------------+---------+--------+---------+",
                        "explanation": "All three employees have the same salary and form a single team, given the team id of 1 since there is only 1 team"
                    },
                    {
                        "input": "employees=[(1, 'A', 1000)]",
                        "output": "Empty result set",
                        "explanation": "There are no teams because employee 1 has a unique salary"
                    },
                    {
                        "input": "employees=[(1, 'A', 100), (2, 'B', 100)]",
                        "output": "+-------------+---------+--------+---------+\n| employee_id | name    | salary | team_id |\n+-------------+---------+--------+---------+\n| 1           | A       | 100    | 1       |\n| 2           | B       | 100    | 1       |\n+-------------+---------+--------+---------+",
                        "explanation": "Both employees have the same salary, so they form a team with team_id 1."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "SQL",
                "slug": "sql"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}