{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 14529,
            "title": "Group Employees of the Same Salary",
            "titleSlug": "group-employees-of-the-same-salary_2188777",
            "content": "<pre><code>Table: Employees\n\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| employee_id | int     |\n| name        | varchar |\n| salary      | int     |\n+-------------+---------+\nemployee_id is the primary key for this table.\nEach row of this table indicates the employee ID, employee name, and salary.\n\n\nA company wants to divide the employees into teams such that all the members on each team have the same salary. The teams should follow these criteria:\n\nEach team should consist of at least two employees.\nAll the employees on a team should have the same salary.\nAll the employees of the same salary should be assigned to the same team.\nIf the salary of an employee is unique, we do not assign this employee to any team.\nA team&#39;s ID is assigned based on the rank of the team&#39;s salary relative to the other teams&#39; salaries, where the team with the lowest salary has team_id = 1. Note that the salaries for employees not on a team are not included in this ranking.\nWrite an SQL query to get the team_id of each employee that is in a team.\n\nReturn the result table ordered by team_id in ascending order. In case of a tie, order it by employee_id in ascending order.\n\nThe query result format is in the following example:\n\n\n\nEmployees table:\n+-------------+---------+--------+\n| employee_id | name    | salary |\n+-------------+---------+--------+\n| 2           | Meir    | 3000   |\n| 3           | Michael | 3000   |\n| 7           | Addilyn | 7400   |\n| 8           | Juan    | 6100   |\n| 9           | Kannon  | 7400   |\n+-------------+---------+--------+\n\nResult table:\n+-------------+---------+--------+---------+\n| employee_id | name    | salary | team_id |\n+-------------+---------+--------+---------+\n| 2           | Meir    | 3000   | 1       |\n| 3           | Michael | 3000   | 1       |\n| 7           | Addilyn | 7400   | 2       |\n| 9           | Kannon  | 7400   | 2       |\n+-------------+---------+--------+---------+\n\nMeir (employee_id=2) and Michael (employee_id=3) are in the same team because they have the same salary of 3000.\nAddilyn (employee_id=7) and Kannon (employee_id=9) are in the same team because they have the same salary of 7400.\nJuan (employee_id=8) is not included in any team because their salary of 6100 is unique (i.e. no other employee has the same salary).\nThe team IDs are assigned as follows (based on salary ranking, lowest first):\n- team_id=1: Meir and Michael, salary of 3000\n- team_id=2: Addilyn and Kannon, salary of 7400\nJuan&#39;s salary of 6100 is not included in the ranking because they are not on a team.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -7,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an `Employees` table with columns `employee_id` (INT, primary key), `name` (VARCHAR), and `salary` (INT), the goal is to divide employees into teams based on their salaries.  Each team must consist of at least two employees, and all members of a team must have the same salary. Furthermore, all employees sharing the same salary must be assigned to the same team. Employees with unique salaries are not assigned to any team.\n\nA team's ID is determined by the rank of the team's salary among all team salaries, with the lowest salary team receiving team_id = 1. Salaries of employees not on a team are not considered for ranking.\n\nWrite an SQL query to determine the `team_id` for each employee that is part of a team.\n\nReturn the result table ordered primarily by `team_id` in ascending order and secondarily by `employee_id` in ascending order within each `team_id` group.",
                "constraints": [],
                "testcases": [
                    {
                        "input": "Employees table:\n+-------------+---------+--------+\n| employee_id | name    | salary |\n+-------------+---------+--------+\n| 2           | Meir    | 3000   |\n| 3           | Michael | 3000   |\n| 7           | Addilyn | 7400   |\n| 8           | Juan    | 6100   |\n| 9           | Kannon  | 7400   |\n+-------------+---------+--------+",
                        "output": "Result table:\n+-------------+---------+--------+---------+\n| employee_id | name    | salary | team_id |\n+-------------+---------+--------+---------+\n| 2           | Meir    | 3000   | 1       |\n| 3           | Michael | 3000   | 1       |\n| 7           | Addilyn | 7400   | 2       |\n| 9           | Kannon  | 7400   | 2       |\n+-------------+---------+--------+---------+",
                        "explanation": "Meir (employee_id=2) and Michael (employee_id=3) are in the same team because they share the same salary of 3000.\nAddilyn (employee_id=7) and Kannon (employee_id=9) are in the same team because they share the same salary of 7400.\nJuan (employee_id=8) is not assigned to a team because their salary of 6100 is unique.\nThe team IDs are assigned based on salary ranking:\n- team_id=1: Meir and Michael, salary of 3000\n- team_id=2: Addilyn and Kannon, salary of 7400\nJuan's salary is not considered in the ranking because they are not on a team."
                    },
                    {
                        "input": null,
                        "output": null,
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "SQL",
                "slug": "sql"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}