{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 14692,
            "title": "Happy Residents",
            "titleSlug": "happy-residents_2221658",
            "content": "<h4 id=\"ninja-town-has-n-houses-along-a-street-the-houses-are-either-painted-red-or-blue-the-house-colours-are-given-in-an-integer-array-color-where-0-denotes-the-ith-house-is-painted-red-and-1-denotes-the-ith-house-is-painted-blue-the-residents-of-a-house-will-be-happy-if-their-house-colour-is-different-from-both-its-neighbours-if-they-exist-hence-the-mayor-decided-to-repaint-some-of-the-houses-but-due-to-financial-reasons-he-wants-to-paint-a-minimum-number-of-houses-can-you-calculate-the-minimum-number-of-houses-that-he-needs-to-repaint\">Ninja town has \u2018N\u2019 houses along a street. The houses are either painted red or blue. The house colours are given in an integer array \u2018color\u2019, where 0 denotes the ith house is painted red, and 1 denotes the ith house is painted blue. The residents of a house will be happy if their house colour is different from both its neighbours if they exist. Hence, the Mayor decided to repaint some of the houses. But due to financial reasons, he wants to paint a minimum number of houses. Can you calculate the minimum number of houses that he needs to repaint?</h4>\n\n<h4 id=\"example-suppose-there-are-3-houses-and-the-colours-1-1-1-which-means-all-the-houses-are-coloured-blue-if-the-mayor-repaints-the-second-house-to-red-we-will-have-the-colours-as-1-0-1-we-can-see-that-all-the-neighbours-will-be-happy-hence-the-minimum-number-of-houses-to-be-repainted-is-1\">Example: Suppose there are 3 houses and the colours [1, 1, 1], which means all the houses are coloured blue. If the Mayor repaints the second house to red, we will have the colours as [1, 0, 1]. We can see that all the neighbours will be happy. Hence, the minimum number of houses to be repainted is 1.</h4>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains \u2018T\u2019, denoting the number of test cases.\n\nThe first line of each test case contains two integers, \u2018N\u2019 denoting the number of houses.\n\nThe second line of each test case contains an array \u2018color\u2019 containing \u2018N\u2019 space-separated integers.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print a single integer, denoting the minimum number of houses that need to be repainted.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You are not required to print the expected output. It has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 10^5\n0 &lt;= color[i] &lt;= 1\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n4 \n1 0 0 1\n2\n1 0\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>2\n0\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1:</h5>\n\n<pre><code>In the first test case, the colours are [1, 0, 0, 1]. If we change the colours of the third and fourth houses, the colours will then be [1, 0, 1, 0]. Hence, the minimum number of houses to be repainted is 2.\nIn the second test case, we can see that all the residents are already happy. Hence, we do not need to repaint any house.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n2 \n1 1\n5\n1 1 1 1 1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>1\n2\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 4,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array 'color' representing the colors of 'N' houses along a street (0 for red, 1 for blue), determine the minimum number of houses that need to be repainted such that each house, if it has neighbors, has a different color than both its neighbors. Residents are considered happy if their house color differs from their immediate neighbors.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10^5",
                    "0 <= color[i] <= 1"
                ],
                "testcases": [
                    {
                        "input": "n = 4, color = [1, 0, 0, 1]",
                        "output": "2",
                        "explanation": "The colors are [1, 0, 0, 1]. Repainting the third and fourth houses results in [1, 0, 1, 0], requiring 2 repaints."
                    },
                    {
                        "input": "n = 2, color = [1, 0]",
                        "output": "0",
                        "explanation": "The colors are [1, 0].  No houses need to be repainted as each house satisfies the happiness condition."
                    },
                    {
                        "input": "n = 2, color = [1, 1]",
                        "output": "1",
                        "explanation": "The colors are [1, 1]. Repainting either house results in [1, 0] or [0, 1], requiring 1 repaint."
                    },
                    {
                        "input": "n = 5, color = [1, 1, 1, 1, 1]",
                        "output": "2",
                        "explanation": "The colors are [1, 1, 1, 1, 1]. Repainting the second and fourth houses results in [1, 0, 1, 0, 1], requiring 2 repaints."
                    },
                    {
                        "input": "n = 1, color = [1]",
                        "output": "0",
                        "explanation": "There is only one house, so there are no neighbors and the resident is already happy.  Therefore, no repainting is necessary."
                    },
                    {
                        "input": "n = 6, color = [0, 0, 1, 1, 0, 0]",
                        "output": "2",
                        "explanation": "The colors are [0, 0, 1, 1, 0, 0]. One optimal solution is to paint indices 1 and 4, resulting in [0,1,1,0,1,0]"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can we find a pattern of how the final colours will look like?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}