{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10636,
            "title": "Heap Sort",
            "titleSlug": "heap-sort_1262153",
            "content": "<h4 id=\"you-are-given-an-array-arr-consisting-of-n-integers-and-your-task-is-to-sort-the-given-array-in-non-decreasing-order-using-the-heap-sort-algorithm\">You are given an array \u2018ARR\u2019 consisting of &#39;N&#39; integers, and your task is to sort the given array in non-decreasing order using the Heap sort algorithm.</h4>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of the input contains an integer &#39;T&#39; denoting the number of test cases. \n\nThe first line of each test case contains a single integer &#39;N&#39;, as described in the problem statement.\n\nThe second line of each test case contains &#39;N&#39; space-separated integers, representing the elements of the array.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case print &#39;N&#39; space-separated integers arranged in non-decreasing order.\n\nThe output of every test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 10^5\n-10^9 &lt;= ARR[i] &lt;= 10^9\n\nWhere \u2018T\u2019 denotes the number of test cases and \u2018N\u2019 denotes the size of \u2018ARR\u2019.\n\nTime Limit: 1sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1\n4 \n10 7 8 11\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>7 8 10 11\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1:</h5>\n\n<pre><code>For the first test case, the array [10,7,8,11] will be converted into [7,8,10,11] after arranging into non-decreasing order.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\n5\n5 -2 3 -1 8\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>-2 -1 3 5 8\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-2\">Explanation Of Sample Input 2:</h5>\n\n<pre><code>For the first test case, the array [5,-2,3,-1,8] will be converted into [-2,-1,3,5,8] after arranging into non-decreasing order. \n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 13,
            "dislikes": "NA",
            "rephrased": {
                "body": "Implement the heap sort algorithm to sort an array of integers in non-decreasing order. You are given an array `arr` of size `n`.  Return the sorted array.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10^5",
                    "-10^9 <= ARR[i] <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "n = 4, arr = [10, 7, 8, 11]",
                        "output": "[7, 8, 10, 11]",
                        "explanation": "The array [10, 7, 8, 11] is sorted to [7, 8, 10, 11] using heap sort."
                    },
                    {
                        "input": "n = 5, arr = [5, -2, 3, -1, 8]",
                        "output": "[-2, -1, 3, 5, 8]",
                        "explanation": "The array [5, -2, 3, -1, 8] is sorted to [-2, -1, 3, 5, 8] using heap sort."
                    },
                    {
                        "input": "n = 1, arr = [5]",
                        "output": "[5]",
                        "explanation": "A single-element array is already sorted."
                    },
                    {
                        "input": "n = 6, arr = [5, 4, 3, 2, 1, 0]",
                        "output": "[0, 1, 2, 3, 4, 5]",
                        "explanation": "Demonstrates sorting a reverse-sorted array."
                    },
                    {
                        "input": "n = 7, arr = [1, 2, 3, 4, 5, 6, 7]",
                        "output": "[1, 2, 3, 4, 5, 6, 7]",
                        "explanation": "Demonstrates sorting an already-sorted array."
                    },
                    {
                        "input": "n = 8, arr = [5, 2, 8, 1, 9, 4, 7, 6]",
                        "output": "[1, 2, 4, 5, 6, 7, 8, 9]",
                        "explanation": "Demonstrates sorting a randomly-ordered array with positive numbers."
                    },
                    {
                        "input": "n = 6, arr = [-5, -2, -8, -1, -9, -4]",
                        "output": "[-9, -8, -5, -4, -2, -1]",
                        "explanation": "Demonstrates sorting a randomly-ordered array with negative numbers."
                    },
                    {
                        "input": "n = 6, arr = [0, 0, 0, 0, 0, 0]",
                        "output": "[0, 0, 0, 0, 0, 0]",
                        "explanation": "Demonstrates sorting an array with duplicate values."
                    },
                    {
                        "input": "n = 3, arr = [-1, 0, 1]",
                        "output": "[-1, 0, 1]",
                        "explanation": "Demonstrates sorting a small array with negative, zero, and positive values."
                    },
                    {
                        "input": "n = 3, arr = [1, 0, -1]",
                        "output": "[-1, 0, 1]",
                        "explanation": "Demonstrates sorting a small array with negative, zero, and positive values that are not already sorted."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to implement the entire heap sort algorithm.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}