{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 14406,
            "title": " Highest Grade For Each Student",
            "titleSlug": "highest-grade-for-each-student_2122055",
            "content": "<pre><code>Table: Enrollments\n\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| student_id    | int     |\n| course_id     | int     |\n| grade         | int     |\n+---------------+---------+\n(student_id, course_id) is the primary key of this table.\n\nWrite a SQL query to find the highest grade with its corresponding course for each student. In case of a tie, you should find the course with the smallest course_id. The output must be sorted by increasing student_id.\n\nThe query result format is in the following example:\n\nEnrollments table:\n+------------+-------------------+\n| student_id | course_id | grade |\n+------------+-----------+-------+\n| 2          | 2         | 95    |\n| 2          | 3         | 95    |\n| 1          | 1         | 90    |\n| 1          | 2         | 99    |\n| 3          | 1         | 80    |\n| 3          | 2         | 75    |\n| 3          | 3         | 82    |\n+------------+-----------+-------+\n\nResult table:\n+------------+-------------------+\n| student_id | course_id | grade |\n+------------+-----------+-------+\n| 1          | 2         | 99    |\n| 2          | 2         | 95    |\n| 3          | 3         | 82    |\n+------------+-----------+-------+\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Ninja",
            "likes": -7,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a table `Enrollments` with columns `student_id` (int), `course_id` (int), and `grade` (int), where `(student_id, course_id)` is the primary key, write a SQL query to find the highest grade and its corresponding course for each student. In case of a tie in grades for a student, select the course with the smallest `course_id`. Sort the output by increasing `student_id`.",
                "constraints": [],
                "testcases": [
                    {
                        "input": "Table: Enrollments\n+------------+-------------------+\n| student_id | course_id | grade |\n+------------+-----------+-------+\n| 2          | 2         | 95    |\n| 2          | 3         | 95    |\n| 1          | 1         | 90    |\n| 1          | 2         | 99    |\n| 3          | 1         | 80    |\n| 3          | 2         | 75    |\n| 3          | 3         | 82    |\n+------------+-----------+-------+",
                        "output": "Table: Result\n+------------+-------------------+\n| student_id | course_id | grade |\n+------------+-----------+-------+\n| 1          | 2         | 99    |\n| 2          | 2         | 95    |\n| 3          | 3         | 82    |\n+------------+-----------+-------+",
                        "explanation": "Student 1 has the highest grade of 99 in course 2.\nStudent 2 has the highest grade of 95 in both courses 2 and 3. Course 2 is chosen because it has the smaller course_id.\nStudent 3 has the highest grade of 82 in course 3."
                    },
                    {
                        "input": "Table: Enrollments\n+------------+-------------------+\n| student_id | course_id | grade |\n+------------+-----------+-------+\n| 4          | 1         | 70    |\n| 4          | 2         | 70    |\n+------------+-----------+-------+",
                        "output": "Table: Result\n+------------+-------------------+\n| student_id | course_id | grade |\n+------------+-----------+-------+\n| 4          | 1         | 70    |\n+------------+-----------+-------+",
                        "explanation": "Student 4 has grades 70 in course 1 and 2. Course 1 is picked due to smaller course id."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "SQL",
                "slug": "sql"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}