{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 22131,
            "title": "Hills and Watchmen",
            "titleSlug": "hills-and-watchmen_5526027",
            "content": "<h4 id=\"in-old-times-when-there-was-no-direct-communication-channel-present-for-the-security-of-kingdoms-and-to-convey-the-danger-to-the-kingdom-the-soldier-used-to-fire-light-torches-on-the-hills-and-the-soldier-on-other-hills-could-watch-those-light-torches-and-used-to-get-the-message\">In old times when there was no direct communication channel present, for the security of kingdoms and to convey the danger to the kingdom the soldier used to fire light torches on the hills, and the soldier on other hills could watch those light torches and used to get the message.</h4>\n\n<h4 id=\"a-soldier-can-watch-the-torch-of-another-hill-if-there-is-no-hill-between-them-that-is-higher-than-any-of-the-two-hills\">A soldier can watch the torch of another hill if there is no hill between them that is higher than any of the two hills.</h4>\n\n<h4 id=\"you-are-given-an-array-of-size-n-representing-the-heights-of-the-hill-in-order-by-the-name-hills-and-you-have-to-tell-the-number-of-pairs-of-soldiers-who-can-see-the-torch-of-each-other\">You are given an array of size \u2018N\u2019 representing the heights of the hill in order by the name \u2018HILLS\u2019 and you have to tell the number of pairs of soldiers who can see the torch of each other.</h4>\n\n<h4 id=\"for-a-pair-a-b-is-same-as-b-a\">For a pair, (a, b) is same as (b, a).</h4>\n\n<h5 id=\"example\">Example:</h5>\n\n<pre><code>Input: \u2018N\u2019 = 4, \u2018HILLS\u2019 = [3, 2, 1, 3]\nOutput: 5\nIf we consider the indices from 0 to 3 then the pairs are (0, 1), (0,3), (1, 2), (1,3), and (2, 3).\nThe soldier at hill 0 can not see hill 2 as hill[1]&gt;hill[2].\n</code></pre>\n\n<h4 id=\"note-test-cases-are-made-in-such-a-way-that-the-answer-will-fit-in-32-bit-integer\">Note : Test cases are made in such a way that the answer will fit in 32-bit integer.</h4>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line will contain the integer &#39;T&#39;, denoting the number of test cases.\nThe next line contains a single integer \u2018N\u2019 representing the number of hills.\nThe next line contains \u2018N\u2019 integers denoting the height of hills.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case print the number of pairs of soldiers who can see the torch of each other\u2019s hills.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don&#39;t need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 10^5\n1 &lt;= HILLS[i] &lt;= 10^9\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n4\n3 2 1 3\n5\n1 2 3 4 5 \n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>5\n4\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1 :</h5>\n\n<pre><code>For the first test case:-\nIf we consider the indices from 0 to 3 then the pairs are (0, 1), (0,3), (1, 2), (1,3), and (2, 3).\nThe soldier at hill 0 can not see hill 2 as hill[1]&gt;hill[2].\n\nFor the second test case:-\nOnly consecutive hill soldiers can see each other for others there is a higher hill in between them.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n5\n3 2 1 3 5\n6\n2 2 1 3 4 6 \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>7\n7\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 0,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array 'HILLS' of size 'N' representing the heights of hills, determine the number of pairs of soldiers who can see each other's torches. A soldier on hill 'i' can see the torch on hill 'j' if there are no hills between them with a height greater than or equal to either hill 'i' or hill 'j'. Note that (a, b) is considered the same pair as (b, a).",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10^5",
                    "1 <= HILLS[i] <= 10^9",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "4\n3 2 1 3",
                        "output": "5",
                        "explanation": "The pairs (0, 1), (0, 3), (1, 2), (1, 3), and (2, 3) are valid. The soldier at hill 0 cannot see hill 2 because hill 1 is higher than hill 2. Indexing from 0."
                    },
                    {
                        "input": "5\n1 2 3 4 5",
                        "output": "4",
                        "explanation": "Only consecutive hill soldiers can see each other due to the increasing heights.  The pairs are (0,1), (1,2), (2,3) and (3,4). Indexing from 0."
                    },
                    {
                        "input": "5\n3 2 1 3 5",
                        "output": "7",
                        "explanation": "The valid pairs are (0,1), (0,3), (0,4), (1,2), (1,3), (1,4) and (3,4). Indexing from 0."
                    },
                    {
                        "input": "6\n2 2 1 3 4 6",
                        "output": "7",
                        "explanation": "The valid pairs are (0,1), (0,3), (0,4), (0,5), (1,3), (1,4) and (1,5). Indexing from 0."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Hills between two hills should not be taller than those two hills.</p>",
            "<p>Data Structures</p>",
            "<p>Stack</p>",
            "<p>We can push all the hills while traversing the stack from left to right maintaining \u2018answer\u2019 and while pushing one element remove all the elements which are smaller than current element.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Stacks & Queues",
                "slug": "stacks-&-queues"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}