{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 14263,
            "title": "Hotel Rooms",
            "titleSlug": "hotel-rooms_2103369",
            "content": "<h4 id=\"you-are-the-manager-of-a-hotel-having-10-floors-numbered-0-9-each-floor-has-26-rooms-a-z-you-will-be-given-a-sequence-of-strings-of-the-room-where-suggests-the-room-is-booked-and-suggests-the-room-is-freed-you-have-to-find-which-room-is-booked-the-maximum-number-of-times\">You are the manager of a hotel having 10 floors numbered 0-9. Each floor has 26 rooms [A-Z]. You will be given a sequence of strings of the room where \u2018+\u2019 suggests the room is booked and \u2018-\u2019 suggests the room is freed. You have to find which room is booked the maximum number of times.</h4>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You may assume that the sequence is always correct, i.e., every booked room was previously free, and every freed room was previously booked.\n\nIn case, 2 rooms have been booked the same number of times, you have to return Lexographically smaller room.\n\nA string &#39;a&#39; is lexicographically smaller than a string &#39;b&#39; (of the same length) if in the first position where &#39;a&#39; and &#39;b&#39; differ, string &#39;a&#39; has a letter that appears earlier in the alphabet than the corresponding letter in string &#39;b&#39;. For example, &quot;abcd&quot; is lexicographically smaller than &quot;acbd&quot; because the first position they differ in is at the second letter, and &#39;b&#39; comes before &#39;c&#39;.\n</code></pre>\n\n<h5 id=\"for-example\">For Example :</h5>\n\n<pre><code>n = 6, Arr[] = {&quot;+1A&quot;, &quot;+3E&quot;, &quot;-1A&quot;, &quot;+4F&quot;, &quot;+1A&quot;, &quot;-3E&quot;}\n\nNow in this example room \u201c1A\u201d was booked 2 times which is the maximum number of times any room was booked. Hence the answer is \u201c1A\u201d.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of input format contains \u2018T\u2019 denoting the number of test cases. Then each testcase follows\n\nThe first line of each test case contains an integer \u2018n\u2019 Denoting the number of times a room is booked or freed.\n\nThe second line of the test case contains an array of \u2018n\u2019 strings each string denoting which room was booked or freed.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, Print a string \u2018ans\u2019 denoting the room which was booked maximum number of times.    \n\nOutput for every query will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You are not required to print anything explicitly. It has already been taken care of. Just implement the functions.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 10^4\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n5\n+2A +3A -2A +4Z +2A\n7\n+7B -7B +7B -7B +7B -7B +7B\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>2A\n7B\n</code></pre>\n\n<h5 id=\"explanation-for-sample-output-1\">Explanation for Sample Output 1 :</h5>\n\n<pre><code>In the first test case, room 2A was booked 2 times and 3A, 4Z were booked one time each. Hence the answer is 2A.\n\nIn the second test case, room 7B is booked 4 times. Hence the answer is 7B.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n3\n+6G +8F +3Z\n8\n+5Q -5Q +9D -9D +5Q +7I +3O -5Q\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>3Z\n5Q\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 1,
            "dislikes": "NA",
            "rephrased": {
                "body": "You are the manager of a hotel with 10 floors (numbered 0-9). Each floor has 26 rooms (A-Z). Given a sequence of booking and freeing operations for rooms, determine the room that was booked the maximum number of times. '+' indicates a booking, and '-' indicates a freeing operation.  Assume the sequence is always valid (i.e., a room can only be freed if it was previously booked). If multiple rooms are booked the same maximum number of times, return the lexicographically smallest room.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10^4",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "5\n+2A +3A -2A +4Z +2A",
                        "output": "2A",
                        "explanation": "Room 2A was booked 2 times, while rooms 3A and 4Z were booked once each. Therefore, the answer is 2A."
                    },
                    {
                        "input": "7\n+7B -7B +7B -7B +7B -7B +7B",
                        "output": "7B",
                        "explanation": "Room 7B was booked 4 times. Hence, the answer is 7B."
                    },
                    {
                        "input": "3\n+6G +8F +3Z",
                        "output": "3Z",
                        "explanation": null
                    },
                    {
                        "input": "8\n+5Q -5Q +9D -9D +5Q +7I +3O -5Q",
                        "output": "5Q",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Check how many times a room was booked.</p>",
            "<p>Try to store the count of every element in one loop.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}