{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 19534,
            "title": "Icarus and BSTCOUNT",
            "titleSlug": "icarus-and-bstcount_4529770",
            "content": "<h4 id=\"icarus-is-given-a-binary-search-tree-consisting-of-n-nodes-he-have-to-find-the-different-number-of-permutations-of-the-tree-nodes-modulo-10-9-7-where-a-permutation-of-a-tree-is-an-arrangement-of-nodes-in-the-original-tree-such-that-the-structure-remains-same-but-there-exists-at-least-one-position-in-the-permutation-whose-value-is-different-from-original-tree\">Icarus is given a binary search tree consisting of \u2018N\u2019 nodes. He have to find the different number of permutations of the tree nodes modulo 10^9+7. Where a permutation of a tree is an arrangement of nodes in the original tree such that the structure remains same but there exists at least one position in the permutation whose value is different from original tree.</h4>\n\n<h4 id=\"output-the-number-of-distinct-permutations-modulo-10-9-7\">Output the number of distinct permutations modulo 10^9+7.</h4>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of the input contains a single integer &#39;T&#39;, representing the number of test cases.\n\nThe first line of each test case contains an integers \u2018N\u2019, representing the number of nodes in the tree.\n\nThe second line of each test case will contain the values of the nodes of the tree in the level order form ( -1 for &#39;NULL&#39; node) Refer to the example for further clarification.\n</code></pre>\n\n<h5 id=\"example\">Example :</h5>\n\n<pre><code>Consider the binary search tree\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/1-jpg-16193.png\" alt=\"\"></p>\n\n<pre><code>The input of the tree depicted in the image above will be like : \n3\n1 4\n-1 2 -1 5\n-1 -1 -1 -1 \n\nExplanation :\nLevel 1 :\nThe root node of the tree is 3\n\nLevel 2 :\nLeft child of 3 = 1\nRight child of 3 = 4\n\nLevel 3 :\nLeft child of 1 = null(-1)\nRight child of 1 = 2\nLeft child of 4 = null(-1)\nRight child of 4 = 5\n\nLevel 4 :\nLeft child of 4 = null (-1)\nRight child of 4 = null(-1)\nLeft child of 5 = null (-1)\nRight child of 5 = null (-1)\n\nThe first not-null node (of the previous level) is treated as the parent of the first two nodes of the current level. The second not-null node (of the previous level) is treated as the parent node for the next two nodes of the current level and so on.\n\nThe input ends when all nodes at the last level are null (-1).\n\nThe different permutations of the tree are :\n[3, 1, 2, -1, 4, -1, 5, -1, -1, -1, -1]\n[3, 1, 4, -1, 2, -1, 5, -1, -1, -1, -1]\n[3, 1, 4, -1, 5, -1, 2, -1, -1, -1, -1]\n[3, 4, 1, -1, 2, -1, 5, -1, -1, -1, -1]\n[3, 4, 1, -1, 5, -1, 2, -1, -1, -1, -1]\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case, output an integer value denoting the number of distinct permutation of the tree modulo 10^9+7.\n\nPrint the output of each test case in a new line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don\u2019t need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1\u2009&lt;= N &lt;= 10^5\nIt is guaranteed that the given input is a binary search tree.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n4\n1 -1 2 3 4 -1 -1 -1 -1 \n3\n1 2 -1 -1 3 -1 -1  \n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>1\n0\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1 :</h5>\n\n<pre><code>For test case 1 we have, \n\nThe input tree: \n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/2-jpg-16194.png\" alt=\"\"></p>\n\n<pre><code>The different permutations are :\n\n[1, -1, 2, 4, 3, -1, -1, -1, -1]\n\nHence the answer is 1 % (10^9+7) = 1.\n\nFor test case 2 we have,\n\nThe input tree : \n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/3-jpg-16195.png\" alt=\"\"></p>\n\n<pre><code>No other permutations exists for this tree.\nHence the answer is 0 % (10^9+7) = 0.\n\nSo, we output 1(true).\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n3\n1 2 -1 3 -1 -1 -1 \n3\n1 2 -1 3 -1 -1 -1  \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>0\n0\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": -9,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a binary search tree consisting of N nodes, find the number of distinct permutations of the tree nodes modulo 10^9 + 7. A permutation of a tree is an arrangement of nodes where the tree structure remains the same, but at least one node's value is different from its original position in the tree.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10^5",
                    "The given input is a binary search tree.",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "4\n1 -1 2 3 4 -1 -1 -1 -1",
                        "output": "1",
                        "explanation": "The input tree has only one possible permutation that differs from the original while maintaining the BST structure. Therefore, the answer is 1 % (10^9+7) = 1."
                    },
                    {
                        "input": "3\n1 2 -1 -1 3 -1 -1",
                        "output": "0",
                        "explanation": "No other permutations exist for this tree. Therefore, the answer is 0 % (10^9+7) = 0."
                    },
                    {
                        "input": "3\n1 2 -1 3 -1 -1 -1",
                        "output": "0",
                        "explanation": "No other permutations exist for this tree. Therefore, the answer is 0 % (10^9+7) = 0."
                    },
                    {
                        "input": "3\n1 2 -1 3 -1 -1 -1",
                        "output": "0",
                        "explanation": "No other permutations exist for this tree. Therefore, the answer is 0 % (10^9+7) = 0."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Use Divide and Conqure technique.</p>",
            "<p>The root node in each subtree/tree will be fixed.</p>",
            "<p>Consider the left subtree and right subtree separately.</p>",
            "<p>How many ways can we combine the two subtrees?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Binary Search Trees",
                "slug": "binary-search-trees"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}