{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 19725,
            "title": "Icarus and MaxSum",
            "titleSlug": "icarus-and-maxsum_4530833",
            "content": "<h4 id=\"you-are-given-an-array-of-coins-coins-of-length-n-and-there-are-s-number-of-slots-numbered-from-1-to-s-such-that-2-s-n\">You are given an array of coins \u2018COINS\u2019 of length \u2018N\u2019 and there are \u2018S\u2019 number of slots numbered from 1 to S such that 2*S &gt;= N.</h4>\n\n<h4 id=\"you-have-to-place-all-n-coins-into-some-slots-so-that-no-slot-contains-more-than-two-coins-after-placing-the-coins-you-will-calculate-the-and-sum-as-the-sum-of-all-the-values-obtained-by-performing-the-bitwise-and-operation-between-the-slot-number-and-the-value-of-the-coin-placed-in-that-slot-number\">You have to place all N coins into some slots so that no slot contains more than two coins. After placing the coins you will calculate the AND sum as the sum of all the values obtained by performing the bitwise AND operation between the slot number and the value of the coin placed in that slot number .</h4>\n\n<h4 id=\"you-have-to-find-and-sum-between-the-coins-and-the-slots\">You have to find  AND sum between the coins and the slots.</h4>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of the input contains a single integer &#39;T&#39;, representing the number of test cases.\n\nThe first line of each test case contains two integers \u2018N\u2019 and \u2018S\u2019 denoting the number of coins and the number of slots respectively.\n\nThe second line contains an integer array denoting the value of coins.\n</code></pre>\n\n<h5 id=\"example\">Example :</h5>\n\n<pre><code>Number of coins, N = 9\nNumber of slots, S = 8\nCoins array, COINS = [14, 7, 9, 8, 2, 4, 1, 1, 1, 9]\n\nOne possible placement is to put coins having value:\n[14, 7] into slot number 7, \n[9, 8] into slot number 8,\n[2] into slot number 2,\n[4] into slot number 4,\n[1, 1] into slot number 3,\n[1, 9] into slot number 1.\n\nThis gives the maximum AND sum of :\n(14 AND 7) + (7 AND 7) + (9 AND 8) + (8 AND 8) + (2 AND 2) + (4 AND 3) + (11 AND 3) + (1 AND 9) = 6 + 7 + 8 + 8 + 2 + 4 + 3 + 1 + 1 = 40.\nNote that slots number 5, 6 are empty which is permitted.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case, output a single integer , AND sum between the coins and the slots.\n\nPrint the output of each test case in a new line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don\u2019t need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10 \n1 &lt;= S &lt;= 9\n1 &lt;= N &lt;= 2 * S\n1 &lt;= COINS[i] &lt;= 15\n\nTime Limit: 5 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n6 3\n1 2 3 4 5 6\n6 9\n1 3 10 4 7 1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>9\n24  \n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1 :</h5>\n\n<pre><code>For test case 1 a possible placement of coins can be, \n[1, 4] into slot number 1, \n[2, 6] into slot number 2,\n[3, 5] into slot number 3.\n\nThis gives the maximum AND sum of (1 AND 1) + (4 AND 1) + (2 AND 2) + (6 AND 2) + (3 AND 3) + (5 AND 3) = 1 + 0 + 2 + 2 + 3 + 1 = 9.\n\nFor test case 2 a possible placement of coins can be,\n[1, 1] into slot number 1, \n[3] into slot number 3,\n[4] into slot number 4,\n[7] into slot number 7.\n[10] into slot number 9.\n\nThis gives the maximum AND sum of (1 AND 1) + (1 AND 1) + (3 AND 3) + (4 AND 4) + (7 AND 7) + (10 AND 9) = 1 + 1 + 3 + 4 + 7 + 8 = 24.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n7 4\n10 5 3 6 11 8 8\n11 8\n8 13 3 15 3 15 2 15 5 7 6\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>16\n60\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 8,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of coins 'COINS' of length 'N' and 'S' slots numbered from 1 to S (2*S >= N), place all N coins into the slots, with a maximum of two coins per slot.  The objective is to maximize the 'AND sum', calculated as the sum of bitwise AND operations between each slot number and the coin(s) placed in that slot.  Find the maximum possible AND sum.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= S <= 9",
                    "1 <= N <= 2 * S",
                    "1 <= COINS[i] <= 15",
                    "Time Limit: 5 sec"
                ],
                "testcases": [
                    {
                        "input": "6 3\n1 2 3 4 5 6",
                        "output": "9",
                        "explanation": "A possible placement is:\nSlot 1: [1, 4]\nSlot 2: [2, 6]\nSlot 3: [3, 5]\nAND Sum = (1 & 1) + (4 & 1) + (2 & 2) + (6 & 2) + (3 & 3) + (5 & 3) = 1 + 0 + 2 + 2 + 3 + 1 = 9"
                    },
                    {
                        "input": "6 9\n1 3 10 4 7 1",
                        "output": "24",
                        "explanation": "A possible placement is:\nSlot 1: [1, 1]\nSlot 3: [3]\nSlot 4: [4]\nSlot 7: [7]\nSlot 9: [10]\nAND Sum = (1 & 1) + (1 & 1) + (3 & 3) + (4 & 4) + (7 & 7) + (10 & 9) = 1 + 1 + 3 + 4 + 7 + 8 = 24"
                    },
                    {
                        "input": "7 4\n10 5 3 6 11 8 8",
                        "output": "16",
                        "explanation": null
                    },
                    {
                        "input": "11 8\n8 13 3 15 3 15 2 15 5 7 6",
                        "output": "60",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you think of a dynamic programming solution to this problem?</p>",
            "<p>Can you use a bitmask to represent the state of the slots?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}