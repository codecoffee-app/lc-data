{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8937,
            "title": "Increasing Subsegment",
            "titleSlug": "increasing-subsegment_920543",
            "content": "<h4 id=\"gary-has-a-sequence-arr-consisting-of-n-integers\">Gary has a sequence &#39;ARR&#39;, consisting of &#39;N&#39; integers.</h4>\n\n<h4 id=\"well-call-a-sequence-arr-i-arr-i-1-arr-j-where-1-i-j-n-a-subsegment-of-the-sequence-arr-the-value-j-i-1-denotes-the-length-of-the-subsegment\">We&#39;ll call a sequence ARR[i],\u2009 ARR[i+1],\u2009...,\u2009ARR[j] where 1\u2009 \u2264\u2009 i\u2009 \u2264\u2009 j\u2009 \u2264\u2009 N a subsegment of the sequence ARR. The value (j\u2009-\u2009i\u2009+\u20091) denotes the length of the subsegment.</h4>\n\n<h4 id=\"your-task-is-to-find-the-longest-subsegment-of-arr-such-that-it-is-possible-to-change-at-most-one-number-change-one-number-to-any-integer-you-want-from-the-subsegment-to-make-the-subsegment-strictly-increasing\">Your task is to find the longest subsegment of ARR, such that it is possible to change at most one number (change one number to any integer you want) from the subsegment to make the subsegment strictly increasing.</h4>\n\n<h4 id=\"you-need-to-return-the-length-of-the-maximum-subsegment-that-you-can-find-by-changing-only-one-integer-in-the-given-sequence\">You need to return the length of the maximum subsegment that you can find by changing only one integer in the given sequence.</h4>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains a single integer T representing the number of test cases.      \nThen T test cases follow.\n\nThe first line of test case contains an integer &#39;N&#39; denoting the length of &#39;ARR&#39;.\n\nThe second line of each test case contains &#39;N&#39; space-separated integers denoting the elements of &#39;ARR&#39;.\n</code></pre>\n\n<h5 id=\"output-format\">Output format:</h5>\n\n<pre><code>For each test case, print the length of the maximum subsegment that you can find by changing only one integer in the given sequence.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1\u2009\u2264\u2009N\u2009\u2264\u200910^5\n1\u2009\u2264\u2009 ARR[i] \u2009\u2264\u200910^9\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n4\n1 4 3 4\n6\n7 2 3 1 5 6\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>4\n5\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1:</h5>\n\n<pre><code>For test case 1, we&#39;ll change the first 4 in the array by 2, thus making the sequence: {1, 2, 3, 4}.\n\nFor test case 2, we&#39;ll change the value at index 3 in the array by 4, thus making the sequence: {7, 2, 3, 4, 5, 6}.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n3\n7 6 9 \n1\n6\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>3\n1\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation For Sample Input 2:</h5>\n\n<pre><code>For test case 1, we&#39;ll change the first 7 in the array by 2, thus making the sequence: {2, 6, 9}.\n\nFor test case 2,  as there is only 1 element present, hence we don&#39;t have to change anything.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 2,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of integers, find the length of the longest subsegment such that by changing at most one element within that subsegment, it can be made strictly increasing.",
                "constraints": [
                    "1 <= T <= 10",
                    "1\u2009\u2264\u2009N\u2009\u2264\u200910^5",
                    "1\u2009\u2264\u2009 ARR[i] \u2009\u2264\u200910^9"
                ],
                "testcases": [
                    {
                        "input": "n = 4, arr = [1, 4, 3, 4]",
                        "output": "4",
                        "explanation": "By changing the first 4 to 2, the subsegment [1, 2, 3, 4] becomes strictly increasing. The length is 4."
                    },
                    {
                        "input": "n = 6, arr = [7, 2, 3, 1, 5, 6]",
                        "output": "5",
                        "explanation": "By changing 1 to 4, the subsegment [2, 3, 4, 5, 6] becomes strictly increasing, ignoring 7 at the beginning.  If considering from the beginning, changing 7 is a better option for longer subsegment. Changing the 1 to 4, gives a subsegment of length 5 starting from 2."
                    },
                    {
                        "input": "n = 3, arr = [7, 6, 9]",
                        "output": "3",
                        "explanation": "By changing 7 to 5, we get [5, 6, 9], which is strictly increasing and of length 3."
                    },
                    {
                        "input": "n = 1, arr = [6]",
                        "output": "1",
                        "explanation": "A single element array is already strictly increasing, with length 1."
                    },
                    {
                        "input": "n = 5, arr = [1, 2, 5, 3, 4]",
                        "output": "5",
                        "explanation": "Changing 5 to 3. Resulting in [1, 2, 3, 3, 4] won't give a strictly increasing sequence. Changing 3 to 6, results in [1, 2, 5, 6, 4] won't give a strictly increasing sequence. However, changing 4 to 7 gives [1, 2, 5, 3, 7], which is not strictly increasing. Changing 5 to 3. gives [1, 2, 3, 3, 4]. If we change 3 to 3.5 and round to 4 the output is [1, 2, 4, 3, 4] changing last 4 gives [1, 2, 5, 3, 6]. We can change the 3 at index 3 to 6, result is [1, 2, 5, 6, 4] . Changing the 5 at index 2 to 3 gives [1, 2, 3, 3, 4]. Since strictly increasing means > and not >=, we need to analyze and pick the max. Change arr[2] = 3 results [1,2,3,3,4], Change arr[3] = 6, [1,2,5,6,4], Change arr[4] = 3, [1,2,5,3,3]. Thus, by changing 5 to 3, it results in at least a 4 element strictly increasing array. If we make the arr[2] to 3 the sub-array becomes 1,2,3,3,4, therefore the answer is 4 ([1,2,5,3] after the third element the array is not strictly increasing therefore 5 is not the output)"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you think of finding the longest increasing subarray?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}