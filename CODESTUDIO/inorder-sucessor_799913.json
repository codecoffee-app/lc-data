{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8042,
            "title": "Inorder Sucessor",
            "titleSlug": "inorder-sucessor_799913",
            "content": "<h4 id=\"you-have-been-given-an-arbitrary-binary-tree-and-a-node-of-this-tree-you-need-to-find-the-inorder-successor-of-this-node-in-the-tree\">You have been given an arbitrary binary tree and a node of this tree. You need to find the inorder successor of this node in the tree.</h4>\n\n<h4 id=\"the-inorder-successor-of-a-node-in-a-binary-tree-is-that-node-that-will-be-visited-immediately-after-the-given-node-in-the-inorder-traversal-of-the-tree-if-the-given-node-is-visited-last-in-the-inorder-traversal-then-its-inorder-successor-is-null\">The inorder successor of a node in a binary tree is that node that will be visited immediately after the given node in the inorder traversal of the tree. If the given node is visited last in the inorder traversal, then its inorder successor is NULL.</h4>\n\n<h4 id=\"the-inorder-traversal-of-a-binary-tree-is-the-traversal-method-in-which-for-any-node-its-left-subtree-is-visited-first-then-the-node-itself-and-then-the-right-subtree\">The inorder traversal of a binary tree is the traversal method in which for any node its left subtree is visited first, then the node itself, and then the right subtree.</h4>\n\n<h5 id=\"note\">Note</h5>\n\n<pre><code>1. Each node is associated with a unique integer value. \n\n2. The node for which the successor is to be found is guaranteed to be part of the tree.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains a single integer &#39;T&#39; representing the number of test cases. \n\nThe first line of each test case will contain the values of the nodes of the tree in the level order form ( -1 for NULL node) Refer to the example for further clarification.\n\nThe second and the last line of each test case will contain the value of the node for which the inorder successor is to be found.\n\nExample: \nConsider the binary tree:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/screenshot-from-2020-10-09-12-55-45-5134.png\" alt=\"altImage\"></p>\n\n<pre><code>The input of the tree depicted in the image above will be like: \n 1\n 2 3\n 4 -1 5 6\n-1 7 -1 -1 -1 -1\n-1 -1\n\nExplanation :\nLevel 1 :\nThe root node of the tree is 1\n\nLevel 2 :\nLeft child of 1 = 2\nRight child of 1 = 3\n\nLevel 3 :\nLeft child of 2 = 4\nRight child of 2 = null (-1)\nLeft child of 3 = 5\nRight child of 3 = 6\n\nLevel 4 :\nLeft child of 4 = null (-1)\nRight child of 4 = 7\nLeft child of 5 = null (-1)\nRight child of 5 = null (-1)\nLeft child of 6 = null (-1)\nRight child of 6 = null (-1)\n\nLevel 5 :\nLeft child of 7 = null (-1)\nRight child of 7 = null (-1)\n\nThe first not-null node (of the previous level) is treated as the parent of the first two nodes of the current level. The second not-null node (of the previous level) is treated as the parent node for the next two nodes of the current level and so on.\n\nThe input ends when all nodes at the last level are null (-1).\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print a single line that contains the value of the successor node, or NULL if it does not have an inorder successor.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function. \n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= &#39;T&#39; &lt;= 100\n2 &lt;= &#39;N&#39; &lt;= 10 ^ 3  \n1 &lt;=  &#39;NODEVALUE&#39; &lt;= 10 ^ 9\n\nWhere &#39;N&#39; is the number of nodes and &#39;NODEVALUE&#39; is the value of the node.\n\nTime Limit: 1sec.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1\n1 2 3 4 5 -1 -1 -1 -1 -1 -1 \n2\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>5\n</code></pre>\n\n<h5 id=\"explanation-of-the-sample-input1\">Explanation of the Sample Input1:</h5>\n\n<pre><code>The tree can be represented as follows:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/screenshot-from-2020-10-22-22-40-14-5366.png\" alt=\"altImage\"></p>\n\n<pre><code>The inorder traversal of this tree will be 4 2 5 1 3.\nAs the root is \u20181\u2019, we first visit its left subtree which is rooted at 2, thus then we visit the left subtree of \u20182\u2019, which is rooted at \u20184\u2019. The left subtree of \u20184\u2019 is NULL, so we visit the root i.e \u20184\u2019. This process is continued.\nSo the order would be 4 -&gt; 2 -&gt; 5 -&gt; 1 -&gt; 3.\nClearly after the node with value = 2, the node with value = 5 is visited. So, 5 is the answer\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\n10 5 6 -1 -1 -1 -1\n6\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>NULL\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 26,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an arbitrary binary tree and a specific node within that tree, find the inorder successor of the given node. The inorder successor is the node that would be visited immediately after the given node during an inorder traversal of the tree. If the given node is the last node visited in the inorder traversal, its inorder successor is considered NULL.\n\nInorder traversal visits the left subtree first, then the node itself, and finally the right subtree.\n\nEach node has a unique integer value, and the target node is guaranteed to be present in the tree.",
                "constraints": [
                    "1 <= 'T' <= 100 (Number of test cases)",
                    "2 <= 'N' <= 10^3 (Number of nodes in the tree)",
                    "1 <= 'NODEVALUE' <= 10^9 (Value of a node)",
                    "Time Limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "1\n1 2 3 4 5 -1 -1 -1 -1 -1 -1\n2",
                        "output": "5",
                        "explanation": "The inorder traversal of the tree is 4 2 5 1 3.  The node following 2 is 5. Therefore, the inorder successor of 2 is 5."
                    },
                    {
                        "input": "1\n10 5 6 -1 -1 -1 -1\n6",
                        "output": "NULL",
                        "explanation": "The inorder traversal of the tree is 5 10 6. The node 6 is the last node visited, so it has no inorder successor.  Therefore, the inorder successor of 6 is NULL."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Store the nodes in the order of inorder traversal</p>",
            "<p>Use the properties of inorder traversal.</p>",
            "<p>Try reverse inorder traversal</p>"
        ],
        "relatedTopics": [
            {
                "name": "Binary Trees",
                "slug": "binary-trees"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}