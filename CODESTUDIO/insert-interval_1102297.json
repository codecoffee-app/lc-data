{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9918,
            "title": "Insert Interval",
            "titleSlug": "insert-interval_1102297",
            "content": "<h4 id=\"you-are-given-a-list-of-n-non-overlapping-intervals-each-interval-can-be-represented-using-two-integers-start-and-end-sorted-in-ascending-order-based-on-start-values-your-task-is-to-insert-a-given-interval-in-the-list-such-that-all-the-intervals-are-present-in-sorted-order\">You are given a list of \u2018N\u2019 non-overlapping intervals (each interval can be represented using two integers \u2018start\u2019 and \u2018end\u2019), sorted in ascending order (based on \u2018start\u2019 values). Your task is to insert a given interval in the list, such that all the intervals are present in sorted order.</h4>\n\n<h4 id=\"in-case-the-given-interval-overlaps-with-other-intervals-merge-all-necessary-intervals-to-produce-a-list-containing-only-non-overlapping-intervals\">In case the given interval overlaps with other intervals, merge all necessary intervals to produce a list containing only non-overlapping intervals.</h4>\n\n<h4 id=\"example\">Example:</h4>\n\n<pre><code>Let\u2019s say the list of intervals is: [[1,3], [5,7], [8,12]] and we need to insert the interval [4,6] into the list. [4,6] must be inserted in the second position. After insertion, since [4,6] overlaps with [5,7], we merge them into one interval [4,7]. So, our resulting list is:  [[1,3], [4,7], [8,12]]\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 representing the number of test cases.\n\nThe first of every test case contains the positive integer \u2018N\u2019 denoting the number of intervals present in the list.\n\nNext \u2018N\u2019 lines contain two space-separated integers, \u2018start\u2019 and \u2018end\u2019, denoting the starting and the ending point of the interval present in the list. \n\nThe next line contains two space-separated integers, start and end, denoting the starting and the ending point of the interval which is to be inserted into the list.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, return the list after inserting the given interval.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10 \n1 &lt;= N &lt;= 5 * 10^4\n1 &lt;= start &lt;= end &lt;= 10^5\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n3\n1 3\n5 7\n8 12\n4 6\n2\n2 3\n5 8\n1 9\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>1 3\n4 7\n8 12\n1 9\n</code></pre>\n\n<h5 id=\"explanation-1\">Explanation 1:</h5>\n\n<pre><code>For the first test case,  The list of intervals is: [[1,3], [5,7], [8,12]] and we need to insert the interval [4,6] into the list. [4,6] must be inserted in the second position. After insertion, since [4,6] overlaps with [5,7], we merge them into one interval [4,7]. So, our resulting list is:  [[1,3], [4,7], [8,12]]\n\nFor the second test case, N = 2. The list of intervals is: [[2,3], [5,8]] and we need to insert the interval [1,9] into the list. [4,6] must be inserted in the first position. After insertion, since it overlaps with [2,3] and [5,8], we merge them into one interval [1,9]. So, our resulting list is:  [[1,9]].\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n3\n1 3\n5 7\n8 12\n4 10\n2\n2 3\n5 10\n1 4\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>1 3 \n4 12\n1 4\n5 10\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 0,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a list of non-overlapping intervals, sorted in ascending order based on their start values, insert a new interval into the list. If the new interval overlaps with any existing intervals, merge them to produce a list of non-overlapping intervals.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 5 * 10^4",
                    "1 <= start <= end <= 10^5",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "3\n1 3\n5 7\n8 12\n4 6",
                        "output": "1 3\n4 7\n8 12",
                        "explanation": "The initial intervals are [[1,3], [5,7], [8,12]]. The interval [4,6] is inserted. It overlaps with [5,7], so they are merged into [4,7]. The final list is [[1,3], [4,7], [8,12]]."
                    },
                    {
                        "input": "2\n2 3\n5 8\n1 9",
                        "output": "1 9",
                        "explanation": "The initial intervals are [[2,3], [5,8]]. The interval [1,9] is inserted. It overlaps with both [2,3] and [5,8], so all three are merged into [1,9]. The final list is [[1,9]]."
                    },
                    {
                        "input": "3\n1 3\n5 7\n8 12\n4 10",
                        "output": "1 3\n4 12",
                        "explanation": "The initial intervals are [[1,3], [5,7], [8,12]]. The interval [4,10] is inserted. It overlaps with [5,7] and [8,12], so all three are merged into [4,12]. The final list is [[1,3], [4,12]]."
                    },
                    {
                        "input": "2\n2 3\n5 10\n1 4",
                        "output": "1 4\n5 10",
                        "explanation": "The initial intervals are [[2,3], [5,10]]. The interval [1,4] is inserted. It overlaps with [2,3], so they are merged into [1,4]. The final list is [[1,4], [5,10]]."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you solve this problem using stack?</p>",
            "<p>Can you solve this problem by traversing the list once?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}