{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 20184,
            "title": "Insertion In Circular Linked List",
            "titleSlug": "insertion-in-circular-linked-list_4609562",
            "content": "<h4 id=\"you-are-given-a-circular-singly-linked-list-where-every-node-in-the-linked-list-contains-a-pointer-next-which-points-to-the-next-node-in-the-list-and-the-last-node-points-to-the-head-of-the-list\">You are given a circular singly linked list, where every node in the linked list contains a pointer <em><strong>&#39;next&#39;</strong></em> which points to the next node in the list, and the last node points to the head of the list.</h4>\n\n<p><br/></p>\n\n<h4 id=\"all-nodes-have-some-positive-integer-value-data-associated-with-them\">All nodes have some positive integer value <em><strong>&#39;data&#39;</strong></em> associated with them.</h4>\n\n<p><br/></p>\n\n<h4 id=\"your-task-is-to-insert-a-new-node-with-data-equal-to-val-in-the-linked-list-at-a-given-position-k\">Your task is to insert a new node with &#39;data&#39; equal to <em><strong>&#39;val&#39;</strong></em> in the linked list at a given position <em><strong>&#39;k&#39;</strong></em>.</h4>\n\n<p><br/></p>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>The position given will always be less than or equal to the length of the linked list. Assume all the indexing starts from &#39;0&#39;.\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"example\">Example:</h5>\n\n<pre><code>Input : &#39;k&#39; = 1, &#39;val&#39; = 5, &#39;list&#39; = [1, 2, 3, 4]\n\nOutput: 1 5 2 3 4\n\nExplanation:\nThe node with &#39;data&#39; = 5, is inserted at position 1(0 indexed) in the circular linked list as follows:\n</code></pre>\n\n<p><br/></p>\n\n<p><img src=\"https://files.codingninjas.in/1-16527.jpg\" alt=\"\">\n<br/></p>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of input contains three integers &#39;n&#39;, \u2018k\u2019, and &#39;val&#39;, denoting the length of the linked list, the position of insertion operation, and the value of &#39;data&#39; of new node to be inserted in the list respectively.\n\nThe second line of input contains an array of positive integers denoting the nodes of the linked list.\n\nThe last element of the list always points to the first element in the list in order for the list to be a circular linked list.\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>Print the circular linked list after the insertion operation.\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don&#39;t need to print anything. It has already been taken care of. Just implement the given function.\n\nReturn the head of the modified linked list. Your returned linked list will be validated to check if it&#39;s a circular linked list and it&#39;s data printed. If your returned linked list is not a circular linked list, &#39;-1&#39; will be printed.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>4 0 5\n1 2 3 4\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>5 1 2 3 4\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1 :</h5>\n\n<pre><code>In this case, \u2018k\u2019 = 0 denotes the starting index of the list, so the new element is inserted before the head of the list and the new head will be then a node with \u2018data\u2019 = 5.\n\nHence, the resulting circular linked list would be : 5 1 2 3 4\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>3 2 4\n10 11 5\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>10 11 4 5\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"expected-time-complexity\">Expected Time Complexity:</h5>\n\n<pre><code>Try to do this in O(k).\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= n &lt;= 10^4\n0 &lt;= k &lt;= n\n1 &lt;= val &lt;= 10^5\n1 &lt;= Node.data &lt;= 10^5\n\nTime Limit: 1 sec\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 4,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a circular singly linked list where each node's 'next' pointer points to the next node, and the last node points back to the head, insert a new node with data 'val' at position 'k' (0-indexed). Return the head of the modified circular linked list.",
                "constraints": [
                    "1 <= n <= 10^4 (where n is the length of the linked list)",
                    "0 <= k <= n",
                    "1 <= val <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "k = 0, val = 5, head = [1, 2, 3, 4]",
                        "output": "5 1 2 3 4",
                        "explanation": "The node with data 5 is inserted at the beginning (index 0).  The resulting list is 5 -> 1 -> 2 -> 3 -> 4 -> 5 (circular)."
                    },
                    {
                        "input": "k = 1, val = 5, head = [1, 2, 3, 4]",
                        "output": "1 5 2 3 4",
                        "explanation": "The node with data 5 is inserted at index 1.  The resulting list is 1 -> 5 -> 2 -> 3 -> 4 -> 1 (circular)."
                    },
                    {
                        "input": "k = 2, val = 4, head = [10, 11, 5]",
                        "output": "10 11 4 5",
                        "explanation": "The node with data 4 is inserted at index 2. The resulting list is 10 -> 11 -> 4 -> 5 -> 10 (circular)."
                    },
                    {
                        "input": "k = 3, val = 7, head = [1, 2, 3]",
                        "output": "1 2 3 7",
                        "explanation": "The node with data 7 is inserted at index 3, which is the end of the list.  The resulting list is 1 -> 2 -> 3 -> 7 -> 1 (circular)."
                    },
                    {
                        "input": "k = 0, val = 100, head = [5]",
                        "output": "100 5",
                        "explanation": "Inserting at the beginning of a single-element list. The resulting list is 100 -> 5 -> 100 (circular)."
                    },
                    {
                        "input": "k = 1, val = 100, head = [5]",
                        "output": "5 100",
                        "explanation": "Inserting at the end of a single-element list. The resulting list is 5 -> 100 -> 5 (circular)."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><strong>Can you try iterating over the list?</strong></p>"
        ],
        "relatedTopics": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}