{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 20257,
            "title": "Insertion In Doubly Linked List",
            "titleSlug": "insertion-in-doubly-linked-list_4609682",
            "content": "<h4 id=\"you-are-given-a-doubly-linked-list-where-every-node-in-the-linked-list-contains-two-pointers-next-and-prev-which-point-to-the-next-node-and-previous-node-in-the-list-respectively-all-nodes-have-some-positive-integer-value-associated-with-them-your-task-is-to-insert-an-integer-value-val-in-the-linked-list-at-a-given-position-k\">You are given a Doubly linked list, where every node in the linked list contains two pointers \u2018next\u2019 and \u2018prev\u2019 which point to the next node and previous node in the list respectively. All nodes have some positive integer value associated with them. Your task is to insert an integer value \u2018VAL\u2019 in the linked list at a given position \u2018K\u2019.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>The position given will always be less than or equal to the length of the linked list.\nAssume that the Indexing for the linked list starts from 0.\n</code></pre>\n\n<h5 id=\"example\">EXAMPLE:</h5>\n\n<pre><code>Input :\n\u2018K\u2019 = 3, \u2018VAL\u2019 = 4\nlist = [1, 2, 3]\nOutput: [1, 2, 3, 4]\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/1-16557.jpg\" alt=\"\"></p>\n\n<pre><code>The \u2018VAL\u2019 = 4, is inserted at end of the above doubly linked list.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line will contain the integer &#39;T&#39;, the number of test cases.\n\nThe first line of each test case contains the integers \u2018K\u2019, and \u2018VAL\u2019, denoting the position of insertion operation, and the value of the new node to be inserted in the list respectively.\n\nThe second line of each test case contains an array of positive integers denoting the nodes of the linked list.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case, print the doubly linked list after the insertion operation.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don&#39;t need to print anything. It has already been taken care of. Just implement the given function.\nHere, &#39;-1&#39; marks the end of the linked list.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= &#39;T&#39; &lt;= 10\n1 &lt;= Length of the list &lt;= 10^4\n0 &lt;= \u2018K\u2019 &lt;= Length of the list, where \u2018K\u2019 is 0-indexed.\n1 &lt;= &#39;VAL&#39; &lt;= 10^5\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n0 0\n1 2 3 4 -1\n5 5\n5 4 3 2 1 -1\n</code></pre>\n\n<h5 id=\"sample-outpu-t-1\">Sample Outpu.t 1:</h5>\n\n<pre><code>0 1 2 3 4\n5 4 3 2 1 5\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1 :</h5>\n\n<pre><code>For the first test case, \u2018K\u2019 = 0 denotes the starting index of the list, so the new element is inserted before the head of the list and the new head will be then a node with \u2018VAL\u2019 = 0\n\nHence, the resulting doubly linked list would be : 0 1 2 3 4\n\nFor the second test case, \u2018K\u2019 = 5 = size of the list denotes the new element to be inserted at the end of the list. \n\nHence, the resulting doubly linked list would be: 5 4 3 2 1 5\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n2 4\n10 11 5 -1\n1 5\n2 8 -1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>10 11 4 5\n2 5 8\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 12,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a doubly linked list where each node contains an integer value and pointers to the next and previous nodes, insert a new node with the value 'VAL' at the specified position 'K' (0-indexed). The position 'K' will always be valid (less than or equal to the length of the list).  Return the head of the modified list.",
                "constraints": [
                    "1 <= 'T' <= 10",
                    "1 <= Length of the list <= 10^4",
                    "0 <= \u2018K\u2019 <= Length of the list, where \u2018K\u2019 is 0-indexed.",
                    "1 <= 'VAL' <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "k = 3, val = 4, head = [1,2,3]",
                        "output": "[1, 2, 3, 4]",
                        "explanation": "The value 4 is inserted at index 3, which is the end of the list."
                    },
                    {
                        "input": "k = 0, val = 0, head = [1, 2, 3, 4]",
                        "output": "[0, 1, 2, 3, 4]",
                        "explanation": "The value 0 is inserted at index 0, which is the beginning of the list. 0 becomes the new head."
                    },
                    {
                        "input": "k = 5, val = 5, head = [5, 4, 3, 2, 1]",
                        "output": "[5, 4, 3, 2, 1, 5]",
                        "explanation": "The value 5 is inserted at index 5, which is the end of the list."
                    },
                    {
                        "input": "k = 2, val = 4, head = [10, 11, 5]",
                        "output": "[10, 11, 4, 5]",
                        "explanation": "The value 4 is inserted at index 2."
                    },
                    {
                        "input": "k = 1, val = 5, head = [2, 8]",
                        "output": "[2, 5, 8]",
                        "explanation": "The value 5 is inserted at index 1."
                    },
                    {
                        "input": "k = 0, val = 10, head = []",
                        "output": "[10]",
                        "explanation": "Empty list case. Value 10 becomes the new head."
                    },
                    {
                        "input": "k = 1, val = 10, head = [5]",
                        "output": "[5,10]",
                        "explanation": "Insert at end of a list with 1 element."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><strong>Can we iterate over the list?</strong></p>"
        ],
        "relatedTopics": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}