{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9790,
            "title": "Insertion Sort in Linked List",
            "titleSlug": "insertion-sort-in-linked-list_1090544",
            "content": "<h4 id=\"you-are-given-an-arbitrary-linked-list-consisting-of-n-nodes-having-integer-values-you-need-to-perform-insertion-sort-on-the-linked-list-and-print-the-final-list-in-sorted-order\">You are given an arbitrary linked list consisting of &#39;N&#39; nodes having integer values. You need to perform insertion sort on the linked list and print the final list in sorted order.</h4>\n\n<h4 id=\"in-other-words-you-are-given-a-singly-linked-list-you-need-to-perform-insertion-sort-on-it\">In other words, you are given a singly linked list, you need to perform insertion sort on it.</h4>\n\n<pre><code>Insertion Sort is a sorting algorithm that removes one element from the input data, finds the location it belongs within the sorted list and inserts it there. It repeats until no input elements remain.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format</h5>\n\n<pre><code>The first line of the input contains a single integer T, representing the number of test cases. \n\nThe first line of each test case contains space-separated integers denoting the elements of the singly linked list terminated by -1.\n\nHence, -1 would never be a list element.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format</h5>\n\n<pre><code>For each test case, print space-separated integers denoting the elements of the linked list after performing the insertion sort.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function. Also, try to sort the linked list in-place.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints</h5>\n\n<pre><code>1 &lt;= T &lt;= 50\n1 &lt;= N &lt;= 10^3\n0 &lt;= value of node &lt; 10^9\n\nTime Limit: 1sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1</h5>\n\n<pre><code>2\n4 2 1 3 -1\n19 3 6 1 5 -1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1</h5>\n\n<pre><code>1 2 3 4\n1 3 5 6 19\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1</h5>\n\n<pre><code>Test Case 1: The given linked list [4 2 1 3] after sorting becomes [1 2 3 4] which is the required output.\n\nTest Case 2: The given linked list is [ 19 3 6 1 5 ]. After sorting list become [ 1 3 5 6 19 ].\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2</h5>\n\n<pre><code>2\n5 3 1 2 4 -1  \n5 6 7 -1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2</h5>\n\n<pre><code>1 2 3 4 5\n5 6 7\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 10,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a singly linked list of 'N' nodes with integer values, perform insertion sort on it and return the sorted linked list. Insertion sort works by iteratively removing elements from the input list and inserting them into their correct position within the sorted portion of the list.",
                "constraints": [
                    "1 <= T <= 50",
                    "1 <= N <= 10^3",
                    "0 <= value of node < 10^9",
                    "Time Limit: 1sec"
                ],
                "testcases": [
                    {
                        "input": "4 2 1 3 -1",
                        "output": "1 2 3 4",
                        "explanation": "The given linked list [4, 2, 1, 3] after sorting becomes [1, 2, 3, 4]."
                    },
                    {
                        "input": "19 3 6 1 5 -1",
                        "output": "1 3 5 6 19",
                        "explanation": "The given linked list [19, 3, 6, 1, 5] after sorting becomes [1, 3, 5, 6, 19]."
                    },
                    {
                        "input": "5 3 1 2 4 -1",
                        "output": "1 2 3 4 5",
                        "explanation": null
                    },
                    {
                        "input": "5 6 7 -1",
                        "output": "5 6 7",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><i>Try to use pointers for manipulating the given list.</i></p>"
        ],
        "relatedTopics": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}