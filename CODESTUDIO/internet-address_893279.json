{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8662,
            "title": "Internet Address",
            "titleSlug": "internet-address_893279",
            "content": "<h4 id=\"we-know-that-the-address-of-the-internet-resource-has-format\">We know that the address of the Internet resource has format:</h4>\n\n<pre><code>&lt;protocol&gt;://&lt;domain&gt;.ru[/&lt;context&gt;]\nwhere,\n\n1. &lt;protocol&gt; can either be equal to &quot;http&quot; (without the quotes) or &quot;ftp&quot; (without the quotes)\n2. &lt;domain&gt; is a non-empty string, consisting of lowercase English letters,  \n3. The /&lt;context&gt; part may not be present. If it is present, then &lt;context&gt; is a non-empty string, consisting of lowercase English letters. \n</code></pre>\n\n<h4 id=\"if-string-isnt-present-in-the-address-then-the-additional-character-isnt-written-thus-the-address-has-either-two-characters-the-ones-that-go-before-the-domain-or-three-an-extra-one-in-front-of-the-context\">If string <context> isn&#39;t present in the address, then the additional character &quot;/&quot; isn&#39;t written. Thus, the address has either two characters &quot;/&quot; (the ones that go before the domain), or three (an extra one in front of the context).</h4>\n\n<h4 id=\"for-example\">For example,</h4>\n\n<pre><code>&#39;http://sun.ru/sunm&#39;, and &#39;ftp://guj.ru&#39; are the valid address.\n</code></pre>\n\n<h4 id=\"given-a-string-s-which-contains-all-lower-case-characters-without-any-punctuation-marks-you-have-to-find-out-and-print-the-internet-resource-address\">Given a string S, which contains all lower case characters without any punctuation marks (&quot;:&quot;,  &quot;/&quot;, &quot;.&quot;), you have to find out and print the internet resource address.</h4>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains an integer &#39;T&#39; which denotes the number of test cases or queries to be run.\n\nThe first line of each test case contains one string \u2018S\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each case, we need to print a string representing the internet address.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to input or print anything, and it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= |S| &lt;= 50\n\nTime limit: 1 sec.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\nhttpsunrusunm\nftphttpruxyz\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>http://sun.ru/sunm\nftp://http.ru/xyz\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1:</h5>\n\n<pre><code>Test case 1:\nFor the first test case of sample output 1, the string contains \u201chttp\u201d as the protocol, \u201csun\u201d as the domain, and \u201csunm\u201d as the context. So we put up all the three parts in their proper positions.\n\nTest case 2:   \nFor the second test case of sample output 1, the string contains \u201cftp\u201d as the protocol, \u201chttp\u201d as the domain, and \u201cxyz\u201d as the context. So we put up all the three parts in their proper positions.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\nftpftpftpru\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>ftp://ftpftp.ru\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-2\">Explanation of Sample Input 2:</h5>\n\n<pre><code>Test case 1:\nFor the first test case of sample output 2, the string contains \u201cftp\u201d as the protocol, \u201cftpftp\u201d as the domain. Note that we don\u2019t have a context here. So after putting the domain and \u201c.ru\u201d, we don\u2019t need to add the reverse slash \u201c/\u201d here.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 2,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string S containing lowercase English letters without punctuation marks, construct the internet resource address. The address format is `<protocol>://<domain>.ru[/<context>]`.  `<protocol>` can be 'http' or 'ftp'. `<domain>` and `<context>` are non-empty strings of lowercase English letters. The `/<context>` part is optional. If `<context>` is absent, the final '/' is also absent.",
                "constraints": [
                    "1 <= T <= 5 (Number of test cases)",
                    "1 <= |S| <= 50 (Length of the input string)",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "httpsunrusunm",
                        "output": "http://sun.ru/sunm",
                        "explanation": "The string contains 'http' as the protocol, 'sun' as the domain, and 'sunm' as the context. The address is formed by combining these components according to the specified format."
                    },
                    {
                        "input": "ftphttpruxyz",
                        "output": "ftp://http.ru/xyz",
                        "explanation": "The string contains 'ftp' as the protocol, 'http' as the domain, and 'xyz' as the context.  The address is assembled from these parts."
                    },
                    {
                        "input": "ftpftpftpru",
                        "output": "ftp://ftpftp.ru",
                        "explanation": "The string contains 'ftp' as the protocol and 'ftpftp' as the domain.  There is no context in this case, so no trailing '/' is added after '.ru'."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Use the concept of the substring.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}