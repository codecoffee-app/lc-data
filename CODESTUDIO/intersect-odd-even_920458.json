{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8871,
            "title": "Intersect Odd Even",
            "titleSlug": "intersect-odd-even_920458",
            "content": "<h4 id=\"you-are-given-two-sorted-linked-lists-of-length-n1-and-n2-respectively-your-task-is-to-create-a-linked-list-with-common-elements-such-that-all-common-odd-elements-are-before-common-even-elements\">You are given two sorted linked lists of length \u2018N1\u2019 and \u2018N2\u2019 respectively. Your task is to create a linked list with common elements such that all common odd elements are before common even elements.</h4>\n\n<h4 id=\"note-the-relative-order-inside-both-the-even-and-odd-groups-should-remain-as-it-was-in-the-input\">Note: The relative order inside both the even and odd groups should remain as it was in the input.</h4>\n\n<h4 id=\"you-just-need-to-return-the-head-of-the-new-linked-list-formed-dont-print-the-elements\">You just need to return the head of the new linked list formed, don&#39;t print the elements.</h4>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019, denoting the number of test cases. Then each test case follows.\n\nThe first line of each test case contains the elements of the first singly linked list separated by a single space.\n\nThe second line of each test case contains the elements of thesecond singly linked list separated by a single space.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print a single line containing a linked list with common elements such that all common odd elements are before common even elements.\n\nOutput of each test case will be printed on a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 5\n0 &lt;= N &lt;= 5 * 10 ^ 6\n1 &lt;= nodeVal[i] &lt;= 10 ^ 9\n\nTime Limit: 1 sec.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n1 2 3 4 5 7 8 -1\n2 4 4 7 8 10 -1\n1 2 7 10 20 23 -1\n2 7 23 -1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>7 2 4 8\n7 23 2\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1:</h5>\n\n<pre><code>In the first test case, the common elements are {2, 4, 7, 8 }. So the elements of the new linked list is 7 -&gt; 2 -&gt; 4 -&gt; 8 -&gt; NULL as odd will come before even maintaining the relative order.\n\nIn the second test case, the common elements are {2, 7, 23 }. So the elements of the new linked list is 7 -&gt; 23 -&gt; 2 -&gt; NULL as odd will come before even maintaining the relative order..\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n10 11 12 -1\n1 2 8 9 10 12 12 -1\n1 2 3 3 4 -1\n1 2 3 4 -1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>10 12\n1 3 2  4\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 1,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two sorted linked lists, create a new linked list containing only the elements present in both input lists. The new list should be ordered such that all common odd elements precede all common even elements, maintaining the original relative order within the odd and even groups.",
                "constraints": [
                    "1 <= T <= 5",
                    "0 <= N <= 5 * 10^6",
                    "1 <= nodeVal[i] <= 10^9",
                    "Time Limit: 1 sec."
                ],
                "testcases": [
                    {
                        "input": "1 2 3 4 5 7 8 -1\n2 4 4 7 8 10 -1",
                        "output": "7 2 4 8",
                        "explanation": "The common elements between the two lists are {2, 4, 7, 8}. Arranging them with odd elements before even elements, while preserving the initial relative order, results in 7 -> 2 -> 4 -> 8."
                    },
                    {
                        "input": "1 2 7 10 20 23 -1\n2 7 23 -1",
                        "output": "7 23 2",
                        "explanation": "The common elements are {2, 7, 23}. After ordering, we get 7 -> 23 -> 2."
                    },
                    {
                        "input": "10 11 12 -1\n1 2 8 9 10 12 12 -1",
                        "output": "11 10 12",
                        "explanation": "The common elements are {10,12}. After ordering, we get 10 -> 12."
                    },
                    {
                        "input": "1 2 3 3 4 -1\n1 2 3 4 -1",
                        "output": "1 3 2 4",
                        "explanation": "The common elements are {1, 2, 3, 4}. After ordering, we get 1 -> 3 -> 2 -> 4."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Since the linked list is sorted. Compare the elements using two pointers.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}