{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 16502,
            "title": "Invalid Transactions",
            "titleSlug": "invalid-transactions_3167809",
            "content": "<h4 id=\"you-are-the-manager-of-a-bank-you-have-seen-the-database-of-the-bank-and-have-seen-n-transactions-each-transaction-has-a-customer-id-transaction-amount-time-of-the-transaction-and-the-city-code-of-the-transaction-now-a-transaction-is-invalid-if-the-transaction-amount-exceeds-rs-1000-or-the-transaction-occurs-within-60-minutes-of-another-transaction-with-the-same-customer-id-but-in-a-different-city-find-the-number-of-invalid-transactions\">You are the manager of a bank. You have seen the database of the bank and have seen \u2018N\u2019 transactions. Each transaction has a customer id, transaction amount, time of the transaction, and the city code of the transaction. Now a transaction is invalid if the transaction amount exceeds Rs 1000 or the transaction occurs within 60 minutes of another transaction with the same customer id but in a different city. Find the number of invalid transactions.</h4>\n\n<h5 id=\"example\">Example:-</h5>\n\n<pre><code>N = 3\nTRANSACTIONS = [(1,20,100,1),(2,30,24,1),(1,60,90,2)]  [For the first transaction, customer_id is 1, the time of transaction is 20 minutes, the amount of transaction is Rs 100 and the city code where the transaction took place is 1, so the tuples are in the form (customer_id, time_fo_transaction, amount_of_transaction, city_code)].\n\nANSWER:- The invalid transactions are [(1,20,100,1),(1,60,90,2)] as the transactions are under the same customer id and have occurred in different cities within 60 minutes \n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 representing the number of test cases. Then each test case follows.\n\nThe first line of every test case contains an integer \u2018N\u2019 denoting the number of transactions.\n\nThe next \u2018N\u2019 lines of every test case contain four integers \u2018CUST_ID\u2019, \u2018TIME\u2019, \u2018AMOUNT\u2019, \u2018CITY\u2019 denoting the customer id, time of the transaction, amount of transaction, and the city code of transaction respectively of the ith transaction.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, return the invalid transactions from the list of transactions.\n\nThe output of each test case should be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You are not required to print anything, it has already been taken care of. Just implement the function.    \n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 10^3\n1 &lt;= CUST_ID &lt;=10^9\n1 &lt;= TIME &lt;= 10^9\n1 &lt;= AMOUNT &lt;= 10^9\n1 &lt;= CITY &lt;= 10^9\n\nTime Limit = 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n2\n1 20 800 1\n1 30 1200 1\n2\n2 30 1500 1\n1 20 500 2\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>1 30 1200 1\n2 30 1500 1\n</code></pre>\n\n<h5 id=\"explanation-for-sample-output-1\">Explanation for Sample Output 1 :</h5>\n\n<pre><code>In the first test case, the second transaction is invalid because the transaction amount exceeds Rs 1000. \n In the first test case, the first transaction is invalid because the transaction amount exceeds Rs 1000. \n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>1\n2\n1 30 1500 1\n1 20 500 2\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>1 30 1500 1\n1 20 500 2\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 3,
            "dislikes": "NA",
            "rephrased": {
                "body": "You are the manager of a bank and have access to the bank's transaction database. The database contains 'N' transactions, each with a customer ID, transaction amount, timestamp, and city code. A transaction is considered invalid if either of the following conditions are met:\n\n1.  The transaction amount exceeds Rs 1000.\n2.  The transaction occurs within 60 minutes of another transaction for the same customer ID, but in a different city.\n\nYour task is to identify and return all invalid transactions from the given list of transactions.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10^3",
                    "1 <= CUST_ID <= 10^9",
                    "1 <= TIME <= 10^9",
                    "1 <= AMOUNT <= 10^9",
                    "1 <= CITY <= 10^9",
                    "Time Limit = 1 sec"
                ],
                "testcases": [
                    {
                        "input": "2\n2\n1 20 800 1\n1 30 1200 1\n2\n2 30 1500 1\n1 20 500 2",
                        "output": "1 30 1200 1\n2 30 1500 1",
                        "explanation": "Test Case 1:\nTransaction (1, 30, 1200, 1) is invalid because the amount 1200 exceeds 1000.\n\nTest Case 2:\nTransaction (2, 30, 1500, 1) is invalid because the amount 1500 exceeds 1000."
                    },
                    {
                        "input": "1\n2\n1 30 1500 1\n1 20 500 2",
                        "output": "1 30 1500 1\n1 20 500 2",
                        "explanation": "Transaction (1, 30, 1500, 1) is invalid because the amount 1500 exceeds 1000.\nTransaction (1, 20, 500, 2) is invalid because it occurs within 60 minutes of another transaction (1, 30, 1500, 1) for the same customer in a different city."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><strong>Check every pair of transactions for validity.</strong></p>",
            "<p><strong>Hash a transaction with its customer id and time of transaction.</strong></p>"
        ],
        "relatedTopics": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}