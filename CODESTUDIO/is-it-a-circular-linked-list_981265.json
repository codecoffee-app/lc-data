{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9235,
            "title": "Is it a Circular Linked List?",
            "titleSlug": "is-it-a-circular-linked-list_981265",
            "content": "<h4 id=\"you-are-given-a-singly-linked-list-of-integers-you-have-to-find-if-the-given-linked-list-is-circular-or-not\">You are given a Singly Linked List of integers. You have to find if the given linked list is circular or not.</h4>\n\n<h4 id=\"a-circular-linked-list-is-a-sequence-of-elements-in-which-every-element-has-a-link-to-its-next-element-in-the-sequence-and-the-last-element-has-a-link-to-the-first-element-this-means-that-circular-linked-list-is-similar-to-the-single-linked-list-except-that-the-last-node-points-to-the-first-node-in-the-list\">A circular linked list is a sequence of elements in which every element has a link to its next element in the sequence and the last element has a link to the first element. This means that circular linked list is similar to the single linked list except that the last node points to the first node in the list.</h4>\n\n<p><img src=\"https://files.codingninjas.in/cll-6381.png\" alt=\"image\"></p>\n\n<h5 id=\"input-format\">Input Format</h5>\n\n<pre><code>The first line of input contains a single integer T, representing the number of test cases or queries to be run. \n\nThe first line of each test case contains the elements of the circular linked list separated by a single space and terminated by -1. Hence, -1 would never be a list element.\n\nThe second line contains a boolean value \u2018val\u2019, if \u2018val\u2019 is 1 then the given list is circular.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format</h5>\n\n<pre><code>For each test case, print \u201cTrue\u201d if the given linked list is circular, else print \u201cFalse\u201d.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 5 * 10^4\n-10^9 &lt;= data &lt;= 10^9 and data != -1\n0 &lt;= val &lt;= 1\n\nWhere &#39;N&#39; is the number of nodes in the linked list, \u2018data\u2019 represents the value of the nodes of the list.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1</h5>\n\n<pre><code>3\n1 2 3 4 -1\n1\n8 9 8 -1\n0\n4 -1\n1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1</h5>\n\n<pre><code>True\nFalse\nTrue\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1</h5>\n\n<pre><code>In the 1st test case, the given list is circular.\nIn the 2nd test case, the given list is not circular.\nIn the 3rd test case,  the given list is circular.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2</h5>\n\n<pre><code>2\n3 2 1 -1\n1\n1 1 1 -1\n0\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2</h5>\n\n<pre><code>True\nFalse\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 6,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a singly linked list of integers, determine if it is circular. A circular linked list is one where the last node points back to the first node. You are provided with the linked list elements and a boolean value indicating whether the list should be circular or not. Determine if the provided list matches the circularity indication.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 5 * 10^4",
                    "-10^9 <= data <= 10^9 and data != -1",
                    "0 <= val <= 1",
                    "Where 'N' is the number of nodes in the linked list, \u2018data\u2019 represents the value of the nodes of the list.",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "1 2 3 4 -1\n1",
                        "output": "True",
                        "explanation": "The input linked list is 1 -> 2 -> 3 -> 4, and the circularity flag is set to 1 (True).  Since the list is expected to be circular and the input confirms it, the output is True."
                    },
                    {
                        "input": "8 9 8 -1\n0",
                        "output": "False",
                        "explanation": "The input linked list is 8 -> 9 -> 8, and the circularity flag is set to 0 (False). Since the list is expected to be non-circular and the input confirms it, the output is False."
                    },
                    {
                        "input": "4 -1\n1",
                        "output": "True",
                        "explanation": "The input linked list is 4, and the circularity flag is set to 1 (True). Since the list is expected to be circular and the input confirms it, the output is True."
                    },
                    {
                        "input": "3 2 1 -1\n1",
                        "output": "True",
                        "explanation": "The input linked list is 3 -> 2 -> 1, and the circularity flag is set to 1 (True).  Since the list is expected to be circular and the input confirms it, the output is True."
                    },
                    {
                        "input": "1 1 1 -1\n0",
                        "output": "False",
                        "explanation": "The input linked list is 1 -> 1 -> 1, and the circularity flag is set to 0 (False). Since the list is expected to be non-circular and the input confirms it, the output is False."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you solve this problem using recursion?</p>",
            "<p>Traverse the list until you reach the end or reach the head again.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}