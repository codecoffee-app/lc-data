{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 11184,
            "title": "isPath",
            "titleSlug": "ispath_1380893",
            "content": "<h4 id=\"ninja-is-developing-robotics-delivery-they-have-a-robot-standing-at-the-top-left-corner-0-0-of-the-matrix-of-size-n-n-it-has-to-deliver-the-parcel-to-the-given-x-y-coordinate-there-are-also-obstacles-at-random-points-in-the-matrix-the-robot-cannot-enter-the-coordinate-with-an-obstacle-it-can-only-travel-only-on-flat-coordinates-the-obstacle-is-denoted-by-0-and-the-flat-is-denoted-by-1-matrix-x-y-is-denoted-by-5-you-have-to-return-true-if-it-is-possible-to-deliver-the-package-to-the-given-coordinate-else-return-false-given-robot-can-move-downwards-and-rightwards-from-the-given-coordinate-and-cannot-enter-over-the-obstacle-and-cannot-move-outside-the-matrix-matrix-0-0-is-always-1\">Ninja is developing robotics delivery. They have a robot standing at the top left corner(0,0) of the matrix of size N*N. It has to deliver the parcel to the given (x,y) coordinate. There are also obstacles at random points in the matrix. The robot cannot enter the coordinate with an obstacle. It can only travel only on flat coordinates. The obstacle is denoted by 0 and the flat is denoted by 1. Matrix[ x ] [ y ] is denoted by 5. You have to return true if it is possible to deliver the package to the given coordinate Else return false. Given robot can move downwards and rightwards from the given coordinate and cannot enter over the obstacle and cannot move outside the matrix. Matrix[ 0 ][ 0 ] is always 1.</h4>\n\n<h5 id=\"for-example\">For Example :</h5>\n\n<pre><code>Corresponding to the given matrix:-\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/untitled-diagram-6-8756.png\" alt=\"\"></p>\n\n<pre><code>From (0,0) coordinate robot cannot move to (0,1) \ncoordinate since there is obstacle on it.\nSo to reach (2,2) The path is (0,0) then to (1,0) then to \n(2,0) then to (2,1) and finally (2,2).\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases.\nThe first line of each test case contains three single-spaced integers N,x,y representing the length and width of the matrix and the coordinates of the delivery location.\nThe next N line contains N Single-spaced elements (0 or 1 or 5). \n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, return true if there is a path from (0,0) to the (x,y), otherwise, return false.\n\nOutput for each query is printed in a separate line.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= &#39;T&#39; &lt;= 10\n1 &lt;= &#39;n&#39; &lt;= 100\nmatrix[ i ][ j ] = {0,1,5}\n\nwhere &#39;T&#39; denotes the number of test cases, &#39;n&#39; denotes the length and width of the matrix, and matrix[i][j] denotes the values at the ith row and jth column.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n4 2 2\n1 0 0 0\n0 0 0 0\n0 0 5 1\n1 1 1 1\n3 2 2\n1 1 1\n1 0 1\n0 0 5\n</code></pre>\n\n<h5 id=\"sample-output1\">Sample Output1 :</h5>\n\n<pre><code>false\ntrue\n</code></pre>\n\n<h4 id=\"explanantion\">Explanantion :</h4>\n\n<pre><code>For First TestCase there is no path from (0,0) to (2,2).\n\nFor Second TestCase one of the path is :-\nFrom (0,0) move right -&gt; (0,1)\nFrom (0,1) move right -&gt;(0,2)\nFrom (0,2) move down -&gt;(1,2)\nFrom (1,2) move dowm -&gt;(2,2).\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n4 0 1\n1 5 1 1 \n1 0 1 1 \n0 1 1 1 \n1 0 1 0 \n4 0 3\n1 0 0 5 \n1 0 0 1 \n1 1 1 1 \n0 0 1 0 \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>true\nfalse\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 8,
            "dislikes": "NA",
            "rephrased": {
                "body": "A robot starts at the top-left corner (0, 0) of an N x N grid and needs to deliver a package to coordinates (x, y).  The grid contains obstacles (represented by 0) and flat surfaces (represented by 1). The target delivery location is represented by 5. The robot can only move downwards or rightwards on flat surfaces. Determine if there is a valid path from (0, 0) to (x, y) avoiding obstacles and staying within the grid boundaries. The starting position (0,0) is always a flat surface.",
                "constraints": [
                    "1 <= 'T' <= 10",
                    "1 <= 'n' <= 100",
                    "matrix[ i ][ j ] = {0,1,5}"
                ],
                "testcases": [
                    {
                        "input": "n = 4, x = 2, y = 2, matrix = [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 5, 1], [1, 1, 1, 1]]",
                        "output": "false",
                        "explanation": "There is no path from (0,0) to (2,2) due to the obstacles blocking all possible routes."
                    },
                    {
                        "input": "n = 3, x = 2, y = 2, matrix = [[1, 1, 1], [1, 0, 1], [0, 0, 5]]",
                        "output": "true",
                        "explanation": "One possible path is (0,0) -> (0,1) -> (0,2) -> (1,2) -> (2,2)."
                    },
                    {
                        "input": "n = 4, x = 0, y = 1, matrix = [[1, 5, 1, 1], [1, 0, 1, 1], [0, 1, 1, 1], [1, 0, 1, 0]]",
                        "output": "true",
                        "explanation": "The target is at (0,1) and reachable directly from (0,0)."
                    },
                    {
                        "input": "n = 4, x = 0, y = 3, matrix = [[1, 0, 0, 5], [1, 0, 0, 1], [1, 1, 1, 1], [0, 0, 1, 0]]",
                        "output": "false",
                        "explanation": "There's no path to (0,3) as (0,1) and (0,2) are obstacles and robot can only move right and down."
                    },
                    {
                        "input": "n = 1, x = 0, y = 0, matrix = [[5]]",
                        "output": "true",
                        "explanation": "The target is at (0,0) which is the starting point, so a path exists."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Use Breadth First Search traversal.</p>",
            "<p>Can we use BFS?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Breadth-first Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}