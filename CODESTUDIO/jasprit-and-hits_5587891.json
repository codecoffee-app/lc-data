{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 22204,
            "title": "Jasprit and Hits",
            "titleSlug": "jasprit-and-hits_5587891",
            "content": "<h4 id=\"jasprit-loves-playing-cricket-he-wants-to-be-a-part-of-the-indian-cricket-team-and-become-the-best-pacer-for-india-so-he-started-practicing-every-day-and-took-guidance-from-his-coach-every-day-to-measure-how-he-is-improving-he-maintained-the-count-of-times-he-hits-the-stumps-in-a-day\">Jasprit loves playing cricket. He wants to be a part of the Indian cricket team and become the best pacer for India. So he started practicing every day and took guidance from his coach. Every day to measure how he is improving, he maintained the count of times he hits the stumps in a day.</h4>\n\n<h4 id=\"n-days-have-been-passed-and-its-track-is-denoted-by-the-array-arr-and-to-track-his-improvement-his-coach-will-also-ask-him-the-average-count-of-hits-of-stumps-per-day-for-a-particular-range-of-days-i-e-l-to-r-to-him-meanwhile-he-will-also-add-the-count-of-time-he-hits-the-stumps-in-the-ongoing-days\">\u2018N\u2019 days have been passed and its track is denoted by the array \u2018ARR\u2019, and to track his improvement, his coach will also ask him the average count of hits of stumps per day for a particular range of days (i.e. \u2018L\u2019 to \u2018R\u2019) to him. Meanwhile, he will also add the count of time he hits the stumps in the ongoing days.</h4>\n\n<h4 id=\"jasprit-is-not-very-good-at-maths-so-being-his-friend-he-asked-you-to-help-him-to-add-the-count-of-times-he-hit-the-stumps-in-the-day-as-well-as-give-the-average-count-of-hits-of-stumps-per-day-for-a-particular-range-of-days-asked-by-his-coach\">Jasprit is not very good at maths, So being his friend he asked you to help him to add the count of times he hit the stumps in the day as well as give the average count of hits of stumps per day for a particular range of days asked by his coach.</h4>\n\n<h4 id=\"there-will-be-a-q-number-of-such-queries-where-each-query-will-be-either-one-of-the-following-types\">There will be a \u2018Q\u2019 number of such queries where each query will be either one of the following types:</h4>\n\n<h4 id=\"1-add-the-stumps-hit-by-jasprit-i-e-x-to-the-array-arr-denoted-by-query-number-1\">1) Add the stumps hit by Jasprit i.e. \u2018X\u2019 to the array \u2018ARR\u2019, denoted by query number \u20181\u2019.</h4>\n\n<h4 id=\"2-give-the-average-of-hits-of-stumps-per-day-for-days-ranging-from-l-r-asked-by-his-coach-denoted-by-query-number-2\">2) Give the average of hits of stumps per day for days ranging from \u2018[L, R]\u2019 asked by his coach denoted by query number \u20182\u2019.</h4>\n\n<h4 id=\"can-you-help-him-with-this-problem\">Can you help him with this problem?.</h4>\n\n<h4 id=\"note-the-average-here-means-the-sum-of-all-elements-in-the-selected-range-divided-by-the-number-of-elements-rounded-down-i-e-lets-suppose-sum-10-and-number-of-elements-4-then-the-average-will-be-10-4-2-5-which-when-rounded-down-gives-2\">NOTE: The average here means the sum of all elements in the selected range divided by the number of elements rounded down, i.e. let&#39;s suppose \u2018sum\u2019 = 10 and \u2018number of elements\u2019 = 4, then the average will be = 10/4 = 2.5, which when rounded down gives 2.</h4>\n\n<h4 id=\"the-array-arr-is-0-based-indexing-and-queries-of-type-2-are-represented-in-1-based-indexing\">The array \u2018ARR\u2019 is 0-based indexing and queries of type 2 are represented in 1-based indexing.</h4>\n\n<h4 id=\"the-answer-to-the-query-of-type-2-will-be-rounded-down-to-an-integer\">The answer to the query of type 2 will be rounded down to an integer.</h4>\n\n<h5 id=\"example\">EXAMPLE :</h5>\n\n<pre><code>Input: \u2018N\u2019 = 2, \u2018Q\u2019 = 2, \u2018ARR\u2019 = [7, 5], \u2018QUERIES\u2019 = [[1, 8], [2, 1, 3]].\n\nOutput: 6\nIn this case, the array \u2018ARR\u2019 after the first query will be \u2018ARR\u2019 = [7, 5, 8].\nIn the second query, the average will be = the sum of hits from day 1 to day 3 divided by 3\ni.e. (7+5+8)/3 = 20/3 = 6.6666\u2026 when rounded gives 6. Hence the output will be 6.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line will contain the integer \u2018T\u2019, the number of test cases.\n\nThe first line of each test case contains two integers, \u2018N\u2019 and \u2018Q\u2019 separated by spaces.\n\nFollowed by a line containing space-separated \u2018N\u2019 non-negative integers, denoting the elements of the array \u2018ARR\u2019.\n\nFollowed by \u2018Q\u2019 lines, each of the following types:\n(1) If its query \u20181\u2019, it will consist of two space-separated numbers, \u20181\u2019 and \u2018X\u2019, where \u2018X\u2019 denotes the number to be added at the end of the existing array \u2018ARR\u2019.\n(2) If its query \u20182\u2019, it will consist of three space-separated numbers, \u20182\u2019 and \u2018L\u2019 and \u2018R\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case, print the average count of hits of stumps per day for every query of type \u20182\u2019.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don&#39;t need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= \u2018T\u2019 &lt;= 10\n1 &lt;= \u2018N\u2019 &lt;= 10^5\n1 &lt;= \u2018Q\u2019 &lt;= 10^5\n0 &lt;= \u2018ARR[i]\u2019 &lt;= 10^4\n0 &lt;= \u2018X\u2019 &lt;= 10^4\n1 &lt;= \u2018L\u2019 &lt;=  \u2018R&#39; &lt;= Total number of elements in the array \u2018ARR\u2019, before this operation.\nIt is guaranteed that sum of \u2018N\u2019 over all test cases is &lt;= 10^5\nIt is guaranteed that sum of \u2018N\u2019 over all test cases is &lt;= 10^5\nIt is guaranteed that there will be atleast one query of type \u20182\u2019.\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n5 3\n1 4 5 8 3\n1 0\n2 2 5\n2 6 6\n1 2\n0\n2 1 1\n1 5\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>5 0\n0\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1 :</h5>\n\n<pre><code>For the first test case,\nAfter the first query, the array \u2018ARR\u2019 = [1, 4, 5, 8, 3, 0].\nIn the second query, the sum = 4+5+8+3 = 20 and number of elements is 4, hence the average = 20/4 = 5.\nIn the third query, the sum = 0 and number of elements is 1, hence the average = 0/1 = 0.\n\nHence, the output will be: 5 0\n\nFor the second test case,\nIn the first query, the sum = 0 and number of elements is 1, hence the average = 0/1 = 0.\nAfter the second query, the array \u2018ARR\u2019 = [0, 5].\n\nHence, the output will be: 0\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n1 4\n5\n1 2\n2 1 2\n1 3\n2 2 3\n5 1\n1 2 3 4 5\n2 1 5\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>3 2\n3\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 5,
            "dislikes": "NA",
            "rephrased": {
                "body": "Jasprit is practicing cricket to join the Indian team. He tracks the number of times he hits the stumps each day.  Given an initial array representing Jasprit's stump hits over 'N' days, and a series of 'Q' queries, your task is to help Jasprit's coach monitor his progress.  There are two types of queries:\n\n1. **Add:** Add the number of stump hits 'X' to the end of the array.\n2. **Average:** Calculate the average number of stump hits within a given range '[L, R]' (inclusive) and return the integer part of this average.",
                "constraints": [
                    "1 <= \u2018T\u2019 <= 10",
                    "1 <= \u2018N\u2019 <= 10^5",
                    "1 <= \u2018Q\u2019 <= 10^5",
                    "0 <= \u2018ARR[i]\u2019 <= 10^4",
                    "0 <= \u2018X\u2019 <= 10^4",
                    "1 <= \u2018L\u2019 <=  \u2018R' <= Total number of elements in the array \u2018ARR\u2019, before this operation.",
                    "It is guaranteed that sum of \u2018N\u2019 over all test cases is <= 10^5",
                    "It is guaranteed that sum of \u2018N\u2019 over all test cases is <= 10^5",
                    "It is guaranteed that there will be atleast one query of type \u20182\u2019.",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "n = 5, q = 3, arr = [1, 4, 5, 8, 3], queries = [[1, 0], [2, 2, 5], [2, 6, 6]]",
                        "output": "[5, 0]",
                        "explanation": "After the first query (add 0), the array becomes arr = [1, 4, 5, 8, 3, 0].\nThe second query (average from 2 to 5) calculates the average of [4, 5, 8, 3], which is (4+5+8+3)/4 = 20/4 = 5.\nThe third query (average from 6 to 6) calculates the average of [0], which is 0/1 = 0."
                    },
                    {
                        "input": "n = 1, q = 4, arr = [5], queries = [[1, 2], [2, 1, 2], [1, 3], [2, 2, 3]]",
                        "output": "[3, 2]",
                        "explanation": "The first query adds 2, making arr = [5, 2].\nThe second query calculates the average from 1 to 2, (5+2)/2 = 7/2 = 3.\nThe third query adds 3, making arr = [5, 2, 3].\nThe fourth query calculates the average from 2 to 3, (2+3)/2 = 5/2 = 2."
                    },
                    {
                        "input": "n = 5, q = 1, arr = [1, 2, 3, 4, 5], queries = [[2, 1, 5]]",
                        "output": "[3]",
                        "explanation": "The query calculates the average from 1 to 5, (1+2+3+4+5)/5 = 15/5 = 3."
                    },
                    {
                        "input": "n = 0, q = 1, arr = [], queries = [[1,5]]",
                        "output": "[]",
                        "explanation": "This testcase is not possible as per problem constraints (n >= 1), but if it were allowed, and if query type 2 was present with valid L and R within (extended) array, it should return the corresponding rounded-down average"
                    },
                    {
                        "input": "n = 1, q = 2, arr = [0], queries = [[2, 1, 1], [1, 5]]",
                        "output": "[0]",
                        "explanation": "The first query finds the average from index 1 to 1, which is only the first element, which is 0.  So, the average is 0/1 = 0.\nThe second query adds 5 to the array, so the array is now [0, 5]."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><strong>Can we try to add the elements in a dynamic way and then find the average?.</strong></p>",
            "<p><strong>Can we do some preprocessing before iterating on the queries, and then answer queries in constant time?.</strong></p>"
        ],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}