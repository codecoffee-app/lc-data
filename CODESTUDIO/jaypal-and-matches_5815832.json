{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 22591,
            "title": "Jaypal and Matches.",
            "titleSlug": "jaypal-and-matches_5815832",
            "content": "<h4 id=\"jaypal-loves-watching-cricket-a-lot-and-there-are-n-matches-scheduled-for-next-year-he-knows-the-amount-of-happiness-he-will-get-is-the-sum-of-all-the-matches-he-watched-the-happiness-amount-for-each-match-is-denoted-by-the-array-arr\">Jaypal loves watching cricket a lot and there are \u2018N\u2019 matches scheduled for next year. He knows the amount of happiness he will get is the sum of all the matches he watched. The happiness amount for each match is denoted by the array \u2018ARR\u2019.</h4>\n\n<h4 id=\"but-the-problem-is-that-he-can-t-watch-every-match-because-he-has-to-prepare-for-the-entrance-exams-next-year-so-he-decided-if-he-watches-3-matches-in-a-row-then-he-will-not-watch-the-next-match\">But the problem is that he can\u2019t watch every match because he has to prepare for the entrance exams next year, so he decided if he watches \u20183\u2019 matches in a row, then he will not watch the next match.</h4>\n\n<h4 id=\"for-e-g-if-there-are-4-matches-he-can-watch-matches-in-the-following-possible-orders\">For e.g. if there are 4 matches, he can watch matches in the following possible orders:</h4>\n\n<h4 id=\"0-1-2-0-1-3-0-2-3-0-1-0-2-0-3-0-1-2-3-1-2-1-3-1-2-3-2-3\">[0, 1, 2], [0, 1, 3], [0, 2, 3], [0, 1], [0, 2], [0, 3], [0], [1, 2, 3], [1, 2], [1, 3], [1], [2, 3], [2], [3].</h4>\n\n<h4 id=\"so-now-he-wants-to-pick-such-a-sequence-that-gives-him-maximum-happiness-as-he-has-to-prepare-for-his-entrance-exams-and-it-would-waste-a-lot-of-his-time-to-find-the-best-order-he-thought-to-just-find-the-maximum-happiness-he-can-achieve-by-selecting-any-order\">So now he wants to pick such a sequence that gives him maximum happiness, as he has to prepare for his entrance exams and it would waste a lot of his time to find the best order he thought to just find the maximum happiness he can achieve by selecting any order.</h4>\n\n<h4 id=\"he-asked-for-your-help-to-find-the-maximum-happiness-he-can-achieve-can-you-help-him\">He asked for your help to find the maximum happiness he can achieve. Can you help him?.</h4>\n\n<h5 id=\"example\">EXAMPLE :</h5>\n\n<pre><code>Input: \u2018N\u2019 = 4, \u2018ARR\u2019 = [8, 6, 6, 20]\n\nOutput: 34\nIn this case, the maximum possible happiness can be achieved by selecting the order: [0, 1, 3] or [0, 2, 3]. The sum of happiness for both order will be 8 + 6 + 20 = 34.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line will contain the integer \u2018T\u2019, the number of test cases.\n\nEach test case consists of two lines.\n\nThe first line of input contains one integer, \u2018N\u2019, the number of matches scheduled.\n\nFollowed by a line containing space-separated \u2018N\u2019 positive integers, denoting the elements of the array \u2018ARR\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case, print the maximum achievable total happiness.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don&#39;t need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= \u2018T\u2019 &lt;= 10\n1 &lt;= \u2018N\u2019 &lt;= 10^5\n0 &lt;= \u2018ARR[i]\u2019 &lt;= 10^4\nIt is guaranteed that sum of \u2018N\u2019 over all test cases is &lt;= 10^5\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n5\n10 8 5 7 3\n8\n3 1 3 3 3 5 1 3\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>28\n18\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1 :</h5>\n\n<pre><code>For the first test case, the best order to watch matches is: [0, 1, 3, 4].\n\nHence, the output will be: 28\n\nFor the second test case, one of the best orders to watch matches is: [0, 1, 2, 4, 5, 7].\n\nHence, the output will be: 18\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n5\n1 1 1 1 1\n8\n99 100 1000 865 777 696 444 1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>4\n3186\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -10,
            "dislikes": "NA",
            "rephrased": {
                "body": "Jaypal loves cricket and wants to maximize his happiness from watching matches scheduled over the next year. There are 'N' matches, and each match 'i' has an associated happiness value 'ARR[i]'. However, due to entrance exam preparations, he can't watch every match. The constraint is: if he watches three consecutive matches, he must skip the immediately following match. The goal is to find the maximum total happiness Jaypal can achieve by selecting a valid set of matches to watch.",
                "constraints": [
                    "1 <= \u2018T\u2019 <= 10",
                    "1 <= \u2018N\u2019 <= 10^5",
                    "0 <= \u2018ARR[i]\u2019 <= 10^4",
                    "It is guaranteed that the sum of \u2018N\u2019 over all test cases is <= 10^5",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "5\n10 8 5 7 3",
                        "output": "28",
                        "explanation": "The optimal order to maximize happiness is [0, 1, 3, 4], yielding a total happiness of 10 + 8 + 7 + 3 = 28."
                    },
                    {
                        "input": "8\n3 1 3 3 3 5 1 3",
                        "output": "18",
                        "explanation": "One possible optimal order is [0, 1, 2, 4, 5, 7], resulting in a happiness of 3 + 1 + 3 + 3 + 5 + 3 = 18."
                    },
                    {
                        "input": "5\n1 1 1 1 1",
                        "output": "4",
                        "explanation": null
                    },
                    {
                        "input": "8\n99 100 1000 865 777 696 444 1",
                        "output": "3186",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><strong>Can we try out all possible ways to watch matches and pick the order that gives maximum total happiness?</strong></p>",
            "<p><strong>Are there any subproblems involved?</strong></p>",
            "<p><strong>What is the number of indices whose maximum total happiness value is required to calculate the \u2018DP\u2019 value for any index \u2018i\u2019?</strong></p>"
        ],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}