{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9140,
            "title": "Job Scheduling Problem",
            "titleSlug": "job-scheduling-problem_975495",
            "content": "<h4 id=\"you-are-given-a-list-of-n-jobs-which-has-to-be-performed-each-job-is-associated-with-a-deadline-and-a-profit-if-the-job-is-completed-before-the-deadline-each-job-takes-one-unit-of-time-to-complete\">You are given a list of \u2018N\u2019 jobs which has to be performed. Each job is associated with a deadline and a profit if the job is completed before the deadline. Each job takes one unit of time to complete.</h4>\n\n<h4 id=\"you-are-required-to-schedule-the-jobs-in-such-a-way-that-total-profit-will-be-maximized-only-one-job-can-be-scheduled-at-a-time-and-jobs-can-be-scheduled-at-only-integer-moments-of-time-greater-than-or-equal-to-one\">You are required to schedule the jobs in such a way that total profit will be maximized. Only one job can be scheduled at a time, and jobs can be scheduled at only integer moments of time greater than or equal to one.</h4>\n\n<h5 id=\"for-example\">For example-</h5>\n\n<pre><code>Let there be three jobs \u2018A\u2019, \u2018B\u2019, and \u2018C\u2019-\n\u2022Profit and deadline associated with job \u2018A\u2019 being 20 and 1.\n\u2022Profit and deadline associated with job \u2018B\u2019 being 30 and 2.\n\u2022Profit and deadline associated with job \u2018C\u2019 being 40 and 2.\n\nWe will perform job \u2018C\u2019 at time t = 1 and job \u2018B\u2019 at time t = 2. The total profit will be 70. There is no other sequence of jobs which can fetch us a better overall profit. \n</code></pre>\n\n<h5 id=\"input-format\">Input Format</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases to run. Then the test case follows.\n\nThe first line of each test case contains a single space-separated integers \u2018N\u2019, denoting the total number of jobs.\n\nThe next \u2018N\u2019 lines contain two space-separated integers, &#39;deadline[i]&#39; and &#39;profit[i]&#39; denoting the deadline and the profit associated with the &#39;i-th&#39; job.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print the maximum profit after scheduling all the jobs in an optimal manner.\n\nOutput for each test case will be printed in a new line. \n</code></pre>\n\n<h5 id=\"note\">Note</h5>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= N &lt;= 10 ^ 3\n1 &lt;= deadline[i] &lt;= N\n1 &lt;= profit[i] &lt;= 10 ^ 9\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n3\n2 10\n1 50\n2 30\n3\n1 20\n2 30\n2 40\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>80\n70\n</code></pre>\n\n<h4 id=\"explanation-for-sample-1\">Explanation for Sample 1:</h4>\n\n<pre><code>The optimal job scheduling for the first test case will be-\n\n\u2022Job 2 at time t = 1\n\u2022Job 3 at time t = 2\n\nThe total profit, in this case, will be 50 + 30 = 80.\n\nThe optimal job scheduling for the second test case will be-\n\n\u2022Job 2 at time t = 1\n\u2022Job 3 at time t = 2\n\nThe total profit, in this case, will be 40 + 30 = 70.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>1\n5\n2 100\n1 19\n2 27\n1 25\n3 15\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>142\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 8,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a list of N jobs, each with a deadline and a profit, schedule the jobs to maximize the total profit. Each job takes one unit of time to complete, and only one job can be scheduled at a time. Jobs can only be scheduled at integer moments of time greater than or equal to one.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= N <= 10 ^ 3",
                    "1 <= deadline[i] <= N",
                    "1 <= profit[i] <= 10 ^ 9",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "3\n2 10\n1 50\n2 30",
                        "output": "80",
                        "explanation": "Schedule Job 2 at time t=1 (profit 50) and Job 3 at time t=2 (profit 30). Total profit: 50 + 30 = 80."
                    },
                    {
                        "input": "3\n1 20\n2 30\n2 40",
                        "output": "70",
                        "explanation": "Schedule Job 3 at time t=1 (profit 40) and Job 2 at time t=2 (profit 30). Total profit: 40 + 30 = 70."
                    },
                    {
                        "input": "5\n2 100\n1 19\n2 27\n1 25\n3 15",
                        "output": "142",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Sort the jobs according to their profits and try to find a greedy solution.</p>",
            "<p>Can we optimize the above approach by using some data structures like a set?&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}