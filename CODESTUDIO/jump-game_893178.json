{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8622,
            "title": "Jump Game",
            "titleSlug": "jump-game_893178",
            "content": "<h4 id=\"you-have-been-given-an-array-arr-of-n-integers-you-have-to-return-the-minimum-number-of-jumps-needed-to-reach-the-last-index-of-the-array-i-e-n-1\">You have been given an array <em><strong>&#39;ARR&#39;</strong></em> of <em><strong>\u2018N\u2019</strong></em> integers. You have to return the minimum number of jumps needed to reach the last index of the array i.e \u2018N - 1\u2019.</h4>\n\n<p><br></p>\n\n<h4 id=\"from-index-i-we-can-jump-to-an-index-i-k-such-that-1-k-arr-i\">From index \u2018i\u2019, we can jump to an index \u2018i + k\u2019 such that 1&lt;= \u2018k\u2019 &lt;= ARR[i] .</h4>\n\n<p><br></p>\n\n<h4 id=\"arr-i-represents-the-maximum-distance-you-can-jump-from-the-current-index\">&#39;ARR[i]&#39; represents the maximum distance you can jump from the current index.</h4>\n\n<p><br></p>\n\n<h4 id=\"if-it-is-not-possible-to-reach-the-last-index-return-1\">If it is not possible to reach the last index, return -1.</h4>\n\n<p><br></p>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>Consider 0-based indexing.\n</code></pre>\n\n<h5 id=\"example\">Example:</h5>\n\n<pre><code>Consider the array 1, 2, 3, 4, 5, 6 \nWe can Jump from index 0 to index 1\nThen we jump from index 1 to index 2\nThen finally make a jump of 3 to reach index N-1\n\nThere is also another path where\nWe can Jump from index 0 to index 1\nThen we jump from index 1 to index 3\nThen finally make a jump of 2 to reach index N-1\n\nSo multiple paths may exist but we need to return the minimum number of jumps in a path to end which here is 3.\n</code></pre>\n\n<h5 id=\"input-format\">Input format:</h5>\n\n<pre><code>The first line contains an integer \u2018N\u2019 denoting the number of elements in the given sequence. \n\nThe second line contains \u2018N\u2019 space-separated integers denoting the elements in the sequence.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>Print a single line containing a single integer denoting the minimum number of jumps required to reach the last index.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>5\n2 3 1 1 4\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>2\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of sample input 1 :</h5>\n\n<p><img src=\"https://files.codingninjas.in/utc-1-6017.jpg\" alt=\"add-image\"></p>\n\n<pre><code>Consider the above figure:\nWe are initially at index 0, ARR[0] is 2 which represents we can jump a maximum of 2 steps. \n\nWe jump 1 index from 0 to 1. At index 1, &#39;ARR[1]&#39; is 3 which represents we can jump a maximum of 3 steps so we jump 3 indices from 1 to 4 to reach the last index. Hence we return 2.\n\nIt can be proved that the end can&#39;t be reached in less than 2.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>5\n3 2 1 0 1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>-1\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= N &lt;= 10 ^ 4\n1 &lt;= ARR[i] &lt;= 10 ^ 4\n\nWhere \u2018ARR[i]\u2019 denotes the \u2018i-th\u2019 element of the \u2018ARR\u2019.\n\nTime limit: 1 sec.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 49,
            "dislikes": "NA",
            "rephrased": {
                "body": "You are given an array 'ARR' of 'N' integers. Your task is to find the minimum number of jumps required to reach the last index of the array (index N-1). From index 'i', you can jump to any index 'i + k', where 1 <= k <= ARR[i]. ARR[i] represents the maximum jump length from index 'i'. If it is impossible to reach the last index, return -1. Consider 0-based indexing.",
                "constraints": [
                    "1 <= N <= 10^4",
                    "1 <= ARR[i] <= 10^4",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "5\n2 3 1 1 4",
                        "output": "2",
                        "explanation": "Starting at index 0, ARR[0] = 2, so we can jump a maximum of 2 steps. We jump 1 index from 0 to 1. At index 1, ARR[1] = 3, which allows us to jump a maximum of 3 steps, so we jump 3 indices from 1 to 4 to reach the last index. Thus, the minimum number of jumps is 2."
                    },
                    {
                        "input": "5\n3 2 1 0 1",
                        "output": "-1",
                        "explanation": "It is not possible to reach the last index from the first index in this array."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Find all possible combinations of jumps which reach the last index and take the minimum of them.</p>",
            "<p>Think about optimising using overlapping subproblems while calculating all possible jumps.</p>",
            "<p>Think about solving greedily.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}