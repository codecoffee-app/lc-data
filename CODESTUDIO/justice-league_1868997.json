{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 14054,
            "title": "Justice league",
            "titleSlug": "justice-league_1868997",
            "content": "<h4 id=\"there-are-n-number-of-super-heroes-in-dc-and-each-superhero-is-building-his-her-team-to-have-a-last-fight-against-darkseid\">There are \u2018N\u2019 number of super heroes in DC and each superhero is building his/her team to have a last fight against Darkseid.</h4>\n\n<h4 id=\"each-superhero-has-his-her-criteria-to-take-the-candidate-into-their-team-in-which-each-superhero-has-marked-an-interval-interval-i-lefti-righti-inclusive-lefti-and-righti-of-integers-for-which-the-candidate-with-a-code-name-code-name-is-the-integer-value-will-fit-into-their-teams\">Each superhero has his/her criteria to take the candidate into their team in which each superhero has marked an interval (interval[i] = [lefti, righti], inclusive lefti and righti) of integers for which the candidate with a code name (code name is the integer value) will fit into their teams.</h4>\n\n<h4 id=\"but-superheroes-give-the-candidates-a-chance-to-choose-for-which-superhero-team-they-are-willing-to-work-for\">But superheroes give the candidates a chance to choose for which superhero team they are willing to work for.</h4>\n\n<h4 id=\"all-candidates-decide-to-go-into-the-team-for-which-the-size-of-the-interval-is-minimum-and-their-code-name-can-reside-inside-the-interval-the-size-of-an-interval-is-defined-as-the-number-of-integers-it-contains-or-more-formally-righti-lefti-1\">All candidates decide to go into the team for which the size of the interval is minimum and their code name can reside inside the interval (The size of an interval is defined as the number of integers it contains, or more formally righti - lefti + 1).</h4>\n\n<h4 id=\"if-the-candidate-has-such-a-code-name-that-no-interval-exists-to-reside-him-her-then-he-will-not-be-eligible-to-take-part-in-the-justice-league\">If the candidate has such a code name that no interval exists to reside him/her. Then he will not be eligible to take part in the Justice League.</h4>\n\n<h4 id=\"you-are-batman-and-you-are-managing-the-whole-process-so-your-task-is-to-make-a-list-which-contains-the-smallest-size-of-interval-in-which-each-candidate-resides-for-a-team\">You are Batman and you are managing the whole process, so your task is to make a list which contains the smallest size of interval in which each candidate resides for a team.</h4>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>If the code name does not match any interval then print -1 for that code name.\n</code></pre>\n\n<h4 id=\"input-format\">Input Format:</h4>\n\n<pre><code>The first line of input contains an integer \u2018T,\u2019 denoting the number of test cases. The test cases follow:\n\nThe first line of each test case contains an integer \u2018N\u2019 denoting the number of super heroes.\n\nThe second line of each test case contains 2 * N space-separated integers of there presented in a 2 D array, say \u2018intervals\u2019 denoting the interval range for each superhero. \n\nThe third line of each test case contains an integer \u2018X\u2019 denoting the number of candidates.\n\nThe fourth and the last line of each test case contains X single space separated integers represented in an array, say \u2018codeNames\u2019 denoting the code names for \u2018X\u2019 candidates.\n</code></pre>\n\n<h4 id=\"output-format\">Output Format:</h4>\n\n<pre><code>Output contains \u2018N\u2019 single space separated integers denoting the smallest size of interval in which each candidate will reside.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You don\u2019t need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints:</h4>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= N &lt;= 5 *10 ^ 2\n1 &lt;= X &lt;= 5 * 10 ^ 2\nIntervals[i].length = 2\n1 &lt;= lefti &lt;= righti &lt;= 5 * 10 ^ 2\n1 &lt;= codeNames[j] &lt;= 5 * 10 ^ 2\n\nTime Limit: 1 sec.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n4\n1 4 2 4 3 6 4 4\n4\n2 3 4 5\n4\n2 3 2 5 1 8 20 25\n4\n2 19 5 22\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>3 3 1 4  \n2 -1 4 6\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1:</h5>\n\n<pre><code>For test Case 1:\nCode Name = 2: The interval [2, 4] is the smallest interval containing 2. The answer is 4 - 2 + 1 = 3.\nCode Name = 3: The interval [2,4] is the smallest interval containing 3. The answer is 4 - 2 + 1 = 3.\nCode Name = 4: The interval [4,4] is the smallest interval containing 4. The answer is 4 - 4 + 1 = 1.\nCode Name = 5: The interval [3,6] is the smallest interval containing 5. The answer is 6 - 3 + 1 = 4.\nSo the output will be 3 3 1 4.\n\nFor Test Case 2:\nCode Name = 2: The interval [2,3] is the smallest interval containing 2. The answer is 3 - 2 + 1 = 2.\nCode Name = 19: None of the intervals contain 19. The answer is -1.\nCode Name = 5: The interval [2,5] is the smallest interval containing 5. The answer is 5 - 2 + 1 = 4.\nCode Name = 22: The interval [20,25] is the smallest interval containing 22. The answer is 25 - 20 + 1 = 6.\nSo the output will be 2 -1 4 6.  \n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n4\n1 2 3 4 5 6 7 8\n2\n2 3\n4\n1 1 1 1 1 1 1 1\n2\n1 3\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>2 2\n1 -1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -9,
            "dislikes": "NA",
            "rephrased": {
                "body": "There are 'N' superheroes in DC, each forming a team for a final battle against Darkseid.  Each superhero sets a criterion for team membership: an interval [left, right] (inclusive) representing acceptable integer code names for candidates.\n\nCandidates choose the team whose interval size (right - left + 1) is smallest and contains their code name.  If no interval contains a candidate's code name, they are ineligible for the Justice League.\n\nAs Batman, you must generate a list of the smallest interval sizes for each candidate, indicating the best-fit team for them. If no suitable team exists, indicate -1.",
                "constraints": [
                    "1 <= T <= 5 (Number of test cases)",
                    "1 <= N <= 5 * 10^2 (Number of superheroes)",
                    "1 <= X <= 5 * 10^2 (Number of candidates)",
                    "Intervals[i].length = 2 (Each interval has a left and right bound)",
                    "1 <= lefti <= righti <= 5 * 10^2 (Interval bounds)",
                    "1 <= codeNames[j] <= 5 * 10^2 (Candidate code names)",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "4\n1 4 2 4 3 6 4 4\n4\n2 3 4 5",
                        "output": "3 3 1 4",
                        "explanation": "Code Name = 2: Interval [2, 4] is smallest containing 2. Size = 4 - 2 + 1 = 3.\nCode Name = 3: Interval [2, 4] is smallest containing 3. Size = 4 - 2 + 1 = 3.\nCode Name = 4: Interval [4, 4] is smallest containing 4. Size = 4 - 4 + 1 = 1.\nCode Name = 5: Interval [3, 6] is smallest containing 5. Size = 6 - 3 + 1 = 4."
                    },
                    {
                        "input": "4\n2 3 2 5 1 8 20 25\n4\n2 19 5 22",
                        "output": "2 -1 4 6",
                        "explanation": "Code Name = 2: Interval [2, 3] is smallest containing 2. Size = 3 - 2 + 1 = 2.\nCode Name = 19: No interval contains 19. Result = -1.\nCode Name = 5: Interval [2, 5] is smallest containing 5. Size = 5 - 2 + 1 = 4.\nCode Name = 22: Interval [20, 25] is smallest containing 22. Size = 25 - 20 + 1 = 6."
                    },
                    {
                        "input": "4\n1 2 3 4 5 6 7 8\n2\n2 3",
                        "output": "2 2",
                        "explanation": "Code Name = 2: Interval [1, 2] is smallest containing 2. Size = 2 - 1 + 1 = 2.\nCode Name = 3: Interval [3, 4] is smallest containing 3. Size = 4 - 3 + 1 = 2."
                    },
                    {
                        "input": "4\n1 1 1 1 1 1 1 1\n2\n1 3",
                        "output": "1 -1",
                        "explanation": "Code Name = 1: Interval [1, 1] is smallest containing 1. Size = 1 - 1 + 1 = 1.\nCode Name = 3: No interval contains 3. Result = -1."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you think of a greedy approach considering the size of intervals in mind ?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}