{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10910,
            "title": "K Centers",
            "titleSlug": "k-centers_1280117",
            "content": "<h4 id=\"in-ninja-land-there-are-n-cities-numbered-from-0-to-n-1-the-distance-between-each-pair-of-cities-is-given-by-n-n-matrix-dist-where-dist-i-j-denotes-the-distance-between-city-i-and-j\">In Ninja Land there are \u2018N\u2019 cities numbered from 0 to \u2018N\u2019-1. The distance between each pair of cities is given by N * N matrix \u2018DIST\u2019 where \u2018DIST[i][j]\u2019 denotes the distance between city \u2018i\u2019 and \u2018j\u2019.</h4>\n\n<h4 id=\"ninja-wants-to-select-k-k-n-cities-and-install-coding-ninjas-server-in-these-cities-he-wants-to-select-k-cities-in-such-a-way-that-the-maximum-distance-of-a-city-from-the-coding-ninjas-server-is-minimized\">Ninja wants to select \u2018K\u2019  (\u2018K\u2019 &lt;= \u2018N\u2019) cities and install Coding Ninjas Server in these cities. He wants to select \u2018K\u2019 cities in such a way that the maximum distance of a city from the Coding Ninjas Server is minimized.</h4>\n\n<h4 id=\"can-you-help-ninja-in-finding-this-maximum-distance-if-he-selects-k-cities-optimally-you-should-return-this-distance\">Can you help Ninja in finding this maximum distance if he selects \u2018K\u2019 cities optimally?  You should return this distance.</h4>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>1. DIST[i][j] = DIST[j][i].\n2. DIST[i][i] = 0.\n</code></pre>\n\n<h5 id=\"example\">Example :</h5>\n\n<pre><code>Consider that there are 4 cities i.e. \u2018N\u2019 = 4, and the distance between each pair of cities is given by the following matrix \u2018DIST\u2019:  \n             [0, 10, 7, 6]\n             [10, 0, 8, 5]\n             [7, 8, 0, 12]\n             [6, 5, 12, 0]\n\nGraphically, cities can be represented as -:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/kcenter-8513.png\" alt=\"alt text\"></p>\n\n<pre><code>Assume Ninjas wants to install a server in 2 cities i.e \u2018K\u2019 = 2.  Then one optimal choice is to select cities 2 and 3.\nAfter that, the minimum distance of city 0 from the server is  6  (i.e from city 2).\nThe minimum distance of city 1 from the server is 5  (i.e from city 3).\nThe minimum distance of cities 2 and 3 from the server is 0, as the server is installed in these cities.\nThus the maximum distance of the city from the server is max (6, 5, 0, 0) = 6.\nSo, we should return 6.\nNo selection of two cities can give a maximum distance which is less than 6.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases. then \u2018T\u2019 test cases follow.\n\nThe first line of each test case consists of two single space-separated integers \u2018N\u2019 and \u2018K\u2019 respectively representing the number of cities in Ninja Land and the number of cities where the server needs to be installed.\n\nThe next \u2018N\u2019 line follows in each test case. Each of these \u2018N\u2019 lines consists of \u2019N\u2019 single space-separated integers. These \u2018N\u2019 lines together represent the matrix \u2018DIST\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print a single integer that represents the maximum distance of a city from the server when \u2018K\u2019 cities are selected optimally.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 50\n1 &lt;= N &lt;= 15\n1 &lt;= K &lt;= N\n1 &lt;= DIST[i][j] &lt;= 10^9,  for i != j\nDIST[i][j] = 0, for i = j\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n1 1\n0\n4 2\n0 10 7 6\n10 0 8 5\n7 8 0 12\n6 5 12 0\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>0\n6\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1 :</h5>\n\n<pre><code>Test case 1:\nThere is only 1 city i.e city 0, Ninja can install a server in it. As the distance of the city from itself is 0. So the answer will also be 0.\n\nTest case 2:\nSee the problem statement for an explanation.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n3 3\n0 10 1\n10 0 5\n1 5 0\n2 1\n5 0\n0 5\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>0\n5 \n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -2,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a matrix 'DIST' representing the distances between 'N' cities, where DIST[i][j] is the distance between city 'i' and city 'j'. You need to select 'K' cities to install Coding Ninjas servers. The goal is to minimize the maximum distance of any city from its nearest server. Return the minimum possible maximum distance.",
                "constraints": [
                    "1 <= T <= 50",
                    "1 <= N <= 15",
                    "1 <= K <= N",
                    "1 <= DIST[i][j] <= 10^9, for i != j",
                    "DIST[i][i] = 0, for i = j",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "1\n1 1\n0",
                        "output": "0",
                        "explanation": "There is only 1 city, so installing a server there results in a maximum distance of 0."
                    },
                    {
                        "input": "2\n4 2\n0 10 7 6\n10 0 8 5\n7 8 0 12\n6 5 12 0",
                        "output": "6",
                        "explanation": "Selecting cities 2 and 3 as server locations results in a maximum distance of 6.  City 0 is closest to city 2 (distance 7), City 1 is closest to city 3 (distance 5), cities 2 and 3 have a distance of 0 from their servers. The maximum is max(7,5,0,0) = 7 if we take the closest distance from cities and city 0 is closest to city 3(distance 6), then it is max(6,5,0,0) = 6."
                    },
                    {
                        "input": "2\n3 3\n0 10 1\n10 0 5\n1 5 0",
                        "output": "0",
                        "explanation": "When K = N, we can install a server in every city, making the maximum distance 0."
                    },
                    {
                        "input": "2\n2 1\n5 0\n0 5",
                        "output": "5",
                        "explanation": "Install the server at either city 0 or city 1. The other city will have a distance of 5 from the server."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>One by one try out all possible ways of selecting \u2018K\u2019 cities.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}