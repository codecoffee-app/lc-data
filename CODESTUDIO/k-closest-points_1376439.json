{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 11025,
            "title": "K-Closest Points",
            "titleSlug": "k-closest-points_1376439",
            "content": "<h4 id=\"you-are-given-an-array-of-points-of-size-n-such-that-point-i-xi-yi-where-xi-is-coordinate-and-yi-is-y-coordinate-of-the-ith-point-you-need-to-find-k-closest-points-from-the-origin-0-0\">You are given an array of points of size \u2018n\u2019. such that point[i]=[xi, yi] where &#39;xi&#39; is coordinate and &#39;yi&#39; is y coordinate of the &#39;ith&#39; point. You need to find &#39;k&#39; closest points from the origin (0,0).</h4>\n\n<h4 id=\"the-distance-between-two-points-x1-y1-and-x2-y2-is-given-as-x1-x2-2-y1-y2-2\">The distance between two points (&#39;x1&#39;, &#39;y1&#39;) and (&#39;x2&#39;, &#39;y2&#39;) is given as (x1-x2)^2 +(y1-y2)^2.</h4>\n\n<p><img src=\"https://files.codingninjas.in/untitled-diagram-5-8686.png\" alt=\"\"></p>\n\n<h4 id=\"if-two-points-have-the-same-distance-then-the-one-with-minimum-x-coordinate-will-be-chosen\">If two points have the same distance then the one with minimum &#39;x&#39; coordinate will be chosen.</h4>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases.\n\nThe first line of the test case consists of two integers \u2018n\u2019 indicating a number of points and &#39;k&#39;.\n\nThe next line \u2018n\u2019 lines consist of 2 space-separated integers &#39;xi&#39; and &#39;yi&#39;, such that &#39;xi&#39; is x-coordinate and &#39;yi&#39; is y-coordinate of the &#39;ith&#39; point.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>Return the list of &#39;k&#39; points. Return the list in ascending order of distance from the origin. Such that the one with minimum distance will be first. If two points have the same distance then one with a minimum x-coordinate will be first.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= \u2019T \u2019&lt;= 10\n1 &lt;= \u2019n\u2019 &lt;= 10^6\n1 &lt;= \u2019k\u2019 &lt;= \u2019n\u2019\n-10^6 &lt;= xi, yi &lt;= 10^6\n</code></pre>\n\n<h5 id=\"follow-up\">Follow Up:</h5>\n\n<pre><code>Can you solve the problem in time complexity better than O(NlogN)?\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n4 3\n1 1\n-1 1\n2 2\n-2 2\n4 4\n1 0\n2 0\n3 0\n4 0\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>-1 1\n1 1\n-2 2\n1 0\n2 0\n3 0\n4 0\n</code></pre>\n\n<h5 id=\"explanation\">Explanation:</h5>\n\n<pre><code>For first case The distance of the points from origin \nare :-\n(1,1) =&gt; (1-0)^2+(1-0)^2=2\n(-1,1) =&gt; (-1-0)^2 +(1-0)^2=2\n(2,2)=&gt;(2-0)^2+(2-0)^2=8\n(-2,2)=&gt;(-2-0)^2+(2-0)^2=8\n\nThus the answer will be in order\n(-1,1) -&gt; (1,1)-&gt;(-2,2)\n\nThe first two points have the same distance but the x coordinate of the second point is less. Hence the second point comes first.\n\nFor Second Case\n(1,0) =&gt; (1-0)^2+(0-0)^2=1\n(2,0) =&gt; (2-0)^2 +(0-0)^2=4\n(3,0)=&gt;(3-0)^2+(0-0)^2=9\n(4,0)=&gt;(4-0)^2+(0-0)^2=16\n\nThus the answer will be in order\n(1,0) -&gt;(2,0)-&gt;(3,0)-&gt;(4,0)\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n4 2\n2 5\n4 4\n5 1\n4 2\n4 4\n4 4\n3 3\n4 3\n1 2\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>4 2\n5 1\n1 2\n3 3\n4 3\n4 4\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 8,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of points, find the 'k' closest points to the origin (0, 0). The distance between two points (x1, y1) and (x2, y2) is calculated as (x1-x2)^2 + (y1-y2)^2. If two points have the same distance, the point with the smaller x-coordinate should be chosen first. Return the 'k' closest points, sorted in ascending order of their distance from the origin, with points of equal distance sorted by ascending x-coordinate.",
                "constraints": [
                    "1 <= \u2019T\u2019 <= 10",
                    "1 <= \u2019n\u2019 <= 10^6",
                    "1 <= \u2019k\u2019 <= \u2019n'",
                    "-10^6 <= xi, yi <= 10^6"
                ],
                "testcases": [
                    {
                        "input": "n = 4, k = 3, points = [[1, 1], [-1, 1], [2, 2], [-2, 2]]",
                        "output": "[-1, 1]\n[1, 1]\n[-2, 2]",
                        "explanation": "The distances of the points from the origin are:\n(1,1) => (1-0)^2+(1-0)^2=2\n(-1,1) => (-1-0)^2 +(1-0)^2=2\n(2,2)=>(2-0)^2+(2-0)^2=8\n(-2,2)=>(-2-0)^2+(2-0)^2=8\n\nThus the answer will be in order\n(-1,1) -> (1,1)->(-2,2)\n\nThe first two points have the same distance but the x coordinate of the second point is less. Hence the second point comes first."
                    },
                    {
                        "input": "n = 4, k = 4, points = [[1, 0], [2, 0], [3, 0], [4, 0]]",
                        "output": "[1, 0]\n[2, 0]\n[3, 0]\n[4, 0]",
                        "explanation": "The distances of the points from the origin are:\n(1,0) => (1-0)^2+(0-0)^2=1\n(2,0) => (2-0)^2 +(0-0)^2=4\n(3,0)=>(3-0)^2+(0-0)^2=9\n(4,0)=>(4-0)^2+(0-0)^2=16\n\nThus the answer will be in order\n(1,0) ->(2,0)->(3,0)->(4,0)"
                    },
                    {
                        "input": "n = 4, k = 2, points = [[2, 5], [4, 4], [5, 1], [4, 2]]",
                        "output": "[4, 2]\n[5, 1]",
                        "explanation": "The distances are (2,5) = 29, (4,4) = 32, (5,1) = 26, (4,2) = 20.  The two closest are (4,2) and (5,1)."
                    },
                    {
                        "input": "n = 4, k = 4, points = [[4, 4], [3, 3], [4, 3], [1, 2]]",
                        "output": "[1, 2]\n[3, 3]\n[4, 3]\n[4, 4]",
                        "explanation": "Distances are sqrt(32), sqrt(18), sqrt(25), sqrt(5) respectively.  Sorted by distance and x coordinate for ties, the result is [1,2], [3,3], [4,3], [4,4]"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to use an approach similar to quick sort in this problem.</p>",
            "<p>&nbsp;Sort the points according to the distance and the condition.</p>",
            "<p>Use custom type max priority queue according to the given conditions.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}