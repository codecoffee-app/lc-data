{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 7510,
            "title": "K Most Frequent Words",
            "titleSlug": "k-most-frequent-words_696192",
            "content": "<h4 id=\"you-have-been-given-an-array-list-words-of-n-non-empty-words-and-an-integer-k-your-task-is-to-return-the-k-most-frequent-words-sorted-by-their-frequency-from-highest-to-lowest\">You have been given an array/list &#39;WORDS&#39; of &#39;N&#39; non-empty words, and an integer &#39;K&#39;. Your task is to return the &#39;K&#39; most frequent words sorted by their frequency from highest to lowest.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>If two words have the same frequency then the lexicographically smallest word should come first in your answer.\n</code></pre>\n\n<h4 id=\"follow-up\">Follow up:</h4>\n\n<pre><code>Can you solve it in O(N * logK) time and O(N) extra space? \n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains two integers, N and K, where N is the number of the words and, K denotes the number of words to return.\n\nThe next line contains N single space-separated words. Each word consists of only lowercase Latin letters.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each input, print K single space-separated words, where the ith word denotes the ith most frequent word.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You are not required to print the expected output; it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= N &lt;= 10^5\n1 &lt;= K &lt;= number of unique words\n\nTime Limit: 1sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>6 2\ni love codingninjas i love coding\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>i love\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>8 3\nthe sky is blue the weather is hot\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>is the blue\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation for Sample Input 2:</h5>\n\n<pre><code>\u201cis\u201d and \u201cthe\u201d are words with a frequency of 2.\n\u201csky\u201d, \u201cblue\u201d, \u201cweather\u201d, and \u201chot\u201d are the words with a frequency of 1.\n\nThe words with a frequency of 2 are the most frequent words and the lexicographically smallest word from the words with a frequency of 1 is \u201cblue\u201d.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 12,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array/list of non-empty words and an integer K, find the K most frequent words. The words should be sorted by frequency from highest to lowest. If two words have the same frequency, the lexicographically smaller word should come first.",
                "constraints": [
                    "1 <= N <= 10^5 (where N is the number of words)",
                    "1 <= K <= number of unique words",
                    "Time Limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "6 2\ni love codingninjas i love coding",
                        "output": "i love",
                        "explanation": null
                    },
                    {
                        "input": "8 3\nthe sky is blue the weather is hot",
                        "output": "is the blue",
                        "explanation": "The words \"is\" and \"the\" have a frequency of 2. \"sky\", \"blue\", \"weather\", and \"hot\" have a frequency of 1. The words with a frequency of 2 are the most frequent, and \"blue\" is the lexicographically smallest among the words with a frequency of 1."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Use a data structure to store the frequency of all unique strings. The task that remains is to find the k largest frequencies.</p>",
            "<p>Use a data structure to store the frequency of all unique strings. The task that remains is to find the \u2018K\u2019 largest frequencies.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Heap",
                "slug": "heap"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}