{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 7510,
            "title": "K Most Frequent Words",
            "titleSlug": "k-most-frequent-words_696192",
            "content": "<h4 id=\"you-have-been-given-an-array-list-words-of-n-non-empty-words-and-an-integer-k-your-task-is-to-return-the-k-most-frequent-words-sorted-by-their-frequency-from-highest-to-lowest\">You have been given an array/list &#39;WORDS&#39; of &#39;N&#39; non-empty words, and an integer &#39;K&#39;. Your task is to return the &#39;K&#39; most frequent words sorted by their frequency from highest to lowest.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>If two words have the same frequency then the lexicographically smallest word should come first in your answer.\n</code></pre>\n\n<h4 id=\"follow-up\">Follow up:</h4>\n\n<pre><code>Can you solve it in O(N * logK) time and O(N) extra space? \n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains two integers, N and K, where N is the number of the words and, K denotes the number of words to return.\n\nThe next line contains N single space-separated words. Each word consists of only lowercase Latin letters.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each input, print K single space-separated words, where the ith word denotes the ith most frequent word.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You are not required to print the expected output; it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= N &lt;= 10^5\n1 &lt;= K &lt;= number of unique words\n\nTime Limit: 1sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>6 2\ni love codingninjas i love coding\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>i love\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>8 3\nthe sky is blue the weather is hot\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>is the blue\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation for Sample Input 2:</h5>\n\n<pre><code>\u201cis\u201d and \u201cthe\u201d are words with a frequency of 2.\n\u201csky\u201d, \u201cblue\u201d, \u201cweather\u201d, and \u201chot\u201d are the words with a frequency of 1.\n\nThe words with a frequency of 2 are the most frequent words and the lexicographically smallest word from the words with a frequency of 1 is \u201cblue\u201d.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 12,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of strings 'words' of size 'n', find the 'k' most frequent words. The output should be sorted by frequency in descending order. If two words have the same frequency, the lexicographically smaller word should come first.",
                "constraints": [
                    "1 <= n <= 10^5",
                    "1 <= k <= number of unique words",
                    "Each word consists of only lowercase Latin letters."
                ],
                "testcases": [
                    {
                        "input": "n = 6, k = 2, words = [\"i\", \"love\", \"codingninjas\", \"i\", \"love\", \"coding\"]",
                        "output": "i love",
                        "explanation": "The word 'i' appears twice and 'love' appears twice, while 'codingninjas' and 'coding' each appear once. Therefore, the 2 most frequent words are 'i' and 'love'. Since 'i' comes before 'love' lexicographically when the frequencies are the same, the output is \"i love\"."
                    },
                    {
                        "input": "n = 8, k = 3, words = [\"the\", \"sky\", \"is\", \"blue\", \"the\", \"weather\", \"is\", \"hot\"]",
                        "output": "is the blue",
                        "explanation": "\"is\" and \"the\" are words with a frequency of 2. \"sky\", \"blue\", \"weather\", and \"hot\" are the words with a frequency of 1. The words with a frequency of 2 are the most frequent words and the lexicographically smallest word from the words with a frequency of 1 is \u201cblue\u201d. Therefore the output is \"is the blue\"."
                    },
                    {
                        "input": "n = 5, k = 1, words = [\"a\", \"a\", \"b\", \"b\", \"b\"]",
                        "output": "b",
                        "explanation": "The word \"b\" appears 3 times, while the word \"a\" appears 2 times. Therefore the most frequent word is \"b\"."
                    },
                    {
                        "input": "n = 4, k = 4, words = [\"a\", \"b\", \"c\", \"d\"]",
                        "output": "a b c d",
                        "explanation": "All words have frequency 1. They are sorted lexicographically. Therefore, the output is \"a b c d\"."
                    },
                    {
                        "input": "n = 7, k = 2, words = [\"hello\",\"world\",\"hello\",\"hello\",\"world\",\"coding\",\"coding\"]",
                        "output": "hello world",
                        "explanation": "hello: 3, world: 2, coding: 2. So top 2 are hello, world (lexicographically smaller comes first in case of same freq)"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Use a data structure to store the frequency of all unique strings. The task that remains is to find the k largest frequencies.</p>",
            "<p>Use a data structure to store the frequency of all unique strings. The task that remains is to find the \u2018K\u2019 largest frequencies.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Heap",
                "slug": "heap"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}