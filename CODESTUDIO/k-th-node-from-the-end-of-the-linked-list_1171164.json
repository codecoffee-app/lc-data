{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10196,
            "title": "k-th node from the end of the linked list",
            "titleSlug": "k-th-node-from-the-end-of-the-linked-list_1171164",
            "content": "<h4 id=\"given-the-head-node-of-the-singly-linked-list-and-an-integer-k-find-the-value-at-the-kth-node-from-the-end-of-the-linked-list\">Given the head node of the singly linked list and an integer \u2018k\u2019, , find the value at the kth node from the end of the linked list.</h4>\n\n<h5 id=\"for-example\">For example:</h5>\n\n<p><img src=\"https://files.codingninjas.in/screenshot-17-8043.png\" alt=\"Linked List\"></p>\n\n<pre><code>For the above-linked list, if k=2, then the value at the kth i.e second node from the end is \u201812\u2019.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>1.You don\u2019t need to take any input. It has already been taken care of. Just implement the given function and return a pointer pointing to the k-th element from the last of the linked list.\n2.It is guaranteed that k&lt;=size of the linked list.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases.\n\nThe next \u20182*T\u2019 lines represent the \u2018T\u2019 test cases.\n\nThe first line of each test case contains integers denoting the nodes of the linked list. Each line is guaranteed to have -1 at the end to signify the end of the linked list.The second line of each test case contains an integer \u2018k\u2019\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, return a pointer pointing to the node \nwhich is at the k-th position from the last of the linked list.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 50\n0 &lt;= N &lt;= 10^5\n-10^9 &lt;= data &lt;= 10^9\n1 &lt;=k &lt;=N\nnode-&gt;data \u2260 -1.\n\nWhere \u2018T\u2019 is the total number of test cases, \u2018N\u2019 denotes the number of elements in each Linked List, and  \u2018data\u2018 is the value of any node of the linked list and \u2018k\u2019 is the position of the element from the end to be returned.\n\nTime Limit : 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n43 6 9 1 5 -1\n4\n3 7 -32 8 11 -1\n5\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>6\n3\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1 :</h5>\n\n<pre><code>First Test Case : \n\nThe given linked list is: 43-&gt;6-&gt;9-&gt;1-&gt;5\nWe can clearly see that the 4th element from the last is 6 therefore we return a pointer pointing to the element \u20186\u2019.\n\nSecond Test Case :\n\nThe linked list in this case is 3-&gt;7-&gt;-32-&gt;8-&gt;11\nThe 5th element from last is the first node of the list therefore we return a pointer pointing to the first node i.e. \u20183\u2019\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>1\n2 26 35 5 -1\n1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>5\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 31,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given the head of a singly linked list and an integer 'k', your task is to find the node that is kth from the end of the list. Return a pointer to that node.",
                "constraints": [
                    "1 <= T <= 50",
                    "0 <= N <= 10^5",
                    "k <= N"
                ],
                "testcases": [
                    {
                        "input": "head = [43, 6, 9, 1, 5, -1], k = 4",
                        "output": "6",
                        "explanation": "The linked list is 43 -> 6 -> 9 -> 1 -> 5.  The 4th element from the last is 6.  Therefore, the function should return a pointer to the node containing the value 6."
                    },
                    {
                        "input": "head = [3, 7, -32, 8, 11, -1], k = 5",
                        "output": "3",
                        "explanation": "The linked list is 3 -> 7 -> -32 -> 8 -> 11. The 5th element from the last is 3. Therefore, the function should return a pointer to the node containing the value 3."
                    },
                    {
                        "input": "head = [2, 26, 35, 5, -1], k = 1",
                        "output": "5",
                        "explanation": "The linked list is 2 -> 26 -> 35 -> 5. The 1st element from the last is 5. Therefore, the function should return a pointer to the node containing the value 5."
                    },
                    {
                        "input": "head = [1, 2, 3, 4, 5, 6, 7, -1], k = 3",
                        "output": "5",
                        "explanation": "The linked list is 1 -> 2 -> 3 -> 4 -> 5 -> 6 -> 7.  The 3rd element from the last is 5.  Therefore, the function should return a pointer to the node containing the value 5."
                    },
                    {
                        "input": "head = [1, -1], k = 1",
                        "output": "1",
                        "explanation": "The linked list is 1. The 1st element from the last is 1. Therefore, the function should return a pointer to the node containing the value 1."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Find the total number of nodes in the linked list.</p>",
            "<p>Think of using two pointers</p>"
        ],
        "relatedTopics": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}