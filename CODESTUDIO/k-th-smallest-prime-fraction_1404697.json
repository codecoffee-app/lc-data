{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12270,
            "title": "K-th smallest prime fraction",
            "titleSlug": "k-th-smallest-prime-fraction_1404697",
            "content": "<h4 id=\"you-are-given-a-sorted-integer-array-lst-arr-containing-prime-numbers-where-all-the-integers-of-arr-are-unique-you-are-also-given-an-integer-k\">You are given a sorted integer array/lst &#39;ARR&#39; containing prime numbers, where all the integers of \u2018ARR\u2019 are unique. You are also given an integer \u2018K\u2019.</h4>\n\n<h4 id=\"for-every-i-and-j-where-0-i-j-n-where-n-is-the-length-of-the-array-we-consider-the-fraction-arr-i-arr-j\">For every \u2018i\u2019 and \u2018j\u2019 where 0 &lt;= i &lt; j &lt; N where \u2018N\u2019 is the length of the array, we consider the fraction ARR[i] / ARR[j].</h4>\n\n<h4 id=\"print-the-kth-smallest-fraction-considered-print-your-answer-as-an-array-of-integers-of-size-2-where-answer-0-arr-i-and-answer-1-arr-j\">Print the Kth smallest fraction considered. Print your answer as an array of integers of size 2, where ANSWER[0] == ARR[i] and ANSWER[1] == ARR[j].</h4>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>A prime number is a number that has only two unique factors, one and the number itself. E.g., 3 has only 2 factors, 1 and 3 itself.\n</code></pre>\n\n<h4 id=\"for-example\">For example :</h4>\n\n<pre><code>Given \u2018N\u2019 = 4, \u2018K\u2019 = 2, \u2018ARR\u2019[] = 1, 2, 3, 5\nThe answer is 1 and 3 because :\n\u00bd = 0.50\n\u2153 = 0.33\n\u2155 = 0.20\n\u2154 = 0.66\n\u2156 = 0.40\n\u2157 = 0.60\nTherefore the 2nd smallest value is 0.33 therfore 1 and 3 is the answer.\n</code></pre>\n\n<h4 id=\"input-format\">Input Format :</h4>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases. The &#39;T&#39; test cases follow.\n\nThe first line of each test case contains 2 space-separated integers, \u2018N\u2019 and \u2018K,\u2019 where \u2018N\u2019 is the number of elements of the array, and you have to tell the fraction that makes the \u2018K\u2019th smallest fraction.\n\nThe second line of each test case contains \u2018N\u2019 space-separated integers, denoting the array elements.\n</code></pre>\n\n<h4 id=\"output-format\">Output Format :</h4>\n\n<pre><code>For each test case, print two integers denoting numerator and denominator respectively of the smallest fraction.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>You don\u2019t need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints :</h4>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= N &lt;= 1000\n1 &lt;= K &lt;= (N) * (N - 1) / 2\n1 &lt;= ARR[ i ] &lt;= 10 ^ 4\n\nWhere &#39;ARR[i]&#39; denotes the &#39;ith&#39; element of ARR.\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n4 2\n1 2 3 5\n4 6\n5 7 11 13\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>1 3 \n11 13\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1 :</h5>\n\n<pre><code>For the first test case:\nThe answer is 1 and 3 because :\n1 / 2  = 0.50\n1 / 3  = 0.33\n1 / 5  = 0.20\n2 / 3  = 0.66\n2 / 5  = 0.40\n3 / 5  = 0.60\nTherefore the 2nd smallest value is 0.33 1, and 3 is the answer.\n\n\nFor the second test case:\nThe answer is 1 and 3 because :\n5 / 7 = 0.71\n5 / 11 = 0.45\n5 / 13 = 0.38\n7 / 11 = 0.63\n7 / 13 = 0.53\n11 / 13 = 0.84\nTherefore the 6th smallest value is 0.84 therefore 11 and 13 is the answer.    \n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n4 1\n1 2 3 5\n5 2\n2 3 5 7 11\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>1 5 \n3 11\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -8,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a sorted integer array 'ARR' containing unique prime numbers and an integer 'K', find the Kth smallest fraction formed by ARR[i] / ARR[j] where 0 <= i < j < N, N being the length of the array. Return the numerator and denominator of this fraction as an array of size 2: [ARR[i], ARR[j]].",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= N <= 1000",
                    "1 <= K <= (N) * (N - 1) / 2",
                    "1 <= ARR[i] <= 10 ^ 4",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "4 2\n1 2 3 5",
                        "output": "1 3",
                        "explanation": "Fractions: 1/2, 1/3, 1/5, 2/3, 2/5, 3/5. Sorted fractions: 1/5 (0.20), 1/3 (0.33), 2/5 (0.40), 1/2 (0.50), 3/5 (0.60), 2/3 (0.66). The 2nd smallest fraction is 1/3."
                    },
                    {
                        "input": "4 6\n5 7 11 13",
                        "output": "11 13",
                        "explanation": "Fractions: 5/7, 5/11, 5/13, 7/11, 7/13, 11/13. Sorted fractions: 5/13 (0.38), 5/11 (0.45), 7/13 (0.53), 7/11 (0.63), 5/7 (0.71), 11/13 (0.84). The 6th smallest fraction is 11/13."
                    },
                    {
                        "input": "4 1\n1 2 3 5",
                        "output": "1 5",
                        "explanation": "Fractions: 1/2, 1/3, 1/5, 2/3, 2/5, 3/5. Sorted fractions: 1/5 (0.20), 1/3 (0.33), 2/5 (0.40), 1/2 (0.50), 3/5 (0.60), 2/3 (0.66). The 1st smallest fraction is 1/5."
                    },
                    {
                        "input": "5 2\n2 3 5 7 11",
                        "output": "3 11",
                        "explanation": "Fractions: 2/3, 2/5, 2/7, 2/11, 3/5, 3/7, 3/11, 5/7, 5/11, 7/11. Sorted fractions: 2/11, 2/7, 2/5, 3/11, 2/3, 3/7, 5/11, 3/5, 5/7, 7/11. The 2nd smallest fraction is 2/7. it seems like there is a mistake on the expected output. the correct output should be '2 7'."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can we use sorting?&nbsp;</p>",
            "<p>Maybe we can use Priority Queues.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Heap",
                "slug": "heap"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}