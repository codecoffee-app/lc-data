{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12278,
            "title": "K\u2019th UGLY NINJA",
            "titleSlug": "k-th-ugly-ninja_1404722",
            "content": "<h4 id=\"ninja-wants-to-hire-some-ugly-ninjas-in-his-team-for-doing-ugly-work-so-he-has-made-an-array-that-contains-primes-integer-prime_arr\">Ninja wants to hire some ugly ninjas in his team for doing ugly work. So he has made an array that contains primes integer \u2018PRIME_ARR\u2019.</h4>\n\n<h4 id=\"ninjas-who-are-coming-to-audition-have-to-take-some-random-number-and-put-it-on-their-body-and-now-ninja-will-hire-the-k-th-ugly-ninja-whose-number-has-all-prime-factors-in-the-array-prime_arr\">Ninjas who are coming to audition have to take some random number and put it on their body and now Ninja will hire the \u2018K-TH\u2019 ugly ninja whose number has all prime factors in the array \u2018PRIME_ARR\u2019.</h4>\n\n<h4 id=\"your-task-is-to-help-ninja-in-writing-a-code-so-he-can-find-the-k-th-ugly-ninja-whose-all-prime-factors-are-in-the-array-prime_arr\">Your task is to help ninja in writing a code so he can find the \u2018K-TH\u2019 ugly ninja whose all prime factors are in the array \u2018PRIME_ARR\u2019.</h4>\n\n<h4 id=\"you-will-be-provided-with-the-array-prime_arr-containing-prime-integers-and-an-integer-k\">You will be provided with the array \u2018PRIME_ARR\u2019 containing prime integers and an integer \u2018K\u2019.</h4>\n\n<h4 id=\"example\">Example :</h4>\n\n<pre><code>Suppose given array \u2018PRIME_ARR = { 2, 7, 13, 19 }\u2019 and given number \u2018K\u2019 =12\u2019 \nSo the sequence of first \u201812\u2019 ugly numbers is { 1, 2, 4, 7, 8, 13, 14, 16, 19, 26, 28, 32 }.\nWe start by filling \u20181\u2019 and then \u20182\u2019. We then fill \u20184\u2019 as its prime factor 2 is present in \u2018PRIME_ARR\u2019.\nThen we fill \u20187\u2019  and then \u20188\u2019 as its prime factor \u20182\u2019 is present in \u2018PRIME_ARR\u2019.\nThen insert &#39;13&#39;.\nThen \u201814\u2019 as its prime factors \u20182\u2019 and \u20187\u2019 are present in \u2018PRIME_ARR\u2019.\nThen \u201816\u2019 as its prime factor \u20182\u2019 is present in \u2018PRIME_ARR\u2019.\nThen \u201819\u2019.\nThen \u201826\u2019 as its prime factors \u20182\u2019 and \u201813\u2019 are present in \u2018PRIME_ARR\u2019.\nThen \u201828\u2019 as its prime factors \u20182\u2019 and \u20187\u2019 are present in \u2018PRIME_ARR\u2019.\nThen \u201832\u2019 as its prime factor \u20182\u2019 is present in \u2018PRIME_ARR\u2019.\nWe don\u2019t include \u20183\u2019, \u20185\u2019, \u20189\u2019, \u201811\u2019, and so on as their prime factors are not present in \u2018PRIME_ARR\u2019.\n</code></pre>\n\n<h4 id=\"input-format\">Input Format :</h4>\n\n<pre><code>The first line of input contains a \u2018T\u2019 denoting the number of test cases.\n\nThe first line of each test case contains two space-separated integers \u2018N\u2019 i.e size of the array \u2018PRIME_ARR\u2019 and the integer \u2018K\u2019.\n\nThe second line of each test case contains an array \u2018PRIME_ARR\u2019 where \u2018PRIME_ARR[i]\u2019 denotes the \u2018I-th\u2019 prime integer.\n</code></pre>\n\n<h4 id=\"output-format\">Output Format :</h4>\n\n<pre><code>For each test case, print an integer denoting the \u2018KTH\u2019 ugly number.\n</code></pre>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>You do not need to print anything, It has already been taken care of. Just implement the function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints :</h4>\n\n<pre><code>1 &lt;= T &lt;= 50\n1 &lt;= N &lt;= 100\n1 &lt;= K &lt;= 10 ^3\n1 &lt;= PRIME_ARR[i] &lt;= 1000  \n\nTime Limit: 1sec\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1 :</h4>\n\n<pre><code>2\n4 12\n2 3 5 7\n2 5\n2 5\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1 :</h4>\n\n<pre><code>14\n8\n</code></pre>\n\n<h4 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1 :</h4>\n\n<pre><code>Test Case 1:\n\nFor the first test case given \u2018PRIME_ARR\u2019 is { 2, 3, 5, 7 } so the sequence of first \u201812\u2019 ugly numbers is { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14 } so we return \u201814\u2019 as the answer.\n\nTest Case 2:\n\nFor this test case given \u2018PRIME_ARR\u2019 is { 2, 5 } so the sequence of first \u20185\u2019 ugly numbers is {1, 2, 4, 5, 8 } so we return \u20188\u2019 as our answer.\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2 :</h4>\n\n<pre><code>2\n3 1\n2 3 5\n5 9\n3 5 7 11 13\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2 :</h4>\n\n<pre><code>1\n21\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -9,
            "dislikes": "NA",
            "rephrased": {
                "body": "Ninja wants to hire ugly ninjas for ugly work. He has an array `PRIME_ARR` containing prime numbers.  Ninjas auditioning have numbers on their bodies. Ninja will hire the K-th ugly ninja, where an ugly ninja's number has all its prime factors present in `PRIME_ARR`. Your task is to find the K-th ugly number whose prime factors are all in the given `PRIME_ARR`.",
                "constraints": [
                    "1 <= T <= 50",
                    "1 <= N <= 100",
                    "1 <= K <= 1000",
                    "1 <= PRIME_ARR[i] <= 1000",
                    "Time Limit: 1sec"
                ],
                "testcases": [
                    {
                        "input": "4 12\n2 3 5 7",
                        "output": "14",
                        "explanation": "Given PRIME_ARR = {2, 3, 5, 7} and K = 12, the first 12 ugly numbers are {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14}. The 12th number is 14."
                    },
                    {
                        "input": "2 5\n2 5",
                        "output": "8",
                        "explanation": "Given PRIME_ARR = {2, 5} and K = 5, the first 5 ugly numbers are {1, 2, 4, 5, 8}. The 5th number is 8."
                    },
                    {
                        "input": "3 1\n2 3 5",
                        "output": "1",
                        "explanation": "Given PRIME_ARR = {2, 3, 5} and K = 1, the first ugly number is 1."
                    },
                    {
                        "input": "5 9\n3 5 7 11 13",
                        "output": "21",
                        "explanation": "Given PRIME_ARR = {3, 5, 7, 11, 13} and K = 9, the first 9 ugly numbers are {1, 3, 5, 7, 9, 11, 13, 15, 21}. The 9th ugly number is 21."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you check each and every number until you find \u2018K\u2019 ugly numbers?</p>",
            "<p>Can you use a priority queue?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap",
                "slug": "heap"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}