{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10097,
            "title": "Kevin and his Fruits",
            "titleSlug": "kevin-and-his-fruits_1164267",
            "content": "<h4 id=\"kevin-has-n-buckets-each-consisting-of-some-fruits-kevin-wants-to-eat-at-least-m-fruits-and-so-he-decided-to-set-a-marker-integer-as-maximum-as-possible-such-that-if-he-eats-number-of-fruits-in-the-i-th-bucket-marker-fruits-then-it-must-be-at-least-m\">Kevin has \u2018N\u2019 buckets each consisting of some fruits. Kevin wants to eat at least \u2018M\u2019 fruits and so, he decided to set a marker (integer) as maximum as possible such that if he eats \u201cnumber of fruits in the i-th bucket - marker\u201d fruits then it must be at least \u2018M\u2019.</h4>\n\n<h4 id=\"example\">Example:</h4>\n\n<pre><code>Let\u2019s assume, we have 5 buckets each having 10, 40, 30, and 20 fruits respectively. And, Kevin wants to eat at least 30 fruits. \n\nNow, if we set our marker at 20 then Kevin can eat: (10 - 20) = -10 =&gt; 0 (fruit\u2019s count can\u2019t be negative) fruits from 1st bucket, (40 - 20) = 20 fruits from 2nd bucket, (30 - 20) = 10 fruits from the third bucket, and (20 - 20) = 0 fruits from the last bucket.\n\nSo, he can eat 0 + 20 + 10 + 0 = 30 fruits in total.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>Each bucket may not have the same amount of fruits. It is guaranteed that the sum of all fruits (including all the buckets) will be greater than M. Kevin can only eat fruits from a particular bucket if and only if the bucket has more fruits than the marker.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 representing the number of test cases. \n\nThe first line of each test case will contain two space-separated integers \u2018N\u2019 and \u2018M\u2019 where \u2018N\u2019 is the total number of buckets, and \u2018M\u2019 is the minimum number of fruits that Kevin wants to eat.\n\nThe second line of each test case will contain \u2018N\u2019 space-separated integers which denote the number of fruits in the i-th bucket.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print the required marker.\n\nOutput for every test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 10^4\n1 &lt;= M &lt;= 10^6\n0 &lt;= ARR[i] &lt;= 10^4\n\nWhere \u2018T\u2019 is the number of test cases.\n\nWhere &#39;N&#39; is the number of buckets and \u2018M\u2019 is the integer representing the minimum number of fruits Kevin wants to eat. And, ARR[i] denotes the number of fruits in the i-th bucket.\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n4 30\n10 40 30 20\n4 16\n5 8 20 1   \n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>20\n6\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of sample input 1:</h5>\n\n<pre><code>In the first test case, if we set the marker at 20 then Kevin can eat following fruits from each bucket: 0 (1st bucket) + 20 (2nd bucket) + 10 (3rd bucket) + 0 (4th bucket) = 30 (K)\n\nIn the second test case, if we set the marker at 6 then Kevin can eat following fruits from each bucket: 0 (1st bucket) + 2 (2nd bucket) + 14 (bucket) + 0 (4th bucket) = 16 (K)\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>3\n3 2\n2 2 2\n4 1\n2 0 1 0\n5 15\n1 2 3 4 5\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>1\n1\n0\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation for sample input 2:</h5>\n\n<pre><code>In the first test case, for the marker at 1 Kevin has to eat,  1 + 1 + 1 = 3 fruits.\n\nIn the second test case, for the marker at 1 Kevin has to eat, 1 + 0 + 0 + 0 = 1 fruit.\n\nIn the third test case, for the marker at 0 Kevin has to eat, 1 + 2 + 3 + 4 + 5 = 15 fruits.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 7,
            "dislikes": "NA",
            "rephrased": {
                "body": "Kevin has N buckets, each containing a certain number of fruits. He wants to eat at least M fruits in total. To achieve this, he decides to set a marker (an integer) to maximize the number of fruits he can eat. For each bucket, the number of fruits Kevin eats from that bucket is calculated as the maximum of 0 and (number of fruits in the bucket - marker).  The goal is to find the largest possible marker such that the total number of fruits Kevin eats from all buckets is at least M.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10^4",
                    "1 <= M <= 10^6",
                    "0 <= ARR[i] <= 10^4"
                ],
                "testcases": [
                    {
                        "input": "N = 4, M = 30, arr = [10, 40, 30, 20]",
                        "output": "20",
                        "explanation": "If the marker is 20, Kevin eats: max(0, 10-20) + max(0, 40-20) + max(0, 30-20) + max(0, 20-20) = 0 + 20 + 10 + 0 = 30 fruits."
                    },
                    {
                        "input": "N = 4, M = 16, arr = [5, 8, 20, 1]",
                        "output": "6",
                        "explanation": "If the marker is 6, Kevin eats: max(0, 5-6) + max(0, 8-6) + max(0, 20-6) + max(0, 1-6) = 0 + 2 + 14 + 0 = 16 fruits."
                    },
                    {
                        "input": "N = 3, M = 2, arr = [2, 2, 2]",
                        "output": "1",
                        "explanation": "If the marker is 1, Kevin eats: max(0, 2-1) + max(0, 2-1) + max(0, 2-1) = 1 + 1 + 1 = 3 fruits."
                    },
                    {
                        "input": "N = 4, M = 1, arr = [2, 0, 1, 0]",
                        "output": "1",
                        "explanation": "If the marker is 1, Kevin eats: max(0, 2-1) + max(0, 0-1) + max(0, 1-1) + max(0, 0-1) = 1 + 0 + 0 + 0 = 1 fruit."
                    },
                    {
                        "input": "N = 5, M = 15, arr = [1, 2, 3, 4, 5]",
                        "output": "0",
                        "explanation": "If the marker is 0, Kevin eats: max(0, 1-0) + max(0, 2-0) + max(0, 3-0) + max(0, 4-0) + max(0, 5-0) = 1 + 2 + 3 + 4 + 5 = 15 fruits."
                    },
                    {
                        "input": "N = 2, M = 5, arr = [10, 2]",
                        "output": "7",
                        "explanation": "If marker is 7, kevin eats max(0,10-7) + max(0,2-7) = 3 + 0 = 3, less than M. \nIf marker is 6, kevin eats max(0,10-6) + max(0,2-6) = 4 + 0 = 4, less than M.\nIf marker is 5, kevin eats max(0,10-5) + max(0,2-5) = 5 + 0 = 5, equal to M. so the correct answer is 5.\n If marker is 8, kevin eats max(0, 10-8)+ max(0,2-8)= 2 + 0= 2 which is less than M. if marker is 9, kevin eats max(0, 10-9)+ max(0, 2-9)= 1+0=1, so maxiumum it can be is 7."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>The marker will be anywhere in between 0 and maximum fruits in any particular bucket.</p>",
            "<p>Use binary search to find the marker in between 0 and maximum fruits in any particular bucket.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}