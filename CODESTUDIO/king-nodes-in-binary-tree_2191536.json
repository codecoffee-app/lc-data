{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 14557,
            "title": "King Nodes In Binary Tree",
            "titleSlug": "king-nodes-in-binary-tree_2191536",
            "content": "<h4 id=\"you-have-been-practicing-on-the-topic-binary-tree-for-few-days-your-friend-challenged-you-by-giving-you-a-binary-tree-and-asks-you-to-find-the-number-of-king-nodes-a-node-with-value-n-is-king-if-no-node-has-a-value-greater-than-n-in-the-path-from-the-root-to-it\">You have been practicing on the topic binary tree for few days. Your friend challenged you by giving you a binary tree and asks you to find the number of King nodes. A node with value \u2018N\u2019 is King if no node has a value greater than \u2018N\u2019 in the path from the root to it.</h4>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>1. Two nodes may have the same value associated with it.\n2. The root node will be fixed and will be provided in the function.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of the input contains a single integer &#39;T&#39;, representing the number of test cases.\n\nThe first line of each test case contains an integer &#39;N&#39;, which denotes the number of nodes in the tree.\n\nThe second line of each test case will contain the values of the nodes of the tree in the level order form ( -1 for &#39;NULL&#39; node) Refer to the example for further clarification.\n</code></pre>\n\n<h5 id=\"example\">Example :</h5>\n\n<pre><code>Consider the binary tree\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/tree-12333.PNG\" alt=\"\"></p>\n\n<pre><code>The input of the tree depicted in the image above will be like : \n\n1\n2 3\n4 -1 5 6\n-1 7 -1 -1 -1 -1\n-1 -1\n\nExplanation :\nLevel 1 :\nThe root node of the tree is 1\n\nLevel 2 :\nLeft child of 1 = 2\nRight child of 1 = 3\n\nLevel 3 :\nLeft child of 2 = 4\nRight child of 2 = null (-1)\nLeft child of 3 = 5\nRight child of 3 = 6\n\nLevel 4 :\nLeft child of 4 = null (-1)\nRight child of 4 = 7\nLeft child of 5 = null (-1)\nRight child of 5 = null (-1)\nLeft child of 6 = null (-1)\nRight child of 6 = null (-1)\n\nLevel 5 :\nLeft child of 7 = null (-1)\nRight child of 7 = null (-1)\n\nThe first not-null node (of the previous level) is treated as the parent of the first two nodes of the current level. The second not-null node (of the previous level) is treated as the parent node for the next two nodes of the current level and so on.\n\nThe input ends when all nodes at the last level are null (-1).\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print a single integer representing the number of King nodes.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 5*10^3\n\nTime Limit : 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n5\n1 2 3 4 5 -1 -1 -1 -1 -1 -1\n3\n2 3 1 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>5\n2\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1 :</h5>\n\n<pre><code>For first test case the tree will be :\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/tree1-12334.PNG\" alt=\"\"></p>\n\n<pre><code>Node 1 : (1) path has maximum value as 1 itself.\nNode 2 : (1 2)  path has maximum value as 2.\nNode 3 : (1 3) path has maximum value as 3.\nNode 4 : (1 2 4) path has maximum value as 4.\nNode 5 : (1 2 5) path has maximum value as 5.\nSo, the total number of King nodes is 5.  \n\nFor second test tree will be :\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/tree2-12335.PNG\" alt=\"\"></p>\n\n<pre><code>Node 2 : (2) path has maximum value as 2 itself.\nNode 3 : (2 3)  path has maximum value as 3.\nNode 1 : (2 1) path has maximum value as 2.\nSo, the total number of King nodes is 2.  \n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n3\n1 5 -1 2 -1 -1 -1\n4 \n3 4 8 1 -1 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>2\n3\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 6,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a binary tree, determine the number of 'King' nodes. A node with value 'N' is considered a 'King' if no node on the path from the root to that node has a value greater than 'N'. The tree is provided in level order format.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 5 * 10^3",
                    "Time Limit : 1 sec"
                ],
                "testcases": [
                    {
                        "input": "5\n1 2 3 4 5 -1 -1 -1 -1 -1 -1",
                        "output": "5",
                        "explanation": "The tree is structured as follows:\n\n      1\n     / \\\n    2   3\n   / \\\n  4   5\n\nNode 1: Path (1), Max value is 1.\nNode 2: Path (1, 2), Max value is 2.\nNode 3: Path (1, 3), Max value is 3.\nNode 4: Path (1, 2, 4), Max value is 4.\nNode 5: Path (1, 2, 5), Max value is 5.\nTherefore, all 5 nodes are King nodes."
                    },
                    {
                        "input": "3\n2 3 1 -1 -1 -1 -1",
                        "output": "2",
                        "explanation": "The tree is structured as follows:\n\n    2\n   / \\\n  3   1\n\nNode 2: Path (2), Max value is 2.\nNode 3: Path (2, 3), Max value is 3.\nNode 1: Path (2, 1), Max value is 2.\nThus, nodes 2 and 1 are King nodes (total 2)."
                    },
                    {
                        "input": "3\n1 5 -1 2 -1 -1 -1",
                        "output": "2",
                        "explanation": "The tree is structured as follows:\n\n    1\n   /  \n  5   \n / \n2   \n\nNode 1: Path (1), Max value is 1\nNode 5: Path (1, 5), Max value is 5\nNode 2: Path (1,5,2), max value is 5\nThus, nodes 1 and 5 are King nodes (total 2)."
                    },
                    {
                        "input": "4\n3 4 8 1 -1 -1 -1 -1 -1",
                        "output": "3",
                        "explanation": "The tree is structured as follows:\n\n    3\n   / \\\n  4   8\n / \n1  \n\nNode 3: Path (3), Max value is 3.\nNode 4: Path (3, 4), Max value is 4.\nNode 8: Path (3, 8), Max value is 8\nNode 1: Path (3,4,1) Max value is 4\nThus, nodes 3, 4, and 1 are King nodes (total 3)."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Think of traversing each path.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Depth-first Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Trees",
                "slug": "binary-trees"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}