{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 20964,
            "title": "King Placement",
            "titleSlug": "king-placement_5026931",
            "content": "<h4 id=\"this-is-a-typical-chess-game-where-your-opponent-first-places-a-random-number-of-knights-rooks-bishop-and-queens-on-an-n-n-chessboard-and-then-you-have-to-place-your-king-safely-on-the-chessboard-such-that-it-should-not-be-under-attack-by-any-piece\">This is a typical chess game where your opponent first places a random number of Knights, Rooks, Bishop, and Queens on an \u2018N*N\u2019 chessboard, and then you have to place your king safely on the chessboard such that it should not be under attack by any piece.</h4>\n\n<h4 id=\"given-an-n-n-chessboard-with-k-number-of-knights-r-number-of-rooks-b-number-of-bishops-and-q-number-of-queens-your-task-is-to-find-out-the-number-of-squares-on-the-chessboard-such-that-your-king-is-not-checked-by-any-of-your-opponents-pieces\">Given an \u2018N*N\u2019 chessboard with \u2018K\u2019 number of Knights, \u2018R\u2019 number of Rooks, \u2018B\u2019 number of Bishops, and \u2018Q\u2019 number of queens. Your task is to find out the number of squares on the chessboard such that your King is not checked by any of your opponent&#39;s pieces.</h4>\n\n<h4 id=\"note-if-you-dont-know-how-to-play-chess-and-how-chess-pieces-move-please-refer-to-the-below-link-you-can-concentrate-only-on-how-the-above-mentioned-pieces-move\">NOTE: If you don&#39;t know how to play chess and how chess pieces move, please refer to the below link (you can concentrate only on how the above-mentioned pieces move).</h4>\n\n<h4 id=\"how-to-play-chess\"><a href=\"https://www.instructables.com/id/Playing-Chess/\">HOW TO PLAY CHESS</a></h4>\n\n<h5 id=\"example\">EXAMPLE :</h5>\n\n<pre><code>Refer to the explanation of Sample Input 1 for better understanding.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line will contain the integer &#39;T&#39;, the number of test cases.\n\nThe first line of each test case consists of integer  &#39;N&#39;, the length of the given chessboard.\n\nThe next line contains \u2018K\u2019, no. of Knights. Next, \u2018K\u2019 lines provide 2 space-separated integers denoting the row and the column of the Knights \u2018(i,j)\u2019\n\nThe next line contains \u2018R\u2019, no. of Rooks. Next, \u2018R\u2019 lines provide 2 space-separated integers denoting the row and the column of the Rooks \u2018(i,j)\u2019\n\nThe next line contains \u2018B\u2019, no. of Bishops. Next, \u2018B\u2019 lines provide 2 space-separated integers denoting the row and the column of the Bishops \u2018(i,j)\u2019\n\nThe next line contains \u2018Q\u2019, no. of Queens. Next, \u2018Q\u2019 lines provide 2 space-separated integers denoting the row and the column of the Queens \u2018(i,j)\u2019\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case, print the number of squares where King can be placed safely.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don&#39;t need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= &#39;T&#39; &lt;= 10\n2 &lt;= &#39;N&#39; &lt;= 100\n0 &lt;= &#39;K&#39; + \u2018R\u2019 + \u2018B\u2019 + \u2018Q\u2019 &lt;= \u2018N * N\u2019\n0 &lt;= \u2018i\u2019, \u2018j\u2019 &lt;= \u2018N - 1\u2019\nIt is guaranteed that sum of \u2018N\u2019 over all test cases is &lt;= 1000\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n\n4\n2\n0 0\n1 1\n1\n2 2\n0\n1\n3 3\n\n8\n4\n2 6\n3 2\n5 6\n7 7\n4\n2 2\n4 6\n6 4\n7 5\n4\n0 4\n1 1\n1 6\n5 1\n2\n3 5\n6 0\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>2\n5\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1 :</h5>\n\n<pre><code>For the first test case,\n</code></pre>\n\n<p><img src=\"https://i.imgur.com/loC72iWl.png\" alt=\"\"></p>\n\n<pre><code>The safe places are (0, 1) and (1, 0)\n\nHence, the output will be: 2\n\nFor the second test case,\n</code></pre>\n\n<p><img src=\"https://i.imgur.com/GqZPH0kl.png\" alt=\"\"></p>\n\n<pre><code>The safe places are (0, 1), (0, 3), (1, 7), (3, 1), and (5, 7).\n\nHence, the output will be: 5\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n\n4\n2\n0 0\n1 1\n3\n2 2\n3 0\n0 3\n0\n1\n3 3\n\n8\n5\n2 6\n3 2\n5 6\n7 7\n4 0\n4\n2 2\n4 6\n6 4\n7 5\n4\n0 4\n1 1\n1 6\n5 1\n3\n3 5\n6 0\n4 2\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>0\n6\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 10,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an N*N chessboard with K Knights, R Rooks, B Bishops, and Q Queens, determine the number of squares where a King can be placed such that it is not under attack by any of the opponent's pieces. A square is under attack if any of the opponent's pieces can move to that square according to standard chess rules.",
                "constraints": [
                    "1 <= T <= 10",
                    "2 <= N <= 100",
                    "0 <= K + R + B + Q <= N * N",
                    "0 <= i, j <= N - 1",
                    "Sum of N over all test cases <= 1000",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "4\n2\n0 0\n1 1\n1\n2 2\n0\n1\n3 3",
                        "output": "2",
                        "explanation": "The chessboard is of size 4x4. There are 2 Knights at (0, 0) and (1, 1), 1 Rook at (2, 2), 0 Bishops, and 1 Queen at (3, 3). The squares (0, 1) and (1, 0) are the only squares where the king can be placed without being attacked."
                    },
                    {
                        "input": "8\n4\n2 6\n3 2\n5 6\n7 7\n4\n2 2\n4 6\n6 4\n7 5\n4\n0 4\n1 1\n1 6\n5 1\n2\n3 5\n6 0",
                        "output": "5",
                        "explanation": "The chessboard is of size 8x8. There are 4 Knights at (2, 6), (3, 2), (5, 6), and (7, 7), 4 Rooks at (2, 2), (4, 6), (6, 4), and (7, 5), 4 Bishops at (0, 4), (1, 1), (1, 6), and (5, 1), and 2 Queens at (3, 5) and (6, 0). The squares (0, 1), (0, 3), (1, 7), (3, 1), and (5, 7) are safe for the King."
                    },
                    {
                        "input": "4\n2\n0 0\n1 1\n3\n2 2\n3 0\n0 3\n0\n1\n3 3",
                        "output": "0",
                        "explanation": "The chessboard is of size 4x4. The Knights are at (0, 0) and (1, 1). The Rooks are at (2, 2), (3, 0), and (0, 3). There are no bishops and one queen at (3, 3). No square is safe for the King."
                    },
                    {
                        "input": "8\n5\n2 6\n3 2\n5 6\n7 7\n4 0\n4\n2 2\n4 6\n6 4\n7 5\n4\n0 4\n1 1\n1 6\n5 1\n3\n3 5\n6 0\n4 2",
                        "output": "6",
                        "explanation": "The chessboard is of size 8x8. There are 5 Knights at (2, 6), (3, 2), (5, 6), (7, 7), and (4, 0), 4 Rooks at (2, 2), (4, 6), (6, 4), and (7, 5), 4 Bishops at (0, 4), (1, 1), (1, 6), and (5, 1), and 3 Queens at (3, 5), (6, 0) and (4,2). Six squares are safe for the king."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><strong>Can we try to place our king at each position and check if it is attacked.</strong></p>",
            "<p><strong>Can we mark all attacked cells in one iteration of the chessboard?.</strong></p>"
        ],
        "relatedTopics": [
            {
                "name": "Ad-Hoc",
                "slug": "ad-hoc"
            },
            {
                "name": "Matrices (2D Arrays)",
                "slug": "matrices-(2d-arrays)"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}