{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9988,
            "title": "Kth Minimum Floor",
            "titleSlug": "kth-minimum-floor_1115470",
            "content": "<h4 id=\"ninja-is-appointed-as-an-architect-in-square-city-as-the-name-suggests-all-the-n-n-buildings-in-the-square-city-are-constructed-in-a-square-grid-with-n-rows-and-n-columns-each-building-has-a-fixed-number-of-floors-and-is-arranged-in-a-row-and-column-in-non-decreasing-order-of-the-number-of-floors\">Ninja is appointed as an architect in Square City. As the name suggests, all the \u2018N\u2019 * \u2018N\u2019 buildings in the Square City are constructed in a square grid with \u2018N\u2019 rows and \u2018N\u2019 columns. Each building has a fixed number of floors and is arranged in a row and column in non decreasing order of the number of floors.</h4>\n\n<h4 id=\"for-example-one-of-the-square-city-with-n-3-is-shown-below\">For example: One of the Square City with \u2018N = 3\u2019 is shown below:</h4>\n\n<p><img src=\"https://files.codingninjas.in/example-7781.JPG\" alt=\"alt\"></p>\n\n<h4 id=\"ninja-wants-to-develop-the-square-city-so-he-selects-the-k-the-building-with-minimum-floors-and-plans-to-work-on-it-as-he-is-busy-deciding-the-design-and-infrastructure-for-that-building-he-asks-you-for-help\">Ninja wants to develop the Square City. So, he selects the \u2018K\u2019the building with minimum floors and plans to work on it. As he is busy deciding the design and infrastructure for that building, he asks you for help.</h4>\n\n<h4 id=\"for-example-for-the-given-square-city-and-k-4-the-4th-building-having-the-minimum-number-of-floors-is-at-2-0-and-having-11-floors\">For Example: For the given Square City and \u2018K\u2019 = 4, the 4th building having the minimum number of floors is at (2,0) and having 11 floors.</h4>\n\n<p><img src=\"https://files.codingninjas.in/city-7780.JPG\" alt=\"text\"></p>\n\n<h4 id=\"can-you-help-ninja-find-the-building-with-k-the-building-with-minimum-floors\">Can you help Ninja find the building with \u2018K\u2019the building with minimum floors?</h4>\n\n<h4 id=\"input-format\">Input Format :</h4>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases. Then each test case follows.\n\nThe first line of each test case contains two single space-separated integers \u2018N\u2019 and \u2018K\u2019 where \u2018N\u2019 represents the size (number of rows or columns) of Square City and &#39;K&#39; denotes the Kth building with minimum floors, respectively.\n\nThe next \u2018N\u2019 lines of each test case contain \u2018N\u2019 single space-separated integers denoting the number of floors in each building.\n</code></pre>\n\n<h4 id=\"output-format\">Output Format :</h4>\n\n<pre><code>For each test case, print the number of floors in the \u2018K\u2019th\u2019 building with minimum floors.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>You are not required to print the expected output; it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints :</h4>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= N &lt;= 100\n1 &lt;= K &lt;= N\n1 &lt;= Square City[i][j] &lt;= 10^6 \n\nwhere &#39;Square City[i][j]&#39; denotes the number of floors in a row and column wise sorted matrix &#39;Square City&#39;.\n\nTime limit: 1 sec\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1 :</h4>\n\n<pre><code>2\n3 4\n1 2 8\n4 10 11\n6 11 12\n1 1\n4    \n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1 :</h4>\n\n<pre><code>6\n4\n</code></pre>\n\n<h4 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1 :</h4>\n\n<pre><code>For the first test case, if we write all the floors in increasing order then the 4th building from the beginning will be 6 as shown below:\n1, 2, 4, 6, 8, 10, 11, 11, 12\n\nFor the second test case, we have only one building in the smart city so this will be the 1\u2019st minimum.\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2 :</h4>\n\n<pre><code>1\n2 4\n1 9\n14 16\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2 :</h4>\n\n<pre><code>16\n</code></pre>\n\n<h4 id=\"explanation-for-sample-input-2\">Explanation for Sample Input 2 :</h4>\n\n<pre><code>If we write all the floors in increasing order then the 4\u2019th minimum will be 16 as shown below:\n1 9 14 16\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 7,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a square city represented by an N x N grid of buildings, where each building has a specific number of floors. The buildings are arranged such that the number of floors is non-decreasing in both rows and columns. Your task is to find the Kth smallest number of floors among all the buildings in the city.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= N <= 100",
                    "1 <= K <= N * N",
                    "1 <= Square City[i][j] <= 10^6",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "2\n3 4\n1 2 8\n4 10 11\n6 11 12\n1 1\n4",
                        "output": "6\n4",
                        "explanation": "In the first test case, the city is 3x3. If we sort the number of floors in ascending order, we get [1, 2, 4, 6, 8, 10, 11, 11, 12]. The 4th smallest number is 6.\n\nIn the second test case, the city is 1x1 and K=1.  The only building has 4 floors. Thus, the 1st smallest (and only) number of floors is 4."
                    },
                    {
                        "input": "1\n2 4\n1 9\n14 16",
                        "output": "16",
                        "explanation": "The city is 2x2.  Sorting the floors gives [1, 9, 14, 16]. The 4th smallest number of floors is 16."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Think of using a Brute force approach</p>",
            "<p>Think of using heap data structure in this problem.</p>",
            "<p>Try to optimize time and space by using binary search in this problem.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Heap",
                "slug": "heap"
            },
            {
                "name": "Matrices (2D Arrays)",
                "slug": "matrices-(2d-arrays)"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}