{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 14963,
            "title": "Lakshay and Manik",
            "titleSlug": "lakshay-and-manik_2324070",
            "content": "<h4 id=\"lakshay-and-manik-met-on-an-online-chatting-platform-due-to-their-shared-interest-in-problem-solving-they-became-good-friends-one-day-lakshay-decided-to-meet-manik-manik-lives-in-a-small-town-at-0-n-1-on-a-square-matrix-of-n-n-and-lakshay-lives-at-n-1-0-as-they-are-fond-of-problem-solving-manik-wants-to-know-how-many-ways-lakshay-can-reach-him-help-lakshay-to-find-out-how-many-possible-paths-are-there-to-reach-manik\">Lakshay and Manik met on an online chatting platform. Due to their shared interest in problem-solving, they became good friends. One day Lakshay decided to meet Manik. Manik lives in a small town at (0, N - 1) on a square matrix of N * N, and Lakshay lives at (N - 1, 0). As they are fond of problem-solving, Manik wants to know how many ways Lakshay can reach him. Help Lakshay to find out how many possible paths are there to reach Manik.</h4>\n\n<h4 id=\"lakshay-can-move-up-j-k-j-1-k-right-j-k-j-k-1-or-up-right-j-k-j-1-k-1\">Lakshay can move Up(j, k) -&gt; (j - 1, k), RIght(j, k) -&gt; (j, k + 1) or Up-Right(j, k) -&gt; (j - 1, k + 1).</h4>\n\n<h4 id=\"answers-can-be-very-large-so-return-the-answer-modulo-1000000007\">Answers can be very large, so return the answer modulo 1000000007.</h4>\n\n<h5 id=\"for-example\">For Example :</h5>\n\n<pre><code>N = 2\n</code></pre>\n\n<p><img src=\"      https://files.codingninjas.in/lakshay_and_manik_example-12663.png\"/></p>\n\n<pre><code>For n = 2, there can be three possible moves, as shown in the figure. Hence the answer is 3.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 denoting the number of test cases, then each test case follows:\n\nThe first line of each test case contains a single integer \u2018N\u2019 denoting the size of the square matrix.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print a single integer \u201cans\u201d denoting the total number of paths.\n\nOutput for each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You are not required to print anything; it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10    \n1 &lt;= N &lt;= 500\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n3\n2\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>13\n3\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1 :</h5>\n\n<pre><code>In the first test case, There is a total of thirteen possible paths. Hence, the answer is 13.\n\nIn the second test case, There is a total of 3 possible paths. Hence, the answer is 3.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n5\n7\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>321\n8989\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 8,
            "dislikes": "NA",
            "rephrased": {
                "body": "Lakshay and Manik, both avid problem solvers, connected online.  Lakshay decides to visit Manik, who lives in a town represented as coordinate (0, N - 1) on an N x N grid. Lakshay starts at (N - 1, 0). Find the number of possible paths Lakshay can take to reach Manik. Lakshay can move Up (j, k) -> (j - 1, k), Right (j, k) -> (j, k + 1), or Up-Right (j, k) -> (j - 1, k + 1). Return the answer modulo 1000000007.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 500"
                ],
                "testcases": [
                    {
                        "input": "3\n2",
                        "output": "13\n3",
                        "explanation": "For N=3, there are 13 possible paths. For N=2, there are 3 possible paths."
                    },
                    {
                        "input": "5\n7",
                        "output": "321\n8989",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Recursively call all the possible paths and return the final answer.</p>",
            "<p>There can be many repetitive calculations in the recursive solution, which can be skipped by storing them while computing for the first time</p>",
            "<p>Try calculating all the paths starting from (N - 1, 0) to (0, N - 1)</p>"
        ],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}