{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8326,
            "title": "Langford pairing",
            "titleSlug": "langford-pairing_845178",
            "content": "<h4 id=\"you-are-given-a-positive-integer-n-return-a-list-of-integers-of-size-2n-containing-all-the-integers-from-1-to-n-both-inclusive-twice-arranged-according-to-langford-pairing-if-no-such-pairing-exists-return-1-is-the-only-list-element\">You are given a positive integer N. Return a list of integers of size 2N containing all the integers from 1 to N (both inclusive) twice arranged according to <a href = \"https://en.wikipedia.org/wiki/Langford_pairing\" target = \"_blank\">Langford pairing</a>. If no such pairing exists return -1 is the only list element.</h4>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>There may be more than one Langford pair possible, you need to return anyone permutation.\n</code></pre>\n\n<h5 id=\"for-example\">For example:</h5>\n\n<pre><code>For N = 4, one possible Langford pairing will be:-\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/360px-langford_pairing-svg-5670.png\" alt=\"langford\"></p>\n\n<h5 id=\"input-format\">Input format:</h5>\n\n<pre><code>The first line contains an integer &#39;T&#39; which denotes the number of test cases or queries to be run. Then, the T test cases follow.\n\nThe first and only line of each test case or query contains the integer N. \n</code></pre>\n\n<h5 id=\"output-format\">Output format:</h5>\n\n<pre><code>The only line of output contains \u201cValid\u201d if the answer is correct and \u201cInvalid\u201d if it\u2019s not, without quotes. \n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 5\n0 &lt;= N &lt;= 32\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n4\n5\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>4 1 3 1 2 4 3 2 \n-1\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1:</h5>\n\n<pre><code>For the first test case:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/360px-langford_pairing-svg-5670.png\" alt=\"langford\"></p>\n\n<pre><code>For the second test case:\nNo Langford pairing is possible, hence print -1.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\n15\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>15 13 14 8 5 12 7 11 4 10 5 9 8 4 7 13 15 14 12 11 10 9 6 3 1 2 1 3 2 6\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 4,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a positive integer N, construct a list of integers of size 2N representing a Langford pairing. A Langford pairing contains each integer from 1 to N exactly twice, such that for each integer 'i' between 1 and N, the two occurrences of 'i' are separated by exactly 'i' positions. If no such pairing exists, return a list containing only -1.",
                "constraints": [
                    "1 <= T <= 5",
                    "0 <= N <= 32",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "n = 4",
                        "output": "4 1 3 1 2 4 3 2",
                        "explanation": "A valid Langford pairing for N = 4 is [4, 1, 3, 1, 2, 4, 3, 2].  The distance between the two '1's is 1, between the two '2's is 2, between the two '3's is 3, and between the two '4's is 4."
                    },
                    {
                        "input": "n = 5",
                        "output": "-1",
                        "explanation": "No Langford pairing exists for N = 5. Thus, the result is a list containing only -1."
                    },
                    {
                        "input": "n = 15",
                        "output": "15 13 14 8 5 12 7 11 4 10 5 9 8 4 7 13 15 14 12 11 10 9 6 3 1 2 1 3 2 6",
                        "explanation": "A valid Langford pairing for N = 15 is [15, 13, 14, 8, 5, 12, 7, 11, 4, 10, 5, 9, 8, 4, 7, 13, 15, 14, 12, 11, 10, 9, 6, 3, 1, 2, 1, 3, 2, 6]."
                    },
                    {
                        "input": "n = 0",
                        "output": "-1",
                        "explanation": "No Langford pairing exists for N = 0. Thus, the result is a list containing only -1."
                    },
                    {
                        "input": "n = 1",
                        "output": "-1",
                        "explanation": "No Langford pairing exists for N = 1. Thus, the result is a list containing only -1."
                    },
                    {
                        "input": "n = 7",
                        "output": "7 4 1 6 1 4 7 6 2 5 3 2 3 5",
                        "explanation": "A valid Langford pairing for N = 7 is [7, 4, 1, 6, 1, 4, 7, 6, 2, 5, 3, 2, 3, 5]."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>First off, observe that the question is basically a permutation question, the only twist is that once we fix the first position of one element, the other position of that element is fixed itself.&nbsp;&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}