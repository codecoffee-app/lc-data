{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9593,
            "title": "Largest Component",
            "titleSlug": "largest-component_1062695",
            "content": "<h4 id=\"you-are-given-an-array-arr-of-size-n-containing-positive-integers-consider-an-undirected-graph-using-the-given-array-with-the-following-conditions\">You are given an array &#39;ARR&#39; of size &#39;N&#39; containing positive integers. Consider an undirected graph using the given array with the following conditions:</h4>\n\n<pre><code>-&gt; The graph consists of &#39;N&#39; vertices.\n-&gt; The ith vertex has a value &#39;ARR[i]&#39;.\n-&gt; There is an edge between two vertices &#39;i&#39; and &#39;j&#39; (where &#39;i&#39; &lt; &#39;j&#39;), if and only if GCD(&#39;ARR[i]&#39;, &#39;ARR[j]&#39;) is greater than 1.\n</code></pre>\n\n<h4 id=\"gcd-a-b-is-the-maximum-number-x-such-that-both-a-and-b-are-divisible-by-x\">GCD(a, b) is the maximum number x such that both a and b are divisible by x.</h4>\n\n<h4 id=\"your-task-is-to-find-the-size-of-the-largest-component-in-the-graph\">Your task is to find the size of the largest component in the graph.</h4>\n\n<h4 id=\"a-component-of-an-undirected-graph-is-a-subgraph-in-which-any-two-vertices-are-connected-to-each-other-by-paths-and-which-is-connected-to-no-additional-vertices-in-the-rest-of-the-graph-the-size-of-a-component-is-the-number-of-vertices-in-it\">A component of an undirected graph is a subgraph in which any two vertices are connected to each other by paths, and which is connected to no additional vertices in the rest of the graph. The size of a component is the number of vertices in it.</h4>\n\n<h5 id=\"input-format\">Input format :</h5>\n\n<pre><code>The first line of input contains a single integer &#39;T&#39;, representing the number of test cases or queries to be run. \nThen the &#39;T&#39; test cases are as follows.\n\nThe first line of each test case contains a positive integer &#39;N&#39;, which represents the size of the array &#39;ARR&#39;.\n\nThe next line contains &#39;N&#39; single space-separated positive integers representing the elements of the array.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print an integer denoting the size of the largest component in the graph.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 10^3\n1 &lt;= ARR[i] &lt;= 10^5\n\nWhere &#39;ARR[i]&#39; is the ith element in the array.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1\n6\n10 4 2 5 3 9\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>4\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1:</h5>\n\n<pre><code>In the first test case, there are two components of size 4 and 2.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/sample-6898.jpg\" alt=\"sample\"></p>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n3\n1 2 3\n4\n2 2 2 2\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>1\n4\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation for Sample Input 2:</h5>\n\n<pre><code>In the first test case, there are three components and each is of size 1.\nIn the second test case, there is only one  components and it is of size 4.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -10,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array 'ARR' of size 'N' containing positive integers, construct an undirected graph.  The graph has 'N' vertices, where the i-th vertex has the value 'ARR[i]'. An edge exists between vertices 'i' and 'j' (i < j) if and only if GCD('ARR[i]', 'ARR[j]') > 1, where GCD(a, b) is the greatest common divisor of a and b.\n\nDetermine the size of the largest connected component in the graph. A connected component is a subgraph where any two vertices are reachable by a path, and it's not connected to any other vertices in the graph. The size of a component is the number of vertices it contains.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10^3",
                    "1 <= ARR[i] <= 10^5",
                    "Where 'ARR[i]' is the ith element in the array.",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "6\n10 4 2 5 3 9",
                        "output": "4",
                        "explanation": "The array [10, 4, 2, 5, 3, 9] forms a graph with two components. One component includes vertices with values [10, 4, 2, 5, 9] (size 4: 10, 4, 2, 5 are pairwise connected due to common factors and also with 9, since (3,9) has gcd>1, (5,10) has gcd>1 and the other part [10,4,2] has pairwise gcd>1). The second component is the vertex with value [3] (size 2: where [10,4,2,5,9] connects with '3'), The largest component therefore has size 4."
                    },
                    {
                        "input": "3\n1 2 3",
                        "output": "1",
                        "explanation": "The array [1, 2, 3] results in three isolated vertices (components of size 1) since GCD(1, 2) = 1, GCD(1, 3) = 1, and GCD(2, 3) = 1. Hence, the largest component size is 1."
                    },
                    {
                        "input": "4\n2 2 2 2",
                        "output": "4",
                        "explanation": "The array [2, 2, 2, 2] creates a fully connected graph because the GCD of any two elements is always 2 (greater than 1). Thus, all vertices belong to the same component, and its size is 4."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you make the graph and find the size of every component?</p>",
            "<p>Can you think of using Disjoint Set Union to find the size of components?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}