{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12650,
            "title": "Largest zigzag sequence",
            "titleSlug": "largest-zigzag-sequence_1472641",
            "content": "<h4 id=\"you-are-given-a-matrix-mat-of-dimensions-n-x-n-let-s-define-a-sequence-to-be-zigzag-if-it-starts-from-the-top-and-ends-at-the-bottom-such-that-no-two-consecutive-elements-of-the-sequence-belong-to-the-same-column\">You are given a matrix \u2018MAT\u2019 of dimensions \u2018N x N\u2019. Let\u2019s define a sequence to be \u2018zigzag\u2019 if it starts from the top and ends at the bottom such that no two consecutive elements of the sequence belong to the same column.</h4>\n\n<h4 id=\"your-task-is-to-find-the-sum-of-the-zigzag-sequence-with-the-largest-sum\">Your task is to find the sum of the zigzag sequence with the largest sum.</h4>\n\n<h4 id=\"input-format\">Input Format :</h4>\n\n<pre><code>The first line contains an integer \u2018T\u2019, which denotes the number of test cases to be run. Then, the T test cases follow. \n\nThe first line of each test case contains a single positive integer, \u2018N\u2019, as described in the problem statement.\n\nThe next \u2018N\u2019 lines of each test case contains \u2018N\u2019 space-separated number, \u2018MAT[i][j]\u2019, representing the value at index (i,j) of the matrix.\n</code></pre>\n\n<h4 id=\"output-format\">Output Format :</h4>\n\n<pre><code>For each test case, print the \u201csum of the zigzag sequence with the largest sum\u201d, as described in the problem statement.\n\nOutput for each test case will be printed in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints :</h4>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 100\n1 &lt;= MAT[i][j] &lt;= 1000\n\nWhere &#39;MAT[i][j]&#39; denotes the value of matrix at &#39;jth&#39; column of &#39;ith&#39; row.\n\nTime Limit: 1sec\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1 :</h4>\n\n<pre><code>1\n2\n1 3\n2 4\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1 :</h4>\n\n<pre><code>5\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for sample input 1 :</h5>\n\n<pre><code>There are only two possible zigzag sequences:\n(i) 1 -&gt; 4 with sum eqaul to 5.\n(ii) 3 -&gt; 2 with sum equal to 5.\nHence both are optimal zigzag sequences with a sum equal to 5.\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2 :</h4>\n\n<pre><code>1\n3\n1 2 3\n3 4 5\n4 5 6\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2 :</h4>\n\n<pre><code>13\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation for sample input 2 :</h5>\n\n<pre><code>The optimal zigzag sequence is 3 -&gt; 4 -&gt; 6 with a sum eqaul to 13.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -10,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a square matrix 'MAT' of size 'N x N', a 'zigzag sequence' is defined as a sequence that starts from the top row and ends at the bottom row, with the constraint that no two consecutive elements in the sequence can belong to the same column.  The goal is to find the zigzag sequence with the maximum sum.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 100",
                    "1 <= MAT[i][j] <= 1000",
                    "'MAT[i][j]' denotes the value of the matrix at the 'jth' column of the 'ith' row.",
                    "Time Limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "2\n1 3\n2 4",
                        "output": "5",
                        "explanation": "There are two possible zigzag sequences:\n1 -> 4 with a sum of 5.\n3 -> 2 with a sum of 5.\nBoth are optimal with a sum of 5."
                    },
                    {
                        "input": "3\n1 2 3\n3 4 5\n4 5 6",
                        "output": "13",
                        "explanation": "The optimal zigzag sequence is 3 -> 4 -> 6 with a sum of 13."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><i>Try to find all possible zigzag sequences using recursion.</i></p>",
            "<p><i>Try to use the memoization technique.</i></p>"
        ],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}