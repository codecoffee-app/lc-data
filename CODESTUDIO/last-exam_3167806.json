{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 16499,
            "title": "Last Exam",
            "titleSlug": "last-exam_3167806",
            "content": "<h4 id=\"the-ninja-had-finished-his-last-exam-and-wanted-to-reach-home-as-soon-as-possible-to-play-video-games-his-exam-centre-lies-at-position-0-and-his-home-is-at-position-x-on-the-x-axis-the-ninja-jumps-according-to-the-following-rules\">The Ninja had finished his last exam and wanted to reach home as soon as possible to play video games. His exam centre lies at position 0, and his home is at position \u2018X\u2019 on the x-axis. The ninja jumps according to the following rules:</h4>\n\n<ul style= \"color: rgb(255, 255, 255); \n    mix-blend-mode: difference; \">\n<li> He can jump exactly \u2018A\u2019 positions to the right. </li>\n<li> He can jump exactly \u2018B\u2019 positions to the left. </li>\n<li> He cannot jump to the left twice in a row. </li>\n<li> He cannot jump to any restricted positions. </li>\n<li> He can jump beyond his home but cannot jump to positions with negative integers. </li>\n</ul>\n\n<h4 id=\"you-are-given-an-array-restricted-containing-the-restricted-positions-you-are-also-given-three-integers-a-b-and-x-your-task-is-to-find-the-minimum-number-of-jumps-needed-for-the-ninja-to-reach-his-home-if-there-is-no-possible-sequence-of-jumps-that-lands-ninja-on-position-x-return-1\">You are given an array \u2018RESTRICTED\u2019 containing the restricted positions. You are also given three integers, \u2018A\u2019, \u2018B\u2019, and \u2018X\u2019. Your task is to find the minimum number of jumps needed for the ninja to reach his home. If there is no possible sequence of jumps that lands ninja on position \u2018X\u2019. return -1.</h4>\n\n<h4 id=\"for-example\">For Example:</h4>\n\n<pre><code>You are given \u2018RESTRICTED\u2019 = {1, 3}, \u2018A\u2019 = 2, \u2018B\u2019 = 1 and \u2018X\u2019 = 4. Then ninjas requires two jumps(0 -&gt; 2 -&gt; 4) to reach his home.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of the input contains a single integer &#39;T&#39;, representing the number of test cases.\n\nThe first line of each test case contains four space-separated integers, \u2018A\u2019, \u2018B\u2019, \u2018X\u2019, and \u2018N\u2019.\n\nThe Second line contains \u2018N\u2019 space-separated integers representing the restricted positions.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print the minimum number of jumps needed for the ninja to reach his home.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 1000\n1 &lt;= A, B, RESTRICTED[i] &lt;= 2000\n0 &lt;= X &lt;= 2000\nRESTRICTED contains distinct elements.\nPosition X is not restricted.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n2 1 4 2\n1 3 \n3 1 3\n1 2 7\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>2\n3\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1:</h5>\n\n<pre><code>For the second test case, the ninjas require two jumps(0 -&gt; 2 -&gt; 4) to reach his home.\n\nFor the second test case, the ninjas require three jumps(0 -&gt; 3 -&gt; 6 -&gt; 5) to reach his home.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n2 1 5 1\n1\n3 2 4\n1 2 3 7\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>4\n-1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 8,
            "dislikes": "NA",
            "rephrased": {
                "body": "A ninja needs to reach home at position 'X' from the exam center at position 0 on the x-axis. The ninja can jump 'A' positions to the right or 'B' positions to the left. The ninja cannot jump to any restricted positions and cannot jump to the left twice in a row. Furthermore, the ninja cannot jump to positions with negative integers. Given 'A', 'B', 'X', and a list of 'RESTRICTED' positions, find the minimum number of jumps required to reach home. If it's impossible, return -1.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 1000",
                    "1 <= A, B, RESTRICTED[i] <= 2000",
                    "0 <= X <= 2000",
                    "RESTRICTED contains distinct elements.",
                    "Position X is not restricted."
                ],
                "testcases": [
                    {
                        "input": "a = 2, b = 1, x = 4, restricted = [1, 3]",
                        "output": "2",
                        "explanation": "The ninja can reach home in two jumps: 0 -> 2 -> 4."
                    },
                    {
                        "input": "a = 3, b = 1, x = 7, restricted = [1, 2, 3, 6]",
                        "output": "-1",
                        "explanation": "It is impossible to reach position 7 without landing on any of the restricted positions."
                    },
                    {
                        "input": "a = 3, b = 1, x = 3, restricted = [1, 2]",
                        "output": "1",
                        "explanation": "The ninja can reach home in one jump: 0 -> 3."
                    },
                    {
                        "input": "a = 2, b = 1, x = 5, restricted = [1]",
                        "output": "4",
                        "explanation": "The ninja can reach home in four jumps: 0 -> 2 -> 1 -> 3 -> 5."
                    },
                    {
                        "input": "a = 3, b = 2, x = 4, restricted = []",
                        "output": "2",
                        "explanation": "The ninja can reach home in two jumps: 0 -> 3 -> 1 -> 4 (r-l-r-l). Alternatively 0-> -2 not valid jump. correct : 0 -> 3 -> 6 -> 4"
                    },
                    {
                        "input": "a = 1, b = 2, x = 3, restricted = [4,5,6]",
                        "output": "3",
                        "explanation": "0 -> 1 -> -1 not valid jump and 0 -> 1 -> 2 -> 3 (r-r-r) "
                    },
                    {
                        "input": "a = 3, b = 1, x = 3, restricted = [4]",
                        "output": "1",
                        "explanation": "The ninja can reach home in one jump: 0 -> 3."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Find the shortest path to home.</p>",
            "<p>Can you use DFS to the shortest path to home?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Depth-first Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-first Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}