{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 14409,
            "title": " Last Person to Fit in the Bus",
            "titleSlug": "last-person-to-fit-in-the-bus_2122058",
            "content": "<h4 id=\"table-queue\">Table: <b>Queue</b></h4>\n\n<pre><code>+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| person_id          | int     |\n| person_name    | varchar |\n| weight                | int     |\n| turn                    | int     |\n+-------------+---------+\n</code></pre>\n\n<ul>\n<li>person_id is the primary key column for this table.</li>\n<li>This table has the information about all people waiting for a bus.</li>\n<li>The person_id and turn columns will contain all numbers from 1 to n, where n is the number of rows in the table.</li>\n<li>Turn determines the order of which the people will board the bus, where turn=1 denotes the first person to board and turn=n denotes the last person to board.</li>\n<li>weight is the weight of the person in kilograms.</li>\n</ul>\n\n<p><br></p>\n\n<h4 id=\"there-is-a-queue-of-people-waiting-to-board-a-bus-however-the-bus-has-a-weight-limit-of-1000-kilograms-so-there-may-be-some-people-who-cannot-board\">There is a queue of people waiting to board a bus. However, the bus has a weight limit of 1000 kilograms, so there may be some people who cannot board.</h4>\n\n<p><br></p>\n\n<h4 id=\"write-an-sql-query-to-find-the-person_name-of-the-last-person-that-can-fit-on-the-bus-without-exceeding-the-weight-limit-the-testcases-are-generated-such-that-the-first-person-does-not-exceed-the-weight-limit\">Write an SQL query to find the person_name of the last person that can fit on the bus without exceeding the weight limit. The testcases are generated such that the first person does not exceed the weight limit.</h4>\n\n<p><br></p>\n\n<h4 id=\"the-query-result-format-is-in-the-following-example-queue-table\">The query result format is in the following example: <b> Queue table:</b></h4>\n\n<pre><code>+-----------+-------------+--------+------+\n| person_id | person_name | weight | turn |\n+-----------+-------------+--------+------+\n| 5         | Alice       | 250    | 1    |\n| 4         | Bob         | 175    | 5    |\n| 3         | Alex        | 350    | 2    |\n| 6         | John Cena   | 400    | 3    |\n| 1         | Winston     | 500    | 6    |\n| 2         | Marie       | 200    | 4    |\n+-----------+-------------+--------+------+\n</code></pre>\n\n<h5 id=\"result-table\">Result table:</h5>\n\n<pre><code>+-------------+\n| person_name |\n+-------------+\n| John Cena   |\n+-------------+\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 8,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a table `Queue` containing information about people waiting for a bus, find the name of the last person who can board the bus without exceeding the weight limit of 1000 kilograms. The `Queue` table includes `person_id`, `person_name`, `weight`, and `turn` columns. The `turn` column indicates the order in which people board the bus.  You need to write an SQL query to determine the `person_name` of the last person to board while respecting the weight limit.",
                "constraints": [
                    "person_id is the primary key.",
                    "person_id and turn contain all numbers from 1 to n, where n is the number of rows.",
                    "turn determines the boarding order.",
                    "The first person's weight does not exceed the weight limit."
                ],
                "testcases": [
                    {
                        "input": "CREATE TABLE Queue (\n    person_id int,\n    person_name varchar(255),\n    weight int,\n    turn int\n);\n\nINSERT INTO Queue (person_id, person_name, weight, turn) VALUES (5, 'Alice', 250, 1);\nINSERT INTO Queue (person_id, person_name, weight, turn) VALUES (4, 'Bob', 175, 5);\nINSERT INTO Queue (person_id, person_name, weight, turn) VALUES (3, 'Alex', 350, 2);\nINSERT INTO Queue (person_id, person_name, weight, turn) VALUES (6, 'John Cena', 400, 3);\nINSERT INTO Queue (person_id, person_name, weight, turn) VALUES (1, 'Winston', 500, 6);\nINSERT INTO Queue (person_id, person_name, weight, turn) VALUES (2, 'Marie', 200, 4);",
                        "output": "John Cena",
                        "explanation": "The cumulative weight up to John Cena (Alice + Alex + John Cena) is 250 + 350 + 400 = 1000. Adding Marie's weight (200) would exceed the limit. Therefore, John Cena is the last person who can board."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "SQL",
                "slug": "sql"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}