{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 7185,
            "title": "Last Stone Weight",
            "titleSlug": "last-stone-weight_630419",
            "content": "<h4 id=\"we-have-a-collection-of-n-stones-each-stone-has-a-positive-integer-weight\">We have a collection of &#39;N&#39; stones, each stone has a positive integer weight.</h4>\n\n<h4 id=\"on-each-turn-we-choose-the-two-heaviest-stones-and-smash-them-together-suppose-the-stones-have-weights-x-and-y-with-x-y-the-result-of-this-smash-will-be\">On each turn, we choose the two heaviest stones and smash them together.  Suppose the stones have weights &#39;x&#39; and &#39;y&#39; with &#39;x&#39; &lt;= &#39;y&#39;.  The result of this smash will be:</h4>\n\n<pre><code>1. If &#39;x&#39; == &#39;y&#39;, both stones are totally destroyed;\n\n2. If &#39;x&#39; != &#39;y&#39;, the stone of weight &#39;x&#39; is totally destroyed, and the stone of weight &#39;y&#39; has a new weight equal to &#39;y - x&#39;.\n</code></pre>\n\n<h4 id=\"in-the-end-there-is-at-most-1-stone-left-return-the-weight-of-this-stone-or-0-if-there-are-no-stones-left\">In the end, there is at most 1 stone left.  Return the weight of this stone or 0 if there are no stones left.</h4>\n\n<h5 id=\"input-format\">Input format:</h5>\n\n<pre><code>The first line of input contains the integer &#39;N&#39;, representing the total number of stones.\n\nThe second line of input contains &#39;N&#39; single space-separated integers, representing the weights of the stones.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>The only output line prints the weight of the last stone, if it exists, 0 otherwise.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the given functions.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= N &lt;= 10^5\n1 &lt;= W &lt;= 10^6\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1\n10\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>10\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1:</h5>\n\n<pre><code>There is Only one stone so the weight of the last stone is 10\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>3\n1 9 5\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>3 \n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 21,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of 'N' stone weights, simulate smashing the two heaviest stones together until at most one stone remains. If the two heaviest stones have weights 'x' and 'y' (x <= y), then if x == y, both are destroyed; otherwise, 'x' is destroyed and 'y' becomes 'y - x'. Return the weight of the last remaining stone, or 0 if no stones are left.",
                "constraints": [
                    "1 <= N <= 10^5",
                    "1 <= W <= 10^6",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "n = 1, arr=[10]",
                        "output": "10",
                        "explanation": "There is only one stone, so its weight is the result."
                    },
                    {
                        "input": "n = 3, arr=[1, 9, 5]",
                        "output": "3",
                        "explanation": "1. Smash 9 and 5. 9 becomes 9-5 = 4. Stones: [1, 4]\n2. Smash 4 and 1. 4 becomes 4-1 = 3. Stones: [3]\nResult: 3"
                    },
                    {
                        "input": "n = 5, arr=[2, 7, 4, 1, 8, 1]",
                        "output": "1",
                        "explanation": "1. Combine 8 and 7, new 8 becomes 1. [2, 4, 1, 1, 1]\n2. Combine 4 and 2, new 4 becomes 2. [2, 1, 1, 1]\n3. Combine 2 and 1, new 2 becomes 1. [1, 1, 1]\n4. Combine 1 and 1, become 0. [1]\nResult: 1"
                    },
                    {
                        "input": "n = 2, arr=[2, 2]",
                        "output": "0",
                        "explanation": "1. Combine 2 and 2, both become 0. []\nResult: 0"
                    },
                    {
                        "input": "n = 4, arr=[1, 1, 1, 1]",
                        "output": "0",
                        "explanation": "1. Combine 1 and 1, both become 0. [1,1]\n2. Combine 1 and 1, both become 0. []\nResult: 0"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>How can you find two heaviest stones? If you get the two heaviest stones, which data structure should be preferred to remove them and add their absolute difference in weight if it is non-zero?</p>",
            "<p>Can you think of a data structure that keeps track of the maximum element in a collection of elements at all times?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Heap",
                "slug": "heap"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}