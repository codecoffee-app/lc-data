{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10251,
            "title": "Last Substring In Lexicographical Order",
            "titleSlug": "last-substring-in-lexicographical-order_1199176",
            "content": "<h4 id=\"you-are-given-a-string-str-of-length-n-find-the-last-substring-of-str-in-lexicographical-order\">You are given a string \u2018Str\u2019 of length \u2018N\u2019.  Find the last substring of \u2018Str\u2019 in lexicographical order.</h4>\n\n<h4 id=\"in-lexicographical-order-string-s1-comes-before-string-s2-if-s1-is-the-prefix-of-s2-and-s1-s2-or-if-none-of-them-is-a-prefix-of-the-other-and-at-the-first-position-where-they-differ-the-character-in-s1-is-smaller-than-the-character-in-s2\">In Lexicographical order string \u2018S1\u2019 comes before string \u2018S2\u2019 if S1 is the prefix of S2 and (|S1|\u2009&lt;\u2009|S2|), or if none of them is a prefix of the other and at the first position where they differ, the character in \u2018S1\u2019 is smaller than the character in \u2018S2\u2019.</h4>\n\n<h5 id=\"example\">Example :</h5>\n\n<pre><code>Consider string \u2018Str\u2019 = \u201cabba\u201d, then its substring in lexicographical order is [\u201ca\u201d, \u201cab\u201d, \u201cabb\u201d, \u201cabba\u201d, \u201cb\u201d, \u201cbb\u201d, \u201cbba\u201d].  Clearly, the last substring in lexicographical order is  \u201cbba\u201d. \n</code></pre>\n\n<h5 id=\"input-format\">Input format :</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases, then \u2018T\u2019 test cases follow.\n\nThe first and only line of each test case consists string \u2018Str\u2019\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case, in a separate line print the last substring of \u2018Str\u2019 in lexicographical order.\n</code></pre>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 50\n1 &lt;= N &lt;= 10^4\n\u2018Str\u2019 contains only lowercase English letters.\n\nTime limit: 1 sec\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 5,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string `str` of length `N` consisting of lowercase English letters, identify and return the lexicographically largest substring of `str`. A substring is a contiguous sequence of characters within the original string.",
                "constraints": [
                    "1 <= T <= 50 (where T is the number of test cases)",
                    "1 <= N <= 10^4 (where N is the length of the input string `str`)",
                    "`Str` contains only lowercase English letters."
                ],
                "testcases": [
                    {
                        "input": "str = \"abba\"",
                        "output": "bba",
                        "explanation": "The substrings of \"abba\" are [\"a\", \"ab\", \"abb\", \"abba\", \"b\", \"bb\", \"bba\"]. Among these, \"bba\" is the lexicographically largest."
                    },
                    {
                        "input": "str = \"leetcode\"",
                        "output": "tcode",
                        "explanation": "The lexicographically largest substring of \"leetcode\" is \"tcode\"."
                    },
                    {
                        "input": "str = \"a\"",
                        "output": "a",
                        "explanation": "When the string has only one character, that character is the lexicographically largest substring."
                    },
                    {
                        "input": "str = \"zzza\"",
                        "output": "zzza",
                        "explanation": "The entire string \"zzza\" is the lexicographically largest substring."
                    },
                    {
                        "input": "str = \"abababab\"",
                        "output": "bababab",
                        "explanation": "The lexicographically largest substring is \"bababab\"."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Find all the substring.</p>",
            "<p>Observe that the lexicographically largest substring will be one of the suffixes of the given string.</p>",
            "<p>Try to find a way to choose a better starting index.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}