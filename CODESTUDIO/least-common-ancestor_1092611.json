{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9816,
            "title": "Least Common Ancestor",
            "titleSlug": "least-common-ancestor_1092611",
            "content": "<h4 id=\"you-are-given-an-arbitrary-binary-tree-with-n-nodes-whose-nodes-have-their-values-in-the-range-of-integers-you-are-given-two-nodes-x-y-from-the-tree-you-have-to-print-the-least-common-ancestor-of-these-nodes\">You are given an arbitrary binary tree with N nodes, whose nodes have their values in the range of integers. You are given two nodes x, y from the tree. You have to print the least common ancestor of these nodes.</h4>\n\n<h4 id=\"least-common-ancestor-of-two-nodes-x-y-in-a-tree-or-directed-acyclic-graph-is-the-lowest-node-that-has-both-nodes-x-y-as-its-descendants\">Least common ancestor of two nodes x, y in a tree or directed acyclic graph is the lowest node that has both nodes x, y as its descendants.</h4>\n\n<h4 id=\"for-example-look-at-the-tree-below-the-lca-of-node-1-and-5-is-3\">For example look at the tree below, the LCA of node 1 and 5 is 3.</h4>\n\n<p><img src=\"https://files.codingninjas.in/screenshot-from-2021-01-14-20-07-40-7322.png\" alt=\"\"></p>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>You have to return the deepest node which has both x, y as its descendants.\nThere may be cases where one of u or v is not present in the tree. In those cases, the reference provided to u or v will be NULL.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of the input contains a single integer T, representing the number of test cases.\n\nThe first and only line of each test case contains the values of the nodes of the tree in the level order form ( -1 for NULL node) Refer to the example for further clarification.\n</code></pre>\n\n<p>Example: \n    Consider the binary tree\n <img src=\"https://files.codingninjas.in/screenshot-from-2020-10-09-12-55-45-5134.png\" alt=\"altImage\"></p>\n\n<h5 id=\"the-input-of-the-tree-shown-in-the-above-image-will-look-like\">The input of the tree shown in the above image will look like:</h5>\n\n<pre><code>1 2 3 4 -1 5 6 -1 7 -1 -1 -1 -1 -1 -1\n\nExplanation :\nLevel 1 :\nThe root node of the tree is 1\n\nLevel 2 :\nLeft child of 1 = 2\nRight child of 1 = 3\n\nLevel 3 :\nLeft child of 2 = 4\nRight child of 2 = null (-1)\nLeft child of 3 = 5\nRight child of 3 = 6\n\nLevel 4 :\nLeft child of 4 = null (-1)\nRight child of 4 = 7\nLeft child of 5 = null (-1)\nRight child of 5 = null (-1)\nLeft child of 6 = null (-1)\nRight child of 6 = null (-1)\n\nLevel 5 :\nLeft child of 7 = null (-1)\nRight child of 7 = null (-1)\n\nThe first not-null node (of the previous level) is treated as the parent of the first two nodes of the current level. The second not-null node (of the previous level) is treated as the parent node for the next two nodes of the current level and so on. The input ends when all nodes at the last level are null (-1).\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print the LCA of the given nodes in a separate line. \n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 50\n1 &lt;= N &lt;= 10^4\n1 &lt;= nodeVal &lt;= 10^9\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n1 2 3 4 -1 5 6 -1 7 -1 -1 -1 -1 -1 -1\n7 5\n1 2 3 4 -1 5 6 -1 7 -1 -1 -1 -1 -1 -1\n4 2\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>1\n2\n</code></pre>\n\n<h5 id=\"explanation-for-sample-output-1\">Explanation for Sample Output 1 :</h5>\n\n<pre><code>For the first test case, as shown in the above figure, the root of the tree is the deepest node which contains both the nodes 7 and 5 as its descendants, hence 1 is the answer.\nFor the second test case, since 4 is one of the children of 2, so 2 is the answer.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n1 2 -1 3 -1 -1 -1\n3 1\n9 -1 -1\n9 9\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>1\n9\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 16,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an arbitrary binary tree with N nodes, where each node has a unique integer value. You are also given two node values, 'x' and 'y'. Find the least common ancestor (LCA) of the nodes with values 'x' and 'y' in the tree. The LCA is defined as the deepest node in the tree that has both nodes 'x' and 'y' as descendants. If either 'x' or 'y' (or both) are not present in the tree, return the lowest common ancestor by traversing through the tree.",
                "constraints": [
                    "1 <= T <= 50",
                    "1 <= N <= 10^4",
                    "1 <= nodeVal <= 10^9",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "1 2 3 4 -1 5 6 -1 7 -1 -1 -1 -1 -1 -1\n7 5",
                        "output": "1",
                        "explanation": "The least common ancestor of nodes with values 7 and 5 in the given tree is the root node with value 1, as it is the deepest node that has both nodes as descendants."
                    },
                    {
                        "input": "1 2 3 4 -1 5 6 -1 7 -1 -1 -1 -1 -1 -1\n4 2",
                        "output": "2",
                        "explanation": "Node with value 4 is a descendant of node with value 2, so 2 is the deepest common ancestor."
                    },
                    {
                        "input": "1 2 -1 3 -1 -1 -1\n3 1",
                        "output": "1",
                        "explanation": "The least common ancestor of nodes with values 3 and 1 is the root node with value 1."
                    },
                    {
                        "input": "9 -1 -1\n9 9",
                        "output": "9",
                        "explanation": "The least common ancestor of node with value 9 and 9 is the node itself, 9."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Recursion</p>",
            "<p>Iterative Approach.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Binary Trees",
                "slug": "binary-trees"
            },
            {
                "name": "Binary Search Trees",
                "slug": "binary-search-trees"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}