{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8838,
            "title": "Leaves at same level ",
            "titleSlug": "leaves-at-same-level_920389",
            "content": "<h4 id=\"bob-has-been-given-a-binary-tree-having-n-nodes-he-has-been-asked-to-check-if-all-the-leaf-nodes-are-at-the-same-level\">Bob has been given a binary tree having N nodes. He has been asked to check if all the leaf nodes are at the same level.</h4>\n\n<h4 id=\"your-task-is-to-help-bob-in-checking-if-all-the-leaf-nodes-are-at-the-same-level-or-not-return-true-if-all-the-leaf-nodes-are-at-the-same-level-otherwise-return-false\">Your task is to help Bob in checking if all the leaf nodes are at the same level or not. Return true if all the leaf nodes are at the same level otherwise return false.</h4>\n\n<h4 id=\"a-binary-tree-is-a-hierarchical-data-structure-in-which-each-node-has-at-most-two-children\">A binary tree is a hierarchical data structure in which each node has at most two children.</h4>\n\n<h4 id=\"any-node-whose-left-and-right-child-are-null-is-called-a-leaf-node-in-a-binary-tree\">Any node whose left and right child are null is called a leaf node in a binary tree.</h4>\n\n<h5 id=\"example\">Example:</h5>\n\n<pre><code>Consider the given binary tree:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/tree1-10828.PNG\" alt=\"\"></p>\n\n<pre><code>For the given tree the leaf nodes are 5, 4, 7, 6. All these nodes are on the same level. So the output will be True. \n</code></pre>\n\n<h5 id=\"input-format\">Input format :</h5>\n\n<pre><code>The first line contains a single integer T representing the number of test cases. \n\nThe first line of each test case contains elements in the level order form(refer to the example below) (separated by space). If any node does not have a left or right child, take -1 in its place.\n</code></pre>\n\n<h5 id=\"example\">Example:</h5>\n\n<pre><code>Elements are in the level order form. The input consists of values of nodes separated by a single space in a single line. In case a node is null, we take -1 in its place.\n\nFor example, the input for the tree depicted in the below image would be :\n1\n2 3\n4 -1 5 6\n-1 7 -1 -1 -1 -1\n-1 -1\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/tree2-10829.PNG\" alt=\"\"></p>\n\n<pre><code>Explanation :\nLevel 1 :\nThe root node of the tree is 1\n\nLevel 2 :\nLeft child of 1 = 2\nRight child of 1 = 3\n\nLevel 3 :\nLeft child of 2 = 4\nRight child of 2 = null (-1)\nLeft child of 3 = 5\nRight child of 3 = 6\n\nLevel 4 :\nLeft child of 4 = null (-1)\nRight child of 4 = 7\nLeft child of 5 = null (-1)\nRight child of 5 = null (-1)\nLeft child of 6 = null (-1)\nRight child of 6 = null (-1)\n\nLevel 5 :\nLeft child of 7 = null (-1)\nRight child of 7 = null (-1)\n\nThe first not-null node (of the previous level) is treated as the parent of the first two nodes of the current level. The second not-null node (of the previous level) is treated as the parent node for the next two nodes of the current level and so on.\n\nThe input ends when all nodes at the last level are null (-1).\n\nNote: The above format was just to provide clarity on how the input is formed for a given tree. \n\nThe sequence will be put together in a single line separated by a single space. Hence, for the above-depicted tree, the input will be given as:\n\n1 2 3 4 -1 5 6 -1 7 -1 -1 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case, print &quot;True&quot; if all the leaf nodes are at the same level otherwise print &quot;False\u201d (without quotes).\n\nThe output of each test case should be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You are not required to print anything, it has already been taken care of. Just implement the function.    \n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= N &lt;= 3000\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n1 2 4 3 -1 5 6 -1 -1 -1 -1 -1 -1 \n1 2 3 4 -1 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>True\nFalse\n</code></pre>\n\n<h5 id=\"explanation-for-sample-output-1\">Explanation For Sample Output 1:</h5>\n\n<pre><code>In the first test case, all the leaves of the binary tree (3,5, and 6) are at the same level (level 3). So True is returned.\n\nDiagram of the Binary Tree given in the first test case of Sample Input 1.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/tree3-10830.PNG\" alt=\"\"></p>\n\n<pre><code>In the second test case, all the leaves of the binary tree (3 and 4) are not at the same level (leaf 3 is at level 2 and leaf 4 is at level 3). So False is returned.\n\nDiagram of the Binary Tree given in the second test case of Sample Input 1.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/tree4-10831.PNG\" alt=\"\"></p>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n1 2 3 -1 -1 4 -1 -1 -1\n1 2 -1 3 -1 4 -1 -1 -1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>False\nTrue\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 6,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a binary tree, determine if all leaf nodes are at the same level. Implement a function that takes the root of the binary tree as input and returns `true` if all leaf nodes are at the same level, and `false` otherwise.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= N <= 3000",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "n = 7, nums = [1, 2, 4, 3, -1, 5, 6]",
                        "output": "True",
                        "explanation": "The binary tree formed by the input has leaf nodes 3, 5, and 6 all at level 3. Therefore, the output is True."
                    },
                    {
                        "input": "n = 7, nums = [1, 2, 3, 4, -1, -1, -1]",
                        "output": "False",
                        "explanation": "The binary tree formed by the input has leaf nodes 3 at level 2 and 4 at level 3. Since they are not at the same level, the output is False."
                    },
                    {
                        "input": "n = 5, nums = [1, 2, 3, -1, -1]",
                        "output": "True",
                        "explanation": "In this simple tree, the leaf nodes are '2' and '3', and they are both at level 2. So the answer is True."
                    },
                    {
                        "input": "n = 9, nums = [1, 2, 3, -1, -1, 4, -1, -1, -1]",
                        "output": "False",
                        "explanation": "The tree has the following structure:\n\n    1\n   / \\\n  2   3\n     /  \n    4\n\nThe leaf nodes are 2, and 4, at levels 2, and 3 respectively, so they are not on the same level. False."
                    },
                    {
                        "input": "n = 9, nums = [1, 2, -1, 3, -1, 4, -1, -1, -1]",
                        "output": "True",
                        "explanation": "The tree has the following structure:\n\n    1\n   / \n  2   \n /  \n3  \n/ \n4\nThe leaf node is 4, and it's at level 4. All leaf nodes are technically at the same level, so the output is True."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Check all levels of the leaves in the binary tree.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Binary Trees",
                "slug": "binary-trees"
            },
            {
                "name": "Breadth-first Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Trees",
                "slug": "trees"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}