{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9169,
            "title": "Left Right Node Balancing",
            "titleSlug": "left-right-node-balancing_977244",
            "content": "<h4 id=\"you-are-given-a-binary-tree-with-n-nodes-your-task-is-to-check-whether-every-node-in-the-given-tree-has-the-same-number-of-nodes-on-the-left-and-right-sides\">You are given a Binary Tree with N nodes. Your task is to check whether every node in the given tree has the same number of nodes on the left and right sides.</h4>\n\n<h5 id=\"for-example\">For Example :</h5>\n\n<pre><code>Consider the Binary Tree below :\n</code></pre>\n\n<p><img src=\"https://ninjasfiles.s3.amazonaws.com/0000000000000613.PNG\" alt=\"Alt text\"></p>\n\n<pre><code>The number of nodes on the left side of node 6 is 3 while on the right side it is 1. Hence the answer for the above binary tree is false.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 denoting the number of test cases.\n\nThe first line of each test case contains the elements of the binary tree in the level order form separated by a single space.\n\nIf any node does not have a left or right child, take -1 in its place. Refer to the example below.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/triple_sum_input_format-11667.png\"/> </p>\n\n<pre><code>1\n2 3\n-1 4 -1 -1\n5 -1\n-1 -1\n\nExplanation :\nLevel 1 :\nThe root node of the tree is 1\n\nLevel 2 :\nLeft child of 1 = 2\nRight child of 1 = 3\n\nLevel 3 :\nLeft child of 2 = null (-1)\nRight child of 2 = 4\nLeft child of 3 = null (-1)\nRight child of 3 = null (-1)\n\nLevel 4 :\nLeft child of 4 = 5\nRight child of 4 = null (-1)\n\nLevel 5 :\nLeft child of 5 = null (-1)\nRight child of 5 = null (-1)\n\nThe first not-null node (of the previous level) is treated as the parent of the first two nodes of the current level. The second not-null node (of the previous level) is treated as the parent node for the next two nodes of the current level and so on.\n\nThe input ends when all nodes at the last level are null (-1).\n\nNote: The above format was just to provide clarity on how the input is formed for a given tree. \n\nThe sequence will be put together in a single line separated by a single space. Hence, for the above-depicted tree, the input will be given as:\n\n1 2 3 -1 4 -1 -1 5 -1 -1 -1\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, return True or False denoting whether the given binary tree satisfies the above condition.\nOutput for each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You are not required to print anything; it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= number of nodes &lt;= 1000\n1 &lt;= nodeVal &lt;= 10^9\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>1\n2 3 4 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>True\n</code></pre>\n\n<h5 id=\"explanation-for-sample-output-1\">Explanation For Sample Output 1 :</h5>\n\n<p><img src=\"https://files.codingninjas.in/pasted-image-0-11715.png\" alt=\"Alt text\"></p>\n\n<pre><code>For the given test case, There is a binary tree of 3 nodes only. Node with value 2 has one node on the left and another on right. Hence each node has the same number of nodes on the left and right parts.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>1\n1 2 3 4 5 6 7 -1 -1 -1 -1 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>True\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": -8,
            "dislikes": "NA",
            "rephrased": {
                "body": "You are given a binary tree with N nodes. Your task is to determine if every node in the tree has the same number of nodes in its left subtree as in its right subtree.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= number of nodes <= 1000",
                    "1 <= nodeVal <= 10^9",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "2 3 4 -1 -1 -1 -1",
                        "output": "True",
                        "explanation": "The binary tree consists of the root node, a left child with value 2, and a right child with value 3. Node 2 has no children (-1, -1), and node 3 has no children (-1, -1). Therefore, all nodes have the same number of nodes (0) on the left and right sides."
                    },
                    {
                        "input": "1 2 3 4 5 6 7 -1 -1 -1 -1 -1 -1 -1 -1",
                        "output": "True",
                        "explanation": "The binary tree is a complete binary tree of height 3. Each non-leaf node has two children, resulting in a balanced structure where the number of nodes in the left and right subtrees of each node is equal."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Recursively check for each and every node whether it satisfies the condition or not.</p>",
            "<p>Calculate the number of nodes recursively for a given node.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Binary Trees",
                "slug": "binary-trees"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}