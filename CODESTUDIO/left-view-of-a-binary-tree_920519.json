{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8914,
            "title": "Left view of a binary tree",
            "titleSlug": "left-view-of-a-binary-tree_920519",
            "content": "<h4 id=\"you-have-been-given-a-binary-tree-of-integers-you-are-supposed-to-find-the-left-view-of-the-binary-tree-the-left-view-of-a-binary-tree-is-the-set-of-all-nodes-that-are-visible-when-the-binary-tree-is-viewed-from-the-left-side\">You have been given a binary tree of integers. You are supposed to find the left view of the binary tree. The left view of a binary tree is the set of all nodes that are visible when the binary tree is viewed from the left side.</h4>\n\n<h5 id=\"example\">Example:</h5>\n\n<p><img src=\"https://files.codingninjas.in/leftview_0-6345.png\" alt=\"example\"></p>\n\n<pre><code>The left view of the above binary tree is  {5, 7, 14, 25}.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains an integer &#39;T&#39; which denotes the number of test cases or queries to be run. Then the test cases follow.\n\nThe only line of each test case contains elements in the level order form. The line consists of values of nodes separated by a single space. In case a node is null, we take -1 in its place. So -1 would not be a part of the tree nodes.\n\nFor example, the input for the tree depicted in the below image will be:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/0000000000004189.png\" alt=\"alt text\"></p>\n\n<pre><code>1\n2 3\n4 -1 5 6\n-1 7 -1 -1 -1 -1\n-1 -1\n</code></pre>\n\n<h4 id=\"explanation\">Explanation :</h4>\n\n<pre><code>Level 1 :\nThe root node of the tree is 1\n\nLevel 2 :\nLeft child of 1 = 2\nRight child of 1 = 3\n\nLevel 3 :\nLeft child of 2 = 4\nRight child of 2 = null (-1)\nLeft child of 3 = 5\nRight child of 3 = 6\n\nLevel 4 :\nLeft child of 4 = null (-1)\nRight child of 4 = 7\nLeft child of 5 = null (-1)\nRight child of 5 = null (-1)\nLeft child of 6 = null (-1)\nRight child of 6 = null (-1)\n\nLevel 5 :\nLeft child of 7 = null (-1)\nRight child of 7 = null (-1)\n\nThe first not-null node(of the previous level) is treated as the parent of the first two nodes of the current level. The second not-null node (of the previous level) is treated as the parent node for the next two nodes of the current level and so on.\nThe input ends when all nodes at the last level are null(-1).\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>The above format was just to provide clarity on how the input is formed for a given tree. \nThe sequence will be put together in a single line separated by a single space. Hence, for the above-depicted tree, the input will be given as:\n\n1 2 3 4 -1 5 6 -1 7 -1 -1 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print the left view of the given binary tree separated by a single space.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You don\u2019t need to print anything; It has already been taken care of.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n0 &lt;= N &lt;= 3000\n1 &lt;= data &lt;= 10^5 and data!=-1\n\nWhere \u2018T\u2019 is the number of test cases, and \u2018N\u2019 is the total number of nodes in the binary tree, and \u201cdata\u201d is the value of the binary tree node\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n3 4 -1 -1 -1 \n2 8 7 -1 5 -1 -1 1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>3 4\n2 8 5 1\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1:</h5>\n\n<pre><code>For the first test case, node 3 and node 4 are visible when the binary tree is viewed from the left.\n\nFor the second test case, nodes 2, 8, 5, 1 are visible when the binary tree is viewed from the left.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n1 3 5 12 -1 8 -1 -1 -1 -1 -1 \n9 6 3 -1 -1 4 8 -1 -1 -1 -1 \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>1 3 12\n9 6 4\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-2\">Explanation of Sample Input 2:</h5>\n\n<pre><code>For the first test case, nodes 1, 3, 12 are visible when the binary tree is viewed from the left.\n\nFor the second test case, nodes 9, 6, 4 are visible when the binary tree is viewed from the left.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 77,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a binary tree of integers, find its left view. The left view consists of the leftmost nodes at each level of the tree, visible when viewed from the left.",
                "constraints": [
                    "1 <= T <= 100",
                    "0 <= N <= 3000",
                    "1 <= data <= 10^5 and data != -1",
                    "T is the number of test cases.",
                    "N is the total number of nodes in the binary tree.",
                    "data is the value of a binary tree node."
                ],
                "testcases": [
                    {
                        "input": "3 4 -1 -1 -1",
                        "output": "3 4",
                        "explanation": "The left view of the tree with root 3, left child 4, and no right child is {3, 4}."
                    },
                    {
                        "input": "2 8 7 -1 5 -1 -1 1 -1 -1 -1",
                        "output": "2 8 5 1",
                        "explanation": "The left view of the tree with root 2, left child 8, right child 7, left child of 8 as null, right child of 8 as 5, both children of 7 are null, left child of 5 as 1, both children of 1 are null is {2, 8, 5, 1}."
                    },
                    {
                        "input": "1 3 5 12 -1 8 -1 -1 -1 -1 -1",
                        "output": "1 3 12",
                        "explanation": "The left view of the tree with root 1, left child 3, right child 5, left child of 3 is 12, right child of 3 is null, the left child of 5 is 8 and the right child of 5 is null, all children of the nodes 12 and 8 are null is {1, 3, 12}."
                    },
                    {
                        "input": "9 6 3 -1 -1 4 8 -1 -1 -1 -1",
                        "output": "9 6 4",
                        "explanation": "The left view of the tree with root 9, left child 6, right child 3, both children of 6 are null, left child of 3 as 4, right child of 3 is 8 and all children of the nodes 4 and 8 are null is {9, 6, 4}."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you think about a recursive traversal method?</p>",
            "<p>Can you use the fact that only the leftmost nodes of each level of the binary tree are included in the left view?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Trees",
                "slug": "trees"
            },
            {
                "name": "Binary Trees",
                "slug": "binary-trees"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}