{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 16512,
            "title": "Lego Blocks",
            "titleSlug": "lego-blocks_3169338",
            "content": "<h4 id=\"you-have-two-kinds-of-lego-blocks-see-image-below-and-an-infinite-supply-of-both-there-is-a-platform-of-empty-cells-made-up-of-2-rows-and-n-columns-you-must-place-the-lego-blocks-on-the-platform-in-such-a-way-such-that\">You have two kinds of Lego blocks (see image below) and an infinite supply of both. There is a platform of empty cells made up of 2 rows and \u2018N\u2019 columns. You must place the Lego blocks on the platform in such a way such that -</h4>\n\n<h4 id=\"1-every-cell-on-the-platform-is-covered\">1. Every cell on the platform is covered</h4>\n\n<h4 id=\"2-no-two-lego-blocks-overlap\">2. No two Lego blocks overlap</h4>\n\n<h4 id=\"3-no-lego-block-is-placed-in-such-a-way-that-it-goes-out-of-the-boundary-of-the-platform\">3. No Lego block is placed in such a way that it goes out of the boundary of the platform.</h4>\n\n<p><img src=\"https://ninjasfiles.s3.amazonaws.com/asset_0000000000000559_1638968227_lego1.png\" alt=\"\"></p>\n\n<h4 id=\"if-lego-blocks-are-placed-such-that-all-three-conditions-above-are-satisfied-it-is-called-a-valid-placing-your-task-is-to-count-the-number-of-valid-ways-to-place-the-lego-blocks-since-this-number-might-be-extremely-large-print-it-modulo-10-9-7\">If Lego blocks are placed such that all three conditions above are satisfied, it is called a Valid placing. Your task is to count the number of Valid ways to place the Lego blocks. Since this number might be extremely large, print it modulo (10^9+7).</h4>\n\n<h4 id=\"note-the-blocks-can-be-rotated-two-valid-placings-are-considered-different-if-there-s-at-least-one-lego-block-whose-position-differs-in-both-placings-see-samples-for-better-understanding\">Note: The blocks can be rotated. Two valid placings are considered different if there\u2019s at least one lego block whose position differs in both placings. (See samples for better understanding).</h4>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains &#39;T&#39;, denoting the number of test cases.\nFor each Test :\nThe first line contains a single integer \u2018N\u2019, denoting the number of columns on the platform.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test, print an integer, denoting the number of valid ways to place the Lego blocks modulo (10^9 + 7).\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You are not required to print the expected output. It has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints -</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 10^5\n\nThe sum of &#39;N&#39; all test cases does not exceed 10^5.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n1\n3\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1</h5>\n\n<pre><code>1\n5\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1:</h5>\n\n<pre><code>For case 1:\nThe only valid placing for \u2018N\u2019 = 1 is just one blue Lego block placed vertically.\n\nFor Case 2:\nThe 5 valid placing for \u2018N\u2019 = 3 are shown below\n</code></pre>\n\n<p><img src=\"https://ninjasfiles.s3.amazonaws.com/asset_0000000000000560_1638968311_lego2.png\" alt=\"\"></p>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n2\n5\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>2\n2\n24\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": -5,
            "dislikes": "NA",
            "rephrased": {
                "body": "You are given two types of Lego blocks: a 2x1 block and a 1x2 block. You have an infinite supply of each. You need to cover a 2xN platform with these blocks, following these rules:\n\n1.  Every cell of the platform must be covered.\n2.  No two blocks can overlap.\n3.  No block can extend beyond the boundaries of the platform.\n\nDetermine the number of valid ways to cover the platform. Since the result can be very large, return the answer modulo (10^9 + 7). Note that the blocks can be rotated, and two configurations are considered different if at least one block has a different position.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10^5",
                    "The sum of 'N' across all test cases does not exceed 10^5.",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "1\n1",
                        "output": "1",
                        "explanation": "For N = 1, the only valid arrangement is a single 2x1 block placed vertically."
                    },
                    {
                        "input": "1\n3",
                        "output": "5",
                        "explanation": "For N = 3, there are 5 valid arrangements."
                    },
                    {
                        "input": "1\n2",
                        "output": "2",
                        "explanation": null
                    },
                    {
                        "input": "1\n5",
                        "output": "8",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Recursively try and place blocks.</p>",
            "<p>If we know the answer for&nbsp; all i in [1,N-1], does it help us in computing the answer for \u2018N\u2019?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}