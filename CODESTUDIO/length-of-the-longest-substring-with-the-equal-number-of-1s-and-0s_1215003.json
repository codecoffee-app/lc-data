{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10423,
            "title": "Length of the longest substring with the equal number of 1s and 0s.",
            "titleSlug": "length-of-the-longest-substring-with-the-equal-number-of-1s-and-0s_1215003",
            "content": "<h4 id=\"you-are-given-a-binary-string-s-of-length-n-your-task-is-to-find-the-length-of-the-longest-substring-with-an-equal-number-of-1s-and-0s\">You are given a binary string &#39;S&#39; of length &#39;N&#39;. Your task is to find the length of the longest substring with an equal number of 1s and 0s.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>1. The given string will only contain 0 and 1.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains an integer, \u2018T,\u2019 which denotes the number of test cases or queries to be run. Then, the &#39;T&#39; test cases follow.\n\nThe first line of each test case contains one integer &#39;N&#39;, as described in the problem statement.\n\nThe second line of each test case contains one binary string of length &#39;N&#39;.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, return an integer representing the length of the longest substring with the equal number of 1s and 0s.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= N &lt;= 5 * 10^3\n\nIt is guaranteed that S will only contain &#39;0&#39; and &#39;1&#39;.\n\nTime Limit: 1 second\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1\n5\n01100\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>4\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for sample input 1:</h5>\n\n<pre><code>The output is 4 because the substring from index 1 to 4(we are considering 0-based indexing) contains equal numbers of 0s and 1s and its length is 4.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\n6\n111111\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>0\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation for sample input 2:</h5>\n\n<pre><code>Since we can not find any substring having equal numbers of 0s and 1s, therefore the answer is 0.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 6,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a binary string 'S' of length 'N', find the length of the longest substring containing an equal number of 0s and 1s. The string 'S' consists only of '0' and '1' characters.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= N <= 5 * 10^3",
                    "S will only contain '0' and '1'",
                    "Time Limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "5\n01100",
                        "output": "4",
                        "explanation": "The substring from index 1 to 4 (0-based indexing) is '1100', which contains two 0s and two 1s. Its length is 4, which is the longest substring with an equal number of 0s and 1s."
                    },
                    {
                        "input": "6\n111111",
                        "output": "0",
                        "explanation": "Since there is no substring with an equal number of 0s and 1s, the answer is 0."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><i>Try to iterate on each substring one by one.</i></p>",
            "<p><i>Can we use some prefix sum approach?</i></p>",
            "<p><i>Can we use a HashMap?</i></p>"
        ],
        "relatedTopics": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}