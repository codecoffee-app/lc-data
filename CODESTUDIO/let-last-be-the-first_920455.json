{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8868,
            "title": "Let Last Be the First",
            "titleSlug": "let-last-be-the-first_920455",
            "content": "<h4 id=\"you-have-been-given-a-linked-list-write-a-function-that-moves-the-last-element-to-the-front-in-a-given-singly-linked-list-and-returns-the-head-of-the-new-linked-list\">You have been given a linked list. Write a function that moves the last element to the front in a given singly Linked List and returns the head of the new linked list.</h4>\n\n<h4 id=\"for-example-if-the-given-linked-list-is-5-4-3-2-1-null-then-the-function-should-return-the-head-of-the-linked-list-1-5-4-3-2-null\">For example, if the given Linked List is 5 -&gt; 4 -&gt; 3 -&gt; 2 -&gt; 1 -&gt; NULL, then the function should return the head of the linked list 1 -&gt; 5 -&gt; 4 -&gt; 3 -&gt; 2 -&gt; NULL.</h4>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019, denoting the number of test cases. Then each test case follows.\n\nThe first line of each test case contains the Integer \u2018N\u2019 denoting the number of elements in the linked list. The first element is the head of the given linked list.\n\nThe second and the last line of each test case contains \u2018N\u2019  space-separated integers representing the node value of the linked list.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print a single line containing \u2018N\u2019 single space-separated integers, the elements of the new linked list.\n\nThe output of each test case will be printed on a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= N &lt;= 5 * 10 ^ 3\n-10 ^ 9 &lt;= nodeVal[i] &lt;= 10 ^ 9\n\nTime Limit: 1 sec.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n5\n5 4 3 2 1\n1\n5\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>1 5 4 3 2\n5\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1:</h5>\n\n<pre><code>In the first test case, after moving the last element \u20181\u2019 to first. The new linked list is  1 -&gt; 5 -&gt; 4 -&gt; 3 -&gt; 2 -&gt; NULL.\n\nIn the second test case, it contains only one element, so the first element is the last element.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\n4\n-1 0 0 -1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>-1 -1 0 0 \n</code></pre>\n\n<h5 id=\"explanation-of-sample-output-2\">Explanation of Sample Output 2:</h5>\n\n<pre><code>In the first test case, after moving the last element \u2018-1\u2019 to first. The new linked list is -1 -&gt; -1 -&gt;0 -&gt; 0 -&gt; NULL.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 15,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a singly linked list, write a function that moves the last element to the front of the list and returns the head of the modified linked list.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= N <= 5 * 10 ^ 3",
                    "-10 ^ 9 <= nodeVal[i] <= 10 ^ 9",
                    "Time Limit: 1 sec."
                ],
                "testcases": [
                    {
                        "input": "5\n5 4 3 2 1",
                        "output": "1 5 4 3 2",
                        "explanation": "The last element '1' is moved to the front of the linked list, resulting in the new linked list: 1 -> 5 -> 4 -> 3 -> 2 -> NULL."
                    },
                    {
                        "input": "1\n5",
                        "output": "5",
                        "explanation": "The linked list contains only one element '5', so the list remains unchanged."
                    },
                    {
                        "input": "4\n-1 0 0 -1",
                        "output": "-1 -1 0 0",
                        "explanation": "The last element '-1' is moved to the front of the linked list, resulting in the new linked list: -1 -> -1 -> 0 -> 0 -> NULL."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Move a tail pointer to the second last element</p>"
        ],
        "relatedTopics": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}