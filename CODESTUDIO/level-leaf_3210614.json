{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 16574,
            "title": "Level Leaf",
            "titleSlug": "level-leaf_3210614",
            "content": "<h4 id=\"you-are-given-a-binary-tree-consisting-of-n-nodes-ninja-recently-learned-about-tree-algorithms-and-the-teacher-wants-him-to-find-whether-all-the-leaves-of-the-tree-are-at-the-same-level\">You are given a binary tree consisting of \u2018N\u2019 nodes. Ninja recently learned about tree algorithms and the teacher wants him to find whether all the leaves of the tree are at the same level.</h4>\n\n<h4 id=\"a-node-is-a-leaf-if-it-has-neither-the-left-child-nor-the-right-child\">A node is a leaf if it has neither the left child nor the right child.</h4>\n\n<h4 id=\"if-all-the-leaves-are-at-the-same-level-output-1-else-output-0\">If all the leaves are at the same level, output 1. Else, output 0.</h4>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of the input contains a single integer &#39;T&#39;, representing the number of test cases.\n\nThe first line of each test case contains an integer &#39;N&#39;, representing the number of nodes in the tree.\n\nThe third line of each test case will contain the values of the nodes of the tree in the level order form ( -1 for &#39;NULL&#39; node) Refer to the example for further clarification.\n</code></pre>\n\n<h5 id=\"example\">Example :</h5>\n\n<pre><code>Consider the binary tree\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/tree2-12546.PNG\" alt=\"\"></p>\n\n<pre><code>The input of the tree depicted in the image above will be like : \n1\n2 2\n3 -1 4 5\n-1 3 -1 -1 -1 -1\n-1 -1\n\nExplanation :\nLevel 1 :\nThe root node of the tree is 1\nThe value of the root node is 1.\n\nLevel 2 :\nLeft child of 1 = 2\nValue of left child of 1 = 2\nRight child of 1 = 3\nValue of right child of 1 = 2\n\nLevel 3 :\nLeft child of 2 = 4\nValue of left child of 2 = 3\nRight child of 2 = null (-1)\nLeft child of 3 = 5\nValue of left child of 3 = 4\nRight child of 3 = 6\nValue of right child of 3 = 5\n\nLevel 4 :\nLeft child of 4 = null (-1)\nRight child of 4 = 7\nValue of right child of 4 = 3\nLeft child of 5 = null (-1)\nRight child of 5 = null (-1)\nLeft child of 6 = null (-1)\nRight child of 6 = null (-1)\n\nLevel 5 :\nLeft child of 7 = null (-1)\nRight child of 7 = null (-1)\n\nThe first not-null node (of the previous level) is treated as the parent of the first two nodes of the current level. The second not-null node (of the previous level) is treated as the parent node for the next two nodes of the current level and so on.\n\nThe input ends when all nodes at the last level are null (-1).\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case, output 1 if all leaves are at the same level and 0 if not.\n\nPrint the output of each test case in a new line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don\u2019t need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1\u2009&lt;= N &lt;= 10^5\n1 &lt;= Value of node[i] &lt;= 10^5\nSum of N over all Test cases &lt;= 10^5\nIt is guaranteed that the given input is a binary tree.\n\nTime Limit : 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n3\n1 2 3 -1 -1 -1 -1\n4\n1 2 3 4 -1 -1 -1 -1 -1  \n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>1\n0\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1 :</h5>\n\n<pre><code>For test case 1 we have, \n\nNodes 2 and 3 are the leaves of the tree and they are at the same level.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/1-14028.JPG\" alt=\"\"></p>\n\n<pre><code>So, we output 1.\n\nFor test case 2 we have,\n\nThe input tree is : \n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/2-14029.JPG\" alt=\"\"> </p>\n\n<pre><code>Nodes 3 and 4 are the leaves of the tree at different levels.\n\nSo, we output 0.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n5\n2 2 -1 3 1 -1 4 -1 -1 -1 -1 \n4\n4 1 -1 1 1 -1 -1 -1 -1    \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>1\n1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 2,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a binary tree, determine if all leaf nodes are at the same level. Return 1 if all leaves are at the same level, and 0 otherwise.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10^5",
                    "1 <= Value of node[i] <= 10^5",
                    "Sum of N over all Test cases <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "root= [1, 2, 3, -1, -1, -1, -1]",
                        "output": "1",
                        "explanation": "The tree is:\n\n    1\n   / \\\n  2   3\n\nLeaves 2 and 3 are at the same level."
                    },
                    {
                        "input": "root= [1, 2, 3, 4, -1, -1, -1, -1, -1]",
                        "output": "0",
                        "explanation": "The tree is:\n\n    1\n   / \\\n  2   3\n / \n4\n\nLeaves 3 and 4 are at different levels."
                    },
                    {
                        "input": "root= [2, 2, -1, 3, 1, -1, 4, -1, -1, -1, -1]",
                        "output": "1",
                        "explanation": "The tree is:\n\n      2\n     / \\\n    2  null\n   / \\\n  3   1\n     / \\\n    4  null\nLeaves 4 and 3 are at the same level"
                    },
                    {
                        "input": "root= [4, 1, -1, 1, 1, -1, -1, -1, -1]",
                        "output": "1",
                        "explanation": "The tree is:\n\n    4\n   / \\\n  1  null\n / \\\n1   1\n\nLeaves 1 and 1 are at the same level."
                    },
                    {
                        "input": "root= [1,2,3,4,-1,-1,5,-1,-1,-1,-1]",
                        "output": "0",
                        "explanation": "The tree is:\n\n    1\n   / \\\n  2   3\n /    \\\n4      5\n\nLeaves 4 and 5 are at different levels."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>&nbsp;Find the level of all the leaves.<br>&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Binary Trees",
                "slug": "binary-trees"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}