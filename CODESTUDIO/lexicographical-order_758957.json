{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 7657,
            "title": "Lexicographical order",
            "titleSlug": "lexicographical-order_758957",
            "content": "<h4 id=\"you-are-given-a-positive-integer-n-your-task-is-to-return-a-list-of-integers-containing-integers-from-1-to-n-both-inclusive-in-lexicographically-ascending-order\">You are given a positive integer N. Your task is to return a list of integers containing integers from 1 to N (both inclusive) in <a href = \"https://en.wikipedia.org/wiki/Lexicographic_order\" target = \"_blank\">lexicographically ascending order</a>.</h4>\n\n<h4 id=\"for-example-given-3-numbers-1-3-and-10-the-lexicographical-ascending-order-will-be-1-10-and-3\">For example:- Given 3 numbers 1, 3 and 10, the lexicographical ascending order will be 1, 10 and 3.</h4>\n\n<h5 id=\"input-format\">Input format:</h5>\n\n<pre><code>The first and only line of input contains a single integer N.\n</code></pre>\n\n<h5 id=\"output-format\">Output format:</h5>\n\n<pre><code>The only line of output contains N single space-separated integers i.e integers from 1 to N in lexicographical order.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= N &lt;=10^6\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>15\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>1 10 11 12 13 14 15 2 3 4 5 6 7 8 9 \n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>24\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>1 10 11 12 13 14 15 16 17 18 19 2 20 21 22 23 24 3 4 5 6 7 8 9 \n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 42,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a positive integer `n`, generate a list of integers from 1 to `n` (inclusive) sorted in lexicographical order. Return the list of integers.",
                "constraints": [
                    "1 <= N <= 10^6",
                    "Time Limit: 1 sec",
                    ""
                ],
                "testcases": [
                    {
                        "input": "n = 15",
                        "output": "1 10 11 12 13 14 15 2 3 4 5 6 7 8 9",
                        "explanation": "The integers from 1 to 15 are sorted lexicographically as 1, 10, 11, 12, 13, 14, 15, 2, 3, 4, 5, 6, 7, 8, and 9."
                    },
                    {
                        "input": "n = 24",
                        "output": "1 10 11 12 13 14 15 16 17 18 19 2 20 21 22 23 24 3 4 5 6 7 8 9",
                        "explanation": "The integers from 1 to 24 are sorted lexicographically as 1, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 2, 20, 21, 22, 23, 24, 3, 4, 5, 6, 7, 8, and 9."
                    },
                    {
                        "input": "n = 5",
                        "output": "1 2 3 4 5",
                        "explanation": "The integers from 1 to 5 are sorted lexicographically as 1, 2, 3, 4, and 5."
                    },
                    {
                        "input": "n = 1",
                        "output": "1",
                        "explanation": "The integer from 1 to 1 is sorted lexicographically as 1."
                    },
                    {
                        "input": "n = 10",
                        "output": "1 10 2 3 4 5 6 7 8 9",
                        "explanation": "The integers from 1 to 10 are sorted lexicographically as 1, 10, 2, 3, 4, 5, 6, 7, 8, and 9."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>First off, observe that the question is basically a sorting question but won\u2019t work the way integer array does that. We need to focus on data type other than integer so as to sort the numbers.&nbsp;</p>",
            "<p>If you observe carefully, you will notice that the very first integer in the sorted lexicographical order will be \u20181\u2019. We will now work on all the numbers that can come after 1 i.e 10, 100,1000 and so on. The basic idea is to divide the problem into subproblems and let recursion come into play. We know that the single-digit prefix for any number that can be part of the output can be from 1 to 9. Thus, we can fix the very first digit (single-digit prefix) say PRE, and make a recursive call to find all the numbers less than equal to N having their prefix PRE.&nbsp;&nbsp;&nbsp;</p>",
            "<p>If you observe carefully, you will notice that the very first integer in the sorted lexicographical order will be \u20181\u2019. We will now work on all the numbers that can come after 1 i.e 10, 100,1000 and so on. The basic idea is to search for the next lexicographical number or next lexicographically larger prefix which is less than or equal to N till we complete N numbers.&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}