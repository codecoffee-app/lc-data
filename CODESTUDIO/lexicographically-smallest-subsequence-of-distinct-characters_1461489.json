{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12461,
            "title": "Lexicographically Smallest Subsequence of Distinct Characters. ",
            "titleSlug": "lexicographically-smallest-subsequence-of-distinct-characters_1461489",
            "content": "<h4 id=\"you-have-been-given-a-string-s-you-need-to-return-the-lexicographically-smallest-subsequence-of-s-that-contains-all-the-distinct-characters-of-s-exactly-once-return-the-string-as-mentioned-above\">You have been given a string \u2018S\u2019. You need to return the lexicographically smallest subsequence of \u2018S\u2019 that contains all the distinct characters of \u2018S\u2019 exactly once. Return the string as mentioned above.</h4>\n\n<h4 id=\"a-string-is-a-subsequence-of-a-given-string-that-is-generated-by-deleting-some-character-of-a-given-string-without-changing-its-order\">A string is a subsequence of a given string, that is generated by deleting some character of a given string without changing its order.</h4>\n\n<h5 id=\"example\">Example:</h5>\n\n<pre><code>Let S = \u201cababc\u201d. The lexicographically smallest subsequence containing all the distinct characters of strings is \u201cabc\u201d. \n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>Strings consist of only lowercase characters.\n\nYou do not need to print anything; it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 representing the number of test cases.\n\nThe first line of each test case contains a single integer \u2018N\u2019 denoting the length of the string \u2018S\u2019.\n\nThe next line of the test case contains the string \u2018S\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case return the lexicographically smallest subsequence of \u2018S\u2019 that contains all the distinct characters of \u2018S\u2019 exactly once.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 1000\n\nTime Limit: 1sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n7\naababcb\n5\nbcabb\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>abc\nbca\n</code></pre>\n\n<h4 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1:</h4>\n\n<pre><code>Test case 1:\n\nThe lexicographically smallest subsequence contains all the distinct characters of strings is \u201cabc\u201d. \n\nTherefore the answer is \u201cabc\u201d.\n\nTest case 2:\n\nThe lexicographically smallest subsequence contains all the distinct characters of strings is \u201cbca\u201d.\n\nTherefore the answer is \u201cbca\u201d.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n7\ngggjhhh\n8\nlaughhgu\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>gjh\nlaghu\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 2,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string 'S' of length 'N', find the lexicographically smallest subsequence of 'S' that contains all the distinct characters of 'S' exactly once. A subsequence is formed by deleting some characters from 'S' without changing the order of the remaining characters.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 1000",
                    "Strings consist of only lowercase characters."
                ],
                "testcases": [
                    {
                        "input": "n = 7, s = \"aababcb\"",
                        "output": "abc",
                        "explanation": "The lexicographically smallest subsequence containing all distinct characters of \"aababcb\" is \"abc\"."
                    },
                    {
                        "input": "n = 5, s = \"bcabb\"",
                        "output": "bca",
                        "explanation": "The lexicographically smallest subsequence containing all distinct characters of \"bcabb\" is \"bca\"."
                    },
                    {
                        "input": "n = 7, s = \"gggjhhh\"",
                        "output": "gjh",
                        "explanation": "The lexicographically smallest subsequence containing all distinct characters of \"gggjhhh\" is \"gjh\"."
                    },
                    {
                        "input": "n = 8, s = \"laughhgu\"",
                        "output": "laghu",
                        "explanation": "The lexicographically smallest subsequence containing all distinct characters of \"laughhgu\" is \"laghu\"."
                    },
                    {
                        "input": "n = 10, s = \"cdadabcccd\"",
                        "output": "adbc",
                        "explanation": "The lexicographically smallest subsequence containing all distinct characters of \"cdadabcccd\" is \"adbc\"."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Brute Force.&nbsp;</p>",
            "<p>Try to use Stack and think greedily.&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Stacks & Queues",
                "slug": "stacks-&-queues"
            },
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}