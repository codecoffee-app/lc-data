{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10335,
            "title": " Longest Alternating Subsequence ",
            "titleSlug": "longest-alternating-subsequence_1214645",
            "content": "<h4 id=\"you-are-given-an-array-arr-of-integers-your-task-is-to-find-the-length-of-the-longest-alternating-subsequence\">You are given an array \u2018ARR\u2019 of integers. Your task is to find the length of the longest alternating subsequence.</h4>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>A sequence a1, a2, .... an is called an alternating sequence if its elements satisfy one of the following relations : a1 &lt; a2 &gt; a3 &lt; a4 &gt; a5..... or  a1 &gt; a2 &lt; a3 &gt; a4 &lt; a5.\n</code></pre>\n\n<h5 id=\"for-example\">For example:</h5>\n\n<pre><code>&#39;ARR&#39; = {3, 10, 1, 2, 30}, the longest alternating subsequence for this array can be {3, 10, 1, 30} or {3, 10, 2, 30}. Therefore, the answer will be 4.\n</code></pre>\n\n<h5 id=\"input-format\">Input format :</h5>\n\n<pre><code>The first line of input contains an integer &#39;T&#39; denoting the number of test cases.\n\nThe first line of each test case contains a single integer &#39;N&#39; representing the length of the array.\n\nThe second line of each test case contains &#39;N&#39; space-separated integers representing the elements of the array &#39;ARR&#39;.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case, return a single integer which is the length of the longest alternating subsequence. \n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You don\u2019t have to print anything; it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints:</h4>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= N &lt;= 5000\n1 &lt;= ARR[i] &lt;= 10^5\n\nWhere &#39;ARR[i]&#39; denotes the ith element of &#39;ARR&#39;.\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n7\n1 2 5 3 10 15 12\n4 \n1 4 2 3\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>5\n4\n</code></pre>\n\n<h5 id=\"explanation-of-sample-output-1\">Explanation of Sample Output 1:</h5>\n\n<pre><code>In test case 1, Given &#39;ARR&#39; = {1,2,5,3,10,15,12}, we can see that the longest alternating subsequence for this array can be {1,5,3,15,12} or {2,5,3,15,12}. Therefore, the length will be 5.\n\nIn test case 2, Given &#39;ARR&#39; = {1,4,2,3} we can see that the longest alternating subsequence for this array will be {1,4,2,3}. Therefore, length will be 4.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n5\n1 2 3 4 5      \n3\n1 3 2\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>2\n3\n</code></pre>\n\n<h5 id=\"explanation-of-sample-output-2\">Explanation of Sample Output 2:</h5>\n\n<pre><code>In test case 1, Given &#39;ARR&#39; = {1,2,3,4,5}, we can see that the longest alternating subsequence for this array can be any pair of two elements. Therefore, the length will be 2.\n\nIn test case 2, Given &#39;ARR&#39; = {1,3,2} we can see that the longest alternating subsequence for this array will be {1,3,2}. Therefore, the length will be 3.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -3,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array 'ARR' of integers, find the length of the longest alternating subsequence. An alternating sequence is defined as a sequence a1, a2, .... an where elements satisfy either a1 < a2 > a3 < a4 > a5..... or a1 > a2 < a3 > a4 < a5.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= N <= 5000",
                    "1 <= ARR[i] <= 10^5",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "7\n1 2 5 3 10 15 12\n4\n1 4 2 3",
                        "output": "5\n4",
                        "explanation": "Test Case 1: The longest alternating subsequence of {1,2,5,3,10,15,12} can be {1,5,3,15,12} or {2,5,3,15,12}, with length 5.\nTest Case 2: The longest alternating subsequence of {1,4,2,3} is {1,4,2,3}, with length 4."
                    },
                    {
                        "input": "5\n1 2 3 4 5\n3\n1 3 2",
                        "output": "2\n3",
                        "explanation": "Test Case 1: The longest alternating subsequence of {1,2,3,4,5} can be any pair of two elements, with length 2.\nTest Case 2: The longest alternating subsequence of {1,3,2} is {1,3,2}, with length 3."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you do it recursively?</p>",
            "<p>Save your previous result so that you can avoid redundant function calls.</p>",
            "<p><strong>&nbsp;</strong>Can you use the already calculated sum?</p>",
            "<p>Can you solve it without using extra space.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}