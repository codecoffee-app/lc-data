{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10607,
            "title": "Longest AP",
            "titleSlug": "longest-ap_1235209",
            "content": "<h4 id=\"you-are-given-an-array-arr-of-size-n-your-task-is-to-find-a-subsequence-s-of-arr-such-that-the-following-conditions-hold-true\">You are given an array \u2018ARR\u2019 of size \u2018N\u2019. Your task is to find a <a href=\"https://en.wikipedia.org/wiki/Subsequence\">subsequence</a> \u2018S\u2019 of \u2018ARR\u2019 such that the following conditions hold true:</h4>\n\n<h4 id=\"s-must-be-in-arithmetic-progression\">\u2022 \u2018S\u2019 must be in <a href=\"https://en.wikipedia.org/wiki/Arithmetic_progression\">arithmetic progression</a>.</h4>\n\n<h4 id=\"the-length-of-s-must-be-the-maximum-possible\">\u2022 The length of \u2018S\u2019 must be the maximum possible.</h4>\n\n<h4 id=\"return-the-maximum-possible-length-of-s\">Return the maximum possible length of &#39;S&#39;.</h4>\n\n<h4 id=\"example\">Example -</h4>\n\n<p>ARR = [2,8,4,13,6]\nThe longest subsequence that is possible here is [2,4,6] which has length &#39;3&#39;.</p>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer &#39;T&#39; representing the number of test cases.\n\nThe first line of each test case contains a single integer \u2018N\u2019 denoting the size of the array.\n\nThe second line of each test case contains \u2018N\u2019 space-separated integers denoting the elements of the array. \n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, return the length of the longest possible subsequence of the array that is in arithmetic progression. \n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= N &lt;= 50\n1 &lt;= ARR[i] &lt;= 50\n\nWhere &#39;ARR[i]&#39; is element of array at index &#39;i&#39;.\n\nTime limit: 1 sec\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1:</h4>\n\n<pre><code>2\n4\n1 2 3 4\n3\n1 5 6\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1:</h4>\n\n<pre><code>4\n2\n</code></pre>\n\n<h4 id=\"explanation-of-sample-output-1\">Explanation of Sample Output 1:</h4>\n\n<pre><code>In test case 1,\nGiven arr = [1, 2, 3, 4]\nLongest AP = [1, 2, 3, 4]\nSo the length of the longest possible AP is 4.\n\nTest Case 2 : \nGiven arr = [1, 5, 6]\nLongest AP = [1, 5]\nSo the length of the longest possible AP is 2.\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2:</h4>\n\n<pre><code>2\n4\n1 2 10 3\n2\n1 2\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2:</h4>\n\n<pre><code>3\n2\n</code></pre>\n\n<h4 id=\"explanation-of-sample-input-2\">Explanation of Sample Input 2:</h4>\n\n<pre><code>Test Case 1 :  \nGiven arr = [1, 2, 10, 3]\nLongest AP = [1, 2, 3]\nSo the length of the longest possible AP is 3.\n\nTest Case 2 : \nGiven arr = [1, 2]\nLongest AP = [1, 2]\nSo the length of the longest possible AP is 2.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 4,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array 'ARR' of size 'N', find the longest subsequence 'S' of 'ARR' that forms an arithmetic progression. Return the length of this longest subsequence.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= N <= 50",
                    "1 <= ARR[i] <= 50, where ARR[i] is the element of the array at index 'i'.",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "4\n1 2 3 4",
                        "output": "4",
                        "explanation": "The longest arithmetic progression subsequence in [1, 2, 3, 4] is [1, 2, 3, 4] itself, which has a length of 4."
                    },
                    {
                        "input": "3\n1 5 6",
                        "output": "2",
                        "explanation": "The longest arithmetic progression subsequence in [1, 5, 6] is [1, 5] or [5,6], which has a length of 2."
                    },
                    {
                        "input": "4\n1 2 10 3",
                        "output": "3",
                        "explanation": "The longest arithmetic progression subsequence in [1, 2, 10, 3] is [1, 2, 3], which has a length of 3."
                    },
                    {
                        "input": "2\n1 2",
                        "output": "2",
                        "explanation": "The longest arithmetic progression subsequence in [1, 2] is [1, 2], which has a length of 2."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you check all possible common differences that a subsequence can have?.</p>",
            "<p>Use dynamic programming to optimize the previous approach.</p>",
            "<p>Use Iterative dynamic programming to find the subsequence.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}