{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 3607,
            "title": "Longest Common Prefix",
            "titleSlug": "longest-common-prefix_78332",
            "content": "<h4 id=\"vidit-is-frequently-among-the-wrong-doers-list-to-curb-his-menace-ms-manisha-his-algorithms-teacher-gave-him-an-assignment-to-keep-him-busy\">Vidit is frequently among the &quot;Wrong-doers&quot; list. To curb his menace, Ms. Manisha, his algorithms teacher, gave him an assignment to keep him busy.</h4>\n\n<h4 id=\"ms-manisha-coins-a-term-longest-common-prefix-which-is-defined-as-longest-word-with-which-both-words-start-with-for-example-the-longest-common-prefix-of-words-notify-and-notification-is-the-word-notif\">Ms. Manisha coins a term &quot;longest common prefix&quot;, which is defined as longest word with which both words start with. For example: the longest common prefix of words: &quot;notify&quot; and &quot;notification&quot; is the word &quot;notif&quot;.</h4>\n\n<h4 id=\"now-ms-manisha-gives-a-database-of-n-words-to-vidit-ms-manisha-also-gives-an-algorithm-to-search-a-word-x-in-the-database-the-algorithm-is-simple-and-is-written-as\">Now, Ms. Manisha gives a database of N words to Vidit. Ms. Manisha also gives an algorithm to search a word X in the database. The algorithm is simple and is written as:</h4>\n\n<h4 id=\"1-compare-the-word-x-with-each-word-in-the-database-we-keep-on-comparing-till-we-find-a-mismatching-letter-or-end-of-one-of-the-words-is-reached\">1. Compare the word X with each word in the database. We keep on comparing till we find a mismatching letter or end of one of the words is reached.</h4>\n\n<h4 id=\"2-after-that-it-is-established-either-words-are-equal-unequal-or-that-one-is-longer-than-the-other\">2. After that it is established either words are equal/unequal or that one is longer than the other.</h4>\n\n<h4 id=\"3-when-the-algorithm-finds-the-word-x-in-the-database-it-terminates\">3. When the algorithm finds the word X in the database, it terminates.</h4>\n\n<h4 id=\"analysing-the-algorithm-it-shows-that-the-number-of-steps-needed-to-find-a-word-w-is-equal-to-the-sum-of-the-lengths-of-the-longest-common-prefixes-of-x-and-each-of-the-words-it-was-compared-to\">Analysing the algorithm, it shows that the number of steps needed to find a word W is equal to the sum of the lengths of the longest common prefixes of X and each of the words it was compared to.</h4>\n\n<h4 id=\"vidit-comes-to-you-and-asks-you-to-write-a-program-that-calculates-the-number-of-steps-the-algorithm-uses-to-find-each-of-the-q-query-words\">Vidit comes to you and asks you to write a program that calculates the number of steps the algorithm uses to find each of the Q query words.</h4>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code> The first line contains an integer N (1 \u2264 N \u2264 30000), the number of words in the database.\n Each of the following N lines contains a single word from the database. The words are given in the order the algorithm compares them to a query word. All words in the database will be distinct.\n The following line contains an integer Q (1 \u2264 Q \u2264 30000), the number of words searched for.\n Each of the following Q lines contains a single query word.\n All words in the input will be strings of less than 30 lowercase letters of the English alphabet.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code> Time Limit: 2 seconds\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code> Output one integer per line for each query word, the number of steps the algorithm uses when searching for the word.   \n</code></pre>\n<h5 id=\"sample-test-cases\">Sample Test Cases:</h5>\n\n<h4 id=\"sample-input-1\">Sample Input 1:</h4>\n\n<pre><code>8\nmajmunica\nmajmun\nmajka\nmalina\nmalinska\nmalo\nmaleni\nmalesnica\n3\nkrampus\nmalnar\nmajmun\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1:</h4>\n\n<pre><code>8\n29\n14\n</code></pre>\n\n<h4 id=\"explanation\">Explanation:</h4>\n\n<pre><code>In the first test case, the number of steps to search for the word &quot;krampus&quot; is 8 because the algorithm only needs to compare its first letter to each word in the database.\nWhen searching for the word &quot;malnar&quot;, we need three steps for each of the first three words, and four steps for each of the remaining five words, for a total of 29 steps.\nTo find the word &quot;majmun&quot; we use a total of 14 steps. For the first word in the database, we have six successful comparisons and one step in which we determine that the word &quot;majmunica&quot; is longer than the query word. For the second word, we also have six successful comparisons and a final step in which it is established that the words are equal. After finding the word, the algorithm terminates with great joy\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 6,
            "dislikes": "NA",
            "rephrased": {
                "body": "Vidit, often in trouble, is given an assignment by his algorithms teacher, Ms. Manisha, to keep him occupied. Ms. Manisha introduces the concept of \"longest common prefix\" - the longest starting sequence of characters shared by two words. She then provides Vidit with a database of N words and an algorithm to search for a word X within it. The algorithm compares X with each word in the database sequentially, character by character, until a mismatch occurs or one of the words ends. The search stops when the word X is found in the database.  The number of steps in this algorithm is the sum of the lengths of the longest common prefixes between X and each word it was compared to before X was found. Your task is to calculate the total number of steps the algorithm takes to find each of Q given query words.",
                "constraints": [
                    "1 \u2264 N \u2264 30000",
                    "1 \u2264 Q \u2264 30000",
                    "All words in the input will be strings of less than 30 lowercase letters of the English alphabet.",
                    "Time Limit: 2 seconds"
                ],
                "testcases": [
                    {
                        "input": "8\nmajmunica\nmajmun\nmajka\nmalina\nmalinska\nmalo\nmaleni\nmalesnica\n3\nkrampus\nmalnar\nmajmun",
                        "output": "8\n29\n14",
                        "explanation": "For the query \"krampus\", the algorithm compares the first character with each of the 8 words, resulting in 8 steps.  For \"malnar\", the longest common prefixes are: 'm' (with majmunica, majmun, majka), 'mal' (with malina), 'mal' (with malinska), 'mal' (with malo), 'mal' (with maleni), 'mal' (with malesnica), totaling 3 + 3 + 3 + 4 + 4 + 4 + 4 + 4 = 29 steps. For \"majmun\", comparisons are made against \"majmunica\" (6 matches, then a mismatch) and \"majmun\" (6 matches, then equality), so total steps are 7 + 7 = 14."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}