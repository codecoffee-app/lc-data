{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10384,
            "title": "Longest Common Substring",
            "titleSlug": "longest-common-substring_1214702",
            "content": "<h4 id=\"you-have-been-given-two-strings-str1-and-str2-you-have-to-find-the-length-of-the-longest-common-substring\">You have been given two strings \u201cstr1\u201d and \u201cstr2\u201d. You have to find the length of the longest common substring.</h4>\n\n<h4 id=\"a-string-s1-is-a-substring-of-another-string-s2-if-s2-contains-the-same-characters-as-in-s1-in-the-same-order-and-in-continuous-fashion-also\">A string \u201cs1\u201d is a substring of another string \u201cs2\u201d if \u201cs2\u201d contains the same characters as in \u201cs1\u201d, in the same order and in continuous fashion also.</h4>\n\n<h5 id=\"for-example\">For example :</h5>\n\n<pre><code>If \u201cstr1\u201d = \u201cabcjklp\u201d and \u201cstr2\u201d = \u201cacjkp\u201d  then the output will be 3.\n\nExplanation : The longest common substring is \u201ccjk\u201d which is of length 3.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains an integer \u2018T\u2019 which denotes the number of test cases or queries to be run. Then the test cases are as follows.\n</code></pre>\n\n<p>The first and only line of each test case contains two space-separated strings str1 and str2, respectively.</p>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print the length of the longest common substring among the two strings.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= |str1|, |str2| &lt;= 100\n\nwhere \u2018T\u2019 is the number of test cases and |str| is the length of the string str.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\nabcjklp acjkp\nwasdijkl wsdjkl\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>3\n3\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\nabcy acby\ntyfg cvbnuty\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>1\n2\n</code></pre>\n\n<p>Explanation: The longest common substrings in first test case are \u201ca\u201d, &quot;b&quot;, &quot;c&quot;, \u201cy\u201d all having length 1.</p>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 2,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two strings, `str1` and `str2`, determine the length of the longest substring common to both. A substring is a contiguous sequence of characters within a string.",
                "constraints": [
                    "1 <= T <= 100, where \u2018T\u2019 is the number of test cases.",
                    "1 <= |str1|, |str2| <= 100, where |str| is the length of the string str.",
                    "Strings contain only lowercase characters."
                ],
                "testcases": [
                    {
                        "input": "str1 = \"abcjklp\", str2 = \"acjkp\"",
                        "output": "3",
                        "explanation": "The longest common substring is \"cjk\", which has length 3."
                    },
                    {
                        "input": "str1 = \"wasdijkl\", str2 = \"wsdjkl\"",
                        "output": "3",
                        "explanation": "The longest common substring is \"djkl\", which has length 3."
                    },
                    {
                        "input": "str1 = \"abcy\", str2 = \"acby\"",
                        "output": "1",
                        "explanation": "The longest common substrings are \"a\", \"b\", \"c\", and \"y\", each having length 1."
                    },
                    {
                        "input": "str1 = \"tyfg\", str2 = \"cvbnuty\"",
                        "output": "2",
                        "explanation": "The longest common substring is \"ty\", which has length 2."
                    },
                    {
                        "input": "str1 = \"abcdef\", str2 = \"ghijkl\"",
                        "output": "0",
                        "explanation": "There is no common substring between the two strings."
                    },
                    {
                        "input": "str1 = \"\", str2 = \"abcdef\"",
                        "output": "0",
                        "explanation": "If either string is empty, the longest common substring has length 0."
                    },
                    {
                        "input": "str1 = \"abcdef\", str2 = \"\"",
                        "output": "0",
                        "explanation": "If either string is empty, the longest common substring has length 0."
                    },
                    {
                        "input": "str1 = \"ababab\", str2 = \"aba\"",
                        "output": "3",
                        "explanation": "The longest common substring is \"aba\", which has length 3."
                    },
                    {
                        "input": "str1 = \"uvwxyz\", str2 = \"vwxy\"",
                        "output": "4",
                        "explanation": "The longest common substring is \"vwxy\", which has length 4."
                    },
                    {
                        "input": "str1 = \"aaaaaaaaaa\", str2 = \"aa\"",
                        "output": "2",
                        "explanation": "The longest common substring is \"aa\", which has length 2."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you think of checking if substrings of the first string also exist in the second string?</p>",
            "<p>Can you think of using recursion for this problem?</p>",
            "<p>Can you think of using memoization?</p>",
            "<p>Can you use the concept of dynamic programming?</p>"
        ],
        "relatedTopics": [],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}