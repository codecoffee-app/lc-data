{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9175,
            "title": "Longest Consecutive Sequence in a Binary Tree",
            "titleSlug": "longest-consecutive-sequence-in-a-binary-tree_977251",
            "content": "<h4 id=\"given-a-binary-tree-return-the-length-of-the-longest-path-which-has-consecutive-integers-in-increasing-order-from-root-to-leaves-a-path-is-defined-as-a-sequence-of-nodes-which-share-an-edge-between-them\">Given a binary tree, return the length of the longest path which has consecutive integers in increasing order from root to leaves. A path is defined as a sequence of nodes which share an edge between them.</h4>\n\n<h4 id=\"for-example\">For example:</h4>\n\n<p><img src=\"https://files.codingninjas.in/image3-6575.jpg\" alt=\"img 1\"></p>\n\n<h4 id=\"the-path-shown-in-red-is-the-longest-increasing-consecutive-path-in-the-tree-we-can-see-that-it-has-4-nodes-4-5-6-7-which-are-consecutive-integers-hence-the-answer-for-this-tree-will-be-4\">The path shown in red is the longest increasing consecutive Path in the tree. We can see that it has 4 nodes (4,5,6,7) which are consecutive integers. Hence the answer for this tree will be 4.</h4>\n\n<h4 id=\"note-that-there-is-another-consecutive-sequence-of-length-3-i-e-1-2-3-in-the-left-subtree-of-the-root-node-but-it-is-not-the-longest-consecutive-path\">Note that there is another consecutive sequence of length 3 i.e. 1-&gt;2-&gt;3 in the left subtree of the root node, but it is not the longest consecutive path.</h4>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains an Integer &#39;T&#39; which denotes the number of test cases or queries to be run. Then the test cases follow.\n\nThe first line of input contains the elements of the tree in the level order form separated by a single space.\n\nIf any node does not have left or right child, take -1 in its place. Refer to the example below.\n\nExample :\n\nElements are in the level order form. The input consists of values of nodes separated by a single space in a single line. In case a node is null, we take -1 on its place.\n\nFor example, the input for the tree depicted in the below image would be :\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/tree2-5139.png\" alt=\"example\"></p>\n\n<pre><code>1\n2 3\n4 -1 5 6\n-1 7 -1 -1 -1 -1\n-1 -1\n\nExplanation :\nLevel 1 :\nThe root node of the tree is 1\n\nLevel 2 :\nLeft child of 1 = 2\nRight child of 1 = 3\n\nLevel 3 :\nLeft child of 2 = 4\nRight child of 2 = null (-1)\nLeft child of 3 = 5\nRight child of 3 = 6\n\nLevel 4 :\nLeft child of 4 = null (-1)\nRight child of 4 = 7\nLeft child of 5 = null (-1)\nRight child of 5 = null (-1)\nLeft child of 6 = null (-1)\nRight child of 6 = null (-1)\n\nLevel 5 :\nLeft child of 7 = null (-1)\nRight child of 7 = null (-1)\n\nThe first not-null node (of the previous level) is treated as the parent of the first two nodes of the current level. The second not-null node (of the previous level) is treated as the parent node for the next two nodes of the current level and so on.\n\nThe input ends when all nodes at the last level are null (-1).\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>The above format was just to provide clarity on how the input is formed for a given tree.\n\nThe sequence will be put together in a single line separated by a single space. Hence, for the above-depicted tree, the input will be given as:\n\n1 2 3 4 -1 5 6 -1 7 -1 -1 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, return a single integer denoting the number of nodes in the  Longest increasing Consecutive Path.\n</code></pre>\n\n<h5 id=\"note\">Note</h5>\n\n<pre><code>Do not print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= N &lt;= 3000\n\nWhere \u2018N\u2019 is the number of nodes in the given binary tree.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n6 4 7 -1 -1 -1 8 9  -1 -1 -1 \n1 2 3 4 5 6 7 - 1 -1 -1 -1 -1 -1 -1 -1 \n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>4\n2\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1 :</h5>\n\n<pre><code>Test Case 1:\nThe tree is:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/image1-6573.jpg\" alt=\"img 1\"></p>\n\n<pre><code>We can clearly see that the longest path has the length 4 (6-&gt;7-&gt;8-&gt;9) hence we return 4.\n\nTest Case 2: \nThe Tree is:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/image2-6574.jpg\" alt=\"img 1\"></p>\n\n<pre><code>We can see that the longest consecutive sequence, in this case, has length 2 i.e 1-&gt;2.\nTherefore we return 2\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code> 2\n 1 2 9 3 4 5 6 4 -1 -1 -1 -1 -1 -1 -1 -1 -1 \n 10 11 -1 12 -1 13 -1 16 -1 17 -1 38 -1 14 -1 -1 -1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>4\n7\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 1,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a binary tree, find the length of the longest path from the root to a leaf where the node values are consecutive integers in increasing order. A path consists of nodes connected by edges.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= N <= 3000",
                    "Where \u2018N\u2019 is the number of nodes in the given binary tree.",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "6 4 7 -1 -1 -1 8 9  -1 -1 -1",
                        "output": "4",
                        "explanation": "The longest increasing consecutive path is 6 -> 7 -> 8 -> 9, which has a length of 4."
                    },
                    {
                        "input": "1 2 3 4 5 6 7 - 1 -1 -1 -1 -1 -1 -1 -1",
                        "output": "2",
                        "explanation": "The longest increasing consecutive path is 1 -> 2, which has a length of 2."
                    },
                    {
                        "input": "1 2 9 3 4 5 6 4 -1 -1 -1 -1 -1 -1 -1 -1 -1",
                        "output": "4",
                        "explanation": "The longest increasing consecutive path is 1 -> 2 -> 3 -> 4, which has a length of 4."
                    },
                    {
                        "input": "10 11 -1 12 -1 13 -1 16 -1 17 -1 38 -1 14 -1 -1 -1",
                        "output": "7",
                        "explanation": "The longest increasing consecutive path is 10 -> 11 -> 12 -> 13 -> 14,  there also another longest path which is 10 -> 11 -> 12 -> 13 -> 16 -> 17 -> 38. So, from these two longest path, the longest consecutive path has a length of 7."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><strong>&nbsp;Traverse through the tree recursively and find the longest path with the consecutive sequence of nodes</strong></p>",
            "<p><strong>Use a breadth-first search to find the longest consecutive path.</strong></p>"
        ],
        "relatedTopics": [
            {
                "name": "Binary Trees",
                "slug": "binary-trees"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}