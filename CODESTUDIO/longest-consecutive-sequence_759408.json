{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 7703,
            "title": "Longest Consecutive Sequence",
            "titleSlug": "longest-consecutive-sequence_759408",
            "content": "<h4 id=\"you-are-given-an-unsorted-array-list-arr-of-n-integers-your-task-is-to-return-the-length-of-the-longest-consecutive-sequence\">You are given an unsorted array/list &#39;ARR&#39; of &#39;N&#39;  integers. Your task is to return the length of the longest consecutive sequence.</h4>\n\n<h4 id=\"the-consecutive-sequence-is-in-the-form-num-num-1-num-2-num-l-where-num-is-the-starting-integer-of-the-sequence-and-l-1-is-the-length-of-the-sequence\">The consecutive sequence is in the form [&#39;NUM&#39;, &#39;NUM&#39; + 1, &#39;NUM&#39; + 2, ..., &#39;NUM&#39; + L] where &#39;NUM&#39; is the starting integer of the sequence and &#39;L&#39; + 1 is the length of the sequence.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>If there are any duplicates in the given array we will count only one of them in the consecutive sequence.\n</code></pre>\n\n<h5 id=\"for-example\">For example-</h5>\n\n<pre><code>For the given &#39;ARR&#39; [9,5,4,9,10,10,6].\n\nOutput = 3\nThe longest consecutive sequence is [4,5,6].\n</code></pre>\n\n<h5 id=\"follow-up\">Follow Up:</h5>\n\n<pre><code>Can you solve this in O(N) time and O(N) space complexity?\n</code></pre>\n\n<h5 id=\"input-format\">Input format :</h5>\n\n<pre><code>The first line of input contains a single integer &#39;T&#39;, representing the number of test cases or queries to be run. Then the &#39;T&#39; test cases follow.\n\nThe first line of each test case contains integer &#39;N&#39; denoting the size of the array.\n\nThe second line of each test case contains &#39;N&#39; single space-separated integers, elements of the array.  \n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case, print an integer in a single line that represents the length of the longest consecutive sequence.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You are not required to print the expected output; it has already been taken care of. Just implement the function. \n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 10^5\n-10^9 &lt;= ARR[i] &lt;= 10^9\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>1 \n5\n33 20 34 30 35\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>3\n</code></pre>\n\n<h5 id=\"explanation-to-sample-input-1\">Explanation to Sample Input 1 :</h5>\n\n<pre><code>The longest consecutive sequence is [33, 34, 35].\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>1\n7\n1 9 3 10 4 20 2    \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>4\n</code></pre>\n\n<h5 id=\"explanation-to-sample-input-2\">Explanation to Sample Input 2 :</h5>\n\n<pre><code>The consecutive sequence is in the form [&#39;NUM&#39;, &#39;NUM&#39; + 1, &#39;NUM&#39; + 2,...,&#39;NUM&#39; + &#39;L&#39;]. So in the given array, the longest consecutive sequence is [1,2,3,4] where &#39;NUM&#39; = 1 and &#39;L&#39; = 3. And the length of the sequence will be &#39;L&#39; + 1 = 4.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 192,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an unsorted array of integers, find the length of the longest consecutive sequence of elements in the array. Duplicates should only be counted once. Solve this problem with O(N) time and space complexity.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10^5",
                    "-10^9 <= ARR[i] <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "n = 5, arr = [33, 20, 34, 30, 35]",
                        "output": "3",
                        "explanation": "The longest consecutive sequence is [33, 34, 35], hence the length is 3."
                    },
                    {
                        "input": "n = 7, arr = [1, 9, 3, 10, 4, 20, 2]",
                        "output": "4",
                        "explanation": "The longest consecutive sequence is [1, 2, 3, 4], hence the length is 4."
                    },
                    {
                        "input": "n = 5, arr = [1, 2, 2, 3, 4]",
                        "output": "4",
                        "explanation": "The longest consecutive sequence is [1, 2, 3, 4], duplicates are counted only once. The length is 4."
                    },
                    {
                        "input": "n = 1, arr = [5]",
                        "output": "1",
                        "explanation": "The longest consecutive sequence is [5], hence the length is 1."
                    },
                    {
                        "input": "n = 6, arr = [0, 3, 7, 2, 5, 8, 4, 6, 0, 1]",
                        "output": "9",
                        "explanation": "The longest consecutive sequence is [0, 1, 2, 3, 4, 5, 6, 7, 8], hence length is 9."
                    },
                    {
                        "input": "n = 5, arr = [100, 4, 200, 1, 3, 2]",
                        "output": "4",
                        "explanation": "The longest consecutive sequence is [1, 2, 3, 4], hence length is 4."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Think of finding the next consecutive element in an array.</p>",
            "<p>Think of a solution if the array is in ascending order.</p>",
            "<p>Think of a solution to optimize the brute force solution using the Hash Table.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "cpp",
                "full_func": "/*  \r\n    Time Complexity: O(N)\r\n    Space Complexity: O(N)\r\n\r\n    Where N is the length of the given array.\r\n*/\r\n\r\n#include <unordered_set>\r\n\r\nint lengthOfLongestConsecutiveSequence(vector<int> &arr, int n) {\r\n    // To store length of longest consecutive sequence.\r\n    int mx = 0;\r\n\r\n    // To store the length of current consecutive Sequence.\r\n    int count = 0;\r\n\r\n    // To store all the unique elements of array.\r\n    unordered_set<int> set;\r\n\r\n    for (int i = 0; i < n; i++) {\r\n        set.insert(arr[i]);\r\n    }\r\n\r\n    for (int i = 0; i < n; i++) {\r\n        int previousConsecutiveElement = arr[i] - 1;\r\n\r\n        if (set.find(previousConsecutiveElement) == set.end()) {\r\n\r\n            // 'arr[i]' is the first value of consecutive sequence.\r\n            int j = arr[i];\r\n            \r\n            while (set.find(j) != set.end()) {\r\n                // The next consecutive element by will be j + 1.\r\n                j++;\r\n            }\r\n\r\n            // Update maximum length of consecutive sequence.\r\n            mx = max(mx, j - arr[i]);\r\n        }\r\n\r\n    }\r\n\r\n    return mx;\r\n}",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "java",
                "full_func": "/*  \r\n    Time Complexity: O(N)\r\n    Space Complexity: O(N)\r\n\r\n    Where N is the length of the given array.\r\n*/\r\n\r\nimport java.util.HashSet;\r\n\r\npublic class Solution {\r\n    public static int lengthOfLongestConsecutiveSequence(int[] arr, int N) {\r\n        // To store length of longest consecutive sequence.\r\n        int mx = 0;\r\n\r\n        // To store the length of current consecutive Sequence.\r\n        int count = 0;\r\n\r\n        // To store all the unique elements of array.\r\n        HashSet<Integer> set = new HashSet<>();\r\n\r\n        for (Integer element : arr) {\r\n            set.add(element);\r\n        }\r\n\r\n        for (Integer element : arr) {\r\n            int previousConsecutiveElement = element - 1;\r\n\r\n            if (!set.contains(previousConsecutiveElement)) {\r\n\r\n                // Element is the first value of consecutive sequence.\r\n                int j = element;\r\n                \r\n                while (set.contains(j)) {\r\n                    // The next consecutive element by will be j + 1.\r\n                    j++;\r\n                }\r\n\r\n                // Update maximum length of consecutive sequence.\r\n                mx = Math.max(mx, j - element);\r\n            }\r\n\r\n        }\r\n\r\n        return mx;\r\n    }\r\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "python",
                "full_func": "'''  \r\n    Time Complexity: O(N)\r\n    Space Complexity: O(N)\r\n\r\n    Where N is the length of the given array.\r\n'''\r\n\r\ndef lengthOfLongestConsecutiveSequence(arr, n):\r\n    # To store length of longest consecutive sequence.\r\n    mx = 0\r\n    \r\n    # To store the length of current consecutive Sequence.\r\n    count = 0\r\n    \r\n    # To store all the unique elements of array.\r\n    sett = set()\r\n    \r\n    for element in arr:\r\n        sett.add(element)\r\n        \r\n    for element in arr:\r\n        \r\n        previousConsecutiveElement=element-1\r\n        \r\n        if(not previousConsecutiveElement in sett):\r\n            \r\n            # Element is the first value of consecutive sequence.\r\n            j = element\r\n            \r\n            while j in sett:\r\n                \r\n                # The next consecutive element by will be j + 1.\r\n                j += 1\r\n            \r\n            # Update maximum length of consecutive subsequence.\r\n            mx = max(mx , j-element)\r\n     \r\n    return mx",
                "lang_text": "py"
            }
        },
        "platform": "CODESTUDIO"
    }
}