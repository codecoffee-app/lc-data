{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12125,
            "title": "Longest Happy String",
            "titleSlug": "longest-happy-string_1404430",
            "content": "<h4 id=\"ninja-likes-to-play-with-strings-and-he-calls-a-string-s-happy-if-it-only-contains-letters-a-b-and-c-and-no-three-consecutive-letters-in-the-string-are-the-same-for-example-aa-aab-aabbcc-are-the-happy-strings-but-aaa-aaza-aaabbb-are-not-happy-strings\">Ninja likes to play with strings, and he calls a string \u2018S\u2019 Happy if it only contains letters \u2018a\u2019, \u2018b\u2019, and \u2018c\u2019, and no three consecutive letters in the string are the same. For example, \u2018aa\u2019, \u2018aab\u2019, \u2018aabbcc\u2019 are the happy strings, but \u2018aaa\u2019, \u2018aaza\u2019, \u2018aaabbb\u2019 are not happy strings.</h4>\n\n<h4 id=\"you-are-given-three-non-negative-integers-x-y-z-you-need-to-find-the-longest-happy-string-such-that-it-contains-a-at-most-x-times-b-at-most-y-times-and-c-almost-z-times\">You are given three non-negative integers \u2018X\u2019, \u2018Y\u2019, \u2018Z\u2019. You need to find the longest happy string such that it contains \u2018a\u2019 at most \u2018X\u2019 times, \u2018b\u2019 at most \u2018Y\u2019 times, and \u2018c\u2019 almost \u2018Z\u2019 times.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>There can be more than one possible string with maximum size. In that case, you can return any of them.\n</code></pre>\n\n<h4 id=\"input-format\">Input Format:</h4>\n\n<pre><code>The first line contains an integer &#39;T&#39; which denotes the number of test cases or queries to be run.\n\nThe first line of each test case contains three space separated integers, \u2018X\u2019, \u2018Y\u2019, and \u2018Z\u2019, which denote the maximum number of \u2018a\u2019, \u2018b\u2019, and \u2018c\u2019 respectively answer strings can have.\n</code></pre>\n\n<h4 id=\"output-format\">Output Format:</h4>\n\n<pre><code>For each test case, the output will be \u201c1\u201d if you have returned the correct answer, else it will be \u201c0\u201d.\n</code></pre>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>You do not need to input or print anything, and it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints:</h4>\n\n<pre><code>1 &lt;= T &lt;= 5\n0 &lt;= X, Y, Z &lt;= 10^3\nX + Y + Z &gt;= 1\n\nTime Limit: 1 sec\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1:</h4>\n\n<pre><code>2\n2 4 4\n6 1 1\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1:</h4>\n\n<pre><code>1\n1\n</code></pre>\n\n<h4 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1:</h4>\n\n<pre><code>Test case 1:\nFor the first test case one of the possible string is \u201caabbccbbcc\u201d, other possible string can be \u201cabbccbbcca\u201d or \u201cbbcabbcacc\u201d. All these strings have maximum possible length equal to 10, and no three consecutive letters are the same.\n\nTest case 2:\nFor the second test case, one possible answer string is \u201caabaacaa\u201d of length 8, another possible string is \u201caacaabaa\u201d.\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2:</h4>\n\n<pre><code>1\n6 0 1\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2:</h4>\n\n<pre><code>1\n</code></pre>\n\n<h4 id=\"explanation-of-sample-input-2\">Explanation of Sample Input 2:</h4>\n\n<pre><code>Test case 1:\nThere is only one possible string for the first test case i.e. \u201caacaa\u201d of length 5.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 0,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given three non-negative integers 'x', 'y', and 'z' representing the maximum number of times the characters 'a', 'b', and 'c' can appear respectively, construct the longest possible string that satisfies the following conditions:\n\n1.  The string contains only the characters 'a', 'b', and 'c'.\n2.  No three consecutive characters in the string are the same (e.g., 'aaa', 'bbb', 'ccc' are not allowed).\n\nReturn any one of the longest happy strings that meets these criteria.",
                "constraints": [
                    "1 <= T <= 5",
                    "0 <= X, Y, Z <= 10^3",
                    "X + Y + Z >= 1"
                ],
                "testcases": [
                    {
                        "input": "x = 2, y = 4, z = 4",
                        "output": "1",
                        "explanation": "One possible longest happy string is 'aabbccbbcc' with length 10."
                    },
                    {
                        "input": "x = 6, y = 1, z = 1",
                        "output": "1",
                        "explanation": "One possible longest happy string is 'aabaacaa' with length 8."
                    },
                    {
                        "input": "x = 6, y = 0, z = 1",
                        "output": "1",
                        "explanation": "One possible longest happy string is 'aacaa' with length 5."
                    },
                    {
                        "input": "x = 1, y = 1, z = 7",
                        "output": "1",
                        "explanation": "One possible longest happy string is 'ccaccacccc' with length 10."
                    },
                    {
                        "input": "x = 3, y = 3, z = 3",
                        "output": "1",
                        "explanation": "One possible longest happy string is 'aabbccaabbcc' with length 12."
                    },
                    {
                        "input": "x = 1, y = 0, z = 0",
                        "output": "1",
                        "explanation": "One possible longest happy string is 'a' with length 1."
                    },
                    {
                        "input": "x = 0, y = 1, z = 0",
                        "output": "1",
                        "explanation": "One possible longest happy string is 'b' with length 1."
                    },
                    {
                        "input": "x = 0, y = 0, z = 1",
                        "output": "1",
                        "explanation": "One possible longest happy string is 'c' with length 1."
                    },
                    {
                        "input": "x = 5, y = 1, z = 1",
                        "output": "1",
                        "explanation": "One possible longest happy string is 'aabaacaa' with length 7."
                    },
                    {
                        "input": "x = 10, y = 1, z = 1",
                        "output": "1",
                        "explanation": "One possible longest happy string is 'aabaacaaaaa' with length 12."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Check all possible strings</p>",
            "<p>It would be better if you add a character with a maximum given limit first.</p>",
            "<p>Think of a greedy approach.&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Heap",
                "slug": "heap"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}