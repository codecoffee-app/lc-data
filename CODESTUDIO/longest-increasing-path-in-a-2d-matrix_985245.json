{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9383,
            "title": "Longest Increasing Path in a 2D matrix",
            "titleSlug": "longest-increasing-path-in-a-2d-matrix_985245",
            "content": "<h4 id=\"you-have-been-given-a-matrix-of-non-negative-integers-of-size-n-x-m-where-n-and-m-denote-the-number-of-rows-and-columns-respectively\">You have been given a MATRIX of non-negative integers of size N x M where &#39;N&#39; and &#39;M&#39; denote the number of rows and columns, respectively.</h4>\n\n<h4 id=\"your-task-is-to-find-the-length-of-the-longest-increasing-path-when-you-can-move-to-either-four-directions-left-right-up-or-down-from-each-cell-moving-diagonally-or-outside-the-boundary-is-not-allowed\">Your task is to find the length of the longest increasing path when you can move to either four directions: left, right, up or down from each cell. Moving diagonally or outside the boundary is not allowed.</h4>\n\n<h4 id=\"note-a-sequence-of-integers-is-said-to-form-an-increasing-path-in-the-matrix-if-the-integers-when-traversed-along-the-allowed-directions-can-be-arranged-in-strictly-increasing-order-the-length-of-an-increasing-path-is-the-number-of-integers-in-that-path\">Note: A sequence of integers is said to form an increasing path in the matrix if the integers when traversed along the allowed directions can be arranged in strictly increasing order. The length of an increasing path is the number of integers in that path.</h4>\n\n<h4 id=\"for-example\">For example :</h4>\n\n<pre><code>3 2 2\n5 6 6\n9 5 11 \n\nIn the given matrix, 3 \u2192  5 \u2192  6 and 3 \u2192  5 \u2192  9 form increasing paths of length 3 each.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of input contains an integer &#39;T&#39; representing the number of test cases or queries to be processed. Then the test case follows.\n\nThe first line of each test case contains two space-separated integers &#39;N&#39;, &#39;M&#39; where &#39;N&#39; and &#39;M&#39; denote the number of rows and columns of the matrix, respectively.\n\nFrom the second line of each test case, the next &#39;N&#39; lines represent the rows of the MATRIX. Every row contains &#39;M&#39; single space-separated integers.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print the length of the longest increasing path.\n\nPrint the output of each test case in a separate line.\n\nNote :\nYou do not need to print anything; it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= N &lt;= 50\n1 &lt;= M &lt;= 50\n0 &lt;= MATRIX[i] &lt;= 10^5\n\nTime Limit: 1sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>1\n3 3 \n1 2 3 \n5 6 4\n9 5 11 \n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>5\n</code></pre>\n\n<h4 id=\"sample-output-1-explanation\">Sample Output 1 Explanation:</h4>\n\n<pre><code>The longest increasing path in the MATRIX is 1 \u2192 2 \u2192 3 \u2192 4 \u2192 11 which is of length 5.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>1\n3 3\n8 8 3\n5 5 7\n2 1 1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>4\n</code></pre>\n\n<h4 id=\"sample-output-2-explanation\">Sample Output 2 Explanation :</h4>\n\n<pre><code>The longest increasing path in the MATRIX is 1 \u2192 2 \u2192 5 \u2192 8 which is of length 4.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 6,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a matrix of non-negative integers of size N x M, find the length of the longest increasing path. You can move to adjacent cells in four directions: left, right, up, or down. Moving diagonally or outside the matrix boundaries is not allowed. An increasing path is a sequence of integers that are strictly increasing when traversed along the allowed directions. The length of the path is the number of integers in the path.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= N <= 50",
                    "1 <= M <= 50",
                    "0 <= MATRIX[i] <= 10^5",
                    "Time Limit: 1sec"
                ],
                "testcases": [
                    {
                        "input": "3 3 \n1 2 3 \n5 6 4\n9 5 11",
                        "output": "5",
                        "explanation": "The longest increasing path in the matrix is 1 -> 2 -> 3 -> 4 -> 11, which has a length of 5."
                    },
                    {
                        "input": "3 3\n8 8 3\n5 5 7\n2 1 1",
                        "output": "4",
                        "explanation": "The longest increasing path in the matrix is 1 -> 2 -> 5 -> 8, which has a length of 4."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Naively find length of increasing path from each cell.</p>",
            "<p>Think of storing the length of the longest increasing path starting from each point.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Matrices (2D Arrays)",
                "slug": "matrices-(2d-arrays)"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}