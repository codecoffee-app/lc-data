{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8506,
            "title": "Longest Palindromic Substring",
            "titleSlug": "longest-palindromic-substring_892978",
            "content": "<h4 id=\"given-a-string-s-consisting-of-lower-case-english-letters-you-are-supposed-to-return-the-longest-palindromic-substring-of-s\">Given a string \u2019S\u2019 consisting of lower case English letters, you are supposed to return the longest palindromic substring of \u2018S\u2019.</h4>\n\n<h4 id=\"note-that-in-case-of-more-than-one-longest-palindromic-substrings-with-the-same-length-you-need-to-return-the-rightmost-substring-in-the-given-string-for-example-in-string-bbbab-there-are-two-possible-longest-palindromic-substrings-i-e-bbb-and-bab-and-since-you-are-supposed-to-return-the-rightmost-substring-so-you-need-to-return-bab-as-the-answer\">Note that in case of more than one longest palindromic substrings with the same length you need to return the rightmost substring in the given string. For example in string \u201cbbbab\u201d, there are two possible longest palindromic substrings i.e. \u201cbbb\u201d and \u201cbab\u201d, and since you are supposed to return the rightmost substring, so you need to return \u201cbab\u201d as the answer.</h4>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>A substring is a contiguous sequence of elements within a string (for example, \u201cbcd\u201d is a substring of \u201cabcde\u201d while \u201cbce\u201d is not).\n\nA string is said to be palindrome if the reverse of the string is the same as the actual string. For example, \u201cabba\u201d is a palindrome, but \u201cabbc\u201d is not a palindrome.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 representing the number of test cases. Then the test cases follow.\n\nThe only line of each test case contains a single string \u2018S\u2019 consisting of only lowercase English letters.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print a single string in a single line denoting the longest palindromic substring of string \u2018S\u2019.\n\nThe output for each test case is in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 50\n1 &lt;= N &lt;= 100\n\nWhere \u2018N\u2019 is the length of the string.\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\nabcbcbab\nbabbba\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>abcbcba\nabbba\n</code></pre>\n\n<h5 id=\"explanation-of-sample-output-1\">Explanation of Sample Output 1:</h5>\n\n<pre><code>In test case 1, the longest palindromic substring is \u201cabcbcba\u201d, which has a length of 7. Strings like \u201cbcb\u201d and \u201cbcbcb\u201d are also palindromic substrings of the given string, but not the longest one.\n\nIn test case 2, the longest palindromic substring is \u201cabbba\u201d, which has a length of 5. Substrings like \u201cbab\u201d and \u201cbbb\u201d are also palindromic substrings of the given string, but not the longest one.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>3\ncbbd\nbebeeeed\nabcdad\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>bb\neeee\ndad\n</code></pre>\n\n<h5 id=\"explanation-of-sample-output-2\">Explanation of Sample Output 2:</h5>\n\n<pre><code>In test case 1, the longest palindromic substring is \u201cbb\u201d, which has a length of 2. Strings like \u201cc\u201d, \u201cb\u201d and \u201cc\u201d are also palindromic substrings of the given string, but not the longest one.\n\nIn test case 2, the longest palindromic substring is \u201ceeee\u201d, which has a length of 4. Substrings like \u201cebe\u201d and \u201ceee\u201d are also palindromic substrings of the given string, but not the longest one.\n\nIn test case 3, the longest palindromic substring is \u201cdad\u201d, which has a length of 3. Substrings like \u201ca\u201d, \u201cb\u201d, \u201cc\u201d, and \u201cd\u201d are also palindromic substrings of the given string, but not the longest one.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -4,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string 'S' consisting of lowercase English letters, find the longest palindromic substring of 'S'. If there are multiple longest palindromic substrings of the same length, return the rightmost one.\n\nA substring is a contiguous sequence of characters within a string.\nA palindrome is a string that reads the same forwards and backward.",
                "constraints": [
                    "1 <= T <= 50",
                    "1 <= N <= 100",
                    "Where \u2018N\u2019 is the length of the string.",
                    "String 'S' consists of only lowercase English letters."
                ],
                "testcases": [
                    {
                        "input": "abcbcbab",
                        "output": "abcbcba",
                        "explanation": "The longest palindromic substring is 'abcbcba' of length 7. Other palindromic substrings exist, but they are shorter."
                    },
                    {
                        "input": "babbba",
                        "output": "abbba",
                        "explanation": "The longest palindromic substring is 'abbba' of length 5. Other palindromic substrings exist, but they are shorter."
                    },
                    {
                        "input": "cbbd",
                        "output": "bb",
                        "explanation": "The longest palindromic substring is 'bb' of length 2. Other palindromic substrings exist, but they are shorter."
                    },
                    {
                        "input": "bebeeeed",
                        "output": "eeee",
                        "explanation": "The longest palindromic substring is 'eeee' of length 4. Other palindromic substrings exist, but they are shorter."
                    },
                    {
                        "input": "abcdad",
                        "output": "dad",
                        "explanation": "The longest palindromic substring is 'dad' of length 3. Other palindromic substrings exist, but they are shorter."
                    },
                    {
                        "input": "bbbab",
                        "output": "bab",
                        "explanation": "Both 'bbb' and 'bab' are palindromes of length 3. The problem specifies to return the rightmost palindrome. Therefore 'bab' is the correct answer."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Explore all the possible substrings and return the longest length of substring which are palindrome.</p>",
            "<p>How can we reuse a previously computed palindrome to compute a larger palindrome?</p>",
            "<p>How have you ever observed palindromes are mirrors around their centre?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}