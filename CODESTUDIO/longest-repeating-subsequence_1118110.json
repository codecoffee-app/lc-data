{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10037,
            "title": "Longest repeating subsequence",
            "titleSlug": "longest-repeating-subsequence_1118110",
            "content": "<h4 id=\"you-are-given-a-string-st-your-task-is-to-find-the-length-of-the-longest-repeating-subsequence-such-that-two-subsequences-don-t-have-the-same-character-at-the-same-position\">You are given a string \u2018st\u2019, Your task is to find the length of the longest repeating subsequence such that two subsequences don\u2019t have the same character at the same position.</h4>\n\n<h5 id=\"for-example\">For Example :</h5>\n\n<pre><code>The given string st = AABCBDC.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/screenshot-187-7860.png\" alt=\"subsequence\"></p>\n\n<pre><code>As you can see there are two repeating longest subsequences \u201cABC\u201d with the same character but different position. Therefore the required answer is \u20183\u2019 as the length of \u201cABC\u201d is 3.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases.\n\nThe first line of each test case contains a single integer \u2018N\u2019, where \u2018N\u2019 denotes the length of string \u2018st\u2019.\n\nThe second line of each test case contains a string \u2018st\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For every test case, print the length of the longest repeating subsequence.\n\nOutput for each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the given function.\n\nAll the characters of the given string \u2018st\u2019 are uppercase letters.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 50\n1 &lt;= N &lt;= 100\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n5\nABCAB\n7\nABCBDCD\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>2\n3\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1 :</h5>\n\n<pre><code>Test Case 1\n\nGiven string \u2018st = ABCAB\u2019\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/screenshot-191-7861.png\" alt=\"subsequence\"></p>\n\n<pre><code>As you can see longest repeating subsequence is \u2018AB\u2019\nSo the length of \u2018AB\u2019 =2.\n\nTest Case 2\n\nGiven string \u2018st = ABCBDCD\u2019\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/screenshot-192-7862.png\" alt=\"subsequence\">   </p>\n\n<pre><code>As you can see longest repeating subsequence is \u2018BCD&#39;\nReturn length of \u2018BCD\u2019 = 3.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n2\nBA\n4\nBCCB\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>0\n1 \n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 27,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string 'st' of length 'n', determine the length of the longest repeating subsequence within 'st'. A repeating subsequence is defined as a subsequence that appears at least twice within the original string, but with the constraint that the same character cannot occupy the same position in both subsequences.",
                "constraints": [
                    "1 <= T <= 50",
                    "1 <= N <= 100",
                    "All characters of the given string 'st' are uppercase letters."
                ],
                "testcases": [
                    {
                        "input": "n = 5, st = ABCAB",
                        "output": "2",
                        "explanation": "The longest repeating subsequence is 'AB'."
                    },
                    {
                        "input": "n = 7, st = ABCBDCD",
                        "output": "3",
                        "explanation": "The longest repeating subsequence is 'BCD'."
                    },
                    {
                        "input": "n = 2, st = BA",
                        "output": "0",
                        "explanation": "There is no repeating subsequence that meets the criteria."
                    },
                    {
                        "input": "n = 4, st = BCCB",
                        "output": "1",
                        "explanation": "The longest repeating subsequence is 'C'."
                    },
                    {
                        "input": "n=3, st=AAA",
                        "output": "1",
                        "explanation": "The longest repeating subsequence is 'A'."
                    },
                    {
                        "input": "n=1, st=A",
                        "output": "0",
                        "explanation": "No repeating subsequence possible."
                    },
                    {
                        "input": "n=6, st=AAAAAA",
                        "output": "1",
                        "explanation": "The longest repeating subsequence is 'A'."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to use the<strong>&nbsp;</strong><a href=\"https://www.codingninjas.com/codestudio/problems/longest-common-subsequence_624879\"> LCS</a> method.</p>",
            "<p>Think of overlapping sub-problems in recursive approach.</p>",
            "<p>Try to use dynamic programming.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}