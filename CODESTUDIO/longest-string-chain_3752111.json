{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 17110,
            "title": "Longest String Chain",
            "titleSlug": "longest-string-chain_3752111",
            "content": "<h4 id=\"you-are-given-an-array-arr-of-strings-where-each-string-consists-of-english-lowercase-letters\">You are given an array <em><strong>&#39;arr&#39;</strong></em> of strings, where each string consists of English lowercase letters.</h4>\n\n<p><br/></p>\n\n<h4 id=\"a-string-chain-of-arr-is-defined-as\">A string chain of &#39;arr&#39; is defined as:</h4>\n\n<h4 id=\"1-a-sequence-of-string-formed-using-elements-of-arr\">(1) A sequence of string formed using elements of &#39;arr&#39;.</h4>\n\n<h4 id=\"2-every-string-in-the-sequence-can-be-formed-by-inserting-a-lowercase-english-letter-into-the-previous-string-except-the-first-string\">(2) Every string in the sequence can be formed by inserting a lowercase English letter into the previous string (except the first string).</h4>\n\n<p><br/></p>\n\n<h4 id=\"find-the-length-of-the-longest-possible-string-chain-of-arr\">Find the length of the longest possible string chain of &#39;arr&#39;.</h4>\n\n<p><br/></p>\n\n<h5 id=\"example\">Example :</h5>\n\n<pre><code>Input: &#39;arr&#39; = [&quot;x&quot;, &quot;xx&quot;, &quot;y&quot;, &quot;xyx&quot;] \n\nOutput: 3\n\nExplanation:\nThe longest possible string chain is \u201cx\u201d -&gt; \u201cxx\u201d -&gt; \u201cxyx\u201d.\nThe length of the given chain is 3, hence the answer is 3.\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of the input contains a single integer &#39;n&#39; denoting the length of the &#39;arr&#39;.\n\nThe next &#39;n&#39; lines of the input contains elements of &#39;arr&#39;.\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>Return the length of the longest possible string chain with strings chosen from the given array.\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don&#39;t need to print anything; it has already been taken care of. Just implement the function.\n</code></pre>\n\n<p><br/></p>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>3\nm \nnm \nmmm\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"expected-answer\">Expected Answer :</h5>\n\n<pre><code>2\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"output-on-console\">Output on console :</h5>\n\n<pre><code>2\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1 :</h5>\n\n<pre><code>In this testcase, the longest possible string chain is &quot;m&quot; -&gt; &quot;nm&quot;.\nThe length of the given chain is 2, hence the answer is 2.\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>5\na \nbc \nad \nadc \nbcd\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"expected-answer\">Expected Answer :</h5>\n\n<pre><code>3\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"output-on-console\">Output on console :</h5>\n\n<pre><code>3\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation For Sample Input 2 :</h5>\n\n<pre><code>In this testcase, the longest possible string chain is \u201ca\u201d -&gt; \u201cad\u201d -&gt; \u201cadc\u201d.\nThe length of the given chain is 3, hence the answer is 3.\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"expected-time-complexity\">Expected Time Complexity :</h5>\n\n<pre><code>Try to solve this in O(n*n*l), where &#39;n&#39; is the size of array &#39;arr&#39; and &#39;l&#39; is the maximum length of a string in &#39;arr&#39;. \n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 \u2264 n \u2264 300    \n1 \u2264 arr[i].length \u2264 16\n\nTime limit: 1 sec\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 36,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of strings `arr` where each string consists of lowercase English letters, find the length of the longest possible string chain. A string chain is a sequence of strings formed using elements of `arr` where each string in the sequence can be formed by inserting a lowercase English letter into the previous string (except for the first string).",
                "constraints": [
                    "1 \u2264 n \u2264 300 (where n is the size of array `arr`)",
                    "1 \u2264 arr[i].length \u2264 16",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "3\nm\nnm\nmmm",
                        "output": "2",
                        "explanation": "The longest possible string chain is \"m\" -> \"nm\". The length of this chain is 2."
                    },
                    {
                        "input": "5\na\nbc\nad\nadc\nbcd",
                        "output": "3",
                        "explanation": "The longest possible string chain is \"a\" -> \"ad\" -> \"adc\". The length of this chain is 3."
                    },
                    {
                        "input": "4\nx\nxx\ny\nxyx",
                        "output": "3",
                        "explanation": "The longest possible string chain is \u201cx\u201d -> \u201cxx\u201d -> \u201cxyx\u201d. The length of the given chain is 3."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Explore all the possibilities for each word.</p>",
            "<p>While exploring all cases there will be many overlapping subproblems.</p>",
            "<p>Use hashMap to check if the predecessor exist.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}