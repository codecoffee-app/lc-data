{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 7575,
            "title": "Longest Sub-string with at most K Distinct Characters",
            "titleSlug": "longest-sub-string-with-at-most-k-distinct-characters_699944",
            "content": "<h4 id=\"you-are-given-string-s-of-length-n-and-an-integer-k-your-task-is-to-find-the-length-of-the-longest-substring-that-contains-at-most-k-distinct-characters\">You are given string S of length N, and an integer K. Your task is to find the length of the longest substring that contains at most K distinct characters.</h4>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains an Integer &#39;T&#39; which denotes the number of test cases/queries to be run. \nThen the test cases follow. \n\nThe first line of input for each test case/query contains an integer K.\n\nThe second line of input for each test case/query contains a string S.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print the length of the longest substring that contains at most K distinct characters.\n\nOutput for every test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= K &lt;= 26\n1 &lt;= N &lt;= 10^4\n\nTime Limit: 1sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n2\nabcba\n1\nabccc\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>3\n3\n</code></pre>\n\n<h5 id=\"explanation-of-the-sample-input1\">Explanation of the Sample Input1:</h5>\n\n<pre><code>Test Case 1:\nK = 2 in the first test case so we can choose substring \u2018bcb\u2019 having 2 distinct characters which are less than equal to K=2. \nWe cannot get any other substring of length 4 or greater having distinct characters less than equal to 2.\nTest Case 2:\nK = 1 in the second test case so we can choose substring \u2018ccc\u2019 having only 1 distinct character which is less than equal to K=1. \nWe cannot get any other substring of length 4 or greater having distinct characters less than equal to 1.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 23,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string `S` of length `N` and an integer `K`, find the length of the longest substring of `S` that contains at most `K` distinct characters.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= K <= 26",
                    "1 <= N <= 10^4",
                    "Time Limit: 1sec"
                ],
                "testcases": [
                    {
                        "input": "2\n2\nabcba\n1\nabccc",
                        "output": "3\n3",
                        "explanation": "Test Case 1: K = 2. The longest substring with at most 2 distinct characters is 'bcb', with a length of 3. Other substrings like 'abc' have length 3 as well, but no substring of length 4 or greater satisfies the condition.\nTest Case 2: K = 1. The longest substring with at most 1 distinct character is 'ccc', with a length of 3. No other substring of length 4 or greater meets the requirement."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to check every substring.</p>",
            "<p>While creating the substring i is fixed and j increases that means our substring increases by 1 character every time. So think of a way to store the data to reduce extra O(N) time complexity.&nbsp;</p>",
            "<p>Try using the binary search on the answer that is the length of the substring.</p>",
            "<p>Try using the sliding window technique.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}