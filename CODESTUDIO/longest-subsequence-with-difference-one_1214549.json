{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10318,
            "title": "Longest Subsequence With Difference One",
            "titleSlug": "longest-subsequence-with-difference-one_1214549",
            "content": "<h4 id=\"you-are-given-an-array-nums-of-size-n-your-task-is-to-find-the-length-of-the-longest-subsequence-of-array-nums-such-that-the-absolute-difference-between-every-adjacent-element-in-the-subsequence-is-one\">You are given an array \u201cnums\u201d of size N. Your task is to find the length of the longest subsequence of array \u201cnums\u201d such that the absolute difference between every adjacent element in the subsequence is one.</h4>\n\n<h5 id=\"for-example\">For Example:</h5>\n\n<pre><code>If \u201cnums\u201d = {2, 1, 3}.\n\nThe valid non-empty subsequences of the array are {2}, {1}, {3}, {2, 1}, {1, 3}, {2, 3} and {2, 1, 3}. So, the longest subsequence satisfying the given conditions are {2, 1} and {2, 3}. The length of the longest subsequence is 2. So, the answer is 2.\n</code></pre>\n\n<h4 id=\"the-subsequence-of-an-array-is-a-sequence-of-numbers-that-can-be-formed-by-deleting-some-or-no-elements-without-changing-the-order-of-the-remaining-elements-for-example-if-the-given-array-nums-1-2-5-4-8-then-1-2-5-4-8-1-5-8-2-are-some-of-the-valid-subsequences-whereas-the-sequence-4-2-is-not-a-valid-subsequence-as-the-order-of-the-elements-differ-from-the-original-array\">The subsequence of an array is a sequence of numbers that can be formed by deleting some or no elements without changing the order of the remaining elements. For example, if the given array \u201cnums\u201d = {1, 2, 5, 4, 8}, then {1, 2, 5, 4, 8}, {1, 5, 8}, {2} are some of the valid subsequences whereas the sequence {4, 2} is not a valid subsequence as the order of the elements differ from the original array.</h4>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>Any subsequence of length = 1 is also a valid subsequence.\n</code></pre>\n\n<h5 id=\"input-format\">Input format:</h5>\n\n<pre><code>The first line contains an integer \u2018T&#39;, which denotes the number of test cases or queries to be run. Then, the T test cases follow.\n\nThe first line of each test case contains a single integer N, denoting the size of the array \u201cnums\u201d.\nThe second line of each test case contains N space-separated integers denoting the elements of the array \u201cnums\u201d.\n</code></pre>\n\n<h5 id=\"output-format\">Output format:</h5>\n\n<pre><code>For each test case, print the length of the longest subsequence of array \u201cnums\u201d such that the difference between adjacent elements is one.\n\nOutput for each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= N &lt;= 5000\n-10^9 &lt;= nums[i] &lt;= 10^9\n\nTime limit: 1 second\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n5\n4 2 1 5 6\n6\n-2 2 -1 1 0 -1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>3\n4\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1:</h5>\n\n<pre><code>For the first test case, the longest subsequence satisfying the condition is {4, 5, 6}.\n\nFor the second test case, the longest subsequence satisfying the condition is {-2, -1, 0, -1}. There is another possible subsequence of the same length, i.e., {2, 1, 0, -1}. The length of both the subsequences is 4.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n4\n5 6 5 6\n1\n8\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>4\n1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 2,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array `nums` of size N, find the length of the longest subsequence such that the absolute difference between every adjacent element in the subsequence is 1.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= N <= 5000",
                    "-10^9 <= nums[i] <= 10^9",
                    "Time limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "5\n4 2 1 5 6",
                        "output": "3",
                        "explanation": "The longest subsequence satisfying the condition is {4, 5, 6}, which has length 3."
                    },
                    {
                        "input": "6\n-2 2 -1 1 0 -1",
                        "output": "4",
                        "explanation": "The longest subsequence satisfying the condition is {-2, -1, 0, -1} or {2, 1, 0, -1}, both having length 4."
                    },
                    {
                        "input": "4\n5 6 5 6",
                        "output": "4",
                        "explanation": null
                    },
                    {
                        "input": "1\n8",
                        "output": "1",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Think of a <a href=\"https://en.wikipedia.org/wiki/Dynamic_programming\">Dynamic Programming</a> approach similar to <a href=\"https://www.codingninjas.com/codestudio/problems/longest-increasing-subsequence_630459\">LIS</a>.</p>",
            "<p>Think of an approach to store the numbers in a HashMap.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}