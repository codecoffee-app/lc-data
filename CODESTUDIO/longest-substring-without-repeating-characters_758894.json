{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 7623,
            "title": "Longest Substring Without Repeating Characters",
            "titleSlug": "longest-substring-without-repeating-characters_758894",
            "content": "<h4 id=\"given-a-string-s-of-length-l-return-the-length-of-the-longest-substring-without-repeating-characters\">Given a string &#39;S&#39; of length &#39;L&#39;, return the length of the longest substring without repeating characters.</h4>\n\n<h4 id=\"example\">Example:</h4>\n\n<pre><code>Suppose given input is &quot;abacb&quot;, then the length of the longest substring without repeating characters will be 3 (&quot;acb&quot;).\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>Each input contains a single line which contains the string &#39;S&#39;, Where &#39;S&#39; denotes the input string containing english letters ( both UpperCase and LowerCase), digits, symbols, and spaces.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>Print a single integer denoting the length of the longest substring without repeating characters.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>0 &lt;= L &lt;= 10^5     \n\nTime limit: 1 sec\n</code></pre>\n\n<h5 id=\"follow-up\">Follow Up:</h5>\n\n<pre><code>Can you solve this problem in O(L) time and space complexity?\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>xyxyz\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>3  \n</code></pre>\n\n<h5 id=\"explanation-for-sample-output-1\">Explanation for Sample Output 1:</h5>\n\n<pre><code>The substrings without repeating characters are &quot;xy&quot;, &quot;yx&quot;, &quot;xyz&quot;, &quot;yz&quot;, &quot;z&quot;.\nThe longest substring out of these substrings is \u201cxyz\u201d of length 3.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>xxx\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>1\n</code></pre>\n\n<h5 id=\"explanation-for-sample-output-2\">Explanation for Sample Output 2:</h5>\n\n<pre><code>The substrings without repeating characters is only &quot;x&quot; with length 1.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 62,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string 'S' of length 'L', determine the length of the longest substring without repeating characters.",
                "constraints": [
                    "0 <= L <= 10^5",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "xyxyz",
                        "output": "3",
                        "explanation": "The longest substring without repeating characters is \"xyz\", which has a length of 3."
                    },
                    {
                        "input": "xxx",
                        "output": "1",
                        "explanation": "The longest substring without repeating characters is \"x\", which has a length of 1."
                    },
                    {
                        "input": "abacb",
                        "output": "3",
                        "explanation": "The longest substring without repeating characters is \"acb\", which has a length of 3."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Check for all possible substrings and update the longest length accordingly.</p>",
            "<p>Check for all possible substrings use a data structure to store the unique characters.</p>",
            "<p>Use binary search to find the length of the longest substring.</p>",
            "<p>Use the sliding window technique and maintain all unique characters in the current window.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}