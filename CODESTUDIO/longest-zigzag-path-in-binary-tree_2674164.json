{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 15672,
            "title": "Longest ZigZag Path In Binary Tree",
            "titleSlug": "longest-zigzag-path-in-binary-tree_2674164",
            "content": "<h4 id=\"you-have-been-practicing-on-the-topic-binary-tree-for-a-few-days-your-friend-challenged-you-by-giving-you-a-binary-tree-and-asked-you-to-find-the-longest-zigzag-path-in-the-binary-tree-zigzag-path-of-the-binary-tree-is-defined-as-below\">You have been practicing on the topic binary tree for a few days. Your friend challenged you by giving you a binary tree and asked you to find the longest ZigZag path in the binary tree. ZigZag path of the binary tree is defined as below:</h4>\n\n<pre><code>1. Choose any node in the binary tree and a direction to move further.\n2. If the current direction is left, move to the right child of the current node, otherwise move to the left node.\n3. Change the direction from right to left or from left to right.\n4. Repeat the above steps until you are unable to move.\nThe longest path is defined as the number of nodes visited - 1.\n</code></pre>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>1. Two nodes may have the same value associated with it.\n2. The root node will be fixed and will be provided in the function.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of the input contains a single integer &#39;T&#39;, representing the number of test cases.\n\nThe first line of each test case contains an integer &#39;N&#39;, which denotes the number of nodes in the tree.\n\nThe second line of each test case will contain the values of the nodes of the tree in the level order form ( -1 for &#39;NULL&#39; node). Refer to the example for further clarification.\n</code></pre>\n\n<h5 id=\"example\">Example :</h5>\n\n<pre><code>Consider the binary tree\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/tree-12333.PNG\" alt=\"\"></p>\n\n<pre><code>The input of the tree depicted in the image above will be like : \n\n1\n2 3\n4 -1 5 6\n-1 7 -1 -1 -1 -1\n-1 -1\n\nExplanation :\nLevel 1 :\nThe root node of the tree is 1\n\nLevel 2 :\nLeft child of 1 = 2\nRight child of 1 = 3\n\nLevel 3 :\nLeft child of 2 = 4\nRight child of 2 = null (-1)\nLeft child of 3 = 5\nRight child of 3 = 6\n\nLevel 4 :\nLeft child of 4 = null (-1)\nRight child of 4 = 7\nLeft child of 5 = null (-1)\nRight child of 5 = null (-1)\nLeft child of 6 = null (-1)\nRight child of 6 = null (-1)\n\nLevel 5 :\nLeft child of 7 = null (-1)\nRight child of 7 = null (-1)\n\nThe first not-null node (of the previous level) is treated as the parent of the first two nodes of the current level. The second not-null node (of the previous level) is treated as the parent node for the next two nodes of the current level and so on.\n\nThe input ends when all nodes at the last level are null (-1).\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print the longest ZigZag path in the binary tree.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 10^5\n\nIt is guaranteed that the sum of \u2018N\u2019 over all test cases doesn\u2019t exceed 10^5.\n\nTime Limit : 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n5\n1 2 3 4 5 -1 -1 -1 -1 -1 -1\n3\n2 3 1 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>2\n1\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1 :</h5>\n\n<pre><code>For the first test case, the tree will be :\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/tree1-12334.PNG\" alt=\"\"></p>\n\n<pre><code>The longest ZigZag path will be: 1 -&gt; 2 -&gt; 5\n\nFor the second test case, the tree will be :\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/tree2-12335.PNG\" alt=\"\"></p>\n\n<pre><code>The longest ZigZag path will be: 2 -&gt; 1 or 2 -&gt; 3\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n4\n1 2 -1 -1 3 5 -1 -1 -1 -1\n3\n1 -1 3 -1 5 -1 -1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>3\n1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -8,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a binary tree, find the length of the longest ZigZag path. A ZigZag path is defined as follows:\n\n1.  Start at any node and choose a direction (left or right).\n2.  Move to the right child if the current direction is left, or to the left child if the current direction is right.\n3.  Alternate the direction (left to right or right to left).\n4.  Repeat steps 2 and 3 until you cannot move further.\n\nThe length of the path is the number of nodes visited minus 1.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10^5",
                    "The sum of \u2018N\u2019 over all test cases doesn\u2019t exceed 10^5.",
                    "Time Limit : 1 sec"
                ],
                "testcases": [
                    {
                        "input": "5\n1 2 3 4 5 -1 -1 -1 -1 -1 -1",
                        "output": "2",
                        "explanation": "The tree is:\n1\n/ \\\n2   3\n/ \\\n4   5\nThe longest ZigZag path is 1 -> 2 -> 5, which has a length of 2."
                    },
                    {
                        "input": "3\n2 3 1 -1 -1 -1 -1",
                        "output": "1",
                        "explanation": "The tree is:\n2\n/ \\\n3   1\nThe longest ZigZag path can be 2 -> 1 or 2 -> 3, each with a length of 1."
                    },
                    {
                        "input": "4\n1 2 -1 -1 3 5 -1 -1 -1 -1",
                        "output": "3",
                        "explanation": "The tree is:\n1\n/\n2\n\\\n3\n/\n5\nThe longest ZigZag path is 1 -> 2 -> 3 -> 5, which has a length of 3."
                    },
                    {
                        "input": "3\n1 -1 3 -1 5 -1 -1",
                        "output": "1",
                        "explanation": "The tree is:\n1\n\\\n3\n\\\n5\nThe longest ZigZag path is 3 -> 5, which has length 1 (or 1->3 also length 1)."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Think of storing the previous direction of each node and finding the maximum path iteratively.&nbsp;</p>",
            "<p>Think of storing the previous direction of each node and finding the maximum path recursively.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Depth-first Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Stacks & Queues",
                "slug": "stacks-&-queues"
            },
            {
                "name": "Binary Trees",
                "slug": "binary-trees"
            },
            {
                "name": "Breadth-first Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}