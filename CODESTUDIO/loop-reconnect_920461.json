{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8874,
            "title": "Loop Reconnect",
            "titleSlug": "loop-reconnect_920461",
            "content": "<h4 id=\"given-a-linked-list-with-a-loop-and-all-unique-elements-if-the-loop-starts-at-node-x-then-break-the-loop-from-the-last-node-and-join-it-to-a-node-just-greater-than-x-if-no-such-node-exists-then-connect-it-to-null\">Given a linked list with a loop and all unique elements. If the loop starts at node X then break the loop from the last node and join it to a node just greater than X. If no such node exists then connect it to null.</h4>\n\n<h4 id=\"for-example\">For example:</h4>\n\n<pre><code>Let the linked list be 1 -&gt; 5 -&gt; 2 -&gt; 4 -&gt; 3 -&gt; 5 and then the last node is connected to node with value 4, which makes a loop. In this linked list, the loop starts from the node with value = 3 and ends at the node with value = 4. \nYou are supposed to break the loop ending at 4 and connect it to a node value just greater than 4, which is 5 in this case. So, the final answer is 1 -&gt; 5 -&gt; 2 -&gt; 4 -&gt; 3 and then the last node is connected to node with value 5.\n</code></pre>\n\n<h5 id=\"input-format\">Input format :</h5>\n\n<pre><code>The first line of input contains an integer &#39;T&#39; representing the number of test cases or queries to be processed. Then the test case follows.\n\nThe first line of each test case contains the elements of the singly linked list separated by a single space and terminated by -1. Hence, -1 would never be a list element.\n\nThe second line of each test case contains a single integer X, this will be the position of the node to which tail will be connected (to form a loop). &#39;X&#39; will not take 1 as its value.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case, return the head of the modified linked list.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You are not required to print the expected output; it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 10^5\n1 &lt;= K &lt;= N\n\nTime Limit :1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n1 5 2 4 3 -1\n4\n1 2 3 4 5 6 -1\n3\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>1 5 2 4 3 5\n1 2 3 4 5 6 4\n</code></pre>\n\n<h5 id=\"explanation-for-sample-output-1\">Explanation for Sample Output 1:</h5>\n\n<pre><code>In the first test case,  there is a loop from \u20183\u2019 to \u20184\u2019. We break this loop and connect it to the node with a value just greater than \u20184\u2019. So we connect the nodes with values \u20183\u2019 and \u20185\u2019. So the modified linked list becomes (1-&gt;5-&gt;2-&gt;4-&gt;3-&gt;5).\n\nIn the second test case,  there is a loop from \u20186\u2019 to \u20183\u2019. We break this loop and connect it to the node with a value just greater than \u20183\u2019. So we connect the nodes with values \u20184\u2019 and \u20186\u2019. So the modified, linked list becomes (1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;6-&gt;4).\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n9 7 1 2 8 6 -1\n2\n3 2 1 -1\n2\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>9 7 1 2 8 6 8\n3 2 1 3\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 16,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a singly linked list containing unique elements, which has a loop, and knowing the loop starts at node X, modify the list as follows:\n\n1.  Break the loop at the last node involved in the loop.\n2.  Connect the last node to a node whose value is the smallest value that is larger than node X's value. If no such node exists, connect the last node to `NULL`.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10^5",
                    "1 <= K <= N"
                ],
                "testcases": [
                    {
                        "input": "n = 5, nums = [1, 5, 2, 4, 3], loop_start_val = 3",
                        "output": "1 -> 5 -> 2 -> 4 -> 3 -> 5",
                        "explanation": "The loop is from 3 to 4. We break the link between 3 and 4, and connect 3 to the node with value 5 (the smallest value greater than 4)."
                    },
                    {
                        "input": "n = 6, nums = [1, 2, 3, 4, 5, 6], loop_start_val = 3",
                        "output": "1 -> 2 -> 3 -> 4 -> 5 -> 6",
                        "explanation": "The loop is from 6 to 3. We break the link between 6 and 3, and connect 6 to the node with value 4 (the smallest value greater than 3)."
                    },
                    {
                        "input": "n = 6, nums = [9, 7, 1, 2, 8, 6], loop_start_val = 2",
                        "output": "9 -> 7 -> 1 -> 2 -> 8 -> 6 -> 8",
                        "explanation": "The loop is from 6 to 2. We break the link between 6 and 2 and connect 6 to node with value 8 because 8 is smallest among numbers that are greater than 2, thus modified linked list becomes (9->7->1->2->8->6->8)."
                    },
                    {
                        "input": "n = 3, nums = [3, 2, 1], loop_start_val = 2",
                        "output": "3 -> 2 -> 1 -> 3",
                        "explanation": "The loop is from 1 to 2. We break the link between 1 and 2, and connect 1 to the node with value 3 (the smallest value greater than 2)."
                    },
                    {
                        "input": "n = 4, nums = [4,5,6,7], loop_start_val = 7",
                        "output": "4 -> 5 -> 6 -> 7",
                        "explanation": "Suppose the loop is 7 to 7. There is no node with value greater than 7, so we set 7->next to NULL"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you find the starting node of the loop and find the element just greater than it?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}