{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 15491,
            "title": "Lottery Ticket",
            "titleSlug": "lottery-ticket_2543619",
            "content": "<h4 id=\"you-are-given-a-list-of-lottery-tickets-tickets-where-each-ticket-is-a-string-of-lowercase-characters-you-are-also-given-a-match-string-matchstr-a-ticket-will-be-considered-a-winning-ticket-if-a-substring-of-matchstr-is-equal-to-the-ticket-by-skipping-at-most-k-characters-of-the-substring\">You are given a list of lottery tickets \u2018tickets\u2019 where each ticket is a string of lowercase characters. You are also given a match string, \u2018matchStr\u2019. A ticket will be considered a winning ticket if a substring of \u2018matchStr\u2019 is equal to the ticket by skipping at most &#39;K&#39; characters of the substring.</h4>\n\n<h4 id=\"to-make-more-winning-tickets-you-can-perform-the-following-operations\">To make more winning tickets, you can perform the following operations-:</h4>\n\n<pre><code>1- Change &#39;a&#39; to &#39;o&#39; or vice versa\n2- Change &#39;t&#39; to &#39;l&#39; or vice versa\n</code></pre>\n\n<h4 id=\"your-task-is-to-find-the-number-of-winning-tickets\">Your task is to find the number of winning tickets.</h4>\n\n<h5 id=\"for-example\">For example:</h5>\n\n<pre><code>You are given \u2018tickets\u2019 = [\u2018abcd\u2019, \u2018acmfgtld\u2019], \u2018K\u2019 = 2, and &#39;matchStr&#39; = \u2018aabacd\u2019\nFor the ticket \u2018abcd\u2019, is equal to the substring \u2018abacd\u2019 by skipping the third character of \u2018abacd\u2019. Hence the answer is 1.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains a single integer \u2018T\u2019 representing the number of test cases.\n\nThe first line of input contains two space-separated integers, \u2018N\u2019 and \u2018K\u2019, representing the number of tickets and the given integer.\n\nThe second line of each test case contains a single string, representing the match string \u2018matchStr\u2019.\n\nThe next line contains \u2018N\u2019 space-separated strings representing the ticket strings.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print a single integer representing the number of tickets that can be the winning ticket.\n\nPrint a separate line for each test case.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N, K &lt;= 10^3\n1 &lt;= |tickets[i]| , |matchStr| &lt;= 500\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n2 2\naabacd\nabcd acmfgtld\n3 1\nakgfhdlskjes\nagfh aghd kje\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>1\n2\n</code></pre>\n\n<h5 id=\"explanation\">Explanation:</h5>\n\n<pre><code>For the first test case, \u2018tickets\u2019 = [\u2018abcd\u2019, \u2018acmfgtld\u2019], \u2018K\u2019 = 2, and &#39;matchStr&#39; = \u2018aabacd\u2019\nFor the ticket \u2018abcd\u2019, is equal to the substring \u2018abacd\u2019 by skipping the third character of \u2018abacd\u2019. \nHence the answer is 1.\n\nFor the second test case, \u2018tickets\u2019 = [\u2018agfh\u2019, \u2018aghd\u2019, \u2018kje\u2019 ], \u2018K\u2019 = 1, and &#39;matchStr&#39; = \u2018akgfhdlskjes\u2019\nFor the ticket \u2018agfh\u2019, is equal to the substring \u2018akgfh\u2019 by skipping the second character of \u2018akgfh\u2019. \nFor the ticket \u2018kje\u2019, is equal to the substring \u2018kje\u2019 without skipping any character of the substring.\nHence the answer is 2.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n6 2\nstjqiefjodjuxyge\ntjqe juye xyg ojux qejo ji \n19 3\nhawesqvddegyly\nl s vd wes h qvd vde aw egl svd vde y de s a d w yly h \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>6\n19\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 5,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a list of lottery tickets (strings of lowercase characters) and a match string, determine the number of winning tickets. A ticket is considered a winning ticket if a substring of the match string is equal to the ticket by skipping at most 'K' characters of the substring. To increase the number of winning tickets, the following operations are allowed:\n\n1. Change 'a' to 'o' or vice versa.\n2. Change 't' to 'l' or vice versa.\n\nCalculate the total number of winning tickets after applying these operations.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N, K <= 10^3",
                    "1 <= |tickets[i]| , |matchStr| <= 500"
                ],
                "testcases": [
                    {
                        "input": "matchStr = aabacd, tickets = [abcd, acmfgtld], k = 2",
                        "output": "1",
                        "explanation": "For the ticket \u2018abcd\u2019, is equal to the substring \u2018abacd\u2019 by skipping the third character of \u2018abacd\u2019. Hence the answer is 1."
                    },
                    {
                        "input": "matchStr = akgfhdlskjes, tickets = [agfh, aghd, kje], k = 1",
                        "output": "2",
                        "explanation": "For the ticket \u2018agfh\u2019, is equal to the substring \u2018akgfh\u2019 by skipping the second character of \u2018akgfh\u2019. For the ticket \u2018kje\u2019, is equal to the substring \u2018kje\u2019 without skipping any character of the substring. Hence the answer is 2."
                    },
                    {
                        "input": "matchStr = stjqiefjodjuxyge, tickets = [tjqe, juye, xyg, ojux, qejo, ji], k = 2",
                        "output": "6",
                        "explanation": "All tickets can be found as substrings of 'matchStr' with at most 2 skips."
                    },
                    {
                        "input": "matchStr = hawesqvddegyly, tickets = [l, s, vd, wes, h, qvd, vde, aw, egl, svd, vde, y, de, s, a, d, w, yly, h], k = 3",
                        "output": "19",
                        "explanation": "Each ticket can be found in the match string with at most 3 skips."
                    },
                    {
                        "input": "matchStr = aaaaa, tickets = [aaaaa, aaaa, aaa, aa, a], k = 0",
                        "output": "5",
                        "explanation": "All tickets exist as substrings with no skips allowed."
                    },
                    {
                        "input": "matchStr = abcdefg, tickets = [a, b, c, d, e, f, g], k = 0",
                        "output": "7",
                        "explanation": "Each single character exists as a substring with no skips."
                    },
                    {
                        "input": "matchStr = abcdefg, tickets = [abcdefg, abcdef, bcdefg, abcde, cdefg, abcd, defg, abc, efg, ab, fg, a, g], k = 0",
                        "output": "14",
                        "explanation": "All possible substrings exist within the larger match string."
                    },
                    {
                        "input": "matchStr = atat, tickets = [olol,ltlt,atal,otto], k = 2",
                        "output": "4",
                        "explanation": "With 'a' and 'o', and 't' and 'l' switches, all tickets are winning."
                    },
                    {
                        "input": "matchStr = abcdef, tickets = [ace, bdf, adf], k = 1",
                        "output": "0",
                        "explanation": "None of the tickets can be found by skipping only one character and without swapping characters."
                    },
                    {
                        "input": "matchStr = aaaaaaaaaa, tickets = [aoaoaoaoao, aaaaaaaaaa, oooooooooo], k = 5",
                        "output": "3",
                        "explanation": "All are winning tickets either by skipping or substitution of 'a' to 'o' and vice-versa"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try the brute force approach by traversing through each substring.</p>",
            "<p>Try finding the substring for each ticket.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}