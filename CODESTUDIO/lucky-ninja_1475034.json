{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12790,
            "title": "LUCKY NINJA",
            "titleSlug": "lucky-ninja_1475034",
            "content": "<h4 id=\"one-day-ninja-participates-in-the-chit-fund-lottery-contest-and-wins-a-chance-to-collect-some-exciting-prizes-there-is-some-value-attached-to-each-of-the-n-items-and-is-present-in-the-form-of-an-array-arr-now-ninja-has-been-given-some-value-k-and-he-can-choose-the-items-from-the-arr-in-a-continuous-manner-such-that-the-sum-of-those-items-is-at-most-k\">One day Ninja participates in the \u2018chit fund\u2019 lottery contest and wins a chance to collect some exciting prizes. There is some value attached to each of the &#39;N&#39; items and is present in the form of an array &#39;ARR&#39;. Now Ninja has been given some value &#39;K&#39; and he can choose the items from the &#39;ARR&#39; in a continuous manner such that the sum of those items is at most &#39;K&#39;.</h4>\n\n<h4 id=\"ninja-wants-to-know-how-many-possible-combinations-of-continuous-items-he-can-pick\">Ninja wants to know how many possible combinations of continuous items he can pick.</h4>\n\n<h4 id=\"so-your-task-is-to-help-ninja-in-counting-the-total-number-of-combinations-of-continuous-items-he-can-choose-from-arr-such-that-the-sum-of-values-of-items-in-these-combinations-is-at-most-k\">So your task is to help Ninja in counting the total number of combinations of continuous items he can choose from &#39;ARR&#39; such that the sum of values of items in these combinations is at most &#39;K&#39;.</h4>\n\n<h5 id=\"for-example\">For Example :</h5>\n\n<pre><code>Suppose the given &#39;ARR&#39; is [ 2, -1, 3, 5, 2 ], and the value &#39;K&#39; is given to ninja is \u20187\u2019.\nSo we return \u201810\u2019 as the answer. i.e. \u2018ARR\u2019[0], \u2018ARR\u2019[1], \u2018ARR\u2019[2], \u2018ARR\u2019[3], \u2018ARR\u2019[4], \u2018ARR\u2019[0...1], \u2018ARR\u2019[0...2], \u2018ARR\u2019[1...2], \u2018ARR\u2019[1...3], \u2018ARR\u2019[3...4].\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You are not required to print anything explicitly. It has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of input contains a \u2018T\u2019 number of test cases. Then \u2018T\u2019 line follows:\n\nThe first line of each test case contains two integers input  \u2018N\u2019 and \u2018K\u2019  i.e size of the array &#39;ARR&#39; and the given value of the sum.\n\nThe second line of each test case contains &#39;N&#39; single-spaced integers denoting the elements of &#39;ARR&#39;.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, return the total number of possible combinations.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 500\n1 &lt;= N &lt;= 1000\n-10 ^ 3 &lt;= ARR[i], K &lt;=10 ^ 3\n\nWhere \u2018ARR[i]\u2019 represents the value of the &#39;ith&#39; item.\n\nTime Limit: 1 second  \n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n5 -10\n10 2 -2 -20 10\n6 33\n9 4 20 3 10 15\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>7\n15\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1 :</h5>\n\n<pre><code>Test Case 1 :\nFor the first test case, given \u2018ARR\u2019 is [ 10, 2, -2, -20, 10 ] and \u2018K\u2019 is \u2018-10&#39;.  So, we return \u20185\u2019 as we can choose continuous items (subarray) like \u2018ARR\u2019[3], \u2018ARR\u2019[0...3], \u2018ARR\u2019[1...3], \u2018ARR\u2019[2...3], \u2018ARR\u2019[1...4], \u2018ARR\u2019[2...4], \u2018ARR\u2019[3...4] as the sum of values of items in these subarrays is less than or equal to -10.\n\nTest Case 2 :\nFor this test case, given \u2018ARR\u2019 is [ 9, 4, 20, 3, 10, 15 ] and \u2018K\u2019 is \u201833\u2019. So we return \u20182\u2019 i.e. subarray \u2018ARR\u2019[0], \u2018ARR\u2019[1], \u2018ARR\u2019[2], \u2018ARR\u2019[3], \u2018ARR\u2019[4], \u2018ARR\u2019[5], \u2018ARR\u2019[0...1], \u2018ARR\u2019[0...2], \u2018ARR\u2019[1...2], \u2018ARR\u2019[1...3], \u2018ARR\u2019[2...3], \u2018ARR\u2019[2...4], \u2018ARR\u2019[3...4], \u2018ARR\u2019[3...5], \u2018ARR\u2019[4...5].\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n5 6\n10 -4 6 2 -8\n6 11\n9 2 4 2 -6\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>11\n13\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 8,
            "dislikes": "NA",
            "rephrased": {
                "body": "A ninja is participating in a contest where they can pick continuous items from an array. Each item has a value. Given an array of item values 'arr' of size 'n', and a value 'k', determine the total number of continuous subarrays of 'arr' whose sum is at most 'k'.",
                "constraints": [
                    "1 <= n <= 1000",
                    "-10^3 <= arr[i], k <= 10^3",
                    "Time Limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "n = 5, nums=[2, -1, 3, 5, 2], k = 7",
                        "output": "10",
                        "explanation": "The subarrays [2], [-1], [3], [5], [2], [2, -1], [2, -1, 3], [-1, 3], [-1, 3, 5], [5, 2] have sums less than or equal to 7. (Note that [2,-1,3,5] has a sum of 9, which is greater than 7 and therefore is excluded. Similarly for other subarrays.)"
                    },
                    {
                        "input": "n = 5, nums=[10, 2, -2, -20, 10], k = -10",
                        "output": "7",
                        "explanation": "The valid subarrays are [-20], [10, 2, -2, -20], [2, -2, -20], [-2, -20], [2, -2, -20, 10], [-2, -20, 10], [-20, 10]."
                    },
                    {
                        "input": "n = 6, nums=[9, 4, 20, 3, 10, 15], k = 33",
                        "output": "15",
                        "explanation": "All single element subarrays, and many of the two-element subarrays, and a few larger subarrays such as [4, 20, 3] and [20,3,10] are valid."
                    },
                    {
                        "input": "n = 5, nums=[10, -4, 6, 2, -8], k = 6",
                        "output": "11",
                        "explanation": "Valid subarrays include [-4], [6], [2], [-8], [10, -4], [-4, 6], [6, 2], [2, -8], [10, -4, 6], [-4, 6, 2], [6,2,-8]."
                    },
                    {
                        "input": "n = 6, nums=[9, 2, 4, 2, -6, 5], k = 11",
                        "output": "13",
                        "explanation": "Many subarrays will be valid, but for instance [9,2,4,2] has a sum of 17 and won't count."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you find the sum of every subarray?</p>",
            "<p>Can you make use of the multiset for finding subarrays?</p>",
            "<p>Can we use \u2018Fenwick Tree\u2019 to solve the given problem?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Number Theory",
                "slug": "number-theory"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}