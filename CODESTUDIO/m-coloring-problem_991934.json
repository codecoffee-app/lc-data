{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9460,
            "title": "M - Coloring Problem ",
            "titleSlug": "m-coloring-problem_991934",
            "content": "<h4 id=\"you-are-given-an-undirected-graph-with-n-nodes-in-the-form-of-an-adjacency-matrix-you-are-also-given-an-integer-m\">You are given an undirected graph with N nodes in the form of an adjacency matrix. You are also given an integer M.</h4>\n\n<h4 id=\"your-task-is-to-find-if-you-can-color-the-vertices-of-the-graph-using-at-most-m-colors-such-that-no-two-adjacent-vertices-are-of-the-same-color\">Your task is to find if you can color the vertices of the graph using at most M colors such that no two adjacent vertices are of the same color.</h4>\n\n<h4 id=\"for-example\">For example:</h4>\n\n<pre><code>If the given adjacency matrix is:\n[0 1 0]\n[1 0 1]\n[0 1 0] and M = 3.\n\nThe given adjacency matrix tells us that node 1 is connected to node 2 and node 2 is connected to node 3. \n\nSo if we color vertex 1 with \u2018red\u2019, vertex 2 with \u2018blue\u2019, and vertex 3 with \u2018red\u2019, it is possible to color the given graph with two colors which is less than or equal to M.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains a single integer T, representing the number of test cases or queries to be run. Then the T test cases follow.\n\nThe first line of the test case contains two space-separated integers N and M, denoting the number of vertices in the undirected graph and the number of colors respectively.\n\nEach of the next N lines of each test case contains N integers denoting a row of the adjacency matrix of the undirected graph.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, you need to print a single line containing \u201cYes\u201d if we can color the given graph with at most M colors. otherwise, print \u201cNo\u201d.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You are not required to print the expected output, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 \u2264 T \u2264 10\n1 \u2264 N \u2264 20\n1 \u2264 M \u2264 N\n\nTime Limit: 1 sec.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>3\n3 3\n0 1 0\n1 0 1\n0 1 0\n3 1\n0 1 0\n1 0 1\n0 1 0\n2 1\n0 1\n1 0\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>Yes\nNo\nNo\n</code></pre>\n\n<h5 id=\"explanation-of-input-1\">Explanation of Input 1:</h5>\n\n<pre><code>The first test case has already been explained in the example.\n\nThe second test case, the given adjacency matrix tells us that node 1 is connected to node 2 and node 2 is connected to node 3. We can see that at least two colors would be needed to color the graph. So it is not possible to color the graph in this case.\n\nThe third test case, the given adjacency matrix tells us that node 1 is connected to node 2. We can see that at least two colors would be needed to color the graph. So it is not possible to color the graph in this case.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>3\n3 3\n0 0 0\n0 0 1\n0 1 0\n4 2\n0 1 0 0\n1 0 0 0\n0 0 0 1\n0 0 1 0\n4 1\n0 1 0 0\n1 0 0 0\n0 0 0 1\n0 0 1 0\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2</h5>\n\n<pre><code>Yes\nYes\nNo\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": -6,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an undirected graph with N nodes represented by an adjacency matrix, determine if it's possible to color the vertices using at most M colors such that no two adjacent vertices have the same color.",
                "constraints": [
                    "1 \u2264 T \u2264 10",
                    "1 \u2264 N \u2264 20",
                    "1 \u2264 M \u2264 N",
                    "Time Limit: 1 sec."
                ],
                "testcases": [
                    {
                        "input": "3\n3 3\n0 1 0\n1 0 1\n0 1 0\n3 1\n0 1 0\n1 0 1\n0 1 0\n2 1\n0 1\n1 0",
                        "output": "Yes\nNo\nNo",
                        "explanation": "Test case 1: A 3-node graph with M=3. It's possible to color it such that no adjacent nodes have the same color.\nTest case 2: A 3-node graph with M=1.  This is impossible since adjacent nodes require different colors.\nTest case 3: A 2-node graph with M=1.  This is impossible since adjacent nodes require different colors."
                    },
                    {
                        "input": "3\n3 3\n0 0 0\n0 0 1\n0 1 0\n4 2\n0 1 0 0\n1 0 0 0\n0 0 0 1\n0 0 1 0\n4 1\n0 1 0 0\n1 0 0 0\n0 0 0 1\n0 0 1 0",
                        "output": "Yes\nYes\nNo",
                        "explanation": "Test case 1: A 3-node graph with M=3. No nodes are connected to each other so it is possible to color the graph with same colour.\nTest case 2: A 4-node graph with M=2. It's possible to color the graph with 2 colours.\nTest case 3: A 4-node graph with M=1. This is impossible since adjacent nodes require different colors."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Take all different color combinations possible.</p>",
            "<p>Try to optimise the approach1.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}