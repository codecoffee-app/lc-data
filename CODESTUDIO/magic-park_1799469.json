{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 13792,
            "title": "Magic Park",
            "titleSlug": "magic-park_1799469",
            "content": "<h4 id=\"bob-came-to-a-magic-aqua-park-in-this-magic-aqua-park-there-are-n-props-each-prop-is-a-non-horizontal-and-non-vertical-segment-so-when-bob-falls-on-the-segment-he-starts-sliding-on-it-and-when-he-reaches-its-lowest-point-he-continues-falling-vertically-then-he-can-fall-on-another-segment-and-so-on-until-he-reaches-the-water-he-knows-his-initial-x-coordinate-and-he-is-at-a-very-high-altitude-help-bob-to-find-his-final-x-coordinate\">Bob came to a magic aqua park. In this magic aqua park, There are N props. Each prop is a non-horizontal and non-vertical segment. So when Bob falls on the segment, he starts sliding on it, and when he reaches its lowest point, he continues falling vertically. Then he can fall on another segment and so on until he reaches the water. He knows his initial X coordinate, and he is at a very high altitude. Help Bob to find his final X coordinate.</h4>\n\n<h5 id=\"for-example\">For Example:</h5>\n\n<pre><code>Input\n4 2\n0 1 2 2\n2 4 4 5\n\n\nOutput \n0\n\nExplanation:\nHere, Bob will first fall on the second prop, and he will travel till endpoint 2. Then he will fall on the first prop and travel till the endpoint 0. hence the final position will be X = 0. \n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains a single integer &#39;T&#39; denoting the number of tests cases to be run. Then the test cases follow.\n\nThe first line of each test case contains two space-separated integers - initial X coordinate and N - number of segment props. \n\nThe next N lines of each test case describe the prop each by four integers x1, y1, x2, y2 - denoting the coordinates of the leftmost and rightmost point of the prop, respectively.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code> Props do not intersect or touch each other.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print an integer \u2018A\u2019 denoting the final \ncoordinate \nof Bob. \n\nAnswers for each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note</h5>\n\n<pre><code>You are not required to print anything; it has already been taken \ncare of. Just implement the function and return the answer.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 50\n1 &lt;= N &lt;= 100\n0 &lt;= X &lt;= 104\n0 &lt;= X1, Y1, X2, Y2 &lt;= 10000\nx1 &lt; x2\n\nTime Limit: 1 sec.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n100 1\n50 30 100 20\n4 2\n0 1 2 2\n2 4 4 5\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>100\n0\n</code></pre>\n\n<h5 id=\"explanation-for-sample-output-1\">Explanation For Sample Output 1:</h5>\n\n<pre><code>In test case 1:\nBob will start at 100, and after the first fall, he will fall at the point \n100, so his final X coordinate will be 100.\n\nIn test case 2:\nBob will first fall on the second prop, and he will travel till \nendpoint \n2. Then he will fall on the first prop and travel till the endpoint 0. \nhence the final position will be X = 0. \n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n100 1\n100 30 150 20\n15 2\n14 4 16 3\n13 6 19 1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>150\n19\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 6,
            "dislikes": "NA",
            "rephrased": {
                "body": "Bob is at a magical aqua park and wants to find his final x-coordinate after traversing several non-horizontal and non-vertical segments (props). He starts at a very high altitude with a given initial x-coordinate. When Bob falls vertically and hits a segment, he slides down to its lowest point before continuing to fall vertically again. This process continues until he reaches the water. Given the initial x-coordinate and the coordinates of the segments, determine Bob's final x-coordinate.",
                "constraints": [
                    "1 <= T <= 50",
                    "1 <= N <= 100",
                    "0 <= X <= 10000",
                    "0 <= X1, Y1, X2, Y2 <= 10000",
                    "x1 < x2"
                ],
                "testcases": [
                    {
                        "input": "x = 100, n = 1, x1 = [50], x2 = [100], y1 = [30], y2 = [20]",
                        "output": "100",
                        "explanation": "Bob starts at x=100, and falls on segment defined by (50,30) and (100,20).  He slides to x=100, so the final x is 100."
                    },
                    {
                        "input": "x = 4, n = 2, x1 = [0, 2], x2 = [2, 4], y1 = [1, 4], y2 = [2, 5]",
                        "output": "0",
                        "explanation": "Bob starts at x=4 and falls onto the segment (2,4) to (4,5), sliding to x=2. Then he falls on the segment (0,1) to (2,2) sliding to x=0."
                    },
                    {
                        "input": "x = 100, n = 1, x1 = [100], x2 = [150], y1 = [30], y2 = [20]",
                        "output": "150",
                        "explanation": "Bob starts at x=100 and falls on segment defined by (100,30) and (150,20). He slides to x=150, so the final x is 150."
                    },
                    {
                        "input": "x = 15, n = 2, x1 = [14, 13], x2 = [16, 19], y1 = [4, 6], y2 = [3, 1]",
                        "output": "19",
                        "explanation": "Bob starts at x=15 and falls on segment defined by (14,4) and (16,3). He slides to x=16. then bob falls on segment defined by (13,6) and (19,1). he slides to x=19."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to iterate and roll down from one prop to another below it.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Computational Geometry",
                "slug": "computational-geometry"
            },
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}