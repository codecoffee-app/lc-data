{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12799,
            "title": "Magical String",
            "titleSlug": "magical-string_1475043",
            "content": "<h4 id=\"haibara-hates-that-conan-is-always-grasped-in-murder-mysteries-so-this-time-she-gives-conan-a-simple-problem-to-solve-in-which-he-is-given-a-string-s-consisting-of-lowercase-and-uppercase-characters\">Haibara hates that Conan is always grasped in murder mysteries. So this time she gives Conan a simple problem to solve in which he is given a string &#39;S&#39; consisting of lowercase and uppercase characters.</h4>\n\n<h4 id=\"she-tells-him-that-a-magical-string-is-a-string-that-does-not-have-an-adjacent-pair-of-the-same-characters-with-one-character-being-lowercase-and-the-other-being-uppercase-formally-s-is-magical-if-there-exits-no-i-such-that-s-i-is-a-lowercase-character-and-s-i-1-is-the-same-character-but-in-uppercase-or-vice-versa\">She tells him that a &quot;Magical String&quot; is a string that does not have an adjacent pair of the same characters with one character being lowercase and the other being uppercase. Formally, &#39;S&#39; is magical if there exits no &#39;i&#39; such that &#39;S[i]&#39; is a lowercase character and &#39;S[ i + 1]&#39; is the same character but in uppercase or vice-versa.</h4>\n\n<h4 id=\"now-conan-has-to-make-the-string-s-magical-by-removing-the-minimum-number-of-characters-and-return-hibara-the-magical-string-hence-made\">Now, Conan has to make the string &#39;S&#39; magical by removing the minimum number of characters and return Hibara the magical string hence made.</h4>\n\n<h4 id=\"your-task-is-to-help-conan-to-obtain-the-magical-string\">Your task is to help Conan to obtain the magical string.</h4>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>An empty string is also magical.\n</code></pre>\n\n<h4 id=\"input-format\">Input Format :</h4>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 representing the number of test cases.\n\nThe next \u2018T\u2019 lines contain a string \u2018S\u2019 given by Haibara.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print the magical string \u2018S\u2019 by removing the minimum number of characters.\n\nOutput for every test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don\u2019t need to print anything; It has already been taken care of.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 50\n1 &lt;= |S| &lt;= 100\n\nWhere \u2018T\u2019 is the number of test cases and |S| is the length of the string \u2018S.\u2019\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\nsweeEet\ncodeE\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>sweet\ncod\n</code></pre>\n\n<h5 id=\"explanation\">Explanation :</h5>\n\n<pre><code>In the first test case, either you choose i = 3 or i = 4, both will have the same result \u201csweet\u201d.\n\nIn the second test case, there is only one option i.e i = 3. Hence the result will be \u201ccod\u201d\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample input 2 :</h5>\n\n<pre><code>2\nabBAcC\nninja\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample output 2 :</h5>\n\n<pre><code>ninja\n</code></pre>\n\n<h5 id=\"explanation\">Explanation :</h5>\n\n<pre><code>In the first test case, first of all, we will choose &#39;i&#39; =1, which will lead us to \u201caAcC\u201d. Now we have to choose &#39;i&#39; = 0, to remove \u201caA\u201d which will lead us to \u201ccC\u201d. Now we have to remove &#39;i&#39; = 0 again to make the string magical.\n\n\u201cabBAcC\u201d -&gt; \u201caAcC\u201d -&gt; \u201ccC\u201d -&gt; \u201c\u201d\n\nIn the second test, the given string is already magical. So the result is the same as the input i.e \u201cninja\u201d.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": -7,
            "dislikes": "NA",
            "rephrased": {
                "body": "Haibara wants Conan to solve a simple problem. Given a string 'S' consisting of lowercase and uppercase characters, Conan needs to transform it into a \"Magical String\". A string is considered magical if it doesn't contain any adjacent pairs of the same character where one is lowercase and the other is uppercase.  Conan must remove the minimum number of characters from 'S' to achieve this. Your task is to help Conan find the magical string.",
                "constraints": [
                    "1 <= T <= 50",
                    "1 <= |S| <= 100",
                    "Where \u2018T\u2019 is the number of test cases and |S| is the length of the string \u2018S.\u2019",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "sweeEet",
                        "output": "sweet",
                        "explanation": "Removing either 'E' at index 3 or 'e' at index 4 results in the magical string 'sweet'."
                    },
                    {
                        "input": "codeE",
                        "output": "cod",
                        "explanation": "Removing 'E' at index 3 results in the magical string 'cod'."
                    },
                    {
                        "input": "abBAcC",
                        "output": "",
                        "explanation": "The process to achieve a magical string is as follows: abBAcC -> aAcC -> cC -> ''"
                    },
                    {
                        "input": "ninja",
                        "output": "ninja",
                        "explanation": "The input string is already magical."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>The difference between an upper case and a lower case alphabet is 32.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Stacks & Queues",
                "slug": "stacks-&-queues"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}