{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12551,
            "title": "Make Sum Divisible by P",
            "titleSlug": "make-sum-divisible-by-p_1466921",
            "content": "<h4 id=\"you-are-given-an-array-list-of-positive-integers-nums-of-size-n-and-positive-integer-p-you-need-to-remove-the-smallest-subarray-possibly-empty-such-that-the-sum-of-the-remaining-elements-is-divisible-by-p\">You are given an array/list of positive integers \u2018NUMS\u2019 of size &#39;N&#39; and positive integer &#39;P&#39;. You need to remove the smallest subarray (possibly empty) such that the sum of the remaining elements is divisible by \u2018P\u2019.</h4>\n\n<h4 id=\"your-task-is-to-print-the-length-of-the-smallest-subarray-that-you-need-to-remove-or-1-if-its-impossible\">Your task is to print the length of the smallest subarray that you need to remove, or -1 if it&#39;s impossible.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>1. It is not allowed to remove the whole array.\n2. A subarray is defined as a contiguous block of elements in the array.\n</code></pre>\n\n<h5 id=\"example\">Example:</h5>\n\n<pre><code>Suppose given \u2018NUMS\u2019 is [3, 1, 4, 2] and \u2018P\u2019 is 6.\nThe sum of the elements in \u2018NUMS\u2019 is 10, which is not divisible by 6. We can remove the subarray [4], and the sum of the remaining elements is 6, which is divisible by 6.\nSo print \u20181\u2019 as a length of the removed subarray [4].\n</code></pre>\n\n<h5 id=\"input-format\">Input Format</h5>\n\n<pre><code>The first line of input contains a single integer \u2018T\u2019 denoting the number of test cases given. Then next \u2018T\u2019 lines follow:\n\nThe first line of each test case input contains two single space-separated integers, where the first integer &#39;N&#39; represents the number of the elements in the \u2018NUMS\u2019 array/list and the second integer is the value of \u2018P\u2019.\n\nThe next line of each test case contains \u2018N\u2019 space-separated integers denoting the elements of the \u2018NUMS\u2019 array/list.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For every test case, print the length of the smallest subarray (array/list) that you need to remove, or -1 if it&#39;s impossible.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraint\">Constraint :</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= NUMS.length &lt;= 5 * 10^3\n1 &lt;= NUMS[i] &lt;= 10^9\n1 &lt;= P &lt;= 10^9\n\nWhere T denotes the number of test cases, N denotes the number of elements present in the \u2018NUMS\u2019 array with \u2018P\u2019 being the number that is used to divide the numbers in the \u2018NUMS\u2019 array.\n\nTime Limit: 1sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n4 9\n6 3 5 2\n3 3\n1 2 3\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample output 1:</h5>\n\n<pre><code>2\n0\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1:</h5>\n\n<pre><code>Test Case 1:\nOutput 2 is the required size of the subarray which would be removed. We cannot remove a single element to get a sum divisible by 9. The best way is to remove the subarray [5, 2], leaving us with [6, 3] with a sum of 9.\n\nTest Case 2:\nThe output 0 is the required size of the subarray which would be removed. Here the sum of &#39;NUMS&#39; elements is 6 which is already divisible by 3. Thus we do not need to remove anything.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n3 7\n1 2 3\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample output 2:</h5>\n\n<pre><code>-1\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation For Sample Input 2:</h5>\n\n<pre><code>Test Case 1:\nThe sum is not divisible by 7 and thus, the ouput is -1.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 5,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of positive integers `nums` and a positive integer `p`, find the length of the smallest subarray that can be removed from `nums` such that the sum of the remaining elements is divisible by `p`. If it is impossible to achieve this without removing the entire array, return -1. The subarray to be removed must be a contiguous block of elements.",
                "constraints": [
                    "1 <= NUMS.length <= 5 * 10^3",
                    "1 <= NUMS[i] <= 10^9",
                    "1 <= P <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "nums=[6, 3, 5, 2], p=9",
                        "output": "2",
                        "explanation": "The sum of the elements in \u2018NUMS\u2019 is 16. We can remove the subarray [5, 2], and the sum of the remaining elements is 9, which is divisible by 9. So the length of the removed subarray [5, 2] is 2."
                    },
                    {
                        "input": "nums=[1, 2, 3], p=3",
                        "output": "0",
                        "explanation": "The sum of \u2018NUMS\u2019 elements is 6 which is already divisible by 3. Thus we do not need to remove anything."
                    },
                    {
                        "input": "nums=[1, 2, 3], p=7",
                        "output": "-1",
                        "explanation": "The sum of elements is 6, which is not divisible by 7. Removing any subarray will not result in a sum divisible by 7 without removing the entire array."
                    },
                    {
                        "input": "nums=[3, 1, 4, 2], p=6",
                        "output": "1",
                        "explanation": "The sum of the elements in \u2018NUMS\u2019 is 10, which is not divisible by 6. We can remove the subarray [4], and the sum of the remaining elements is 6, which is divisible by 6. So print \u20181\u2019 as a length of the removed subarray [4]."
                    },
                    {
                        "input": "nums=[10, 5, 2, 7, 1, 9], p=6",
                        "output": "4",
                        "explanation": "The sum of array is 34. 34 % 6 = 4.  We need to remove a subarray whose sum has modulo 4 with 6. So we remove [5, 2, 7, 1], their sum is 15 and 15%6 is 3. remaining array sum is 19, which has modulo 1 with 6. so 10+9 is 19 and 19%6 = 1. So we need to find subarray with modulo of 4. remove subarray [2,7,1,9], sum is 19, and modulo is 1. no subarray can be remove such that array has modulo of 0."
                    },
                    {
                        "input": "nums=[1,2,3,4,5], p=15",
                        "output": "0",
                        "explanation": "Sum of array is 15 which is divisible by 15, so the smallest subarray to remove has length 0."
                    },
                    {
                        "input": "nums=[1,2,3,4,5], p=16",
                        "output": "-1",
                        "explanation": "Sum is 15, not divisible by 16. Removing any subarray wont make the sum divisible by 16 without removing the entire array."
                    },
                    {
                        "input": "nums=[1, 1, 1, 1, 1], p=2",
                        "output": "1",
                        "explanation": "The sum is 5. Removing one element leaves sum of 4, which is divisible by 2."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to use the brute-force approach using the fact that the task here is to find the length of the smallest subarray whose sum of elements will leave a remainder equal to (\u2018TOTAL_SUM\u2019 % \u2018P\u2019).</p>",
            "<p>Try to use the prefix sum method to find the length of the smallest sub-array which can be removed from the array \u2018NUMS\u2019.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}