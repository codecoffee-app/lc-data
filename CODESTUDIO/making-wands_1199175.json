{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10250,
            "title": "Making Wands",
            "titleSlug": "making-wands_1199175",
            "content": "<h4 id=\"harry-potter-came-to-olivander-to-buy-magic-wands-for-his-son-albus\">Harry Potter came to Olivander to buy magic wands for his son Albus.</h4>\n\n<h4 id=\"olivander-has-only-two-kinds-of-wands-one-is-of-power-a-and-the-other-is-of-power-b-he-has-an-infinite-supply-of-these-two-kinds-of-wands\">Olivander has only two kinds of wands, one is of power \u2018A\u2019 and the other is of power \u2018B\u2019. He has an infinite supply of these two kinds of wands.</h4>\n\n<h4 id=\"albus-wants-to-see-wands-of-different-powers-so-harry-did-magic-and-did-the-following-things\">Albus wants to see wands of different powers, so Harry did magic and did the following things.</h4>\n\n<pre><code>Harry chooses zero or more wands of power \u2018A\u2019 and zero or more wands of power \u2018B\u2019. He chose exactly \u2018K\u2019 wands. \n\nThen Harry adds the power of all \u2018K\u2019 wands and made a new wand of power equal to the sum of powers of \u2018K\u2019 chosen wands.\n</code></pre>\n\n<h4 id=\"albus-asked-harry-to-show-all-possible-unique-wands-two-wands-are-considered-to-be-unique-if-they-have-different-powers\">Albus asked Harry to show all possible unique wands. Two wands are considered to be unique if they have different powers.</h4>\n\n<h4 id=\"harry-is-getting-late-for-his-meeting-at-the-ministry-of-magic-so-he-called-you-for-help\">Harry is getting late for his meeting at the Ministry of Magic. So, he called you for help.</h4>\n\n<h5 id=\"input-format\">Input Format</h5>\n\n<pre><code>The first line of input contains an integer &#39;T&#39; representing the number of test cases.\n\nThe first line of each test case contains three space-separated integers \u2018A\u2019, \u2018B\u2019, and \u2018K\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print the powers of all unique wands in sorted order separated by a single space.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= K &lt;= 5000\n0 &lt;= A, B  &lt;= 10 ^ 5\n\nTime Limit: 1sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n2 4 2\n1 2 3\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>4 6 8\n3 4 5 6\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1:</h5>\n\n<pre><code>Test Case 1 :  \nGiven A = 2, B = 4 and K = 2.\nWe can form below wands\n4 = 2 + 2\n6 = 4 + 2\n8 = 4 + 4    \n\nTest Case 2 : \nGiven A = 1, B = 2 and K = 3.\nWe can form below wands\n3 = 1 + 1 + 1\n4 = 1 + 2 + 1\n5 = 2 + 2 + 1\n6 = 2 + 2 + 2\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n4 5 2\n2 2 2\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>8 9 10\n4\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 6,
            "dislikes": "NA",
            "rephrased": {
                "body": "Harry Potter needs your help to create unique magic wands for his son Albus. Olivander has an infinite supply of two types of wands with powers 'A' and 'B'. Harry wants to create 'K' wands by choosing zero or more wands of each type. The power of a new wand is the sum of the powers of the 'K' chosen wands. Your task is to determine all the possible unique powers of wands that Harry can create and return them in sorted order.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= K <= 5000",
                    "0 <= A, B  <= 10 ^ 5"
                ],
                "testcases": [
                    {
                        "input": "a = 2, b = 4, k = 2",
                        "output": "4 6 8",
                        "explanation": "Given A = 2, B = 4 and K = 2.\nWe can form below wands:\n4 = 2 + 2\n6 = 4 + 2\n8 = 4 + 4"
                    },
                    {
                        "input": "a = 1, b = 2, k = 3",
                        "output": "3 4 5 6",
                        "explanation": "Given A = 1, B = 2 and K = 3.\nWe can form below wands:\n3 = 1 + 1 + 1\n4 = 1 + 1 + 2\n5 = 1 + 2 + 2\n6 = 2 + 2 + 2"
                    },
                    {
                        "input": "a = 4, b = 5, k = 2",
                        "output": "8 9 10",
                        "explanation": "We can form below wands:\n8 = 4 + 4\n9 = 4 + 5\n10 = 5 + 5"
                    },
                    {
                        "input": "a = 2, b = 2, k = 2",
                        "output": "4",
                        "explanation": "Since both wands have the same power, the only possible combination is 2 + 2 = 4."
                    },
                    {
                        "input": "a = 0, b = 0, k = 5",
                        "output": "0",
                        "explanation": "Since both wand powers are 0, the total power will always be 0."
                    },
                    {
                        "input": "a = 1, b = 100000, k = 1",
                        "output": "1 100000",
                        "explanation": "When k=1, the possible sums are just the individual wand powers."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to find all combinations of wands.</p>",
            "<p>Use dynamic programming to optimize the previous approach.</p>",
            "<p>Use the fact that if we take \u2018i\u2019 wands of power \u2018A\u2019 then we need to take \u2018K - i\u2019 wands of power \u2018B\u2019.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}