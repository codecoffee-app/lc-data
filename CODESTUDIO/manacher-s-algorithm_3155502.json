{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 16457,
            "title": "Manacher\u2019s Algorithm",
            "titleSlug": "manacher-s-algorithm_3155502",
            "content": "<h4 id=\"you-are-given-a-string-str-your-task-is-to-find-the-longest-palindromic-substring-in-str-if-there-is-more-than-one-palindromic-substring-with-the-maximum-length-return-the-one-with-the-smaller-start-index\">You are given a string \u2018STR\u2019. Your task is to find the longest palindromic substring in  \u2018STR\u2019. If there is more than one palindromic substring with the maximum length, return the one with the smaller start index.</h4>\n\n<h4 id=\"a-string-is-said-to-be-palindrome-if-the-reverse-of-the-string-is-the-same-as-the-actual-string-for-example-abba-is-a-palindrome-but-abbc-is-not-a-palindrome\">A string is said to be palindrome if the reverse of the string is the same as the actual string. For example, \u201cabba\u201d is a palindrome, but \u201cabbc\u201d is not a palindrome.</h4>\n\n<h5 id=\"for-example\">For example:</h5>\n\n<pre><code>You are given \u2018STR\u2019 = \u201cabacd\u201d. Then our answer will be \u201caba\u201d. \u201caba\u201d is the longest palindromic substring in \u2018STR\u2019.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains an integer &#39;T&#39; which denotes the number of test cases.\n\nThe first line of each test case contains a string denoting the input string.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print the longest palindromic substring in  \u2018STR\u2019.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10 \n0 &lt;= STR.LENGTH &lt;= 5000\n\u2018STR\u2019 contains only lowercase English letters.\n\nTime limit: 1 sec\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to input or print anything, as it has already been taken care of. Just implement the given function.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\nabacd\nabbcd\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>aba\nbb\n</code></pre>\n\n<h5 id=\"explanation\">Explanation:</h5>\n\n<pre><code>For the first test case, you are given \u2018STR\u2019 = \u201cabacd\u201d. Then our answer will be \u201caba\u201d. \u201caba\u201d is the longest palindromic substring in \u2018STR\u2019.\n\nFor the second test case, you are given \u2018STR\u2019 = \u201cabbcd\u201d. Then our answer will be \u201cbb\u201d. \u201cbb\u201d is the longest palindromic substring in \u2018STR\u2019.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\nabba\nacbbc\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>abba\ncbbc\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": -10,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string `STR`, find the longest palindromic substring within it. If multiple palindromic substrings have the same maximum length, return the one with the smallest starting index. A palindrome is a string that reads the same forwards and backward (e.g., 'abba').",
                "constraints": [
                    "1 <= T <= 10",
                    "0 <= STR.LENGTH <= 5000",
                    "`STR` contains only lowercase English letters.",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "abacd",
                        "output": "aba",
                        "explanation": "The longest palindromic substring in 'abacd' is 'aba'."
                    },
                    {
                        "input": "abbcd",
                        "output": "bb",
                        "explanation": "The longest palindromic substring in 'abbcd' is 'bb'."
                    },
                    {
                        "input": "abba",
                        "output": "abba",
                        "explanation": "The longest palindromic substring in 'abba' is 'abba'."
                    },
                    {
                        "input": "acbbc",
                        "output": "cbbc",
                        "explanation": "The longest palindromic substring in 'acbbc' is 'cbbc'."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>For each center position, try to increase the answer by one until it's possible.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}