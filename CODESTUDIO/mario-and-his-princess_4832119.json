{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 20769,
            "title": " Mario And His Princess",
            "titleSlug": "mario-and-his-princess_4832119",
            "content": "<h4 id=\"mario-is-going-to-meet-his-princess-who-is-in-a-castle-and-there-is-a-path-from-marios-current-location-to-the-castle-on-the-path-to-the-castle-there-are-dragons-who-do-not-burn-instead-they-give-diamond-mario-will-receive-diamond-if-and-only-if-he-didnt-take-any-diamond-from-the-dragon-standing-directly-before-the-current-dragon-in-general-he-can-not-take-diamond-from-two-successive-dragons-if-he-does-so-then-the-dragons-will-burn-him\">Mario is going to meet his princess who is in a castle and there is a path from Mario&#39;s current location to the castle. On the path to the castle, there are dragons who do not burn instead they give DIAMOND. Mario will receive DIAMOND if and only if he didn&#39;t take any diamond from the dragon standing directly before the current dragon. In general he can not take DIAMOND from two successive dragons, if he does so then the dragons will burn him.</h4>\n\n<h4 id=\"you-are-in-charge-of-controlling-mario-there-are-n-dragons-you-are-given-an-array-diamond-of-length-n-where-diamond-i-denotes-the-number-of-diamond-the-i-th-dragon-will-give\">You are in charge of controlling Mario. There are \u2018N\u2019 dragons, you are given an array \u2018DIAMOND\u2019 of length \u2018N\u2019 where DIAMOND[i] denotes the number of DIAMOND the i-th dragon will give.</h4>\n\n<h4 id=\"the-task-is-to-collect-the-maximum-diamond-for-the-princess-you-can-not-take-the-diamonds-from-two-successive-dragons\">The task is to collect the maximum DIAMOND for the princess. You can not take the diamonds from two successive dragons.</h4>\n\n<h4 id=\"all-the-indexing-in-the-explanation-of-examples-and-test-cases-is-1-based-but-in-the-input-array-0-based-indexing-is-used\">All the indexing in the explanation of examples and test cases is 1-based but in the input array, 0-based indexing is used.</h4>\n\n<h4 id=\"example\">Example:</h4>\n\n<pre><code>Input: &#39;N&#39; = 5, &#39;DIAMOND&#39; = [1, 2, 3, 4, 5]\n\nOutput: 9\n\nMario can take the following combinations of DIAMOND without getting burn:-\n1, 3, 5 = 1 + 3 + 5 = 9.\n1, 4 = 1 + 4 = 5\n1, 5 = 1+5 = 6\n2, 4 = 2+4 = 6\n2, 5 = 2+5 = 7\n3, 5 = 3+5 = 8\n\nAlso, he can take all the DIAMOND uniquely as well means he takes DIAMOND from the single dragon but the max DIAMOND he can get is 9.   \n</code></pre>\n\n<h4 id=\"input-format\">Input Format :</h4>\n\n<pre><code>The first line will contain the integer &#39;T&#39;, denoting the number of test cases.\n\nFor each test case, the first line will contain a single integer &#39;N&#39;, the size of the array &#39;DIAMOND&#39; \n\nThe second line of each test case will contain \u2018N\u2019 integers representing the array elements.\n</code></pre>\n\n<h4 id=\"output-format\">Output format :</h4>\n\n<pre><code>For each test case, print the maximum DIAMOND Mario can get.\n</code></pre>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>You don&#39;t need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints :</h4>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 10^5\n1 &lt;= DIAMOND[i] &lt;= 10^5\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n5\n1 2 3 4 5\n5\n1 1 1 1 1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>9\n3\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1 :</h5>\n\n<pre><code>For the first case:\nMario can take the following combinations of DIAMOND without getting burn:-\n1, 3, 5 = 1+3+5 = 9.\n1, 4 = 1+4 = 5\n1, 5 = 1+5 = 6\n2, 4 = 2+4 = 6\n2, 5 = 2+5 = 7\n3, 5 = 3+5 = 8\nAlso, he can take all the DIAMOND uniquely as well means he takes DIAMOND from the single dragon but the max DIAMOND he can get is 9.  \n\nFor the second case:\nAnyhow Mario takes the diamond he can at most 3 DIAMOND by taking DIAMOND from 1, 3, and 5.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n2 \n1 2\n4 \n1 2 3 4\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>2\n6\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 10,
            "dislikes": "NA",
            "rephrased": {
                "body": "Mario is on a quest to reach his princess. Along the way, he encounters N dragons, each offering a certain number of diamonds. Mario can collect diamonds from these dragons, but he cannot take diamonds from two consecutive dragons, as this would anger them. Given an array DIAMOND representing the number of diamonds offered by each dragon, determine the maximum number of diamonds Mario can collect without upsetting the dragons.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10^5",
                    "1 <= DIAMOND[i] <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "n = 5, diamond = [1, 2, 3, 4, 5]",
                        "output": "9",
                        "explanation": "Mario can take diamonds from dragons 1, 3, and 5 (1 + 3 + 5 = 9), which is the maximum possible amount."
                    },
                    {
                        "input": "n = 5, diamond = [1, 1, 1, 1, 1]",
                        "output": "3",
                        "explanation": "Mario can take diamonds from dragons 1, 3, and 5 (1 + 1 + 1 = 3), which is the maximum possible amount."
                    },
                    {
                        "input": "n = 2, diamond = [1, 2]",
                        "output": "2",
                        "explanation": "Mario can either take the diamond from the first dragon (1) or the second dragon (2). The maximum is 2."
                    },
                    {
                        "input": "n = 4, diamond = [1, 2, 3, 4]",
                        "output": "6",
                        "explanation": "Mario can take diamonds from dragons 2 and 4 (2 + 4 = 6). Alternatively, dragons 1 and 3 (1+3=4). Thus maximum diamonds collected is 6"
                    },
                    {
                        "input": "n = 1, diamond = [10]",
                        "output": "10",
                        "explanation": "Mario can take the diamond from the only dragon, resulting in 10 diamonds."
                    },
                    {
                        "input": "n = 6, diamond = [5, 5, 10, 100, 10, 5]",
                        "output": "115",
                        "explanation": "Optimal selection: 5 + 100 + 10 = 115."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you think of some recursive solution?</p>",
            "<p>Memoization+Recursion.</p>",
            "<p><strong>&nbsp;</strong>Dynamic Programming.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}