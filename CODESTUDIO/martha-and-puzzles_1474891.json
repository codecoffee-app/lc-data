{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12757,
            "title": "Martha and puzzles",
            "titleSlug": "martha-and-puzzles_1474891",
            "content": "<h4 id=\"martha-is-a-very-bright-student-she-loves-solving-high-level-puzzles-she-has-a-list-of-n-puzzles-each-puzzle-has-some-difficulty-level-there-is-a-rule-that-one-can-only-solve-a-puzzle-with-difficulty-x-if-she-has-already-solved-all-the-puzzles-with-difficulty-less-than-x-she-can-t-wait-to-get-a-puzzle-having-a-difficulty-level-higher-than-the-current-puzzle\">Martha is a very bright student. She loves solving high-level puzzles. She has a list of \u2018N\u2019 puzzles. Each puzzle has some difficulty level. There is a rule that one can only solve a puzzle with difficulty \u2018X\u2019 if she has already solved all the puzzles with difficulty less than \u2018X\u2019. She can\u2019t wait to get a puzzle having a difficulty level higher than the current puzzle.</h4>\n\n<h4 id=\"your-task-is-to-tell-martha-how-long-she-has-to-wait-to-get-a-puzzle-having-a-higher-difficulty-level-than-the-current-puzzle-if-there-is-no-puzzle-ahead-with-a-higher-difficulty-level-just-print-0\">Your task is to tell Martha how long she has to wait to get a puzzle having a higher difficulty level than the current puzzle. If there is no puzzle ahead with a higher difficulty level, just print &quot;0&quot;.</h4>\n\n<h5 id=\"for-example\">For Example :</h5>\n\n<pre><code>Let \u2018N\u2019 = 5 and \u2018PUZZLE\u2019 = [ 30, 40, 80, 50, 70 ]\n\nAfter solving the first puzzle, the very next puzzle has a difficulty level 40 and 40 &gt; 30. \nThen after 40, the very next puzzle has a difficulty level 80 and 80 &gt; 40.\nBut for 80, there is no puzzle having a difficulty level greater than 80. \nFor 50, the very next puzzle has a difficulty level 70 and 70 &gt; 50. \nAgain for 70, there is no puzzle having a difficulty level greater than 70.\n\nSo the output will be [1, 1, 0, 1, 0].\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 representing the number of test cases.\n\nThe first line of each test case contains an integer \u2018N\u2019 representing the number of puzzles.\n\nThe second line contains \u2018N\u2019 space-separated integers representing the difficulty level of these \u2018N&#39; puzzles.  \n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, return a list of size \u2018N\u2019 representing the wait Martha has to do after each puzzle to get a puzzle of higher difficulty level.\n\nOutput for every test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don\u2019t need to print anything; It has already been taken care of.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= \u2018T\u2019 &lt;= 50\n1 &lt;= \u2018N\u2019 &lt;= 10^4\n30 &lt;= \u2018PUZZLE[i]\u2019 &lt;= 100\nWhere, &#39;PUZZLE[i]&#39; represents the difficulty level of puzzle &#39;i&#39;.\n\nTime limit: 1sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n8\n31 56 30 33 32 90 60 54\n1\n50\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>1 4 1 2 1 0 0 0\n0\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1 :</h5>\n\n<pre><code>The first test case for 31 next increasing difficulty = 56 (index diff = 1).\nFor 56 next increasing difficulty = 90 (index diff = 4).\nSimilarly, check for 30,33, and 32.\nFor, 90,60, and 54 there are no greater elements. \n\nIn the second test case, there is only one puzzle, so the answer will be zero.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n5\n90 80 70 60 50\n5\n50 60 70 80 90 \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>0 0 0 0 0 \n1 1 1 1 0\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -3,
            "dislikes": "NA",
            "rephrased": {
                "body": "Martha enjoys solving puzzles with varying difficulty levels. She can only solve a puzzle of difficulty 'X' if she has already solved all puzzles with difficulty less than 'X'. Given a list of puzzle difficulties, determine how many puzzles she must wait to find one with a higher difficulty level than the current puzzle. If no such puzzle exists, output 0.",
                "constraints": [
                    "1 <= \u2018T\u2019 <= 50",
                    "1 <= \u2018N\u2019 <= 10^4",
                    "30 <= \u2018PUZZLE[i]\u2019 <= 100",
                    "Where, 'PUZZLE[i]' represents the difficulty level of puzzle 'i'.",
                    "Time limit: 1sec"
                ],
                "testcases": [
                    {
                        "input": "2\n8\n31 56 30 33 32 90 60 54\n1\n50",
                        "output": "1 4 1 2 1 0 0 0\n0",
                        "explanation": "Test Case 1: For 31, the next increasing difficulty is 56 (wait 1). For 56, it's 90 (wait 4). For 30, it's 33 (wait 1). For 33, it's 90 (wait 2 is wrong , 32<33<90 so wait is 2, puzzles are 32,90). For 32, it's 90 (wait 1, puzzles are 90). For 90, 60, and 54, there are no greater elements (wait 0). Test Case 2: Only one puzzle, so the wait is 0."
                    },
                    {
                        "input": "2\n5\n90 80 70 60 50\n5\n50 60 70 80 90",
                        "output": "0 0 0 0 0 \n1 1 1 1 0",
                        "explanation": "Test Case 1: The puzzle difficulties are in decreasing order, so the wait is 0 for each. Test Case 2: The puzzle difficulties are in increasing order, so the wait is 1 for each, except the last one where the wait is 0."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you find the next increasing character by iterating through the array again?</p>",
            "<p><strong>&nbsp;</strong>&nbsp;Can you think of a solution by using a stack?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Stacks & Queues",
                "slug": "stacks-&-queues"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}