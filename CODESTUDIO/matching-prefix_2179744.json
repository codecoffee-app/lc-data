{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 14468,
            "title": "Matching Prefix",
            "titleSlug": "matching-prefix_2179744",
            "content": "<h4 id=\"you-are-given-an-integer-n-denoting-the-length-of-the-array-arr-of-strings-made-up-of-lower-case-english-alphabets-the-cost-of-this-array-is-equal-to-the-sum-of-length-of-each-string-in-the-array\">You are given an integer \u2019N\u2019 denoting the length of the array \u2018Arr\u2019 of strings made up of lower case English alphabets. The cost of this array is equal to the sum of length of each string in the array.</h4>\n\n<h4 id=\"you-can-select-a-new-string-s-of-length-n-you-are-now-allowed-to-delete-the-prefix-from-the-strings-in-the-array-this-leads-to-lowering-the-cost-of-the-array-the-deleted-prefix-should-be-exactly-the-same-as-the-selected-string-s\">You can select a new string \u2018S\u2019 of length \u2018N\u2019, you are now allowed to delete the prefix from the strings in the array (This leads to lowering the cost of the array), the deleted prefix should be exactly the same as the selected string \u2018S.</h4>\n\n<h4 id=\"find-the-string-s-such-that-the-cost-of-the-array-arr-is-minimized-if-multiple-strings-exist-then-find-the-lexicographically-smallest-string-amongst-them\">Find the string \u2018S\u2019 such that the cost of the array \u2018Arr\u2019 is minimized. If multiple strings exist, then find the lexicographically smallest string amongst them.</h4>\n\n<h5 id=\"for-example\">For Example :</h5>\n\n<pre><code>If the array of strings is: {co, code, studio, codingninjas, coding, debug, coder, cipher} \nThen the original cost of the array is 2 + 4 + 6 + 12 + 6 + 5 + 5 + 6 = 46.\n\nIf we select the new string as \u201ccod\u201d and delete the matching prefixes if exists then the array becomes: {co, e, studio, ingninjas, ing, debug, er, cipher}, and the cost now becomes: 2 + 1 + 6 + 9 + 3 + 5 + 2 + 6 = 34.\n\nYou can check for any other possible string, the cost will not become less than 34, hence the optimal answer for this case is \u201ccod\u201d.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 denoting the number of test cases, then each test case follows:\n\nThe first line of each test case contains a single integer \u2018N\u2019 denoting the length of the array of strings.\n\nThe next N lines each contain \u2018Arr[i]\u2019 consisting of lower case English alphabets, denoting the ith string in the array.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print the string which minimizes the cost of the array of deletion of common prefixes.\n\nOutput for each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You are not required to print anything; it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10      \n1 &lt;= N &lt;= 20\n1 &lt;= Arr[i].length &lt;= 20\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n8\nco\ncode\nstudio\ncodingninjas\ncoding\ndebug\ncoder\ncipher\n3\ncat\nbat\nrat\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>cod\nbat\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1 :</h5>\n\n<pre><code>For test case 1 :\nIf we choose a string as \u201ccod\u201d and delete the matching prefixes from the array of strings, then the array becomes:  {\u201cco\u201d, \u201ce\u201d, \u201cstudio\u201d, \u201cingninjas\u201d, \u201cing\u201d, \u201cdebug\u201d, \u201cer\u201d, \u201ccipher\u201d}.\nCost of this array is: 2 + 1 + 6 + 9 + 3 + 5 + 2 + 6 = 34, this is the lowest possible cost we can get.\n\nFor test case 2 :\nIf we choose a string as \u201cbat\u201d and delete the matching prefixes from the array of strings, then the array becomes: { \u201ccat\u201d, \u201c\u201d, \u201crat\u201d }, the cost of this array is 3 + 0 + 3 = 6.\nIf we choose \u201ccat\u201d or \u201crat\u201d then also we will have the cost equal to 6, but we need to return the lexicographically shortest string if multiple outputs are possible, hence we return \u201cbat\u201d.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n1\nninjacoder\n2\nrabbit\nrobot\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>ninjacoder\nrabbit\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -4,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array 'Arr' of 'N' strings consisting of lowercase English alphabets, the cost of 'Arr' is defined as the sum of the lengths of all strings in 'Arr'. You can choose a prefix string 'S' of any length up to 'N'. If any string in 'Arr' starts with the chosen prefix 'S', then delete that prefix from the string. The goal is to find the lexicographically smallest prefix 'S' that minimizes the cost of the array 'Arr' after the prefix deletions.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 20",
                    "1 <= Arr[i].length <= 20",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "8\nco\ncode\nstudio\ncodingninjas\ncoding\ndebug\ncoder\ncipher",
                        "output": "cod",
                        "explanation": "Choosing \"cod\" as the prefix results in the array {\"co\", \"e\", \"studio\", \"ingninjas\", \"ing\", \"debug\", \"er\", \"cipher\"} with a total cost of 34, which is the minimum possible cost. Although other prefixes may yield the same minimum cost, \"cod\" is the lexicographically smallest among them."
                    },
                    {
                        "input": "3\ncat\nbat\nrat",
                        "output": "bat",
                        "explanation": "Choosing \"bat\" as the prefix results in the array {\"cat\", \"\", \"rat\"} with a total cost of 6. \"bat\" is the lexicographically smallest string resulting the minimum cost."
                    },
                    {
                        "input": "1\nninjacoder",
                        "output": "ninjacoder",
                        "explanation": null
                    },
                    {
                        "input": "2\nrabbit\nrobot",
                        "output": "rabbit",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>The string returned as the answer is a prefix string of at least one of the array strings.</p>",
            "<p>There can be multiple common prefixes in the brute-force approach, is there a way we can avoid recalculating things for a prefix already evaluated?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}