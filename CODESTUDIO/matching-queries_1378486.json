{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 11139,
            "title": "Matching Queries",
            "titleSlug": "matching-queries_1378486",
            "content": "<h4 id=\"you-are-given-an-array-list-query-consisting-of-n-strings-and-a-string-pattern-for-each-valid-integer-i-0-i-n-check-whether-query-i-matches-pattern-or-not\">You are given an array/list \u2018QUERY\u2019 consisting of \u2018N\u2019 strings and a string \u2018PATTERN\u2019.  For each valid integer \u2018i\u2019 (0 &lt;= \u2018i\u2019 &lt; N), Check whether \u2018QUERY[i]\u2019 matches \u2018PATTERN\u2019 or not.</h4>\n\n<h4 id=\"query-i-matches-the-string-pattern-if-we-can-insert-some-lowercase-letters-in-the-pattern-so-that-it-equals-the-query-i\">\u2018QUERY[i]\u2019 matches the string \u2018PATTERN\u2019, if we can insert some lowercase letters in the \u2018PATTERN\u2019 so that it equals the \u2018QUERY[i]\u2019.</h4>\n\n<h4 id=\"your-task-is-to-return-a-boolean-array-list-of-size-n-where-the-element-at-index-i-is-true-if-and-only-if-query-i-matches-with-pattern-otherwise-it-is-false\">Your task is to return a boolean array/list of size \u2018N\u2019 where the element at index \u2018i\u2019 is True, if and only if \u2018QUERY[i]\u2019 matches with \u2018PATTERN\u2019 otherwise, it is False.</h4>\n\n<h5 id=\"example\">Example :</h5>\n\n<pre><code>Consider \u2018QUERY\u2019 = [\u201cCoding\u201d, \u201cCodiNg\u201d, \u201cCOdiNG\u201d, \u201cNinja\u201d, \u201cCNinja\u201d] and string \u2018PATTERN\u2019 = \u201cCN\u201d\nThen \u201cCN\u201d equals \u201cCodiNg\u201d by inserting lowercase letters \u201co\u201d, \u201cd\u201d, \u201ci\u201d, and \u201cg\u201d like this -:  \u201cC\u201d + \u201codi\u201d + \u201cN\u201d + \u201cg\u201d =  \u201cCodiNg\u201d.\n \u201cCN\u201d equals \u201cCNinja\u201d by inserting lowercase letters \u201ci\u201d, \u201cn\u201d  \u201cj\u201d and \u201ca\u201d like this -:  \u201cCN\u201d + \u201cinja\u201d = \u201cCNinja\u201d.\n No other string in \u2018QUERY\u2019 can match with \u201cCN\u201d by inserting some lowercase letters.\n Thus, we should return the boolean array -: [False, True, False, False, True].\n</code></pre>\n\n<h5 id=\"input-format\">Input format :</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases.\n\nThe first line of each test case consists of a single integer \u2018N\u2019 representing the size of the list/array \u2018QUERY\u2019.\n\nThe second line of each test case consists of \u2018N\u2019 single space-separated strings representing array \u2018QUERY\u2019.\n\nThe third line of each test case consists of a single string, \u2018PATTERN\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case, print \u2018N\u2019 single space-separated strings, where the \u2018i-th\u2019 string will be \u201cTrue\u201d, if and only if \u2018QUERY[i]\u2019 matches with the \u2018PATTERN\u2019, Otherwise it will be \u201cFalse\u201d.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 50\n1 &lt;= N &lt;= 10^3\n1 &lt;= |QUERY[i]| &lt;= 10^3\n1 &lt;= |PATTERN| &lt;= 10^3\n\u2018PATTERN\u2019 has only lowercase or uppercase English letters.\n\u2018QUERY[i]\u2019 has only lowercase or uppercase English letters.\n\nWhere \u2018T\u2019 is the total number of test cases,  \u2018N\u2019 is the size of the list/array \u2018QUERY\u2019, |QUERY[i]|  is the maximum length of the string in \u2018QUERY\u2019 and |PATTERN| is the length of the given string \u2018PATTERN\u2019.\n\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n3\nCe CE Cet\nCe\n5\nCoding CodiNg COdiNG Ninja CNinja\nCN\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>True False True\nFalse True False False True\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1 :</h5>\n\n<pre><code>Test case 1:\nHere, \u201cCe\u201d and \u201cCet\u201d match with the string \u201cCe\u201d.\n\nTest case 2:\nSee the problem statement for an explanation.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n5\nFbK FootBall FooBar foobar FBK\nFB\n1\ncode\ncd\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>False True True False False\nTrue\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 3,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a list of strings `QUERY` and a string `PATTERN`, determine for each string in `QUERY` whether it matches `PATTERN`. A string `QUERY[i]` matches `PATTERN` if it can be formed by inserting lowercase letters into `PATTERN`. Return a boolean array indicating the match status for each string in `QUERY`.",
                "constraints": [
                    "1 <= T <= 50",
                    "1 <= N <= 10^3",
                    "1 <= |QUERY[i]| <= 10^3",
                    "1 <= |PATTERN| <= 10^3",
                    "`PATTERN` has only lowercase or uppercase English letters.",
                    "`QUERY[i]` has only lowercase or uppercase English letters."
                ],
                "testcases": [
                    {
                        "input": "query = [\"Coding\", \"CodiNg\", \"COdiNG\", \"Ninja\", \"CNinja\"], pattern = \"CN\"",
                        "output": "[false, true, false, false, true]",
                        "explanation": "\"CN\" equals \"CodiNg\" by inserting lowercase letters \u201co\u201d, \u201cd\u201d, \u201ci\u201d, and \u201cg\u201d. \"CN\" equals \"CNinja\" by inserting lowercase letters \u201ci\u201d, \u201cn\u201d  \u201cj\u201d and \u201ca\u201d. No other string in \u2018QUERY\u2019 can match with \u201cCN\u201d by inserting some lowercase letters."
                    },
                    {
                        "input": "query = [\"Ce\", \"CE\", \"Cet\"], pattern = \"Ce\"",
                        "output": "[true, false, true]",
                        "explanation": "\"Ce\" and \"Cet\" match with the string \"Ce\"."
                    },
                    {
                        "input": "query = [\"FbK\", \"FootBall\", \"FooBar\", \"foobar\", \"FBK\"], pattern = \"FB\"",
                        "output": "[false, true, true, false, false]",
                        "explanation": "\"FootBall\" can be made from \"FB\" by inserting the lowercase 'oot' and 'all'. \"FooBar\" can be made from \"FB\" by inserting 'oo' and 'ar'."
                    },
                    {
                        "input": "query = [\"code\"], pattern = \"cd\"",
                        "output": "[true]",
                        "explanation": "\"code\" can be made by inserting 'o' and 'e' into \"cd\"."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can we use the two-pointers method to check whether a string matches the pattern?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Tries",
                "slug": "tries"
            },
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}