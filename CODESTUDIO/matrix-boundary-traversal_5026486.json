{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 20939,
            "title": "Matrix Boundary Traversal",
            "titleSlug": "matrix-boundary-traversal_5026486",
            "content": "<h4 id=\"given-a-matrix-of-integers-containing-m-rows-and-n-columns-print-the-boundary-elements-of-the-matrix-the-order-of-printing-does-not-matter\">Given a matrix of integers containing \u2018M\u2019 rows and \u2018N\u2019 columns. Print the boundary elements of the matrix. The order of printing does not matter.</h4>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>The output you will see will be in sorted order.\nYour order of output does not matter.\nYou can return your result in any order.\n</code></pre>\n\n<h5 id=\"example\">Example :</h5>\n\n<pre><code>Input: \u2018M\u2019 = 2, \u2018N\u2019 = 2, \u2018MAT\u2019 = [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12], [13, 14, 15, 16]]\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/matrix-traversal1-16985.png\" alt=\"input\"></p>\n\n<pre><code>Output: [1, 2, 3, 4, 5, 8, 9, 12, 13, 14, 15, 16]\nIf we traverse the matrix in clockwise order from the top left then it will be 1, 2, 3, 4, 8, 12, 16, 15, 14, 13, 9, 5. Which in output will be shown in sorted order which is 1, 2, 3, 4, 5, 8, 9, 12, 13, 14, 15, 16.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/matrix-traversal-2-16986.png\" alt=\"output\"></p>\n\n<p>Referring to the image above, we are printing only the elements that lie on the boundary.</p>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line will contain the integer &#39;T&#39;, denoting the number of test cases.\n\nThe first line of each test contains two integers \u2018M\u2019 and \u2018N\u2019 respectively.\n\nThe Next \u2018M\u2019 line contains \u2018N\u2019 elements denoting the matrix.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case print the boundary elements.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don&#39;t need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>2 &lt;= T &lt;= 10\n1 &lt;= N, M &lt;= 2000\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n3 2\n5 3 \n5 7 \n5 5 \n2 2\n6 8 \n5 5 \n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>3 5 5 5 5 7\n5 5 6 8\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1 :</h5>\n\n<pre><code>For the first case:\nIf we do the clockwise traversal of boundary elements from the top left corner the traversal will be 5 3 5 7 5 5 but in output, you will see the elements sorted that is 3 5 5 5 5 7.\n\nFor the second case:\nIf we do the clockwise traversal of boundary elements from the top left corner the traversal will be 6 8 5 5 but in output, you will see the elements sorted that is 5 5 6 8.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n3 3\n7 3 5 \n5 5 5 \n8 7 7 \n3 3\n7 5 7 \n7 2 6 \n2 8 6 \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>3 5 5 5 7 7 7 8\n2 5 6 6 7 7 7 8\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": -8,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a matrix of integers with 'M' rows and 'N' columns, identify and extract the boundary elements. The order in which you identify the elements does not matter, as the final output should be a sorted list of these boundary elements.",
                "constraints": [
                    "2 <= T <= 10",
                    "1 <= N, M <= 2000",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "3 2\n5 3 \n5 7 \n5 5 \n2 2\n6 8 \n5 5",
                        "output": "3 5 5 5 5 7\n5 5 6 8",
                        "explanation": "For the first case (3x2 matrix), the boundary elements are 5, 3, 5, 7, 5, 5.  Sorted, they become 3, 5, 5, 5, 5, 7.\n\nFor the second case (2x2 matrix), the boundary elements are 6, 8, 5, 5. Sorted, they become 5, 5, 6, 8."
                    },
                    {
                        "input": "3 3\n7 3 5 \n5 5 5 \n8 7 7 \n3 3\n7 5 7 \n7 2 6 \n2 8 6",
                        "output": "3 5 5 5 7 7 7 8\n2 5 6 6 7 7 7 8",
                        "explanation": "For the first test case, the boundary elements of the 3x3 matrix are 7, 3, 5, 5, 5, 8, 7, 7. Sorted, they are 3, 5, 5, 5, 7, 7, 7, 8.\nFor the second test case, the boundary elements of the 3x3 matrix are 7, 5, 7, 7, 6, 2, 8, 6. Sorted, they are 2, 5, 6, 6, 7, 7, 7, 8."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><strong>&nbsp;</strong>Traverse the whole matrix but print only the selected.</p>",
            "<p>Traverse only the boundary elements.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}