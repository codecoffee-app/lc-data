{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8901,
            "title": "Matrix Flip Bit",
            "titleSlug": "matrix-flip-bit_920503",
            "content": "<h4 id=\"you-have-been-given-a-binary-matrix-mat-of-size-n-n-let-i-j-denote-the-row-and-column-of-the-matrix-respectively-if-mat-i-j-is-equal-to-0-flip-every-1-in-the-i-th-row-and-j-th-column-i-e-in-the-same-row-and-the-column-as-0\">You have been given a binary matrix \u2018MAT\u2019 of size \u2018N\u2019 * \u2019N\u2019. Let \u2018i\u2019, \u2019j\u2019 denote the row and column of the matrix, respectively. If \u2018MAT\u2019[i][j] is equal to 0, flip every 1 in the \u2018i\u2019th row and \u2018j\u2019th column i.e., in the same row and the column as 0.</h4>\n\n<h4 id=\"your-task-is-to-return-the-total-number-of-flips-done-over-all-the-elements-of-the-matrix\">Your task is to return the total number of flips done over all the elements of the matrix.</h4>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>1. Each element in the matrix &#39;MAT&#39; is either a \u20180\u2019 or \u20181.\u2019\n\n2. The flip operation is performed only for the 0s in the original matrix, and not for the new 0s formed as a result of flipping 1s in the original matrix.\n\n3. If a cell is already flipped, don\u2019t flip it twice.\n\n4. Return the minimum number of flips needed.\n</code></pre>\n\n<h4 id=\"for-example\">For example:</h4>\n\n<pre><code>Let the matrix be:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/eg-6366.jpg\" alt=\"insert eg 1\"></p>\n\n<pre><code>Then we return 6. As shown in the figure, the cells marked in red will be counted as they lie in the same row or column as 0 and will be flipped.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/eg2-6365.jpg\" alt=\"insert eg 2\"></p>\n\n<h5 id=\"input-format\">Input format:</h5>\n\n<pre><code>The first line of input contains \u2018T\u2019 denoting the number of test cases.\n\nThe first line of each test case contains \u2018N\u2019 denoting the dimensions of the \u2018N * N\u2019 matrix.\n\nThe next \u2018N\u2019 lines contain \u2018N\u2019 single space-separated integers denoting the matrix &#39;MAT\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output format:</h5>\n\n<pre><code>For each test case, print a single line that contains an integer that denotes the total number of flips made.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You don&#39;t have to print the output it has been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 5\n0 &lt;= N &lt;= 100\nMAT[i][j] = 0 or 1\n\nWhere \u2018T\u2019 is the number of test cases and \u2018N\u2019 is the number of rows and columns of the matrix &#39;MAT&#39;.\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1\n4\n1 0 1 1\n1 1 0 1\n1 1 1 1\n1 1 0 1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>11\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of sample input 1:</h5>\n\n<pre><code>Test case 1:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/example1-1-6367.jpg\" alt=\"inserteg-1\"></p>\n\n<pre><code>We can see that \u2018MAT\u2019[0][1] is zero so we flip all elements which are 1 in the ith row i.e 0 th row and jth column i.e. 1st column. We can clearly see that there are 3 1s in the 0th row and 3 1s in the 1st column. Hence for the \u20180\u2019 at \u2018MAT\u2019[0][1] we make 3 + 3 = 6 flips.\n\nWe mark the already counted cells red so we don\u2019t count them twice.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/save-2-6370.jpg\" alt=\"insert eg-2\"></p>\n\n<pre><code>Now we encounter the next zero at \u2018MAT\u2019[2][1]. We flip the bits in the first column which are unflipped and are 1 i.e \u2018MAT\u2019[2][2] and also the 1s which are unflipped in the second row i.e \u2018MAT\u2019[1][0] and \u2018MAT\u2019[1][3].\n\nFinally, the count is 6 + 3 = 9, as shown with the cells marked in red.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/save3correct-6369.jpg\" alt=\"insert eg-3\"></p>\n\n<pre><code>Now the last cell which is \u20180\u2019 i.e \u2018MAT\u2019[3][2]. We check for all the cells in the third row and second column and mark all the 1s which are not marked red and increment the count.\n\nFinally, we will have the following matrix.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/save4-6368.jpg\" alt=\"insert eg 4\"></p>\n\n<pre><code>We see that there are 11 cells marked red which indicate that we flipped 11 cells so we return 11.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n5\n1 1 0 0 1\n1 0 1 1 0\n1 1 1 1 1\n0 0 1 1 0\n1 0 1 0 1\n6\n0 1 1 1 1 1 \n1 1 0 0 0 1 \n0 0 1 0 1 1 \n0 1 0 0 1 0 \n1 0 1 0 1 1 \n1 0 0 0 1 1 \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>16\n20 \n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 15,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a binary matrix 'MAT' of size 'N' x 'N', where each element is either 0 or 1. For each cell 'MAT'[i][j] that equals 0, flip all the 1s in the i-th row and j-th column. A flip changes a 1 to a 0.  The task is to calculate the total number of flips performed across the entire matrix.  A cell is flipped only once.",
                "constraints": [
                    "1 <= T <= 5",
                    "0 <= N <= 100",
                    "MAT[i][j] = 0 or 1",
                    "Where \u2018T\u2019 is the number of test cases and \u2018N\u2019 is the number of rows and columns of the matrix 'MAT'.",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "1\n4\n1 0 1 1\n1 1 0 1\n1 1 1 1\n1 1 0 1",
                        "output": "11",
                        "explanation": "The matrix is 4x4.  \n\n- The first 0 is at MAT[0][1]. Flipping 1s in row 0 and column 1 results in 3 flips in row 0 (at indices 0, 2, and 3) and 3 flips in column 1 (at indices 1, 2, and 3), totaling 6 flips.\n\n- The next 0 is at MAT[1][2]. Flipping 1s in row 1 and column 2 results in 2 flips in row 1 (at indices 0,3) and 1 flips in column 2 (at indices 2), totaling 3 flips.\n\n- The last 0 is at MAT[3][2]. Flipping 1s in row 3 and column 2 results in 2 flips in row 3 (at indices 0,1) and 0 flips in column 2 (at indices 2), totaling 2 flips.\n\nThe total number of distinct flips is 6 + 3 + 2 = 11."
                    },
                    {
                        "input": "2\n5\n1 1 0 0 1\n1 0 1 1 0\n1 1 1 1 1\n0 0 1 1 0\n1 0 1 0 1\n6\n0 1 1 1 1 1 \n1 1 0 0 0 1 \n0 0 1 0 1 1 \n0 1 0 0 1 0 \n1 0 1 0 1 1 \n1 0 0 0 1 1 ",
                        "output": "16\n20",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Brute force all &nbsp;0s and find the number of bits to be flipped</p>",
            "<p>Can we avoid checking the rows and columns already checked?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Matrices (2D Arrays)",
                "slug": "matrices-(2d-arrays)"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}