{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 11393,
            "title": "Matrix Range Query Mutable ",
            "titleSlug": "matrix-range-query-mutable_1381412",
            "content": "<h4 id=\"you-are-given-a-n-m-matrix-grid-you-are-also-given-q-queries-your-task-is-to-perform-two-types-of-query\">You are given a N * M matrix GRID. You are also given Q queries. Your task is to Perform two types of query-</h4>\n\n<pre><code>1) Find the sum of the rectangular submatrix defined by the upper left corner and lower right corner for each query. The position of the upper left and lower right corner is given.\n\n2) Change the value of the element at a given position. Position and the new value of the cell are given. \n\nAll indexes are 0 based.\n</code></pre>\n\n<h4 id=\"for-example\">For example:</h4>\n\n<pre><code>GRID =[ [1, 2, 3],\n        [4, 5, 6],\n        [7, 8, 0] ]\nQ = 2\nUpdate element at (3,3) to 9 \nleft corner = (1, 1), right corner = (2, 2)\nsubmatrix=[ [5, 6],\n            [8, 9] ]   \nAnswer = 28\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer T\u2019 denoting the number of test cases to run. Then the test case follows.\n\nThe first line of each test case contains three space-separated integers \u2018N\u2019, \u2018M\u2019, \u2018Q\u2019 denoting the number of rows and number of columns in GRID and the number of queries. \n\nThen \u2018N\u2019 lines follow. Each of the next &#39;N&#39; lines contains \u2018M\u2019 space-separated integers denoting the elements of the matrix GRID.\n\nThen \u2018Q\u2019 lines follow. Each of the lines contains the type of the query and the query.\n\nIf the TYPE = 1, then it contains four space-separated integers \u2018X1\u2019, \u2018Y1\u2019, \u2018X2\u2019, \u2018Y2\u2019 where (\u2018X1\u2019, \u2018Y1\u2019) is an upper left corner. (\u2018X2\u2019, \u2018Y2\u2019) is the lower right corner.\n\nIf the TYPE = 2 then it contains two space-separated integers \u2018X\u2019 \u2018Y\u2019, and a NEW_VALUE to be stored at a given position. \n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each query of TYPE=1 print the sum of elements in the submatrix defined by the upper left and lower right corner.\n\nThe output of each test case is printed on a different line. \n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You don\u2019t need to print anything, It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= N, M &lt;= 1000 \n1 &lt;= Q &lt;= 10 ^ 5\n-10^4 &lt;= GRID[i] &lt;= 10^4\n\n\u2018Q\u2019 is the number of queries.\n\u2018N\u2019, \u2018M\u2019, GRID[i] is the number of rows, number of columns and cell value of GRID.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n1 4 3\n7 5 3 2 \n1 0 0 0 1\n2 0 0 2\n1 0 0 0 1\n2 2 1\n1 1 \n1 1\n1 0 0 1 1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>12 7\n4\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1:</h5>\n\n<pre><code>For the first test case, the first query submatrix is [[7, 5]]\nAfter second query array becomes= [2, 5, 3, 2]\nFor third query submatrix is [[2, 5]]\nFor the second test case, first query submatrix is [[1, 1], [1, 1]] \n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n2 2 3\n-1 1\n-1 -1\n1 0 1 1 1\n2 1 0 1 \n1 1 0 1 1\n1 1 1\n0\n1 0 0 0 0  \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>0 0\n0\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": -8,
            "dislikes": "NA",
            "rephrased": {
                "body": "You are given a N * M matrix GRID. You are also given Q queries. Your task is to perform the following two types of queries:\n\n1) **Sum Query:** Calculate the sum of elements within a rectangular submatrix defined by its upper-left corner (X1, Y1) and lower-right corner (X2, Y2). All indices are 0-based.\n\n2) **Update Query:** Change the value of the element at a specific position (X, Y) to a new value, NEW_VALUE. All indices are 0-based.\n",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= N, M <= 1000",
                    "1 <= Q <= 10^5",
                    "-10^4 <= GRID[i] <= 10^4",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "2\n1 4 3\n7 5 3 2 \n1 0 0 0 1\n2 0 0 2\n1 0 0 0 1\n2 2 1\n1 1 1\n1 0 0 1 1",
                        "output": "12 7\n4",
                        "explanation": "For the first test case:\n- First query: The submatrix defined by (0,0) and (0,1) is [[7, 5]], so the sum is 12.\n- The matrix is updated at (0,0) to 2. Matrix becomes [2, 5, 3, 2]\n- Second query: The submatrix defined by (0,0) and (0,1) is [[2, 5]], so the sum is 7.\n- The matrix is updated (0,2) to 1. Matrix becomes [2, 5, 1, 2]\nFor the third query submatrix is [[5, 1]] so the answer is 6\nFor the second test case, the submatrix defined by (0,0) and (1,1) consists of [[1, 1], [1, 1]], and the sum is 4."
                    },
                    {
                        "input": "2\n2 2 3\n-1 1\n-1 -1\n1 0 1 1 1\n2 1 0 1 \n1 1 0 1 1",
                        "output": "0 0",
                        "explanation": "For the first test case:\n -First query: The submatrix defined by (0,1) and (1,1) is [[1],[-1]], so the sum is 0.\n - The matrix is updated (1,0) to 1. Matrix becomes [[-1,1],[1,-1]]\n -Second query: The submatrix defined by (1,0) and (1,1) is [[1,-1]], so the sum is 0."
                    },
                    {
                        "input": "1\n1 1 1\n1\n1 0 0 0 0",
                        "output": "1",
                        "explanation": "The single element submatrix (0,0) to (0,0) contains just the element 1, so the sum is 1."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>For each query calculate the sum by brute force.</p>",
            "<p>Each submatrix can be represented as the addition and subtraction of matrices having the upper left corner at (0, 0). So if we compute the sum of all the matrixes starting at (0, 0) we can answer queries of the first type in constant time. But we also have to update the matrix. Can we use the Fenwick tree to do updates and compute the sum of the prefix ??</p>"
        ],
        "relatedTopics": [
            {
                "name": "Matrices (2D Arrays)",
                "slug": "matrices-(2d-arrays)"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}