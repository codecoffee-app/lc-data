{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10799,
            "title": "Matrix Range Query ",
            "titleSlug": "matrix-range-query_1264951",
            "content": "<h4 id=\"you-are-given-an-n-m-matrix-grid-you-are-also-given-q-queries-your-task-is-to-find-the-sum-of-the-rectangular-submatrix-defined-by-the-upper-left-corner-and-lower-right-corner-for-each-query\">You are given an &#39;N * M&#39; matrix &#39;GRID&#39;. You are also given &#39;Q&#39; queries. Your task is to find the sum of the rectangular submatrix defined by the upper left corner and lower right corner for each query.</h4>\n\n<h4 id=\"all-indexes-are-0-based\">All indexes are 0 based.</h4>\n\n<h4 id=\"example\">Example:</h4>\n\n<pre><code>&#39;GRID&#39; = [ [1, 2, 3],\n           [4, 5, 6],\n           [7, 8, 9] ]\n\n&#39;Q&#39; = 1, left corner = (1, 1), right corner = (2, 2)\nsubmatrix = [ [5, 6],\n            [8, 9] ]   \n\nAnswer = 28\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer &#39;T\u2019 denoting the number of test cases to run. Then the test case follows.\n\nThe first line of each test case contains three space-separated integers \u2018N\u2019, \u2018M\u2019, \u2018Q\u2019 number of rows and number of columns in &#39;GRID&#39; and number of queries. \n\nThen \u2018N\u2019 lines follow. Each of the lines contains \u2018M\u2019 space-separated integers denoting the elements of the matrix &#39;GRID&#39;.\n\nThen \u2018Q\u2019 lines follow. Each of the lines contains four space-separated integers \u2018X1\u2019, \u2018Y1\u2019, \u2018X2\u2019, \u2018Y2\u2019 where (\u2018X1\u2019, \u2018Y1\u2019) is an upper left corner. (\u2018X2\u2019, \u2018Y2\u2019) is the lower right corner.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, return the array that contains sum of elements in the submatrix defined by the upper left and lower right corner for each query.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You don\u2019t need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= N, M &lt;= 10^3\n-10^4 &lt;= GRID[i][j] &lt;= 10^4\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n1 4 3\n7 5 3 2 \n0 0 0 1\n0 0 0 2\n0 0 0 3\n2 2 1\n1 1 \n1 1\n0 0 1 1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>12\n15 \n17\n4\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1:</h5>\n\n<pre><code>For the first test case, the first query submatrix is [[7, 5]]\nFor second query submatrix is [[7,5, 3]]\nFor third query submatrix is [[7, 5, 3, 2]]\n\nFor the second test case, first query submatrix is [[1, 1], [1, 1]] \n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n2 2 2\n-1 1\n1 -1\n0 1 1 1\n1 0 1 1\n1 1 1\n0\n0 0 0 0  \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>0\n0\n0\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 7,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a 2D integer matrix `grid` of size N x M and a list of Q queries, calculate the sum of elements within the submatrix defined by the top-left corner (X1, Y1) and the bottom-right corner (X2, Y2) for each query. All indices are 0-based.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= N, M <= 10^3",
                    "-10^4 <= GRID[i][j] <= 10^4"
                ],
                "testcases": [
                    {
                        "input": "grid = [[1, 2, 3], [4, 5, 6], [7, 8, 9]], queries = [[1, 1, 2, 2]]",
                        "output": "[28]",
                        "explanation": "The submatrix defined by (1, 1) and (2, 2) is [[5, 6], [8, 9]]. The sum of its elements is 5 + 6 + 8 + 9 = 28."
                    },
                    {
                        "input": "grid = [[7, 5, 3, 2]], queries = [[0, 0, 0, 1], [0, 0, 0, 2], [0, 0, 0, 3]]",
                        "output": "[12, 15, 17]",
                        "explanation": "For the first query, the submatrix is [[7, 5]]. Sum is 12. For the second query, the submatrix is [[7, 5, 3]]. Sum is 15. For the third query, the submatrix is [[7, 5, 3, 2]]. Sum is 17."
                    },
                    {
                        "input": "grid = [[1, 1], [1, 1]], queries = [[0, 0, 1, 1]]",
                        "output": "[4]",
                        "explanation": "The submatrix defined by (0, 0) and (1, 1) is [[1, 1], [1, 1]]. The sum is 1 + 1 + 1 + 1 = 4."
                    },
                    {
                        "input": "grid = [[-1, 1], [1, -1]], queries = [[0, 1, 1, 1], [1, 0, 1, 1]]",
                        "output": "[0, 0]",
                        "explanation": "For the first query, the submatrix is [[1], [-1]]. The sum is 1 - 1 = 0. For the second query, the submatrix is [[1], [-1]]. The sum is 1 - 1 = 0."
                    },
                    {
                        "input": "grid = [[0]], queries = [[0, 0, 0, 0]]",
                        "output": "[0]",
                        "explanation": "The submatrix defined by (0, 0) and (0, 0) is [[0]]. The sum is 0."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>For each query calculate the sum by brute force.</p>",
            "<p>Can we precompute sum of all matrix that has upper left corner fixed at (0, 0) ?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Matrices (2D Arrays)",
                "slug": "matrices-(2d-arrays)"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}