{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 14783,
            "title": "Max Distance",
            "titleSlug": "max-distance_2256288",
            "content": "<h4 id=\"you-are-given-an-array-of-binary-strings-arr-of-size-n-your-task-is-to-find-out-the-maximum-distance-between-the-pair-of-strings\">You are given an array of binary strings \u2018arr\u2019 of size \u2018N\u2019. Your task is to find out the maximum distance between the pair of strings.</h4>\n\n<h4 id=\"the-distance-between-two-binary-strings-is-defined-as-the-sum-of-their-lengths-after-removing-the-common-prefix\">The distance between two binary strings is defined as the sum of their lengths after removing the common prefix.</h4>\n\n<h5 id=\"for-example\">For example:</h5>\n\n<pre><code>You are given \u2018arr\u2019 = [ \u201c01011\u201d,  \u201c010110\u201d, \u201c0111\u201d], Here the strings with the maximum distance between them are \u201c010110\u201d and  \u201c0111\u201d, where the prefix is \u201c01\u201d,  hence the maximum distance is  4 + 2 = 6. Hence the answer is 6.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code> The first line of input contains the integer \u2018T\u2019 representing the number of test cases.\n\nThe first line of each test case contains \u2018N\u2019 space-separated strings representing the elements of the array \u2018arr\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print a single integer representing the maximum distance between any two strings in the array.\n\nPrint a separate line for each test case.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n2 &lt;= N &lt;= 10^3\n1 &lt;= |arr[i]| &lt;= 10^3\n\nTime Limit: 1 sec\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the function.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n1011100 1011011 1001111 0111111\n01011 010110 0111 \n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>14\n 6\n</code></pre>\n\n<h5 id=\"explanation\">Explanation:</h5>\n\n<pre><code>For the first test case, \u2018arr\u2019 = [&quot;1011100&quot;, &quot;1011011&quot;, &quot;1001111&quot;, &quot;0111111&quot;], Here the string with maximum distance between them are &quot;1001111&quot; and  &quot;0111111\u201d, where the prefix is \u201c\u201d,  hence the maximum distance is 7 + 7 = 14. Hence the answer is 14.\n\nFor the second test case, \u2018arr\u2019 = [ \u201c01011\u201d,  \u201c010110\u201d, \u201c0111\u201d], Here the strings with the maximum distance between them are \u201c010110\u201d and  \u201c0111\u201d, where the prefix is \u201c01\u201d. Hence the maximum distance is  4 + 2 = 6. Hence the answer is 6.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n1100 1110 0111 00\n01000 01011 010 011\n</code></pre>\n\n<h6 id=\"sample-output-2\">Sample Output 2:</h6>\n\n<pre><code>8\n4\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 3,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of binary strings `arr`, find the maximum distance between any two strings in the array. The distance between two binary strings is defined as the sum of their lengths after removing their longest common prefix.",
                "constraints": [
                    "1 <= T <= 10 (Number of test cases)",
                    "2 <= N <= 10^3 (Size of the array)",
                    "1 <= |arr[i]| <= 10^3 (Length of each binary string)"
                ],
                "testcases": [
                    {
                        "input": "n = 4, arr=[\"1011100\", \"1011011\", \"1001111\", \"0111111\"]",
                        "output": "14",
                        "explanation": "The strings with the maximum distance are \"1001111\" and \"0111111\". The common prefix is \"\", so the distance is 7 + 7 = 14."
                    },
                    {
                        "input": "n = 3, arr=[\"01011\", \"010110\", \"0111\"]",
                        "output": "6",
                        "explanation": "The strings with the maximum distance are \"010110\" and \"0111\". The common prefix is \"01\", so the distance is 4 + 2 = 6."
                    },
                    {
                        "input": "n = 4, arr=[\"1100\", \"1110\", \"0111\", \"00\"]",
                        "output": "8",
                        "explanation": "The strings with the maximum distance are \"0111\" and \"00\". The common prefix is \"\", so the distance is 4 + 4 = 8."
                    },
                    {
                        "input": "n = 4, arr=[\"01000\", \"01011\", \"010\", \"011\"]",
                        "output": "4",
                        "explanation": "The strings with the maximum distance are \"01000\" and \"011\".  The common prefix is \"01\", so the distance is 3 + 1 = 4."
                    },
                    {
                        "input": "n = 2, arr=[\"101010\", \"101010\"]",
                        "output": "0",
                        "explanation": "The strings are identical. The common prefix is \"101010\", so the distance is 0 + 0 = 0."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to think of a brute force approach.</p>",
            "<p>Think of a data structure that helps in string comparison.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Tries",
                "slug": "tries"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}