{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 7856,
            "title": "Max Game",
            "titleSlug": "max-game_794955",
            "content": "<h4 id=\"you-are-given-n-numbers-and-you-have-to-play-a-game-using-them-in-one-move-you-have-to-pick-any-two-numbers-a-and-b-and-replace-them-by-their-sum-a-b-doing-this-gives-you-a-penalty-of-a-b-note-that-the-count-of-elements-reduces-by-1-every-time-you-take-2-numbers-and-replace-them-by-their-sum-the-game-ends-when-there-is-only-one-element-left-your-task-is-to-minimise-the-penalty-during-the-game\">You are given &#39;N&#39; numbers and you have to play a game using them. In one move you have to pick any two numbers &#39;A&#39; and &#39;B&#39; and replace them by their sum &#39;A+B&#39;. Doing this gives you a penalty of &#39;A+B&#39;. Note that the count of elements reduces by 1 every time you take 2 numbers and replace them by their sum. The game ends when there is only one element left. Your task is to minimise the penalty during the game.</h4>\n\n<h4 id=\"you-need-to-return-the-minimum-possible-penalty-you-can-have-when-the-game-ends\">You need to return the minimum possible penalty you can have when the game ends.</h4>\n\n<h5 id=\"input-format\">Input format:</h5>\n\n<pre><code>The first line of input contains an integer &#39;T&#39; denoting the number of queries or test cases. \n\nThe first line of every test case contains an integer &#39;N&#39; denoting the count of numbers.\n\nThe second line of every test case contains &#39;N&#39; single space-separated integers representing the numbers given to you initially. \n</code></pre>\n\n<h5 id=\"output-format\">Output format:</h5>\n\n<pre><code>For each test case, return the minimum possible penalty in a separate line. \n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= N &lt;= 10^5 \n1 &lt;= X[i] &lt;= 10^6 \n\nTime limit: 1 second\n</code></pre>\n<h5 id=\"sample-input-1\">Sample input 1:</h5>\n\n<pre><code>1\n4  \n2 3 1 4 \n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample output 1:</h5>\n\n<pre><code>19\n</code></pre>\n\n<h5 id=\"explanation\">Explanation</h5>\n\n<pre><code>To achieve the minimum penalty,\nFirst, we pick 1 and 2, replace it by 3. We get { 3, 3, 4}\nSecond, we pick 3 and 3, replace it by 6. We get {4, 6}\nThird, we pick 4 and 6, replace it by 10. We get {10}\n\nThe minimum penalty will be 3 + 6 + 10 = 19.   \n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample input 2:</h5>\n\n<pre><code>1\n5\n7 6 5 5 3\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample output 2:</h5>\n\n<pre><code>60\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 29,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a list of 'N' numbers, simulate a game where in each move, you select two numbers, 'A' and 'B', replace them with their sum ('A+B'), and incur a penalty equal to 'A+B'. The goal is to find the minimum total penalty accumulated until only one number remains. Implement a function to determine the smallest possible penalty achievable by strategically choosing numbers for each move.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= N <= 10^5",
                    "1 <= X[i] <= 10^6"
                ],
                "testcases": [
                    {
                        "input": "n = 4, arr = [2, 3, 1, 4]",
                        "output": "19",
                        "explanation": "The optimal steps are:\n1. Pick 1 and 2, replace with 3. Penalty: 3. Array: [3, 3, 4]\n2. Pick 3 and 3, replace with 6. Penalty: 6. Array: [4, 6]\n3. Pick 4 and 6, replace with 10. Penalty: 10. Array: [10]\nTotal penalty: 3 + 6 + 10 = 19"
                    },
                    {
                        "input": "n = 5, arr = [7, 6, 5, 5, 3]",
                        "output": "60",
                        "explanation": "The optimal steps are:\n1. Pick 3 and 5, replace with 8. Penalty: 8. Array: [7, 6, 5, 8]\n2. Pick 5 and 6, replace with 11. Penalty: 11. Array: [7, 8, 11]\n3. Pick 7 and 8, replace with 15. Penalty: 15. Array: [11, 15]\n4. Pick 11 and 15, replace with 26. Penalty: 26. Array: [26]\nTotal penalty: 8 + 11 + 15 + 26 = 60"
                    },
                    {
                        "input": "n = 2, arr = [1, 2]",
                        "output": "3",
                        "explanation": "Pick 1 and 2, replace with 3. Penalty: 3. Array: [3]. Total penalty: 3"
                    },
                    {
                        "input": "n = 3, arr = [1, 5, 2]",
                        "output": "11",
                        "explanation": "1. Pick 1 and 2, replace with 3. Penalty: 3. Array: [3, 5]\n2. Pick 3 and 5, replace with 8. Penalty: 8. Array: [8]. Total Penalty = 3+8 = 11"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>We can observe that when it comes to minimising the penalty. This can be done by considering the 2 smallest numbers every time. This can be done by repeatedly picking up 2 smallest numbers and replacing them with their sum.</p>",
            "<p>We can observe that when it comes to minimising the penalty. This can be done by considering the 2 smallest numbers every time. You will notice that this is just the same as the optimal merge pattern.&nbsp;</p><p>3&nbsp; &nbsp; &nbsp; 4&nbsp; &nbsp; 5&nbsp; &nbsp; 4 &nbsp; =&gt; Initially given numbers.&nbsp;</p><p>&nbsp;&nbsp;\\&nbsp; &nbsp; / &nbsp; &nbsp; &nbsp; \\&nbsp; &nbsp; /</p><p>&nbsp;&nbsp;&nbsp;&nbsp;7 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 9</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\ &nbsp; &nbsp; &nbsp; &nbsp; /</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\ &nbsp; &nbsp; /</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;16</p><p>Ans= 7 + 9 + 16 = 32</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}