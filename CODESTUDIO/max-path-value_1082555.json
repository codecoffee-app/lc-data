{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9734,
            "title": "Max Path Value",
            "titleSlug": "max-path-value_1082555",
            "content": "<h4 id=\"you-are-given-a-directed-graph-with-n-nodes-and-m-edges-each-node-has-a-lowercase-letter-assigned-to-it-for-any-path-the-path-s-value-is-defined-as-the-maximum-frequency-of-a-letter-on-the-path-you-are-supposed-to-find-the-maximum-value-of-a-path-if-the-maximum-value-can-be-infinitely-large-then-return-1\">You are given a directed graph with \u2018N\u2019 nodes and \u2018M\u2019 edges. Each node has a lowercase letter assigned to it. For any path, the path\u2019s value is defined as the maximum frequency of a letter on the path. You are supposed to find the maximum value of a path. If the maximum value can be infinitely large then return -1.</h4>\n\n<h5 id=\"example\">Example:</h5>\n\n<pre><code>If some path has the letters \u201cxyxxxyzz\u201d then the value of this path will be 4 as the maximum frequency of any letter(\u2018x\u2019) is 4.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 denoting the number of test cases. The test cases are as follows.\n\nThe first line of each test case contains two integers separated by a single space \u2018N\u2019 and \u2018M\u2019 denoting the number of the nodes and the number of edges respectively.\n\nThe next line contains a string of length \u2018N\u2019 consisting of lowercase letters, denoting the character assigned to each node. The &#39;i\u2019-th character of the string is assigned to the &#39;i\u2019-th node.\n\nThe next \u2018M\u2019 lines of each test case contain two integers, \u2018X\u2019 and \u2018Y\u2019 separated by a single space, \u2018X\u2019 and \u2019Y\u2019 denote the vertices connected by an edge directed from \u2018X\u2019 to \u2018Y\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, return the maximum value of any path.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You don\u2019t need to print anything, It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= N &lt;= 10^5\n0 &lt;= M &lt;= 10^5\n|S| = N\n1 &lt;= X,Y &lt;= N \n\nWhere |S| denotes the length of the string.\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n4 5\nabcdef\n1 2\n2 3\n4 2\n4 3\n1 3\n3 3\naba\n1 2\n2 3\n1 3\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>1\n2\n</code></pre>\n\n<h5 id=\"explanation-of-sample-output-1\">Explanation of Sample Output 1 :</h5>\n\n<pre><code>In test case 1, for any path in the graph, the maximum frequency of a letter will be 1.\n\nIn test case 2, the path from 1-&gt;2-&gt;3 will have a maximum frequency 2 of the letter \u2018a\u2019.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n4 3\nabab\n1 2\n2 4\n4 1\n2 1\naa\n1 2\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>-1\n2\n</code></pre>\n\n<h5 id=\"explanation-of-sample-output-2\">Explanation of Sample Output 2 :</h5>\n\n<pre><code>In test case 1, the answer can be infinitely large hence the output is -1.\n\nIn test case 2, there is only 1 path from 1-&gt;2 which has a maximum frequency of 2.\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"hints\">Hints:</h5>\n\n<pre><code>1. Try to find all the path starting from every node of the graph.    \n2. Think about some dynamic programming state that takes care of both node and some letter frequency.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 66,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a directed graph with 'N' nodes and 'M' edges, where each node is assigned a lowercase letter.  Define the value of a path as the maximum frequency of any letter appearing in that path. Determine the maximum possible path value in the graph. If a cycle exists such that the path value can increase infinitely, return -1.",
                "constraints": [
                    "1 <= N <= 10^5",
                    "0 <= M <= 10^5",
                    "1 <= X, Y <= N, where X and Y represent the nodes connected by an edge."
                ],
                "testcases": [
                    {
                        "input": "n = 4, m = 5, edges = {{1, 2}, {2, 3}, {4, 2}, {4, 3}, {1, 3}}, values = \"abcd\"",
                        "output": "1",
                        "explanation": "For any path in the graph, the maximum frequency of a letter will be 1."
                    },
                    {
                        "input": "n = 3, m = 3, edges = {{1, 2}, {2, 3}, {1, 3}}, values = \"aba\"",
                        "output": "2",
                        "explanation": "The path from 1 -> 2 -> 3 will have a maximum frequency 2 of the letter \u2018a\u2019."
                    },
                    {
                        "input": "n = 4, m = 3, edges = {{1, 2}, {2, 4}, {4, 1}}, values = \"abab\"",
                        "output": "-1",
                        "explanation": "The graph contains a cycle (1 -> 2 -> 4 -> 1), and the path value can increase infinitely by traversing this cycle repeatedly.  Specifically, 'a' and 'b' repeat indefinitely."
                    },
                    {
                        "input": "n = 2, m = 1, edges = {{1, 2}}, values = \"aa\"",
                        "output": "2",
                        "explanation": "There is only 1 path from 1 -> 2 which has a maximum frequency of 2 ('a')."
                    },
                    {
                        "input": "n = 5, m = 5, edges = {{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 1}}, values = \"abcde\"",
                        "output": "-1",
                        "explanation": "The graph contains a cycle, though no single character repeats in the entire cycle, it is still a cycle and thus should be marked as -1"
                    },
                    {
                        "input": "n = 4, m = 4, edges = {{1, 2}, {2, 3}, {3, 4}, {1, 4}}, values = \"aaaa\"",
                        "output": "-1",
                        "explanation": "There exists a cycle so the number of the letter in that cycle can be repeated indefinitely "
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}