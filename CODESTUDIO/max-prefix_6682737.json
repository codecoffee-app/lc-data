{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 23445,
            "title": "Max Prefix",
            "titleSlug": "max-prefix_6682737",
            "content": "<h4 id=\"you-are-given-an-array-a-of-length-n-you-can-perform-the-operation-defined-below-any-number-of-times-possibly-0\">You are given an array &#39;A&#39; of length &#39;N&#39;. You can perform the operation defined below any number of times (Possibly 0).</h4>\n\n<pre><code>Choose &#39;l&#39;, &#39;r&#39; (1 &lt;= &#39;l&#39; &lt;= &#39;r&#39; &lt;=&#39;N&#39;) and reverse the subarray from &#39;l&#39; to &#39;r&#39;.\n</code></pre>\n\n<h4 id=\"after-that-return-the-maximum-possible-sum-of-the-prefix-of-this-array-of-length-k\">After that, Return the maximum possible sum of the prefix of this array of length &#39;K&#39;.</h4>\n\n<h5 id=\"for-example\">For Example:-</h5>\n\n<pre><code>Let &#39;N&#39; = 5, &#39;K&#39; = 3, &#39;A&#39; = [4, 2, 1, 2, 2].\nWe can reverse the subarray from index 3 to 4 (1-based indexing).\nArray becomes [4, 2, 2, 1, 2].\nOur answer is 8.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:-</h5>\n\n<pre><code>First-line contains an integer &#39;T&#39;, which denotes the number of test cases.\nFor every test case:-\nFirst-line contains two integers &#39;N&#39; and &#39;K&#39;.\nSecond-line contains &#39;N&#39; space-separated integers, elements of array &#39;A&#39;.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:-</h5>\n\n<pre><code>For each test case, Return the maximum possible sum of the prefix of this array of length &#39;K&#39;.\n</code></pre>\n\n<h5 id=\"note\">Note:-</h5>\n\n<pre><code>You don\u2019t need to print anything. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:-</h5>\n\n<pre><code>1 &lt;= &#39;T&#39; &lt;= 10\n1 &lt;= &#39;K&#39; &lt;= &#39;N&#39; &lt;= 10^5\n1 &lt;= &#39;A[i]&#39; &lt;= 10^3\n\nThe Sum of &#39;N&#39; overall test cases does not exceed 10^5.\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:-</h5>\n\n<pre><code>2\n2 2 \n1 3\n3 2\n2 2 3\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:-</h5>\n\n<pre><code>4\n5\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of sample input 1:-</h5>\n\n<pre><code>First test case:-\nWe do not need to reverse any subarray.\nOur answer is 4.\n\nSecond test case:-\nWe can reverse the subarray from index 1 to 3 (1-based indexing).\nArray becomes [3, 2, 2].\nOur answer is 5.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:-</h5>\n\n<pre><code>2\n4 3\n4 3 2 1\n5 5 \n1 2 3 4 5\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:-</h5>\n\n<pre><code>9\n15\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": -5,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array 'A' of length 'N', you can perform the operation of reversing a subarray any number of times. The goal is to maximize the sum of the first 'K' elements (prefix) of the array after applying these reversals.",
                "constraints": [
                    "1 <= 'T' <= 10",
                    "1 <= 'K' <= 'N' <= 10^5",
                    "1 <= 'A[i]' <= 10^3",
                    "The sum of 'N' overall test cases does not exceed 10^5.",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "2 2\n1 3",
                        "output": "4",
                        "explanation": "No reversals are needed. The prefix of length 2 is [1, 3], and its sum is 4."
                    },
                    {
                        "input": "3 2\n2 2 3",
                        "output": "5",
                        "explanation": "Reversing the entire array [2, 2, 3] results in [3, 2, 2]. The prefix of length 2 is [3, 2], and its sum is 5."
                    },
                    {
                        "input": "4 3\n4 3 2 1",
                        "output": "9",
                        "explanation": "Reversing the subarray from index 3 to 4 (1-based indexing), [2, 1] results in [1, 2].The array becomes [4, 3, 1, 2].  Reversing subarray from index 3 to 4 results into array  [4 3 2 1]. Reversing the subarray from index 3 to 4 results into array  [4 3 1 2] and the first three elements [4,3,2,1] sums to [4, 3, 1] sums to 8 . Reversing the subarray from index 2 to 3 results into array [4 2 3 1] and the first three elements are [4,2,3] with sum equal to 9"
                    },
                    {
                        "input": "5 5\n1 2 3 4 5",
                        "output": "15",
                        "explanation": "No reversals are needed. The prefix of length 5 is [1, 2, 3, 4, 5], and its sum is 15."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>How can we maximize the sum of some prefixes of this array?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}