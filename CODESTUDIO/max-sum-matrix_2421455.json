{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 15155,
            "title": "Max Sum Matrix",
            "titleSlug": "max-sum-matrix_2421455",
            "content": "<h4 id=\"you-are-given-a-matrix-mat-of-size-m-n-and-an-integer-val-you-need-to-find-the-maximum-length-of-the-side-of-a-square-having-sum-not-greater-than-val\">You are given a matrix \u201cmat\u201d of size \u2018m\u2019 * \u2018n\u2019 and an integer \u201cval\u201d. You need to find the maximum length of the side of a square having sum not greater than \u201cval\u201d.</h4>\n\n<h4 id=\"if-there-is-no-such-square-return-0\">If there is no such square, return 0.</h4>\n\n<h5 id=\"for-example\">For Example :</h5>\n\n<pre><code>m = 4, n = 3, mat = {{1, 1, 1}, {2, 1, 2}, {1, 2, 1}, {1, 1, 1}}, val = 5.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/max_sum_matrix_example_1-12839.png\"/> </p>\n\n<pre><code>In this example, the maximum value of length of side which can be obtained is 2, Having the starting index: {0, 0} or {0, 1} or {2, 0} or {2, 1}.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 denoting the number of test cases, then each test case follows:\n\nThe first line of each test case contains two integers \u2018n\u2019 and \u2018m\u2019 denoting the dimensions of the matrix.\n\nThe next \u2018n\u2019 lines contain \u2018m\u2019 integer where the jth integer of the ith line denotes the value at \u201cmat[i][j]\u201d.\n\nThe next line contains a single integer \u201cval\u201d denoting the maximum sum needed.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print a single integer \u201cans\u201d denoting the maximum side of the square.\n\nOutput for each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You are not required to print anything; it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10    \n1 &lt;= N, M &lt;= 300\n1 &lt;= mat[i][j] &lt;= 5000\n1 &lt;= val &lt;= 50000\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n4 2\n1 1\n1 1\n1 1\n1 1\n25\n3 3\n3 3 3\n3 1 3\n3 3 3\n2\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>2\n1\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1 :</h5>\n\n<pre><code>In the first test case, val is high enough, so we can take a square of the maximum side, which is 2.\nHence the answer is 2.\n\nIn the second test case, val is 2, hence the only square matrix having the sum of value less than 2 is {{1}}, having side equal to 1.\nHence the answer is 1.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n1 5\n1 4 2 3 4\n100\n6 4\n1 8 7 3\n4 2 9 7\n1 2 7 1\n88 5 4 11\n4 2 6 2\n8 45 66 5\n11\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>1\n2\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 6,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a matrix 'mat' of size m x n and an integer 'val', determine the maximum possible side length of a square submatrix within 'mat' such that the sum of its elements is not greater than 'val'. If no such square exists, return 0.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N, M <= 300",
                    "1 <= mat[i][j] <= 5000",
                    "1 <= val <= 50000"
                ],
                "testcases": [
                    {
                        "input": "n = 4, m = 3, mat = {{1, 1, 1}, {2, 1, 2}, {1, 2, 1}, {1, 1, 1}}, val = 5",
                        "output": "2",
                        "explanation": "The largest square submatrix with a sum less than or equal to 5 has a side length of 2.  Examples include the submatrices starting at (0,0), (0,1), (2,0), and (2,1)."
                    },
                    {
                        "input": "n = 4, m = 2, mat = {{1, 1}, {1, 1}, {1, 1}, {1, 1}}, val = 25",
                        "output": "2",
                        "explanation": "The val is high enough that the maximum possible square size which is 2x2 can be selected."
                    },
                    {
                        "input": "n = 3, m = 3, mat = {{3, 3, 3}, {3, 1, 3}, {3, 3, 3}}, val = 2",
                        "output": "1",
                        "explanation": "The value of 'val' is 2. Only a 1x1 square with the element '1' at mat[1][1] has a sum less than or equal to 2. Therefore, the answer is 1."
                    },
                    {
                        "input": "n = 1, m = 5, mat = {{1, 4, 2, 3, 4}}, val = 100",
                        "output": "1",
                        "explanation": "Since the matrix has only one row, the maximum size of the square is 1. All individual numbers are less than 100."
                    },
                    {
                        "input": "n = 6, m = 4, mat = {{1, 8, 7, 3}, {4, 2, 9, 7}, {1, 2, 7, 1}, {8, 8, 5, 4}, {4, 2, 6, 2}, {8, 4, 6, 5}}, val = 11",
                        "output": "2",
                        "explanation": "There are 2x2 submatrices with sum <= 11. For example, the one with elements at mat[0][0], mat[0][1], mat[1][0] and mat[1][1] which has sum 1+8+4+2 = 15 > 11. But another submatrix can be formed starting with mat[2][0]. "
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Create a 2D prefix sum array, and check for every square matrix whether the sum is less than \u201cval\u201d or not.</p>",
            "<p>Use binary search to check if the current size of the matrix is less than or equal to \u201cval\u201d or not</p>"
        ],
        "relatedTopics": [
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Matrices (2D Arrays)",
                "slug": "matrices-(2d-arrays)"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}