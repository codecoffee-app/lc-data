{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12728,
            "title": "Maximise Dot Product",
            "titleSlug": "maximise-dot-product_1473847",
            "content": "<h4 id=\"you-are-given-two-arrays-of-positive-integers-arr1-and-arr2-of-length-n-and-m-respectively-where-n-m\">You are given two arrays of positive integers \u2018ARR1\u2019 and \u2018ARR2\u2019 of length \u2018N\u2019 and \u2018M\u2019 respectively, where \u2018N\u2019 &gt;= \u2018M\u2019.</h4>\n\n<h4 id=\"dot-product-of-2-arrays-arr1-and-arr2-of-size-n-is-defined-as-arr1-i-arr2-i-for-1-i-n\">Dot product of 2 arrays \u2018ARR1\u2019 and \u2018ARR2\u2019 of size \u2018N\u2019 is defined as \u2018ARR1[i]*ARR2[i]\u2019 for \u20181 &lt;= i &lt;= N\u2019.</h4>\n\n<h4 id=\"you-are-allowed-to-insert-a-certain-number-of-0s-in-arr2-to-make-its-size-equal-to-n-but-you-cannot-change-the-initial-ordering-of-its-elements-what-is-the-maximum-dot-product-of-arr1-and-arr2-you-can-achieve-by-doing-this-operation-optimally\">You are allowed to insert a certain number of 0s in \u2018ARR2\u2019 to make its size equal to \u2018N\u2019, but you cannot change the initial ordering of its elements. What is the maximum dot product of \u2018ARR1\u2019 and \u2018ARR2\u2019 you can achieve by doing this operation optimally?</h4>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains an integer \u2018T\u2019, which denotes the number of test cases to be run. Then, the \u2018T\u2019 test cases follow.\n\nThe first line of each test case contains two positive integers, \u2018N\u2019 and \u2018M\u2019 denoting the size of the array \u2018ARR1\u2019 and \u2018ARR2\u2019 respectively.\n\nThe second line of each test case contains \u2018N\u2019 space-separated positive integers denoting the elements of \u2018ARR1\u2019.\n\nThe third line of each test case contains \u2018M\u2019 space-separated positive integers denoting the elements of \u2018ARR2\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print a single positive integer, the maximum value of the dot product between \u2018ARR1\u2019 and \u2018ARR2\u2019.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= \u2018T\u2019 &lt;= 10\n1 &lt;= \u2018N\u2019, \u2018M\u2019 &lt;= 1000\n1 &lt;= \u2018ARR1[i]\u2019, \u2018ARR2[i]\u2019 &lt;= 1000\n\nWhere \u2018T\u2019 is the number of test cases, \u2018N\u2019, \u2018M\u2019 is the size of the arrays, and ARR1[i], ARR2[i] is the ith element of each of the arrays respectively.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>1\n3 1\n2 11 6\n5\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>55\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for sample input 1 :</h5>\n\n<pre><code>If we add 0s in the 1st and 3rd positions of \u2018ARR2\u2019, the array looks like [0, 5, 0]. The dot product then is equal to 0*2 + 5*11 + 0*6 = 55, which is the maximum dot product you can get.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n4 2\n5 2 4 9\n7 8\n3 2\n5 5 5\n6 7\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>107\n65\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation for sample input 2 :</h5>\n\n<pre><code>For test case 1, insert 0 in positions 2 and 3(1 based indexing).\nSo \u2018ARR1\u2019 = [5, 2, 4, 9] and \u2018ARR2\u2019 = [7, 0, 0, 8] and the final dot product equal to 107.\n\nFor test case 2, inserting one 0 at any position makes the dot product equal to 65.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 6,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two arrays, `arr1` of size 'N' and `arr2` of size 'M' (N >= M), containing positive integers. Your task is to maximize the dot product of `arr1` and `arr2` by inserting zero(s) into `arr2` to make its size equal to 'N'. The original order of elements in `arr2` must be preserved. Return the maximum possible dot product.",
                "constraints": [
                    "1 <= \u2018T\u2019 <= 10",
                    "1 <= \u2018N\u2019, \u2018M\u2019 <= 1000",
                    "1 <= \u2018ARR1[i]\u2019, \u2018ARR2[i]\u2019 <= 1000"
                ],
                "testcases": [
                    {
                        "input": "arr1 = [2, 11, 6], arr2 = [5], n = 3, m = 1",
                        "output": "55",
                        "explanation": "Inserting 0s at the first and third positions of arr2 gives [0, 5, 0]. Dot product is 0*2 + 5*11 + 0*6 = 55."
                    },
                    {
                        "input": "arr1 = [5, 2, 4, 9], arr2 = [7, 8], n = 4, m = 2",
                        "output": "107",
                        "explanation": "Inserting 0s at positions 2 and 3 (1-based indexing) gives arr2 = [7, 0, 0, 8]. Dot product is 5*7 + 2*0 + 4*0 + 9*8 = 107."
                    },
                    {
                        "input": "arr1 = [5, 5, 5], arr2 = [6, 7], n = 3, m = 2",
                        "output": "65",
                        "explanation": "Inserting one 0 at any position will result in a dot product of 65 (e.g., arr2 = [6, 0, 7] or [0, 6, 7] or [6, 7, 0] all give dot product of 65 since 5*6+ 5*7 = 30+35 = 65)"
                    },
                    {
                        "input": "arr1 = [1, 2, 3, 4, 5], arr2 = [1, 2, 3, 4, 5], n = 5, m = 5",
                        "output": "55",
                        "explanation": "No need to insert any zeros. Dot product is 1*1 + 2*2 + 3*3 + 4*4 + 5*5 = 1+4+9+16+25 = 55"
                    },
                    {
                        "input": "arr1 = [10, 20, 30], arr2 = [5], n = 3, m = 1",
                        "output": "150",
                        "explanation": "arr2 can be represented as [0, 5, 0] or [0, 0, 5] or [5,0,0]. If arr2 = [0, 5, 0] dot product is 10*0 + 20*5 + 30*0 = 100. If arr2 = [0,0,5] dot product is 10*0 + 20*0 + 30*5 = 150. if arr2=[5,0,0] dot product is 10*5 + 20*0 + 30*0 = 50. Thus max dot product is 150"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to find a recursive approach.</p>",
            "<p>We are repeatedly doing some of the operations in recursion. Try to use memoization.</p>",
            "<p>Use Dynamic programming but this time iteratively.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}