{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 15434,
            "title": "Maximize Profit",
            "titleSlug": "maximize-profit_2460783",
            "content": "<h4 id=\"you-are-given-a-tree-having-n-nodes-where-each-node-has-some-coins-c-i-attached-to-it\">You are given a tree having \u2018N\u2019 nodes, where each node has some coins \u2018C[i]\u2019, attached to it.</h4>\n\n<h4 id=\"you-are-allowed-to-collect-the-coins-from-any-node-your-task-is-to-maximize-the-sum-of-chosen-coins-given-that-you-cannot-choose-coins-from-adjacent-nodes-i-e-nodes-which-are-directly-connected-by-an-edge\">You are allowed to collect the coins from any node. Your task is to maximize the sum of chosen coins given that you cannot choose coins from adjacent nodes(i.e., nodes which are directly connected by an edge).</h4>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019, denoting the number of test cases.\n\nThe first line of each test case contains one integer \u2018N\u2019, denoting the number of nodes in the tree.\n\nThe following line contains an array \u2018C\u2019 of \u2018N\u2019 spaced integers denoting the number of coins attached to each node.\n\nThe following line \u2018N\u2019 - 1 contains two integers \u2018x\u2019 and \u2018y\u2019 denoting that there is an edge between node \u2018x\u2019 and node \u2018y\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print a single integer denoting the maximum coins you can collect.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You don&#39;t have to take input or output you just have to complete the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= N &lt;= 10^5\n1 &lt;= C[i] &lt;= 10^9 \n1 &lt;= x, y &lt;= N \n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n4\n1 2 5 4\n1 2\n2 3\n2 4\n3\n6 5 4\n1 2\n1 3\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>10\n9\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1:</h5>\n\n<pre><code>In the first test case, you can take 1st, 3rd and 4th node which will give you a total of 10 coins.\nIn the second test case, you can take the 2nd and 3rd nodes which will give you a total of 9 coins.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n3 \n9 1 3 \n1 2\n1 3\n3\n2 2 2\n1 2\n2 3\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>9  \n4\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": -10,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a tree with N nodes, each having a coin value C[i]. Maximize the total coin value collected from non-adjacent nodes.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= N <= 10^5",
                    "1 <= C[i] <= 10^9",
                    "1 <= x, y <= N",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "4\n1 2 5 4\n1 2\n2 3\n2 4",
                        "output": "10",
                        "explanation": "Selecting nodes 1, 3, and 4 yields a maximum coin value of 1 + 5 + 4 = 10.  Other combinations result in lower totals because adjacent nodes cannot both be selected."
                    },
                    {
                        "input": "3\n6 5 4\n1 2\n1 3",
                        "output": "9",
                        "explanation": "Selecting nodes 2 and 3 yields a maximum coin value of 5 + 4 = 9. Selecting node 1 yields only 6, and selecting any single node does not maximize the coin total."
                    },
                    {
                        "input": "3\n9 1 3\n1 2\n1 3",
                        "output": "9",
                        "explanation": "Selecting node 1 yields the maximum coin value of 9.  Because nodes 2 and 3 are adjacent to node 1, they cannot be selected in conjunction with node 1, and selecting them individually or together produces a smaller sum."
                    },
                    {
                        "input": "3\n2 2 2\n1 2\n2 3",
                        "output": "4",
                        "explanation": "Selecting nodes 1 and 3 yields the maximum coin value of 2+2 = 4. Selecting only the second node yields 2, which is not the maximum"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can we check all possible ways to take the coins and find the maximum possible way?</p>",
            "<p>Can you prevent recalculating the values for the same subtree?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Trees",
                "slug": "trees"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}