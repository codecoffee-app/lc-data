{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10492,
            "title": "Maximize score",
            "titleSlug": "maximize-score_1229509",
            "content": "<h4 id=\"you-are-given-an-array-arr-of-size-n-your-task-is-to-maximize-your-score-by-doing-the-following-operation-at-most-k-times\">You are given an array \u2018arr\u2019 of size \u2018N\u2019. Your task is to maximize your score by doing the following operation at most \u2018K\u2019 \u2013 times.</h4>\n\n<pre><code>1. Choose an element from the start or end of the array and the value of the element to your score.\n2. Remove the element from the array you have chosen in step \u2013 1.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>Initially, you have a score of zero.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer &#39;T&#39; representing the number of test cases.\n\nThe first line of each test case contains two space-separated integers \u2018N\u2019 and \u2018K\u2019, denoting the length of the array and the maximum number of operations you can make respectively.\nThe second line of each test case contains \u2018N\u2019 space-separated integers denoting the values of array elements.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print the maximum score you can make.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= N &lt;= 5000\n1 &lt;= K &lt;= N\n1 &lt;= arr[ i ]  &lt;= 10^5\n\nWhere \u2018T\u2019 is the number of test cases, \u2018N\u2019  is the size of the array, \u2018K\u2019 is the maximum number of operations you can make, and \u2018arr[ i ]\u2019 is the value of the ith element of the array.\n\nTime Limit: 1 sec\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code> You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n5 1\n10 2 8 9 2\n5 2\n10 5 6 7 9\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>10 \n19\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1:</h5>\n\n<pre><code>Test Case 1 :  \nGiven N = 5 and K = 1.\narr = [10, 2, 8, 9, 2]\nInitial score = 0\nIn the first operation choose 10 from the start and add it to the score.\nSo final score = 10.\n\nTest Case 2 : \nGiven N = 5 and K = 2.\narr = [10, 5, 6, 7, 9]\nInitial score = 0\nIn the first operation choose 10 from the start and add it to the score.\nSo score = 10 and arr = [5, 6, 7, 9]\nIn the second operation choose 9 from the end and add it to the score.\nSo final score = 10 + 9 = 19.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n4 4\n10 2 2 2\n4 3\n10 1 7 9\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>16\n26\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-2\">Explanation of Sample Input 2:</h5>\n\n<pre><code>Test Case 1 :  \nGiven N = 4 and K = 4.\narr = [10, 2, 2, 2]\nInitial score = 0\nHere  N = K. So we can add all elements to our score by always picking array elements from the start.\nSo final score = 10 + 2 + 2 + 2 = 16.\n\nTest Case 2 : \nGiven N = 4 and K = 3.\narr = [10, 1, 7, 9]\nInitial score = 0\nIn the first operation choose 10 from the start and add it to the score.\nSo score = 10 and arr = [1, 7, 9]\nIn the second operation choose 9 from the end and add it to the score.\nSo score = 10 + 9 = 19 and and arr = [1, 7]\nIn the third operation choose 7 from the end and add it to the score.\nSo final score = 19 + 7 = 26.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 7,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array 'arr' of size 'N', the task is to maximize your score by performing the following operation at most 'K' times:\n\n1.  Choose an element from either the beginning or the end of the array and add its value to your score.\n2.  Remove the selected element from the array.\n\nInitially, your score is zero. Find the maximum possible score after at most 'K' operations.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= N <= 5000",
                    "1 <= K <= N",
                    "1 <= arr[i] <= 10^5",
                    "Where \u2018T\u2019 is the number of test cases, \u2018N\u2019 is the size of the array, \u2018K\u2019 is the maximum number of operations you can make, and \u2018arr[ i ]\u2019 is the value of the ith element of the array.",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "5 1\n10 2 8 9 2",
                        "output": "10",
                        "explanation": "Given N = 5 and K = 1, and arr = [10, 2, 8, 9, 2]. Initially score = 0. Choose 10 from the start and add it to the score, resulting in a final score of 10."
                    },
                    {
                        "input": "5 2\n10 5 6 7 9",
                        "output": "19",
                        "explanation": "Given N = 5 and K = 2, and arr = [10, 5, 6, 7, 9]. Initially score = 0. Choose 10 from the start, score becomes 10 and arr = [5, 6, 7, 9]. Then, choose 9 from the end, so final score = 10 + 9 = 19."
                    },
                    {
                        "input": "4 4\n10 2 2 2",
                        "output": "16",
                        "explanation": "Given N = 4 and K = 4, and arr = [10, 2, 2, 2]. Since N = K, add all elements to the score by picking from the start. Final score = 10 + 2 + 2 + 2 = 16."
                    },
                    {
                        "input": "4 3\n10 1 7 9",
                        "output": "26",
                        "explanation": "Given N = 4 and K = 3, and arr = [10, 1, 7, 9]. Choose 10 from the start, score becomes 10 and arr = [1, 7, 9]. Then, choose 9 from the end, score becomes 19 and arr = [1, 7]. Finally, choose 7 from the end, so the final score = 19 + 7 = 26."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Think in the reverse direction instead of finding elements that you need to add, find the elements that you need to skip.</p>",
            "<p>Try to optimize the previous approach using the sliding window technique.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}