{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12290,
            "title": "Maximize the average working ratio",
            "titleSlug": "maximize-the-average-working-ratio_1459122",
            "content": "<h4 id=\"you-are-given-an-array-bulbs-of-size-n-there-are-n-shops-and-for-each-shop-i-bulbs-i-works-total-where-works-is-the-number-of-working-bulbs-and-total-is-the-total-number-of-bulbs-in-the-shop-i\">You are given an array \u2018BULBS\u2019 of size \u2018N\u2019. There are \u2018N\u2019 shops and for each shop \u2018i\u2019, \u2018BULBS[i] = [WORKS, TOTAL]\u2019, where \u2018WORKS\u2019 is the number of working bulbs, and \u2018TOTAL\u2019 is the total number of bulbs in the shop \u2018i\u2019.</h4>\n\n<h4 id=\"you-are-also-given-an-integer-extra-these-are-the-number-of-extra-bulbs-that-are-guaranteed-to-be-working-you-want-to-assign-the-extra-bulbs-to-the-shops-in-a-way-that-maximizes-the-average-working-ratio-across-all-the-shops\">You are also given an integer \u2018EXTRA\u2019. These are the number of extra bulbs that are guaranteed to be working. You want to assign the extra bulbs to the shops in a way that maximizes the average working ratio across all the shops.</h4>\n\n<h4 id=\"the-working-ratio-of-a-shop-is-defined-as-works-total-the-average-working-ratio-is-the-sum-of-the-working-ratios-of-all-the-shops-divides-by-n-your-task-is-to-find-the-maximum-possible-average-working-ratio\">The working ratio of a shop is defined as \u2018WORKS/TOTAL\u2019. The average working ratio is the sum of the working ratios of all the shops divides by \u2018N\u2019. Your task is to find the maximum possible average working ratio.</h4>\n\n<h5 id=\"example\">Example:</h5>\n\n<pre><code>\u2018N = 3\u2019, \u2018EXTRA = 2\u2019\n\u2018BULBS = [ [2, 3], [3, 5], [2, 2] ]\nTo get the maximum average working ratio, assign one bulb to shop \u20180\u2019 and one bulb to shop \u20181\u2019. So, the average working ratio will be equal to \u2018(3/4 + 4/6 + 2/2) / 3 = 0.80556\u2019.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>1. The answers within \u201810^(-5)\u2019 of the actual answer will be accepted.\n2. You do not need to print anything, it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"input-format\">Input format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 which denotes the number of test cases. Then, the \u2018T\u2019 test cases follow.\n\nEach test case\u2019s first line contains two integers, \u2018N\u2019 and \u2018EXTRA\u2019, denoting the number of shops and extra bulbs. Then, \u2018n\u2019 lines follow.\nEach line contains two integers, \u2018WORKS\u2019 and \u2018TOTAL\u2019, denoting an element in the array \u2018BULBS\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output format:</h5>\n\n<pre><code>For every test case, return the maximum possible average working ratio. The printed output will be up to \u20185\u2019 decimal places.\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N, EXTRA &lt;= 10^3\n1 &lt;= WORKS &lt;= TOTAL &lt;= 10^5\nEach element of \u2018BULBS\u2019 contains exactly two integers.\n\nWhere \u2018T\u2019 is the number of test cases, \u2018N\u2019 is the number of shops, \u2018EXTRA\u2019 is the number of extra bulbs, and \u2018[WORKS, TOTAL]\u2019 represents an element in the \u2018BULBS\u2019 array.\n\nTime limit: 1 second\n</code></pre>\n<h4 id=\"sample-input-1\">Sample input 1:</h4>\n\n<pre><code>2\n4 3\n1 2\n2 4\n3 4\n1 1\n3 2\n1 2\n2 4\n4 8\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample output 1:</h4>\n\n<pre><code>0.77500\n0.58889\n</code></pre>\n\n<h4 id=\"explanation-of-sample-input-1\">Explanation of sample input 1:</h4>\n\n<pre><code>Test Case 1:\n\u2018N = 4\u2019, \u2018EXTRA = 3\u2019\n\u2018BULBS = [ [1, 2], [2, 4], [3, 4], [1, 1] ]\u2019\n\nTo get the maximum average working ratio, assign one bulb to shop \u20181\u2019 and two bulbs to shop \u20183\u2019. So, the average working ratio will be equal to \u2018(3/4 + 3/5 + 3/4 + 1/1) / 4 = 0.77500\u2019.\n\nTest Case 2:\n\u2018N = 3\u2019, \u2018EXTRA = 2\u2019\n\u2018BULBS = [ [1, 2], [2, 4], [4, 8] ]\u2019\n\nTo get the maximum average working ratio, assign one bulb to shop \u20180\u2019 and one bulb to shop \u20181\u2019. So, the average working ratio will be equal to \u2018(2/3 + 3/5 + 4/8) / 3 = 0.58889\u2019.\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample input 2:</h4>\n\n<pre><code>2\n3 3\n1 2\n2 3\n3 4\n3 5\n1 1\n2 2\n3 3\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample output 2:</h4>\n\n<pre><code>0.75000\n1.00000\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 15,
            "dislikes": "NA",
            "rephrased": {
                "body": "You are given an array 'BULBS' of size 'N' representing 'N' shops. For each shop 'i', 'BULBS[i] = [WORKS, TOTAL]', where 'WORKS' is the number of working bulbs and 'TOTAL' is the total number of bulbs in shop 'i'. You are also given an integer 'EXTRA', representing extra working bulbs that can be assigned to shops. The goal is to assign these extra bulbs to shops to maximize the average working ratio across all shops. The working ratio of a shop is defined as 'WORKS / TOTAL'. The average working ratio is the sum of the working ratios of all the shops divided by 'N'. Find the maximum possible average working ratio.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N, EXTRA <= 10^3",
                    "1 <= WORKS <= TOTAL <= 10^5",
                    "Each element of \u2018BULBS\u2019 contains exactly two integers.",
                    "Where \u2018T\u2019 is the number of test cases, \u2018N\u2019 is the number of shops, \u2018EXTRA\u2019 is the number of extra bulbs, and \u2018[WORKS, TOTAL]\u2019 represents an element in the \u2018BULBS\u2019 array.",
                    "Time limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "4 3\n1 2\n2 4\n3 4\n1 1\n3 2\n1 2\n2 4\n4 8",
                        "output": "0.77500\n0.58889",
                        "explanation": "Test Case 1: N = 4, EXTRA = 3, BULBS = [[1, 2], [2, 4], [3, 4], [1, 1]]. Assigning one bulb to shop 1 and two bulbs to shop 3 maximizes the average working ratio to (3/4 + 3/5 + 3/4 + 1/1) / 4 = 0.77500.\n\nTest Case 2: N = 3, EXTRA = 2, BULBS = [[1, 2], [2, 4], [4, 8]]. Assigning one bulb to shop 0 and one bulb to shop 1 maximizes the average working ratio to (2/3 + 3/5 + 4/8) / 3 = 0.58889."
                    },
                    {
                        "input": "3 3\n1 2\n2 3\n3 4\n3 5\n1 1\n2 2\n3 3",
                        "output": "0.75000\n1.00000",
                        "explanation": "Test Case 1: N = 3, EXTRA = 3, BULBS = [[1, 2], [2, 3], [3, 4]].\nTest Case 2: N = 3, EXTRA = 5, BULBS = [[1, 1], [2, 2], [3, 3]]."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Greedily assign each extra blub to the best current choice.</p>",
            "<p>Can we optimize the greedy approach using some data structure?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}