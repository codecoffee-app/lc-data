{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 15378,
            "title": "Maximize the Gold",
            "titleSlug": "maximize-the-gold_2443801",
            "content": "<h4 id=\"ninja-and-his-friend-have-found-a-hidden-treasure-the-treasure-has-n-bags-and-each-bag-has-some-gold-coins-in-it-ninja-thought-of-an-interesting-game-both-players-will-play-alternatively-in-each-turn-the-player-will-choose-to-pick-either-the-first-sack-or-the-last-sack-and-the-picked-sack-of-gold-will-be-removed-from-the-treasure-the-ninja-will-start-the-game-and-wants-to-collect-the-maximum-coins-possible-both-players-will-play-optimally-can-you-help-ninja-to-find-the-maximum-amount-of-coins\">Ninja and his friend have found a hidden treasure. The treasure has \u2018N\u2019 bags and each bag has some gold coins in it. Ninja thought of an interesting game, both players will play alternatively. In each turn, the player will choose to pick either the first sack or the last sack and the picked sack of gold will be removed from the treasure. The ninja will start the game and wants to collect the maximum coins possible. Both players will play optimally. Can you help Ninja to find the maximum amount of coins?</h4>\n\n<h4 id=\"you-are-given-an-array-coins-having-n-integers-corresponding-to-the-number-of-coins-in-each-sack-your-task-is-to-find-the-maximum-amount-ninja-can-collect-by-playing-this-game\">You are given an array \u2018COINS\u2019 having \u2018N\u2019 integers corresponding to the number of coins in each sack. Your task is to find the maximum amount Ninja can collect by playing this game.</h4>\n\n<h5 id=\"for-example\">For Example</h5>\n\n<pre><code>If the given \u2018COINS\u2019 array is [9,6,1,10], then Ninja will collect 10 and 6(Total: 16) and his friend will collect 9 and 1.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of the input contains an integer, &#39;T,\u2019 denoting the number of test cases.\n\nThe first line of each test case contains a single integer,&#39; N\u2019 denoting the number of sacks in the treasure.\n\nThe next line of each test case has \u2018N\u2019 values of \u2018COINS\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, return an integer corresponding to the maximum coins  Ninja can collect.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 1000.\n1 &lt;= COINS[i] &lt;= 1000\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n4\n9 6 1 10\n4\n5 2 8 6 \n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>16\n13\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of sample input 1:</h5>\n\n<pre><code>For the first test case,\nNinja will pick the sacks having 10 and 6 coins. So the amount of maximum coins is 16.\nHence the answer is 13.\n\nFor the second test case:\nNinja will pick 5 coins in his first turn and 8 in his second turn. So the amount of maximum coins is 13.\nHence the answer is 13.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n7\n8 3 10 3 2 8 1  \n5\n2 1 3 4 1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>21\n6\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 6,
            "dislikes": "NA",
            "rephrased": {
                "body": "Two players are playing a game with a row of 'N' sacks, each containing a certain number of gold coins. Players take turns picking either the first or last sack from the row until all sacks are taken. The goal is to maximize the number of coins collected. Given an array 'COINS' representing the number of coins in each sack, and knowing that both players play optimally, determine the maximum amount of coins the first player (Ninja) can collect.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 1000",
                    "1 <= COINS[i] <= 1000"
                ],
                "testcases": [
                    {
                        "input": "n = 4, coins=[9,6,1,10]",
                        "output": "16",
                        "explanation": "Ninja will pick the sacks having 10 and 6 coins. So the amount of maximum coins is 16."
                    },
                    {
                        "input": "n = 4, coins=[5,2,8,6]",
                        "output": "13",
                        "explanation": "Ninja will pick 5 coins in his first turn and 8 in his second turn. So the amount of maximum coins is 13."
                    },
                    {
                        "input": "n = 7, coins=[8,3,10,3,2,8,1]",
                        "output": "21",
                        "explanation": "The optimal strategy results in Ninja collecting 21 coins."
                    },
                    {
                        "input": "n = 5, coins=[2,1,3,4,1]",
                        "output": "6",
                        "explanation": "The optimal strategy results in Ninja collecting 6 coins."
                    },
                    {
                        "input": "n = 3, coins=[1, 10, 2]",
                        "output": "11",
                        "explanation": "Ninja can take either the first (1) or the last (2).  If he takes the first (1), the other player will take 10, leaving 2 for Ninja.  If he takes the last (2), the other player will take 10, leaving 1 for Ninja. So, Ninja starts by taking 10 or 2 (it depends). He collects either 11 or 3. He must collect maximum which is 11."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to divide the problem into subproblems and calculate the maximum coins for smaller subarrays.</p>",
            "<p>Try to divide the problem into subproblems and calculate the answers for smaller subarray and store them for further computation.</p>",
            "<p>Think of an iterative solution.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}