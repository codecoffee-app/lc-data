{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12577,
            "title": "Maximize The Nice Divisor",
            "titleSlug": "maximize-the-nice-divisor_1466955",
            "content": "<h4 id=\"there-is-a-fight-between-spiderman-and-the-zombie-spiderman-has-to-protect-the-planet-earth-and-for-this-he-has-to-give-punches-in-the-head-of-the-zombie-the-spiderman-is-given-an-integer-n-and-he-has-to-construct-a-number-num-such-that-the-count-of-nice-divisors-of-num-is-maximum-and-the-constructed-number-has-at-most-n-prime-factors-it-is-not-necessary-for-all-prime-factors-of-num-to-be-distinct-a-divisor-of-num-is-called-nice-if-it-is-divisible-by-every-prime-factor-of-num-assuming-yourselves-as-spiderman-protect-the-planet-earth-by-returning-the-nice-divisors-of-num\">There is a fight between Spiderman and the Zombie. Spiderman has to protect the planet earth, and for this, he has to give punches in the head of the zombie. The Spiderman is given an integer \u2018N\u2019 and he has to construct a number \u2018Num\u2019 such that the count of nice divisors of \u2018NUM\u2019 is maximum and the constructed number has at most &#39;N&#39; prime factors. It is not necessary for all prime factors of \u2018NUM\u2019 to be distinct. A divisor of \u2018NUM\u2019 is called nice if it is divisible by every prime factor of \u2018NUM\u2019. Assuming yourselves as spiderman protect the planet earth by returning the nice divisors of \u2018NUM\u2019.</h4>\n\n<h4 id=\"return-the-number-of-nice-divisors-of-num-since-that-number-can-be-too-large-return-it-modulo-10-9-7\">Return the number of nice divisors of \u2018NUM\u2019. Since that number can be too large, return it modulo 10^9 + 7.</h4>\n\n<h4 id=\"for-example\">For Example:</h4>\n\n<pre><code>If N = 12, then its prime factors are [2, 2, 3], then 6 and 12 are nice divisors, while 3, 4, and 2 are not.\n</code></pre>\n\n<h5 id=\"input-format\">Input format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019, denoting the number of test cases. \n\nThe first line of each test case contains an integer \u2018N\u2019, denoting the count of prime factors that Spiderman has.\n</code></pre>\n\n<h5 id=\"output-format\">Output format:</h5>\n\n<pre><code>For each test case, return the count of nice divisors of &#39;NUM&#39; that will be constructed.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 1000\n1 &lt;= N &lt;= 10^9\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n5\n4\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>6\n4\n</code></pre>\n\n<h5 id=\"explanation-1\">Explanation 1:</h5>\n\n<pre><code>For the first test case, If we take \u2018Num\u2019 equal to 72, then its prime factors are [2, 2, 2, 3, 3], and the divisors of 72 are [1, 2, 3, 4, 6, 8, 9, 12, 18, 24, 36, 72]. Among all the divisors, the nice divisors are [6, 12, 18, 24, 36, 72]. So the output is 6.\n\nFor the second test case, If we take \u2018Num\u2019 equal to 36, then its prime factors are [2, 2, 3, 3], and the divisors of 36 are [1, 2, 3, 4, 6, 9, 12, 18, 36]. Among all the divisors, the nice divisors are [6, 12, 18, 36]. So the output is 4. \n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n8\n7\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code> 18\n 12\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -7,
            "dislikes": "NA",
            "rephrased": {
                "body": "Spiderman faces a challenge: maximizing the 'nice divisors' of a number `NUM` while limiting its prime factors to at most `N`. A 'nice divisor' is divisible by all of `NUM`'s prime factors.  As Spiderman, determine the maximum number of nice divisors of `NUM`, modulo 10^9 + 7, given `N`, the maximum allowed number of prime factors for `NUM`.",
                "constraints": [
                    "1 <= T <= 1000",
                    "1 <= N <= 10^9",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "5",
                        "output": "6",
                        "explanation": "If N = 5, one optimal choice is Num = 72 (2 * 2 * 2 * 3 * 3). The prime factors are [2, 2, 2, 3, 3]. The divisors of 72 are [1, 2, 3, 4, 6, 8, 9, 12, 18, 24, 36, 72]. The nice divisors, divisible by both 2 and 3, are [6, 12, 18, 24, 36, 72]. Thus, the count is 6."
                    },
                    {
                        "input": "4",
                        "output": "4",
                        "explanation": "If N = 4, one optimal choice is Num = 36 (2 * 2 * 3 * 3). The prime factors are [2, 2, 3, 3]. The divisors of 36 are [1, 2, 3, 4, 6, 9, 12, 18, 36]. The nice divisors, divisible by both 2 and 3, are [6, 12, 18, 36]. Thus, the count is 4."
                    },
                    {
                        "input": "8",
                        "output": "18",
                        "explanation": null
                    },
                    {
                        "input": "7",
                        "output": "12",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to break the N as a sum of 3\u2019s.</p>",
            "<p>Try to break the N into parts such that the sum of the parts is equal to N and the product of them is maximized.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}