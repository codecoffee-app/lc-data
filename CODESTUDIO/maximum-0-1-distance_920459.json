{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8872,
            "title": "Maximum 0-1  Distance",
            "titleSlug": "maximum-0-1-distance_920459",
            "content": "<h4 id=\"you-are-given-an-n-m-binary-matrix-considering-for-every-0-cell-cell-with-value-0-the-distance-from-this-cell-to-its-nearest-1-cell-cell-with-value-1-is-di-you-need-to-find-the-maximum-value-of-di-among-all-values-of-di-formally-if-the-minimum-distance-from-an-ith-0-cell-to-any-1-cell-is-di-you-need-to-find-max-di-where-i-belongs-to-the-set-of-all-0-cells-in-the-matrix\">You are given an N*M binary matrix, considering for every 0-cell(cell with value = 0) the distance from this cell to its nearest 1-cell(cell with value = 1) is &#39;di&#39;, you need to find the maximum value of &#39;di&#39; among all values of &#39;di&#39;. Formally, if the minimum distance from an &#39;ith&#39; 0-cell to any 1-cell is \u2018di\u2019, you need to find max(di), where i belongs to the set of all 0-cells in the matrix.</h4>\n\n<h4 id=\"distance-between-cells-i-j-and-a-b-is-given-as-i-a-j-b-i-e-the-manhattan-distance-is-considered-here\">Distance between cells (i,j) and (a,b) is given as (|i-a| + |j-b|) i.e the manhattan distance is considered here.</h4>\n\n<p><img src=\"https://files.codingninjas.in/ex31-6245.PNG\" alt=\"altImage\"></p>\n\n<p>Here, the arrows starting from the 0-cell\u2019s point towards their corresponding nearest one cell, and among all of these, the arrow in purple and orange gives the maximum distance, i.e., 2.</p>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>1) Binary matrix of size N*M is a matrix with N rows and M columns, in which all the cells have either value 0 or 1.\n2) Nearest 1-cell from a 0-cell is the cell that contains 1 and is at least a distance from the 0-cell being considered among all the other cells. For example consider the matrix {{0,1},{0,1}}. Here the nearest 1-cell for the 0-cell at index(0,0) is the 1-cell at index (0,1) because this cell is at least distance from the 0-cell being considered as the distance from the other 1-cell at index(1,1) is 2, whereas the distance from the 1-cell at index (0,1) is 1.\n3) If there are no 1-cells or no 0-cells in the matrix, return -1.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of the input contains an integer &#39;T&#39; denoting the number of test cases. Then &#39;T&#39; test cases follow:\n\nThe first line of each test case contains two space-separated integers, &#39;N&#39; and &#39;M&#39;, where &#39;N&#39;  is the number of rows in the given matrix and &#39;M&#39; is the number of columns in the given matrix.\n\nThen &#39;N&#39; lines follow for each test case:\n\nEach line contains &#39;M&#39; space-separated integers(either 1 or 0).\n\nFor more clarity, please refer to the sample input.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>Each test case&#39;s the only line of output consists of an integer &#39;X&#39;, denoting the maximum possible distance from a 0-cell to its nearest 1-cell.\n\nOutput for each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, and it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= N &lt;= 100\n1 &lt;= M &lt;= 100\n\nwhere &#39;T&#39; is the number of test cases, &#39;N&#39; is the number of rows in the given matrix, and &#39;M&#39; is the number of columns in the given matrix.\nTime Limit: 1 sec.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1\n2 2\n0 1\n0 0\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>2\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for sample input 1:</h5>\n\n<pre><code>The 0-cells are at positions (0,0), (1,0), and (1,1) respectively. \nThe 1-cell nearest to the 0-cell at position (0,0) is at (0,1), distance=1.\nThe 1-cell nearest to the 0-cell at position (1,0) is at (0,1), distance=2.\nThe 1-cell nearest to the 0-cell at position (1,1) is at (0,1), distance=1.\nSo, the maximum of all distances is 2, which is the answer in our case.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\n3 3\n0 0 1\n0 1 0\n0 0 0\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>2\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation for sample input 2:</h5>\n\n<pre><code>The 1-cell at (1,1) is nearest to the 0-cell at (2,0), giving us the maximum distance.  \n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 1,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an N*M binary matrix, where each cell contains either 0 or 1, the task is to find the maximum Manhattan distance from any 0-cell to its nearest 1-cell. The Manhattan distance between cells (i, j) and (a, b) is defined as |i-a| + |j-b|.\n\nIf there are no 1-cells or no 0-cells in the matrix, return -1.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= N <= 100",
                    "1 <= M <= 100",
                    "T is the number of test cases.",
                    "N is the number of rows in the given matrix.",
                    "M is the number of columns in the given matrix.",
                    "Time Limit: 1 sec."
                ],
                "testcases": [
                    {
                        "input": "1\n2 2\n0 1\n0 0",
                        "output": "2",
                        "explanation": "Consider the 0-cells at (0,0), (1,0), and (1,1).\nThe nearest 1-cell to (0,0) is (0,1), distance = |0-0| + |0-1| = 1.\nThe nearest 1-cell to (1,0) is (0,1), distance = |1-0| + |0-1| = 2.\nThe nearest 1-cell to (1,1) is (0,1), distance = |1-0| + |1-1| = 1.\nThe maximum distance is max(1, 2, 1) = 2."
                    },
                    {
                        "input": "1\n3 3\n0 0 1\n0 1 0\n0 0 0",
                        "output": "2",
                        "explanation": "Consider the 0-cells. \nThe maximum distance occurs from the cell (2,0) to the cell (0,2) or (1,1) which are the 1s closest to (2,0) which are at a distance of 2.\n"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Find all the valid distances and then take the maximum.</p>",
            "<p>Try to optimize the time complexity of the above approach by using BFS traversal.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Matrices (2D Arrays)",
                "slug": "matrices-(2d-arrays)"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}