{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8686,
            "title": "Maximum 1s",
            "titleSlug": "maximum-1s_893303",
            "content": "<h4 id=\"you-are-given-a-matrix-arr-with-dimensions-n-m-and-containing-only-0s-and-1s-where-each-row-is-sorted\">You are given a matrix \u2018ARR\u2019 with dimensions \u2018N\u2019 * \u2018M\u2019 and containing only 0s and 1s where each row is sorted.</h4>\n\n<h4 id=\"your-task-is-to-find-the-index-of-the-row-with-a-maximum-number-of-1s-in-it-rows-and-columns-are-0-indexed-based\">Your task is to find the index of the row with a maximum number of 1s in it. Rows and columns are 0-indexed based.</h4>\n\n<h5 id=\"input-format\">Input format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019, denoting the number of test cases.\n\nThe first line of each test case contains two space-separated integers, \u2018N\u2019 and \u2018M\u2019, denoting the number of rows and the number of columns respectively.\n\nThen each of the next N lines contains M elements. \n</code></pre>\n\n<h5 id=\"output-format\">Output format:</h5>\n\n<pre><code>For each test case, return the index of the row, which has the maximum number of 1\u2019s in it. If more than one row has the same number of 1\u2019s, then return the row with the lowest index(consider 0-based indexing).\n\nOutput for each test case is printed on a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 1000\n1 &lt;= N, M &lt;= 500\n\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n1 1\n1\n3 3\n0 0 1\n1 1 1\n0 1 1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>0\n1\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for sample input 1:</h5>\n\n<pre><code>For the first test case, \nSince the matrix has one row and one column. The only row, i.e., the 0th row, contains a 1. So the output is 0. \n\nFor the second test case, \nSince the matrix has three rows and three columns. The number of ones in the 0th row is 1. The number of ones in the 1st row is 3, and the number of ones in the 2nd row is 2. So the output is 1.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n3 2\n0 1\n0 1\n0 0\n4 4\n0 0 1 1\n0 0 0 0\n1 1 1 1 \n0 0 1 1 \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>0\n2\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation for sample input 2:</h5>\n\n<pre><code>For the first test case, \nSince the matrix has 3 rows and 2 columns. The number of ones in the 0th row is 1. The number of ones in the 1st row is 1, and the number of ones in the 2nd row is 0. So the output is 0.\n\nFor the second test case, \nSince the matrix has 4 rows and 4 columns. The number of ones in the 0th row is 2. The number of ones in the 1st row is 0. The number of ones in the 2nd row is 4 and the number of ones in the 3rd row is 2. So the output is 2.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 1,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a matrix 'ARR' of dimensions 'N' x 'M' containing only 0s and 1s, where each row is sorted in non-decreasing order, determine the index of the row with the maximum number of 1s. If multiple rows have the same maximum number of 1s, return the index of the row with the smallest index.",
                "constraints": [
                    "1 <= T <= 1000",
                    "1 <= N, M <= 500",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "arr = [[1]]",
                        "output": "0",
                        "explanation": "The matrix has one row and one column. The 0th row contains a 1. So the output is 0."
                    },
                    {
                        "input": "arr = [[0, 0, 1], [1, 1, 1], [0, 1, 1]]",
                        "output": "1",
                        "explanation": "The number of ones in the 0th row is 1. The number of ones in the 1st row is 3, and the number of ones in the 2nd row is 2. So the output is 1."
                    },
                    {
                        "input": "arr = [[0, 1], [0, 1], [0, 0]]",
                        "output": "0",
                        "explanation": "The number of ones in the 0th row is 1. The number of ones in the 1st row is 1, and the number of ones in the 2nd row is 0. So the output is 0."
                    },
                    {
                        "input": "arr = [[0, 0, 1, 1], [0, 0, 0, 0], [1, 1, 1, 1], [0, 0, 1, 1]]",
                        "output": "2",
                        "explanation": "The number of ones in the 0th row is 2. The number of ones in the 1st row is 0. The number of ones in the 2nd row is 4 and the number of ones in the 3rd row is 2. So the output is 2."
                    },
                    {
                        "input": "arr = [[0,0,0],[0,0,0],[0,0,0]]",
                        "output": "0",
                        "explanation": "All rows have zero 1s. The first row is selected"
                    },
                    {
                        "input": "arr = [[1,1,1],[1,1,1],[1,1,1]]",
                        "output": "0",
                        "explanation": "All rows have the same maximum number of 1s. The first row is selected"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Traverse through each row and count the number of 1\u2019s in it and find the maximum among them.</p>",
            "<p>Try to solve using binary search.</p>",
            "<p>Try to find the index by starting from the top-right corner of the matrix ARR.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Matrices (2D Arrays)",
                "slug": "matrices-(2d-arrays)"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}