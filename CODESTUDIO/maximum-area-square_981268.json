{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9237,
            "title": "Maximum Area Square",
            "titleSlug": "maximum-area-square_981268",
            "content": "<h4 id=\"you-have-been-given-a-non-empty-grid-mat-consisting-of-only-0s-and-1s-your-task-is-to-find-the-area-of-maximum-size-square-sub-matrix-with-all-1s\">You have been given a non-empty grid \u2018MAT\u2019 consisting of only 0s and 1s. Your task is to find the area of maximum size square sub-matrix with all 1s.</h4>\n\n<h4 id=\"if-there-is-no-such-sub-matrix-print-0\">If there is no such sub-matrix, print 0.</h4>\n\n<h4 id=\"for-example-for-the-following-grid\">For example, for the following grid:</h4>\n\n<p><img src=\"https://files.codingninjas.in/screenshot-83-6638.png\" alt=\"Input\"></p>\n\n<pre><code>The area of the largest square submatrix with all 1s is 4.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains an integer \u2018T\u2019 denoting the number of test cases. Then each test case follows.\n\nThe first input line of each test case contains two space-integers \u2018N\u2019 and \u2018M\u2019 representing the number of rows and columns of the grid, respectively.\n\nFrom the second line of each test case, the next N lines represent the rows of the grid. Every row contains M single space-separated integers.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print the area of maximum size square sub-matrix with all 1s. \n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You are not required to print the expected output; it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= N &lt;= 50\n1 &lt;= M &lt;= 50\n0 &lt;= MAT[i][j] &lt;= 1\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1\n2 2\n1 0\n0 0\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>1\n</code></pre>\n\n<h5 id=\"explanation-of-the-sample-input-1\">Explanation of the Sample Input 1:</h5>\n\n<pre><code>For the given grid, the largest square with all 1s has a side of length 1. So, the area will be 1 * 1 = 1. \n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n3 4\n1 1 1 1\n0 1 1 0\n0 0 0 0\n2 3\n0 0 0\n0 0 1    \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>4\n1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 2,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a non-empty grid 'MAT' consisting of only 0s and 1s, find the area of the maximum size square sub-matrix containing only 1s. If no such sub-matrix exists, return 0.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= N <= 50",
                    "1 <= M <= 50",
                    "0 <= MAT[i][j] <= 1",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "2 2\n1 0\n0 0",
                        "output": "1",
                        "explanation": "The largest square submatrix with all 1s has a side length of 1.  Therefore, the area is 1 * 1 = 1."
                    },
                    {
                        "input": "3 4\n1 1 1 1\n0 1 1 0\n0 0 0 0",
                        "output": "4",
                        "explanation": null
                    },
                    {
                        "input": "2 3\n0 0 0\n0 0 1",
                        "output": "1",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to use the prefix sum of the matrix.</p>",
            "<p>Try to optimize approach1 with binary search.</p>",
            "<p>Try to use dynamic programming.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Matrices (2D Arrays)",
                "slug": "matrices-(2d-arrays)"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}