{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9279,
            "title": "Maximum Boxes",
            "titleSlug": "maximum-boxes_981313",
            "content": "<h4 id=\"you-are-given-n-apples-and-multiple-boxes-with-capacities-a-b-and-c-now-you-need-to-calculate-the-maximum-number-of-boxes-in-which-you-can-distribute-these-apples-such-that-no-apple-is-left-and-none-of-the-boxes-is-partially-filled\">You are given &#39;N&#39; apples and multiple boxes with capacities &#39;A&#39;, &#39;B&#39; and &#39;C&#39;. Now, you need to calculate the maximum number of boxes in which you can distribute these apples such that no apple is left and none of the boxes is partially filled.</h4>\n\n<h5 id=\"example\">Example:</h5>\n\n<pre><code>Suppose, you have 7 apples and multiple boxes of capacities 2, 3 and 5.\n\nYou can keep these 7 apples in maximum 3 boxes i.e. two boxes of capacity 2 and one box of capacity 3.\n</code></pre>\n\n<h5 id=\"input-format\">Input format:</h5>\n\n<pre><code>The first line of input contains an integer &#39;T&#39; denoting the number of test cases.\n\nThe first line of each test case contains a single integer &#39;N&#39; denoting the number of apples.\n\nThe second line of each test case contains three space-separated integers &#39;A&#39;, &#39;B&#39;, and &#39;C&#39; denoting the capacity of three types of boxes.\n</code></pre>\n\n<h5 id=\"output-format\">Output format:</h5>\n\n<pre><code>For each test case, return the maximum number of boxes in which you can distribute these &#39;N&#39; apples.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>1. If it is impossible to distribute the apples into the boxes, simply return 0. \n\n2. You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;=  T &lt;= 50\n1 &lt;=  N &lt;= 10 ^ 5\n1 &lt;= A, B, C &lt;= 10 ^ 4\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n5\n2 3 5\n11\n2 3 7\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>2\n5\n</code></pre>\n\n<h5 id=\"explanation-for-sample-output-1\">Explanation for Sample Output 1:</h5>\n\n<pre><code>In test case 1, There are 2 ways to distribute 5 apples in boxes with capacity 2, 3 and 5.\n\n2 apples in one box and 3 apples in another box, boxes used: 2 \n\n5 apples in 1 box, box used: 1\n\nMaximum boxes are used in the first way, thus, the answer is 2. \n\nIn test case 2, There are 3 ways to distribute 11 apples in boxes with capacity 2, 3 and 7.\n\n2 apples in four boxes (2 * 4) and 3 apples in 1 box (3 * 1), boxes used: 5\n\n2 apples in 1 box (2 * 1) and 3 apples in 3 boxes( 3 * 3), boxes used: 4\n\n2 apples in 2 boxes (2 * 2) and 7 apples in 1 box (7 * 1), boxes used: 3\n\nMaximum boxes are used in the first way, thus, the answer is 5. \n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n4\n2 1 1\n8\n5 6 7\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>4\n0\n</code></pre>\n\n<h5 id=\"explanation-for-sample-output-2\">Explanation for Sample Output 2:</h5>\n\n<pre><code>In test case 1, There are 4 apples and boxes with capacity 2, 3 and 5.\n\nMaximum boxes will be used when all the apples are in boxes with capacity 1 and thus maximum boxes used are 4.\n\nIn test case 2, There is no way to distribute 8 apples in the boxes with capacity 5, 6 and 7.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -5,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given 'N' apples and boxes with capacities 'A', 'B', and 'C', determine the maximum number of boxes that can be completely filled with apples such that no apples are left over.",
                "constraints": [
                    "1 <= T <= 50",
                    "1 <= N <= 10^5",
                    "1 <= A, B, C <= 10^4",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "5\n2 3 5",
                        "output": "2",
                        "explanation": "We have 5 apples and box capacities of 2, 3, and 5.  We can use one box of capacity 2 and one box of capacity 3 (2+3=5), resulting in 2 boxes. Alternatively, we can use only one box of capacity 5, resulting in 1 box. The maximum number of boxes is 2."
                    },
                    {
                        "input": "11\n2 3 7",
                        "output": "5",
                        "explanation": "We have 11 apples and box capacities of 2, 3, and 7. One optimal way is to use four boxes of capacity 2 (2*4 = 8) and one box of capacity 3 (3*1 = 3). This uses a total of 5 boxes (4 + 1 = 5). Other ways such as one box of 7 and two of 2, or three of 3 and one of 2, result in less number of boxes."
                    },
                    {
                        "input": "4\n2 1 1",
                        "output": "4",
                        "explanation": "With 4 apples and capacities 2, 1, and 1, the maximum number of boxes is achieved by using boxes of capacity 1 four times (1+1+1+1 = 4), using 4 boxes."
                    },
                    {
                        "input": "8\n5 6 7",
                        "output": "0",
                        "explanation": "It is impossible to distribute 8 apples into boxes of capacities 5, 6, and 7 without leaving apples behind or partially filling boxes. Therefore, the answer is 0."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>The very first approach can be to try all possible distributions of the apples and maximize the ans among the valid ones.</p>",
            "<p>We are solving this problem by solving its subproblems and then combining the solutions of those subproblems.&nbsp;</p>",
            "<p>Let us solve the small problem first and then reach the final answer. Thus we will be using a bottom-up approach now.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}