{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8521,
            "title": "Maximum Consecutive Ones",
            "titleSlug": "maximum-consecutive-ones_892994",
            "content": "<h4 id=\"given-a-binary-array-arr-of-size-n-your-task-is-to-find-the-longest-sequence-of-continuous-1-s-that-can-be-formed-by-replacing-at-most-k-zeroes-by-ones-return-the-length-of-this-longest-sequence-of-continuous-1-s\">Given a binary array &#39;ARR&#39; of size &#39;N&#39;, your task is to find the longest sequence of continuous 1\u2019s that can be formed by replacing at-most &#39;K&#39; zeroes by ones. Return the length of this longest sequence of continuous 1\u2019s.</h4>\n\n<h5 id=\"input-format\">Input format:</h5>\n\n<pre><code>The first line contains an integer &#39;T&#39; which denotes the number of test cases or queries to be run. Then, the T test cases follow.\n\nThe first line of each test case or query contains an integer &#39;N&#39; representing the size of the array (ARR).\n\nThe second line contains &#39;N&#39; single space-separated binary values, representing the elements in the array.\n\nThe third line contains the value of &#39;K&#39;.\n</code></pre>\n\n<h5 id=\"output-format\">Output format:</h5>\n\n<pre><code>For each test case, return the length of the longest subarray whose all elements are 1.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 5 * 10^4 \n0 &lt;= Arr[i] &lt;= 1\n0 &lt;= K &lt;= N\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1\n7\n1 0 0 1 1 0 1   \n1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>4 \n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1:</h5>\n\n<pre><code>Here we can replace at-most one 0 by 1 ( since K = 1 ). So the longest consecutive subarray with all 1\u2019s that we can get is by replacing the 0 present at index 5.    \n\nSo the updated array will be {1,0,0,1,1,1,1}.\n\nAs we can see in the updated array the longest subarray with all 1\u2019s is from index 3 of length 4.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n10\n1 0 0 1 0 1 0 1 0 1\n2\n5\n1 1 0 1 1\n2\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>5\n5\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-2\">Explanation of Sample Input 2:</h5>\n\n<pre><code>Here, In the first test case we can replace at-most two 0\u2019s by 1\u2019s ( since &#39;K&#39; = 2 ). So the longest consecutive subarray with all 1\u2019s  we can get is by replacing the 0 present at index 4 and index 6 or index 6 and index 8 .    \nSo the updated array will be either {1,0,0,1,1,1,1,1,0,1} or {1,0,0,1,0,1,1,1,1,1}.\n\nIn the second test case there is only one zero in the whole array and we are allowed to replace two 0\u2019s by 1\u2019s so the answer will be the size of the array, i.e. 5.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 81,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a binary array 'arr' of size 'n', determine the length of the longest contiguous subarray containing only 1s. You are allowed to replace at most 'k' zeroes with ones to maximize this length. Implement the function `longestSubSeg` to achieve this.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 5 * 10^4",
                    "0 <= Arr[i] <= 1",
                    "0 <= K <= N"
                ],
                "testcases": [
                    {
                        "input": "n = 7, arr = [1, 0, 0, 1, 1, 0, 1], k = 1",
                        "output": "4",
                        "explanation": "We can replace at most one 0 with 1. Replacing the 0 at index 5 results in the array [1, 0, 0, 1, 1, 1, 1]. The longest subarray with all 1s is from index 3 to 6, having a length of 4."
                    },
                    {
                        "input": "n = 10, arr = [1, 0, 0, 1, 0, 1, 0, 1, 0, 1], k = 2",
                        "output": "5",
                        "explanation": "We can replace at most two 0s with 1s. Replacing the 0s at indices 4 and 6 or indices 6 and 8 results in the longest contiguous sequence of 1s with length 5."
                    },
                    {
                        "input": "n = 5, arr = [1, 1, 0, 1, 1], k = 2",
                        "output": "5",
                        "explanation": "Since we can replace up to two 0s, and there's only one 0 in the array, we can replace it. The resulting array [1, 1, 1, 1, 1] has a longest contiguous sequence of 1s of length 5 (the entire array)."
                    },
                    {
                        "input": "n = 5, arr = [1, 1, 1, 1, 1], k = 0",
                        "output": "5",
                        "explanation": "No zeroes need to be replaced. The entire array already consists of 1s, so the longest contiguous sequence of 1s has length 5."
                    },
                    {
                        "input": "n = 5, arr = [0, 0, 0, 0, 0], k = 2",
                        "output": "2",
                        "explanation": "Replacing any two zeroes with ones will result in two contiguous 1's followed and preceded by zeroes. Therefore, the longest contiguous sequence is of length 2."
                    },
                    {
                        "input": "n = 6, arr = [1,0,1,1,0,1], k = 2",
                        "output": "6",
                        "explanation": "We can replace both zeroes to get [1,1,1,1,1,1], resulting in a sequence of 6 ones"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Consider all possible subarrays.</p>",
            "<p>Can you solve this problem using a queue?</p>",
            "<p>One thing's for sure, we will only flip a zero if it extends the existing window of 1s. Think Sliding Window!</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}