{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10575,
            "title": "Maximum Distinct Blocks",
            "titleSlug": "maximum-distinct-blocks_1235169",
            "content": "<h4 id=\"you-are-given-n-blocks-which-are-numbered-from-0-to-n-1-and-are-arranged-in-a-straight-line-each-block-has-an-integer-label-on-it-which-denotes-the-index-of-the-next-block-that-you-can-go-to-from-that-block-the-labels-on-each-block-are-given-in-the-array-arr-your-task-is-to-find-out-the-maximum-number-of-distinct-blocks-that-you-can-reach-by-starting-from-any-arbitrary-block-and-moving-through-all-the-blocks-that-you-are-allowed-to-move-from-that-block-and-all-other-subsequent-blocks\">You are given &#39;N&#39; blocks which are numbered from 0 to &#39;N&#39; - 1 and are arranged in a straight line. Each block has an integer label on it which denotes the index of the next block that you can go to from that block. The labels on each block are given in the array &#39;ARR&#39;. Your task is to find out the maximum number of distinct blocks that you can reach by starting from any arbitrary block and moving through all the blocks that you are allowed to move from that block and all other subsequent blocks.</h4>\n\n<h4 id=\"for-example\">For example:</h4>\n\n<pre><code>Consider the array ARR = { 0, 2, 1 } having 3 elements. \nStarting at Block 0, you can move to only Block 0 and you cannot move to any other blocks. \nStarting at Block 1, you can move between Block 1 and Block 2. \nStarting at Block 2, you can move between Block 2 and Block 1.\nHence, the maximum number of distinct that you can visit is 2 in this case. \n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of the input contains an integer, &#39;T,\u2019 denoting the number of test cases.\n\nThe first line of each test case contains an integer, &#39;N,\u2019 denoting the number of elements in the array &#39;ARR&#39;\n\nThe second line of each test case contains &#39;N&#39; space-separated integers denoting the elements of the array &#39;ARR&#39;.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, return the maximum number of distinct blocks that you can reach by starting from an arbitrary block. \n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 10^5 \n0 &lt;= ARR[i] &lt; N\n\nAll elements of the array ARR are pairwise distinct.\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n4\n1 0 2 3\n3\n2 0 1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>2\n3\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1:</h5>\n\n<pre><code>For the first test case, if we start from block 0, then we can move to block 1 and then back again to block 0. Hence, the maximum number of distinct blocks is 2 in this case.\n\nFor the second test case, as all the blocks are reachable from any starting block, the maximum number of distinct blocks is 3 in this case.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n3\n2 1 0\n4\n1 0 3 2\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>2\n2\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 7,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array 'arr' of size 'N', where 'arr[i]' represents the index of the next block to visit from block 'i', determine the maximum number of distinct blocks reachable starting from any arbitrary block and following the given movement rules.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10^5",
                    "0 <= ARR[i] < N"
                ],
                "testcases": [
                    {
                        "input": "n = 4, arr=[1, 0, 2, 3]",
                        "output": "2",
                        "explanation": "Starting from block 0, you can move to block 1 and back to block 0. Hence, the maximum number of distinct blocks is 2."
                    },
                    {
                        "input": "n = 3, arr=[2, 0, 1]",
                        "output": "3",
                        "explanation": "All blocks are reachable from any starting block. Hence, the maximum number of distinct blocks is 3."
                    },
                    {
                        "input": "n = 3, arr=[2, 1, 0]",
                        "output": "2",
                        "explanation": "Starting from block 0, you can go to 2 then back to 0. from block 1 you go to 1, and from block 2 you go to 0, then 2. Maximum will be 2 as there is no starting block that can access all elements. "
                    },
                    {
                        "input": "n = 4, arr=[1, 0, 3, 2]",
                        "output": "2",
                        "explanation": "Starting from block 0, we can only reach block 1 and block 0. Starting from block 2, we can only reach block 3 and block 2. Hence the maximum blocks reachable is 2."
                    },
                    {
                        "input": "n = 5, arr=[0, 1, 2, 3, 4]",
                        "output": "1",
                        "explanation": "From any starting block i, you can only move to i, hence the maximum number of reachable blocks is 1."
                    },
                    {
                        "input": "n = 6, arr=[1, 2, 3, 4, 5, 0]",
                        "output": "6",
                        "explanation": "Starting from any block i, you can reach all other blocks."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Iterate through each block, and try to find out all the blocks that can be reached starting from that block.</p>",
            "<p>Try to optimize the previous approach so that all the blocks are visited only once or twice.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}