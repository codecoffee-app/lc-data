{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9469,
            "title": "Maximum equal elements after K operations",
            "titleSlug": "maximum-equal-elements-after-k-operations_992848",
            "content": "<h4 id=\"you-are-given-an-arbitrary-array-list-of-integers-arr-of-size-n-and-an-integer-k-you-need-to-find-the-maximum-number-of-elements-which-can-be-made-equal-to-each-other-after-performing-at-most-k-operations\">You are given an arbitrary array/list of integers &#39;ARR&#39; of size \u2018N\u2019 and an integer \u2018K\u2019. You need to find the maximum number of elements which can be made equal to each other after performing at most K operations.</h4>\n\n<h4 id=\"an-operation-is-defined-as-choosing-an-element-from-arr-and-increasing-it-by-1\">An operation is defined as &quot;Choosing an element from &#39;ARR&#39; and increasing it by 1&quot;.</h4>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You can perform multiple operations on a single element also.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of the input contains a single integer T, representing the number of test cases.\n\nThe first line of each test case consists of two space-separated integers, representing the values of N (size of &#39;ARR&#39;) and K(maximum number of updates possible). \n\nThe second line of each test case contains N space-separated integers, denoting the elements of the &#39;ARR&#39;.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print a single integer, representing the maximum number of elements that can be made equal after performing K or fewer increments.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10^2\n1 &lt;= N &lt;= 10^3\n1 &lt;= ARR[i], K &lt;= 10^9\n\nTime Limit: 1sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1\n3 4\n1 3 8\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>2\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1:</h5>\n\n<pre><code>Here, &#39;K&#39; = 4 hence we can perform at most 4 increments. Clearly, the difference between 3 and 8 is 5, which is more than K(4), hence we cannot make 1 or 3 equal to 8. Trying to make the elements equal to 3, we can increment ARR[0] by 2, so that the array becomes [3, 3, 8]. In this configuration, we have 2 array elements equal. Hence, the answer will be 2.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\n4 5\n1 3 5 5\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>3\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation For Sample Input 2:</h5>\n\n<pre><code>Here, two elements are already 5 and we can increment 3 twice to get three 5\u2019s, making ARR[] = {1, 5, 5, 5}. Hence the answer will be 3.    \n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -5,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of integers `ARR` of size `N` and an integer `K`, find the maximum number of elements that can be made equal to each other by performing at most `K` operations. An operation involves choosing an element from `ARR` and increasing it by 1. You can perform multiple operations on a single element.",
                "constraints": [
                    "1 <= T <= 10^2",
                    "1 <= N <= 10^3",
                    "1 <= ARR[i], K <= 10^9",
                    "Time Limit: 1sec"
                ],
                "testcases": [
                    {
                        "input": "3 4\n1 3 8",
                        "output": "2",
                        "explanation": "With K = 4, we aim to maximize the number of equal elements. Making elements equal to 8 is not feasible because the difference between 1 and 8 or 3 and 8 exceeds K. Trying to make elements equal to 3, we increment 1 by 2 (within K), resulting in two 3's in the array."
                    },
                    {
                        "input": "4 5\n1 3 5 5",
                        "output": "3",
                        "explanation": "Here, we have two 5's already. We can increment 3 twice (within K = 5) to transform it into 5. This results in three 5's in the array."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Think you can solve this if array is sorted</p>",
            "<p>Use a modified Binary Search on sorted array.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}