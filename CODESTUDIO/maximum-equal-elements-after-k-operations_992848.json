{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9469,
            "title": "Maximum equal elements after K operations",
            "titleSlug": "maximum-equal-elements-after-k-operations_992848",
            "content": "<h4 id=\"you-are-given-an-arbitrary-array-list-of-integers-arr-of-size-n-and-an-integer-k-you-need-to-find-the-maximum-number-of-elements-which-can-be-made-equal-to-each-other-after-performing-at-most-k-operations\">You are given an arbitrary array/list of integers &#39;ARR&#39; of size \u2018N\u2019 and an integer \u2018K\u2019. You need to find the maximum number of elements which can be made equal to each other after performing at most K operations.</h4>\n\n<h4 id=\"an-operation-is-defined-as-choosing-an-element-from-arr-and-increasing-it-by-1\">An operation is defined as &quot;Choosing an element from &#39;ARR&#39; and increasing it by 1&quot;.</h4>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You can perform multiple operations on a single element also.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of the input contains a single integer T, representing the number of test cases.\n\nThe first line of each test case consists of two space-separated integers, representing the values of N (size of &#39;ARR&#39;) and K(maximum number of updates possible). \n\nThe second line of each test case contains N space-separated integers, denoting the elements of the &#39;ARR&#39;.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print a single integer, representing the maximum number of elements that can be made equal after performing K or fewer increments.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10^2\n1 &lt;= N &lt;= 10^3\n1 &lt;= ARR[i], K &lt;= 10^9\n\nTime Limit: 1sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1\n3 4\n1 3 8\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>2\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1:</h5>\n\n<pre><code>Here, &#39;K&#39; = 4 hence we can perform at most 4 increments. Clearly, the difference between 3 and 8 is 5, which is more than K(4), hence we cannot make 1 or 3 equal to 8. Trying to make the elements equal to 3, we can increment ARR[0] by 2, so that the array becomes [3, 3, 8]. In this configuration, we have 2 array elements equal. Hence, the answer will be 2.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\n4 5\n1 3 5 5\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>3\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation For Sample Input 2:</h5>\n\n<pre><code>Here, two elements are already 5 and we can increment 3 twice to get three 5\u2019s, making ARR[] = {1, 5, 5, 5}. Hence the answer will be 3.    \n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 5,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of integers `arr` of size `n` and an integer `k`, determine the maximum number of elements in `arr` that can be made equal by incrementing elements, with a total cost of at most `k`. Each increment operation increases a chosen element in `arr` by 1.",
                "constraints": [
                    "1 <= T <= 10^2",
                    "1 <= N <= 10^3",
                    "1 <= ARR[i], K <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "n = 3, arr=[1, 3, 8], k = 4",
                        "output": "2",
                        "explanation": "We can increment the first element by 2 to make it 3.  Then the array is [3, 3, 8].  We have 2 elements equal.  We can't make the elements equal to 8 because that would take more than k operations."
                    },
                    {
                        "input": "n = 4, arr=[1, 3, 5, 5], k = 5",
                        "output": "3",
                        "explanation": "We can increment 1 by 4 and 3 by 2, so we increment the first element by 4 to make it 5 and the second element by 2 to make it 5. The array becomes [5, 5, 5, 5], or we could make the first element 5 (cost 4), and the second element 5 (cost 2). Total cost is 6 which is more than k. So, we increment first element by 4, making it 5 and the second element requires 2 operations. So, arr[] = {5,5,5,5}. The max count is 3."
                    },
                    {
                        "input": "n = 5, arr=[1, 2, 3, 4, 5], k = 0",
                        "output": "1",
                        "explanation": "Since we can't perform any operations (k=0), the maximum number of equal elements we can have is 1 (any single element)."
                    },
                    {
                        "input": "n = 5, arr=[1, 1, 1, 1, 1], k = 100",
                        "output": "5",
                        "explanation": "All elements are already equal, so no operations are needed, and the answer is 5."
                    },
                    {
                        "input": "n = 3, arr=[1, 10, 100], k = 1000",
                        "output": "1",
                        "explanation": "Increasing 1 to 100 costs 99 and then we have [100,10,100], now we increase 10 to 100, it takes 90. Total cost is 189 which is <= 1000. So, 2 elements can be made equal. Now increase 10 to 1 costs 9 and then we have [1,10,100], now we increase 100 to 1, it takes 99. Total cost is 108 which is <= 1000. So, 2 elements can be made equal. Now increase 100 to 10 costs 90 and then we have [1,10,10]. now we increase 1 to 10, it takes 9. Total cost is 99 which is <= 1000. So, 2 elements can be made equal. The best you can do is to make all of them equal to 100 since 10 is smaller than the average and increasing it will be more costy than increasing 1 and 10."
                    },
                    {
                        "input": "n = 2, arr=[1, 2], k = 1",
                        "output": "2",
                        "explanation": "Increment the first element by 1. Now arr[0] == arr[1], and k is still 0."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Think you can solve this if array is sorted</p>",
            "<p>Use a modified Binary Search on sorted array.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}