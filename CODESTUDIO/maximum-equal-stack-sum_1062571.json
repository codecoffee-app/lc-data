{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9497,
            "title": "Maximum Equal Stack Sum",
            "titleSlug": "maximum-equal-stack-sum_1062571",
            "content": "<h4 id=\"given-three-filled-stacks-namely-stack1-stack2-and-stack3-of-positive-numbers-the-task-is-to-find-the-possible-equal-maximum-sum-of-the-stacks-with-the-removal-of-top-elements-allowed\">Given three filled stacks namely \u2018stack1\u2019 \u2018stack2\u2019 and \u2018stack3\u2019 of positive numbers, the task is to find the possible equal maximum sum of the stacks with the removal of top elements allowed.</h4>\n\n<h4 id=\"for-example-let-the-stacks-be\">For example, let the stacks be:</h4>\n\n<p><img src=\"https://files.codingninjas.in/image3-6863.png\" alt=\"abc\"></p>\n\n<h4 id=\"we-can-see-that-currently\">We can see that currently,</h4>\n\n<h4 id=\"the-sum-of-stack-1-is-8-5-3-16\">the sum of stack 1 is: 8+5+3 = 16</h4>\n\n<h4 id=\"the-sum-of-stack-2-is-2-2-4-9-6-23\">the sum of stack 2 is: 2+2+4+9+6 = 23</h4>\n\n<h4 id=\"the-sum-of-stack-3-is-2-1-2-3-8\">the sum of stack 3 is: 2+1+2+3 = 8</h4>\n\n<h4 id=\"so-they-are-not-equal\">So they are not equal.</h4>\n\n<h4 id=\"however-if-we-pop-8-from-stack-1-6-9-from-stack-2-and-nothing-from-stack-3\">However, if we pop {8} from stack 1, {6,9} from stack 2 and nothing from stack 3,</h4>\n\n<h4 id=\"we-get-the-sum-as\">We get the sum as :</h4>\n\n<h4 id=\"stack-1-16-8-8\">Stack 1: 16-8=8</h4>\n\n<h4 id=\"stack-2-23-15-8\">Stack 2: 23-15=8</h4>\n\n<h4 id=\"stack-3-8-0-8\">Stack 3: 8-0=8</h4>\n\n<h4 id=\"we-can-see-that-now-the-sum-of-all-three-stacks-are-equal-which-is-8-and-it-is-the-highest-possible-hence-we-return-8\">We can see that now the sum of all three stacks are equal which is 8 and it is the highest possible, hence we return 8.</h4>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>1. Do not print anything, just return an integer which is the maximum possible sum for the three stacks.\n2.It is guaranteed that the elements in the stack are positive integers.\n3.It can be proved that a non-negative integer answer always exists.\n</code></pre>\n\n<h5 id=\"input-format\">Input format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases.\nThe next \u20183*T\u2019 lines represent the \u2018T\u2019 test cases.\n\nThe first line of each test case contains a stream of integers which are in the order of which the elements are pushed in \u2018stack1\u2019. The stream ends when the input is -1. The top of the stack is the element just before -1. Note that -1 is not pushed in the stack.\n\nThe second line of each test case contains a stream of integers which are in the order of which the elements are pushed in \u2018stack2\u2019. The stream ends when the input is -1. The top of the stack is the element just before -1. Note that -1 is not pushed in the stack.\n\nThe third line of each test case contains a stream of integers which are in the order of which the elements are pushed in \u2018stack3\u2019. The stream ends when the input is -1. The top of the stack is the element just before -1. Note that -1 is not pushed in the stack.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format</h5>\n\n<pre><code>For each test case, return a single integer denoting the maximum equal sum for the three stacks.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 50\n1&lt;= N &lt;=10^4\n1&lt;= stackData &lt;=10^9\n\nWhere \u2018T\u2019 is the total number of test cases, \u2018N\u2019 denotes the number of elements in any of the stacks and \u2018stackData\u2019 represents the data in the stacks.\nTime limit: 1 second\n</code></pre>\n\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n2 4 1 9 -1\n1 6 3 -1\n5 2 1 -1\n8 2 1 -1 \n1 1 1 -1 \n6 3 -1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>7\n0 \n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of sample input 1 :</h5>\n\n<pre><code>Test Case 1:\nThe stacks are:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/image2-6862.png\" alt=\"img 2\"></p>\n\n<pre><code>We can see that currently,\nthe sum of stack 1 is:9+1+4+2=16\nthe sum of stack 2 is: 3+6+1=10\nthe sum of stack 3 is: 5+2+1=8\n\nSo they are not equal.\nHowever, if we pop {9,1} from stack 1 {3} from stack 2 and {1} from stack 3,\n\nWe get the sum as :\n\nStack 1: 16-9-1=7\nStack 2: 10-3=7\nStack 3: 8-1=7\n\nWe can see that now the sum of all 3 stacks are equal which is 7 and it is the highest possible, hence we return 7.\n\nTest Case 2: \n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/image1-6861.png\" alt=\"img 3\"></p>\n\n<pre><code>We can see that currently,\nthe sum of stack 1 is: 6+3=9\nthe sum of stack 2 is: 1+1+1=3\nthe sum of stack 3 is: 1+2+8=11\n\nSo they are not equal.\n\nNow, no matter what we do we can never make the sum equal to any number for all the three stacks except 0. So, in this case, we return 0.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n2 2 4 6 -1\n14 6 8 1 -1\n7 7 6 4 -1\n9 9 9 9 -1\n20 7 -1\n5 6 7 9 -1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>14\n27\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 11,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given three stacks (stack1, stack2, stack3) filled with positive integers, determine the maximum possible equal sum achievable by removing elements from the top of any of the stacks. The goal is to find the highest sum that all three stacks can have simultaneously by popping elements. A non-negative integer answer always exists.",
                "constraints": [
                    "1 <= T <= 50 (Number of test cases)",
                    "1 <= N <= 10^4 (Number of elements in any stack)",
                    "1 <= stackData <= 10^9 (Value of elements in the stacks)",
                    "Time limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "2 4 1 9 -1\n1 6 3 -1\n5 2 1 -1",
                        "output": "7",
                        "explanation": "Initial sums: stack1 = 16, stack2 = 10, stack3 = 8.  By removing 9 and 1 from stack1, 3 from stack2, and 1 from stack3, we obtain sums of 7 for all stacks. This is the maximum possible equal sum."
                    },
                    {
                        "input": "8 2 1 -1\n1 1 1 -1\n6 3 -1",
                        "output": "0",
                        "explanation": "Initial sums: stack1 = 11, stack2 = 3, stack3 = 9. No matter which elements are removed from the top of the stacks, it's not possible to make all the three stacks have equal non-zero sums. So, the answer is 0."
                    },
                    {
                        "input": "2 2 4 6 -1\n14 6 8 1 -1\n7 7 6 4 -1",
                        "output": "14",
                        "explanation": "Initial sums: stack1 = 14, stack2 = 29, stack3 = 24. Remove 6,8,1 from stack2, and 7,6,4 from stack3 gives sum of 14."
                    },
                    {
                        "input": "9 9 9 9 -1\n20 7 -1\n5 6 7 9 -1",
                        "output": "27",
                        "explanation": "Initial sums: stack1 = 36, stack2 = 27, stack3 = 27. Remove '9' from stack1 and sum of all stacks will be 27."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><strong>Just find all possible sums for all the stacks.</strong></p>",
            "<p><strong>Just find all possible sums for all the stacks and binary search the answer</strong></p>",
            "<p><strong>&nbsp;Is it necessary to find all the sums?(Think Greedily)</strong></p>"
        ],
        "relatedTopics": [
            {
                "name": "Stacks & Queues",
                "slug": "stacks-&-queues"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}