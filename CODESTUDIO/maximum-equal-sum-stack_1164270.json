{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10100,
            "title": " Maximum equal sum stack",
            "titleSlug": "maximum-equal-sum-stack_1164270",
            "content": "<h4 id=\"you-are-given-three-stacks-of-the-positive-numbers-your-task-is-to-find-the-possible-equal-maximum-sum-of-the-stacks-with-the-removal-of-top-elements-allowed-stacks-are-represented-as-an-array-and-the-first-index-of-the-array-represents-the-top-element-of-the-stack\">You are given three stacks of the positive numbers, your task is to find the possible equal maximum sum of the stacks with the removal of top elements allowed. Stacks are represented as an array, and the first index of the array represents the top element of the stack.</h4>\n\n<h4 id=\"for-example\">For example:</h4>\n\n<pre><code>Assume that you are given three stacks {2,5}, {5,1,6} and {7,2,3,4}. Initially sum of stack one is 7, stack 2 is 12, and stack 3 is 16. But if we remove 5 from stack 2 that is top of stack its sum becomes 7. Similarly, if we remove 7 and then 2 from stack 3 then its sum also becomes 7 so the maximum possible sum for this case is 7.\n</code></pre>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>1. If no such sum is possible return zero.\n</code></pre>\n\n<h4 id=\"input-format\">Input format :</h4>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases.\n\nThe next 6 * T lines represent the \u2018T\u2019 test cases as follows-\n\nThe first line of each test case contains a single integer n1 which denotes the size of the first \n\nThe second line of each test case contains space-separated integers that represent elements of the first stack and the starting element is the top of the stack. \n\nSimilarly, the next 4 lines represent the other two stacks in the same manner.\n</code></pre>\n\n<h4 id=\"output-format\">Output format :</h4>\n\n<pre><code>For each test case, print a single line containing a single integer denoting is the maximum possible equal sum for the three stacks.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You don\u2019t have to print anything; it has already been taken care of. Just implement the given function. \n</code></pre>\n\n<h4 id=\"constraints\">Constraints:</h4>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= N &lt;= 10000\n1 &lt;= DATA &lt;= 10 ^ 6\n\nWhere \u2018T\u2019 is the total number of test cases, where N denotes the number of elements in any of the stacks and \u2018DATA\u2019 represents the data in the stacks.\n\nTime limit: 1 sec.\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1 :</h4>\n\n<pre><code>2\n4\n4 5 2 3\n3\n3 1 4\n3\n2 2 1\n3\n4 9 6\n5\n1 4 5 5 5\n1\n15\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1 :</h4>\n\n<pre><code>5\n15\n</code></pre>\n\n<h4 id=\"explanation-of-the-sample-input-1\">Explanation of The Sample Input 1:</h4>\n\n<pre><code>For the first test case:\n\nThe given stacks are {4,5,2,3}, {3,1,4}, {2,2,1} initially sum of individual stacks are 14, 8 and 5 but if we remove 4 and 5 from first stack and 3 from second stack then all the sum becomes equal, that is 5 therefore the answer will be 5.\n\nFor the second test case:\n\nThe given stacks are {4,9,6}, {1,4,5,5,5}, {15}. Initially, the sum of individual stacks are 19, 19 and 15 but if we remove 4 from the first stack and 1 and 4 from the second stack then the sum of individual stacks becomes equal, that is 15. Therefore, the answer will be 15.\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2 :</h4>\n\n<pre><code>2\n3\n3 1 2 \n3\n5 5 3\n2\n1 2\n5\n1 2 3 4 5 \n1\n1\n1\n98 \n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2 :</h4>\n\n<pre><code>3\n0\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 1,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given three stacks of positive numbers, the goal is to find the maximum possible equal sum of the stacks. You are allowed to remove elements from the top of any stack. The stacks are represented as arrays, where the first element is considered the top of the stack. If no such equal sum is possible, return 0.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= N <= 10000",
                    "1 <= DATA <= 10^6",
                    "Where \u2018T\u2019 is the total number of test cases, where N denotes the number of elements in any of the stacks and \u2018DATA\u2019 represents the data in the stacks.",
                    "Time limit: 1 sec."
                ],
                "testcases": [
                    {
                        "input": "2\n4\n4 5 2 3\n3\n3 1 4\n3\n2 2 1\n3\n4 9 6\n5\n1 4 5 5 5\n1\n15",
                        "output": "5\n15",
                        "explanation": "Test Case 1: Stacks are {4, 5, 2, 3}, {3, 1, 4}, and {2, 2, 1}. Removing 4 and 5 from the first stack and 3 from the second stack results in equal sums of 5.\nTest Case 2: Stacks are {4, 9, 6}, {1, 4, 5, 5, 5}, and {15}. Removing 4 from the first stack and 1 and 4 from the second stack results in equal sums of 15."
                    },
                    {
                        "input": "2\n3\n3 1 2 \n3\n5 5 3\n2\n1 2\n5\n1 2 3 4 5 \n1\n1\n1\n98",
                        "output": "3\n0",
                        "explanation": "Test Case 1: Stacks are {3, 1, 2}, {5, 5, 3}, and {1, 2}.  Removing 5 and 5 from the second stack and 1 and 2 from the third stack gives a sum of 3.\nTest Case 2: Stacks are {1, 2, 3, 4, 5}, {1}, and {98}. No combination of removals will lead to equal sums; therefore, the output is 0."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can we use three different pointers to keep track of the maximum equal sum?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Stacks & Queues",
                "slug": "stacks-&-queues"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}