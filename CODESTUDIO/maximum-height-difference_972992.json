{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8976,
            "title": "Maximum Height Difference",
            "titleSlug": "maximum-height-difference_972992",
            "content": "<h4 id=\"you-are-given-the-root-node-of-a-binary-tree-consisting-of-n-nodes-your-task-is-to-return-the-maximum-height-difference-of-the-tree\">You are given the root node of a binary tree consisting of &#39;N&#39; nodes. Your task is to return the maximum height difference of the tree.</h4>\n\n<h4 id=\"the-height-of-a-binary-tree-is-defined-as-the-number-of-nodes-present-in-the-longest-path-from-the-root-node-to-any-leaf-node-of-the-tree-the-height-difference-of-a-node-is-equal-to-the-absolute-difference-of-height-of-the-left-and-right-subtree\">The height of a Binary Tree is defined as the number of nodes present in the longest path from the root node to any leaf node of the tree.  The height difference of a node is equal to the absolute difference of height of the left and right subtree.</h4>\n\n<h5 id=\"for-example\">For example:</h5>\n\n<p><img src=\"https://ninjasfiles.s3.amazonaws.com/asset_0000000000000473_1626608226_NrNpEDisiXKDozxN.png\" alt=\"Example\"></p>\n\n<pre><code>For the given tree,\nThe maximum height difference is 1. The height difference of node 1 is the absolute difference of the height of subtree with root node 2, and the height of subtree with root node 3, which is 1. Hence the answer is 1. \n</code></pre>\n\n<h5 id=\"example\">Example:</h5>\n\n<pre><code>Elements are in the level order form. The input consists of values of nodes separated by a single space in a single line. In case a node is null, we take -1 in its place.\n\nFor example, the input for the tree depicted in the below image would be :\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/tree2-5139.png\" alt=\"Example\"></p>\n\n<pre><code>1\n2 3\n4 -1 5 6\n-1 7 -1 -1 -1 -1\n-1 -1\n\nExplanation :\nLevel 1 :\nThe root node of the tree is 1\n\nLevel 2 :\nLeft child of 1 = 2\nRight child of 1 = 3\n\nLevel 3 :\nLeft child of 2 = 4\nRight child of 2 = null (-1)\nLeft child of 3 = 5\nRight child of 3 = 6\n\nLevel 4 :\nLeft child of 4 = null (-1)\nRight child of 4 = 7\nLeft child of 5 = null (-1)\nRight child of 5 = null (-1)\nLeft child of 6 = null (-1)\nRight child of 6 = null (-1)\n\nLevel 5 :\nLeft child of 7 = null (-1)\nRight child of 7 = null (-1)\n\nThe first not-null node (of the previous level) is treated as the parent of the first two nodes of the current level. \n\nThe second not-null node (of the previous level) is treated as the parent node for the next two nodes of the current level and so on.\n\nThe input ends when all nodes at the last level are null (-1).\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>The above format was just to provide clarity on how the input is formed for a given tree. \n\nThe sequence will be put together in a single line separated by a single space. Hence, for the above-depicted tree, the input will be given as:\n\n1 2 3 4 -1 5 6 -1 7 -1 -1 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of the input contains an integer, &#39;T,\u2019 denoting the number of test cases.\n\nThe first line of each test case contains the elements of the tree in the level order form separated by a single space. If any node does not have a left or right child, take -1 in its place. Refer to the example for further clarification.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print a single integer that denotes the maximum height difference for the given tree.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 10^6\n1 &lt;= nodeVal &lt;=10^9\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n1 2 3 4 5 -1 -1 -1 -1 -1 -1 \n1 -1 2 -1 3 -1 4 -1 -1 \n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>1\n3\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of sample input 1:</h5>\n\n<pre><code>For the first test case, \nThe maximum height difference is 1. The height difference of node 1 is the absolute difference of the height of subtree with root node 2, and the height of subtree with root node 3, which is 1. Hence the answer is 1. \n</code></pre>\n\n<p><img src=\"https://ninjasfiles.s3.amazonaws.com/asset_0000000000000473_1626608226_NrNpEDisiXKDozxN.png\" alt=\"Example\"></p>\n\n<pre><code>For the second test case,\nThe maximum height difference is 3. The height difference of node 1 is the absolute difference of the height of subtree with root node 2, and the height of subtree with an empty node, which is 3. Hence the answer is 3.     \n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n1 2 3 4 -1 7 8 5 -1 9 -1 -1 -1 6 -1 -1 -1 -1 -1\n10 20 11 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>3\n0\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": -8,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given the root node of a binary tree with 'N' nodes, the task is to find the maximum height difference among all nodes in the tree. The height of a binary tree is the number of nodes in the longest path from the root to any leaf. The height difference of a node is the absolute difference between the heights of its left and right subtrees.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10^6",
                    "1 <= nodeVal <= 10^9",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "1 2 3 4 5 -1 -1 -1 -1 -1 -1",
                        "output": "1",
                        "explanation": "The maximum height difference is 1. The height difference of node 1 is the absolute difference of the height of subtree with root node 2, and the height of subtree with root node 3, which is 1."
                    },
                    {
                        "input": "1 -1 2 -1 3 -1 4 -1 -1",
                        "output": "3",
                        "explanation": "The maximum height difference is 3. The height difference of node 1 is the absolute difference of the height of subtree with root node 2, and the height of subtree with an empty node, which is 3."
                    },
                    {
                        "input": "1 2 3 4 -1 7 8 5 -1 9 -1 -1 -1 6 -1 -1 -1 -1 -1",
                        "output": "3",
                        "explanation": null
                    },
                    {
                        "input": "10 20 11 -1 -1 -1 -1",
                        "output": "0",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can we create a function to calculate the height of a node?</p>",
            "<p>Try to use a recursive approach.</p>",
            "<p>Can you avoid recursion and use any iterative approach for the task.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Binary Trees",
                "slug": "binary-trees"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}