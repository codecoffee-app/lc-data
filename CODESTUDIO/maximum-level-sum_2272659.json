{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 14823,
            "title": "Maximum Level Sum",
            "titleSlug": "maximum-level-sum_2272659",
            "content": "<h4 id=\"you-are-given-a-tree-consisting-of-n-nodes-your-task-is-to-find-the-level-of-the-tree-with-the-maximum-sum\">You are given a tree consisting of \u2018N\u2019 nodes. Your task is to find the level of the tree with the maximum sum.</h4>\n\n<h4 id=\"the-level-of-a-node-of-the-tree-is-the-distance-of-the-node-from-the-root-node-1\">The level of a node of the tree is the distance of the node from the root node + 1.</h4>\n\n<h5 id=\"for-example\">For example:</h5>\n\n<pre><code>You are given the tree:\n</code></pre>\n\n<p><img src=\"https://ninjasfiles.s3.amazonaws.com/asset_0000000000000503_1631163960_LevelOrder.drawio.png\" alt=\"altText\"></p>\n\n<pre><code>The Sum of all the levels are = [3, 9, 7], Here the level whose sum is maximum is level 2. Hence the answer is 2.\n</code></pre>\n\n<h5 id=\"example\">Example:</h5>\n\n<pre><code>Elements are in the level order form. The input consists of values of nodes separated by a single space in a single line. In case a node is null, we take -1 in its place.\n\nFor example, the input for the tree depicted in the below image would be :\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/tree2-5139.png\" alt=\"Example\"></p>\n\n<pre><code>1\n2 3\n4 -1 5 6\n-1 7 -1 -1 -1 -1\n-1 -1\n\nExplanation :\nLevel 1 :\nThe root node of the tree is 1\n\nLevel 2 :\nLeft child of 1 = 2\nRight child of 1 = 3\n\nLevel 3 :\nLeft child of 2 = 4\nRight child of 2 = null (-1)\nLeft child of 3 = 5\nRight child of 3 = 6\n\nLevel 4 :\nLeft child of 4 = null (-1)\nRight child of 4 = 7\nLeft child of 5 = null (-1)\nRight child of 5 = null (-1)\nLeft child of 6 = null (-1)\nRight child of 6 = null (-1)\n\nLevel 5 :\nLeft child of 7 = null (-1)\nRight child of 7 = null (-1)\n\nThe first not-null node (of the previous level) is treated as the parent of the first two nodes of the current level. \n\nThe second not-null node (of the previous level) is treated as the parent node for the next two nodes of the current level and so on.\n\nThe input ends when all nodes at the last level are null (-1).\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>The above format was just to provide clarity on how the input is formed for a given tree. \n\nThe sequence will be put together in a single line separated by a single space. Hence, for the above-depicted tree, the input will be given as:\n\n1 2 3 4 -1 5 6 -1 7 -1 -1 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of the input contains a single integer, &#39;T,\u2019 denoting the number of test cases.\n\nThe first line of each test case contains the elements of the tree in the level order form separated by a single space. If any node does not have a left or right child, take -1 in its place. Refer to the example for further clarification.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print a single integer representing the level whose sum is maximum.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n2 &lt;= N &lt;= 10^6\n-10^8 &lt;= nodeVal &lt;= 10^8\n\nTime Limit: 1 sec\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the function.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n3 4 5 2 -1 -1 5 -1 -1 -1 -1\n1 2 3 4 -1 -1 5 6 7 -1 -1 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>2\n4 \n</code></pre>\n\n<h5 id=\"explaination\">Explaination:</h5>\n\n<pre><code>For the first test case:\n</code></pre>\n\n<p><img src=\"https://ninjasfiles.s3.amazonaws.com/asset_0000000000000503_1631163960_LevelOrder.drawio.png\" alt=\"altText\"></p>\n\n<pre><code>The Sum of all the levels are = [3, 9, 7], Here the level whose sum is maximum is level 2. Hence the answer is 2.\n\nFor the second test case:\n</code></pre>\n\n<p><img src=\"https://ninjasfiles.s3.amazonaws.com/asset_0000000000000475_1626942636_treePostorder.png\" alt=\"alttext\"></p>\n\n<pre><code>The Sum of all levels is [1, 5, 9, 13], Here the level whose sum is maximum is level 4. Hence the answer is 4.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample input 2:</h5>\n\n<pre><code>2\n1 2 3 4 -1 -1 -1 -1 -1\n10 20 11 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2;</h5>\n\n<pre><code>2    \n2\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -6,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a tree consisting of 'N' nodes represented in level order, find the level of the tree with the maximum sum. The level of a node is defined as its distance from the root node + 1. The tree's structure is encoded in a single line with node values separated by spaces. A value of -1 indicates a null node.",
                "constraints": [
                    "1 <= T <= 10",
                    "2 <= N <= 10^6",
                    "-10^8 <= nodeVal <= 10^8",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "3 4 5 2 -1 -1 5 -1 -1 -1 -1",
                        "output": "2",
                        "explanation": "The level sums are [3, 9, 7]. Level 2 has the maximum sum of 9."
                    },
                    {
                        "input": "1 2 3 4 -1 -1 5 6 7 -1 -1 -1 -1 -1 -1",
                        "output": "4",
                        "explanation": "The level sums are [1, 5, 9, 13]. Level 4 has the maximum sum of 13."
                    },
                    {
                        "input": "1 2 3 4 -1 -1 -1 -1 -1",
                        "output": "2",
                        "explanation": "The level sums are [1, 5]. Level 2 has the maximum sum of 5."
                    },
                    {
                        "input": "10 20 11 -1 -1 -1 -1",
                        "output": "2",
                        "explanation": "The level sums are [10, 31]. Level 2 has the maximum sum of 31."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try using a depth-first search.</p>",
            "<p>&nbsp;Try thinking of an approach by doing level order traversal.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Depth-first Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-first Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Stacks & Queues",
                "slug": "stacks-&-queues"
            },
            {
                "name": "Binary Trees",
                "slug": "binary-trees"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}