{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 16333,
            "title": "Maximum Path Sum",
            "titleSlug": "maximum-path-sum_3125903",
            "content": "<h4 id=\"you-are-given-an-n-ary-tree-consisting-of-n-nodes-your-task-is-to-return-the-maximum-sum-of-the-path-from-the-root-to-the-leaf-node\">You are given an n-ary tree consisting of \u2018N\u2019 nodes. Your task is to return the maximum sum of the path from the root to the leaf node.</h4>\n\n<h5 id=\"for-example\">For example:</h5>\n\n<pre><code>For the given tree:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/tree1-13653.png\" alt=\"\"></p>\n\n<pre><code>The path 1 -&gt; 3 -&gt; 7 produces the maximum i.e, 11.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of the input contains a single integer &#39;T&#39;, representing the number of test cases.\n\nThe first line of each test case contains an integer &#39;N&#39;, which denotes the number of nodes in the tree.\n\nThe second line of each test case contains elements of the N-ary tree in the level order form. The line consists of values of nodes separated by a single space. In case a node is changed, we take -1. The first not-null node(of the previous level) is treated as the parent of the first node of the current level. The second not-null node (of the previous level) is treated as the parent node for the next nodes of the current level and so on.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print the maximum sum of the path from the root to the leaf node.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You don\u2019t need to print anything, it has already been taken care of.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 5000\n0 &lt;= DATA &lt;= 10^4\n\nWhere \u2018T\u2019 is the number of test cases, and \u2018N\u2019 is the total number of nodes in the binary tree, and \u201cDATA\u201d is the value of the tree node.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n7\n1 2 3 -1 4 5 6 -1 7 -1 -1 -1 -1 -1\n4\n1 2 3 4 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>11\n5\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1:</h5>\n\n<pre><code>Test Case 1: Given the tree:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/tree1-13653.png\" alt=\"\"></p>\n\n<pre><code>The path (1 -&gt; 3 -&gt; 7) produces the maximum sum i.e, 11.\n\nTest Case 2: Given the tree:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/tree2-13654.png\" alt=\"\"></p>\n\n<pre><code>The path (1 -&gt; 5) produces the maximum sum i.e, 5.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2 \n3\n1 3 -1 5 -1 -1\n5\n10 9 8 -1 1 2 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>9\n21\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": -8,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an N-ary tree of 'N' nodes, find the maximum sum of any path from the root to a leaf node.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 5000",
                    "0 <= DATA <= 10^4",
                    "Where \u2018T\u2019 is the number of test cases, \u2018N\u2019 is the total number of nodes in the tree, and \u201cDATA\u201d is the value of the tree node."
                ],
                "testcases": [
                    {
                        "input": "7\n1 2 3 -1 4 5 6 -1 7 -1 -1 -1 -1 -1\n4\n1 2 3 4 -1 -1 -1 -1",
                        "output": "11\n5",
                        "explanation": "Test Case 1: The maximum sum path is 1 -> 3 -> 7, with a sum of 11.\n\nTest Case 2: The maximum sum path is 1 -> 4, with a sum of 5."
                    },
                    {
                        "input": "3\n1 3 -1 5 -1 -1\n5\n10 9 8 -1 1 2 -1 -1 -1 -1",
                        "output": "9\n21",
                        "explanation": "Test Case 1: The maximum sum path is 1 -> 5, with a sum of 6.\n\nTest Case 2: The maximum sum path is 10 -> 9 -> 2, with a sum of 21."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Check the sum of every path from the root to the leaf node.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Depth-first Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Trees",
                "slug": "trees"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}