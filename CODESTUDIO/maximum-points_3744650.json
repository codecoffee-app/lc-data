{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 16994,
            "title": "Maximum Points",
            "titleSlug": "maximum-points_3744650",
            "content": "<h4 id=\"you-are-playing-a-video-game-which-contains-an-n-x-n-grid-you-start-on-the-top-left-cell-of-the-grid-and-are-free-to-move-anywhere-through-the-grid-any-number-of-times\">You are playing a video game, which contains an N x N grid. You start on the top left cell of the grid, and are free to move anywhere through the grid, any number of times.</h4>\n\n<h4 id=\"each-cell-in-the-grid-has-some-number-of-points-that-you-can-collect-from-it-and-you-can-collect-points-at-most-once-from-each-cell-furthermore-it-is-possible-to-collect-points-from-a-cell-if-and-only-if-the-cell-lies-on-one-of-the-two-diagonals-of-the-grid-print-the-maximum-number-of-points-you-can-collect-given-the-grid\">Each cell in the grid has some number of points that you can collect from it and you can collect points at most once from each cell. Furthermore, it is possible to collect points from a cell, if and only if the cell lies on one of the two diagonals of the grid. Print the maximum number of points you can collect, given the grid.</h4>\n\n<h4 id=\"for-example\">For example:</h4>\n\n<pre><code>If the grid is:\n1 2\n3 4\nWe can collect points from all cells as each cell lies on a diagonal. So, the maximum points will be 1+2+3+4 = 10.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains &#39;T&#39;, denoting the number of test cases.\nFor each Test :\nThe first line contains an integer \u2018N\u2019.\nThe next \u2018N\u2019 lines contain \u2018N\u2019 space separated integers each, representing the grid.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>Print one integer, the maximum number of points you can gain from the grid.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You are not required to print the expected output. It has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints -</h5>\n\n<pre><code>1 &lt;= &#39;T&#39; &lt;= 10\n1 &lt;= \u2018N\u2019 &lt;= 1000.\n1 &lt;= \u2018A[i][j]\u2019 &lt;= 1000, i \u2208 [1,N], j \u2208 [1,N]\nNote: It is guaranteed that the sum of N^2 across all test cases will be at most 10^6.\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n3 \n1 2 3\n4 5 6\n7 8 9\n1\n5\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1</h5>\n\n<pre><code>25\n5\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1:</h5>\n\n<pre><code>For test case 1:\n    We can sum up all the elements that lie on the diagonals, namely 1+5+9+3+7 = 25.\n\nFor Test case 2:\n    Since there is only one element, we can take it.    \n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\n2\n4 5\n6 7\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>22\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 0,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an N x N grid, you start at the top-left cell. You can move freely within the grid any number of times, but can only collect points from cells lying on either of the grid's two diagonals. Each cell's points can be collected at most once.  Determine the maximum total points you can collect from the grid.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 1000",
                    "1 <= A[i][j] <= 1000, where i and j are in the range [1, N]",
                    "Sum of N^2 across all test cases will be at most 10^6.",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "3\n1 2 3\n4 5 6\n7 8 9",
                        "output": "25",
                        "explanation": "The diagonals are 1, 5, 9 and 3, 7. The sum is 1 + 5 + 9 + 3 + 7 = 25."
                    },
                    {
                        "input": "1\n5",
                        "output": "5",
                        "explanation": "The grid has only one cell with a value of 5.  The maximum points you can collect is 5."
                    },
                    {
                        "input": "2\n4 5\n6 7",
                        "output": "22",
                        "explanation": "The diagonals are 4, 7 and 5, 6. The sum is 4 + 5 + 6 + 7 = 22."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can we iterate over all cells and check if we can gain points from it?</p>",
            "<p><strong>&nbsp;</strong>Can we iterate only over diagonal elements?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Matrices (2D Arrays)",
                "slug": "matrices-(2d-arrays)"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}