{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8655,
            "title": "Maximum sum of (i*Arr[i]) among all possible rotations of an array.",
            "titleSlug": "maximum-sum-of-i-arr-i-among-all-possible-rotations-of-an-array_893272",
            "content": "<h4 id=\"you-are-given-an-array-arr-consisting-of-n-elements-and-you-need-to-find-the-maximum-value-of-sum-i-arr-i-among-all-possible-rotations-of-the-given-array-the-rotations-allowed-are-left-rotation-and-right-rotation-and-these-rotations-can-be-performed-any-number-of-times-on-the-array\">You are given an array &#39;ARR&#39; consisting of &#39;N&#39; elements, and you need to find the maximum value of sum(i * ARR[i]) among all possible rotations of the given array. The rotations allowed are left rotation, and right rotation, and these rotations can be performed any number of times on the array.</h4>\n\n<h4 id=\"sum-i-arr-i-denotes-the-summation-of-all-values-i-arr-i-for-every-i-where-0-i-n-1\">Sum(i * ARR[i]) denotes the summation of all values (i * ARR[i]) for every &#39;i&#39;, where 0 &lt;= &#39;i&#39; &lt;= &#39;N&#39; - 1.</h4>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>1. The array follows 0-based indexing.\n2. In one rotation operation, all elements of the array will shift either towards the left or right by one index.\n3. The element at the extreme left index (i.e. 0th index) will shift to the &#39;N-1&#39;th index after applying one left rotation on the array and the rest all the elements will shift to the &#39;i-1&#39;th index.\n4. The element at the extreme right index (i.e. &#39;N-1&#39;th index) will shift to the 0th index after applying one right rotation on the array and the rest of the elements will shift to the &#39;i&#39; + 1&#39;th index.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of the input contains an integer &#39;T&#39; denoting the number of test cases.\n\nThe first line of each test case contains the integer &#39;N&#39;, denoting the size of the array.\n\nThe second line of each test case contains &#39;N&#39; space-separated integers denoting the array elements.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>The only line of output of each test case should contain an integer, denoting the maximum value of sum(i * ARR[i]).\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don&#39;t need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10^2\n1 &lt;= N &lt;= 10^4\n0 &lt;= ARR[i] &lt;= 10^6\n\nTime Limit : 1sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>1\n5\n1 5 2 10 0\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>57   \n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1 :</h5>\n\n<pre><code>Sum of all i*ARR[i] values after &#39;X&#39; rotations are as follows:\nAfter 0 rotations (original array): 0*1 + 1*5 + 2*2 + 3*10 + 4*0 = 39.\nWe are choosing to rotate left.\nAfter 1 rotation to the left on the original array: 0*5 + 1*2 + 2*10 + 3*0 + 4*1 = 26.\nAfter 2 rotations to the left on the original array: 0*2 + 1*10 + 2*0 + 3*1 + 4*5 = 33.\nAfter 3 rotations to the left on the original array: 0*10 + 1*0 + 2*1 + 3*5 + 4*2 = 25.  \nAfter 4 rotations to the left on the original array: 0*0 + 1*1 + 2*5 + 3*2 + 4*10 = 57.\n57 is the maximum value of sum(i*ARR[i]) among all rotations of the given array.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>1\n4\n1 2 3 4\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>20\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation For Sample Input 2 :</h5>\n\n<pre><code>The original array has the maximum sum among all possible rotations of the array. The original array sums to 20, as 1*0 + 2*1 + 3*2 + 4*3 = 20. \n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 3,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array 'ARR' of 'N' elements, find the maximum value of sum(i * ARR[i]) among all possible rotations. Rotations can be left or right, performed any number of times.  Sum(i * ARR[i]) is the summation of all values (i * ARR[i]) for every 'i' from 0 to 'N' - 1 (inclusive). Remember the array is 0-indexed.",
                "constraints": [
                    "1 <= T <= 10^2",
                    "1 <= N <= 10^4",
                    "0 <= ARR[i] <= 10^6",
                    "Time Limit : 1sec"
                ],
                "testcases": [
                    {
                        "input": "1\n5\n1 5 2 10 0",
                        "output": "57",
                        "explanation": "The maximum sum is achieved after 4 left rotations. Here's a breakdown:\n- Original array: 0*1 + 1*5 + 2*2 + 3*10 + 4*0 = 39\n- 1 left rotation: 0*5 + 1*2 + 2*10 + 3*0 + 4*1 = 26\n- 2 left rotations: 0*2 + 1*10 + 2*0 + 3*1 + 4*5 = 33\n- 3 left rotations: 0*10 + 1*0 + 2*1 + 3*5 + 4*2 = 25\n- 4 left rotations: 0*0 + 1*1 + 2*5 + 3*2 + 4*10 = 57"
                    },
                    {
                        "input": "1\n4\n1 2 3 4",
                        "output": "20",
                        "explanation": "The original array configuration yields the maximum sum: 0*1 + 1*2 + 2*3 + 3*4 = 20"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Find maximum from all possible rotations.</p>",
            "<p>Observe some property of sum(i * ARR[i]) over all possible rotations.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}