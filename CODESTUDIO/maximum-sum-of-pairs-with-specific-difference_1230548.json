{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10507,
            "title": "Maximum sum of pairs with specific difference",
            "titleSlug": "maximum-sum-of-pairs-with-specific-difference_1230548",
            "content": "<h4 id=\"you-are-given-an-array-of-integers-and-a-number-k-you-can-pair-two-elements-in-the-array-arr-if-the-absolute-difference-between-them-is-strictly-less-than-k-your-task-is-to-find-the-maximum-possible-sum-of-disjoint-pairs-among-all-the-pairs-of-numbers-you-can-obtain\">You are given an array of integers and a number \u2018K\u2019. You can pair two elements in the array &#39;ARR&#39; if the absolute difference between them is strictly less than \u2018K\u2019. Your task is to find the maximum possible sum of disjoint pairs among all the pairs of numbers you can obtain.</h4>\n\n<h4 id=\"the-sum-of-a-pair-is-the-sum-of-the-elements-in-the-pair\">The sum of a pair is the sum of the elements in the pair.</h4>\n\n<h5 id=\"for-example\">For Example:</h5>\n\n<pre><code>Input: ARR[] = {3, 5, 10, 15, 17, 12, 9}, K = 4\nOutput: 62\n\nThen disjoint pairs with the absolute difference less than K are \n(3, 5), (10, 12), (15, 17)  \nSo maximum sum which we can get is 3 + 5 + 12 + 10 + 15 + 17 = 62\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>Note that an alternate way to form disjoint pairs is, (3, 5), (9, 12), (15, 17), but this pairing produces a lesser sum.\n</code></pre>\n\n<h5 id=\"input-format\">Input format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases to run.\n\nThe first line of each test contains an integer &#39;N&#39;, denoting the size of the array &#39;ARR&#39; which would be given.\n\nThe next line is the given array values in a space-separated set of \u2018N\u2019 elements.\n\nThe last line of every test case is s single integer denoting \u2018K\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output format:</h5>\n\n<pre><code>For every test case, you need to print the maximum possible sum of disjoint pairs. \n\nOutput for each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= N &lt;= 3000\n1 &lt;= ARR[i] &lt;=1000\n1 &lt;= K &lt; 1000\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n7\n3 5 10 15 17 12 9\n4\n4\n5 15 10 300\n12\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>62\n25\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1:</h5>\n\n<pre><code>For First test case: \nThen disjoint pairs with a difference less than K (Here K = 4) are, (3, 5), (10, 12), (15, 17)  \nSo maximum sum which we can get is 3 + 5 + 12 + 10 + 15 + 17 = 62\n\nFor Second test case:\nThen disjoint pairs with a difference less than K (Here K = 12) are, (10, 15)  \nSo the maximum sum which we can get is 10 + 15 = 25\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n5\n1 2 3 4 5\n2\n5\n2 3 12 53 28 \n5\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>14\n5\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-2\">Explanation Of Sample Input 2:</h5>\n\n<pre><code>For First test case: \nThen disjoint pairs with a difference less than K (Here K = 2) are, (3, 5), (2, 4)\nSo maximum sum which we can get is 3 + 5 + 2 + 4 = 14\n\nFor Second test case:\nThen disjoint pairs with a difference less than K (Here K = 5) are, (2, 3)  \nSo the maximum sum which we can get is 2 + 3 = 5\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 5,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of integers `ARR` and a number `K`, you can pair two elements in the array if the absolute difference between them is strictly less than `K`. The goal is to find the maximum possible sum of disjoint pairs among all possible pairs. The sum of a pair is simply the sum of the two elements in that pair.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= N <= 3000",
                    "1 <= ARR[i] <= 1000",
                    "1 <= K < 1000",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "7\n3 5 10 15 17 12 9\n4",
                        "output": "62",
                        "explanation": "Pairs with absolute difference less than 4 are (3, 5), (10, 12), and (15, 17). The sum of these pairs is 3 + 5 + 10 + 12 + 15 + 17 = 62."
                    },
                    {
                        "input": "4\n5 15 10 300\n12",
                        "output": "25",
                        "explanation": "The pair with absolute difference less than 12 is (10, 15). The sum of this pair is 10 + 15 = 25."
                    },
                    {
                        "input": "5\n1 2 3 4 5\n2",
                        "output": "14",
                        "explanation": "Pairs with absolute difference less than 2 are (1, 2), (3, 4). The sum of these pairs is 1 + 2 + 3 + 4 = 10."
                    },
                    {
                        "input": "5\n2 3 12 53 28\n5",
                        "output": "5",
                        "explanation": "The pair with absolute difference less than 5 is (2, 3). The sum of this pair is 2 + 3 = 5."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to arrange them in specific order and then find all pairs.</p>",
            "<p>Can you use the fact that if arr[i] - arr[i - 1] is not less than K then arr[i] - arr[i - 2] also won\u2019t be since the array we have is sorted.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}