{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10506,
            "title": "Maximum Sum Subsequence",
            "titleSlug": "maximum-sum-subsequence_1230547",
            "content": "<h4 id=\"you-are-given-an-array-nums-consisting-of-n-integers-and-an-integer-k-your-task-is-to-determine-the-maximum-sum-of-an-increasing-subsequence-of-length-k\">You are given an array \u201cNUMS\u201d consisting of N integers and an integer, K. Your task is to determine the maximum sum of an increasing subsequence of length K.</h4>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>1. The array may contain duplicate elements.\n2. The array can also contain negative integers.\n3. Every element of the subsequence must be greater than or equal to the previous element.\n</code></pre>\n\n<h4 id=\"the-subsequence-of-an-array-is-a-sequence-of-numbers-that-can-be-formed-by-deleting-some-or-no-elements-without-changing-the-order-of-the-remaining-elements-for-example-if-the-given-array-nums-1-2-5-4-8-then-1-2-5-4-8-1-5-8-2-are-some-of-the-valid-subsequences-whereas-the-sequence-4-2-is-not-a-valid-subsequence-as-the-order-of-the-elements-differ-from-the-original-array\">The subsequence of an array is a sequence of numbers that can be formed by deleting some or no elements without changing the order of the remaining elements. For example, if the given array \u201cNUMS\u201d = {1, 2, 5, 4, 8}, then {1, 2, 5, 4, 8}, {1, 5, 8}, {2} are some of the valid subsequences whereas the sequence {4, 2} is not a valid subsequence as the order of the elements differ from the original array.</h4>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains an integer T, which denotes the number of test cases or queries to be run. Then, the T test cases follow. \n\nThe first line of each test case contains two space-separated integers N and K, denoting the number of elements in the array and the length of the subsequence to be considered.\n\nThe second line of each test case contains N space-separated integers, representing the elements of the array.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print in a new line, an integer denoting the maximum sum of an increasing subsequence of length K.\n\nPrint \u201c-1\u201d if no such subsequence exists.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 500\n1 &lt;= K &lt;= N\n-10^9 &lt;= NUMS[i] &lt;= 10^9\n\nWhere NUMS[i] represents the i-th element of the array.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1\n5 3\n1 3 -2 4 5\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>12\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1:</h5>\n\n<pre><code>In the first test case, the subsequence having 3(index 1), 4(index 3), and 5(index 4) have the sum of 12, which is the maximum amongst all increasing subsequences having a total of 3 elements. Note that there can be more than one increasing subsequence with the required length, but we have to choose the one which has the maximum sum. In this example, some other such subsequences will be :\n1 3 4    sum = 8\n1 3 5    sum = 9\n1 4 5    sum = 10\n3 4 5    sum = 12\n-2 4 5  sum = 7\nThus, maximum value of the subsequence is 12.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\n4 3\n5 7 4 3\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>-1\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-2\">Explanation Of Sample Input 2:</h5>\n\n<pre><code>In the first test case, there are a total of 4 subsequences having 3 elements. But none of these subsequences is increasing, so we output \u201c-1\u201d.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 8,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of integers `nums` and an integer `k`, find the maximum sum of an increasing subsequence of length `k`. An increasing subsequence is a sequence of elements from the array such that each element is greater than or equal to the previous element. If no such subsequence exists, return -1.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 500",
                    "1 <= K <= N",
                    "-10^9 <= NUMS[i] <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "nums=[1, 3, -2, 4, 5], k=3",
                        "output": "12",
                        "explanation": "The subsequence {3, 4, 5} has a sum of 12, which is the maximum among all increasing subsequences of length 3."
                    },
                    {
                        "input": "nums=[5, 7, 4, 3], k=3",
                        "output": "-1",
                        "explanation": "There are no increasing subsequences of length 3 in the given array."
                    },
                    {
                        "input": "nums=[1, 2, 3, 4, 5], k=1",
                        "output": "5",
                        "explanation": "The subsequence {5} has the maximum sum of 5 among all increasing subsequences of length 1."
                    },
                    {
                        "input": "nums=[-5, -4, -3, -2, -1], k=3",
                        "output": "-6",
                        "explanation": "The subsequence {-3, -2, -1} has the maximum sum of -6 among all increasing subsequences of length 3."
                    },
                    {
                        "input": "nums=[1, 1, 1, 1, 1], k=3",
                        "output": "3",
                        "explanation": "The subsequence {1, 1, 1} has the maximum sum of 3 among all increasing subsequences of length 3."
                    },
                    {
                        "input": "nums=[5, 4, 3, 2, 1], k=3",
                        "output": "-1",
                        "explanation": "There are no increasing subsequences of length 3."
                    },
                    {
                        "input": "nums=[1, 5, 2, 4, 3], k=2",
                        "output": "9",
                        "explanation": "The subsequences of size 2 are {1,5}, {1,2}, {1,4}, {1,3}, {5}, {5,2}, {5,4}, {5,3}, {2,4}, {2,3} {4,3}.  The increasing ones are {1,5}, {1,2}, {1,4}, {1,3} {2,4}, {2,3}, {4} So max is  1+5 = 6 (1,5)  2+4 = 6(2,4), 2+3=5. should be {5}. wrong answer it should be {1,5}, with sum = 6 if k=2, so fix this "
                    },
                    {
                        "input": "nums=[2,1,3,4,5], k =4",
                        "output": "13",
                        "explanation": "subsequence = {1,3,4,5}, max sum = 13"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Find all subsequences of length K using recursion.</p>",
            "<p>Try to store all the value of subsequence and then find maximum out of it.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}