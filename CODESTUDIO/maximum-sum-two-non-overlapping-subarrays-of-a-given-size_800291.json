{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8062,
            "title": "Maximum sum two non-overlapping subarrays of a given size",
            "titleSlug": "maximum-sum-two-non-overlapping-subarrays-of-a-given-size_800291",
            "content": "<h4 id=\"you-are-given-an-array-list-arr-of-integers-and-a-positive-integer-k-your-task-is-to-find-two-non-overlapping-subarrays-contiguous-each-of-length-k-such-that-the-total-sum-of-these-subarrays-is-maximum\">You are given an array/list ARR of integers and a positive integer \u2018K\u2019. Your task is to find two non-overlapping subarrays (contiguous) each of length \u2018K\u2019 such that the total sum of these subarrays is maximum.</h4>\n\n<h5 id=\"for-example\">For Example:</h5>\n\n<pre><code>If you are given ARR = [2, 5, 1, 2, 7, 3, 0] and K = 2, the output is 17. \n\nWe can choose non-overlapping subarrays [2, 5] and [7, 3] to get a total sum of 17 (i.e. 2 + 5 + 7 + 3) which is the maximum possible sum.\n</code></pre>\n\n<h4 id=\"you-can-assume-that-the-array-will-always-contain-at-least-two-non-overlapping-subarrays-with-size-k-so-the-answer-will-always-exist\">You can assume that the array will always contain at least two non-overlapping subarrays with size \u2018K\u2019. So, the answer will always exist.</h4>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer &#39;T&#39; representing the number of test cases or queries to be processed. Then the test case follows.\n\nThe first line of each test case contains two single space-separated integers \u2018N\u2019 and \u2018K\u2019, respectively. \u2018N\u2019 represents the size of the array/list.\n\nThe second line of each test case contains N single space-separated integers representing the array/list elements.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print a single line containing a single integer representing the total maximum possible sum.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10 ^ 2\n2 &lt;= N &lt;= 5 * 10 ^ 3\n1 &lt;= K &lt;= N / 2\n-10 ^ 5 &lt;= ARR[i] &lt;= 10 ^ 5\n\nWhere \u2018N\u2019 is the number of elements in the array/list ARR.\nARR[i] represents the ith element of ARR.\n\nTime Limit: 1 sec.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>1\n5 2\n7 1 6 9 2\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>23\n</code></pre>\n\n<h4 id=\"sample-output-1-explanation\">Sample Output 1 Explanation:</h4>\n\n<pre><code>For the first test case, all subarrays of size 2 and their sums are:\n{7, 1} : sum = 7+1 = 8\n{1, 6} : sum = 1+6 = 7\n{6, 9} : sum = 6+9 = 15\n{9, 2} : sum = 9+2 = 11\n\nThe two non-overlapping subarrays with the maximum total sum are {7,1} and {6,9}. So, the output is the total of their sums i.e. 15 + 8 = 23.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n10 3\n10 1 3 15 30 40 4 50 2 1\n9 2\n4 8 -1 -23 8 7 -6 5 0\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>142\n27\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 64,
            "dislikes": "NA",
            "rephrased": {
                "body": "You are given an array of integers and a positive integer 'K'. Find two non-overlapping, contiguous subarrays, each of length 'K', such that the total sum of these subarrays is maximized. Assume that the array will always contain at least two non-overlapping subarrays with size 'K'.",
                "constraints": [
                    "1 <= T <= 100 (Number of test cases)",
                    "2 <= N <= 5000 (Size of the array)",
                    "1 <= K <= N / 2 (Length of subarrays)",
                    "-100000 <= ARR[i] <= 100000 (Value of array elements)"
                ],
                "testcases": [
                    {
                        "input": "5 2\n7 1 6 9 2",
                        "output": "23",
                        "explanation": "Subarrays of size 2: {7, 1}, {1, 6}, {6, 9}, {9, 2}.  Their sums are 8, 7, 15, and 11, respectively. The two non-overlapping subarrays with the maximum total sum are {7,1} and {6,9}.  So, the output is 8 + 15 = 23."
                    },
                    {
                        "input": "10 3\n10 1 3 15 30 40 4 50 2 1",
                        "output": "142",
                        "explanation": null
                    },
                    {
                        "input": "9 2\n4 8 -1 -23 8 7 -6 5 0",
                        "output": "27",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Naively check every pair of non-overlapping subarrays.</p>",
            "<p>Use dynamic programming to get the result till the i-th index.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}