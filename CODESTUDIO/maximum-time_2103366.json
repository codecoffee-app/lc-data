{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 14262,
            "title": "Maximum Time",
            "titleSlug": "maximum-time_2103366",
            "content": "<h4 id=\"you-are-given-a-string-that-represents-time-in-the-format-hh-mm-some-of-the-digits-are-blank-represented-by-fill-in-such-that-the-time-represented-by-this-string-is-the-maximum-possible-maximum-time-23-59-minimum-time-00-00-you-can-assume-that-the-input-string-is-always-valid\">You are given a string that represents time in the format hh:mm. Some of the digits are blank (represented by \u2018?\u2019). Fill in \u2018?\u2019 such that the time represented by this string is the maximum possible. Maximum time: 23:59, minimum time: 00:00. You can assume that the input string is always valid.</h4>\n\n<h5 id=\"for-example\">For Example :</h5>\n\n<pre><code>If the given input string is 1?:?8.\nWe can replace the first \u2018?\u2019 with 9 and second with 5 to get the maximum time of 19:58.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code> The first line contains a single integer \u2018T\u2019 denoting the number of test cases Then each test case follows.\n The first line of each test case contains a string in the format of \u2018hh:mm\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code> For each test case print a string denoting the maximum possible time after replacing the \u2018?\u2019 marks with numbers..\n\nOutput for each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<p>You are not required to print anything; it has already been taken care of. Just implement the function.</p>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 1000     \n|S| = 5\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n?4:5?\n23:5?\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>14:59\n23:59\n</code></pre>\n\n<h5 id=\"explanation-of-sample-output-1\">Explanation Of Sample Output 1 :</h5>\n\n<pre><code>For test case 1 :\nWe can only put 0 and 1 at the first position. so we choose 1 for maximum time. We put 9 at the end to maximize the minutes.\n\nFor test case 2 :\n23:59 is the maximum time possible for any string.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>1\n12:22\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code> 12:22\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 2,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string representing time in HH:MM format, where some digits are represented by '?'. Replace the '?' characters to maximize the time. The valid time range is 00:00 to 23:59. Assume the input string is always valid, meaning that after replacing the '?' characters, a valid time can be formed.",
                "constraints": [
                    "1 <= T <= 1000",
                    "|S| = 5",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "?4:5?",
                        "output": "14:59",
                        "explanation": "To maximize the time, replace the first '?' with '1' and the second '?' with '9'."
                    },
                    {
                        "input": "23:5?",
                        "output": "23:59",
                        "explanation": "Replace the '?' with '9' to get the maximum possible time."
                    },
                    {
                        "input": "12:22",
                        "output": "12:22",
                        "explanation": "No '?' characters to replace, so the output is the same as the input."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to form cases for each position separately.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}