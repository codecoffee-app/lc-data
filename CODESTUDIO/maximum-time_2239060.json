{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 14710,
            "title": "Maximum Time",
            "titleSlug": "maximum-time_2239060",
            "content": "<h4 id=\"you-are-given-n-locations-you-are-provided-with-an-integer-representing-the-speed-you-have-to-find-the-maximum-time-it-will-take-traveling-between-any-two-locations\">You are given \u2018N\u2019 locations. You are provided with an integer representing the speed. You have to find the maximum time it will take traveling between any two locations.</h4>\n\n<h4 id=\"each-location-has-two-integer-values-representing-the-x-and-y-coordinates-respectively\">Each location has two integer values representing the \u2018x\u2019 and \u2018y\u2019 coordinates, respectively.</h4>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You have to use Euclidean distance i.e., sqrt((y2 - y1)^2 + (x2 - x1)^2)\nYou have to return the time with the precision of up to 6 decimal places.\n</code></pre>\n\n<h5 id=\"for-example\">For example:</h5>\n\n<pre><code>You are given \u2018locations\u2019 = [[0, 2], [0, 0], [2, 0]], and \u2018speed\u2019 = 2, then the maximum time will be between points [0, 2], [2, 0] which is 1.41421356237. Hence the answer rounded up to 6 decimal places is 1.414214.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code> The first line of input contains the integer \u2018T\u2019 representing the number of test cases.\n\nThe first line of each test case contains two space-separated integers, &#39;N&#39; and &#39;speed&#39;, representing the number of locations and speed, respectively.\n\nThe next \u2018N\u2019 lines contain two space-separated integers, \u2018x\u2019 and \u2018y\u2019, representing the point in coordinate space as a location.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print a positive real number, up to 6 decimal places, representing the maximum time it will take traveling between any two locations.\n\nPrint a separate line for each test case.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 10^5\n1 &lt;= speed &lt;= 10^5\n2 &lt;= x, y &lt;= 10^5\n\nTime Limit: 1 sec\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the function.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n3 2\n0 0\n2 0\n0 2\n3 1\n1 0\n0 0\n2 0\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>1.414214\n2.000000\n</code></pre>\n\n<h5 id=\"explanation\">Explanation:</h5>\n\n<pre><code>For the first test case, locations = [[0, 2], [0, 0], [2, 0]], and speed = 2, then the maximum time will be between points [0, 2], [2, 0] which is 1.41421356237. Hence the answer rounded up to 6 decimal places is 1.414214.\n\nFor the second test case, locations = [[1, 0], [0, 0], [2, 0]], and speed = 1, then the maximum time will be between points [0, 0], [2, 0] which is 2.0. Hence the answer rounded up to 6 decimal places is 2.000000.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n4 2\n0 2\n0 3\n0 4\n0 1\n2 2\n1 0\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>1.500000    \n0.500000\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": -4,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given 'N' locations represented by their x and y coordinates, and a 'speed', find the maximum time it takes to travel between any two locations.  The distance between two locations should be calculated using the Euclidean distance formula: sqrt((y2 - y1)^2 + (x2 - x1)^2). Return the maximum time with a precision of up to 6 decimal places.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10^5",
                    "1 <= speed <= 10^5",
                    "2 <= x, y <= 10^5",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "3 2\n0 0\n2 0\n0 2",
                        "output": "1.414214",
                        "explanation": "The locations are [[0, 0], [2, 0], [0, 2]] and the speed is 2. The maximum distance is between [0, 2] and [2, 0], which is approximately 2.828427.  Dividing the maximum distance by the speed (2) gives approximately 1.41421356237, which is rounded to 1.414214."
                    },
                    {
                        "input": "3 1\n1 0\n0 0\n2 0",
                        "output": "2.000000",
                        "explanation": "The locations are [[1, 0], [0, 0], [2, 0]] and the speed is 1. The maximum distance is between [0, 0] and [2, 0], which is 2. Dividing the maximum distance by the speed (1) gives 2, which is formatted to 2.000000."
                    },
                    {
                        "input": "4 2\n0 2\n0 3\n0 4\n0 1",
                        "output": "1.500000",
                        "explanation": "The locations are [[0, 2], [0, 3], [0, 4], [0, 1]] and the speed is 2. The maximum distance is between [0, 1] and [0, 4], which is 3. Dividing the maximum distance by the speed (2) gives 1.5, which is formatted to 1.500000."
                    },
                    {
                        "input": "2 2\n1 0",
                        "output": "0.500000",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>&nbsp;Try to find the points with the maximum distance between them.</p>",
            "<p>Try to use the convex hull of the points given.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Computational Geometry",
                "slug": "computational-geometry"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}