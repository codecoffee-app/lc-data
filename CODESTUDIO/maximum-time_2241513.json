{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 14725,
            "title": "Maximum Time",
            "titleSlug": "maximum-time_2241513",
            "content": "<h4 id=\"you-are-preparing-for-google-interviews-you-came-across-a-problem-where-you-have-a-string-str-representing-the-time-in-hh-mm-24-hr-format-some-of-the-digits-are-blank-which-is-represented-by-replace-the-such-that-the-time-represented-by-this-string-is-the-maximum-possible\">You are preparing for google interviews. You came across a problem where you have a string \u2018STR\u2019, representing the time in \u2018hh:mm\u2019 (24  hr format). Some of the digits are blank, which is represented by \u2018#\u2019.  Replace the \u2018#\u2019 such that the time represented by this string is the maximum possible.</h4>\n\n<h4 id=\"example\">Example :</h4>\n\n<pre><code>Given \u2018STR\u2019 : #5:40\nMaximum time possible can be : 15:40\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019, the number of test cases.\n\nThe first line of each test case contains the string \u2018STR\u2019, representing the time.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print a string representing the maximum possible time.\n\nOutput for each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 50\nThe string \u2018STR\u2019 is always valid.    \n\nTime Limit : 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n#5:40\n#4:#5\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>15:40\n14:55\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1 :</h5>\n\n<pre><code>For first test case :\n\nThe maximum possible hour can be 15, and the maximum possible minutes can be 40.\n\nFor second test case :\n\nThe maximum possible hour can be 14, and the maximum possible minutes can be 55.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n##:30\n14:2#\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>23:30\n14:29\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -8,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string `STR` representing the time in 'hh:mm' (24-hour format), where some digits are blank, represented by '#'. Replace the '#' characters such that the resulting time is the maximum possible valid time.",
                "constraints": [
                    "1 <= T <= 50",
                    "The string \u2018STR\u2019 is always valid.",
                    "Time Limit : 1 sec"
                ],
                "testcases": [
                    {
                        "input": "#5:40\n#4:#5",
                        "output": "15:40\n14:55",
                        "explanation": "For the first test case, the maximum possible hour is 15, and the minutes are already defined as 40. For the second test case, the maximum possible hour is 14, and the maximum possible minutes are 55."
                    },
                    {
                        "input": "##:30\n14:2#",
                        "output": "23:30\n14:29",
                        "explanation": "For the first test case, the maximum possible hour is 23, and the minutes are already defined as 30. For the second test case, the hour is already defined as 14, and the maximum possible value for the minutes becomes 29."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try finding all possible time.</p>",
            "<p>Think of assigning digits greedily.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}