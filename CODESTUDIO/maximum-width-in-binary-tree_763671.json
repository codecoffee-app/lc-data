{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 7787,
            "title": "Maximum Width In Binary Tree",
            "titleSlug": "maximum-width-in-binary-tree_763671",
            "content": "<h4 id=\"you-have-been-given-a-binary-tree-of-integers-you-are-supposed-to-return-the-maximum-width-of-the-given-binary-tree-the-maximum-width-of-the-tree-is-the-maximum-width-among-all-the-levels-of-the-given-tree\">You have been given a Binary Tree of integers. You are supposed to return the maximum width of the given Binary Tree. The maximum width of the tree is the maximum width among all the levels of the given tree.</h4>\n\n<p><br></p>\n\n<h4 id=\"the-width-of-one-level-is-defined-as-the-length-between-the-leftmost-and-the-rightmost-non-null-nodes-in-the-level-where-the-null-nodes-in-between-the-leftmost-and-rightmost-are-excluded-into-length-calculation\">The width of one level is defined as the length between the leftmost and the rightmost, non-null nodes in the level, where the null nodes in between the leftmost and rightmost are excluded into length calculation.</h4>\n\n<p><br></p>\n\n<h5 id=\"for-example\">For example :</h5>\n\n<pre><code>For the given binary tree\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/btree-5038.png\" alt=\"Example\"></p>\n\n<pre><code>The maximum width will be at the third level with the length of 3, i.e. {4, 5, 6}.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The only line of input contains elements in the level order form. The line consists of values of nodes separated by a single space. In case a node is null, we take -1 in its place.\n\nFor example, the input for the tree depicted in the below image would be :\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/btree-5038.png\" alt=\"Example\"></p>\n\n<pre><code>1\n2 3\n4 -1 5 6\n-1 7 -1 -1 -1 -1\n-1 -1\n</code></pre>\n\n<h4 id=\"explanation\">Explanation :</h4>\n\n<pre><code>Level 1 :\nThe root node of the tree is 1\n\nLevel 2 :\nLeft child of 1 = 2\nRight child of 1 = 3\n\nLevel 3 :\nLeft child of 2 = 4\nRight child of 2 = null (-1)\nLeft child of 3 = 5\nRight child of 3 = 6\n\nLevel 4 :\nLeft child of 4 = null (-1)\nRight child of 4 = 7\nLeft child of 5 = null (-1)\nRight child of 5 = null (-1)\nLeft child of 6 = null (-1)\nRight child of 6 = null (-1)\n\nLevel 5 :\nLeft child of 7 = null (-1)\nRight child of 7 = null (-1)\n\nThe first not-null node(of the previous level) is treated as the parent of the first two nodes of the current level. The second not-null node (of the previous level) is treated as the parent node for the next two nodes of the current level and so on.\nThe input ends when all nodes at the last level are null(-1).\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>The above format was just to provide clarity on how the input is formed for a given tree. \nThe sequence will be put together in a single line separated by a single space. Hence, for the above-depicted tree, the input will be given as:\n\n1 2 3 4 -1 5 6 -1 7 -1 -1 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>Print a single line that contains a single integer that denotes the maximum width for the given tree.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the given function.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>1 2 3 4 -1 5 6 -1 7 -1 -1 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>3\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1 :</h5>\n\n<p><img src=\"https://files.codingninjas.in/btree-5038.png\" alt=\"Example\">\n    The maximum width will be at the third level with the length of 3, i.e. {4, 5, 6}.</p>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2 7 5 2 6 -1 9 -1 -1 5 11 4 -1 -1 -1 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>3\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>0 &lt;= &#39;N&#39; &lt;= 5 * 10 ^ 5\n0 &lt;= &#39;DATA&#39; &lt;= 10 ^ 6 and data != -1\nWhere \u2018N\u2019 is the total number of nodes in the binary tree, and &#39;DATA&#39; is the value of the binary tree node.\n\nTime Limit: 1sec.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 54,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a binary tree represented by its root node, determine the maximum width of the tree. The width at each level is defined as the number of nodes between the leftmost and rightmost non-null nodes at that level. Return the maximum width found across all levels.",
                "constraints": [
                    "0 <= 'N' <= 5 * 10 ^ 5, where \u2018N\u2019 is the total number of nodes in the binary tree.",
                    "0 <= 'DATA' <= 10 ^ 6 and data != -1, where 'DATA' is the value of the binary tree node.",
                    "Time Limit: 1sec."
                ],
                "testcases": [
                    {
                        "input": "root = [1,2,3,4,-1,5,6,-1,7,-1,-1,-1,-1,-1,-1]",
                        "output": "3",
                        "explanation": "The maximum width occurs at the third level with nodes 4, 5, and 6, resulting in a width of 3."
                    },
                    {
                        "input": "root = [2,7,5,2,6,-1,9,-1,-1,5,11,4,-1,-1,-1,-1,-1,-1,-1]",
                        "output": "3",
                        "explanation": "The level with 2, 6, 9 has width 3."
                    },
                    {
                        "input": "root = [1]",
                        "output": "1",
                        "explanation": "The tree only contains the root node, so the maximum width is 1."
                    },
                    {
                        "input": "root = [1,2,-1]",
                        "output": "1",
                        "explanation": "The maximum width is at level 1 with only element '2'."
                    },
                    {
                        "input": "root = [1,-1,2]",
                        "output": "1",
                        "explanation": "The maximum width is at level 1 with only element '2'."
                    },
                    {
                        "input": "root = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]",
                        "output": "8",
                        "explanation": "A full binary tree of height 4 will have the maximum width at the last level, which is level 3, containing 8 nodes."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>How can you find the number of nodes in each level of the given tree?</p>",
            "<p>Can you optimise the way to find the total number of nodes in each level using some extra spaces?</p>",
            "<p>How can you find the number of nodes on each level while traversing in the given binary tree without finding the height?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Binary Trees",
                "slug": "binary-trees"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}