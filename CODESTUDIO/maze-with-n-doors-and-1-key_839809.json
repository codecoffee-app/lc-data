{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8204,
            "title": "Maze with N doors and 1 Key",
            "titleSlug": "maze-with-n-doors-and-1-key_839809",
            "content": "<h4 id=\"you-are-given-an-n-n-maze-where-some-cells-have-a-door-while-some-do-not-and-a-key-that-can-be-used-only-once-to-open-a-door\">You are given an &#39;N * N&#39; &#39;MAZE&#39; where some cells have a door while some do not and a key that can be used only once to open a door.</h4>\n\n<h4 id=\"you-need-to-find-if-there-exists-a-path-from-the-top-left-cell-to-the-bottom-right-cell-of-the-maze-provided-only-downward-and-rightward-movements-are-allowed\">You need to find if there exists a path from the top-left cell to the bottom right cell of the maze provided only downward and rightward movements are allowed.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>1. You have only one key. And a key once used is exhausted and no more available with you during the journey through that path in a maze.\n\n2. A cell with value 1, means the door or path is closed. And you have to spend a key to open the door/ reach that cell.\n\n3. A cell with value 0, means that the cell is free to move / door is always open.\n\n4. Top left cell in the maze and bottom-right cell in the maze may also have a door.\n\n5. Downwards movement: From cell (i, j) to (i, j+1).\n\n6. Rightwards movement: From cell (i, j) to (i+1, j).\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of the input contains an integer &#39;T&#39; denoting the number of test cases. \nThen &#39;T&#39; test cases follow.\n\nThe first line of each test case contains the side length &#39;N&#39; of the square binary maze.\n\nThen &#39;N&#39; lines follow.\nEach line contains &#39;N&#39; space-separated integers 1 or 0 denoting whether the cell has a door or not.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print in a separate line \u201cYES\u201d if the bottom right corner is reachable, else print \u201cNO\u201d.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= &#39;T&#39; &lt;= 100\n1 &lt;= &#39;N&#39; &lt;= 100\n&#39;MAZE[i][j]&#39; = {0, 1}\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1\n3\n0 0 0\n1 0 1 \n0 1 0\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>YES\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1:</h5>\n\n<pre><code>There are 3 paths possible; two paths have been shown in the below diagram. Note that we are using our only key at the cell (2,3) (1-based indexing).\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/maze-with-n-doors-and-1-key-5502.png\" alt=\"Sample Input 1\"></p>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\n2\n1 0\n0 1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>NO\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 60,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an N x N maze represented as a 2D vector of integers, where 0 indicates an open path and 1 indicates a door, determine if a path exists from the top-left cell (0, 0) to the bottom-right cell (N-1, N-1). You are allowed to move only downwards and rightwards. You have a single key that can be used to open one door. Can you reach the destination?",
                "constraints": [
                    "1 <= 'T' <= 100",
                    "1 <= 'N' <= 100",
                    "'MAZE[i][j]' = {0, 1}"
                ],
                "testcases": [
                    {
                        "input": "maze=[[0, 0, 0], [1, 0, 1], [0, 1, 0]], n=3",
                        "output": "YES",
                        "explanation": "There are 3 paths possible; two paths have been shown in the problem description diagram. The key is used to open the door at cell (1, 0) for path 1, and cell (1, 2) for path 2."
                    },
                    {
                        "input": "maze=[[1, 0], [0, 1]], n=2",
                        "output": "NO",
                        "explanation": "It's impossible to reach the bottom right corner with only one key. You would need a key to open MAZE[0][0] and MAZE[1][1] for one possible path or open MAZE[0][0] and MAZE[1][0] and MAZE[0][1] and MAZE[1][1] using one right and down movement for the path. Only opening one cell is not sufficient to create a valid path."
                    },
                    {
                        "input": "maze=[[0, 0], [0, 0]], n=2",
                        "output": "YES",
                        "explanation": "There are no doors, so no key needs to be used. The path is simply moving from (0,0) -> (0,1) -> (1,1) or (0,0) -> (1,0) -> (1,1)."
                    },
                    {
                        "input": "maze=[[1]], n=1",
                        "output": "YES",
                        "explanation": "We start and end at the same cell and the cell has a door. Since we are using the key here the path exists. The solution just needs to reach the destination cell from the starting cell.  If the value of the cell had been 0 then too we will need to reach the destination and since both cells are same so it is always possible to reach the destination."
                    },
                    {
                        "input": "maze=[[0]], n=1",
                        "output": "YES",
                        "explanation": "We start and end at the same cell which has an open path. Since we are already at the destination cell the path exists."
                    },
                    {
                        "input": "maze=[[1, 1, 1], [1, 1, 1], [1, 1, 1]], n=3",
                        "output": "NO",
                        "explanation": "Using only one key will not be sufficient to open up a path to the destination cell. It requires at least 2 keys in any possible path."
                    },
                    {
                        "input": "maze=[[0, 1, 1], [1, 1, 1], [1, 1, 0]], n=3",
                        "output": "YES",
                        "explanation": "One possible path is (0,0) -> (0,1) -Use KEY-> (1,1)->(2,1)->(2,2). Key is used at (0,1)."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Depth-First Search, Recursion, BackTracking.</p>",
            "<p>Use the fact that only downwards and rightwards movement is allowed.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Matrices (2D Arrays)",
                "slug": "matrices-(2d-arrays)"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}