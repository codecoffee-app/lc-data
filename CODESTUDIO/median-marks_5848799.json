{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 22708,
            "title": "Median Marks",
            "titleSlug": "median-marks_5848799",
            "content": "<h4 id=\"there-are-n-students-in-a-class-where-n-is-odd-the-ith-student-wants-their-marks-to-be-in-the-range-l-i-to-r-i-both-inclusive-the-teacher-can-give-a-total-of-at-most-x-marks-to-students-to-show-that-the-result-is-good-the-teacher-wants-the-median-marks-to-be-as-large-as-possible\">There are &#39;N&#39; students in a class, where &#39;N is odd&#39;. The &#39;ith&#39; student wants their marks to be in the range &#39;L[i]&#39; to &#39;R[i]&#39; (both inclusive). The teacher can give a total of at most &#39;X&#39; marks to students. To show that the result is good, the teacher wants the median marks to be as large as possible.</h4>\n\n<h4 id=\"return-the-maximum-median-marks-the-teacher-can-obtain-provided-they-optimally-distribute-the-x-marks-among-students-satisfying-the-ranges\">Return the maximum median marks the teacher can obtain provided they optimally distribute the &#39;X&#39; marks among students satisfying the ranges.</h4>\n\n<h4 id=\"to-find-the-median-of-a-sequence-of-odd-length-you-have-to-sort-it-and-take-the-element-in-the-middle-position-after-sorting\">To find the median of a sequence of odd length, you have to sort it and take the element in the middle position after sorting.</h4>\n\n<h4 id=\"it-is-guaranteed-that-the-teacher-has-enough-marks-to-give-i-e-l-1-l-2-l-n-x\">It is guaranteed that the teacher has enough marks to give, i.e. L[1]+L[2]+.....+L[N] &lt;= &#39;X&#39;.</h4>\n\n<h5 id=\"for-example\">For Example:-</h5>\n\n<pre><code>Let &#39;N&#39; = 3, &#39;X&#39; = 13, &#39;L&#39; = [2, 3, 5], &#39;R&#39; = [4, 5, 7].\nWe can assign 2 marks to the first student, 5 marks to the second student, and 5 marks to the third student.\nSo the median mark is 5 which is the maximum possible. \n</code></pre>\n\n<h5 id=\"input-format\">Input Format:-</h5>\n\n<pre><code>First-line contains an integer &#39;T&#39;, which denotes the number of test cases.\nFor every test case:-\nFirst-line contains two integers &#39;N&#39; and &#39;X&#39;.\nSecond-line contains &#39;N&#39; space-separated integers, the elements of the array &#39;L&#39;\nThird-line contains &#39;N&#39; space-separated integers, the elements of the array &#39;R&#39;.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:-</h5>\n\n<pre><code>For each test case, Return the maximum median marks you can obtain.\n</code></pre>\n\n<h5 id=\"note\">Note:-</h5>\n\n<pre><code>You don\u2019t need to print anything. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:-</h5>\n\n<pre><code>1 &lt;= &#39;T&#39; &lt;= 10\n1 &lt;= &#39;N&#39; &lt;= 10^5\n1 &lt;= &#39;L[i]&#39; &lt;= &#39;R[i]&#39; &lt;= 10^5\n1 &lt;= &#39;X&#39; &lt;= 10^8\n&#39;N&#39; is odd.\n\nThe Sum of &#39;N&#39; overall test cases does not exceed 10^5.\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:-</h5>\n\n<pre><code>2   \n3 26\n10 1 4\n12 4 11\n1 15\n2\n9\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:-</h5>\n\n<pre><code>11\n9\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of sample input 1:-</h5>\n\n<pre><code>First test case:-\nWe can assign 12 marks to the first student, 2 marks to the second student, and 11 marks to the third student.\nSo the median mark is 11 which is the maximum possible. \n\nSecond test case:-\nWe can assign 9 marks to the first student.\nSo the median mark is 9 which is the maximum possible.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:-</h5>\n\n<pre><code>2\n5 26    \n4 2 2 6 5\n4 4 7 8 6\n1 5\n4\n7\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:-</h5>\n\n<pre><code>6\n5\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": -7,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given 'N' students with individual mark ranges [L[i], R[i]], and a total of 'X' marks to distribute, determine the maximum possible median mark achievable. 'N' is odd, and the teacher must assign marks within each student's range. Finding the median requires sorting the marks of all students, and selecting the middle element.",
                "constraints": [
                    "1 <= 'T' <= 10",
                    "1 <= 'N' <= 10^5",
                    "1 <= 'L[i]' <= 'R[i]' <= 10^5",
                    "1 <= 'X' <= 10^8",
                    "'N' is odd.",
                    "The sum of 'N' over all test cases does not exceed 10^5.",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "3 26\n10 1 4\n12 4 11",
                        "output": "11",
                        "explanation": "Assign 12 marks to the first student, 4 to the second, and 10 to the third (as the 3rd student can only reach upto 11). The sorted array becomes [4, 10, 12], with a median of 10. A better allocation exists however. Assign 12 marks to the first student, 4 marks to the second student, and 11 marks to the third student. The sorted array becomes [4, 11, 12], with a median of 11. Total marks used: 12 + 4 + 11 = 27. This exceeds the limit of 26. So a better allocation is possible. Try 12, 4, and 10 (max marks the student can get). This sums up to 26. Sorted array becomes [4, 10, 12], median of 10. Try 12, 3 and 11. That is not possible since 3 < 1. \n\nAssign 12 marks to the first, 4 to the second, and 10 to the third. sorted array is [4, 10, 12] with median 10. marks consumed: 26. \n\nAssign 11 marks to the third, 4 to the second and 11 to the first. ( 11 is the max it can obtain, and 11 is the max it can obtain ). Sort to [4, 11, 11]. median is 11. Total marks = 4 + 11 + 11 = 26."
                    },
                    {
                        "input": "1 15\n2\n9",
                        "output": "9",
                        "explanation": "Assign 9 marks to the student. The median mark is 9."
                    },
                    {
                        "input": "5 26\n4 2 2 6 5\n4 4 7 8 6",
                        "output": "6",
                        "explanation": "After allocation, one possible student marks are [4, 4, 6, 6, 6]  which results in median =6. The total of allocated marks is 4+4+6+6+6=26 which is equal to X"
                    },
                    {
                        "input": "1 5\n4\n7",
                        "output": "5",
                        "explanation": "Assign 5 marks to the student, which is the maximum he can get as limited by X=5 and L[0]=4, R[0]=7 so the maximum possible marks are 5."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Is the distribution monotonic in nature?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}