{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 11004,
            "title": "Meeting",
            "titleSlug": "meeting_1376415",
            "content": "<h4 id=\"ninja-is-organizing-a-meeting-in-an-office-that-starts-at-a-time-0-and-will-end-at-a-time-last-there-are-n-presentations-that-are-going-to-take-place-in-that-meeting-whose-start-and-end-times-are-given-i-e-ith-presentation-starts-at-start-i-and-ends-at-end-i-the-presentations-don-t-overlap-with-each-other-ninja-wants-to-reschedule-at-most-k-presentations-keeping-the-original-order-intact-so-that-the-longest-period-in-which-there-is-no-presentation-scheduled-during-the-meeting-is-maximized\">Ninja is organizing a meeting in an office that starts at a time \u20180\u2019 and will end at a time \u2018LAST\u2019. There are \u2018N\u2019 presentations that are going to take place in that meeting whose start and end times are given, i.e., \u2018ith\u2019 presentation starts at \u2018START[i]\u2019 and ends at \u2018END[i]\u2019. The presentations don\u2019t overlap with each other.  Ninja wants to reschedule at most \u2018K\u2019 presentations keeping the original order intact so that the longest period in which there is no presentation scheduled during the meeting is maximized.</h4>\n\n<h4 id=\"since-ninja-is-busy-with-other-office-work-your-task-is-to-help-ninja-to-reschedule-at-most-k-presentations\">Since Ninja is busy with other office work, your task is to help Ninja to reschedule at most \u2018K\u2019 presentations.</h4>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>The presentation\u2019s duration can\u2019t be changed. You can only change the start and end times.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains an integer \u2018T\u2019, which denotes the number of test cases to be run. Then, the T test cases follow. \n\nThe first line of each test case contains three positive integers, \u2018N\u2019, \u2018K\u2019, and \u2018LAST\u2019, as described in the problem statement.\n\nThe following \u2018N\u2019 line of each test case contains two non-negative integers denoting \u2018start\u2019 and \u2018end\u2019 time of ith presentation.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print the duration of the longest period in which there is no presentation scheduled during the meeting after rescheduling, not more than \u2018K\u2019 meetings.\n\nOutput for each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 5000\n0 &lt;= K &lt;= N\n0 &lt;= LAST &lt;= 10^9\nSTART[i] &lt; END[i], for 1 &lt;= i &lt;= N.\nEND[i] &lt;= START[i+1], for 1 &lt;= i &lt; N.\n\nTime Limit: 1 second\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1\n2 1 4\n0 1\n2 3\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>2\n</code></pre>\n\n<h5 id=\"explanation-for-sample-output-1\">Explanation For Sample Output 1:</h5>\n\n<pre><code>If we reschedule the second meeting from 2 to 1, then the duration from 2 to 4 will be free, and it is the longest among all possible answers.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\n3 0 11\n2 4\n4 5\n8 10          \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>3\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 5,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a meeting that starts at time 0 and ends at time 'LAST', and a list of 'N' non-overlapping presentations with their start and end times, determine the maximum length of a continuous period during the meeting where no presentation is scheduled. You are allowed to reschedule at most 'K' presentations, maintaining their original order, to maximize this free time interval.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 5000",
                    "0 <= K <= N",
                    "0 <= LAST <= 10^9",
                    "START[i] < END[i], for 1 <= i <= N",
                    "END[i] <= START[i+1], for 1 <= i < N"
                ],
                "testcases": [
                    {
                        "input": "t = 4, start = [0, 2], end = [1, 3], k = 1",
                        "output": "2",
                        "explanation": "Rescheduling the second meeting from 2 to 1 makes the duration from 2 to 4 free, which is the longest possible gap."
                    },
                    {
                        "input": "t = 11, start = [2, 4, 8], end = [4, 5, 10], k = 0",
                        "output": "3",
                        "explanation": "With no rescheduling allowed, the longest gap is between the end of the second meeting (5) and the start of the third meeting (8), from 5 to 8, and the gap after the third meeting (10 to 11). Also from 0 to the first meeting (2). The longest of these three is 8 to 10 or 0 to 2 or 10 to 11 is therefore from 0-2= 2, or 5 to 8 =3 , or 10 to 11 = 1, the longest is 3."
                    },
                    {
                        "input": "t = 10, start = [1, 3, 6], end = [2, 5, 7], k = 1",
                        "output": "4",
                        "explanation": "Reschedule the first presentation from 1-2 to 5-6 so gap between end of presentation 2 and start of presentation 3 becomes shorter, with gap between start of meeting to first presentation now from 0-3 (length 3) and between presentations 2 and 3 (end of 5 and start of 6 or length 1) and from end of presentation 3 (7) to end of meeting(10) or length of 3. Reschedule the second presentation from 3-5 to 7-9 so gap between presentation 1 and 3 becomes shorter, gap becomes start of meeting to first presentation length of 1, gap between first and third meetings being length 4 and between third meeting and end of meeting length 3, making gap of 4 the longest, and final attempt reschedule third meeting from 6-7 to 2-3 so gap becomes start of meeting to presentation 1 (1) from presentation 1 end to presentation 2 length 1, from end of presentation 2 to end of presentation 3 length 2, and length of end of presentation 3 to end of meeting being 7, the maximum is 7."
                    },
                    {
                        "input": "t = 20, start = [2, 5, 9, 12, 16], end = [4, 7, 10, 13, 18], k = 2",
                        "output": "6",
                        "explanation": "By rescheduling the second and fourth presentations, we can create a larger gap. Original gaps: 0-2 (2), 4-5 (1), 7-9 (2), 10-12 (2), 13-16 (3), 18-20 (2). Consider skipping 2nd and 4th so original locations of gaps are 0-2, 4-5 (skipped), 7-9, 10-12 (skipped), 13-16, 18-20. Reschedule meetings 2 and 4 to be at the end so the gap length will be max ( 0 to start of meeting 1, (4th meeting location - location of 1st) or (1st meeting location - start of meeting) etc.)"
                    },
                    {
                        "input": "t = 5, start = [1, 2, 3], end = [2, 3, 4], k = 3",
                        "output": "4",
                        "explanation": "Since k = 3 which is equal to the size of the start vector, we can skip the meeting entirely. Since the meeting end at t = 5 and starts at 0, there is a maximum interval of 5-1 = 4."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><i>Maximum sum subarray of size \u2018K+1\u2019.</i></p>",
            "<p><i>Try to optimize Approach 1 in terms of time complexity.</i></p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}