{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 11004,
            "title": "Meeting",
            "titleSlug": "meeting_1376415",
            "content": "<h4 id=\"ninja-is-organizing-a-meeting-in-an-office-that-starts-at-a-time-0-and-will-end-at-a-time-last-there-are-n-presentations-that-are-going-to-take-place-in-that-meeting-whose-start-and-end-times-are-given-i-e-ith-presentation-starts-at-start-i-and-ends-at-end-i-the-presentations-don-t-overlap-with-each-other-ninja-wants-to-reschedule-at-most-k-presentations-keeping-the-original-order-intact-so-that-the-longest-period-in-which-there-is-no-presentation-scheduled-during-the-meeting-is-maximized\">Ninja is organizing a meeting in an office that starts at a time \u20180\u2019 and will end at a time \u2018LAST\u2019. There are \u2018N\u2019 presentations that are going to take place in that meeting whose start and end times are given, i.e., \u2018ith\u2019 presentation starts at \u2018START[i]\u2019 and ends at \u2018END[i]\u2019. The presentations don\u2019t overlap with each other.  Ninja wants to reschedule at most \u2018K\u2019 presentations keeping the original order intact so that the longest period in which there is no presentation scheduled during the meeting is maximized.</h4>\n\n<h4 id=\"since-ninja-is-busy-with-other-office-work-your-task-is-to-help-ninja-to-reschedule-at-most-k-presentations\">Since Ninja is busy with other office work, your task is to help Ninja to reschedule at most \u2018K\u2019 presentations.</h4>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>The presentation\u2019s duration can\u2019t be changed. You can only change the start and end times.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains an integer \u2018T\u2019, which denotes the number of test cases to be run. Then, the T test cases follow. \n\nThe first line of each test case contains three positive integers, \u2018N\u2019, \u2018K\u2019, and \u2018LAST\u2019, as described in the problem statement.\n\nThe following \u2018N\u2019 line of each test case contains two non-negative integers denoting \u2018start\u2019 and \u2018end\u2019 time of ith presentation.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print the duration of the longest period in which there is no presentation scheduled during the meeting after rescheduling, not more than \u2018K\u2019 meetings.\n\nOutput for each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 5000\n0 &lt;= K &lt;= N\n0 &lt;= LAST &lt;= 10^9\nSTART[i] &lt; END[i], for 1 &lt;= i &lt;= N.\nEND[i] &lt;= START[i+1], for 1 &lt;= i &lt; N.\n\nTime Limit: 1 second\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1\n2 1 4\n0 1\n2 3\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>2\n</code></pre>\n\n<h5 id=\"explanation-for-sample-output-1\">Explanation For Sample Output 1:</h5>\n\n<pre><code>If we reschedule the second meeting from 2 to 1, then the duration from 2 to 4 will be free, and it is the longest among all possible answers.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\n3 0 11\n2 4\n4 5\n8 10          \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>3\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 5,
            "dislikes": "NA",
            "rephrased": {
                "body": "Ninja is organizing a meeting in an office. The meeting starts at time 0 and ends at time 'LAST'. There are 'N' presentations scheduled during the meeting, with the 'i-th' presentation starting at 'START[i]' and ending at 'END[i]'. Presentations do not overlap. Ninja can reschedule at most 'K' presentations while maintaining their original order. The goal is to maximize the duration of the longest period with no scheduled presentation.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 5000",
                    "0 <= K <= N",
                    "0 <= LAST <= 10^9",
                    "START[i] < END[i], for 1 <= i <= N",
                    "END[i] <= START[i+1], for 1 <= i < N",
                    "Time Limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "2 1 4\n0 1\n2 3",
                        "output": "2",
                        "explanation": "By rescheduling the second presentation from 2-3 to 1-2, we create a gap from 2 to 4, resulting in a free duration of 2."
                    },
                    {
                        "input": "3 0 11\n2 4\n4 5\n8 10",
                        "output": "3",
                        "explanation": "With K=0 (no rescheduling allowed), the longest gap is between the second and third presentations, from 5 to 8, resulting in a free duration of 3."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><i>Maximum sum subarray of size \u2018K+1\u2019.</i></p>",
            "<p><i>Try to optimize Approach 1 in terms of time complexity.</i></p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}