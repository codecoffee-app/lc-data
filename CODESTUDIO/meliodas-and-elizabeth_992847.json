{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9468,
            "title": "Meliodas and Elizabeth ",
            "titleSlug": "meliodas-and-elizabeth_992847",
            "content": "<h4 id=\"there-is-a-n-n-maze-in-liones-guarded-by-the-demons-goddess-elizabeth-is-being-trapped-by-the-demons-she-is-kept-at-the-center-of-the-maze-prince-meliodas-is-worried-and-he-wants-to-save-elizabeth-at-any-cost-he-killed-all-the-demons-guarding-the-maze-only-the-four-corners-of-the-maze-are-open-for-meliodas-to-enter-the-magical-spell-of-the-demons-guarded-the-maze-is-still-in-effect-thus-there-is-a-limitation-on-the-movement-of-meliodas-at-any-cell-of-the-maze-he-can-move-exactly-x-steps-in-only-four-directions-i-e-up-down-left-and-right-where-x-is-the-power-of-each-cell-of-the-maze\">There is a N * N maze in Liones guarded by the demons. Goddess Elizabeth is being trapped by the demons. She is kept at the center of the maze. Prince Meliodas is worried and he wants to save Elizabeth at any cost. He killed all the demons guarding the maze. Only the four corners of the maze are open for Meliodas to enter. The magical spell of the demons guarded the maze is still in effect. Thus, there is a limitation on the movement of Meliodas. At any cell of the maze, he can move exactly X steps in only four directions, i.e. Up, Down, Left, and Right where X is the power of each cell of the maze.</h4>\n\n<h4 id=\"given-an-n-n-maze-of-non-negative-integers-where-each-integer-denotes-the-power-of-that-cell-you-have-to-find-the-number-of-ways-in-which-meliodas-can-save-goddess-elizabeth\">Given an N * N maze of non negative integers, where each integer denotes the power of that cell. You have to find the number of ways in which Meliodas can save goddess Elizabeth.</h4>\n\n<h5 id=\"for-example\">For example:</h5>\n\n<pre><code>An input maze is shown below\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/melio-6841.png\" alt=\"\"></p>\n\n<pre><code>Elizabeth is trapped in the green cell and Meliodas can enter the maze from any of the yellow cells.\n</code></pre>\n\n<h4 id=\"input-format\">Input format:</h4>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases.\n\nThe first line of each test case contains an integer \u2018N\u2019 denoting the size of the matrix. \n\nFor the next N lines, each line contains N space-separated integers, denoting the power of the cells of the maze. \n</code></pre>\n\n<h4 id=\"output-format\">Output format:</h4>\n\n<pre><code>For each test case, print a single containing a single integer denoting the total paths in which Meliodas can save Elizabeth. In other words, print the total number of valid paths from the corner cells to the middle cell of the maze. \n\nThe output of each test case is printed in a separate line. \n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You are not required to print the output explicitly, it has already been taken care of. Just implement the function and return the answer.\n\nThe maze will contain an odd number of rows and columns, i.e \u2018N\u2019 will always be odd. \n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 5\n3 &lt;= N &lt;= 9\n0 &lt;= DATA &lt;= 10      \n\nwhere \u2018T\u2019 is the number of test cases,  \u2018N\u2019 is the dimension of the maze and \u2018data\u2019 is the power of each cell of the maze. \n\nTime limit: 1 sec.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1\n3\n0 1 0 \n1 1 2 \n2 0 1 \n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>2\n</code></pre>\n\n<h5 id=\"explanation-to-sample-input-1\">Explanation to Sample Input 1:</h5>\n\n<pre><code>As the power of the upper left cell and upper right cell is 0, there is no way to reach the middle cell. Thus, Meliodas can\u2019 t save Elizabeth if he starts from any of these corners. \nFrom the lower left corner, there is only one way to save Elizabeth. \nPath taken:  (2, 0) -&gt; (2, 2) -&gt; (1, 2) -&gt; (1, 0) -&gt; (1, 1) -&gt; Elizabeth\nFrom the lower right corner, there is only one way to save Elizabeth.\nPath taken: (2, 2) -&gt; (1, 2) -&gt; (1, 0) -&gt; (1, 1) -&gt; Elizabeth. \n\nThus, there are only two ways to save Elizabeth. \nNote that, (x, y) represents the coordinates of a cell in the maze.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\n5\n4 3 0 2 1 \n2 0 1 1 0 \n2 4 1 1 4 \n0 3 0 4 3 \n0 1 2 4 0 \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>6\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -3,
            "dislikes": "NA",
            "rephrased": {
                "body": "A hero must navigate a maze to rescue a goddess. The maze is an N x N grid, and the hero can only enter from the four corners. Each cell in the maze has a power value X, which dictates the number of steps the hero must move in one of the four cardinal directions (Up, Down, Left, Right) from that cell. The goal is to find the number of distinct paths the hero can take from any of the four corners of the maze to reach the center cell, where the goddess is held.",
                "constraints": [
                    "1 <= T <= 5 (Number of test cases)",
                    "3 <= N <= 9 (Dimension of the maze; N will always be odd)",
                    "0 <= DATA <= 10 (Power of each cell in the maze)"
                ],
                "testcases": [
                    {
                        "input": "1\n3\n0 1 0 \n1 1 2 \n2 0 1",
                        "output": "2",
                        "explanation": "There are two possible paths to reach the center cell (1,1) from the corners.  Starting from the bottom left corner (2,0), one possible path is (2,0) -> (2,2) -> (1,2) -> (1,0) -> (1,1). Starting from the bottom right corner (2,2), one possible path is (2,2) -> (1,2) -> (1,0) -> (1,1). The top corners (0,0) and (0,2) have cell power 0, so it is not possible to move from those corners."
                    },
                    {
                        "input": "1\n5\n4 3 0 2 1 \n2 0 1 1 0 \n2 4 1 1 4 \n0 3 0 4 3 \n0 1 2 4 0",
                        "output": "6",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can we use Backtracking here?&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Matrices (2D Arrays)",
                "slug": "matrices-(2d-arrays)"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}