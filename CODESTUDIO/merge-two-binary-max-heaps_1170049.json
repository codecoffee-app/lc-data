{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10129,
            "title": " Merge Two Binary Max Heaps",
            "titleSlug": "merge-two-binary-max-heaps_1170049",
            "content": "<h4 id=\"you-are-given-two-integer-arrays-arr1-and-arr2-of-size-n-and-m-respectively-both-arr1-and-arr2-represent-a-max-heap-your-task-is-to-merge-the-two-arrays-firstly-keep-all-the-elements-of-the-arr1-without-changing-order-than-elements-of-array-arr2-without-changing-order-and-then-find-the-max-heap-obtained-by-merging-arrays-print-an-array-of-sizes-n-m-representing-the-max-heap-obtained-after-merging\">You are given two integer arrays \u2018ARR1\u2019 and  \u2018ARR2\u2019 of size \u2018N\u2019 and \u2018M\u2019 respectively, Both \u2018ARR1\u2019 and \u2018ARR2\u2019 represent a Max-Heap. Your task is to merge the two arrays firstly keep all the elements of the \u2018ARR1\u2019 (without changing order) than elements of array \u2018ARR2\u2019 (without changing order), and then find the Max-Heap obtained by merging arrays.  Print an array of sizes \u2018N + M\u2019, representing the Max-Heap obtained after merging.</h4>\n\n<h4 id=\"a-binary-max-heap-is-a-complete-binary-tree-in-which-the-value-in-each-internal-node-is-greater-than-or-equal-to-the-values-in-the-children-of-that-node\">A binary Max-Heap is a complete binary tree in which the value in each internal node is greater than or equal to the values in the children of that node.</h4>\n\n<h4 id=\"max-heaps-are-usually-represented-by-an-array-as-follows\">Max-Heaps are usually represented by an array, as follows :</h4>\n\n<pre><code>1. Each element in the array represents a node of the heap.\n\n2. Element at index 0 represent the root of the heap.\n\n3. If a node is represented by elements at index \u2018i\u2019 then its left and right child is represented by elements at indices \u20182*i + 1\u2019 and \u2018 2*i + 2\u2019  respectively.\n</code></pre>\n\n<h5 id=\"example\">Example :</h5>\n\n<pre><code>Consider \u2018ARR1\u2019 = [10, 5, 6, 2] and \u2018ARR2\u2019 = [12, 7, 9]. \n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/heap-7954.png\" alt=\"alt text\"></p>\n\n<pre><code>The max-heap obtained by merging can be represented by array [12, 10, 9, 2, 5, 7, 6]\n</code></pre>\n\n<h5 id=\"input-format\">Input format :</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases.\n\nThe next \u20183*T\u2019 lines represent the \u2018T\u2019 test cases.\n\nThe first line of each test case contains two space-separated integers \u2018N\u2019, and \u2018M\u2019 representing the size of the array \u2018ARR1\u2019 and \u2018ARR2\u2019 respectively.\n\nThe second line of each test case contains \u2018N\u2019 space-separated integers representing the array \u2018ARR1\u2019.\n\nThe third line of each test case contains \u2018M\u2019 space-separated integers representing the array \u2018ARR2\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case, print a separate one line consisting of \u2018N + M\u2019 space-separated integers representing the Max-Heap obtained after merging.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\nIf the returned Heap is max-Heap of the given heaps then &quot;Correct answer&quot; will be printed else &quot;Wrong answer&quot; will be printed.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= \u2018T\u2019 &lt;= 50\n1 &lt;= \u2018N\u2019 &lt;= 10^4\n1 &lt;= \u2018M\u2019 &lt;= 10^4\n1 &lt;= \u2018ARR1[i]\u2019, \u2018ARR2[i]\u2019 &lt;= 10^9\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n1 1\n2 \n2\n4 3\n10 5 6 2\n12 7 9\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>2 2\n12 10 9 2 5 7 6\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1:</h5>\n\n<pre><code>Test case 1:\nIn this case,  Both heaps have only one element i.e 2,  thus after merging, the new array obtained will be [2, 2] which also represents a max-heap of size 2. \n\nTest case 2:\nSee the problem statement for an explanation.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n6 7\n10 5 6 4 5 6\n9 7 9 4 3 8 3\n2 3\n3 1\n10 6 8\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>10 9 9 7 5 8 6 5 4 4 3 6 3\n10 8 3 6 1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 8,
            "dislikes": "NA",
            "rephrased": {
                "body": "You are given two integer arrays, `ARR1` and `ARR2`, of sizes `N` and `M` respectively. Both `ARR1` and `ARR2` represent Max-Heaps. Your task is to merge these two arrays. The merged array should first contain all elements of `ARR1` (in their original order), followed by all elements of `ARR2` (in their original order). After merging, transform the resulting array into a Max-Heap.  Return the array representing the Max-Heap obtained after merging.",
                "constraints": [
                    "1 <= T <= 50",
                    "1 <= N <= 10^4",
                    "1 <= M <= 10^4",
                    "1 <= ARR1[i], ARR2[i] <= 10^9",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "1 1\n2\n2",
                        "output": "2 2",
                        "explanation": "Both heaps have only one element, i.e., 2. After merging, the new array obtained will be [2, 2], which also represents a max-heap of size 2."
                    },
                    {
                        "input": "4 3\n10 5 6 2\n12 7 9",
                        "output": "12 10 9 2 5 7 6",
                        "explanation": "The merged array initially is [10, 5, 6, 2, 12, 7, 9]. After transforming it into a max heap it becomes [12, 10, 9, 2, 5, 7, 6]."
                    },
                    {
                        "input": "6 7\n10 5 6 4 5 6\n9 7 9 4 3 8 3",
                        "output": "10 9 9 7 5 8 6 5 4 4 3 6 3",
                        "explanation": null
                    },
                    {
                        "input": "2 3\n3 1\n10 6 8",
                        "output": "10 8 3 6 1",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><strong>Merge both arrays and then use the Max-Heapify algorithm to build the max-heap.</strong></p>"
        ],
        "relatedTopics": [
            {
                "name": "Heap",
                "slug": "heap"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}