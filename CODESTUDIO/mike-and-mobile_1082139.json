{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9695,
            "title": "Mike and Mobile",
            "titleSlug": "mike-and-mobile_1082139",
            "content": "<h4 id=\"mike-is-a-little-boy-who-loves-solving-math-problems-one-day-he-was-playing-with-his-mom-s-mobile-the-mobile-keypad-contains-12-buttons-10-digits-0-9-and-2-characters-and-mike-wants-to-know-how-many-different-numbers-he-can-generate-after-pressing-exactly-the-n-buttons-on-the-keypad-mike-presses-the-buttons-with-the-following-rules\">Mike is a little boy who loves solving math problems. One day he was playing with his mom\u2019s mobile. The mobile keypad contains 12 buttons { 10 digits(0-9) and 2 characters(\u2018*\u2019 and \u2018#\u2019) }. Mike wants to know how many different numbers he can generate after pressing exactly the &#39;N&#39; buttons on the keypad. Mike presses the buttons with the following rules:</h4>\n\n<pre><code>1. He always presses the button which has a digit written on it, i.e., he never presses the \u2018*\u2019 and \u2018#\u2019 button.\n2. Once he presses a button, the next button he presses should either be the same button or the button which is adjacent to the previous button.\n3. In starting he can press any button except \u2018*\u2019 and \u2018#\u2019.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/mobile-7023.jpg\" alt=\"mobile\"></p>\n\n<h4 id=\"mike-is-too-little-to-solve-this-problem-help-mike-to-solve-this-problem-as-the-answer-can-be-large-so-find-the-answer-modulo-10-9-7\">Mike is too little to solve this problem. Help Mike to solve this problem. As the answer can be large, so find the answer modulo 10^9 + 7.</h4>\n\n<h5 id=\"input-format\">Input format :</h5>\n\n<pre><code>The first line of input contains a single integer &#39;T&#39;, representing the number of test cases or queries to be run. \n\nThen the &#39;T&#39; test cases follow.\n\nThe first and only line of each test case contains a positive integer N, which represents the number of buttons to press.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print the number of numbers that can be generated after pressing exactly the N buttons on the keypad.\n\nThe output of each test case is printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 5 * 10^4\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n1\n5\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>10\n2062\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1:</h5>\n\n<pre><code>In the 1st test case, Mike can generate the following numbers {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}.\n\nIn the 2nd test case, some of the numbers that Mike can generate are {12365, 11111, 74747, 08521,....}.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n2\n3\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>36\n138\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 1,
            "dislikes": "NA",
            "rephrased": {
                "body": "Mike is playing with a mobile phone keypad containing digits 0-9. He wants to generate numbers by pressing exactly N buttons. He follows these rules:\n\n1.  He only presses digit buttons (0-9).\n2.  Each press must be the same button as the previous one, or an adjacent button.\n3.  The first button can be any digit.\n\nGiven N, the number of button presses, find the total number of different numbers Mike can generate, modulo 10^9 + 7.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 5 * 10^4"
                ],
                "testcases": [
                    {
                        "input": "1",
                        "output": "10",
                        "explanation": "Mike can generate the numbers {0, 1, 2, 3, 4, 5, 6, 7, 8, 9}."
                    },
                    {
                        "input": "5",
                        "output": "2062",
                        "explanation": "Some possible numbers Mike can generate are {11111, 12365, 74747, 08521, ...}."
                    },
                    {
                        "input": "2",
                        "output": "36",
                        "explanation": null
                    },
                    {
                        "input": "3",
                        "output": "138",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Think of a recursive approach to solve the problem.</p>",
            "<p>Using memoization, you can optimise the previous approach.</p>",
            "<p>Can you solve this problem using Iterative DP?</p>",
            "<p>Try to optimize the space complexity of the previous approach.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}