{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8942,
            "title": "Min Steps to one using DP",
            "titleSlug": "min-steps-to-one-using-dp_920548",
            "content": "<h4 id=\"you-are-given-a-positive-integer-n-your-task-is-to-find-and-return-the-minimum-number-of-steps-that-n-has-to-take-to-get-reduced-to-1\">You are given a positive integer &#39;N\u2019. Your task is to find and return the minimum number of steps that &#39;N&#39; has to take to get reduced to 1.</h4>\n\n<h4 id=\"you-can-perform-any-one-of-the-following-3-steps\">You can perform any one of the following 3 steps:</h4>\n\n<pre><code>1) Subtract 1 from it. (n = n - \u00ad1) ,\n2) If n is divisible by 2, divide by 2.( if n % 2 == 0, then n = n / 2 ) ,\n3) If n is divisible by 3, divide by 3. (if n % 3 == 0, then n = n / 3 ).\n</code></pre>\n\n<h4 id=\"for-example\">For example:</h4>\n\n<pre><code>Given:\n\u2018N\u2019 = 4, it will take 2 steps to reduce it to 1, i.e., first divide it by 2 giving 2 and then subtract 1, giving 1.\n</code></pre>\n\n<h5 id=\"input-format\">Input format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases.\n\nThe following \u2018T\u2019 lines contain a single integer  \u2018N\u2019, denoting the number given to us.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, You are supposed to return an integer that denotes the minimum steps it takes to reduce the number to 1.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You are not required to print the expected output; it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= \u2018T\u2019 &lt;= 5\n1 &lt;= \u2018N\u2019 &lt;= 10 ^ 5\n\nTime Limit: 1sec.\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1 :</h4>\n\n<pre><code>2\n4\n10\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1 :</h4>\n\n<pre><code>2\n3  \n</code></pre>\n\n<h4 id=\"explanation-of-the-sample-input-1\">Explanation of the Sample Input 1:</h4>\n\n<pre><code>In the first test case, it will take 2 steps to reduce it to 1, i.e., first divide it by 2, giving 2, and then subtract 1, giving 1.\n\nIn the second test case, it will take 3 steps to reduce it to 1, i.e. first subtract 1, then divide by 3, two times. Therefore a total of 3 steps are required.\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2 :</h4>\n\n<pre><code>2\n6\n12\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2 :</h4>\n\n<pre><code>2\n3\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 24,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a positive integer 'N', determine the minimum number of operations required to reduce it to 1. You can perform the following operations:\n\n1.  Subtract 1 from N (N = N - 1).\n2.  If N is divisible by 2, divide N by 2 (N = N / 2).\n3.  If N is divisible by 3, divide N by 3 (N = N / 3).",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= N <= 10 ^ 5",
                    "Time Limit: 1sec"
                ],
                "testcases": [
                    {
                        "input": "4\n10",
                        "output": "2\n3",
                        "explanation": "For N = 4, divide by 2 (4/2 = 2), then subtract 1 (2-1 = 1). Total steps: 2.\nFor N = 10, subtract 1 (10-1 = 9), then divide by 3 (9/3 = 3), then divide by 3 (3/3 = 1). Total steps: 3."
                    },
                    {
                        "input": "6\n12",
                        "output": "2\n3",
                        "explanation": "For N = 6, divide by 3 (6/3 = 2), then divide by 2 (2/2 = 1). Total steps: 2.\nFor N = 12, divide by 3 (12/3 = 4), then divide by 2 (4/2 = 2), then divide by 2 (2/2 = 1). Total steps: 3."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>&nbsp;Can we use recursion for all possible cases?</p>",
            "<p>Can we speed up the recursion by caching the sub-problems?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}