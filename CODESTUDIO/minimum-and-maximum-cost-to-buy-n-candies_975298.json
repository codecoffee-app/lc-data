{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9088,
            "title": "Minimum and Maximum Cost to buy N Candies",
            "titleSlug": "minimum-and-maximum-cost-to-buy-n-candies_975298",
            "content": "<h4 id=\"ram-went-to-a-specialty-candy-store-in-ninjaland-which-has-n-candies-with-different-costs\">Ram went to a specialty candy store in Ninjaland which has &#39;N&#39; candies with different costs.</h4>\n\n<h4 id=\"the-candy-shop-gives-a-special-offer-to-its-customers-a-customer-can-buy-a-single-candy-from-the-store-and-get-at-most-k-different-candies-for-free-now-ram-is-interested-in-knowing-the-maximum-and-the-minimum-amount-he-needs-to-spend-for-buying-all-the-candies-available-in-the-store\">The Candy shop gives a special offer to its customers. A customer can buy a single candy from the store and get at most &#39;K&#39; different candies for free. Now, Ram is interested in knowing the maximum and the minimum amount he needs to spend for buying all the candies available in the store.</h4>\n\n<h4 id=\"note-in-both-cases-ram-must-utilize-the-offer-i-e-if-k-or-more-candies-are-available-he-must-take-k-candies-for-every-candy-purchase-if-less-than-k-candies-are-available-he-must-take-all-candies-for-a-candy-purchase\">Note: In both cases, Ram must utilize the offer i.e. if &#39;K&#39; or more candies are available, he must take &#39;K&#39; candies for every candy purchase. If less than K candies are available, he must take all candies for a candy purchase.</h4>\n\n<h4 id=\"for-example\">For Example :</h4>\n\n<pre><code>For &#39;N&#39; =  5 and &#39;K&#39; = 2\n\nLet the cost of different candies in the store be: [9 8 2 6 4]\n\nFor the minimum amount: \nRam can buy a candy with cost 2 and take candies with costs 9 and 8 for free. \nThen, he can buy a candy with cost 4 and take candy with cost 7 for free. \nThus, the minimum cost will be 6 i.e. 2 + 4. \n\nFor the maximum amount: \nRam can buy a candy with cost 9 and take candies with costs 2 and 6 for free. \nThen, he can buy candy at cost 8 and take candy at cost 4 for free. \nThus, the minimum cost will be 17 i.e. 9 + 8.\n\nThus, Minimum = 6 and Maximum = 17.\n</code></pre>\n\n<h5 id=\"input-format\">Input format :</h5>\n\n<pre><code>The first line contains an integer &#39;T&#39; which denotes the number of test cases or queries to be run. Then, the &#39;T&#39; test cases follow.\n\nThe first line of each test case or query contains two space-separated integers &#39;N&#39; and \u2018K\u2019 representing the number of candies available and the number of candies you get free for a single purchase respectively.\n\nThe second line of each test case contains &#39;N&#39; single space-separated integers, representing the costs of the candies.\n</code></pre>\n\n<h5 id=\"output-format\">Output format:</h5>\n\n<pre><code>For each test case, print two space-separated integers &#39;A&#39; and &#39;B&#39; where &#39;A&#39; is the minimum amount and &#39;B&#39; is the maximum amount in which Ram can buy all the candies.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= &#39;T&#39; &lt;= 5\n1 &lt;= &#39;N&#39; &lt;= 10^5\n0 &lt;= &#39;K&#39; &lt; N\n1 &lt;= &#39;COST&#39; &lt;= (10^9) \n\nWhere &#39;T&#39; is the number of test cases, &#39;N&#39; is the number of candies, &#39;K&#39; is a type of candies and &#39;COST&#39; is the cost of candies.\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1\n4 2\n3 2 1 4\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>3 7\n</code></pre>\n\n<h5 id=\"explanation\">Explanation :</h5>\n\n<pre><code>For the minimum amount: \nRam can buy candy with cost 1 and take candies with costs 3 and 4 for free. \nThen, he can buy candy with cost 2.\nThus, the minimum cost will be 3 i.e. 1 + 2. \n\nFor the maximum amount: \nRam can buy candy with cost 4 and take candies with costs 1 and 2 for free. \nThen, he can buy candy with cost 3. \nThus, the minimum cost will be 7 i.e. 4 + 3.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n5 2\n9 8 2 6 4\n3 0\n1 5 4\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>6 17\n10 10\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 19,
            "dislikes": "NA",
            "rephrased": {
                "body": "A candy store in Ninjaland has N candies, each with a different cost.  Customers can buy one candy and get up to K other candies for free. Ram wants to determine the minimum and maximum amounts he needs to spend to acquire all N candies, always utilizing the free candy offer to the fullest extent possible. Calculate these minimum and maximum costs.",
                "constraints": [
                    "1 <= 'T' <= 5, where 'T' is the number of test cases.",
                    "1 <= 'N' <= 10^5, where 'N' is the number of candies.",
                    "0 <= 'K' < N, where 'K' is the number of free candies per purchase."
                ],
                "testcases": [
                    {
                        "input": "n = 4, cost = [3, 2, 1, 4], k = 2",
                        "output": "3 7",
                        "explanation": "For the minimum amount: Ram can buy candy with cost 1 and take candies with costs 3 and 4 for free. Then, he can buy candy with cost 2. Thus, the minimum cost will be 3 i.e. 1 + 2. \n\nFor the maximum amount: Ram can buy candy with cost 4 and take candies with costs 1 and 2 for free. Then, he can buy candy with cost 3. Thus, the maximum cost will be 7 i.e. 4 + 3."
                    },
                    {
                        "input": "n = 5, cost = [9, 8, 2, 6, 4], k = 2",
                        "output": "6 17",
                        "explanation": "For the minimum amount: Ram can buy a candy with cost 2 and take candies with costs 9 and 8 for free. Then, he can buy a candy with cost 4 and take candy with cost 6 for free. Thus, the minimum cost will be 6 i.e. 2 + 4. \n\nFor the maximum amount: Ram can buy a candy with cost 9 and take candies with costs 2 and 6 for free. Then, he can buy candy at cost 8 and take candy at cost 4 for free. Thus, the maximum cost will be 17 i.e. 9 + 8."
                    },
                    {
                        "input": "n = 3, cost = [1, 5, 4], k = 0",
                        "output": "10 10",
                        "explanation": "Since K = 0, Ram must buy all the candies individually. So, the minimum and maximum costs are the same: 1 + 5 + 4 = 10."
                    },
                    {
                        "input": "n = 6, cost = [5, 10, 1, 3, 2, 20], k = 3",
                        "output": "6 30",
                        "explanation": "For minimum cost, buy candies in ascending order and get the next 3 most expensive for free, i.e., Buy 1, get 20, 10, 5 free. Then buy 2, get 3 free. Total: 1 + 2 = 3. Then buy 3, get nothing (we messed it up) Total 1+2+3 =6. \nFor maximum cost, buy candies in descending order. Buy 20, get 1, 2, 3 free. Then buy 10, get 5. Total: 20+10 = 30"
                    },
                    {
                        "input": "n = 1, cost = [100], k = 0",
                        "output": "100 100",
                        "explanation": "Since there is only one candy and k is 0, ram will buy this one candy with cost 100."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>The logical way of buying candies with minimum cost can be that Ram buys the candy with minimum cost and then takes top K expensive candies for free.</p><p>Similarly, for maximum cost, Ram can buy the candy with maximum cost and then take top K cheapest candies for free.</p>",
            "<p>Suppose Ram can get all candies by paying for M candies, then, for minimum cost, Ram needs to pay for M cheapest candies and for maximum cost Ram needs to pay for&nbsp; M costliest candies. In simple terms, Ram needs to find the sum of M smallest elements and M largest elements.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}