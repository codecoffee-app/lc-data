{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9937,
            "title": "Minimum Break",
            "titleSlug": "minimum-break_1105570",
            "content": "<h4 id=\"you-are-given-an-array-arr-of-strings-each-string-contains-lowercase-english-letters-only\">You are given an array &#39;ARR&#39; of strings. Each string contains lowercase English letters only.</h4>\n\n<h4 id=\"string-p-is-said-to-be-compatible-with-string-q-if-it-is-possible-to-convert-string-p-to-string-q-by-replacing-each-character-in-string-p-with-any-sequence-of-characters-including-the-empty-sequence\">String &#39;P&#39; is said to be compatible with String &#39;Q&#39; if it is possible to convert String &#39;P&#39; to String &#39;Q&#39; by replacing each &#39;*&#39; character in String &#39;P&#39;  with any sequence of characters including the empty sequence.</h4>\n\n<h4 id=\"for-example\">For example :</h4>\n\n<pre><code>Consider P = &quot;a*d&quot; and Q = &quot;abcd&quot;\nIf we replace &#39;*&#39; with &quot;bc&quot; the resulting string P becomes &quot;abcd&quot; which is equal to Q. Hence, the string P is compatible with String Q.\n</code></pre>\n\n<h4 id=\"you-are-given-a-string-s-your-task-is-to-check-whether-any-such-string-exists-in-the-array-arr-that-string-s-is-compatible-with\">You are given a string &#39;S&#39;. Your task is to check whether any such string exists in the array &#39;ARR&#39; that string &#39;S&#39; is compatible with.</h4>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 which contains the number of test cases. \n\nThe first line of each test case contains an integer &#39;N&#39; denoting the number of strings in the array &#39;ARR&#39;.\n\nThe second line of each test case contains &#39;N&#39; space separated strings denoting the array &#39;ARR&#39;. \n\nThe third line of each test case contains the string &#39;S&#39;.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print 1 if any such string exists in the array &#39;ARR&#39; that string &#39;S&#39; is compatible with. Otherwise print 0.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of, just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 10 \n1 &lt;= |S| &lt;= 100\n1 &lt;= |M| &lt;= 100 \n\nStrings &#39;S&#39; contains lowercase English letters and &#39;*&#39; only. \nString &#39;M&#39; contains lowercase English letters only.\n\nWhere &#39;M&#39; denotes any element of the array &#39;ARR&#39;, |S| and |M| denotes the length of String &#39;S&#39; and String &#39;M&#39; respectively.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n4\nabc abcd ab aa\n*b*d \n3\nbcs bce bcc\n*bc\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>1\n0\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1:</h5>\n\n<pre><code>For the first test case, If we replace the first &#39;*&#39; with &#39;a&#39; and the second &#39;*&#39; with &#39;c&#39; the resulting string S becomes &#39;abcd&#39; which is present in the array &#39;ARR&#39;. Therefore, the answer is 1 in this case.\n\nFor the second test case:\nLet&#39;s try all the array elements one by one\n1) To convert &quot;*bc&quot; into &quot;bcs&quot; we need a &#39;*&#39; at the end of string S which is not present. Hence string S is not compatible with string  &quot;bcs&quot;. \n2) To convert &quot;*bc&quot; into &quot;bce&quot; we need a &#39;*&#39; at the end of string S which is not present. Hence string S is not compatible with string &quot;bce&quot;.\n3) To convert &quot;*bc&quot; into &quot;bcc&quot; we need a &#39;*&#39; at the end of string S which is not present. Hence string S is not compatible with string &quot;bcc&quot;. \nWe can see that string &#39;S&#39; is not compatible with any of the array elements. Therefore the answer is 0 in this case.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n3\nabc abd abe\n*\nbc bce bcs\nc**\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>1\n0\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 8,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of strings `arr` and a string `s`, determine if there exists a string in `arr` that `s` is compatible with. String `s` is considered compatible with a string in `arr` if each '*' in `s` can be replaced with any sequence of characters (including an empty sequence) to match a string in `arr`.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10",
                    "1 <= |S| <= 100",
                    "1 <= |M| <= 100",
                    "Strings 'S' contains lowercase English letters and '*' only.",
                    "String 'M' contains lowercase English letters only.",
                    "Where 'M' denotes any element of the array 'ARR', |S| and |M| denotes the length of String 'S' and String 'M' respectively."
                ],
                "testcases": [
                    {
                        "input": "n = 4, arr = [\"abc\", \"abcd\", \"ab\", \"aa\"], s = \"*b*d\"",
                        "output": "1",
                        "explanation": "Replacing the first '*' with 'a' and the second '*' with 'c' transforms 's' into 'abcd', which is present in 'arr'."
                    },
                    {
                        "input": "n = 3, arr = [\"bcs\", \"bce\", \"bcc\"], s = \"*bc\"",
                        "output": "0",
                        "explanation": "There is no way to convert '*bc' to 'bcs', 'bce', or 'bcc' by replacing '*'."
                    },
                    {
                        "input": "n = 3, arr = [\"abc\", \"abd\", \"abe\"], s = \"*\"",
                        "output": "1",
                        "explanation": "The '*' can be replaced with \"abc\", \"abd\", or \"abe\""
                    },
                    {
                        "input": "n = 2, arr = [\"bc\", \"bce\"], s = \"c**\"",
                        "output": "0",
                        "explanation": "There's no string in arr that can be formed from s."
                    },
                    {
                        "input": "n = 2, arr = [\"axyz\", \"abc\"], s = \"a*z\"",
                        "output": "1",
                        "explanation": "The * can be replaced by xy. So axy = axy, which is valid if axy is in the array. The second string contains axy"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to think of a recursive approach to check compatibility between two strings</p>",
            "<p>Try to optimize the previous approach using Dynamic Programming.</p>",
            "<p>Try to think of an approach to check compatibility between two strings iteratively in constant space.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}