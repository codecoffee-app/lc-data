{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9101,
            "title": "Minimum cash flow",
            "titleSlug": "minimum-cash-flow_975372",
            "content": "<h4 id=\"there-are-n-friends-who-have-borrowed-money-from-one-another-now-they-wanted-to-settle-their-debts-by-giving-or-taking-some-money-among-themselves\">There are \u2018N\u2019 friends who have borrowed money from one another. Now, they wanted to settle their debts by giving or taking some money among themselves.</h4>\n\n<h4 id=\"your-task-is-to-design-a-series-of-transactions-such-that-the-total-cash-flow-among-them-is-minimized\">Your task is to design a series of transactions, such that the total cash flow among them is minimized.</h4>\n\n<h4 id=\"for-example\">For example:</h4>\n\n<pre><code>Let there be three friends \u2018A\u2019, \u2018B\u2019, \u2018C\u2019  with debts-\n\n\u2022 A has to pay $ 2000 to B.\n\u2022 A has to pay $ 1000 to C.\n\u2022 B has to pay $ 3000 to C.\n\u2022 C has to pay $ 1000 to A.\n\nThen their minimized cash flow system will be-\n\n\u2022 A will finally pay $ 2000 to C.\n\u2022 B will finally pay $ 1000 to C.\n\nThus, the total cash flow among them will be $ 3000. \n</code></pre>\n\n<h5 id=\"input-format\">Input Format</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases to run. Then the test case follows.\n\nThen the first line of each test case contains a single integer \u2018N\u2019 denoting the number of friends.\n\nThe next \u2018N\u2019 lines contain \u2018N\u2019 space-separated integers where each element money[i][j] denotes the amount of money i-th person has to give to the j-th person.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print an integer denoting the minimum cash flow among friends to settle their debt.\n\nOutput for each test case will be printed in a new line. \n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 50\n1 &lt;= N &lt;= 100\n1 &lt;= MONEY[i][j] &lt;= 10^5\n\nTime Limit: 1sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n3 \n0 1000 2000\n1000 0 2000\n0 1000 0\n2 \n0 1000\n2000 0\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>3000\n1000\n</code></pre>\n\n<h4 id=\"explanation-for-sample-1\">Explanation for Sample 1:</h4>\n\n<pre><code>The optimal cash flow for the first test case will be-\n\u2022 Person 1 gives $2000 to person 3.\n\u2022 Person 2 gives $1000 to person 1.\n\nThe optimal cash flow for the second test case will be-\n\u2022 Person 2 gives $1000 to person 1.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>1\n2\n0 1000\n1000 0\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>0\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 10,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a group of 'N' friends with debts among themselves, determine the minimum total cash flow required to settle all debts. You are provided with a matrix representing the amount of money each person owes to another. Design an algorithm to find the most efficient series of transactions to minimize the overall cash flow.",
                "constraints": [
                    "1 <= T <= 50",
                    "1 <= N <= 100",
                    "1 <= MONEY[i][j] <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "n = 3, money = [[0, 1000, 2000], [1000, 0, 2000], [0, 1000, 0]]",
                        "output": "3000",
                        "explanation": "Person 1 gives $2000 to person 3. Person 2 gives $1000 to person 1."
                    },
                    {
                        "input": "n = 2, money = [[0, 1000], [2000, 0]]",
                        "output": "1000",
                        "explanation": "Person 2 gives $1000 to person 1."
                    },
                    {
                        "input": "n = 2, money = [[0, 1000], [1000, 0]]",
                        "output": "0",
                        "explanation": "Person 1 owes person 2 $1000, and Person 2 owes Person 1 $1000. These offset to zero total cash flow."
                    },
                    {
                        "input": "n = 4, money = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]",
                        "output": "0",
                        "explanation": "No one owes any money to anyone, so the total cash flow is zero."
                    },
                    {
                        "input": "n = 3, money = [[0, 500, 0], [0, 0, 1000], [500, 0, 0]]",
                        "output": "1000",
                        "explanation": "Person 1 gives Person 2 $500, and Person 2 gives Person 3 $1000, and Person 3 gives person 1 $500. The minimum cash flow to settle is 1000, where person 2 pays 500 to Person 3 directly and Person 1 and 3 settle for 500 with Person 2 giving 500 more to Person 3."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to think about as to how the minimised cash flow system will look like.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}