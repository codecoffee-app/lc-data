{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 7976,
            "title": "Minimum Character Deletion",
            "titleSlug": "minimum-character-deletion_798648",
            "content": "<h4 id=\"you-are-given-a-string-str-you-need-to-find-and-return-the-minimum-number-of-characters-to-be-deleted-from-str-so-that-the-frequency-of-each-character-in-the-string-becomes-unique\">You are given a string \u2018STR\u2019. You need to find and return the minimum number of characters to be deleted from \u2018STR\u2019 so that the frequency of each character in the string becomes unique.</h4>\n\n<h5 id=\"example\">Example:</h5>\n\n<pre><code>If the given string is \u201caaBBccc\u201d then the frequency of characters: { a:2, B:2, c:3 }. Now, as \u2018a\u2019 and \u2018B\u2019 both have the same frequency 2, we need to delete one character either one \u2018a\u2019 or one \u2018B\u2019, to make their frequency different. After deleting any character we will get frequency as 1,2 and 3, as they all are different. Thus we got our solution as 1.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains a single integer &#39;T&#39;, representing the number of test cases.\n\nThe first line of each test case contains a string &#39;STR&#39;. \n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print an integer denoting the minimum number of characters to be deleted from the string &#39;STR&#39;.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You are not required to print the output, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= |STR| &lt;= 10^5\n\nWhere |STR| is the length of the string &#39;STR&#39;.\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\naaabbbcc\npqr\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>2\n2\n</code></pre>\n\n<h5 id=\"explanation-for-output-1\">Explanation for output 1:</h5>\n\n<pre><code>In test case 1, after removing 2 a\u2019s or 2 b\u2019s, the resulting string that formed will have distinct frequencies of each character. \n\nIn test case 2, we need to remove any two characters from the string to make a unique frequency string.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\nAAbbbC\nyxyzyzz\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>0\n1\n</code></pre>\n\n<h5 id=\"explanation-for-output-2\">Explanation for Output 2:</h5>\n\n<pre><code>In test case 1, as the frequency of each character is already unique, thus no need to delete any character.\n\nIn test case 2, remove any 1 of the occurrence of y or z, and then we can each character&#39;s frequency as unique.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 15,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string 'STR', determine the minimum number of characters that need to be deleted from 'STR' such that the frequency of each character in the resulting string is unique. In other words, no two characters should have the same frequency.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= |STR| <= 10^5",
                    "Where |STR| is the length of the string 'STR'."
                ],
                "testcases": [
                    {
                        "input": "aaabbbcc",
                        "output": "2",
                        "explanation": "After removing two 'a's or two 'b's, the resulting string will have distinct frequencies for each character. For instance, removing two 'a's results in 'bbbcc' with frequencies {b:3, c:2} which are unique."
                    },
                    {
                        "input": "pqr",
                        "output": "2",
                        "explanation": "Removing any two characters from the string results in a unique frequency string (frequency of the single remaining character is 1)."
                    },
                    {
                        "input": "AAbbbC",
                        "output": "0",
                        "explanation": "The frequency of each character is already unique: {A:2, b:3, C:1}. Therefore, no characters need to be deleted."
                    },
                    {
                        "input": "yxyzyzz",
                        "output": "1",
                        "explanation": "Removing any one occurrence of 'y' or 'z' makes the frequencies unique. Original frequencies are {y:2, x:1, z:4}. If we remove one 'z', the frequencies become {y:2, x:1, z:3}, which are unique."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>For every subsequence of the given string, check whether the frequency of all the characters is unique or not.</p>",
            "<p>Use a max heap to store the frequency of each character. And if two characters have the same frequency, decrease the frequency by 1 and restore it into the heap.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Heap",
                "slug": "heap"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}