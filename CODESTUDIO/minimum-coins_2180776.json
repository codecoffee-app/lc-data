{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 14486,
            "title": "Minimum Coins",
            "titleSlug": "minimum-coins_2180776",
            "content": "<h5 id=\"ninja-is-willing-to-take-some-time-off-from-his-training-and-planning-a-year-long-tour\">Ninja is willing to take some time off from his training and planning a year-long tour.</h5>\n\n<h5 id=\"you-are-given-a-days-array-consisting-of-n-days-when-ninjas-will-be-traveling-during-the-year-each-day-is-an-integer-between-1-to-365-both-inclusive\">You are given a DAYS array consisting of  \u2018N\u2019 days when Ninjas will be traveling during the year. Each Day is an integer between 1 to 365 (both inclusive).</h5>\n\n<h5 id=\"train-tickets-are-sold-in-three-different-ways\">Train tickets are sold in three different ways:</h5>\n\n<pre><code>A 1-day pass is sold for &#39;COST&#39;[0] coins,\nA 7-day pass is sold for &#39;COST&#39;[1] coins, and\nA 30-day  pass is sold for &#39;COST&#39;[2] coins.\nThe passes allow for many days of consecutive travel.\n</code></pre>\n\n<h5 id=\"your-task-is-to-help-the-ninja-to-find-the-minimum-number-of-coins-required-to-complete-his-tour\">Your task is to help the Ninja to find the minimum number of coins required to complete his tour.</h5>\n\n<h5 id=\"for-example\">For example,</h5>\n\n<pre><code>If Ninja gets a 7-day pass on day 2, then he can travel for 7 days: 2, 3, 4, 5, 6, 7, and 8.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of the input contains an integer, &#39;T,\u2019 denoting the number of test cases.\nThe first line of each test case contains a single integer, &#39;N,\u2019 denoting the number of days Ninja wants to travel.\nThe second line of each test case has \u2018N\u2019  sorted integers corresponding to the DAYS.\nThe third line of each test case contains a &#39;COST&#39; array having three integers corresponding to the &#39;COST&#39; of a 1-day pass, a 7-day pass, and a 30-day pass. \n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print a single integer corresponding to the minimum number of coins required to travel every day in the given list of days\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 365\n1 &lt;= DAYS[i] &lt;= 365\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n2 \n2 5\n1 4 25    \n7\n1 3 4 5 7 8 10\n2 7 20\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>2\n11\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For sample input 1:</h5>\n\n<pre><code>For the first test case, \nOn Day 2, Ninja will buy a 1-day pass with 1 coin.\nOn Day 5, Ninja will buy a 1-day pass with 1 coin.\nIn total, Ninja will spend 2 coins. Hence the answer is 2.\n\nFor the second test case,\nOn Day 1, Ninja will buy a 1-day pass with 2 coins.\nOn Day 3, Ninja will buy a 7-day pass with 7 coins valid for days 3,4,5...9.\nOn Day 10, Ninja will buy a 1-day pass with 2 coins.\nIn total, Ninja will spend 11 coins. Hence the answer is 11.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n6\n1 4 6 7 8 20\n2 7 15\n12\n1 2 3 4 5 6 7 8 9 10 30 31\n2 7 15 \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>11\n17\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 39,
            "dislikes": "NA",
            "rephrased": {
                "body": "A ninja is planning a year-long tour. You are given an array `DAYS` of `N` days when the ninja will be traveling. Each day is an integer between 1 and 365, inclusive. Train tickets are available in three types:\n\n*   1-day pass: costs `COST[0]` coins\n*   7-day pass: costs `COST[1]` coins\n*   30-day pass: costs `COST[2]` coins\n\nPasses allow for consecutive travel days. Your task is to find the minimum number of coins required for the ninja to complete his tour.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 365",
                    "1 <= DAYS[i] <= 365",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "2\n2\n2 5\n1 4 25\n7\n1 3 4 5 7 8 10\n2 7 20",
                        "output": "2\n11",
                        "explanation": "For the first test case:\nOn Day 2, buy a 1-day pass for 1 coin.\nOn Day 5, buy a 1-day pass for 1 coin.\nTotal cost: 2 coins.\n\nFor the second test case:\nOn Day 1, buy a 1-day pass for 2 coins.\nOn Day 3, buy a 7-day pass for 7 coins, covering days 3 to 9.\nOn Day 10, buy a 1-day pass for 2 coins.\nTotal cost: 11 coins."
                    },
                    {
                        "input": "2\n6\n1 4 6 7 8 20\n2 7 15\n12\n1 2 3 4 5 6 7 8 9 10 30 31\n2 7 15",
                        "output": "11\n17",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to recur every day and try to buy every possible pass on that day.</p>",
            "<p>Try to recur for every day and store the answer for each subproblem.</p>",
            "<p>Try to think of an iterative approach.</p>",
            "<p>Try to think of an iterative approach with constant space.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}