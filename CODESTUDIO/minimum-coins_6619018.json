{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 23279,
            "title": "Minimum coins",
            "titleSlug": "minimum-coins_6619018",
            "content": "<h4 id=\"you-are-given-a-permutation-a-of-length-n-you-can-apply-the-following-operation-any-number-of-times-which-costs-1-coin-for-each-operation\">You are given a permutation &#39;A&#39; of length &#39;N&#39;. You can apply the following operation any number of times which costs 1 coin for each operation.</h4>\n\n<pre><code>Select any subarray of length at most &#39;N&#39; - 1 and rearrange the elements in any order.\n</code></pre>\n\n<h4 id=\"return-the-minimum-number-of-coins-required-to-sort-the-permutation-in-increasing-order\">Return the minimum number of coins required to sort the permutation in increasing order.</h4>\n\n<h4 id=\"a-permutation-is-an-array-in-which-each-element-from-1-to-n-occurs-exactly-once\">A permutation is an array in which each element from 1 to &#39;N&#39; occurs exactly once.</h4>\n\n<h5 id=\"for-example\">For Example:-</h5>\n\n<pre><code>Let &#39;N&#39; = 5, &#39;A&#39; = [1, 2, 3, 5, 4].\nWe can apply the operation to the subarray from index 4 to 5 (1-based indexing).\nSo our answer is 1.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:-</h5>\n\n<pre><code>First-line contains an integer &#39;T&#39;, which denotes the number of test cases.\nFor every test case:-\nFirst-line contains an integer &#39;N&#39;, denoting the length of the array &#39;A&#39;.\nSecond-line contains &#39;N&#39; space-separated integers, elements of array &#39;A&#39;.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:-</h5>\n\n<pre><code>For each test case, Return the minimum number of coins required to sort the permutation in increasing order.\n</code></pre>\n\n<h5 id=\"note\">Note:-</h5>\n\n<pre><code>You don\u2019t need to print anything. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:-</h5>\n\n<pre><code>1 &lt;= &#39;T&#39; &lt;= 10\n3 &lt;= &#39;N&#39; &lt;= 10^5\n\nThe Sum of &#39;N&#39; overall test cases does not exceed 10^5.\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:-</h5>\n\n<pre><code>2\n4\n1 3 2 4\n3\n1 2 3\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:-</h5>\n\n<pre><code>1\n0\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of sample input 1:-</h5>\n\n<pre><code>First test case:-\nWe can apply the operation to the subarray from index 2 to 3 (1-based indexing).\nSo our answer is 1.\n\nSecond test case:-\nThe array is already sorted.\nSo our answer is 0.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:-</h5>\n\n<pre><code>2\n5\n5 4 3 1 2\n5\n3 2 1 4 5\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:-</h5>\n\n<pre><code>2\n1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": -8,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a permutation 'A' of length 'N', determine the minimum number of operations required to sort 'A' in increasing order. Each operation allows you to select a subarray of length at most 'N' - 1 and rearrange its elements in any order. The cost of each operation is 1 coin.",
                "constraints": [
                    "1 <= 'T' <= 10",
                    "3 <= 'N' <= 10^5",
                    "The sum of 'N' over all test cases does not exceed 10^5.",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "4\n1 3 2 4",
                        "output": "1",
                        "explanation": "The array [1, 3, 2, 4] can be sorted by rearranging the subarray [3, 2] to [2, 3] in one operation."
                    },
                    {
                        "input": "3\n1 2 3",
                        "output": "0",
                        "explanation": "The array [1, 2, 3] is already sorted."
                    },
                    {
                        "input": "5\n5 4 3 1 2",
                        "output": "2",
                        "explanation": "The array [5, 4, 3, 1, 2] can be sorted in 2 operations. One possible solution: First rearrange the subarray [5, 4, 3, 1] to [1, 3, 4, 5] resulting in [1,3,4,5,2]. Then rearrange [3,4,5,2] to [2,3,4,5] resulting in [1,2,3,4,5]."
                    },
                    {
                        "input": "5\n3 2 1 4 5",
                        "output": "1",
                        "explanation": "The array [3, 2, 1, 4, 5] can be sorted by rearranging the subarray [3, 2, 1] to [1, 2, 3] in one operation."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can the answer be greater than 3?</p><p>&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}