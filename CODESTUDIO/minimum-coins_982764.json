{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9297,
            "title": "Minimum Coins",
            "titleSlug": "minimum-coins_982764",
            "content": "<h4 id=\"bob-went-to-his-favourite-bakery-to-buy-some-pastries-after-picking-up-his-favourite-pastries-his-total-bill-was-p-cents-bob-lives-in-berland-where-all-the-money-is-in-the-form-of-coins-with-denominations-1-2-5-10-20-50-100-500-1000\">Bob went to his favourite bakery to buy some pastries. After picking up his favourite pastries his total bill was P cents. Bob lives in Berland where all the money is in the form of coins with denominations {1, 2, 5, 10, 20, 50, 100, 500, 1000}.</h4>\n\n<h4 id=\"bob-is-not-very-good-at-maths-and-thinks-fewer-coins-mean-less-money-and-he-will-be-happy-if-he-gives-minimum-number-of-coins-to-the-shopkeeper-help-bob-to-find-the-minimum-number-of-coins-that-sums-to-p-cents-assume-that-bob-has-an-infinite-number-of-coins-of-all-denominations\">Bob is not very good at maths and thinks fewer coins mean less money and he will be happy if he gives minimum number of coins to the shopkeeper. Help Bob to find the minimum number of coins that sums to P cents (assume that Bob has an infinite number of coins of all denominations).</h4>\n\n<h5 id=\"input-format\">Input Format</h5>\n\n<pre><code>The first line of input contains an integer &#39;T&#39; representing the number of test cases. Then the test cases follow.\n\nThe first line of each test case contains a positive integer P, representing the total amount.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print the minimum number of coins that sums to P.\n\nThe output for each test case is in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= P &lt;= 10^9\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>3\n60\n10\n24\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>2\n1\n3\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1:</h5>\n\n<pre><code>In the 1st test case, we need one coin of 50 cents and one coin of 10 cents.\nIn the 2nd test case, we need a coin of 10 cents.\nIn the 3rd test case, we need one coin of 20 cents and two coins of 2 cents.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n200\n1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>2\n1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 24,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a total amount `p` in cents, determine the minimum number of coins needed to make up that amount. You have an infinite supply of coins with denominations {1, 2, 5, 10, 20, 50, 100, 500, 1000}.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= P <= 10^9",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "p = 60",
                        "output": "2",
                        "explanation": "One coin of 50 cents and one coin of 10 cents."
                    },
                    {
                        "input": "p = 10",
                        "output": "1",
                        "explanation": "One coin of 10 cents."
                    },
                    {
                        "input": "p = 24",
                        "output": "3",
                        "explanation": "One coin of 20 cents and two coins of 2 cents."
                    },
                    {
                        "input": "p = 200",
                        "output": "2",
                        "explanation": "Two coins of 100 cents."
                    },
                    {
                        "input": "p = 1",
                        "output": "1",
                        "explanation": "One coin of 1 cent."
                    },
                    {
                        "input": "p = 1256",
                        "output": "5",
                        "explanation": "One 1000, two 100, one 50, and one 6 cents (5+1)"
                    },
                    {
                        "input": "p = 999",
                        "output": "7",
                        "explanation": "One 500, four 100, one 50, four 10, 9 = 5+2+2, Total is 1+4+1+0+0+0+0+1+2=9 coins"
                    },
                    {
                        "input": "p = 1000",
                        "output": "1",
                        "explanation": "Use a single 1000 coin"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Think of a recursive approach to solve the problem.</p>",
            "<p>Try to optimise the previous approach by storing the answer for the amount which we have calculated.</p>",
            "<p>Think of a greedy approach to find the minimum number of coins.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}