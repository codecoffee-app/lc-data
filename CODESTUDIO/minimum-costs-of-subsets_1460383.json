{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12418,
            "title": "Minimum Costs Of Subsets ",
            "titleSlug": "minimum-costs-of-subsets_1460383",
            "content": "<h4 id=\"you-are-given-an-array-arr-of-n-integers-and-an-integer-your-task-is-to-divide-this-array-into-k-subsets-satisfying-the-following-constraints\">You are given an array ARR of \u2018N\u2019 Integers and an integer. Your task is to divide this array into \u2018K\u2019 subsets satisfying the following constraints-</h4>\n\n<pre><code>1. Each element in ARR belongs to exactly one subset.\n2. All the elements in a subset are unique.\n3. Each subset has a size of \u2018N\u2019/ \u2019K\u2019\n</code></pre>\n\n<h4 id=\"your-task-is-to-find-the-minimum-cost-of-constructing-the-k-subset\">Your task is to find the minimum cost of constructing the \u2018K\u2019 subset.</h4>\n\n<h4 id=\"cost-of-the-construction-of-subsets-is-calculated-as-the-sum-of-the-maximum-the-minimum-of-a-subset-if-there-is-no-way-to-divide-arr-into-k-subsets-satisfying-the-constraints-print-1\">Cost of the construction of subsets is calculated as the sum of the maximum - the minimum of a subset. If there is no way to divide ARR into K subsets satisfying the constraints, print -1.</h4>\n\n<h4 id=\"it-is-guaranteed-that-k-is-a-divisor-of-n\">It is guaranteed that \u2018K\u2019 is a divisor of \u2018N\u2019.</h4>\n\n<h4 id=\"for-example\">For example :</h4>\n\n<pre><code>[1,2,3,1,2,5] k=2\n[[1,2,3],[1,2,5]] is a valid subset division. All the elements in each subset are unique and the the cost of construction is (3 - 1) + (5 - 1) = 6  \n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases to run. Then the test case follows.\n\nThe first line and the only line of each test case contain two single space-separated integers, \u2018N\u2019 and \u2018K\u2019.\n\nThe second line of each test case contains N space-separated integers representing the elements of the array ARR. \n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case print the minimum cost of construction.\nOutput for each test case is printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don\u2019t need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= N &lt;= 12\n1 &lt;= K &lt;= N\n1&lt;= ARR[i] &lt;= 20    \nK is a devisor of the N\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2 \n4 2\n1 4 5 9\n5 5\n1 2 3 4 5\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code> 7\n 0\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1 :</h5>\n\n<pre><code>For the first test case [[1,4], [5,9]] is the required distribution.\nANS = ( 4 - 1) + (9 - 5) = 7\n[ [1, 5], [9, 4] ] is also the valid distribution but the cost of construction is not minimum. \nFor the second test case each subset has exactly one element [ [1], [2], [3], [4], [5] ]\nANS = (1 - 1) + (2 - 2) + (3 - 3) + (4 - 4) + (5 - 5)\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n6 3 \n3 3 3 1 11 4\n4 2 \n7 11 7 11 \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>11\n8\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": -6,
            "dislikes": "NA",
            "rephrased": {
                "body": "You are given an array ARR of N integers and an integer K. Your task is to divide this array into K subsets, adhering to the following constraints:\n\n1. Each element in ARR must belong to exactly one subset.\n2. All elements within a subset must be unique.\n3. Each subset must have a size of N/K.\n\nYour objective is to determine the minimum cost required to construct these K subsets. The cost is defined as the sum of (maximum element - minimum element) for each subset. If it's impossible to divide ARR into K subsets satisfying the constraints, return -1. K is guaranteed to be a divisor of N.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= N <= 12",
                    "1 <= K <= N",
                    "1 <= ARR[i] <= 20",
                    "K is a divisor of N",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "4 2\n1 4 5 9",
                        "output": "7",
                        "explanation": "The optimal distribution is [[1,4], [5,9]]. The cost is (4 - 1) + (9 - 5) = 7.  Other valid distributions exist, but they don't yield the minimum cost."
                    },
                    {
                        "input": "5 5\n1 2 3 4 5",
                        "output": "0",
                        "explanation": "Each subset contains exactly one element: [[1], [2], [3], [4], [5]]. The cost is (1 - 1) + (2 - 2) + (3 - 3) + (4 - 4) + (5 - 5) = 0"
                    },
                    {
                        "input": "6 3\n3 3 3 1 11 4",
                        "output": "11",
                        "explanation": null
                    },
                    {
                        "input": "4 2\n7 11 7 11",
                        "output": "8",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Constrains are small, can we use a bitmask to solve this problem?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}