{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9125,
            "title": "Minimum days to complete work",
            "titleSlug": "minimum-days-to-complete-work_975478",
            "content": "<h4 id=\"we-have-to-complete-a-total-of-n-works-now-each-work-can-be-done-on-only-one-of-the-two-special-days-given-in-2-different-arrays-day1-and-day2-respectively\">We have to complete a total of \u2018N\u2019 works. Now, each work can be done on only one of the two special days given in 2 different arrays \u2018day1\u2019 and \u2018day2\u2019 respectively.</h4>\n\n<h4 id=\"day1-i-denotes-that-the-i-th-work-can-on-the-day1-i-th-day-and-day2-i-denotes-that-the-i-th-work-can-on-the-day2-i-th-day-also-it-is-guaranteed-that-day2-i-day1-i\">day1[i] denotes that the \u2018i-th\u2019 work can on the day1[i] th day and day2[i] denotes that the \u2018i-th\u2019 work can on the day2[i] th day. Also, it is guaranteed that day2[i] &lt; day1[i].</h4>\n\n<h4 id=\"also-make-sure-the-works-are-being-done-in-such-a-way-that-they-must-be-in-non-decreasing-order-in-terms-of-days-given-in-array-day1\">Also, make sure, the works are being done in such a way that they must be in non-decreasing order in terms of days given in array \u2018day1\u2019.</h4>\n\n<h4 id=\"your-task-is-to-find-the-minimum-number-of-days-in-which-all-the-work-can-be-completed\">Your task is to find the minimum number of days in which all the work can be completed.</h4>\n\n<h5 id=\"for-example\">For example</h5>\n\n<pre><code>day1 = {5, 6, 2}\nday2 = {2, 4, 1}\n\nIn this case, the ideal order will be to perform work 3 on the first day, work 1 on the second day and work 2 on the fourth day. The order with respect to Day1 in which the work is done will be {2, 5, 6} which is non-decreasing. Hence the number of days needed to finish all work will be 4.\n</code></pre>\n\n<h5 id=\"input-format\">Input format :</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases.\n\nThe next \u20183 * T\u2019 lines represent the \u2018T\u2019 test cases.\n\nThe First line of each test case contains a single integer \u2018N\u2019 denoting the number of works to be done.\n\nThe second line contains \u2018N\u2019 space-separated integers denoting the sequence day1.\n\nThe last line contains \u2018N\u2019 space-separated integers denoting the sequence day2.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case, return the minimum number of days required to complete the work.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the given functions.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 50\n0 &lt;= N &lt;= 10^3\n1&lt;= day1[i],day2[i] &lt;= 10^9\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n3\n9 4 6\n2 1 2\n4\n6 3 8 7\n2 1 5 4\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>2\n5\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1:</h5>\n\n<pre><code>For the first test case:\n\nWe need two days for the above example.\n\nIf we do the first and third works first and then the second work then the order in which work is done according to Day1 will be: 6,9,4 which we can clearly see we will violate the conditions. As the order according to Day 1 is not non-decreasing because 9 comes after 4 which is violating the non-decreasing order condition.\n\nHowever, On the first day, we do the second work and on the third day, we do the first and last works.\nHence we need two days to complete the work.\n\n\n\nFor the second test case:\n\nWe need two days for the above example.\n\nWe do the second work on the first day then the first work on the second day then the fourth work on the fourth day then the third work on the fifth day. The order in which work is done according to day1 will be 3,6,8,7 which is non decreasing which satisfies the conditions.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>1\n6\n3 3 4 5 6 6\n1 2 1 2 1 2\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>6\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 1,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given 'N' works to be completed. Each work can be done on one of two special days, indicated by `day1[i]` and `day2[i]` for the i-th work, where `day2[i] < day1[i]`. The works must be performed in a non-decreasing order of days from the `day1` array. Find the minimum number of days required to complete all works while respecting the non-decreasing order constraint of `day1`.",
                "constraints": [
                    "1 <= T <= 50",
                    "0 <= N <= 10^3",
                    "1 <= day1[i], day2[i] <= 10^9",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "3\n9 4 6\n2 1 2",
                        "output": "2",
                        "explanation": "The minimum number of days required is 2. Doing the second work on day 1, and the first and third works on day 2 satisfies the constraints. Ordering of day1 values is {4, 6, 9} which is non-decreasing."
                    },
                    {
                        "input": "4\n6 3 8 7\n2 1 5 4",
                        "output": "5",
                        "explanation": "The minimum number of days required is 5. One possible solution is to do work 2 on day 1, work 1 on day 2, work 4 on day 4, and work 3 on day 5. Ordering of day1 values is {3, 6, 8, 7} which is non-decreasing."
                    },
                    {
                        "input": "6\n3 3 4 5 6 6\n1 2 1 2 1 2",
                        "output": "6",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to sort the array and find the answer greedily.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Number Theory",
                "slug": "number-theory"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}