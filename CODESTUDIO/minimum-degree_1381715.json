{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 11474,
            "title": "minimum degree",
            "titleSlug": "minimum-degree_1381715",
            "content": "<h4 id=\"you-have-an-undirected-graph-with-n-nodes-and-m-edges-the-degree-of-the-connected-trio-in-the-graph-is-the-number-of-edges-connected-to-the-nodes-of-the-trio-where-one-node-belongs-to-the-node-in-the-trio-while-the-other-node-doesn-t-belong-to-the-trio-your-task-is-to-print-the-minimum-degree-of-the-connected-trio\">You have an undirected graph with N nodes and M edges. The degree of the connected trio in the graph is the number of edges connected to the nodes of the trio where one node belongs to the node in the trio, while the other node doesn\u2019t belong to the trio. Your task is to print the minimum degree of the connected trio.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>A connected trio means a set of three nodes, where all three are interconnected.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of the input contains \u2018T\u2019 denoting the number of test cases.\n\nThe first line of each test case contains \u2018N\u2019 and \u2018M\u2019 denoting the number of nodes and number of edges.\n\nEach of the next M lines contains two space-separated integers u and v, denoting node u and node v are connected by an edge.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, return an integer denoting the minimum degree of the connected trio.\nPrint the output for each test case in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You don&#39;t need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 3\n2 &lt;= N &lt;= 100\n0 &lt;= M &lt;= min(500, N*(N-1)/2)\n0 &lt;= u[i], v[i] &lt;= N-1\n\nwhere, \u2018N\u2019 and \u2018M\u2019 denoting the number of nodes and number of edges and u[i], v[i] are nodes to be connected by an edge.\n\nTime Limit: 1 sec.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n6 7 \n0 1\n0 3\n1 2\n1 3\n2 3\n2 4\n1 5\n4 0\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>3\n0\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1:</h5>\n\n<pre><code>In test case 1:\n</code></pre>\n\n<p><img src=\"https://ninjasfiles.s3.amazonaws.com/asset_0000000000000337_1617446886_ex2.png\" alt=\"\"></p>\n\n<pre><code>There are two trios here in this graph [0, 1, 3] and [1, 2, 3].\n\nIn trio [0, 1, 3] : we have 3 edges where one node is connected to trio and other isn\u2019t namely { (1-- 5) , (1 -- 2), (3 -- 2) }\n\nIn trio [ 1, 2, 3] : we have 4 edges where one node is connected to trio and other isn\u2019t namely { (1-- 5) , (1 -- 0), (3 -- 0) , (2 -- 4) }\n\nThe minimum of the two is 3, hence the answer.\n\nIn test case 2:\nThere are no edges thus answer is 0.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n5 6\n0 1\n1 2\n2 3\n3 1\n1 4\n4 2\n6 6\n0 3\n0 1\n4 1\n1 5\n5 3\n3 4\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>3\n0\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -8,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an undirected graph with N nodes and M edges, a 'connected trio' is a set of three nodes where all three are interconnected. The degree of a connected trio is the number of edges connected to the nodes of the trio, where one endpoint of the edge belongs to the trio and the other does not.  Your task is to find and return the minimum degree among all connected trios in the graph.",
                "constraints": [
                    "1 <= T <= 3",
                    "2 <= N <= 100",
                    "0 <= M <= min(500, N*(N-1)/2)",
                    "0 <= u[i], v[i] <= N-1",
                    "Time Limit: 1 sec."
                ],
                "testcases": [
                    {
                        "input": "6 7 \n0 1\n0 3\n1 2\n1 3\n2 3\n2 4\n1 5",
                        "output": "3",
                        "explanation": "In the given graph, two connected trios exist: [0, 1, 3] and [1, 2, 3].\nFor trio [0, 1, 3], there are 3 edges connecting the trio to external nodes: (1--5), (1--2), and (3--2).\nFor trio [1, 2, 3], there are 4 edges connecting the trio to external nodes: (1--5), (1--0), (3--0), and (2--4).\nThe minimum of these degrees is 3."
                    },
                    {
                        "input": "4 0",
                        "output": "0",
                        "explanation": "With no edges in the graph, no connected trios can exist. Therefore, the minimum degree is 0."
                    },
                    {
                        "input": "5 6\n0 1\n1 2\n2 3\n3 1\n1 4\n4 2",
                        "output": "3",
                        "explanation": "In the graph, a connected trio exists: [1, 2, 4].  The edges that connect nodes within this trio to nodes outside this trio are: (1 to 0), (2 to 3), and (1 to 3).  Hence, the minimum degree is 3."
                    },
                    {
                        "input": "6 6\n0 3\n0 1\n4 1\n1 5\n5 3\n3 4",
                        "output": "0",
                        "explanation": "In the graph, a connected trio exists: [1, 3, 4], also 0,1,3 and 1,3,5 and 1,4,5 and 3,4,5.  For the trio 1,3,4 there are edges connecting nodes within the trio to nodes outside this trio, for example the trio 1,3,4 has a total degree of 0"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Think to iterate over all trios of nodes and check if there is an edge between all pairs. Can you think of a solution now?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}