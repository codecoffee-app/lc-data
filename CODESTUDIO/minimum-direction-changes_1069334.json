{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9621,
            "title": "Minimum Direction Changes",
            "titleSlug": "minimum-direction-changes_1069334",
            "content": "<h4 id=\"given-a-2d-grid-having-n-rows-and-m-columns-each-cell-of-the-grid-has-a-character-among-u-l-d-r-written-on-it-denoting-up-left-down-and-right-respectively-and-indicating-the-direction-in-which-it-is-permitted-to-move-from-that-cell-to-its-neighbor-your-task-is-to-find-the-minimum-number-of-cells-whose-direction-value-is-required-to-be-changed-so-that-there-exists-a-path-from-top-left-to-the-bottom-right-cell-by-following-the-directions-written-on-the-cells\">Given a 2D grid having N Rows and M Columns. Each cell of the grid has a character among [ &#39;U&#39;, &#39;L&#39;, &#39;D&#39;, &#39;R&#39; ] written on it, denoting Up, Left, Down, and Right respectively and indicating the direction in which it is permitted to move from that cell to its neighbor. Your task is to find the minimum number of cells whose direction value is required to be changed so that there exists a path from Top-Left to the Bottom-Right cell by following the directions written on the cells.</h4>\n\n<h5 id=\"for-example\">For example,</h5>\n\n<pre><code>Consider the 2 * 2 grid\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/screenshot-2021-01-06-104456-6946.png\" alt=\"sample inp\">           </p>\n\n<pre><code>Let&#39;s call the four cells in the grid as A,B,C,D. In this grid, it is allowed to move from Cell A to Cell B, Cell B to Cell D, Cell C to Cell D and Cell D to Cell C. There are two paths that start from A and ends at D:\n\n1) A-&gt;C-&gt;D\nTo follow this path we need to change the value of cell A to \u201cD\u201d and do not need to change the value of cell C. Therefore, the total change for this path is 1.\n\n2) A-&gt;B-&gt;D\nTo follow this path we need not to change any of the cell values. Therefore the total changes for this path is 0.\n\nAs we can see the minimum changes required to reach the bottom-right cell is Zero therefore the answer is 0 in this case.\n</code></pre>\n\n<h5 id=\"input-format\">Input format</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases.\nThen the test cases follow.\n\nThe first line of each test case contains space-separated two numbers &#39;N&#39; and &#39;M&#39; denoting the number of rows and the number of columns in the grid respectively.\n\nThe next &#39;N&#39; lines of each test case contain &#39;M&#39; characters denoting the directions.\n</code></pre>\n\n<h5 id=\"output-format\">Output format:</h5>\n\n<pre><code>For each test case, print the minimum number of cells whose direction value is required to be changed so that there exists a path from Top-Left to the Bottom-Right cell.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N, M &lt;= 100\nEach cell of the grid will only have one of [&#39;U&#39;, &#39;L&#39;, &#39;D&#39;, &#39;R&#39;] character.\n\nTime Limit: 1sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n2 3\nDRD\nDRL\n1 4\nRRRR\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>1\n0\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1:</h5>\n\n<pre><code>For the first test case:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/screenshot-2021-01-06-104711-6945.png\" alt=\"sample inp\"></p>\n\n<pre><code>We can change the value of the leftmost cell of the bottom row from &#39;D&#39; to &#39;R&#39; or we can change the value of the starting cell from &#39;D&#39; to &#39;R&#39; to get a path from the Top-Left to \nBottom-Right cell. Therefore, the minimum direction change required in this case is 1.\n\nFor the second test case:\nAll the cells only allow moving to the right direction. So a path from leftmost to the rightmost cell already exists in this case. Therefore, the answer is 0 in this case.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2 \n3 3\nDRR\nDRR\nDRR\n1 1\nL\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>1\n0\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 1,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a 2D grid of size N x M, where each cell contains a character representing a direction ('U', 'L', 'D', 'R' for Up, Left, Down, Right), determine the minimum number of direction changes required to find a path from the top-left cell (0, 0) to the bottom-right cell (N-1, M-1). You can only move to adjacent cells in the directions specified by the characters in the grid. The goal is to find the fewest changes needed to enable a valid path.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N, M <= 100",
                    "Each cell of the grid will only have one of ['U', 'L', 'D', 'R'] character."
                ],
                "testcases": [
                    {
                        "input": "grid = [['D', 'R', 'D'], ['D', 'R', 'L']], n = 2, m = 3",
                        "output": "1",
                        "explanation": "We can change the value of the leftmost cell of the bottom row from 'D' to 'R' or we can change the value of the starting cell from 'D' to 'R' to get a path from the Top-Left to Bottom-Right cell. Therefore, the minimum direction change required in this case is 1."
                    },
                    {
                        "input": "grid = [['R', 'R', 'R', 'R']], n = 1, m = 4",
                        "output": "0",
                        "explanation": "All the cells only allow moving to the right direction. So a path from leftmost to the rightmost cell already exists in this case. Therefore, the answer is 0 in this case."
                    },
                    {
                        "input": "grid = [['D', 'R', 'R'], ['D', 'R', 'R'], ['D', 'R', 'R']], n = 3, m = 3",
                        "output": "1",
                        "explanation": "Changing grid[0][0] from 'D' to 'R' allows a path to the bottom right with only one change."
                    },
                    {
                        "input": "grid = [['L']], n = 1, m = 1",
                        "output": "0",
                        "explanation": "The start and end are the same, so no changes needed"
                    },
                    {
                        "input": "grid = [['U','R'],['L','D']], n=2, m=2",
                        "output": "2",
                        "explanation": "We need to change (0,0) from U to R or D and (1,0) from L to D or R to reach the target."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to build a Directed Weighted Graph for the grid.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Matrices (2D Arrays)",
                "slug": "matrices-(2d-arrays)"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}