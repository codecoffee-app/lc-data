{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8535,
            "title": "Minimum falling path sum",
            "titleSlug": "minimum-falling-path-sum_893012",
            "content": "<h4 id=\"you-have-been-given-a-square-array-vec-of-integers-of-size-n-rows-and-n-columns-your-task-is-to-find-the-minimum-sum-of-a-falling-path-through-the-square-array-the-number-of-rows-and-columns-in-the-given-array-will-be-the-same\">You have been given a square array &#39;VEC&#39; of integers of size &#39;N&#39; rows and &#39;N&#39; columns. Your task is to find the minimum sum of a falling path through the square array. The number of rows and columns in the given array will be the same.</h4>\n\n<h4 id=\"a-falling-path-starts-at-any-element-in-the-first-row-and-chooses-one-element-from-each-row-the-next-rows-choice-must-be-in-a-column-that-is-different-from-the-previous-rows-column-by-at-most-one\">A falling path starts at any element in the first row and chooses one element from each row.  The next row&#39;s choice must be in a column that is different from the previous row&#39;s column by at most one.</h4>\n\n<h4 id=\"example\">Example:</h4>\n\n<pre><code>VEC[][]= {{5, 10}, {25, 15}}      \n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/a-4-5881.jpg\" alt=\"alt text\"></p>\n\n<pre><code>All the rectangles denote the possible falling paths. The rectangle with red filler is the minimum falling path with the minimum falling path sum of 20 (5+15). \n</code></pre>\n\n<h5 id=\"input-format\">Input format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases.\n\nThe first line of each test contains an integer \u2018N\u2019 denoting the number of rows and columns.\n\nThe next \u2018N\u2019 lines of each test case contain \u2018N\u2019 space-separated integers denoting the elements of the square array.\n</code></pre>\n\n<h5 id=\"output-format\">Output format:</h5>\n\n<pre><code>For each test case, print a single integer the minimum sum of a falling path through the square array.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You don\u2019t need to print anything; it has already been taken care of. Just return the minimum sum calculated.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 50\n1 &lt;= N &lt;= 100\n-10^7 &lt;= VEC[i][j] &lt;=10^7\n\nWhere \u2018T\u2019 is the total number of test cases, \u2018N\u2019 denotes the number of rows and columns in the array, and \u2018VEC[i][j]\u2019 denotes the range of elements in the 2 Dimensional array.\n\nTime limit: 1 second\n</code></pre>\n<h4 id=\"sample-input-1\">Sample input 1:</h4>\n\n<pre><code>2\n3\n11 12 13\n14 15 16\n17 18 19\n2\n5 10\n25 15\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample output 1:</h4>\n\n<pre><code>42\n20\n</code></pre>\n\n<h4 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1:</h4>\n\n<pre><code>Test Case 1: \nThe possible falling paths are \n[11,14,17], [11,14,18], [11,15,17], [11,15,18], [11,15,19]\n[12,14,17], [12,14,18], [12,15,17], [12,15,18], \n[12,15,19], [12,16,18], [12,16,19]\n[13,15,17], [13,15,18], [13,15,19], [13,16,18], [13,16,19]\n\nPaths [11, 14, 19], [13, 16, 17] are not the falling paths. In [11, 14, 19], 14 lies in column 0 and 19 lies in column 2. So, the difference in their columns is greater than 1. The same is the case for path [13, 16, 17]\nThe falling path with the smallest sum is [11, 14, 17], so the answer is 42.     \n\nTest case 2: \nThe possible falling paths are \n[5, 25], [5, 15]\n[10, 25], [10, 15]\nThe falling path with the smallest sum is [5, 15], so the answer is 20.    \n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample input 2:</h4>\n\n<pre><code>2\n3\n4 3 5\n2 5 7\n3 6 8\n2\n12 14\n17 18\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample output 2:</h4>\n\n<pre><code>8\n29\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 38,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a square array 'VEC' of integers with 'N' rows and 'N' columns, find the minimum sum of a falling path through the array. A falling path starts at any element in the first row and selects one element from each row. The column of the chosen element in the next row must differ from the previous row's column by at most one.",
                "constraints": [
                    "1 <= T <= 50 (Number of test cases)",
                    "1 <= N <= 100 (Number of rows and columns)",
                    "-10^7 <= VEC[i][j] <= 10^7 (Range of elements in the array)",
                    "Time limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "2\n3\n11 12 13\n14 15 16\n17 18 19\n2\n5 10\n25 15",
                        "output": "42\n20",
                        "explanation": "Test Case 1:  The minimum falling path is [11, 14, 17] with a sum of 42.\nTest case 2:  The minimum falling path is [5, 15] with a sum of 20."
                    },
                    {
                        "input": "2\n3\n4 3 5\n2 5 7\n3 6 8\n2\n12 14\n17 18",
                        "output": "8\n29",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Figure out all the possible falling paths.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Matrices (2D Arrays)",
                "slug": "matrices-(2d-arrays)"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}