{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9592,
            "title": "Minimum Insertions",
            "titleSlug": "minimum-insertions_1062694",
            "content": "<h4 id=\"you-are-given-a-string-str-of-length-n-consisting-of-lowercase-english-alphabet-letters-your-task-is-to-return-the-count-of-minimum-characters-to-be-added-to-make-the-string-a-palindrome\">You are given a string &#39;STR&#39; of length &#39;N&#39; consisting of lowercase English Alphabet letters. Your task is to return the count of minimum characters to be added to make the string a palindrome.</h4>\n\n<h4 id=\"you-can-add-any-number-of-characters-at-any-positions-in-the-string-like-in-the-beginning-or-between-two-characters-of-the-string-or-at-the-end-of-the-string\">You can add any number of characters at any positions in the string like in the beginning, or between two characters of the string or at the end of the string.</h4>\n\n<h4 id=\"for-example\">For example:</h4>\n\n<pre><code>For the given string \u201cdeed\u201d, the string is already a palindrome, thus, minimum characters needed to be added are 0. \n\nSimilarly, for the given string \u201cabb\u201d, the minimum characters needed is 1 i.e. \u2018a\u2019 which is to be added to the end of the string,  which makes the string \u201cabba\u201d, which is a palindrome.   \n</code></pre>\n\n<h5 id=\"input-format\">Input format:</h5>\n\n<pre><code>The first line contains an integer &#39;T&#39; which denotes the number of test cases or queries to be run. Then, the T test cases follow.\n\nThe first and only line of each test case contains the string &#39;STR&#39;. \n</code></pre>\n\n<h5 id=\"output-format\">Output format:</h5>\n\n<pre><code>For each test case, print the count of minimum characters needed to make the string palindrome.\n\nOutput for each test case will be printed in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10 ^ 2 \n1 &lt;= N &lt;= 10 ^ 4\n&#39;STR&#39; contains only lowercase English letters.\n\nTime limit: 1 second\n</code></pre>\n<h5 id=\"sample-input-1\">Sample input 1:</h5>\n\n<pre><code>2\nabcd\ndad \n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample output 1:</h5>\n\n<pre><code>3\n0\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1:</h5>\n\n<pre><code>In the first test case, the minimum characters to be added at front to make it a palindrome are 3 i.e. \u201cdcb\u201d which makes the string \u201cdcbabcd\u201d.\n\nIn the second test case, the string is already a palindrome, we do not need to add any character.  \n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample input 2:</h5>\n\n<pre><code>2\nxxaxxa    \nabb\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample output 2:</h5>\n\n<pre><code>1\n1\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation For Sample Input 2:</h5>\n\n<pre><code>In the first test case, the minimum number of characters to be added at front to make it a palindrome is 1 i.e. \u201ca\u201d which makes the string \u201caxxaxxa\u201d.\n\nIn the second test case, the minimum number of characters to be added at end to make it a palindrome is 1 i.e. \u201ca\u201d which makes the string \u201cabba\u201d.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 0,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string 'STR' of length 'N' consisting of lowercase English alphabet letters, determine the minimum number of characters that need to be added to make the string a palindrome. You can insert characters at any position within the string (beginning, end, or between existing characters).",
                "constraints": [
                    "1 <= T <= 10^2 (Number of test cases)",
                    "1 <= N <= 10^4 (Length of the string)",
                    "'STR' contains only lowercase English letters.",
                    "Time limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "abcd",
                        "output": "3",
                        "explanation": "Adding 'dcb' at the beginning of 'abcd' results in the palindrome 'dcbabcd'."
                    },
                    {
                        "input": "dad",
                        "output": "0",
                        "explanation": "The string 'dad' is already a palindrome, so no characters need to be added."
                    },
                    {
                        "input": "xxaxxa",
                        "output": "1",
                        "explanation": "Adding 'a' at the beginning of 'xxaxxa' results in the palindrome 'axxaxxa'. Alternatively, removing the middle 'x' makes it a palindrome with one operation."
                    },
                    {
                        "input": "abb",
                        "output": "1",
                        "explanation": "Adding 'a' at the end of 'abb' results in the palindrome 'abba'."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can we solve this problem with the help of recursion?</p>",
            "<p>Can we optimize the recursive approach using memoization?</p>",
            "<p>Can we use Dynamic Programming to solve this problem?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}