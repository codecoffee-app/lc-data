{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8554,
            "title": "Minimum Length of Compressed String.",
            "titleSlug": "minimum-length-of-compressed-string_893033",
            "content": "<h4 id=\"run-length-encoding-is-the-string-compression-technique-that-compresses-the-given-string-by-replacing-the-number-of-consecutive-identical-characters-repeated-2-or-more-times-with-the-concatenation-of-the-character-and-its-count-of-characters\">Run-length Encoding is the string compression technique that compresses the given string by replacing the number of consecutive identical characters (repeated  2 or more times) with the concatenation of the character and its count of characters.</h4>\n\n<h4 id=\"for-example\">For Example :</h4>\n\n<pre><code>If the given string is  \u201cwwwmpp\u201d, then, Run-length encoded string will be \u201cw3mp2\u201d,\nHere, we replace \u2018www\u2019 with \u2018w3\u2019, as the frequency of \u2018w\u2019 is 3, \nAnd, we replace \u2018pp\u2019 with \u2018p2\u2019, as the frequency of \u2018p\u2019 is 2, \nThus, the given string is compressed to \u201cw3mp2\u201d, \nNote, for \u2018m\u2019 we are not adding 1 because it is mentioned in the definition of Run-Length Encoding, only 2 or more repeated character count will be concatenated.\n</code></pre>\n\n<h4 id=\"you-are-given-a-string-str-and-an-integer-k-your-task-is-to-find-the-minimum-possible-length-of-the-run-length-encoded-string-which-can-be-generated-by-deleting-at-most-k-characters-from-the-string-str\">You are given a string &#39;Str&#39; and an integer &#39;K&#39;. Your task is to find the minimum possible length of the run-length encoded string, which can be generated by deleting at most &#39;K&#39; characters from the string &#39;Str&#39;.</h4>\n\n<h4 id=\"for-example\">For Example :</h4>\n\n<pre><code>Consider the string &#39;Str&#39; = \u201ccccdeeef\u201d and &#39;K&#39; =2, \nCurrent Run-length encoded string is &quot;c3de3f&quot; having length 6. \nHere we can delete at most 2 characters, so If we delete any of the characters &#39;c&#39; or &#39;e&#39;, it would at most decrease the length of the compressed string to 5, \nFor example, if we delete 2 &#39;c&#39; then we will have the string &quot;cdeeef&quot; which can be compressed to \u201ccde3f\u201d. Therefore, the optimal way is to delete &#39;d&#39; and &#39;f&#39;, then the compressed string will be &quot;c3e3&quot; of length 4.\n</code></pre>\n\n<h4 id=\"input-format\">Input Format :</h4>\n\n<pre><code>The first line of input contains a single integer &#39;T&#39;, representing the number of test cases or queries to be run. \n\nThen the &#39;T&#39; test cases follow.\n\nThe first line of each test case contains a string &#39;STR&#39;.\n\nThe second line of each test case contains a single integer &#39;K&#39;, representing the maximum deletions allowed in the string.\n</code></pre>\n\n<h4 id=\"output-format\">Output Format :</h4>\n\n<pre><code>For each test case, print the length of the minimum compressed string after deleting at-most &#39;K&#39; characters in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints :</h4>\n\n<pre><code>1 &lt;= T &lt;= 50    \n1 &lt;= |STR| &lt;= 100 \n0 &lt;= K &lt;= |STR|   \n\nWhere |STR| denotes the length of string &#39;STR&#39;.\nAll the characters of the string will be in lowercase\n\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\ncccdeeef\n2\ngoofood\n1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>4\n4\n</code></pre>\n\n<h5 id=\"explanation-for-sample-output-1\">Explanation For Sample Output 1 :</h5>\n\n<pre><code>Test Case 1:\nHere &#39;Str&#39; = \u201ccccdeeef\u201d and K = 2.\nThe current Run-length encoded string is &quot;c3de3f&quot;  and its length is 6, and we can delete at most 2 characters. \nIf we delete any of the characters &#39;c&#39; or &#39;e&#39;, it would at most decrease the length of the compressed string to 5. For example, if we delete 2 &#39;c&#39; then we will have the string &quot;cdeeef&quot; which can be compressed to \u201ccde3f\u201d. \nThe optimal way is to delete &#39;d&#39; and &#39;f&#39;, then the compressed string will be &quot;c3e3&quot; of length 4.\n\nTest Case: 2\nHere \u2018Str\u2019 = \u201cgoofood\u201d, and  K=1.\nThe current Run-length encoded string is \u201cgo2do2f\u201d and its length is 7, and we can delete at most 1 character. \nIf we remove \u2018g\u2019 or \u2018f\u2019,  it would at most decrease the length of the compressed string to 6. \nFor example, if we delete &#39;g&#39; then we will have Str = &quot;oodoof&quot; which can be compressed to \u201co2do2f\u201d. If we delete any of the \u2018o\u2019, then we will have Str = \u201cgodoof\u201d, compressed to \u201cgodo2f\u201d, of length 6. \nThe most optimal way is to delete \u2018d\u2019, then the compressed string will be &quot;go4f&quot; of length 4.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\naabbaa\n3\nabcde\n0\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>2\n5\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Ninja",
            "likes": 17,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string 'str' and an integer 'k', determine the minimum possible length of the run-length encoded string after deleting at most 'k' characters from 'str'. Run-length encoding compresses a string by replacing consecutive identical characters (repeated 2 or more times) with the concatenation of the character and its count. For example, 'wwwmpp' becomes 'w3mp2'.",
                "constraints": [
                    "1 <= T <= 50",
                    "1 <= |STR| <= 100",
                    "0 <= K <= |STR|"
                ],
                "testcases": [
                    {
                        "input": "str = \"cccdeeef\", k = 2",
                        "output": "4",
                        "explanation": "The original compressed string is \"c3de3f\" (length 6). Deleting 'd' and 'f' results in \"c3e3\" (length 4), which is the minimum achievable length."
                    },
                    {
                        "input": "str = \"goofood\", k = 1",
                        "output": "4",
                        "explanation": "The original compressed string is \"go2do2f\" (length 7). Deleting 'd' results in \"go4f\" (length 4), which is the minimum achievable length."
                    },
                    {
                        "input": "str = \"aabbaa\", k = 3",
                        "output": "2",
                        "explanation": "The original compressed string is \"a2b2a2\" (length 6). Deleting the two 'b's and one 'a' results in \"a3\" (length 2), which is the minimum achievable length. Alternatively, deleting 'a','b','b' results in a3."
                    },
                    {
                        "input": "str = \"abcde\", k = 0",
                        "output": "5",
                        "explanation": "No deletions are allowed. The string \"abcde\" is already in its shortest run-length encoded form, which has length 5."
                    },
                    {
                        "input": "str = \"aaaaaaaaaa\", k = 0",
                        "output": "2",
                        "explanation": "No deletions are allowed. The string \"aaaaaaaaaa\" is compressed to \"a10\" and has length 2."
                    },
                    {
                        "input": "str = \"aaaaaaaaaa\", k = 5",
                        "output": "2",
                        "explanation": "Deleting 5 'a's results in \"aaaaa\" , which is compressed to \"a5\" and has length 2. Since the original string is all the same character, deleting characters will not result in the encoded string having a longer length. So, encoded string will have minimum length of 2."
                    },
                    {
                        "input": "str = \"aabbccddeeff\", k = 10",
                        "output": "0",
                        "explanation": "Since we can delete all the characters, an empty string results. the length of the encoded empty string is 0."
                    },
                    {
                        "input": "str = \"aabbccddeeff\", k = 0",
                        "output": "12",
                        "explanation": "No deletions are allowed. \"aabbccddeeff\" is encoded to \"a2b2c2d2e2f2\" and has length 12."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Find all possible strings that can be obtained by deleting at most \u2018K\u2019 characters.</p>",
            "<p>Try to find the recursive relation for this problem.</p>",
            "<p>Memorize the result of the subproblem to avoid repetition.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}