{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 11510,
            "title": "Minimum Number of Increments on Subarrays to Form a Target Array",
            "titleSlug": "minimum-number-of-increments-on-subarrays-to-form-a-target-array_1381857",
            "content": "<h4 id=\"you-are-given-two-arrays-initial-and-final-all-the-elements-in-the-array-initial-are-zero-initially-and-all-the-elements-of-the-array-final-are-positive-integers\">You are given two arrays \u201cinitial\u201d and \u201cfinal\u201d. All the elements in the array \u201cinitial\u201d are zero initially.  And all the elements of the array \u201cfinal\u201d are positive integers.</h4>\n\n<h4 id=\"you-have-to-find-the-minimum-number-of-operations-to-convert-the-initial-array-into-the-final-array-using-the-following-operation\">You have to find the minimum number of operations to convert the \u201cinitial\u201d array into the \u201cfinal\u201d array using the following operation:</h4>\n\n<h4 id=\"1-in-one-operation-you-can-select-any-contiguous-subsequence-of-the-initial-array-and-increment-each-value-by-1\">1. In one operation, you can select any contiguous subsequence of the \u201cinitial\u201d array and increment each value by 1.</h4>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>A contiguous subsequence of a list S is a subsequence made up of consecutive elements of S. If S is {5, 15, -30, 10, -5, 40, 10} then 15, -30, 10 is a contiguous subsequence.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of input contains an integer &#39;T&#39; representing the number of test cases.\n\nThe first line of each test case contains one integer \u2018N\u2019 denoting the number of elements in the array.\n\nThe second line of each test case contains N space-separated integers denoting the elements of the array \u201cfinal\u201d.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print the minimum number of operations to convert the array \u201cinitial\u201d to the array \u201cfinal\u201d using the given operation.\nPrint the output of each test case on a new line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don\u2019t need to print anything; It has already been taken care of.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= N &lt;= 10^5\n1 &lt;= final[i] &lt;= 10^9\n\nWhere \u2018T\u2019 represents the number of test cases, \u2018N\u2019 represents the number of elements in the array \u201cfinal\u201d and final[i] represents the i-th element.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n5\n1 1 1 1 1\n5\n1 2 3 2 1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>1\n3\n</code></pre>\n\n<h5 id=\"explanation-of-sample-output-1\">Explanation of Sample output 1 :</h5>\n\n<pre><code>For the first test case, \nThe following operations leads to optimal answer\n[0, 0, 0, 0, 0] -&gt;       [1, 1, 1, 1, 1]\nTherefore the total number of operations are 1.\n\nFor the second test case, \nThe following operations leads to optimal answer\n[0, 0, 0, 0, 0] -&gt; [1, 1, 1, 1, 1] -&gt; [1, 2, 2, 2, 1] -&gt; [1, 2, 3, 2, 1].\nTherefore the total number of operations are 3.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n2\n1 2\n5\n5 1 3 2 4\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample output 2 :</h5>\n\n<pre><code>2\n9\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 1,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array 'final' of positive integers, determine the minimum number of operations required to transform an initial array of the same size filled with zeros into the 'final' array. In a single operation, you can select any contiguous subsequence of the initial array and increment each element within that subsequence by 1.",
                "constraints": [
                    "1 <= T <= 5 (Number of test cases)",
                    "1 <= N <= 10^5 (Size of the final array)",
                    "1 <= final[i] <= 10^9 (Value of each element in the final array)"
                ],
                "testcases": [
                    {
                        "input": "n = 5, final = [1, 1, 1, 1, 1]",
                        "output": "1",
                        "explanation": "The initial array [0, 0, 0, 0, 0] can be transformed into [1, 1, 1, 1, 1] in a single operation by incrementing the entire array."
                    },
                    {
                        "input": "n = 5, final = [1, 2, 3, 2, 1]",
                        "output": "3",
                        "explanation": "The optimal sequence of operations is: [0, 0, 0, 0, 0] -> [1, 1, 1, 1, 1] -> [1, 2, 2, 2, 1] -> [1, 2, 3, 2, 1]. This requires 3 operations."
                    },
                    {
                        "input": "n = 2, final = [1, 2]",
                        "output": "2",
                        "explanation": "The initial array [0, 0] can be transformed into [1, 2] by incrementing the subsequence [0] by 1 to get [1, 0], and then incrementing the subsequence [1] by 2 to get [1,2]. OR Increment subsequence [0,1] by 1 to get [1,1] then increment subsequence [1] by 1 to get [1,2]"
                    },
                    {
                        "input": "n = 5, final = [5, 1, 3, 2, 4]",
                        "output": "9",
                        "explanation": "This case requires a more complex sequence of operations, but the minimum number of operations needed is 9."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Find &nbsp;the peak elements and think of increasing about peak elements.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Trees",
                "slug": "trees"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}