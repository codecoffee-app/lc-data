{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 16555,
            "title": "Minimum Number Of Moves To Get All Keys",
            "titleSlug": "minimum-number-of-moves-to-get-all-keys_3208458",
            "content": "<h4 id=\"some-players-are-put-inside-an-n-x-m-matrix-grid-one-by-one-where\">Some players are put inside an \u2018N\u2019 x \u2018M\u2019 matrix \u2018GRID\u2019 one by one where:</h4>\n\n<ul style= \"color: rgb(255, 255, 255); \n    mix-blend-mode: difference; \">\n<li> \u2018.\u2019 represents an empty cell.</li>\n<li> \u2018#\u2019 represents a wall.</li>\n<li> \u2018@\u2019 represents the starting point.</li>\n<li> Lowercase letters represent keys.</li>\n<li> Uppercase letters represent locks.</li>\n</ul>\n\n<h4 id=\"the-player-to-collect-all-the-keys-in-minimum-moves-will-win-the-game-the-ninja-is-one-of-the-players-and-needs-your-help-to-win-the-game-he-wants-you-to-find-the-minimum-number-of-moves-to-get-all-the-keys-the-rules-of-the-game-are\">The player to collect all the keys in minimum moves will win the game. The ninja is one of the players and needs your help to win the game. He wants you to find the minimum number of moves to get all the keys. The rules of the game are:</h4>\n\n<ul style= \"color: rgb(255, 255, 255); \n    mix-blend-mode: difference; \">\n<li> You have to start from the starting point and move in one of the four cardinal directions.</li>\n<li>You cannot walk outside the grid or walk into a wall.\nYou can pick a key whenever you walk over it.</li>\n<li> You cannot walk over a lock unless you have the corresponding key. For example, the key for the lock \u2018A\u2019 is \u2018a\u2019.</li>\n<li> There is exactly one key for each lock.</li>\n</ul>\n\n<h4 id=\"for-example\">For Example:</h4>\n\n<pre><code>You are given \u2018GRID\u2019= [[\u201c@.aA\u201d],[\u201c.B#.\u201d],[\u201c...b\u201d]]. Then the answer will be 5.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/getkeys1-14018.png\" alt=\"\"></p>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of the input contains a single integer &#39;T&#39;, representing the number of test cases.\n\nThe first line of each test case contains an integer \u2018N\u2019, representing the number of rows in \u2018GRID\u2019.\n\nThe next \u2018N\u2019 lines contains a String, representing a row of the \u2018GRID\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print the minimum number of moves to get all the keys. Print -1 if it is impossible to get all keys.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 100\n1 &lt;= M &lt;= 100\nGRID[i][j] is either an English letter, \u2018.\u2019, \u2018#\u2019, or \u2018@\u2019.\nEach key is unique.\nEach key has a matching lock.\nAlphabets for the keys and locks are chosen in the same order as English alphabets.\nThe number of keys is in the range [1, 6].\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n3\n@.aA\n.B#.\n...b\n1\n@BaAb\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>5\n-1\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1:</h5>\n\n<pre><code>For the first test case, then the answer will be 5.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/getkeys1-14018.png\" alt=\"\"></p>\n\n<pre><code>For the second test case, the answer will be -1.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/getkeys2-14019.png\" alt=\"\"></p>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n2\n@.ba\n.AB.\n1\n@.aAbB\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>3\n4\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 7,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an N x M grid represented as a list of strings, find the minimum number of moves required to collect all keys starting from the initial position. The grid contains empty cells ('.'), walls ('#'), a starting point ('@'), keys (lowercase letters), and locks (uppercase letters). You can move in four cardinal directions (up, down, left, right). You cannot walk through walls or outside the grid. Collecting a key allows you to open the corresponding lock. Determine the minimum moves to collect all keys or return -1 if it's impossible.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 100",
                    "1 <= M <= 100",
                    "GRID[i][j] is either an English letter, \u2018.\u2019, \u2018#\u2019, or \u2018@\u2019.",
                    "Each key is unique.",
                    "Each key has a matching lock.",
                    "Alphabets for the keys and locks are chosen in the same order as English alphabets.",
                    "The number of keys is in the range [1, 6].",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "3\n@.aA\n.B#.\n...b",
                        "output": "5",
                        "explanation": "The ninja starts at '@'. He goes right to 'a' (1 move). Then he goes right and up to 'A' (2 moves). Then he goes down and right to 'b' (2 moves). Total moves: 1 + 2 + 2 = 5."
                    },
                    {
                        "input": "1\n@BaAb",
                        "output": "-1",
                        "explanation": "The ninja starts at '@'. He needs to collect key 'a' before opening lock 'A' and 'b' before opening lock 'B'. However, 'A' is blocking access to key 'a', and 'B' is blocking access to key 'b'. Thus, it's impossible to collect all keys."
                    },
                    {
                        "input": "2\n@.ba\n.AB.",
                        "output": "3",
                        "explanation": "The ninja starts at '@'. He can collect key 'b', then key 'a' which are adjacent to him without passing any locks.  Moves required are 3 (right, right, right)."
                    },
                    {
                        "input": "1\n@.aAbB",
                        "output": "4",
                        "explanation": "The ninja starts at '@', goes to 'a', then 'A', then 'b', then 'B'.  The total number of moves is 4."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to find the shortest path to get all keys.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}