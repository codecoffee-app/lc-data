{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12460,
            "title": "Minimum Number of Operations to reach X. ",
            "titleSlug": "minimum-number-of-operations-to-reach-x_1461488",
            "content": "<h4 id=\"you-have-been-given-an-array-list-arr-of-integers-consisting-of-n-integers-you-are-also-given-an-integer-x-in-one-operation-you-can-either-remove-the-leftmost-or-the-rightmost-element-and-add-that-to-the-sum-of-removed-elements-so-far-your-task-is-to-return-the-minimum-number-of-operations-such-that-the-sum-of-removed-elements-becomes-exactly-x-if-it-is-not-possible-return-1\">You have been given an array/list \u2018ARR\u2019 of integers consisting of \u2018N\u2019 integers. You are also given an integer \u2018X\u2019. In one operation, you can either remove the leftmost or the rightmost element and add that to the sum of removed elements so far. Your task is to return the minimum number of operations such that the sum of removed elements becomes exactly \u2018X\u2019. If it is not possible return -1.</h4>\n\n<h5 id=\"for-example\">For Example :</h5>\n\n<pre><code>Let\u2019s say you have an array/list [1, 3, 5, 3] and \u2018X\u2019 is 7. \nWe can first remove the rightmost element i.e. 3. The array becomes [1,3,5]. In the next step, we can remove the leftmost element i.e 1. The array becomes [3,5] and the sum of removed elements so far becomes 4. In the next step, we can remove the leftmost element i.e 3. The array becomes [5] and the sum of removed elements so far is 7. We have reached our target X i.e 7. Therefore the minimum number of operations to reach \u2018X\u2019 is 3.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 representing the number of test cases.\n\nThe first line of each test case contains two single space-separated integers \u2018N\u2019 and \u2018X\u2019 representing the size of the array/list \u2018ARR\u2019 and the target you need to reach.\n\nThe second line and the last line of input contain \u2018N\u2019 single space-separated integers representing the array/list elements.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case print the minimum number of operations such that the sum of removed elements becomes exactly \u2018X\u2019.If it is not possible print -1.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 1000\n1 &lt;= X &lt;= 10^9\n1 &lt;= \u2018ARR[i]\u2019 &lt;= 10^6\n\nWhere \u2018ARR[i]\u2019 is an element of array/list ARR.  \n\nTime Limit: 1sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n4 7\n1 2 3 4  \n4 4 \n1 2 3 4\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>2\n1\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1 :</h5>\n\n<pre><code>Test Case 1 :\n\nWe can first remove the rightmost element i.e. 4. The array becomes [1,2,3]. In the next step, we can remove the rightmost element i.e 3. The array becomes [1,2]. The sum of removed elements is 7. We have reached our target X i.e 7. Therefore the minimum number of operations is 2.\n\nTherefore the answer is 2.\n\nTest Case 2 :\n\nWe can first remove the rightmost element i.e. 4. The array becomes [1,2,3]. The sum of removed elements is 4. We have reached our target X i.e 4. Therefore the minimum number of operations is 1.\n\n\nTherefore the answer is 1.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n4 11\n1 2 3 4\n8 4\n1 2 3 4 4 3 2 1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>-1\n3\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -8,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of integers `ARR` of size `N` and an integer `X`, determine the minimum number of operations required to achieve a sum of exactly `X` by removing elements from either the left or right end of the array. In each operation, an element is removed from either end, and its value is added to the running sum. Return -1 if it's not possible to achieve the target sum `X`.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 1000",
                    "1 <= X <= 10^9",
                    "1 <= ARR[i] <= 10^6"
                ],
                "testcases": [
                    {
                        "input": "4 7\n1 2 3 4",
                        "output": "2",
                        "explanation": "Removing the rightmost element (4) gives a sum of 4. Removing the next rightmost element (3) gives a total sum of 7. Therefore, the minimum number of operations is 2."
                    },
                    {
                        "input": "4 4\n1 2 3 4",
                        "output": "1",
                        "explanation": "Removing the rightmost element (4) gives a sum of 4. Therefore, the minimum number of operations is 1."
                    },
                    {
                        "input": "4 11\n1 2 3 4",
                        "output": "-1",
                        "explanation": "It's not possible to obtain a sum of 11 by removing elements from the given array."
                    },
                    {
                        "input": "8 4\n1 2 3 4 4 3 2 1",
                        "output": "3",
                        "explanation": "One possible solution is to remove the first three elements from the left: 1 + 2 + 1 = 4, which requires three operations."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to think of all possible ways.&nbsp;</p>",
            "<p>Two pointers.&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}