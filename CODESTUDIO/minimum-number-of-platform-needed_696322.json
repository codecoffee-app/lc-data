{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 7532,
            "title": "Minimum number of Platform needed",
            "titleSlug": "minimum-number-of-platform-needed_696322",
            "content": "<h4 id=\"you-are-given-the-arrival-and-departure-times-of-n-trains-at-a-railway-station-in-a-day-you-need-to-find-the-minimum-of-platforms-required-for-the-railway-station-such-that-no-train-waits-i-e-no-train-should-wait-for-the-platform-to-be-clear-or-free\">You are given the arrival and departure times of N trains at a railway station in a day. You need to find the minimum of platforms required for the railway station such that no train waits i.e No train should wait for the platform to be clear or free.</h4>\n\n<h4 id=\"input-format\">Input Format :</h4>\n\n<pre><code>The first line of input contains a single integer T, representing the number of test cases or queries to be run. \nThen the T test cases follow.\n\nThe first line of each test case contains a positive integer N which represents the number of trains that arrive at the railway station in a day.\n\nThe Second line of each test case contains N integers denoting the arrival time of all the trains.\n\nThe third line of each test case contains N integers denoting the departure time of all the trains.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, return the minimum number of platforms required at the railway station such that no train waits.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>Representation of arrival and departure time will be in HHMM format.\n\nDo not print anything. It has been already taken care of.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;=100\n1 &lt;= N &lt;=1000\n0 &lt;= arrival[i] &lt;= departure[i] &lt;= 2359\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>1\n6\n900 940 950 1100 1500 1800\n910 1200 1120 1130 1900 2000\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>3\n</code></pre>\n\n<h5 id=\"explanation-of-input-1\">Explanation of Input 1 :</h5>\n\n<pre><code>During the interval [900 - 910], there will be one train.\nDuring the interval [910 - 940], there will be no train.\nDuring the interval [940 - 950], there will be one train.\nDuring the interval [950 - 1100], there will be two trains, as the third train will arrive before the second train leaves.\nDuring the interval [1100 - 1120], there will be three trains.\nDuring the interval [1120 - 1130], there will be two trains, as the third train leaves the station.\nDuring the interval [1130 - 1200], there will be one train.\nDuring the interval [1200 - 1500], there will be no train.\nDuring the interval [1500 - 1800], there will be one train.\nDuring the interval [1800 - 1900], there will be two trains.\nDuring the interval [1900 - 2000], there will be one train.\nAfter the interval [2000], there will be no train.\n\nSo the number of platforms needed is 3.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>1\n3\n900 1000 1200\n1000 1100 1240\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>2\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 2,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given the arrival and departure times of N trains at a railway station, determine the minimum number of platforms required to accommodate all trains without any waiting.  The arrival and departure times are represented in HHMM format.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= N <= 1000",
                    "0 <= arrival[i] <= departure[i] <= 2359"
                ],
                "testcases": [
                    {
                        "input": "n = 6, arrival = [900, 940, 950, 1100, 1500, 1800], departure = [910, 1200, 1120, 1130, 1900, 2000]",
                        "output": "3",
                        "explanation": "During the interval [900 - 910], there will be one train. During the interval [910 - 940], there will be no train. During the interval [940 - 950], there will be one train. During the interval [950 - 1100], there will be two trains, as the third train will arrive before the second train leaves. During the interval [1100 - 1120], there will be three trains. During the interval [1120 - 1130], there will be two trains, as the third train leaves the station. During the interval [1130 - 1200], there will be one train. During the interval [1200 - 1500], there will be no train. During the interval [1500 - 1800], there will be one train. During the interval [1800 - 1900], there will be two trains. During the interval [1900 - 2000], there will be one train. After the interval [2000], there will be no train. So the number of platforms needed is 3."
                    },
                    {
                        "input": "n = 3, arrival = [900, 1000, 1200], departure = [1000, 1100, 1240]",
                        "output": "2",
                        "explanation": "At time 900, one train arrives. At time 1000, another train arrives and the first train departs. At time 1100, the second train departs. At time 1200, the third train arrives and at time 1240 it departs. The maximum number of concurrent trains is 2, so 2 platforms are required."
                    },
                    {
                        "input": "n = 4, arrival = [100, 200, 300, 400], departure = [300, 400, 500, 600]",
                        "output": "1",
                        "explanation": "All trains can use a single platform because each train departs before the next train arrives. They use the platform sequentially."
                    },
                    {
                        "input": "n = 4, arrival = [900, 940, 950, 1100], departure = [910, 1200, 1120, 1130]",
                        "output": "4",
                        "explanation": "In this case every arrival is before the previous departure. so platform count will be 4"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}