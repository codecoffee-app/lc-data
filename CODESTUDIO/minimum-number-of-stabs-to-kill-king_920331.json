{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8823,
            "title": "Minimum number of stabs to kill king.",
            "titleSlug": "minimum-number-of-stabs-to-kill-king_920331",
            "content": "<h4 id=\"you-are-given-the-health-of-the-king-as-an-integer-n-you-need-to-find-the-minimum-number-of-stabs-to-kill-the-king-the-king-dies-if-the-health-becomes-0\">You are given the health of the king as an integer &#39;N&#39;. You need to find the minimum number of stabs to kill the king. The king dies if the health becomes 0.</h4>\n\n<h4 id=\"at-any-point-to-decrease-the-health-of-the-king-you-can-apply-either-of-two-operations-types-of-stab\">At any point, to decrease the health of the king you can apply either of two operations (types of stab):</h4>\n\n<pre><code>1. The first kind of stab decreases the king\u2019s health &#39;H&#39; by 1 i.e &#39;H&#39; = &#39;H&#39;-1.\n2. The second kind of stab decreases the king\u2019s health to &#39;H1&#39;, where &#39;H&#39;= &#39;H1&#39;*&#39;H2&#39; and &#39;H1&#39; &gt;= &#39;H2&#39; &gt; 1 i.e if &#39;H&#39; = &#39;H1&#39;*&#39;H2&#39;, then &#39;H&#39; can decrease to &#39;H1&#39; where &#39;H1&#39; is the larger factor.\n</code></pre>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>1. The king\u2019s initial health is an integer and always positive.\n2. After each step, the king\u2019s health is decreased. It can not remain the same after a stab of either type.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of the input contains an integer &#39;T&#39;, denoting the number of test cases.\n\nThe first line and the only line of each test case contains an integer &#39;N&#39;, denoting the initial health of the king.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>The only line of output of each test case should contain a value denoting the minimum number of stabs required to kill the king.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don&#39;t need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10^2\n1 &lt;= N &lt;= 10^3\n\nTime Limit : 1sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1\n8\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>4\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1 :</h5>\n\n<pre><code>We know that, 8 = 4*2. So, we can reduce kings health from 8 to 4 after one stab of type 2. \nNow since, 4 = 2*2, so after the second stab of type 2, king\u2019s health reduces from 4 to 2. \nThe current health of king = 2. After the third stab of type 1, the king\u2019s health reduces from 2 to 1.\nFinally, after the fourth stab of type 1, the king\u2019s health reduces from 1 to 0.\nSo, in total it takes 4 steps at minimum to kill the king.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>1\n3\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>3\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 2,
            "dislikes": "NA",
            "rephrased": {
                "body": "A king's health is represented by a positive integer 'N'. You must determine the fewest number of stabs required to reduce the king's health to 0, effectively killing him. You can use two types of stabs:\n\n1.  A standard stab reduces the king's health by 1 (H = H - 1).\n2.  A special stab reduces the king's health 'H' to 'H1', where 'H' can be expressed as the product of two integers, 'H1' and 'H2' ('H' = 'H1' * 'H2'), with the condition that 'H1' >= 'H2' > 1.  The health reduces to the larger factor 'H1'.\n\nGiven the initial health 'N', find the minimum number of stabs needed to defeat the king.",
                "constraints": [
                    "1 <= T <= 10^2",
                    "1 <= N <= 10^3",
                    "Time Limit : 1sec"
                ],
                "testcases": [
                    {
                        "input": "n = 8",
                        "output": "4",
                        "explanation": "The optimal strategy is to reduce 8 to 4 (8 = 4 * 2), then 4 to 2 (4 = 2 * 2), and finally reduce 2 to 1 and 1 to 0 using standard stabs. This requires 4 stabs."
                    },
                    {
                        "input": "n = 3",
                        "output": "3",
                        "explanation": "Since 3 is a prime number, we can only reduce the health by 1 at each step. Thus, 3 -> 2 -> 1 -> 0 requires 3 stabs."
                    },
                    {
                        "input": "n = 1",
                        "output": "1",
                        "explanation": "Reduce health from 1 to 0 with one stab of type 1."
                    },
                    {
                        "input": "n = 10",
                        "output": "5",
                        "explanation": "10 -> 5 (10 = 5 * 2) -> 4 -> 3 -> 2 -> 1 -> 0; Optimal solution is 10->5. Next we need 5 single stabs to reach zero"
                    },
                    {
                        "input": "n = 12",
                        "output": "5",
                        "explanation": "Optimal solution is: 12->6 (12=6*2)->3 (6=3*2) -> 2->1->0"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to generate all possible ways.</p>",
            "<p>Try to think of storing answers.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Number Theory",
                "slug": "number-theory"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}