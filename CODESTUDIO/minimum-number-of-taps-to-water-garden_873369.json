{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8412,
            "title": "Minimum Number Of Taps To Water Garden",
            "titleSlug": "minimum-number-of-taps-to-water-garden_873369",
            "content": "<h4 id=\"the-gardener-wants-to-water-the-garden-by-opening-the-minimum-number-of-taps-the-garden-is-one-dimensional-along-the-x-axis-of-length-n-i-e-the-garden-starts-from-point-0-and-ends-at-point-n-there-are-n-1-tap-located-at-points-0-1-2-n-in-the-garden\">The gardener wants to water the garden by opening the minimum number of taps. The garden is one-dimensional along the x-axis of length N i.e. the garden starts from point 0 and ends at point N. There are N + 1 tap located at points [0, 1, 2, \u2026, N] in the garden.</h4>\n\n<h4 id=\"you-are-given-an-integer-n-and-an-array-named-ranges-of-size-n-1-0-indexed-the-ith-tap-if-opened-can-water-the-gardener-from-point-i-ranges-i-to-i-ranges-i-including-both-the-task-is-to-find-the-minimum-number-of-taps-that-should-be-open-to-water-the-whole-garden-return-1-if-the-garden-can-not-be-watered\">You are given an integer N, and an array named \u201cranges\u201d of size N + 1(0-indexed). The ith tap, if opened, can water the gardener from point (i - ranges[i]) to (i + ranges[i]) including both. The task is to find the minimum number of taps that should be open to water the whole garden, return -1 if the garden can not be watered.</h4>\n\n<h5 id=\"example\">Example :</h5>\n\n<p><img src=\"https://files.codingninjas.in/image1-5819.png\" alt=\"Watering The Garden\"></p>\n\n<h5 id=\"follow-up\">Follow Up:</h5>\n\n<pre><code>Can you solve the problem in O(N) time?\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains a single integer T representing the number of test cases. \n\nThe first line of each test case will contain the integer N.\n\nThe second and the last line of each test case will contain N single space-separated integers representing the elements of the array \u201cranges\u201d.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case, print a single integer representing the value of the minimum number of taps needed to open by the gardener to fill the whole garden.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 10^4\n0 &lt;= ranges[i] &lt;= 100\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n3\n0 0 0 0\n7\n1 2 1 0 2 1 0 1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>-1\n3\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1 :</h5>\n\n<pre><code>In test case 1, the ranges of taps are as follows : [ [ 0, 0 ], [ 1, 1 ], [ 2, 2 ] ]. So in the worst case, if we open all the taps, then it\u2019s impossible to fill the gaps i.e (0-1), (1,2), (2,3). So it\u2019s impossible to fill the garden.\n\nIn test case 2, the ranges of taps are as follows : [ [ -1, 1 ],[ -1, 3 ],[ 1, 3 ],[ 3, 3 ],[ 2, 6 ],[ 4, 6 ],[ 6, 6 ],[ 6, 8 ] ]. To fill the garden i.e [ 0, 7 ] , the gardener needs to open a minimum of three taps i.e. tap 2: [ -1, 3 ] , tap 5: [ 2, 6 ], tap 8: [ 6, 8 ] to fill the whole garden.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n8\n4 0 0 0 0 0 0 0 4\n8\n4 0 0 0 4 0 0 0 4\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>2\n1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 35,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a one-dimensional garden of length `n` along the x-axis, represented by the interval [0, n], determine the minimum number of taps required to water the entire garden. You are provided with an array `ranges` of size `n + 1`, where `ranges[i]` indicates the watering range of the tap located at position `i`. Specifically, the `i`-th tap can water the garden from `i - ranges[i]` to `i + ranges[i]`. If it is impossible to water the entire garden, return -1.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10^4",
                    "0 <= ranges[i] <= 100"
                ],
                "testcases": [
                    {
                        "input": "n = 3, ranges = [0, 0, 0, 0]",
                        "output": "-1",
                        "explanation": "The ranges of taps are [ [ 0, 0 ], [ 1, 1 ], [ 2, 2 ], [3,3] ]. It's impossible to fill the gaps (0-1), (1,2), (2,3), so it's impossible to fill the garden."
                    },
                    {
                        "input": "n = 7, ranges = [1, 2, 1, 0, 2, 1, 0, 1]",
                        "output": "3",
                        "explanation": "The ranges of taps are [ [-1, 1], [-1, 3], [1, 3], [3, 3], [2, 6], [4, 6], [6, 6], [6, 8] ]. To fill the garden [0, 7], the gardener needs to open a minimum of three taps: tap 1: [-1, 1], tap 4: [2, 6], tap 7: [6, 8] or tap 2: [ -1, 3 ] , tap 5: [ 2, 6 ], tap 8: [ 6, 8 ]"
                    },
                    {
                        "input": "n = 8, ranges = [4, 0, 0, 0, 0, 0, 0, 0, 4]",
                        "output": "2",
                        "explanation": "Opening tap 0 covers [-4,4] and opening tap 8 covers [4,12], which is sufficient to cover garden from [0,8]"
                    },
                    {
                        "input": "n = 8, ranges = [4, 0, 0, 0, 4, 0, 0, 0, 4]",
                        "output": "1",
                        "explanation": "Opening tap 4 covers [0,8], which is sufficient to cover the garden."
                    },
                    {
                        "input": "n = 5, ranges = [1, 0, 1, 0, 1, 0]",
                        "output": "3",
                        "explanation": "Opening taps 0,2,4. range of tap0 = [-1,1], tap2=[1,3], tap4=[3,5]"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Start with the first interval, and out of all intersecting intervals to it choose the farthest right endpoint, and so on using Greedy Approach.</p>",
            "<p>Try to think in terms of intervals of the flow of different taps</p>"
        ],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}