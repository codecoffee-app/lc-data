{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 16382,
            "title": "Minimum removals",
            "titleSlug": "minimum-removals_3128714",
            "content": "<h4 id=\"on-your-20th-birthday-one-of-your-friends-gifted-you-an-array-a-of-n-positive-integers-but-you-dont-like-an-array-having-a-large-difference-among-numbers-to-reduce-the-difference-you-are-going-to-perform-the-following-operations-on-the-array\">On your 20th birthday, one of your friends gifted you an array &#39;A&#39; of &#39;N&#39; positive integers. But you don&#39;t like an array having a large difference among numbers. To reduce the difference, you are going to perform the following operations on the array.</h4>\n\n<pre><code>Remove an element from the start of the array.\nRemove an element from the end of the array.\n</code></pre>\n\n<h4 id=\"in-one-operation-you-can-remove-only-one-element-either-from-the-start-or-from-the-end-your-task-is-to-find-the-minimum-number-of-operations-after-which-array-a-holds-the-following-property\">In one operation, you can remove only one element, either from the start or from the end. Your task is to find the minimum number of operations, after which array &#39;A&#39; holds the following property -</h4>\n\n<pre><code>2 * min &gt; max\nWhere &#39;min&#39; is the minimum element of the array, and &#39;max&#39; is the maximum element of the array, calculated each time for the updated array.\n</code></pre>\n\n<h4 id=\"you-can-perform-any-operations-of-your-choice-but-minimize-the-number-of-operations-and-return-it\">You can perform any operations of your choice, but minimize the number of operations and return it.</h4>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains an integer &#39;T&#39;, denoting the number of tests.\n For each Test :\n     The first line contains an integer &#39;N&#39;, denoting the length of the array &#39;A&#39;.\n     The second line contains an array &#39;A&#39; of length &#39;N&#39;.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test, print an integer, denoting the minimum number of operations required such that the given condition holds true.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You are not required to print the expected output. It has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints -</h5>\n\n<pre><code>1 &lt;= &#39;T&#39; &lt;= 5\n1 &lt;= &#39;N&#39; &lt;= 10^5\n1 &lt;= A[i] &lt; 10^9  i \u2208  (1,N)\n\n\nTime Limit: 1 sec \n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n4\n20 11 4 5\n4\n5 6 4 7\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>2\n0\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1 :</h5>\n\n<pre><code>For case 1:\n    In two operations, elements [20, 11] are removed. The updated array is [4, 5] for which (2*min &gt; max) holds true, where &#39;min&#39; = 4 and &#39;max&#39; = 5.\n    One more way to perform operations is removing elements [4, 5]. But the number of operations cannot be less than 2. Hence, the answer is 2.\n\nFor Case 2:\n    The given array already holds the required condition. Hence no need to perform any operations, and answer becomes 0.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n5\n4 3 2 1 3\n3\n2 2 2\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>3\n0\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 10,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array 'A' of 'N' positive integers, find the minimum number of elements to remove from either the start or end of the array such that the condition `2 * min > max` holds true. In this condition, 'min' is the minimum element and 'max' is the maximum element of the remaining array after removals.",
                "constraints": [
                    "1 <= 'T' <= 5",
                    "1 <= 'N' <= 10^5",
                    "1 <= A[i] <= 10^9  i \u2208  (1,N)"
                ],
                "testcases": [
                    {
                        "input": "n = 4, nums = [20, 11, 4, 5]",
                        "output": "2",
                        "explanation": "Removing elements [20, 11] results in the array [4, 5], where (2 * 4 > 5) is true.  Removing [4, 5] also results in a valid solution, but any other choice needs more than 2 removals. Therefore the minimum operations are 2."
                    },
                    {
                        "input": "n = 4, nums = [5, 6, 4, 7]",
                        "output": "0",
                        "explanation": "The array [5, 6, 4, 7] already satisfies the condition (2 * 4 > 7). Therefore, no removals are needed."
                    },
                    {
                        "input": "n = 5, nums = [4, 3, 2, 1, 3]",
                        "output": "3",
                        "explanation": "Removing [4,3,2] results in the array [1, 3] so (2*1 > 3) is false. Removing [4,3,3] results in the array [2, 1] so (2*1 > 2) is false. Removing [4,1,3] results in the array [3,2] so (2*2 > 3) is true. Removing [3, 2, 1] results in array [4,3] and (2*3 > 4) is true. Removing [4,3,2] results in array [1,3] and (2*1 > 3) is false. After trying a few times you can see that [4,3,2] will result in (2*1>3) false and need 3. Removing [1,3,4] will result in (2*2>3) true and need 3, other ways also need 3 removals."
                    },
                    {
                        "input": "n = 3, nums = [2, 2, 2]",
                        "output": "0",
                        "explanation": "The array [2, 2, 2] already satisfies the condition (2 * 2 > 2). No removals are needed."
                    },
                    {
                        "input": "n = 5, nums = [1, 2, 3, 4, 5]",
                        "output": "3",
                        "explanation": "Removing [1, 2, 3] results in the array [4, 5], which is (2*4 > 5). Need 3 removals. Other combinations also result in needing 3 removals. "
                    },
                    {
                        "input": "n = 1, nums = [1]",
                        "output": "0",
                        "explanation": "The array [1] already satisfies the condition (2*1 > 1) is true."
                    },
                    {
                        "input": "n = 2, nums = [10, 1]",
                        "output": "1",
                        "explanation": "Removing [10] results in the array [1] so (2*1>1) is true, we need only 1 removal"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you check for all possibilities of removals?</p>",
            "<p>Can you see the same subproblems multiple times in Naive/Brute force implementation?</p>",
            "<p>Rather than removals, be focused on the remaining array.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}