{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 15626,
            "title": "Minimum Robot Moves",
            "titleSlug": "minimum-robot-moves_2663244",
            "content": "<h4 id=\"a-robot-can-move-along-the-x-axis-it-starts-from-the-origin-and-wants-to-reach-the-x-coordinate-find-the-number-of-moves-it-requires-to-complete-the-task\">A robot can move along the x-axis, it starts from the origin and wants to reach the \u2018X\u2019 coordinate. Find the number of moves it requires to complete the task.</h4>\n\n<h4 id=\"in-each-move-it-has-to-exactly-move-some-units-to-the-left-right-of-its-current-position-the-number-of-units-it-moves-in-a-move-is-equal-to-the-move-number-that-is-it-moves-exactly-one-unit-in-move-1-exactly-two-units-in-move-2-and-exactly-ten-units-in-move-10-find-the-minimum-number-of-moves-required-to-reach-the-x-coordinate-print-1-if-it-is-not-possible-to-reach-the-location\">In each move, it has to exactly move some units to the left/right of its current position. The number of units it moves in a move is equal to the move number. That is: it moves exactly one unit in move - 1, exactly two units in move - 2 and exactly ten units in move - 10. Find the minimum number of moves required to reach the \u2018X\u2019 coordinate. Print \u2018-1\u2019 if it is not possible to reach the location.</h4>\n\n<h5 id=\"for-example\">For Example :</h5>\n\n<pre><code>If X = 6\n\nIf all three moves are taken to the right then the robot will end up at 1 + 2 + 3 = 6, so a minimum of three moves are needed.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 denoting the number of test cases, then each test case follows:\n\nThe first line of each test case contains a single integer \u2018X\u2019 denoting the final coordinate of the robot.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print the number of moves required to reach the final position.\n\nOutput for each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You are not required to print anything; it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 \u2264 T \u2264 10      \n1 \u2264 X \u2264 10^9\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n6\n3\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>3\n2\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1 :</h5>\n\n<pre><code>For test case 1 :\nWe will print 3 because:\nIf all three moves are taken to the right then the robot will end up at the position 1 + 2 + 3 = 6.\n\nFor test case 2 : \nWe will print 2 because:\n If the first two moves are taken to the right then the robot will end up at the position 1 + 2 = 3. Note that moving 1 unit to right, then 2 units to left and then 3 units to the right will also end up at position 3, but here the moves required are equal to three and a more optimal solution using two moves exists.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n1\n4\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>1\n3\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 5,
            "dislikes": "NA",
            "rephrased": {
                "body": "A robot starts at the origin (0) on the x-axis and needs to reach a target coordinate 'X'. In each move 'i', the robot can move 'i' units either to the left or to the right. Determine the minimum number of moves required for the robot to reach 'X'. If it is impossible to reach 'X', return -1.",
                "constraints": [
                    "1 \u2264 T \u2264 10",
                    "1 \u2264 X \u2264 10^9",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "x = 6",
                        "output": "3",
                        "explanation": "The robot can move 1 unit right in move 1, 2 units right in move 2, and 3 units right in move 3.  1 + 2 + 3 = 6.  Therefore, 3 moves are needed."
                    },
                    {
                        "input": "x = 3",
                        "output": "2",
                        "explanation": "The robot can move 1 unit right in move 1 and 2 units right in move 2. 1 + 2 = 3. Therefore, 2 moves are needed."
                    },
                    {
                        "input": "x = 1",
                        "output": "1",
                        "explanation": "The robot can move 1 unit right in move 1. Therefore, 1 move is needed."
                    },
                    {
                        "input": "x = 4",
                        "output": "3",
                        "explanation": "One possible solution is: move 1 unit right, 2 units right, and 3 units left. Resulting in 1 + 2 - 3 = 0. Not our target. Another possibility to reach 4 in 3 moves:  Move 1 unit right, move 2 units left, move 3 units right = 1 - 2 + 3 = 2. No valid moves to 4 in 3. Then consider 3 moves to positive direction 1+2+3 = 6. Then we can reverse move2: 1 - 2 + 3 = 2. Reversing move1: -1 + 2 + 3 = 4. So the minimal moves is 3 moves."
                    },
                    {
                        "input": "x = 0",
                        "output": "0",
                        "explanation": "The robot is already at the target coordinate."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Consider that all the \u2018N\u2019 moves are made to the right, the robot will end up at (N * (N + 1) ) / 2 in this case. Try to think about what will happen if a few of the moves were made to the left instead of the right?&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}