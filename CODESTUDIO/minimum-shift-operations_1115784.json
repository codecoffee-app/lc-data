{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10026,
            "title": "Minimum shift Operations",
            "titleSlug": "minimum-shift-operations_1115784",
            "content": "<h4 id=\"let-s-define-a-shift-operation-on-a-string-s-as-picking-any-single-character-from-the-string-and-pushing-it-at-the-front-of-the-string-for-example-s-abcd-let-s-pick-the-character-c-so-after-the-shift-operation-string-s-becomes-cabd\">Let\u2019s define a shift operation on a string \u2018S\u2019 as picking any single character from the string and pushing it at the front of the string. For example, S = \u201cABCD\u201d. Let\u2019s pick the character \u2018C\u2019. So, after the shift operation string \u2018S\u2019 becomes \u201cCABD\u201d.</h4>\n\n<h4 id=\"you-are-provided-with-the-two-strings-named-s1-and-s2-you-have-to-calculate-whether-it-is-possible-to-convert-s1-to-s2-if-possible-you-have-to-find-the-minimum-number-of-shift-operations-required-to-do-so\">You are provided with the two strings named &#39;S1&#39; and &#39;S2&#39;. You have to calculate whether it is possible to convert &#39;S1&#39; to &#39;S2&#39;. If possible, you have to find the minimum number of shift operations required to do so.</h4>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>Both the strings have only uppercase English alphabets. You can only perform shift operations to convert &#39;S1&#39; to &#39;S2&#39;.\n</code></pre>\n\n<h4 id=\"input-format\">Input format:</h4>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases.\n\nThen the \u2018T\u2019 test cases follow.\n\nThe first line of each test case contains the string &#39;S1&#39;.\n\nThe second line of each test case contains the string &#39;S2&#39;.\n</code></pre>\n\n<h4 id=\"output-format\">Output format:</h4>\n\n<pre><code>For each test case, the minimum number of shift operations to convert &#39;S1&#39; to &#39;S2&#39; is printed (if the conversion is possible). -1 is printed when the conversion is not possible.\n\nThe output of each test case is printed in a separate line.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= |S1| &lt;= 50000\n1 &lt;= |S2| &lt;= 50000\n\nwhere \u2018T\u2019 is the number of test cases, |S1| is the length of the &#39;S1&#39; string, and |S2| is the length of the &#39;S2&#39; string.\n\nTime Limit: 1 sec\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1:</h4>\n\n<pre><code>2\nABCD\nBACD\nEFEF\nFEEF\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1:</h4>\n\n<pre><code>1\n1\n</code></pre>\n\n<h4 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1:</h4>\n\n<pre><code>In the first test case, performing shift operation on character \u2018B\u2019 only in S1 can give the desired result. S1 = \u201cABCD\u201d, apply shift operation on \u2018B\u2019. New S1 = \u201cBACD\u201d.\n\nIn the second test case, performing shift operation on character \u2018F\u2019 (first occurrence) only in S1 can give the desired result. S1 = \u201cEFEF\u201d, apply shift operation on \u2018F\u2019. New S1 = \u201cFEEF\u201d.\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2:</h4>\n\n<pre><code>3\nABCD\nACBD\nEEGG\nEEGG\nJKLM\nJKMN\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2:</h4>\n\n<pre><code>2\n0\n-1\n</code></pre>\n\n<h4 id=\"explanation-of-sample-input-2\">Explanation of Sample Input 2:</h4>\n\n<pre><code>In the first test case, perform shift operation two times. First on character \u2018C\u2019 and then on character \u2018A\u2019.\n\nIn the second test case, there is no need to perform shift operations as strings are already the same.\n\nIn the third test case, there is no way to convert S1 to S2.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 1,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two strings, 'S1' and 'S2', consisting of uppercase English alphabets, determine the minimum number of shift operations required to convert 'S1' to 'S2'. A shift operation involves picking a character from the string and moving it to the front. If the conversion is not possible, return -1. If the strings are already equal, return 0.",
                "constraints": [
                    "1 <= T <= 10 (Number of test cases)",
                    "1 <= |S1| <= 50000 (Length of string 'S1')",
                    "1 <= |S2| <= 50000 (Length of string 'S2')",
                    "Strings 'S1' and 'S2' contain only uppercase English alphabets.",
                    "Time Limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "ABCD\nBACD",
                        "output": "1",
                        "explanation": "Shifting 'B' in 'ABCD' to the front results in 'BACD', requiring one shift operation."
                    },
                    {
                        "input": "EFEF\nFEEF",
                        "output": "1",
                        "explanation": "Shifting the first 'F' in 'EFEF' to the front results in 'FEEF', requiring one shift operation."
                    },
                    {
                        "input": "ABCD\nACBD",
                        "output": "2",
                        "explanation": "First, shift 'C' to get 'CABD', then shift 'A' to get 'ACBD', requiring two shift operations."
                    },
                    {
                        "input": "EEGG\nEEGG",
                        "output": "0",
                        "explanation": "The strings are already equal, so no shift operations are needed."
                    },
                    {
                        "input": "JKLM\nJKMN",
                        "output": "-1",
                        "explanation": "It's impossible to convert 'JKLM' to 'JKMN' using only shift operations because 'N' is not present in S1."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to make strings equal from ending to beginning.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}