{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 15665,
            "title": "Minimum Steps",
            "titleSlug": "minimum-steps_2664398",
            "content": "<h4 id=\"you-are-given-an-integer-n-and-your-task-is-to-find-the-minimum-steps-to-reach-from-1-to-n-there-are-also-m-mines-on-which-you-can-not-move\">You are given an integer \u2018N,\u2019 and your task is to find the minimum steps to reach from 1 to &#39;N&#39;. There are also \u2018M\u2019 mines on which you can not move.</h4>\n\n<h4 id=\"in-each-step-you-can-move-in-the-following-way\">In each step, you can move in the following way:</h4>\n\n<pre><code>1 - You move either 1 or 2 steps forward.\n\n2 - Whenever you are at a prime number, you can make a special move, where you can move to the sum of digits in (Count the number of primes before the current prime + Difference between the next prime and current number) until it becomes a single-digit number. \n\n3- If you make a special move, you can\u2019t make another special move for the next \u2018L\u2019 moves. \n</code></pre>\n\n<h5 id=\"for-example\">For Example:</h5>\n\n<pre><code>You are given \u2018N\u2019 = 10, L = 2, and mines = [6], Here you can make the following moves for minimum path 1 -&gt; 3 -&gt; 5 (special move) -&gt; 9 -&gt; 10. Hence the answer is 4.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains a single integer \u2018T\u2019 representing the number of test cases.\n\nThe first line of each test case contains three space-separated integers \u2018N\u2019, \u2018L\u2019 and \u2018M\u2019, representing the position to reach, the given integer, and the number of mines, respectively.\n\nThe next lines contain \u2018M\u2019 space-separated integers representing the position of each mine.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print a single integer denoting the minimum number of steps required to reach \u2018N.\u2019\n\nPrint a separate line for each test case.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= M &lt; N &lt;= 10^5\n0 &lt;= L &lt;= 10\n\nIt is guaranteed that the sum of &#39;N&#39; and the sum of &#39;M&#39; over all test cases doesn&#39;t exceed 10^5.\nTime Limit: 1 sec.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the function.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n10 2 1\n6\n14 2 1\n8  \n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>4\n4\n</code></pre>\n\n<h5 id=\"explanation\">Explanation:</h5>\n\n<pre><code>For the first test case, \u2018N\u2019 = 10, L = 2, and mines = [6], Here you can make the following moves for minimum path 1 -&gt; 3 - &gt;5(special move) -&gt; 9-&gt;10. Hence the answer is 4.\n\nFor the second test case, &#39;N&#39; = 11, L = 2 and mines = [8], Here you can make the following moves for 1 -&gt; 3-&gt; 6 -&gt; 7(special move) -&gt; 11.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n12 1 1\n10\n6 1 1\n4\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>5\n2\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 3,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an integer 'N', find the minimum number of steps to reach 'N' from 1. You can move 1 or 2 steps forward. If you are at a prime number, you can make a special move: move to the single-digit sum of (number of primes before the current prime + difference between the next prime and the current prime).  After a special move, you cannot make another special move for the next 'L' moves. There are 'M' mines that you cannot step on.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= M < N <= 10^5",
                    "0 <= L <= 10"
                ],
                "testcases": [
                    {
                        "input": "n = 10, mines = [6], l = 2",
                        "output": "4",
                        "explanation": "One possible optimal path is 1 -> 3 -> 5 (special move) -> 9 -> 10."
                    },
                    {
                        "input": "n = 14, mines = [8], l = 2",
                        "output": "4",
                        "explanation": "One possible optimal path is 1 -> 3 -> 6 -> 7 (special move) -> 11."
                    },
                    {
                        "input": "n = 12, mines = [10], l = 1",
                        "output": "5",
                        "explanation": "One possible optimal path is 1 -> 3 -> 5 (special move) -> 7 -> 9 -> 12."
                    },
                    {
                        "input": "n = 6, mines = [4], l = 1",
                        "output": "2",
                        "explanation": "One possible optimal path is 1 -> 3 -> 5 -> 6."
                    },
                    {
                        "input": "n = 5, mines = [], l = 0",
                        "output": "2",
                        "explanation": "One possible optimal path is 1 -> 3 -> 5 (special move will give us the answer as 5) and after removing that if possible 1->2->3->4->5 (normal moves)"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>&nbsp;Try to use recursion to find all the possible paths.</p>",
            "<p>Try to memoize the previous approach</p>"
        ],
        "relatedTopics": [
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}