{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12584,
            "title": "Minimum Subsequence in Non-Increasing Order",
            "titleSlug": "minimum-subsequence-in-non-increasing-order_1466962",
            "content": "<h4 id=\"you-have-been-an-array-list-arr-of-integers-now-you-are-supposed-to-find-a-subsequence-of-minimum-length-such-that-the-sum-of-elements-in-the-subsequence-is-strictly-greater-than-the-sum-of-the-rest-of-the-elements\">You have been an array/list \u201cARR\u201d of integers. Now, you are supposed to find a subsequence of minimum length such that the sum of elements in the subsequence is strictly greater than the sum of the rest of the elements.</h4>\n\n<h4 id=\"please-note-that-a-subsequence-is-a-sequence-that-can-be-derived-from-the-given-sequence-by-deleting-zero-or-more-elements\">Please note that a subsequence is a sequence that can be derived from the given sequence by deleting zero or more elements.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>If there are multiple solutions, then find the subsequence with the maximum total sum. Also, assume that there will be a unique solution.\n</code></pre>\n\n<h4 id=\"input-format\">Input Format :</h4>\n\n<pre><code>The first line contains an integer \u2018T\u2019 denoting the number of test cases. Then each test case follows.\n\nThe first input line of each test case contains an integer \u2018N\u2019 denoting the number of elements in the given array/list.\n\nThe second input line of each test case contains \u2018N\u2019 space-separated integers denoting the elements of the \u201cARR\u201d.\n</code></pre>\n\n<h4 id=\"output-format\">Output Format :</h4>\n\n<pre><code>For each test case, print the space-separated integers denoting the elements of the desired subsequence in non-increasing order.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You are not required to print the expected output; it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints :</h4>\n\n<pre><code>1 &lt;= T &lt;= 50\n1 &lt;= N &lt;= 10000\n1 &lt;= ARR[i] &lt;= 10000\n\nWhere ARR[i] denotes the i-th element of the given array/list.\n\nTime limit: 1 sec\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1 :</h4>\n\n<pre><code>2\n2\n7 11\n4\n2 3 7 3\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample output 1 :</h4>\n\n<pre><code>11\n7 3\n</code></pre>\n\n<h4 id=\"explanation-of-sample-output-1\">Explanation of Sample output 1  :</h4>\n\n<pre><code>For the first test case, subsequence [11] is minimal such that the sum of its elements is strictly greater than the elements not included.\n\nFor the second test case, subsequences [7, 3], [2, 7]  are minimal such that the sum of their elements are strictly greater than the elements not included. But [7, 3] has the maximum sum so the answer will be [7, 3]. \n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2 :</h4>\n\n<pre><code>2\n1\n3\n5\n4 4 7 6 7\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample output 2 :</h4>\n\n<pre><code>3\n7 7 6\n</code></pre>\n\n<h4 id=\"explanation-of-sample-output-2\">Explanation of Sample output 2  :</h4>\n\n<pre><code>For the first test case, subsequence [3] is minimal such that the sum of its elements is strictly greater than the elements not included.\n\nFor the second test case, subsequence [7, 6, 7] is the desired subsequence having the sum of its elements strictly greater than the sum of the elements not included.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 8,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of integers, find the subsequence of minimum length such that the sum of elements in the subsequence is strictly greater than the sum of the remaining elements. If multiple such subsequences exist, choose the one with the maximum total sum. The output should be the subsequence elements in non-increasing order.",
                "constraints": [
                    "1 <= T <= 50",
                    "1 <= N <= 10000",
                    "1 <= ARR[i] <= 10000",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "2\n2\n7 11\n4\n2 3 7 3",
                        "output": "11\n7 3",
                        "explanation": "Test case 1: [11] is the shortest subsequence whose sum is greater than the rest.  Test case 2: Both [7, 3] and [7, 2] satisfy the condition, but [7, 3] has a greater sum, thus it is selected."
                    },
                    {
                        "input": "2\n1\n3\n5\n4 4 7 6 7",
                        "output": "3\n7 7 6",
                        "explanation": "Test case 1: [3] is the only element and it satisfies the condition.\nTest case 2: [7, 6, 7] is the shortest subsequence that satisfies the condition."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can sorting help?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}