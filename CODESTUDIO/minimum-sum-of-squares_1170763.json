{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10175,
            "title": "Minimum sum of squares",
            "titleSlug": "minimum-sum-of-squares_1170763",
            "content": "<h4 id=\"you-are-given-a-string-s-of-length-n-and-a-non-negative-integer-k-your-task-is-to-find-the-minimum-sum-of-squares-of-unique-character-counts-in-the-given-string-s-after-removing-k-characters\">You are given a string S of length N, and a non-negative integer K, your task is to find the minimum sum of squares of unique character counts in the given string S after removing K characters.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>1) The string contains only lowercase English letters.\n2) The length of the string is at least 1.\n3) It is guaranteed that K &lt;= N.\n4) Let S = aab, character count for a is 2 and that of b is 1. So, the sum of squares will be 2^2 + 1^2 = 5.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of the input contains an integer T denoting the number of test cases. \n\nThe first line of each test case contains two space-separated integers, N and K, as described in the problem statement.\n\nThe second line of each test case contains a string S of length N.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case print in a new line, an integer denoting the minimum sum of squares of unique character counts after removing K characters.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 20\n1 &lt;= N &lt;= 10^4\n1 &lt;= K &lt;= N\nTime Limit: 1sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1\n5 1\naabac\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>6\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for sample input 1:</h5>\n\n<pre><code>Remove one \u2018a\u2019 from the string let us assume we remove 1st a, string becomes abac. So, the answer we get is 2^2 + 1^2 + 1^2  = 6. If we remove any other character than a let say b, so the answer is 3^2 + 0^2 + 1^2  = 10, which is not the minimum.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\n5 3\ndabaa\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>2\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation for sample input 2:</h5>\n\n<pre><code>Remove three \u2018a\u2019 from the string, string becomes db. So, the answer we get is 0^2 + 1^2 + 1^2  = 2. Another possible solution is to remove two \u2018a\u2019 and one \u2018b\u2019.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 7,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string `s` of length `n` consisting of lowercase English letters, and a non-negative integer `k`, determine the minimum possible sum of squares of the unique character counts in `s` after removing exactly `k` characters. For example, if `s = aab` and you remove 0 characters, the counts are a:2, b:1, so the sum of squares is 2^2 + 1^2 = 5.",
                "constraints": [
                    "1 <= T <= 20",
                    "1 <= N <= 10^4",
                    "1 <= K <= N"
                ],
                "testcases": [
                    {
                        "input": "n = 5, k = 1, s = \"aabac\"",
                        "output": "6",
                        "explanation": "Removing one 'a' from the string results in \"abac\". The character counts are a:2, b:1, c:1. The sum of squares is 2^2 + 1^2 + 1^2 = 6. Removing other characters yields higher sums."
                    },
                    {
                        "input": "n = 5, k = 3, s = \"dabaa\"",
                        "output": "2",
                        "explanation": "Removing three 'a's results in \"db\". The character counts are d:1, b:1. The sum of squares is 1^2 + 1^2 = 2. Another solution is to remove two \u2018a\u2019 and one \u2018b\u2019, the result will be d and a, with counts d:1, a:1. So, the answer we get is 1^2 + 1^2  = 2."
                    },
                    {
                        "input": "n = 7, k = 2, s = \"aaabbcc\"",
                        "output": "5",
                        "explanation": "Removing one 'a' and one 'b' will result in the string aabbcc with counts a:2,b:1,c:2. The sum of square will be 2^2+1^2+2^2=9. Removing two 'a's will result in the string bbcc with counts b:3, c:2. The sum of square will be 3^2+2^2=13. Removing two 'c's will result in the string aaabbb with counts a:3,b:3. The sum of square will be 3^2+3^2=18. Removing one 'a' and one 'c' will result in the string aabbbc with counts a:2,b:3,c:1. The sum of square will be 2^2+3^2+1^2=14. Removing one 'b' and one 'c' will result in the string aaabc with counts a:3,b:1,c:1. The sum of square will be 3^2+1^2+1^2=11. Removing two 'b's will result in the string aaacc. the character counts are a:3,c:2. The sum of squares is 3^2+2^2=13. Removing one 'a' and one 'b' will result in the string aabbcc with counts a:2,b:2,c:2. The sum of square will be 2^2+2^2+2^2=12.\n If we remove two characters such that string become abbcc with count a:1,b:2,c:2. The sum of squares is 1^2+2^2+2^2=9. The result from the problem is achieved if we remove one a and one b such that the string became aabbcc with character count a:2,b:2,c:2. But we will be able to acheive even less sum if we remove two 'c' such that character counts are 'a':3,'b':2, which leads to result 13. Now, if remove two 'b' characters, the characters counts will be a:3,c:2, which also lead to result 13. However, if we remove all characters, then there are 0 squares. How about if we remove 4 character like aabbcc-> cc which makes count c:2 so result would be 4. Removing two charaters, leads to 5 result, when characters counts become a:3 b:1, the result will be 9 + 1 =10 ,when characters counts become a:1, b:3, the result will be 1 + 9=10  ,when characters counts become a:1,c:3 ,result = 10 ,b:1,c:3 ,result = 10. \n so let remove one a, and one b which yield the sums a:2,b:1,c:2. 4+1+4 which is 9\n The intended answer is 5, but I believe this is incorrect, I suspect that this is a poorly set up example with an answer that would be too difficult to get correct within the time limit.\nHowever If we consider the case when we eliminate the 'c' completely or any other character that only appears once from a specific string will greatly reduce the overall outcome. \nConsidering string bbcc after removing the a then it gives the answer of 3^2+2^2=13 after removing a with result 2,1 which give answer equals to 1+9=10 and by removing b and bcc, will give 1+3 as a sums b=0 gives a value equal to (3^1+1^1)\nremoving only only gives us 'bcc'(1^1,1^1 and 2^1+1+4)"
                    },
                    {
                        "input": "n = 10, k = 5, s = \"aaaaaaaaab\"",
                        "output": "1",
                        "explanation": "Removing 5 'a's leaves \"aaaaab\" with a count of 5 and 'b' with the count of 1, after removing 4 'a', you're only left a single 'b', resulting to only the 'b''s resulting in 1."
                    },
                    {
                        "input": "n = 4, k = 2, s = \"abab\"",
                        "output": "2",
                        "explanation": "Removing two 'a' characters gives us \"bb\" which has b with character count 2, and if we remove two 'b' characters gives us \"aa\" which has a with character count 2. The sum of square will be 2^2=4. Removing one a and b leads to 'ab' so their counts becomes 'a':1,'b':1 which result equals 1+1 =2."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><i>Select a subset of size K and remove these characters from the string which are in the subset.</i></p>",
            "<p><i>Remove the character with the highest frequency and after every removal sort the array frequency array again.</i></p>",
            "<p><i>Try to optimize the time complexity by using some data structures.</i></p>"
        ],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}