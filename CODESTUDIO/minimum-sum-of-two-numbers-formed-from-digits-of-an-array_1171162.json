{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10194,
            "title": " Minimum sum of two numbers formed from digits of an array",
            "titleSlug": "minimum-sum-of-two-numbers-formed-from-digits-of-an-array_1171162",
            "content": "<h4 id=\"given-an-array-of-integers-arr-in-which-value-of-each-element-is-between-0-and-9-both-inclusive-you-are-supposed-to-construct-two-numbers-by-concatenating-the-elements-of-arr-and-find-the-minimum-possible-sum-of-two-numbers-formed-using-the-elements-of-the-array\">Given an array of integers \u201cARR\u201d  in which value of each element is between 0 and 9(both inclusive), You are supposed to construct two numbers by concatenating the elements of ARR and find the minimum possible sum of two numbers formed using the elements of the array.</h4>\n\n<h4 id=\"note-each-element-of-the-given-array-must-be-a-part-of-exactly-one-number\">Note: Each element of the given array must be a part of exactly one number.</h4>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of input contains an integer &#39;T&#39; representing the number of test cases.\n\nThe first line of each test case contains one integer \u2018N\u2019 denoting the number of elements in the array.\n\nThe second line of each test case contains N space-separated integers denoting the elements of the array ARR.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, on a separate line, output one integer - the minimum possible sum of numbers.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 50\n1 &lt;= N &lt;= 10^4\n0 &lt;= A[i] &lt;= 9\n\nWhere \u2018T\u2019 is the number of test cases, \u2018N\u2019  is the size of the given array, and \u2018ARR[i]\u2019 denotes the ith element of the array.\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n6 \n4 0 3 7 6 5\n5\n6 1 2 4 3 \n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>403\n160\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1 :</h5>\n\n<pre><code>For the first test case, the minimum sum is formed by numbers 357 and 046, and their sum is 403.\nFor the second test case, the minimum sum is formed by numbers 24 and 136, and their sum is 160.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n7\n9 2 3 5 0 7 2\n3\n9 2 2\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>496\n31\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 4,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of integers 'arr' where each element is between 0 and 9 (inclusive), construct two numbers by concatenating the elements of 'arr'. Each element must be used exactly once. Find the minimum possible sum of these two numbers. The function signature is:  `string getMinimumSum(vector<int> &arr, int n)` where 'arr' is the integer array and 'n' is the number of elements in the array. The return value is the minimum possible sum as a string.",
                "constraints": [
                    "1 <= T <= 50",
                    "1 <= N <= 10^4",
                    "0 <= A[i] <= 9"
                ],
                "testcases": [
                    {
                        "input": "n = 6, nums = [4, 0, 3, 7, 6, 5]",
                        "output": "403",
                        "explanation": "The minimum sum is formed by numbers 357 and 046, and their sum is 403."
                    },
                    {
                        "input": "n = 5, nums = [6, 1, 2, 4, 3]",
                        "output": "160",
                        "explanation": "The minimum sum is formed by numbers 24 and 136, and their sum is 160."
                    },
                    {
                        "input": "n = 7, nums = [9, 2, 3, 5, 0, 7, 2]",
                        "output": "496",
                        "explanation": "One possible arrangement that leads to the minimum sum is constructing the numbers '2279' and '035'. The sum is 2279 + 35 = 2314. The optimal numbers are 59 and 02237 leading to a sum of 496."
                    },
                    {
                        "input": "n = 3, nums = [9, 2, 2]",
                        "output": "31",
                        "explanation": "The numbers formed are 22 and 9, giving a sum of 31."
                    },
                    {
                        "input": "n = 4, nums = [0, 0, 0, 0]",
                        "output": "0",
                        "explanation": "The numbers formed are 00 and 00, giving a sum of 0."
                    },
                    {
                        "input": "n = 2, nums = [5, 5]",
                        "output": "10",
                        "explanation": "The numbers formed are 5 and 5, giving a sum of 10."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you solve it greedily?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}