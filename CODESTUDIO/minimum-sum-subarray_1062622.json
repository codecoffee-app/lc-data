{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9542,
            "title": "Minimum Sum Subarray",
            "titleSlug": "minimum-sum-subarray_1062622",
            "content": "<h4 id=\"you-have-been-given-an-array-list-arr-consisting-of-n-integers\">You have been given an array/list &#39;ARR&#39; consisting of &#39;N&#39; integers.</h4>\n\n<h4 id=\"your-task-is-to-find-the-minimum-possible-sum-of-a-non-empty-subarray-of-this-array\">Your task is to find the minimum possible sum of a non-empty subarray of this array.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>An array &#39;C&#39; is a subarray of array &#39;D&#39; if it can be obtained by deletion of several elements(possibly zero) from the beginning and the end of array &#39;D&#39;. For example, all the non-empty subarrays of array [1,2,3] are [1], [2], [3], [1,2], [2,3], [1,2,3].\n</code></pre>\n\n<h4 id=\"for-example\">For Example :</h4>\n\n<pre><code>Input: &#39;N&#39; = 3 , &#39;ARR&#39; =  [-5, 10 , 0]\nOutput: -5\n\nExplanation : The non empty subarrays possible for &#39;ARR&#39; are [-5], [10], [0], [-5, 10], [-5, 0], [10, 0], [-5, 10, 0]. The sum of the elements of these subarrays are -5, 10, 0, 5, -5, 10, 5. The minimum of them is -5.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format</h5>\n\n<pre><code>The first line of input contains an integer &#39;T&#39; which denotes the number of test cases or queries to be run. Then the test cases follow.\n\nThe first line of each test case contains a single integer \u2018N\u2019 denoting the number of elements in the array/list.\n\nThe second line of each test case contains \u2018N\u2019 single space-separated integers, denoting the elements of the array/list.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, return the minimum possible sum of any subarray of the array/list. \n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= N &lt;= 5000\n-10^5 &lt;= ARR[i] &lt;=10^5\n\nTime Limit : 1 second\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>1\n3 \n2 -7 -11\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>-18\n</code></pre>\n\n<h4 id=\"explanation-for-sample-1\">Explanation for Sample 1:</h4>\n\n<pre><code>The non empty subarrays possible for the given array are [2], [-7], [-11], [2, -7], [2, -11], [-7, -11], [2, -7, -11]. The sum of the elements of these subarrays are 2, -7, -11, -5, -9, -18, -16. The minimum of them is -18.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n4\n-1 -2 -5 -3\n4\n1 2 5 3\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>-11\n1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 1,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of integers, find the minimum possible sum of any non-empty subarray within the array.  Implement the function `minimumSum` which takes the array and its size as input.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= N <= 5000",
                    "-10^5 <= ARR[i] <=10^5"
                ],
                "testcases": [
                    {
                        "input": "n = 3, arr = [2, -7, -11]",
                        "output": "-18",
                        "explanation": "The non empty subarrays possible for the given array are [2], [-7], [-11], [2, -7], [2, -11], [-7, -11], [2, -7, -11]. The sum of the elements of these subarrays are 2, -7, -11, -5, -9, -18, -16. The minimum of them is -18."
                    },
                    {
                        "input": "n = 4, arr = [-1, -2, -5, -3]",
                        "output": "-11",
                        "explanation": "The minimum sum subarray is [-1, -2, -5, -3], which sums to -11."
                    },
                    {
                        "input": "n = 4, arr = [1, 2, 5, 3]",
                        "output": "1",
                        "explanation": "The minimum sum subarray is [1], which sums to 1."
                    },
                    {
                        "input": "n = 3, arr = [-5, 10, 0]",
                        "output": "-5",
                        "explanation": "The subarrays are [-5], [10], [0], [-5, 10], [10, 0], [-5, 10, 0], [-5, 0]. The corresponding sums are -5, 10, 0, 5, 10, 5, -5. The minimum is -5."
                    },
                    {
                        "input": "n = 1, arr = [100]",
                        "output": "100",
                        "explanation": "There is only one subarray which is [100]. Therefore, the result is 100."
                    },
                    {
                        "input": "n = 5, arr = [1, -2, 3, -4, 5]",
                        "output": "-4",
                        "explanation": "The minimum subarray is [-4]."
                    },
                    {
                        "input": "n = 5, arr = [-10, 2, -3, 4, -5]",
                        "output": "-11",
                        "explanation": "The minimum subarray is [-10, 2, -3]."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Naively iterate over all possible subarrays.</p>",
            "<p>Try to optimise approach1.</p>",
            "<p>If a subarray has a prefix with positive-sum, then should we keep this prefix or remove it from our subarray?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}