{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10182,
            "title": "Minimum Travel Time",
            "titleSlug": "minimum-travel-time_1171046",
            "content": "<h4 id=\"mr-x-is-planning-to-visit-ninja-land-ninja-land-has-n-cities-numbered-from-1-to-n-and-m-bidirectional-roads-each-road-connects-two-of-the-n-cities-and-no-two-cities-have-multiple-roads-between-them-mr-x-wants-to-visit-all-the-m-roads-and-n-cities-of-ninja-land-to-do-so-he-can-arbitrarily-select-any-city-as-the-starting-city-travel-through-all-the-roads-and-should-end-his-journey-in-the-same-city-which-he-selected-as-the-starting-city\">Mr. X is planning to visit Ninja Land. Ninja Land has &#39;N&#39; cities numbered from 1 to &#39;N&#39; and &#39;M&#39; bidirectional roads. Each road connects two of the &#39;N&#39; cities, and no two cities have multiple roads between them. Mr. X wants to visit all the &#39;M&#39; roads and &#39;N&#39; cities of Ninja land. To do so, he can arbitrarily select any city as the starting city, travel through all the roads, and should end his journey in the same city which he selected as the starting city.</h4>\n\n<h4 id=\"given-the-description-of-each-of-the-m-roads-i-e-the-two-2-cities-that-the-road-connects-and-the-time-it-takes-to-travel-between-the-two-cities-your-task-is-to-find-the-minimum-time-that-mr-x-will-take-to-visit-all-the-roads-satisfying-the-above-conditions\">Given the description of each of the &#39;M&#39; roads i.e, the two 2 cities that the road connects, and the time it takes to travel between the two cities. Your task is to find the minimum time that Mr. X will take to visit all the roads satisfying the above conditions.</h4>\n\n<h4 id=\"if-there-is-no-possible-way-to-travel-all-the-roads-then-return-1\">If there is no possible way to travel all the roads, then return -1.</h4>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of the input contains an integer, &#39;T,\u2019 denoting the number of test cases.\n\nThe first line of each test case contains two space-separated integers, &#39;N&#39; and &#39;M&#39;, denoting the number of cities and the number of bidirectional roads respectively.\n\nThe next &#39;M&#39; lines of each test case contain the description of the &#39;M&#39; roads.\n\nThe &#39;i&#39;th&#39; line contains three space-separated integers &#39;City1&#39;, &#39;City2&#39;, and &#39;Time&#39;. &#39;City1&#39; and &#39;City2&#39; denote the two cities that are connected by the &#39;i&#39;th&#39; road, and &#39;time&#39; denotes the time it takes to travel between the two cities using this road.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>The only line of output of each test case should contain the minimum time that Mr. X will take to visit all the roads satisfying the above conditions. If there is no way to visit all the roads, then print -1.\nPrint the output of each test case in a new line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 10\n0 &lt;= M  &lt;= (N*(N-1))/2  \n1 &lt;= City1, City2 &lt;= N\n1 &lt;= Time &lt;= 10^6\n\nAny two cities are directly connected by at most one road.\n\nWhere &#39;T&#39; denotes the number of test cases, &#39;N&#39; denotes the number of cities, &#39;M&#39; denotes the number of roads, &#39;City1&#39; and &#39;City2&#39; denotes the two cities that are connected by the &#39;i&#39;th&#39; road, and &#39;Time&#39; denotes the time it takes to travel between the two cities.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n3 3\n1 2 3\n1 3 4\n2 3 2\n4 2\n1 2 4\n3 4 1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>9\n-1\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1 :</h5>\n\n<pre><code>For the first test case :  \nNinja Land has the below structure. Mr. X can start from the 1st city and can visit all the roads in cyclic order. The total travel time will be 9 ( 4 + 3 + 2) in this case\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/screenshot_20210218_144127-7997.jpg\" alt=\"input\"></p>\n\n<pre><code>For the second test case: \nIt can be seen that it is impossible to travel through all the roads using the given roads. Hence, the answer is -1 in this case.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/screenshot_20210218_144252-7998.jpg\" alt=\"input\"></p>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n4 4\n1 2 5 \n3 1 3\n2 3 6 \n3 4 5\n4 6\n3 4 1\n3 2 5\n1 2 6\n1 3 4\n2 4 3\n1 4 2\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>24\n27\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 2,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a graph of 'N' cities (numbered 1 to 'N') and 'M' bidirectional roads, where each road connects two cities with a given travel time, determine the minimum time required for Mr. X to visit all roads and return to his starting city. If it's impossible to traverse all roads in a cycle, return -1. Assume no multiple edges between cities.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10",
                    "0 <= M <= (N*(N-1))/2",
                    "1 <= City1, City2 <= N",
                    "1 <= Time <= 10^6"
                ],
                "testcases": [
                    {
                        "input": "n = 3, roads = {{1, 2, 3}, {1, 3, 4}, {2, 3, 2}}",
                        "output": "9",
                        "explanation": "The graph can be traversed in a cycle, starting from city 1: 1->2 (3), 2->3 (2), 3->1 (4). Total time = 3 + 2 + 4 = 9."
                    },
                    {
                        "input": "n = 4, roads = {{1, 2, 4}, {3, 4, 1}}",
                        "output": "-1",
                        "explanation": "The graph is disconnected, making it impossible to visit all roads in a single cycle."
                    },
                    {
                        "input": "n = 4, roads = {{1, 2, 5}, {3, 1, 3}, {2, 3, 6}, {3, 4, 5}}",
                        "output": "24",
                        "explanation": "The graph can be traversed in a cycle. One possible cycle is 1->2 (5), 2->3 (6), 3->4 (5), 4->3 (5), 3->1(3). Total time is 5+6+5+5+3 =24.  This requires traversing road 3-4 and 3-1 twice as cities with odd degree requires repeat visits."
                    },
                    {
                        "input": "n = 4, roads = {{3, 4, 1}, {3, 2, 5}, {1, 2, 6}, {1, 3, 4}, {2, 4, 3}, {1, 4, 2}}",
                        "output": "27",
                        "explanation": "The total time to traverse all edges.  Since all nodes have even degree, this satisfies the Eulerian cycle properties. Add all edge weights to arrive at total traversal time. 1+5+6+4+3+2 = 21"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to think of remodeling the problem as a graph problem and try to find the smallest cycle traversing all the edges using recursion.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}