{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 15740,
            "title": "Minimum walk",
            "titleSlug": "minimum-walk_2698984",
            "content": "<h4 id=\"there-are-n-cities-in-the-ninja-world-that-are-connected-via-m-bi-directional-roads-alice-wants-to-take-a-tour-in-the-ninja-world-but-she-doesn-t-have-so-much-time-so-she-chooses-any-city-as-a-source-visits-some-cities-and-gets-back-to-where-she-started-in-her-journey-she-doesn-t-walk-through-any-road-more-than-once\">There are \u2018N\u2019 cities in the Ninja world that are connected via \u2018M\u2019 bi-directional roads. Alice wants to take a tour in the Ninja world, but she doesn\u2019t have so much time, so she chooses any city as a source, visits some cities, and gets back to where she started. In her journey, she doesn\u2019t walk through any road more than once.</h4>\n\n<h4 id=\"your-task-is-to-find-the-minimum-possible-distance-she-needs-to-walk-such-that-she-ends-in-the-same-city-where-she-started-and-doesn-t-walk-any-road-more-than-once-if-no-such-path-is-found-return-1\">Your task is to find the minimum possible distance she needs to walk such that she ends in the same city where she started and doesn\u2019t walk any road more than once. If no such path is found, return -1.</h4>\n\n<h4 id=\"note\">Note :-</h4>\n\n<pre><code>Any pair of cities (x, y) have at most one road connecting them directly.\nA city \u2018x\u2019 is reachable by any other city \u2018y\u2019 via some group of roads.\nIn input data, cities are numbered from [0, 1, \u2026\u2026. N-1].\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains \u2018T\u2019, denoting the number of tests.\nFor each Test :\n    The first line contains two integers, \u2018N\u2019 and \u2018M\u2019, denoting the number of cities and roads, respectively.\n    Next \u2018M\u2019 lines contain two integers (x[i], y[i]), denoting a bi-directional road between city \u2018x[i]\u2019 and city \u2018y[i]\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test, print an integer, denoting the minimum distance needed to complete the tour at the starting point, walking any road at most once. \n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You are not required to print the expected output. It has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints -</h5>\n\n<pre><code>1 &lt;= \u2018T\u2019 &lt;= 10\n1 &lt;= \u2018N\u2019 &lt;= 10^3\n0 &lt;= \u2018M\u2019 &lt;= min(10^3 , N*(N-1)/2 )\n0 &lt;= x[i], y[i] &lt; N  i \u2208  (1,M)\nNote - Sum of \u2018N\u2019 and Sum of \u2018M\u2019 over all test cases does not exceed 10^3.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n5 6\n0 1\n0 2\n1 3\n2 3\n2 4\n3 4\n3 2\n0 1\n0 2\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>3\n-1\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1:</h5>\n\n<pre><code>For case 1:\n    N = 5, M = 6\nThere are 3 closed paths (same source and destination) which don&#39;t pass any road more than once. Paths are as follows :-\n        0 -&gt; 1 -&gt; 3 -&gt; 2 -&gt; 0  has a distance of 4 units.\n        2 -&gt; 3 -&gt; 4 -&gt; 2  has a distance of 3 units.\n        0 -&gt; 1 -&gt; 3 -&gt; 4 -&gt; 2 -&gt; 0  has a distance of 4 units.\n\n    You can choose any city as a source in these paths, but distance remains the same. Among all these distances, 3 is the minimum possible.\n\nFor Case 2:\n    No path has the same source and destination, hence answer is -1.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\n7 8\n2 3\n2 6\n0 6\n0 5\n3 4\n1 4\n1 5\n1 6\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>4\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -7,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a connected, undirected graph representing a ninja world with 'N' cities and 'M' bi-directional roads, find the minimum length of a cycle (a path starting and ending at the same city, visiting no road more than once). If no such cycle exists, return -1.",
                "constraints": [
                    "1 <= T <= 10 (Number of test cases)",
                    "1 <= N <= 1000 (Number of cities)",
                    "0 <= M <= min(1000 , N*(N-1)/2 ) (Number of roads)",
                    "0 <= x[i], y[i] < N (City indices)",
                    "Sum of N and Sum of M over all test cases does not exceed 1000",
                    "Time Limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "5 6\n0 1\n0 2\n1 3\n2 3\n2 4\n3 4\n3 2\n0 1\n0 2",
                        "output": "3\n-1",
                        "explanation": "Case 1: N = 5, M = 6. The minimum cycle is 2 -> 3 -> 4 -> 2, with length 3.\nCase 2: No cycles exist."
                    },
                    {
                        "input": "7 8\n2 3\n2 6\n0 6\n0 5\n3 4\n1 4\n1 5\n1 6",
                        "output": "4",
                        "explanation": "The minimum cycle in this graph has length 4. An example of such a cycle is 0 -> 6 -> 1 -> 5 -> 0."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to fix the source city.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Trees",
                "slug": "trees"
            },
            {
                "name": "Breadth-first Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}