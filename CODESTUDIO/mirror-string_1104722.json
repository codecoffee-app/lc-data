{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9934,
            "title": "Mirror String",
            "titleSlug": "mirror-string_1104722",
            "content": "<h4 id=\"you-are-given-a-string-s-containing-only-uppercase-english-characters-find-whether-s-is-the-same-as-its-reflection-in-the-mirror\">You are given a string S containing only uppercase English characters. Find whether S is the same as its reflection in the mirror.</h4>\n\n<h4 id=\"for-example-s-amama-is-the-same-as-its-reflection-in-the-mirror\">For Example, S = \u201cAMAMA\u201d is the same as its reflection in the mirror.</h4>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer T, denoting the number of test cases.\n\nThe first line of each test case contains a string &#39;S&#39;.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print a single line containing \u201cYES\u201d or \u201cNO\u201d depending on whether the string &#39;S&#39; is the same as its reflection in the mirror or not.\n\nThe output of each test case is printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the function.\n\nThe return type of the function is boolean, which returns true if the string is the same as its reflection in the mirror, otherwise returns false.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints</h5>\n\n<pre><code>1 &lt;= T &lt;=10\n1 &lt;= Length(S) &lt;= 10 ^ 5\n\nWhere \u2018T\u2019 is the number of test cases, \u2018S\u2019 is the string given in input.\n\nTime limit: 1sec.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1\nITATI\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>YES\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of sample input 1:</h5>\n\n<pre><code>String \u201cITATI\u201d is the same as its reflection in the mirror.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\nMMMM\nMZM\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>YES\nNO\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 19,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string 'S' consisting only of uppercase English characters, determine if 'S' is identical to its reflection in a mirror.  Only the characters 'A', 'H', 'I', 'M', 'O', 'T', 'U', 'V', 'W', 'X', and 'Y' reflect onto themselves. The characters 'B', 'C', 'D', 'E', 'F', 'G', 'J', 'K', 'L', 'N', 'P', 'Q', 'R', 'S', and 'Z' do not have valid reflections in this context. Return `true` if the string is a mirror reflection of itself; otherwise, return `false`.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= Length(S) <= 10^5",
                    "Time limit: 1sec."
                ],
                "testcases": [
                    {
                        "input": "s = \"AMAMA\"",
                        "output": "true",
                        "explanation": "The string \"AMAMA\" is a palindrome, and all its characters are mirror-symmetric, making it identical to its reflection."
                    },
                    {
                        "input": "s = \"ITATI\"",
                        "output": "true",
                        "explanation": "The string \"ITATI\" is a palindrome, and all its characters are mirror-symmetric, making it identical to its reflection."
                    },
                    {
                        "input": "s = \"MMMM\"",
                        "output": "true",
                        "explanation": "The string \"MMMM\" is a palindrome, and all its characters are mirror-symmetric, making it identical to its reflection."
                    },
                    {
                        "input": "s = \"MZM\"",
                        "output": "false",
                        "explanation": "The string \"MZM\" is a palindrome, but 'Z' is not a mirror-symmetric character, therefore, it is not a reflection of itself."
                    },
                    {
                        "input": "s = \"ABCBA\"",
                        "output": "false",
                        "explanation": "The string \"ABCBA\" is a palindrome, but the character 'B' and 'C' are not mirror symmetric, therefore, it is not a reflection of itself"
                    },
                    {
                        "input": "s = \"A\"",
                        "output": "true",
                        "explanation": "A single 'A' is its own reflection."
                    },
                    {
                        "input": "s = \"\"",
                        "output": "true",
                        "explanation": "An empty string is considered a reflection of itself as there is nothing to reflect."
                    },
                    {
                        "input": "s = \"NOT\"",
                        "output": "false",
                        "explanation": "NOT is not the same backward. even if the letter is mirror symetrical."
                    },
                    {
                        "input": "s = \"V\"",
                        "output": "true",
                        "explanation": "V is a mirror symmetric letter"
                    },
                    {
                        "input": "s = \"HVHHV\"",
                        "output": "true",
                        "explanation": "Palindrome mirror image example"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Check for symmetricity of the characters of the string.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}