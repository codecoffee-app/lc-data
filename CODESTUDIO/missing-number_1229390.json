{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10451,
            "title": "Missing Number",
            "titleSlug": "missing-number_1229390",
            "content": "<h4 id=\"you-are-given-an-array-list-binarynums-that-consists-of-n-distinct-strings-which-represent-all-integers-from-0-to-n-in-binary-representation-except-one-integer-this-integer-between-0-to-n-whose-binary-representation-is-not-present-in-list-binarynums-is-called-missing-integer\">You are given an array/list \u2018BINARYNUMS\u2019 that consists of \u2018N\u2019 distinct strings which represent all integers from 0 to N in binary representation except one integer. This integer between 0 to \u2018N\u2019 whose binary representation is not present in list \u2018BINARYNUMS\u2019 is called \u2018Missing Integer\u2019.</h4>\n\n<h4 id=\"your-task-is-to-find-the-binary-representation-of-that-missing-integer-you-should-return-a-string-that-represents-this-missing-integer-in-binary-without-leading-zeros\">Your task is to find the binary representation of that \u2018Missing Integer\u2019. You should return a string that represents this \u2018Missing Integer\u2019 in binary without leading zeros.</h4>\n\n<h4 id=\"note\">Note</h4>\n\n<pre><code>1. There will be no leading zeros in any string in the list \u2018BINARYNUMS\u2019.\n</code></pre>\n\n<h4 id=\"example\">Example:</h4>\n\n<pre><code>Consider N = 5 and the list \u2018binaryNums\u2019=  [\u201c0\u201d, \u201c01\u201d, \u201c010\u201d, \u201c100\u201d, \u201c101\u201d].  This list consists of the binary representation of numbers [0, 1, 2, 4, 5]. Clearly, the missing number is 3 and its binary representation will be \u201c11\u201d. So you should return string \u201c11\u201d.\n</code></pre>\n\n<h5 id=\"input-format\">Input format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases. then \u2018T\u2019 test cases follow.\n\nThe first line contains single integers \u2018N\u2019 represent the size of the list \u2018BINARYNUMS\u2019.\n\nThe second line contains \u2018N\u2019 space-separated string representing the list \u2018BINARYNUMS\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case, print a single line containing a single string that represents this \u2018Missing Integer\u2019 in binary without leading zeros.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 50\n1 &lt;= N &lt;= 10 ^ 4\n\nWhere \u2018T\u2019 is the total number of test cases and \u2018N\u2019 is the size of list \u2018BINARYNUMS\u2019\n\nTime limit: 1 sec.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n1\n1\n5\n0 01 010 100 101\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>0\n11\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1:</h5>\n\n<pre><code>Test case 1:\nThere is only one string in \u2018BINARYNUMS\u2019 and that is \u201c1\u201d, which represents integer 1. Clearly, Missing Integer is 0, and its binary representation is also \u201c0\u201d.       \n\nTest case 2:\nSee the problem statement for an explanation.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n3\n0 10 11\n8\n0 1 10 11 100 101 110 111\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>1\n1000\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 5,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of distinct binary strings `binaryNums` of size `N`, representing integers from 0 to `N` (inclusive) except for one missing integer, find the binary representation of the missing integer. Return the binary string representation of this missing integer without leading zeros.",
                "constraints": [
                    "1 <= T <= 50",
                    "1 <= N <= 10^4",
                    "No leading zeros in any string in the list \u2018BINARYNUMS\u2019."
                ],
                "testcases": [
                    {
                        "input": "n = 1, nums = [\"1\"]",
                        "output": "0",
                        "explanation": "The input list contains only \"1\", which represents the integer 1. The missing integer is 0, and its binary representation is \"0\"."
                    },
                    {
                        "input": "n = 5, nums = [\"0\", \"01\", \"010\", \"100\", \"101\"]",
                        "output": "11",
                        "explanation": "The list contains the binary representations of 0, 1, 2, 4, and 5.  The missing integer is 3, and its binary representation is \"11\"."
                    },
                    {
                        "input": "n = 3, nums = [\"0\", \"10\", \"11\"]",
                        "output": "1",
                        "explanation": "The list contains binary representations of 0, 2, and 3. The missing integer is 1, and its binary representation is \"1\"."
                    },
                    {
                        "input": "n = 8, nums = [\"0\", \"1\", \"10\", \"11\", \"100\", \"101\", \"110\", \"111\"]",
                        "output": "1000",
                        "explanation": "The list contains the binary representations of integers 0-7. The missing integer is 8 and its binary representation is \"1000\"."
                    },
                    {
                        "input": "n = 2, nums = [\"0\",\"1\"]",
                        "output": "10",
                        "explanation": "The list contains the binary representations of 0 and 1. The missing integer is 2 and its binary representation is \"10\"."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can sorting help?</p>",
            "<p>How can you track whether an integer is present in the given list or not?</p>",
            "<p>Can XORing the integers will help us lead to the answer?</p>",
            "<p>For each position count how many integers between 0 to \u2018N\u2019 have a bit set at this position.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}