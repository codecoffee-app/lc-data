{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 23327,
            "title": "Missing Number",
            "titleSlug": "missing-number_6680467",
            "content": "<h4 id=\"given-an-array-a-of-size-n-1-with-elements-of-range-1-to-n-the-array-does-not-contain-any-duplicates-your-task-is-to-find-the-missing-number\">Given an array <em><strong>\u2018a\u2019</strong></em> of size <em><strong>\u2018n\u2019</strong></em>-1 with elements of range 1 to \u2018n\u2019. The array does not contain any duplicates. Your task is to find the missing number.</h4>\n\n<p><br></p>\n\n<h5 id=\"for-example\">For example:</h5>\n\n<pre><code>Input:\n&#39;a&#39; = [1, 2, 4, 5], &#39;n&#39; = 5\n\nOutput :\n3\n\nExplanation: 3 is the missing value in the range 1 to 5.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>First-line contains an integer \u2018n\u2019.\nThe second line has \u2018n\u2019-1 integers denoting the array \u2018a\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:-</h5>\n\n<pre><code>You must return the only missing integer from 1 to \u2018n\u2019\\\n</code></pre>\n\n<p>.</p>\n\n<h5 id=\"note\">Note:-</h5>\n\n<pre><code>You don\u2019t need to print anything. Just implement the given function.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>4 \n1 2 3\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>4\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1:</h5>\n\n<pre><code>4 is the missing value in the range 1 to 4.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>8\n1 2 3 5 6 7 8\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>4\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-2\">Explanation Of Sample Input 2:</h5>\n\n<pre><code>4 is the missing value in the range 1 to 8.\n</code></pre>\n\n<h5 id=\"expected-time-complexity\">Expected time complexity:</h5>\n\n<pre><code>The expected time complexity is O(n).\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= &#39;n&#39; &lt;= 10^6 \n1 &lt;= &#39;a&#39;[i] &lt;= &#39;n&#39;\nTime Limit: 1 sec\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 93,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array 'a' of size 'n'-1 containing distinct elements from 1 to 'n', find the missing number within the range 1 to 'n'.",
                "constraints": [
                    "1 <= 'n' <= 10^6",
                    "1 <= 'a'[i] <= 'n'",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "4\n1 2 3",
                        "output": "4",
                        "explanation": "The array contains 1, 2, and 3. The missing number in the range 1 to 4 is 4."
                    },
                    {
                        "input": "8\n1 2 3 5 6 7 8",
                        "output": "4",
                        "explanation": "The array contains 1, 2, 3, 5, 6, 7, and 8. The missing number in the range 1 to 8 is 4."
                    },
                    {
                        "input": "5\n1 2 4 5",
                        "output": "3",
                        "explanation": "The array contains 1, 2, 4, and 5. The missing number in the range 1 to 5 is 3."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><strong>A[i] ranges from 1 to N.</strong></p>",
            "<p><strong>Find the number using the sum of the first \u2018N\u2019 natural numbers.</strong></p>",
            "<p><strong>Use the XOR property to find the missing number.</strong></p>",
            "<p><strong>Find the number using the sum of the first \u2018N\u2019 natural numbers.</strong></p>",
            "<p><strong>Use the index of the array to mark an element as visited.</strong></p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": [
            {
                "lang": "cpp",
                "full_func": "/*\r\n    Time Complexity: O( N )\r\n    Space Complexity: O(1)\r\n\r\n    Where 'N' is the given input.\r\n*/\r\n\r\nint missingNumber(vector<int>&a, int N) {\r\n\r\n    // Mark the elements already present in the array,\r\n    // by making the elements negative at the index of array.\r\n    for (int i = 0; i < N - 1; i++) {\r\n        int index = abs(a[i]) - 1;\r\n        if (index < N - 1) {\r\n            a[index] = abs(a[index]) * -1;\r\n        }\r\n    }\r\n\r\n    // Any index containing positive number,\r\n    // is the missing number.\r\n    int reqNumber = N;\r\n    for (int i = 0; i < N - 1; i++) {\r\n        if (a[i] >= 0) {\r\n            reqNumber = i + 1;\r\n            break;\r\n        }\r\n    }\r\n\r\n    // Return the missing number.\r\n    return reqNumber;\r\n}",
                "lang_text": "cpp"
            },
            {
                "lang": "python",
                "full_func": "\"\"\"\n    Time Complexity: O( N )\n    Space Complexity: O( 1 )\n\n    Where 'N' is the given input.\n\"\"\"\nfrom typing import *\n\ndef missingNumber(a : List[int], N : int) -> int:\n    \n    # Mark the elements already present in the array,\n    # by making the elements negative at the index of array.\n    for i in range(N - 1):\n        index = abs(a[i]) - 1\n\n        if index < N - 1:\n            a[index] = abs(a[index]) * (-1)\n\n    # Any index containing positive number,\n    # is the missing number.\n    reqNumber = N\n\n    for i in range(N - 1):\n        if a[i] >= 0:\n            reqNumber = i + 1\n            break\n\n    return reqNumber",
                "lang_text": "py"
            },
            {
                "lang": "java",
                "full_func": "/*\r\n    Time Complexity: O( N )\r\n    Space Complexity: O(1)\r\n\r\n    Where 'N' is the given input.\r\n*/\r\npublic class Solution {\r\n    public static int missingNumber(int []a, int N) {\r\n        // Mark the elements already present in the array,\r\n        // by making the elements negative at the index of array.\r\n        for (int i = 0; i < N - 1; i++) {\r\n            int index = Math.abs(a[i]) - 1;\r\n            if (index < N - 1) {\r\n                a[index] = Math.abs(a[index]) * -1;\r\n            }\r\n        }\r\n\r\n        // Any index containing positive number,\r\n        // is the missing number.\r\n        int reqNumber = N;\r\n        for (int i = 0; i < N - 1; i++) {\r\n            if (a[i] >= 0) {\r\n                reqNumber = i + 1;\r\n                break;\r\n            }\r\n        }\r\n\r\n        // Return the missing number.\r\n        return reqNumber;\r\n    }\r\n}",
                "lang_text": "java"
            }
        ],
        "platform": "CODESTUDIO"
    }
}