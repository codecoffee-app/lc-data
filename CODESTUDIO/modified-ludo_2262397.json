{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 14787,
            "title": "Modified Ludo",
            "titleSlug": "modified-ludo_2262397",
            "content": "<h4 id=\"you-are-given-a-board-of-n-size-you-can-roll-a-dice-and-jump-from-position-i-to-i-1-i-2-i-3-i-4-i-5-and-i-6-respectively-an-array-connections-of-size-m-is-also-provided-where-you-can-visit-from-the-point-connections-i-0-to-connections-i-1-directly-your-task-is-to-find-the-minimum-number-of-dice-rolls-to-reach-from-1-to-n-on-the-board\">You are given a board of\u2018 \u2018N\u2019 size. You can roll a dice and jump from position \u2018i\u2019 to i + 1, i + 2, i + 3, i + 4, i + 5, and i + 6 respectively. An array  \u2018connections\u2019 of size \u2018M\u2019 is also provided where you can visit from the point \u2018connections[i][0]\u2019 to \u2018connections[i][1]\u2019 directly. Your task is to find the minimum number of dice rolls to reach from 1 to \u2018N\u2019 on the board.</h4>\n\n<h5 id=\"for-example\">For example:</h5>\n\n<pre><code>Consider &#39;N&#39; = 10, &#39;connections&#39; = [[2, 10]]\n\nWe can go from 1 -&gt; 2 with the help of dice (the number of operations increases by 1).\nWe can go from 2 -&gt; 10 as 2 is directly connected to 10. No operation is required for this.\nHence the answer is 1.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains an integer &#39;T&#39; which denotes the number of test cases.\n\nThe first line of each test case contains a single integer \u2018N\u2019 denoting the size of the board.\n\nThe second line contains a single integer \u2018M\u2019 denoting the size of the array \u2018connections\u2019.\n\nEach of the next \u2018M\u2019 lines contains two space-separated integers representing the elements of the array \u2018connections\u2019. \n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print a single integer representing the minimum number of dice rolls to reach from 1 to \u2018N\u2019 on the board.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You do not need to input or print anything, as it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 10 ^ 6\n1 &lt;= M &lt;= 10 ^ 6\n1 &lt;= connections[i][0], connections[i][1] &lt;= N \n\nTime limit: 1 sec\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1:</h4>\n\n<pre><code>2\n10\n1\n2 10\n15\n2\n2 8\n6 9\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1:</h4>\n\n<pre><code>1\n2\n</code></pre>\n\n<h4 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1:</h4>\n\n<pre><code>Test case 1:\nWe can go from 1 -&gt; 2 with the help of dice (the number of operations increases by 1).\nWe can go from 2 -&gt; 10 as 2 is directly connected to 10. No operation is required for this.\nHence the answer is 1.\n\nTest case 2:\nWe can go from 1-&gt;6 with the help of dice (the number of operations increases by 1).\nWe can go from 6-&gt;9 as 6 is directly connected to 9. No operation is required for this.\nWe can go from 9-&gt;15 with the help of dice (the number of operations increases by 1)\nHence the answer is 2.\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2:</h4>\n\n<pre><code>2\n5\n2\n2 5 \n3 5\n6\n1\n1 6\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2:</h4>\n\n<pre><code>1\n0\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 9,
            "dislikes": "NA",
            "rephrased": {
                "body": "You are given a board of size N. You can move from position i to i+1, i+2, i+3, i+4, i+5, or i+6 by rolling a dice. Additionally, you are given an array 'connections' where connections[i][0] can directly lead to connections[i][1] without rolling a dice.  Your task is to find the minimum number of dice rolls required to reach position N from position 1.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10 ^ 6",
                    "1 <= M <= 10 ^ 6",
                    "1 <= connections[i][0], connections[i][1] <= N",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "10\n1\n2 10",
                        "output": "1",
                        "explanation": "Start at position 1. Roll the dice once to reach position 2. Then, use the direct connection from 2 to 10. Therefore, the minimum number of dice rolls is 1."
                    },
                    {
                        "input": "15\n2\n2 8\n6 9",
                        "output": "2",
                        "explanation": "Start at position 1. Roll the dice to reach position 6 (1 roll). Use the direct connection from 6 to 9. Roll the dice again from 9 to reach position 15 (1 roll). Total dice rolls: 2."
                    },
                    {
                        "input": "5\n2\n2 5\n3 5",
                        "output": "1",
                        "explanation": "Start at position 1. Roll the dice once to reach position 2. Use the direct connection from 2 to 5. Thus, only 1 dice roll is needed."
                    },
                    {
                        "input": "6\n1\n1 6",
                        "output": "0",
                        "explanation": "There is a direct connection from 1 to 6, so no dice rolls are required."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to use a depth-first search approach.</p>",
            "<p>Try to think of an approach using queue?&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Depth-first Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Breadth-first Search",
                "slug": "breadth-first-search"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}