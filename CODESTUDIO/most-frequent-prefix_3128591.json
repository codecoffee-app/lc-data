{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 16367,
            "title": "Most Frequent Prefix",
            "titleSlug": "most-frequent-prefix_3128591",
            "content": "<h4 id=\"you-are-given-a-string-str-your-task-is-to-return-a-prefix-among-all-the-prefixes-of-str-that-occurs-the-maximum-number-of-times-as-a-substring-in-str-in-case-of-a-tie-return-the-longest-prefix\">You are given a string \u2018STR\u2019. Your task is to return a prefix among all the prefixes of \u2018STR\u2019 that occurs the maximum number of times as a substring in \u2018STR\u2019. In case of a tie, return the longest prefix.</h4>\n\n<h5 id=\"for-example\">For example:</h5>\n\n<pre><code>You are given \u2018STR\u2019 = \u201cababcd\u201d. Then our answer will be \u201cab\u201d. The prefixes \u201ca\u201d and \u201cab\u201d occur the maximum number of times, i.e., 2. As the prefix \u201cab\u201d is longer than \u201ca\u201d so, our answer will be \u201cab\u201d.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains an integer &#39;T&#39; which denotes the number of test cases.\n\nThe first line of each test case contains a string denoting the input string.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print the prefix among all the prefixes of \u2018STR\u2019 that occurs the maximum number of times as a substring in \u2018STR\u2019.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10 \n1 &lt;= STR.LENGTH  &lt;= 5000\n\u2018STR\u2019 contains only lowercase English letters.\n\nTime limit: 1 sec\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to input or print anything, as it has already been taken care of. Just implement the given function.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\nababcd\nabcdaabcd\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>ab\na\n</code></pre>\n\n<h5 id=\"explanation\">Explanation:</h5>\n\n<pre><code>For the first test case, you are given \u2018STR\u2019 = \u201cababcd\u201d. Then our answer will be \u201cab\u201d. The prefixes \u201ca\u201d and \u201cab\u201d occur the maximum number of times, i.e., 2. As the prefix \u201cab\u201d is longer than \u201ca\u201d so, our answer will be \u201cab\u201d.\n\nFor the second test case, you are given \u2018STR\u2019 = \u201cabcdaabcd\u201d. Then our answer will be \u201ca\u201d. The prefix \u201ca\u201d occur the maximum number of times, i.e., 3. \n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\nabcdbcd\nabcabcc\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>abcdbcd\nabc\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 9,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string `str`, determine the prefix that appears most frequently as a substring within `str`. If multiple prefixes occur with the same maximum frequency, return the longest such prefix.",
                "constraints": [
                    "1 <= T <= 10, where T is the number of test cases.",
                    "1 <= STR.LENGTH <= 5000",
                    "STR contains only lowercase English letters."
                ],
                "testcases": [
                    {
                        "input": "str = \"ababcd\"",
                        "output": "ab",
                        "explanation": "The prefixes \"a\" and \"ab\" occur the maximum number of times, i.e., 2.  \"ab\" is longer than \"a\", so the answer is \"ab\"."
                    },
                    {
                        "input": "str = \"abcdaabcd\"",
                        "output": "a",
                        "explanation": "The prefix \"a\" occurs the maximum number of times, i.e., 3."
                    },
                    {
                        "input": "str = \"abcdbcd\"",
                        "output": "abcdbcd",
                        "explanation": "The prefix \"abcdbcd\" occurs once, and all other prefixes occur less than once or zero times."
                    },
                    {
                        "input": "str = \"abcabcc\"",
                        "output": "abc",
                        "explanation": "The prefix 'a' appears 3 times. The prefix 'ab' appears 2 times. The prefix 'abc' appears 2 times. Because 'abc' is longer than 'a' and they both appear with maximum frequency, the answer is 'abc'."
                    },
                    {
                        "input": "str = \"aaaaa\"",
                        "output": "aaaaa",
                        "explanation": "The prefix 'a' appears 5 times. 'aa' appears 4 times. 'aaa' appears 3 times. 'aaaa' appears twice, and 'aaaaa' appears once. The longest one is 'a', and since frequency will be measured starting with prefix of length 1, therefore the last prefix will be the longest prefix (here, the complete string itself), which appears just once."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Find the count of every prefix.</p>",
            "<p>Use the fact that the answer will always contain the first character.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}