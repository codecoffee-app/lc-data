{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 14216,
            "title": " Move Zeroes to End",
            "titleSlug": "move-zeroes-to-end_2094816",
            "content": "<h4 id=\"given-an-unsorted-array-of-integers-you-have-to-move-the-array-elements-in-a-way-such-that-all-the-zeroes-are-transferred-to-the-end-and-all-the-non-zero-elements-are-moved-to-the-front-the-non-zero-elements-must-be-ordered-in-their-order-of-appearance\">Given an unsorted array of integers, you have to move the array elements in a way such that all the zeroes are transferred to the end, and all the non-zero elements are moved to the front. The non-zero elements must be ordered in their order of appearance.</h4>\n\n<p>For example, if the input array is: [0, 1, -2, 3, 4, 0, 5, -27, 9, 0], then the output array must be:\n [1, -2, 3, 4, 5, -27, 9, 0, 0, 0].</p>\n\n<h4 id=\"expected-complexity-try-doing-it-in-o-n-time-complexity-and-o-1-space-complexity-here-n-is-the-size-of-the-array\">Expected Complexity: Try doing it in O(n) time complexity and O(1) space complexity. Here, \u2018n\u2019 is the size of the array.</h4>\n\n<h4 id=\"input-format\">Input format :</h4>\n\n<pre><code>The first line of input contains a single integer \u2018T\u2019 representing the number of test cases.      \n\nThe first line of each test case contains a single integer \u2018N\u2019 representing the size of the array. The second line of each test case contains \u2018N\u2019 integers representing the elements of the array.\n</code></pre>\n\n<h4 id=\"output-format\">Output Format :</h4>\n\n<pre><code>For each test case, modify the input array and print the output in a new line\n</code></pre>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>You don\u2019t need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints :</h4>\n\n<pre><code>1 &lt;= T &lt;= 50 \n1 &lt;= N &lt;= 10^6\n-10000 &lt;= A[i] &lt;= 10000\n\nWhere \u2018T\u2019 is the number of test cases, \u2018N\u2019 is the size of the array, A[i] is the value of the element present at the ith index.\n</code></pre>\n\n<p>Time Limit:1sec</p>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1\n7\n2 0 4 1 3 0 28\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>2 4 1 3 28 0 0\n</code></pre>\n\n<h5 id=\"the-explanation-for-sample-output-1\">The explanation for Sample Output 1 :</h5>\n\n<pre><code>All the zeros are moved towards the end of the array, and the non-zero elements are pushed towards the left, maintaining their order with respect to the original array.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\n5\n0 3 0 2 0\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>3 2 0 0 0\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 3,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an unsorted array of integers, rearrange the elements such that all zeros are moved to the end of the array, while maintaining the original order of the non-zero elements at the beginning. The solution should aim for O(n) time complexity and O(1) space complexity.",
                "constraints": [
                    "1 <= T <= 50 (Number of test cases)",
                    "1 <= N <= 10^6 (Size of the array)",
                    "-10000 <= A[i] <= 10000 (Value of the element at the ith index)",
                    "Time Limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "1\n7\n2 0 4 1 3 0 28",
                        "output": "2 4 1 3 28 0 0",
                        "explanation": "The zeros are moved to the end of the array, and the non-zero elements are moved to the front, preserving their initial order."
                    },
                    {
                        "input": "1\n5\n0 3 0 2 0",
                        "output": "3 2 0 0 0",
                        "explanation": "The zeros are relocated to the end, while the non-zero values (3 and 2) are positioned at the beginning, maintaining their respective order."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}