{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12760,
            "title": "Movies Time",
            "titleSlug": "movies-time_1474980",
            "content": "<h4 id=\"bucky-and-steve-love-movies-due-to-lockdown-everywhere-they-have-enough-time-to-see-movies-together-so-they-decided-to-rent-the-movies-online-to-watch-them-but-due-to-some-policies-of-the-movie-s-website-they-cannot-rent-the-same-movie-together-so-they-decided-to-watch-it-separately\">Bucky and Steve love movies. Due to lockdown everywhere, they have enough time to see movies together. So they decided to rent the movies online to watch them. But due to some policies of the movie\u2019s website, they cannot rent the same movie together. So they decided to watch it separately.</h4>\n\n<h4 id=\"they-choose-n-movies-to-watch-the-duration-of-each-movie-is-given-in-a-list-of-movies-they-want-to-finish-the-set-of-n-movies-as-soon-as-possible-you-have-to-find-the-minimum-time-they-need-to-watch-n-movies-if-both-cannot-watch-the-same-movie-at-the-same-time\">They choose \u2018N\u2019 movies to watch. The duration of each movie is given in a list of \u2018MOVIES\u2019. They want to finish the set of \u2018N\u2019 movies as soon as possible. You have to find the minimum time they need to watch \u2018N\u2019 movies if both cannot watch the same movie at the same time.</h4>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 representing the number of test cases.\n\nThe first line of each test case contains an integer \u2018N\u2019 representing the number of movies.\n\nThe second line contains \u2018N\u2019 space-separated integers denoting the time required to watch these \u2018N\u2019 movies.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print the minimum time required for Bucky and Steve to watch \u2018N\u2019 movies under the given conditions.\n\nOutput for every test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don\u2019t need to print anything; It has already been taken care of.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 50\n1 &lt;= N &lt;= 10^6\n1 &lt;= MOVIES[i] &lt;= 10^9\n\nWhere &#39;MOVIES[i]\u2019 is the duration of the \u2018i-th\u2019 movie.\n\nTime limit: 1 sec.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n3\n2 3 8\n3\n2 3 4\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>16\n9\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1 :</h5>\n\n<pre><code>Here in the first test case, Bucky will start watching a movie of 8 minutes while Steve will watch 2 and 3 minutes. So it will take 8 minutes as both are watching simultaneously, then this process will be reversed. So it takes a total of 8+8 = 16 minutes.\n\nIn the second test case Bucky will watch movies in the order 1 -&gt; 2 -&gt; 3 and Steve will watch movies in the order 3 -&gt; 1 -&gt; 2. When Bucky will end his 3rd movie then Steve\u2019s movie will also be finished.\nSo the answer will be 2+3+4 = 9.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n3\n7 6 4\n4\n1 4 2 6\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>17\n13\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -10,
            "dislikes": "NA",
            "rephrased": {
                "body": "Bucky and Steve, stuck at home due to lockdown, decide to watch N movies. They rent the movies online but, due to website restrictions, can't watch the same movie simultaneously. Their goal is to minimize the total time taken to watch all N movies, with each movie having a specific duration.",
                "constraints": [
                    "1 <= T <= 50",
                    "1 <= N <= 10^6",
                    "1 <= MOVIES[i] <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "3\n2 3 8",
                        "output": "16",
                        "explanation": "Bucky watches the 8-minute movie while Steve watches the 2-minute and 3-minute movies concurrently. This takes 8 minutes. Then roles reverse, resulting in a total time of 8 + 8 = 16 minutes."
                    },
                    {
                        "input": "3\n2 3 4",
                        "output": "9",
                        "explanation": "The total duration of all movies is 2 + 3 + 4 = 9. Since they can watch movies concurrently, the minimum time required is the sum of durations, assuming they can always schedule movies such that no time is wasted."
                    },
                    {
                        "input": "3\n7 6 4",
                        "output": "17",
                        "explanation": "A possible optimal schedule is for one person to watch the movie of duration 7 while the other watches the duration 6 and 4. This would take 7 time units. then the first person watches the 6 and 4 while the second person watches the 7. Which is 10 then the maximum is 7,10 so its 7 + 10 = 17."
                    },
                    {
                        "input": "4\n1 4 2 6",
                        "output": "13",
                        "explanation": "Total duration = 1 + 4 + 2 + 6 = 13. One can watch 6, and other one watches 1, 4, 2 = 7. Total duration = 6+7=13."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you think of a solution by finding a pattern to minimize the time.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}