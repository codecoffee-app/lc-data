{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10973,
            "title": "N-ary tree Level Order Traversal",
            "titleSlug": "n-ary-tree-level-order-traversal_1281306",
            "content": "<h4 id=\"you-are-given-an-n-ary-tree-where-every-node-has-at-most-n-child-nodes-you-need-to-find-the-level-order-traversal-of-this-tree\">You are given an N-ary tree where every node has at most \u2018N\u2019 child nodes. You need to find the level order traversal of this tree</h4>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>Note that the level order traversal must not contain any null values, simply return the tree in level order.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains an integer &#39;T&#39; which denotes the number of test cases or queries to be run. Then the test cases are as follows.\n\nThe first line of each test case contains elements of the N-ary tree in the level order form. The line consists of values of nodes separated by a single space. In case a node is changed, we take -1. To get next node\nThe first not-null node(of the previous level) is treated as the parent of the first node of the current level. The second not-null node (of the previous level) is treated as the parent node for the next nodes of the current level and so on.\n\nThe input ends when all nodes at the last level are null(-1).\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>The above format was just to provide clarity on how the input is formed for a given tree. \nThe sequence will be put together in a single line separated by a single space. Hence, for the below-depicted tree, the input will be given as:\n1 2 3 4 -1 5 6 -1 -1 -1 -1 -1\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/n-ary-tree-level-order-traversal-8653.png\"></img></p>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, you need to print the level order traversal of the tree.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You don\u2019t need to print anything; It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= K &lt;= 10^4\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1\n1 2 3 4 -1 5 6 -1 -1 -1 -1 -1 \n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>1 2 3 4 5 6\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of sample input 1:</h5>\n\n<pre><code>In the first test case, \nGiven tree:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/n-ary-tree-level-order-traversal-8653.png\"></img></p>\n\n<pre><code>The level order traversal of the above tree is: 1 2 3 4 5 6 \n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n1 2 3 4 5 -1 6 7 8 -1 9 -1 -1 -1 -1 -1 -1 -1\n1 2 -1 -1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>1 2 3 4 5 6 7 8 9\n1 2\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-2\">Explanation of sample input 2:</h5>\n\n<pre><code>In the first test case, \nGiven tree:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/n-ary-tree-level-order-traversal-1-8651.png\"></img></p>\n\n<pre><code>The level order traversal of the above tree is: 1 2 3 4 5 6 7 8 9\n\nIn the second test case, \nGiven tree:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/n-ary-tree-level-order-traversal-2-8652.png\"></img></p>\n\n<pre><code>The level order traversal of the above tree is: 1 2\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 0,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an N-ary tree where each node has at most N children, determine the level order traversal of the tree. The level order traversal should not include any null values. Return the node values in level order.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= K <= 10^4",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "1 2 3 4 -1 5 6 -1 -1 -1 -1 -1",
                        "output": "1 2 3 4 5 6",
                        "explanation": "The input represents the N-ary tree shown in the problem description. The level order traversal is [1, 2, 3, 4, 5, 6]."
                    },
                    {
                        "input": "1 2 3 4 5 -1 6 7 8 -1 9 -1 -1 -1 -1 -1 -1 -1",
                        "output": "1 2 3 4 5 6 7 8 9",
                        "explanation": "The input represents the N-ary tree shown in the problem description. The level order traversal is [1, 2, 3, 4, 5, 6, 7, 8, 9]."
                    },
                    {
                        "input": "1 2 -1 -1",
                        "output": "1 2",
                        "explanation": "The input represents the N-ary tree shown in the problem description. The level order traversal is [1, 2]."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you think of using a queue?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Breadth-first Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Trees",
                "slug": "trees"
            },
            {
                "name": "Stacks & Queues",
                "slug": "stacks-&-queues"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}