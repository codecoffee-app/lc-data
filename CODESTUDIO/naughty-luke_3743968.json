{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 16977,
            "title": "Naughty Luke",
            "titleSlug": "naughty-luke_3743968",
            "content": "<h4 id=\"luke-a-naughty-kid-went-to-a-museum-one-day-he-sees-an-ancient-grid-a-consisting-of-n-rows-and-n-columns-each-cell-of-a-grid-is-coloured-with-either-black-or-white\">Luke, a naughty kid, went to a museum one day. He sees an ancient grid &#39;A&#39; consisting of &#39;N&#39; rows and &#39;N&#39; columns. Each cell of a grid is coloured with either black or white.</h4>\n\n<h4 id=\"luke-performs-two-sequential-operations-on-the-grid-a-first-he-twists-the-grid-vertically-around-the-center-after-that-as-the-second-operation-he-changes-the-colours-of-all-the-cells-if-the-cell-is-white-it-is-changed-to-black-and-vice-versa\">Luke performs two sequential operations on the grid \u2018A\u2019. First, he twists the grid vertically around the center. After that, as the second operation, he changes the colours of all the cells. If the cell is white, it is changed to black and vice-versa.</h4>\n\n<h4 id=\"the-following-drawings-show-the-twist-operation-and-the-colour-change-operation-respectively\">The following drawings show the twist operation and the colour change operation, respectively :</h4>\n\n<p><img src=\"https://files.codingninjas.in/image1-14313.png\" alt=\"\"></p>\n\n<p><img src=\"https://files.codingninjas.in/image2-14318.png\" alt=\"\"></p>\n\n<h4 id=\"the-black-colour-is-represented-by-1-and-white-colour-is-represented-by-0-here-you-have-to-print-the-final-grid\">The black colour is represented by &#39;1&#39; and white colour is represented by &#39;0&#39; here. You have to print the final grid.</h4>\n\n<h5 id=\"example\">Example :</h5>\n\n<pre><code>&#39;N&#39; = 2, &#39;A&#39; = { {0, 1}, {0, 0} }.\n\nAfter twisting, the grid looks like :\n&#39;A&#39; =  { {1, 0}, {0, 0} }.\n\nAfter changing the colours, the grid looks like :\n&#39;A&#39; =  { {0, 1}, {1, 1} }.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains an integer &#39;T&#39;, which denotes the number of test cases to be run. Then the test cases follow.\n\nThe first line of each test case contains an integer &#39;N&#39; denoting the dimension of the grid.\n\nThe next &#39;N&#39; lines contain &#39;N&#39; space-separated integers denoting the colour of a cell.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case, print &#39;N&#39; lines containing &#39;N&#39; space-separated integers denoting the colour of each cell of the final grid.\n\nPrint the output of each test case in a new line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don\u2019t need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 100.\n\nSum of &#39;N&#39; ^ 2 over all the test cases is &lt;= 10 ^ 4.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n3\n1 1 0\n0 1 1\n1 0 0\n1\n0\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>1 0 0\n0 0 1\n1 1 0\n1\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1 :</h5>\n\n<pre><code>For test 1:\nAfter twisting the grid looks like : { {0, 1, 1}, {1, 1, 0}, {0, 0, 1} }.\nAfter changing the colour of cells the grid looks like : { {1, 0, 0}, {0, 0, 1}, {1, 1, 0} }.\n\nFor test 2:\nAfter twisting the grid looks like : { {0} }.\nAfter changing the colour of cells the grid looks like : { {1} }.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n3\n1 1 1\n1 1 1\n1 1 1\n4\n1 1 1 1\n0 0 0 0\n1 1 1 1\n0 0 0 0\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>0 0 0\n0 0 0\n0 0 0\n0 0 0 0\n1 1 1 1\n0 0 0 0\n1 1 1 1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 7,
            "dislikes": "NA",
            "rephrased": {
                "body": "Luke finds an N x N grid 'A' where each cell is either black (1) or white (0). He performs two operations:\n\n1.  **Vertical Twist:** Twists the grid vertically around its center.\n2.  **Color Inversion:** Changes white cells to black and black cells to white.\n\nYour task is to determine the final state of the grid after these operations.",
                "constraints": [
                    "1 <= T <= 10 (Number of test cases)",
                    "1 <= N <= 100 (Grid dimension)",
                    "Sum of N^2 over all test cases <= 10^4",
                    "Time Limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "2\n3\n1 1 0\n0 1 1\n1 0 0\n1\n0",
                        "output": "1 0 0\n0 0 1\n1 1 0\n1",
                        "explanation": "Test Case 1:\nInitial Grid: { {1, 1, 0}, {0, 1, 1}, {1, 0, 0} }\nAfter Twist: { {0, 1, 1}, {1, 1, 0}, {0, 0, 1} }\nAfter Inversion: { {1, 0, 0}, {0, 0, 1}, {1, 1, 0} }\n\nTest Case 2:\nInitial Grid: { {0} }\nAfter Twist: { {0} }\nAfter Inversion: { {1} }"
                    },
                    {
                        "input": "2\n3\n1 1 1\n1 1 1\n1 1 1\n4\n1 1 1 1\n0 0 0 0\n1 1 1 1\n0 0 0 0",
                        "output": "0 0 0\n0 0 0\n0 0 0\n0 0 0 0\n1 1 1 1\n0 0 0 0\n1 1 1 1",
                        "explanation": "Test Case 1:\nInitial Grid: { {1, 1, 1}, {1, 1, 1}, {1, 1, 1} }\nAfter Twist: { {1, 1, 1}, {1, 1, 1}, {1, 1, 1} }\nAfter Inversion: { {0, 0, 0}, {0, 0, 0}, {0, 0, 0} }\n\nTest Case 2:\nInitial Grid: { {1, 1, 1, 1}, {0, 0, 0, 0}, {1, 1, 1, 1}, {0, 0, 0, 0} }\nAfter Twist: { {0, 0, 0, 0}, {1, 1, 1, 1}, {0, 0, 0, 0}, {1, 1, 1, 1} }\nAfter Inversion: { {1, 1, 1, 1}, {0, 0, 0, 0}, {1, 1, 1, 1}, {0, 0, 0, 0} }"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Simulate the problem statement.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Matrices (2D Arrays)",
                "slug": "matrices-(2d-arrays)"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}