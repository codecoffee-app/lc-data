{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10628,
            "title": "Next Greater Node In Linked List",
            "titleSlug": "next-greater-node-in-linked-list_1262083",
            "content": "<h4 id=\"ninjas-are-often-known-for-their-superhuman-strength-and-valour-in-a-given-set-of-linked-ninja-villages-of-different-clans-their-strongest-ninjas-want-to-know-whether-there-exists-a-stronger-ninja-in-the-nearest-village-linked-ahead-of-their-village-in-order-to-be-prepared-for-threats-and-enemies\">Ninjas are often known for their superhuman strength and valour. In a given set of linked ninja villages of different clans, their strongest ninjas want to know whether there exists a stronger ninja in the nearest village linked ahead of their village in order to be prepared for threats and enemies.</h4>\n\n<h4 id=\"you-are-given-the-villages-in-the-form-of-a-linked-list-consisting-of-n-integers-each-integer-representing-the-strength-of-the-strongest-ninja-in-their-village-the-head-of-the-linked-list-would-be-pointing-to-the-strength-of-the-strongest-ninja-in-the-first-village-which-would-be-the-first-node\">You are given the villages in the form of a linked list consisting of N integers each integer representing the strength of the strongest ninja in their village. The head of the linked list would be pointing to the strength of the strongest ninja in the first village (which would be the first node).</h4>\n\n<h4 id=\"the-nodes-in-the-list-can-be-numbered-as-node-1-node-2-and-so-on-each-node-may-have-a-next-larger-value-a-village-with-a-stronger-ninja\">The nodes in the list can be numbered as &quot;node 1&quot;, &quot;node 2&quot; and so on. Each node may have a next larger value (a village with a stronger ninja)</h4>\n\n<h4 id=\"for-node-i-next-larger-node-i-is-the-node-j-val-such-that-j-i-and-node-j-val-node-i-val-and-j-is-the-smallest-possible-choice-if-such-a-j-does-not-exist-the-next-larger-value-is-0\">For &quot;node i&quot; , next larger(&quot;node i&quot;) is the &quot;node j.val&quot; such that j &gt; i and &quot;node j.val&quot; &gt; &quot;node i.val&quot; , and j is the smallest possible choice.  If such a j does not exist, the next larger value is 0.</h4>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>Your task is to return an array of integers answer, \nwhere ans[i] = next_larger(node_{i+1}).\n</code></pre>\n\n<h5 id=\"for-example\">For Example :</h5>\n\n<pre><code>Input: 2 - &gt;1 -&gt; 5\nOutput: ans = [5,5,0]\n\nHere for the first node village, the village with a stronger ninja is present with a strength of 5, therefore ans[0] = 5.\nSimilarly ans[1] = 5 and since there are no villages after node 3 with stronger ninjas, therefore, ans[2] = 0\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of input contains a single integer \u2018T\u2019 denoting the number of test cases.\n\nThe second line contains single space-separated integers, denoting the elements of the linked list with -1 being the last element denoting the end of the list (or null element).\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>Return an array of integers answer, where ans[i] = next_larger(node_{i+1}).\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= N &lt;= 5000\n1 &lt;= node.val &lt;=10^9\n\nwhere &#39;N&#39; is the size of the linked list and &#39;node.value&#39; is the value of a node.\n\nTime Limit : 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2 \n2 7 4 3 5 -1\n1 7 5 1 9 2 5 1 -1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>7 0 5 5 0\n7 9 9 9 0 5 0 0\n</code></pre>\n\n<h4 id=\"explanation-for-sample-1\">Explanation for Sample 1 :</h4>\n\n<pre><code>For Test case 1 : \n\nHere for the first node village with ninja of strength 2, a village with a stronger ninja is present with a strength of 7 (which is greater than 2), therefore ans[0] = 7. Similarly \u2018ans\u2019 array can be filled with the following values: ans = 7,0,5,5,0\n\nFor Test case 2 : \n\nHere for the first node village with a ninja of strength 1, the village with a stronger ninja is present with a strength of 7 (which is greater than 2), therefore ans[0] = 7, similarly \u2018ans\u2019 array can be filled with the following values: ans = 7,9,9,9,0,5,0,0\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>1\n2 1 5 -1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>5 5 0\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 2,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a linked list representing ninja village strengths, find the next larger village strength for each village.  For each village (node i), find the first village (node j) after it (j > i) with a stronger ninja (node j.val > node i.val). If no such village exists, the next larger value is 0.  Return an array where each element is the next larger strength for the corresponding village.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= N <= 5000",
                    "1 <= node.val <= 10^9",
                    "N is the size of the linked list",
                    "node.value is the strength of a ninja in a village",
                    "Time Limit : 1 sec"
                ],
                "testcases": [
                    {
                        "input": "2 7 4 3 5 -1",
                        "output": "7 0 5 5 0",
                        "explanation": "For the village with strength 2, the next stronger village has strength 7. For 7, no stronger village exists after it, so it's 0. For 4, the next stronger is 5. For 3, the next stronger is 5. For 5, no stronger village exists, so it's 0."
                    },
                    {
                        "input": "1 7 5 1 9 2 5 1 -1",
                        "output": "7 9 9 9 0 5 0 0",
                        "explanation": "For the village with strength 1, the next stronger village has strength 7. For 7, the next stronger village has strength 9. For 5, the next stronger village has strength 9. For 1, the next stronger village has strength 9. For 9, no stronger village exists after it, so it's 0. For 2, the next stronger village has strength 5. For 5, no stronger village exists after it, so it's 0. For 1, no stronger village exists after it, so it's 0."
                    },
                    {
                        "input": "2 1 5 -1",
                        "output": "5 5 0",
                        "explanation": "For the village with strength 2, the next stronger village has strength 5. For the village with strength 1, the next stronger village has strength 5. For the village with strength 5, there is no stronger village after it, so the result is 0."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Iterate over the linked list and for each node in the list check whether there exists a \u2018nextnode\u2019 with a bigger value.</p>",
            "<p>Try to think about how can the problem be optimised by using a stack</p>"
        ],
        "relatedTopics": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Stacks & Queues",
                "slug": "stacks-&-queues"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}