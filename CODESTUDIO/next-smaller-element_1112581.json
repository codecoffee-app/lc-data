{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9951,
            "title": "Next Smaller Element",
            "titleSlug": "next-smaller-element_1112581",
            "content": "<h4 id=\"you-are-given-an-array-arr-of-integers-of-length-n-your-task-is-to-find-the-next-smaller-element-for-each-of-the-array-elements\">You are given an array &#39;ARR&#39; of integers of length N. Your task is to find the next smaller element for each of the array elements.</h4>\n\n<h4 id=\"next-smaller-element-for-an-array-element-is-the-first-element-to-the-right-of-that-element-which-has-a-value-strictly-smaller-than-that-element\">Next Smaller Element for an array element is the first element to the right of that element which has a value strictly smaller than that element.</h4>\n\n<h4 id=\"if-for-any-array-element-the-next-smaller-element-does-not-exist-you-should-print-1-for-that-array-element\">If for any array element the next smaller element does not exist, you should print -1 for that array element.</h4>\n\n<h4 id=\"for-example\">For Example:</h4>\n\n<pre><code>If the given array is [ 2, 3, 1], we need to return [1, 1, -1]. Because for  2, 1 is the Next Smaller element. For 3, 1 is the Next Smaller element and for 1, there is no next smaller element hence the answer for this element is -1.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 which contains the number of test cases.\n\nThe first line of each test case contains an integer &#39;N&#39; denoting the number of elements in the array &#39;ARR&#39;.\n\nThe second line of each test case contains &#39;N&#39; space-separated integers denoting the array &#39;ARR&#39;. \n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print a single line containing &#39;N&#39; space-separated integers denoting the value of Next Smaller Element for each of the &#39;N&#39; array elements.\n\nThe output for each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 10 ^ 5\n0 &lt;= ARR [i] &lt;= 10 ^ 9\n\nTime Limit: 1sec.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n4\n2 1 4 3\n3\n1 3 2\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>1 -1 3 -1\n-1 2 -1\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1:</h5>\n\n<pre><code>For the first test case : \n1) For ARR [1] = 2 ,  the next smaller element is 1. \n2) For ARR [2] = 1 ,  the next smaller element is -1 as no element in the array has value smaller than 1.\n3) For ARR [3] = 4 ,  the next smaller element is 3.\n4) For ARR [4] = 3 ,  the next smaller element is -1 as no element exists in the right of it.\nHence, we will return the array [ 1, -1, 3, -1] in this case.\n\nFor the second test case :\n1) For ARR [1] = 1 ,  the next smaller element is -1 as no element in the array has value smaller than 1.\n2) For ARR [2] = 3 ,  the next smaller element is 2.\n3) For ARR [3] = 2 ,  the next smaller element is -1 as no element exists in the right of it.\nHence we will return the array [ -1, 2, -1 ] in this case.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n4\n1 2 3 4\n2\n5 0\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>-1 -1 -1 -1\n 0 -1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 334,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array 'ARR' of integers with length N, find the next smaller element for each array element. The next smaller element is the first element to the right with a value strictly smaller. If no such element exists, the answer is -1.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10 ^ 5",
                    "0 <= ARR [i] <= 10 ^ 9",
                    "Time Limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "4\n2 1 4 3",
                        "output": "1 -1 3 -1",
                        "explanation": "For the array [2, 1, 4, 3]:\n- The next smaller element for 2 is 1.\n- The next smaller element for 1 is -1 (none exists).\n- The next smaller element for 4 is 3.\n- The next smaller element for 3 is -1 (none exists)."
                    },
                    {
                        "input": "3\n1 3 2",
                        "output": "-1 2 -1",
                        "explanation": "For the array [1, 3, 2]:\n- The next smaller element for 1 is -1 (none exists).\n- The next smaller element for 3 is 2.\n- The next smaller element for 2 is -1 (none exists)."
                    },
                    {
                        "input": "4\n1 2 3 4",
                        "output": "-1 -1 -1 -1",
                        "explanation": "For the array [1, 2, 3, 4]:\n-The next smaller element for 1 is -1(none exists).\n-The next smaller element for 2 is -1(none exists).\n-The next smaller element for 3 is -1(none exists).\n-The next smaller element for 4 is -1(none exists)."
                    },
                    {
                        "input": "2\n5 0",
                        "output": "0 -1",
                        "explanation": "For the array [5, 0]:\n- The next smaller element for 5 is 0.\n- The next smaller element for 0 is -1 (none exists)."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to find out the Next Smaller Element for each of the array elements by iterating to the right of that element and comparing it with each element.</p>",
            "<p>Try to think of an approach using a stack and traversing the array from backwards.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Stacks & Queues",
                "slug": "stacks-&-queues"
            }
        ],
        "solutions": [
            {
                "lang": "cpp",
                "full_func": "/*\r\n    Time Complexity: O(N)\r\n    Space Complexity: O(N)\r\n\r\n    Where N denotes the number of elements in the array.\r\n*/\r\n\r\n#include <stack>\r\n\r\nvector<int> nextSmallerElement(vector<int>& arr, int n) \r\n{\r\n    // Defining the vector to store next smaller elements for the array. \r\n    vector<int> ans(n);\r\n\r\n    // Defining the stack and pushing -1 to it.\r\n    stack < int > stk;\r\n    stk.push(-1);\r\n\r\n    // Iterating through all the array elements from backwards.\r\n    for (int i = n - 1; i >= 0; i--)\r\n    {\r\n        // Removing all the elements greater than or equal to current element from the stack.\r\n        while (stk.top() >= arr[i])\r\n        {\r\n            stk.pop();\r\n        }\r\n\r\n        // Setting the next smaller element as the element at top of stack.\r\n        ans[i] = stk.top();\r\n\r\n        // Pushing the current element into the stack.\r\n        stk.push(arr[i]);\r\n    }\r\n\r\n    // Returning the final vector after all the iterations.\r\n    return ans;\r\n}",
                "lang_text": "cpp"
            },
            {
                "lang": "python",
                "full_func": "'''\r\n    Time Complexity: O(N)\r\n    Space Complexity: O(N)\r\n\r\n    Where N denotes the number of elements in the array.\r\n'''\r\n\r\ndef nextSmallerElement(arr, n):\r\n\r\n    # Defining the list to store next smaller elements for the array.\r\n    ans = [0 for i in range(n)]\r\n\r\n    # Defining the stack and pushing -1 to it.\r\n    stk = []\r\n    stk.append(-1)\r\n\r\n    for i in range(n - 1, -1, -1):\r\n\r\n        # Removing all the elements greater than or equal to current element from the stack.\r\n        while(stk[-1] >= arr[i]):\r\n            stk.pop()\r\n\r\n        # Setting the next smaller element as the element at top of stack.\r\n        ans[i] = stk[-1]\r\n\r\n        # Pushing the current element into the stack.\r\n        stk.append(arr[i])\r\n\r\n    # Returning the final vector after all the iterations.\r\n    return ans\r\n",
                "lang_text": "py"
            },
            {
                "lang": "java",
                "full_func": "/*\r\n    Time Complexity: O(N)\r\n    Space Complexity: O(N)\r\n\r\n    where N denotes the number of elements in the array.\r\n*/\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Stack;\r\nimport java.util.Collections;\r\n\r\npublic class Solution {\r\n    public static ArrayList<Integer> nextSmallerElement(ArrayList<Integer> arr, int n) {\r\n        ArrayList<Integer> ans = new ArrayList<Integer>();\r\n        Stack<Integer> stk = new Stack<Integer>();\r\n        stk.push(-1);\r\n\r\n        // Iterating through all the array elements from backwards.\r\n        for (int i = n - 1; i >= 0; i--) {\r\n\t\t\t\r\n                // Removing all the elements greater than or equal to current element from the stack.\r\n                while (stk.peek() >= arr.get(i)) {\r\n                        stk.pop();\r\n                }\r\n\r\n                // Setting the next smaller element as the element at top of stack.\r\n                ans.add(stk.peek());\r\n\r\n                // Pushing the current element into the stack.\r\n                stk.push(arr.get(i));\r\n\r\n        }\r\n\r\n        // Returning the final vector after all the iterations.\r\n        Collections.reverse(ans);\r\n        return ans;\r\n    }\r\n}",
                "lang_text": "java"
            }
        ],
        "platform": "CODESTUDIO"
    }
}