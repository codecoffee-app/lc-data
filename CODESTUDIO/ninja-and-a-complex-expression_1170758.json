{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10170,
            "title": "Ninja and a complex expression",
            "titleSlug": "ninja-and-a-complex-expression_1170758",
            "content": "<h4 id=\"ninja-has-been-given-a-string-str-of-a-balanced-expression-containing-operators-and-english-lower-case-alphabets-str-may-be-complex-in-nature-if-it-contains-unnecessary-multiple-brackets-his-task-is-to-check-whether-str-can-be-converted-to-a-simplified-string-or-not-a-simplified-string-is-one-in-which-there-are-no-unnecessary-multiple-brackets\">Ninja has been given a string \u2018STR\u2019 of a balanced expression containing &#39;(&#39;,&#39;)&#39;, operators (+, -, /, *), and English lower case alphabets. \u2018STR\u2019 may be complex in nature if it contains unnecessary multiple brackets. His task is to check whether \u2018STR\u2019 can be converted to a simplified string or not. A simplified string is one in which there are no unnecessary multiple brackets.</h4>\n\n<h4 id=\"here-are-some-examples-of-complex-str-with-multiple-unnecessary-brackets-a-b-a-b-c-d-and-a-b-c-d-these-can-be-simplified-by-removing-unnecessary-multiple-brackets-such-as-a-b-a-b-c-d-and-a-b-c-d\">Here are some examples of complex \u2018STR\u2019 with multiple unnecessary brackets \u201c((a+b))\u201d,\u201c((a+(b)) * (c/d))\u201d and \u201c(((a+b))+((c * d)))\u201d. These can be simplified by removing unnecessary multiple brackets such as  \u201c(a+b)\u201d,\u201c((a+b) * (c/d))\u201d and \u201c((a+b)+(c * d))\u201d.</h4>\n\n<h4 id=\"as-ninja-is-busy-with-some-other-task-so-he-asks-you-for-help\">As Ninja is busy with some other task so he asks you for help.</h4>\n\n<h4 id=\"can-you-help-ninja-to-check-whether-the-given-string-str-can-be-simplified-or-not\">Can you help Ninja to check whether the given string \u2018STR\u2019 can be simplified or not?</h4>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of input contains an integer \u2018T&#39; which denotes the number of test cases or queries to be run. Then the test cases follow.\n\nThe first and the only line of each test case contains a string \u2018STR\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print \u20181\u2019 if given \u2018STR\u2019 is complex else print \u20180\u2019.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h4 id=\"note-you-do-not-need-to-print-anything-it-has-already-been-taken-care-of-just-implement-the-given-function\">Note: You do not need to print anything; it has already been taken care of. Just implement the given function.</h4>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= \u2018T\u2019 &lt;= 100\n1 &lt;= |STR| &lt;= 5000 \n\nWhere \u2018T\u2019 denotes the total number of test cases, |STR| represents the length of \u2018STR\u2019.\n\nTime Limit: 1 second\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>3\n(a+b)\n((a+b))\n((a+b)*(c+d))\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>0\n1\n0\n</code></pre>\n\n<h4 id=\"explanation-for-sample-output-1\">Explanation for Sample Output 1 :</h4>\n\n<pre><code>For sample test case 1: \nIn this sample test case, the given input string is already simplified because it is not containing any unnecessary multiple brackets. \n\nFor sample test case 2: \nIn this sample test case, the given input string \u201c((a+b))\u201d is complex and can be simplified as after removing the unnecessary multiple brackets \u2018STR\u2019 will become \u201c(a+b)\u201d\n\nFor sample test case 3: \nIn this sample test case, the given input string is already simplified because it is not containing any unnecessary multiple brackets. \n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>3\n(a*(b+c))\n((a+((c+d))))\n((a*b)+((c+d)+(e/f)))\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>0\n1\n0\n</code></pre>\n\n<h4 id=\"explanation-for-sample-output-2\">Explanation for Sample Output 2 :</h4>\n\n<pre><code>For sample test case 1: \nIn this sample test case, the given input string is already simplified because it is not containing any unnecessary multiple brackets. \n\nFor sample test case 2:\nIn this sample test case, the given input string \u201c((a+((c+d))))\u201d is complex and can be simplified as after removing unnecessary multiple brackets \u2018STR\u2019 will become \u201c(a+c+d)\u201d.\n\nFor sample test case 3: \nIn this sample test case, the given input string is already simplified because it is not containing any unnecessary multiple brackets. \n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 5,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a balanced expression 'STR' containing parentheses, operators (+, -, /, *), and lowercase English alphabets, determine if it can be simplified by removing unnecessary multiple brackets. A simplified string has no unnecessary nested brackets. For example, '((a+b))' can be simplified to '(a+b)'.",
                "constraints": [
                    "1 <= T <= 100 (Number of test cases)",
                    "1 <= |STR| <= 5000 (Length of the string 'STR')",
                    "Time Limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "(a+b)",
                        "output": "0",
                        "explanation": "The input string is already simplified, containing no unnecessary multiple brackets."
                    },
                    {
                        "input": "((a+b))",
                        "output": "1",
                        "explanation": "The input string is complex and can be simplified to '(a+b)' by removing unnecessary brackets."
                    },
                    {
                        "input": "((a+b)*(c+d))",
                        "output": "0",
                        "explanation": "The input string is already simplified, containing no unnecessary multiple brackets."
                    },
                    {
                        "input": "(a*(b+c))",
                        "output": "0",
                        "explanation": "The input string is already simplified, containing no unnecessary multiple brackets."
                    },
                    {
                        "input": "((a+((c+d))))",
                        "output": "1",
                        "explanation": "The input string is complex and can be simplified to '(a+(c+d))' or '(a+c+d)' by removing unnecessary brackets."
                    },
                    {
                        "input": "((a*b)+((c+d)+(e/f)))",
                        "output": "0",
                        "explanation": "The input string is already simplified, containing no unnecessary multiple brackets."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to use the data structure with Last In and First Out.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Stacks & Queues",
                "slug": "stacks-&-queues"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}