{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10467,
            "title": "Ninja and Binary Tree",
            "titleSlug": "ninja-and-binary-tree_1229407",
            "content": "<h4 id=\"ninja-has-to-implement-a-binary-tree-class-from-scratch-the-ninja-can-perform-three-types-of-queries-on-this-binary-tree\">Ninja has to implement a binary tree class from scratch. The Ninja can perform three types of queries on this binary tree.</h4>\n\n<h5 id=\"i-val-in-this-query-ninja-has-to-insert-a-node-with-the-value-val-in-the-binary-tree-d-val-in-this-query-ninja-has-to-delete-a-node-with-the-value-val-from-the-binary-tree-r-in-this-query-ninja-has-to-print-a-random-node-from-the-tree\"><ul > <li>\u2018I\u2019 \u2018VAL\u2019: In this query, Ninja has to insert a Node with the value \u2018VAL\u2019 in the binary tree.</li> <li>\u2018D\u2019 \u2018VAL\u2019: In this query, Ninja has to delete a Node with the value  \u2018VAL\u2019 from the binary tree. </li> <li>\u2018R\u2019: In this query, Ninja has to print a random node from the tree.</li> </ul></h5>\n\n<h4 id=\"all-the-node-values-in-the-binary-tree-are-different-all-nodes-are-equally-likely-to-be-chosen\">All the Node values in the binary tree are different. All nodes are equally likely to be chosen.</h4>\n\n<h4 id=\"for-example\">For example:</h4>\n\n<p><img src=\"https://files.codingninjas.in/insert1-8230.png\" alt=\"\"></p>\n\n<p><img src=\"https://files.codingninjas.in/delete1-8229.png\" alt=\"\"></p>\n\n<p><img src=\"https://files.codingninjas.in/random1-8228.png\" alt=\"\"></p>\n\n<h5 id=\"input-format\">Input Format</h5>\n\n<pre><code>The first line of input contains an integer &#39;T&#39; representing the number of test cases. Then the test cases follow.\n\nThe next line of each test case contains an integer \u2018Q\u2019 representing the number of queries to Ninja.\n\nThe next line, \u2018Q\u2019 lines of each test case, contain a character and integer representing which type of query is to perform on the binary tree and the value of the node.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, return the value of the Random Node obtained from the get Random Node query.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= \u2018T\u2019 &lt;= 10\n1 &lt;= \u2018Q\u2019 &lt;= 10000\nChar = {\u2018I\u2019, \u2018D\u2019, \u2018R\u2019}\n1 &lt;= \u2018VAL\u2019 &lt;= 100000  \n\nTime Limit: 1 second\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1:</h4>\n\n<pre><code>1\n5\nI 2\nI 4\nI 5\nD 4\nR\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>Valid answer\n</code></pre>\n\n<h4 id=\"explanation-for-sample-output-1\">Explanation for Sample Output 1:</h4>\n\n<pre><code>For sample test case 1: \n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/example1a-8227.png\" alt=\"\"></p>\n\n<p><img src=\"https://files.codingninjas.in/example1b-8226.png\" alt=\"\"></p>\n\n<p><img src=\"https://files.codingninjas.in/example1c-8225.png\" alt=\"\"></p>\n\n<pre><code>In this sample test case, the random nodes may be 2 or 5 because all nodes should be equally likely to be chosen. So you can print any one of them.\nAs the random node returned (here 2) exists in the tree, the output is a \u201cValid answer.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\n5\nI 4\nI 2\nD 2\nI 5  \nR\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>Valid answer\n</code></pre>\n\n<h4 id=\"explanation-for-sample-output-2\">Explanation for Sample Output 2:</h4>\n\n<pre><code>For sample test case 1: \n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/example2a-8224.png\" alt=\"\"></p>\n\n<p><img src=\"https://files.codingninjas.in/example2b-8223.png\" alt=\"\"></p>\n\n<p><img src=\"https://files.codingninjas.in/example2c-8222.png\" alt=\"\"></p>\n\n<p><img src=\"https://files.codingninjas.in/example2d-8221.png\" alt=\"\"></p>\n\n<pre><code>In this sample test case, the random nodes may be 4 or 5 because all nodes should be equally likely to be chosen. So you can print any one of them.\n\nAs the random node returned (here 4) exists in the tree, the output is a \u201cValid answer\u201d.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -8,
            "dislikes": "NA",
            "rephrased": {
                "body": "Implement a binary tree class from scratch. The class should support three types of queries:\n\n*   **Insert (I VAL):** Insert a node with value VAL into the binary tree.\n*   **Delete (D VAL):** Delete the node with value VAL from the binary tree.\n*   **Random (R):**  Return a random node's value from the tree.  All nodes should have an equal probability of being chosen. Assume all node values in the tree are distinct.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= Q <= 10000",
                    "Char = {'I', 'D', 'R'}",
                    "1 <= VAL <= 100000",
                    "Time Limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "1\n5\nI 2\nI 4\nI 5\nD 4\nR",
                        "output": "Valid answer",
                        "explanation": "Initially, the tree contains nodes 2, 4, and 5. After deleting 4, the tree contains nodes 2 and 5.  The 'R' query should return either 2 or 5 with equal probability. Since the returned random node exists in the tree, the output is a 'Valid answer'."
                    },
                    {
                        "input": "1\n5\nI 4\nI 2\nD 2\nI 5\nR",
                        "output": "Valid answer",
                        "explanation": "Initially, the tree contains node 4. Then, node 2 is inserted. After deleting 2 and inserting 5, the tree contains nodes 4 and 5. The 'R' query should return either 4 or 5 with equal probability. Since the returned random node exists in the tree, the output is a 'Valid answer'."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Think of the brute force approach.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Binary Trees",
                "slug": "binary-trees"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}