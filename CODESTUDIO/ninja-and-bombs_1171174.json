{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10202,
            "title": "Ninja and Bombs",
            "titleSlug": "ninja-and-bombs_1171174",
            "content": "<h4 id=\"ninja-is-on-a-secret-mission-and-wants-to-reach-the-enemys-base-camp-however-his-enemies-have-planted-bombs-in-a-grid-of-n-rows-and-m-columns-called-bomb-grid-to-reach-the-camp-ninja-has-to-safely-cross-bomb-grid-the-value-at-each-cell-in-bomb-grid-denotes-the-power-of-that-bomb-an-empty-cell-without-a-bomb-is-represented-as-0-the-bomb-grid-has-the-following-properties\">Ninja is on a secret mission and wants to reach the enemy&#39;s base camp. However, his enemies have planted bombs in a grid of \u2018N\u2019 rows and \u2018M\u2019 columns called \u2018BOMB-GRID\u2019. To reach the camp, Ninja has to safely cross \u2018BOMB-GRID\u2019. The value at each cell in \u2018BOMB-GRID\u2019 denotes the power of that bomb. An empty cell (without a bomb) is represented as 0. The \u2018BOMB-GRID\u2019 has the following properties:</h4>\n\n<pre><code>1. If three or more bombs with the same power are adjacent vertically or horizontally, then they blast at the same time immediately and their cells become empty.\n\n2. After the bombs blast simultaneously if an empty cell on \u2018BOMB-GRID\u2019 has a bomb on top of itself, then these bombs will drop until they hit a bomb or hit at the bottom at the same time. (No new bombs will drop from outside of the top boundary of the \u2018BOMB-GRID&#39;).\n\n3. After the above steps, there may exist more bombs that can be blasted. If so, the above steps will be repeated.\n\n4. If there does not exist more bombs that can be blasted (ie. the &#39;BOMB-GRID&#39; is safe), then return the current \u2018BOMB-GRID\u2019.\n\n5. The time taken by bombs to shift from one position to another can be neglected.\n</code></pre>\n\n<h4 id=\"we-will-call-bomb-grid-safe-if-and-only-if-no-more-blasts-happen-in-bomb-grid-ninja-wants-to-know-the-safe-state-of-bomb-grid-after-every-possible-blast\">We will call \u2018BOMB-GRID&#39; safe if and only if no more blasts happen in \u2018BOMB-GRID\u2019. Ninja wants to know the safe state of \u2018BOMB-GRID\u2019 after every possible blast.</h4>\n\n<h4 id=\"as-ninja-is-busy-planning-he-asks-you-for-help-can-you-help-ninja-determine-the-safe-state-of-bomb-grid\">As Ninja is busy planning, he asks you for help. Can you help Ninja determine the safe state of \u2018BOMB-GRID\u2019?</h4>\n\n<h5 id=\"for-example\">For Example :</h5>\n\n<pre><code>For the \u2018BOMB-GRID\u2019 shown below, the third grid represents a safe state i.e after all possible blasts.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/bomb-8035.jpg\" alt=\"img\"></p>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases. Then each test case follows.\n\nThe first line of each test case contains two single space-separated integers \u2018N\u2019 and \u2018M\u2019 representing the number of rows and columns in \u2018BOMB-GRID\u2019, respectively.\n\nThe next \u2018N\u2019 lines of each test case contain \u2018M\u2019 single space-separated integers denoting the power of the bomb at each cell. \n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print the safe state of \u2018BOMB-GRID\u2019 in a row-wise manner.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You are not required to print the expected output; it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= N &lt;= 50\n1 &lt;= M &lt;= 50\n0 &lt;= BOMB-GRID[i][j] &lt;= 1000\n\nWhere BOMB-GRID[i][j] denotes the power of the bomb placed in the \u2018i\u2019-th row and \u2018j\u2019-th column of \u2018BOMB-GRID\u2019.\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n4 3\n1 0 1\n2 0 4\n2 1 1\n1 2 3\n3 3\n1 1 1\n1 2 1\n1 1 1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>1 0 1\n2 0 4\n2 1 1\n1 2 3\n0 0 0\n0 0 0\n0 2 0\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1 :</h5>\n\n<pre><code>For the first test case :\nThe given \u2018BOMB-GRID\u2019 is safe as there exist no 3 or more than 3 bombs with the same powers adjacent together either horizontally or vertically.\n\nFor the second test case :\nThe given \u2018BOMB-GRID\u2019 all the bombs with power 1 in row 0, row 2 and column 0 and column 2 (0-based indexing) will blast simultaneously and the bomb with power 2 will be shifted to the bottom of column 1 as shown in the output. The \u2018BOMB-GRID\u2019 now becomes safe.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n3 3\n4 5 3\n6 5 1\n6 5 1\n4 3\n6 7 8\n3 4 8\n5 3 2\n5 9 1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>4 0 3 \n6 0 1 \n6 0 1 \n6 7 8 \n3 4 8 \n5 3 2 \n5 9 1 \n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 2,
            "dislikes": "NA",
            "rephrased": {
                "body": "Ninja is tasked with infiltrating an enemy base camp. To reach it, he must navigate a grid ('BOMB-GRID') of size N x M, where each cell represents the power of a bomb. Empty cells are marked with 0. The bombs have a unique blasting behavior:\n\n1.  If three or more bombs of the same power are horizontally or vertically adjacent, they detonate simultaneously, turning those cells into empty cells (0).\n2.  After the blast, bombs above an empty cell fall vertically down until they hit another bomb or the bottom of the grid. No new bombs enter from the top.\n3.  The process repeats until no more blasts occur.\n\nThe grid is considered 'safe' when no further blasts are possible. Your task is to determine the safe state of the 'BOMB-GRID' after all possible blasts have occurred.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= N <= 50",
                    "1 <= M <= 50",
                    "0 <= BOMB-GRID[i][j] <= 1000",
                    "Where BOMB-GRID[i][j] denotes the power of the bomb placed in the \u2018i\u2019-th row and \u2018j\u2019-th column of \u2018BOMB-GRID\u2019."
                ],
                "testcases": [
                    {
                        "input": "4 3\n1 0 1\n2 0 4\n2 1 1\n1 2 3",
                        "output": "1 0 1\n2 0 4\n2 1 1\n1 2 3",
                        "explanation": "The given \u2018BOMB-GRID\u2019 is safe as there exist no 3 or more than 3 bombs with the same powers adjacent together either horizontally or vertically."
                    },
                    {
                        "input": "3 3\n1 1 1\n1 2 1\n1 1 1",
                        "output": "0 0 0\n0 2 0\n0 0 0",
                        "explanation": "The given \u2018BOMB-GRID\u2019 all the bombs with power 1 in row 0, row 2 and column 0 and column 2 (0-based indexing) will blast simultaneously and the bomb with power 2 will be shifted to the bottom of column 1 as shown in the output. The \u2018BOMB-GRID\u2019 now becomes safe."
                    },
                    {
                        "input": "3 3\n4 5 3\n6 5 1\n6 5 1",
                        "output": "4 0 3\n6 0 1\n6 0 1",
                        "explanation": null
                    },
                    {
                        "input": "4 3\n6 7 8\n3 4 8\n5 3 2\n5 9 1",
                        "output": "6 7 8\n3 4 8\n5 3 2\n5 9 1",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to use Brute Force with some optimizations</p>"
        ],
        "relatedTopics": [
            {
                "name": "Matrices (2D Arrays)",
                "slug": "matrices-(2d-arrays)"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}