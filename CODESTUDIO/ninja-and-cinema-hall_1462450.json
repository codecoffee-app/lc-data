{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12508,
            "title": "Ninja and Cinema Hall",
            "titleSlug": "ninja-and-cinema-hall_1462450",
            "content": "<h4 id=\"ninja-just-started-his-new-job-at-a-cinema-hall-where-there-are-n-number-of-rows-with-10-seats-in-each-row-each-seat-is-labeled-with-a-number-from-1-to-10-you-are-given-an-m-x-2-2-d-array-list-nonvacant-where-nonvacant-i-j-denotes-that-the-seat-located-in-a-row-i-and-labeled-j-is-not-vacant\">Ninja just started his new job at a cinema hall where there are \u2018N\u2019 number of rows with 10 seats in each row. Each seat is labeled with a  number from 1 to 10. You are given an M x 2  2-D array/list \u201cNON&#95;VACANT\u201d, where NON&#95;VACANT[i][j] denotes that the seat located in a row \u2018i\u2019 and labeled \u2018j\u2019 is not vacant.</h4>\n\n<h4 id=\"ninja-can-assign-seats-in-only-groups-of-four-people-such-that-they-all-sit-adjacent-to-each-other-in-one-single-row-help-ninja-in-finding-the-maximum-number-of-the-four-people-groups-he-can-assign-seats-to\">Ninja can assign seats in only groups of four people such that they all sit adjacent to each other in one single row. Help Ninja in finding the maximum number of the four people groups he can assign seats to.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>Seats 3,4 and 7,8 are considered as not adjacent to each other.\nThere is an exceptional case in which seats 3,4 and seat 7,8 are considered to be adjacent and Ninja can split the group from the middle and assign seats to two people on each side.\n</code></pre>\n\n<h4 id=\"ninja-can-assign-seats-to-a-group-of-four-people-in-the-below-depicted-three-manners\">Ninja can assign seats to a group of four people in the below depicted three manners.</h4>\n\n<p><img src=\"https://files.codingninjas.in/screenshot-from-2021-06-27-12-38-38-11362.png\" alt=\"\"></p>\n\n<h5 id=\"input-format\">Input Format</h5>\n\n<pre><code>The first line contains an integer \u2018T\u2019 which denotes the number of test cases or queries to be run. Then the test cases are as follows.\n\nThe first line of each test case contains two space-separated integers \u2018N\u2019, and \u2018M\u2019, denoting the number of rows in the cinema hall and the number of reserved seats.\n\nThe next \u2018M\u2019 line contains two space-separated integers denoting the row number and seat number of reserved seats.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, return a single integer denoting the maximum number of the four-people groups that can be seated adjacently.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You don\u2019t need to print anything; It has already been taken care of.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 10^5\n0 &lt;= M &lt;= 10*N\n1 &lt;= NON_VACANT[i][0] &lt;= N\n1 &lt;= NON_VACANT[i][1] &lt;= 10\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n3 5\n2 2\n2 4\n2 6\n3 3\n3 5\n2 2\n1 4\n2 1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>3\n3\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of sample input 1:</h5>\n\n<pre><code>In the first test case, \nIn Row 1 - Two groups can be seated in seats [ 2,3,4,5 ] and [ 6,7,8,9 ]\nIn Row 2 - No group can be seated.\nIn Row 3 - One group can be seated in seats [ 6,7,8,9 ]\nSo a total of 3 groups can be seated.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/screenshot-from-2021-06-27-12-39-00-11361.png\" alt=\"\"></p>\n\n<pre><code>Test Case 2:\nIn Row 1 - One group can be seated in seats [ 6,7,8,9 ]\nIn Row 2 - Two groups can be seated as [ 2,3,4,5 ] and [6,7,8,9 ]\nSo a total of 3 groups can be seated.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/screenshot-from-2021-06-27-12-39-17-11360.png\" alt=\"\"></p>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n4 4\n4 6\n1 7\n4 3\n1 4\n2 5\n1 3\n1 4\n2 5\n1 8  \n2 6\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>4\n0\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 9,
            "dislikes": "NA",
            "rephrased": {
                "body": "A cinema hall has 'N' rows, each with 10 seats numbered 1 to 10.  Given a list 'NON_VACANT' indicating the reserved seats, determine the maximum number of groups of four people that can be seated adjacently in the available seats. Seats 3, 4 and 7, 8 are considered adjacent, and it's possible to split a group of four between these sets of seats.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10^5",
                    "0 <= M <= 10*N",
                    "1 <= NON_VACANT[i][0] <= N",
                    "1 <= NON_VACANT[i][1] <= 10"
                ],
                "testcases": [
                    {
                        "input": "n = 3, nonVacant = [[2, 2], [2, 4], [2, 6], [3, 3], [3, 5]]",
                        "output": "3",
                        "explanation": "In row 1, two groups can be seated in seats [2,3,4,5] and [6,7,8,9]. In row 2, no group can be seated. In row 3, one group can be seated in seats [6,7,8,9]. So a total of 3 groups can be seated."
                    },
                    {
                        "input": "n = 2, nonVacant = [[1, 4], [2, 1]]",
                        "output": "3",
                        "explanation": "In row 1, one group can be seated in seats [6,7,8,9]. In row 2, two groups can be seated as [2,3,4,5] and [6,7,8,9]. So a total of 3 groups can be seated."
                    },
                    {
                        "input": "n = 4, nonVacant = [[4, 6], [1, 7], [4, 3], [1, 4]]",
                        "output": "4",
                        "explanation": "Row 1 can seat 2 groups ([2,3,4,5] and [8,9,10,X]), row 2 can seat one group ([2,3,4,5] or [6,7,8,9]), row 3 can seat one group ([2,3,4,5] or [6,7,8,9]). Row 4 cannot seat any group. Total groups = 4"
                    },
                    {
                        "input": "n = 2, nonVacant = [[1, 3], [1, 4], [2, 5], [1, 8], [2, 6]]",
                        "output": "0",
                        "explanation": "Row 1: 1, 2, 5, 6, 7, 9, 10 are available. No group of four can be formed. Row 2: 1, 2, 3, 4, 7, 8, 9, 10 are available. No group of four can be formed. Total groups = 0"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you think of all the possible ways in a row in which a group of people can be seated?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}