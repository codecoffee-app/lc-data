{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10608,
            "title": "Ninja And Cities",
            "titleSlug": "ninja-and-cities_1235223",
            "content": "<h4 id=\"ninja-decided-to-find-the-distance-between-the-neighbouring-cities-and-then-store-them-for-future-use-he-took-data-from-the-map-and-developed-an-input-format-he-is-given-an-integer-n-denoting-the-number-of-cities-and-then-he-has-an-array-of-size-n-1-that-stores-a-pair-of-numbers-at-each-index-let-the-pair-be-i1-and-i2-which-will-denote-a-bidirectional-edge-between-the-two-cities-i1-and-i2\">Ninja decided to find the distance between the neighbouring cities and then store them for future use. He took data from the map and developed an input format. He is given an integer \u2018N\u2019 denoting the number of cities and then he has an array of size \u2018N - 1\u2019 that stores a pair of numbers at each index. Let the pair be \u2018I1\u2019 and \u2018I2\u2019, which will denote a bidirectional edge between the two cities \u2018I1\u2019 and \u2018I2\u2019.</h4>\n\n<h4 id=\"a-subtree-is-a-subset-of-cities-where-each-city-can-be-reached-from-every-other-city-of-the-subset-the-path-between-each-pair-passes-only-though-the-cities-present-in-the-subset-two-subtrees-are-taken-differently-if-there-are-one-or-more-cities-in-one-subtree-not-present-in-the-other\">A subtree is a subset of cities, where each city can be reached from every other city of the subset. The path between each pair passes only though the cities present in the subset. Two subtrees are taken differently if there are one or more cities in one subtree not present in the other.</h4>\n\n<h4 id=\"now-you-need-to-create-an-array-of-n-1-elements-where-the-ith-element-is-the-number-of-subtrees-in-which-the-maximum-distance-between-any-two-cities-is-equal-to-i\">Now, you need to create an array of \u2018N&#39; - 1 elements where the \u2018ith\u2019 element is the number of subtrees in which the maximum distance between any two cities is equal to \u2018i\u2019.</h4>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>1. Note that there exists a unique path between each pair of cites. Also, the final array that you need to create should be 1-indexed, meaning cities with a maximum distance = 1 should be stored on the normal 0th index.\n\n2. Also, note that the distance between two is the number of cities you cross in between.\n</code></pre>\n\n<h5 id=\"example\">Example:</h5>\n\n<pre><code>Given &#39;N&#39; = 7, and Array = {[1, 2], [1, 3], [2, 4], [2, 5], [3, 6], [3, 7]}\n\nSo the tree of cities formed in this case would look like:\n\n\nIn the above problem, the subtrees with subsets {[1, 2], [1, 3], [2, 4], [2, 5], [3, 6], [3, 7]}, have a maximum distance of 1, so put 6 on index 1.\n\nSimilarly the subtrees with subsets {[1, 2, 4], [1, 2, 5], [2, 1, 3], [4, 2, 5], [1, 3, 6], [1, 3, 7], [6, 3, 7], [1, 2, 4, 5], [1, 3, 6, 7]} have a maximum distance of 2, so put 9 on index 2.\n\nNow, the subtrees with subsets {[4, 2, 1, 3], [2, 1, 3, 7], [5, 2, 1, 3], [2, 1, 3, 6], [4, 5, 2, 1, 3], [2, 1, 3, 6, 7]} have a maximum distance of 3, so put 6 on index 3.\n\nNow, the subtrees with subsets {[4, 2, 1, 3, 7], [4, 2, 1, 3, 6], [5, 2, 1, 3, 7], [5, 2, 1, 3, 6], [5, 2, 1, 3, 6, 7], [4, 2, 1, 3, 6, 7], [4, 2, 5, 1, 3, 6], [4, 2, 5, 1, 3, 7], [4, 2, 5, 1, 3, 6, 7]} have a maximum distance of 4, so put 12 on index 4.\n\nNo subtree has two nodes where the maximum distance between them is 5 and 6 so print 0 on both these indexes.\n\n Final resultant array = [6, 9, 6, 9, 0, 0]\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains an integer \u2018T\u2019 which denotes the number of test cases. \n\nThe first line of each test case contains a single integer \u2018N\u2019 denoting the number of cities.\n\nThe next \u2018N - 1\u2019 lines of each test contain an array of \u2018N&#39; - 1 pairs where each pair denotes path from \u2018I1\u2019 to \u2018I2\u2019 \n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, you need to return \u2018N - 1\u2019 space-separated integers where the \u2018ith\u2019 element denotes the number of paths in which the maximum distance between the two cities is equal to \u2018i\u2019.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You don\u2019t need to print anything, It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n2 &lt;= N &lt;= 15\nsize of array == N - 1\n1 &lt;= I1, I2 &lt;= N\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1\n3\n1 2\n1 3\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>2 1\n</code></pre>\n\n<h5 id=\"explanation-of-sample-output-1\">Explanation of Sample Output 1:</h5>\n\n<pre><code>In test case 1, The tree of cities formed in this case would look like:\n</code></pre>\n\n<p><img src= \"https://ninjasfiles.s3.amazonaws.com/asset_0000000000000292_1615740865_Ninja And Cities.png\"></img></p>\n\n<pre><code>In the above problem, the subtrees with subsets {[1, 2], [1, 3]} have a maximum distance of 1, so print 2.\n\nSimilarly, the subtrees with subsets {[2, 1, 3]} have a maximum distance of 2, so print 1.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n2\n1 2\n4\n1 2\n1 3\n2 4\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>1\n3 2 1\n</code></pre>\n\n<h5 id=\"explanation-of-sample-output-2\">Explanation of Sample Output 2:</h5>\n\n<pre><code>In test case 1, The tree of cities formed in this case would look like:\n</code></pre>\n\n<p><img src= \"https://ninjasfiles.s3.amazonaws.com/asset_0000000000000293_1615740875_Ninja And Cities (1).png\"></img></p>\n\n<pre><code>In the above problem, the subtrees with subsets {[1, 2]} have a maximum distance of 1, so print 1.\n\nIn test case 2, The tree of cities formed in this case would look like:\n</code></pre>\n\n<p><img src= \"https://ninjasfiles.s3.amazonaws.com/asset_0000000000000294_1615740882_Ninja And Cities (2).png\"></img></p>\n\n<pre><code>In the above problem, the subtrees with subsets {[1, 2], [1, 3], [2, 4]} have a maximum distance of 1, so print 3.\n\nSimilarly the subtrees with subsets {[1, 2, 4], [2, 1, 3]} have a maximum distance of 2, so print 2.\n\nNow, the subtrees with subsets {[4, 2, 1, 3]} have a maximum distance of 3, so print 1.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 6,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a tree representing a network of cities, where 'N' is the number of cities, and an array of 'N-1' pairs representing bidirectional edges between cities.  Determine the number of subtrees for each possible maximum distance between any two cities within the subtree. Create an array of 'N-1' elements where the 'ith' element represents the count of subtrees with a maximum distance of 'i'. The distance between two cities is defined as the number of cities crossed in the unique path between them.",
                "constraints": [
                    "1 <= T <= 10",
                    "2 <= N <= 15",
                    "size of array == N - 1",
                    "1 <= I1, I2 <= N",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "1\n3\n1 2\n1 3",
                        "output": "2 1",
                        "explanation": "For N=3, with edges (1,2) and (1,3), two subtrees have a maximum distance of 1: {1, 2} and {1, 3}. The subtree {2, 1, 3} has a maximum distance of 2 (path 2-1-3)."
                    },
                    {
                        "input": "2\n2\n1 2\n4\n1 2\n1 3\n2 4",
                        "output": "1\n3 2 1",
                        "explanation": "Test Case 1 (N=2, edge (1,2)): The subtree {1, 2} has a maximum distance of 1.\nTest Case 2 (N=4, edges (1,2), (1,3), (2,4)): Three subtrees have a max distance of 1: {1, 2}, {1, 3}, {2, 4}. Two subtrees have a max distance of 2: {1, 2, 4}, {2, 1, 3}. One subtree has a max distance of 3: {4, 2, 1, 3}."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you think of using the Floyd Warshall Method using DFS to check for city distances?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Depth-first Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}