{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10410,
            "title": "Ninja and Covid-19 Vaccine",
            "titleSlug": "ninja-and-covid-19-vaccine_1214964",
            "content": "<h4 id=\"the-process-of-the-covid-19-vaccine-has-started-in-a-special-city-structured-like-a-binary-tree-ninja-has-been-appointed-as-a-doctor-to-do-this-vaccination-some-of-the-houses-in-the-city-are-already-vaccinated-and-ninja-wants-to-vaccinate-the-people-in-the-remaining-houses\">The process of the COVID-19 vaccine has started in a special city structured like a binary tree. Ninja has been appointed as a  doctor to do this vaccination. Some of the houses in the city are already vaccinated and Ninja wants to vaccinate the people in the remaining houses.</h4>\n\n<h4 id=\"but-the-problem-is-that-ninja-doesn-t-remember-the-address-of-these-remaining-houses-however-he-remembers-that-the-houses-that-are-still-not-vaccinated-are-at-a-k-distance-from-the-last-houses-in-the-city-ninja-wants-to-find-out-how-the-number-of-these-non-vaccinated-houses\">But the problem is that Ninja doesn\u2019t remember the address of these remaining houses. However, he remembers that the houses that are still not vaccinated are at a \u2018K\u2019 distance from the last houses in the city. Ninja wants to find out how the number of these non-vaccinated houses.</h4>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>The last house is similar to a leaf node in a binary tree and a house that is present at \u2018K\u2019 distance from the last house should be the direct ancestor of this last house.\n</code></pre>\n\n<h4 id=\"for-example\">For Example :</h4>\n\n<p><img src=\"https://files.codingninjas.in/ancestor3-8182.png\" alt=\"\"></p>\n\n<pre><code>In this example :\n2 is the direct ancestor of 4 and 5.\n1 is the direct ancestor of 2, 3, 4, and 5.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of input contains an integer &#39;T&#39; representing the number of test cases. Then the test cases follow.\n\nThe next line of each test case contains elements in the level order form. The line consists of values of nodes separated by a single space. In case a node is null, we take -1 on its place.\n\nThe next line of each test case contains one integer \u2018K\u2019 representing that the houses that are still not vaccinated are at a \u2018K\u2019 distance from the last houses in the city.\n\nFor example, the input for the tree depicted in the below image would be :\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/tree-8178.jpg\" alt=\"\"></p>\n\n<pre><code>4\n2 6\n1 3 5 7\n-1 -1 -1 -1 -1 -1\n</code></pre>\n\n<h4 id=\"explanation\">Explanation :</h4>\n\n<pre><code>Level 1 :\nThe root node of the tree is 4\n\nLevel 2 :\nLeft child of 4 = 2\nRight child of 4 = 6\n\nLevel 3 :\nLeft child of 2 = 1\nRight child of 2 = 3\nLeft child of 6 = 5\nRight child of 6 = 7\n\nLevel 4 :\nLeft child of 1 = null (-1)\nRight child of 1 = null (-1)\nLeft child of 3 = null (-1)\nRight child of 3 = null (-1)\nLeft child of 5 = null (-1)\nRight child of 5 = null (-1)\nLeft child of 7 = null (-1)\nRight child of 7 = null (-1)\n\nThe first not-null node(of the previous level) is treated as the parent of the first two nodes of the current level. The second not-null node (of the previous level) is treated as the parent node for the next two nodes of the current level and so on.\nThe input ends when all nodes at the last level are null(-1).\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>The above format was just to provide clarity on how the input is formed for a given tree. \n\nThe sequence will be put together in a single line separated by a single space. Hence, for the above-depicted tree, the input will be given as:\n\n4 2 6 1 3 5 7 -1 -1 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print how many houses are there that are not vaccinated.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 10000\n1 &lt;= data &lt;= 100000  \n\nWhere \u2018N\u2019 denotes the number of houses in the city and \u2018data\u2019 represents the number of people in each house.\n\nTime Limit: 1 sec\n</code></pre>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the given function.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>1\n1 2 3 -1 4 -1 5 -1 -1 -1 -1\n1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>2\n</code></pre>\n\n<h4 id=\"explanation-of-sample-output-1\">Explanation Of Sample Output 1 :</h4>\n\n<pre><code>For sample test case 1 : \n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/tree1-8180.png\" alt=\"\"></p>\n\n<pre><code>In this sample test case, there are only two houses (i.e. 2 and 3) which are present at a distance \u2018K\u2019 = 1 from last houses (i.e. 4 and 5). \n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>1\n4 5 5 6 4 -1 -1 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>1 \n</code></pre>\n\n<h4 id=\"explanation-of-sample-output-2\">Explanation Of Sample Output 2 :</h4>\n\n<pre><code>For sample test case 1 : \n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/tree2-8179.png\" alt=\"\"></p>\n\n<pre><code>In this sample test case, there are only one house (i.e. 4) which are present at a distance \u2018K\u2019 = 2 from the last house (i.e. 6). \n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -7,
            "dislikes": "NA",
            "rephrased": {
                "body": "A city is structured as a binary tree.  Ninja needs to vaccinate houses but only remembers that unvaccinated houses are at a distance 'K' from the last houses (leaf nodes).  The task is to find the count of these unvaccinated houses, which are direct ancestors 'K' levels above the leaf nodes.",
                "constraints": [
                    "1 <= T <= 10 (Number of test cases)",
                    "1 <= N <= 10000 (Number of houses)",
                    "1 <= data <= 100000 (People in each house)"
                ],
                "testcases": [
                    {
                        "input": "1\n1 2 3 -1 4 -1 5 -1 -1 -1 -1\n1",
                        "output": "2",
                        "explanation": "There are two houses (2 and 3) at a distance of 1 from the last houses (4 and 5)."
                    },
                    {
                        "input": "1\n4 5 5 6 4 -1 -1 -1 -1 -1 -1\n2",
                        "output": "1",
                        "explanation": "There is one house (4) at a distance of 2 from the last house (6)."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Think of a DFS approach.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Depth-first Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Trees",
                "slug": "trees"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}