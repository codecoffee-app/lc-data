{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10544,
            "title": "Ninja and Flip Game",
            "titleSlug": "ninja-and-flip-game_1232645",
            "content": "<h4 id=\"ninja-and-his-friend-are-playing-a-game-called-flip-game-they-are-given-a-string-str-containing-only-two-characters-and\">Ninja and his friend are playing a game called flip game. They are given a string \u2018STR\u2019 containing only two characters, \u2018$\u2019 and \u2018*.\u2019</h4>\n\n<h4 id=\"in-this-game-ninja-and-his-friend-take-turns-to-flip-two-consecutive-to-the-flip-game-ends-when-ninja-or-his-friend-can-no-longer-make-a-move-i-e-there-is-no-consecutive-present-in-the-str-and-therefore-the-other-person-will-be-the-winner-of-the-game\">In this game, Ninja and his friend take turns to flip two consecutive \u201c$$\u201d to \u201c**\u201d. The flip game ends when Ninja or his friend can no longer make a move, i.e., there is no consecutive \u201c$$\u201d present in the \u2018STR\u2019 and, therefore, the other person will be the winner of the game.</h4>\n\n<h4 id=\"both-the-players-play-the-game-optimally-in-alternate-turns-given-that-ninja-starts-the-game-i-e-takes-the-first-turn-your-task-is-to-find-out-if-he-wins-the-game\">Both the players play the game optimally in alternate turns. Given that Ninja starts the game i.e. takes the first turn, your task is to find out if he wins the game.</h4>\n\n<h5 id=\"for-example\">For example:</h5>\n\n<pre><code>Let &#39;STR&#39; = &quot;$$**&quot;.\n\nThere are consecutive &quot;$$&quot; in &#39;STR&#39; and it is Ninja&#39;s turn to begin the game. So, Ninja changes the consecutive &quot;$$&quot; to &quot;**&quot;. This changes &#39;STR&#39; to &quot;****&quot;. \n\nNow, as it is his friend&#39;s turn and there are no more consecutive &quot;$$&quot;, Ninja wins the game.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 which denotes the number of test cases or queries to be run. Then the test cases follow.\n\nThe first and the only line of each test case contains an input string \u2018STR\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print &#39;true&#39; if Ninja wins the flip game otherwise print &#39;false&#39;. \n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= \u2018T\u2019 &lt;= 100\n1 &lt;= |\u2019STR\u2019| &lt;= 20\n\u2018STR[i]\u2019 = {\u2018*\u2019, \u2018$\u2019}\n\nWhere \u2018T\u2019 denotes the total number of test cases, \u2018STR\u2019 represents the input string that is given to Ninja and his friend, and |\u2019STR\u2019| represents the length of the string.\n\nTime Limit: 1 second\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n$$$$\n****\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>true\nfalse\n</code></pre>\n\n<h5 id=\"explanation-for-sample-output-1\">Explanation for Sample Output 1:</h5>\n\n<pre><code>For sample test case 1: \n\nIn the first move, Ninja changes the string \u201c$$$$\u201d to \u201c$**$\u201d.\nNow there is no consecutive \u201c$$\u201d present so Ninja\u2019s friend can not make any move. Hence Ninja wins the game.\n\nFor sample test case 2:\n\nThere is no consecutive \u201c$$\u201d present so Ninja can not make a move. Hence his friend wins the game.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n$$$$$\n**$$**$\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>false\ntrue\n</code></pre>\n\n<h5 id=\"explanation-for-sample-output-2\">Explanation for Sample Output 2:</h5>\n\n<pre><code>For sample test case 1: \n\nIf the first move, Ninja changes the string \u201c$$$$$\u201d to \u201c**$$$\u201d.\nThen his friend changes the string \u201c**$$$\u201d to \u201c****$\u201d.\nNow there is no consecutive \u201c$$\u201d present so Ninja can not make any move. Hence his friend wins the game.\n\nFor sample test case 2: \n\nIf the first move, Ninja changes the string \u201c**$$**$\u201d to \u201c******$\u201d.\nNow there is no consecutive \u201c$$\u201d present so Ninja\u2019s friend can not make any move. Hence Ninja wins the game.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 12,
            "dislikes": "NA",
            "rephrased": {
                "body": "Two players, Ninja and his friend, are playing a game. They are given a string 'STR' consisting of '$' and '*'. Players take turns flipping two adjacent '$$' to '**'. The game ends when no more such flips are possible. Ninja goes first. Given 'STR', determine if Ninja wins assuming both players play optimally.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= |STR| <= 20",
                    "STR[i] = {'*', '$'}"
                ],
                "testcases": [
                    {
                        "input": "str = \"$$\" ",
                        "output": "true",
                        "explanation": "Ninja flips \"$$\" to \"**\", and his friend has no moves. Ninja wins."
                    },
                    {
                        "input": "str = \"****\"",
                        "output": "false",
                        "explanation": "Ninja has no moves, so his friend wins."
                    },
                    {
                        "input": "str = \"$$$$\"",
                        "output": "true",
                        "explanation": "Ninja can flip \"$$$$\" to \"$**$\". The friend has no move to make now and ninja wins."
                    },
                    {
                        "input": "str = \"$$$$$\"",
                        "output": "false",
                        "explanation": "Ninja flips \"$$$$\" to \"**$$$\". Then his friend changes the string \"**$$$\" to \"****$\". Now there is no consecutive \u201c$$\u201d present so Ninja can not make any move. Hence his friend wins the game."
                    },
                    {
                        "input": "str = \"**$$**$\"",
                        "output": "true",
                        "explanation": "Ninja changes the string \"**$$**$\" to \"******$\". Now there is no consecutive \u201c$$\u201d present so Ninja\u2019s friend can not make any move. Hence Ninja wins the game."
                    },
                    {
                        "input": "str = \"$*$*$*$\"",
                        "output": "false",
                        "explanation": "No moves are possible."
                    },
                    {
                        "input": "str = \"$$*$*$\"",
                        "output": "true",
                        "explanation": "Ninja can flip \"$$*$*$\" to \"**$*$*$\". The friend has no move to make now and ninja wins."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Think of the backtracing.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}