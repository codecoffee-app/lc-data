{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 20981,
            "title": "Ninja and his Birthday Treat",
            "titleSlug": "ninja-and-his-birthday-treat_5037830",
            "content": "<h4 id=\"ninja-on-his-birthday-decided-to-give-a-treat-to-n-children-in-his-neighbourhood-ninja-took-every-child-to-a-nearby-candy-shop-and-bought-them-candies-the-shop-contains-m-types-of-candies-with-an-unlimited-supply-of-each-candy-the-cost-of-each-candy-is-between-1-and-m-inclusive-and-distinct\">Ninja, on his birthday, decided to give a treat to &#39;N&#39; children in his neighbourhood. Ninja took every child to a nearby candy shop and bought them candies. The shop contains \u2018M\u2019 types of candies with an unlimited supply of each candy. The cost of each candy is between 1 and M, inclusive and distinct.</h4>\n\n<h4 id=\"the-shopkeeper-has-marked-every-candy-with-a-number-between-1-and-m-inclusive-to-make-this-process-fascinating-ninja-found-a-way-he-asked-every-child-three-integers-l-r-and-x-then-he-bought-exactly-x-pieces-of-each-candy-from-l-to-r-i-e-l-l-1-l-2-r-1-r\">The shopkeeper has marked every candy with a number between 1 and M, inclusive. To make this process fascinating, Ninja found a way. He asked every child three integers, \u2018L\u2019, \u2018R\u2019, and \u2018X\u2019. Then he bought exactly \u2018X\u2019 pieces of each candy from [L to R] , i.e., \u201cL, L+1, L+2,..., R-1, R\u201d.</h4>\n\n<h4 id=\"your-task-is-to-find-the-lexicographically-smallest-array-a-of-m-integers-where-each-element-represents-the-cost-of-the-ith-candy-such-that-the-total-cost-spent-by-ninja-is-minimum\">Your task is to find the lexicographically smallest array \u201cA\u201d of \u2018M\u2019 integers where each element represents the cost of the ith candy, such that the total cost spent by Ninja is minimum.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>The cost array is a permutation of the first M natural numbers.\nThe shop has unlimited supplies of candies.\nIn case of multiple permutations, print one which is lexicographically minimum. \n</code></pre>\n\n<h4 id=\"for-example\">For example:</h4>\n\n<pre><code>Let\u2019s say \u2018N\u2019 = 3 , \u2018M\u2019 = 5  \nThe integers told by children are { {2 , 4 , 1} ,{1 , 3 , 2} , {3, 3 , 5} }  \n\nThe optimal permutation will  be {3 2 1 4 5}    \nCosts paid by Ninja are 7, 12, and 5, respectively.  \nThe total cost would be 7 + 12 + 5 = 24\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>First-line contains &#39;T,&#39; denoting the number of Test cases.\n\nFor each Test case:\nThe first contains two integers, &#39;N&#39; and \u2018M\u2019, where \u2018N\u2019 is the number of children and \u2018M\u2019 is the number of candies available in the shop.\nNext, the \u2018N\u2019 line contains three integers, \u2018L\u2019, \u2018R\u2019, and \u2018X\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case, print \u2018M\u2019 integers, i.e., the permutation of \u2018M\u2019 natural numbers.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1&lt;=\u2018T\u2019&lt;=10\n1&lt;=\u2018N\u2019&lt;=10^5\n1&lt;=\u2018M\u2019&lt;=10^5\n1&lt;=\u2018L\u2019&lt;=\u2018R\u2019&lt;=\u2018M\u2019\n1&lt;=\u2018X\u2019&lt;=10^5\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n3 5\n2 4 1\n1 3 2\n3 3 5\n2 3\n2 3 1\n1 2 2\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>3 2 1 4 5 \n2 1 3 \n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1 :</h5>\n\n<pre><code>For testcase one:\n\u2018N\u2019 = 3 , \u2018M\u2019 = 5  \nThe integers told by children are { {2 , 4 , 1} ,{1 , 3 , 2} , {3, 3 , 5} }\n\nThe optimal permutation will  be {3 2 1 4 5}\nCosts paid by Ninja are 7, 12, and 5, respectively.  \nThe total cost would be 7 + 12 + 5 = 24\n\nFor test case two:\n\u2018N\u2019 = 2 , \u2018M\u2019 = 3  \nThe integers told by children are { {2 , 3 , 1} ,{1 , 2 , 2}.\n\nThe optimal permutation will be {2 1 3}.\nCosts paid by Ninja are 4 and 6, respectively.  \nThe total cost would be 4+6 = 10\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n4 6 \n2 5 2 \n1 5 1 \n3 6 3\n4 4 1      \n4 6 \n1 3 2 \n1 5 1 \n1 1 3\n2 2 1      \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>6 4 2 1 3 5 \n1 2 3 4 5 6 \n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": -7,
            "dislikes": "NA",
            "rephrased": {
                "body": "Ninja wants to treat 'N' children with candies from a shop offering 'M' distinct candy types (costs 1 to M). Each child provides three integers: 'L', 'R', and 'X'. Ninja buys 'X' pieces of each candy from the range [L, R]. The goal is to find the lexicographically smallest array 'A' of 'M' integers (permutation of 1 to M), representing the cost of each candy, that minimizes the total cost spent.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10^5",
                    "1 <= M <= 10^5",
                    "1 <= L <= R <= M",
                    "1 <= X <= 10^5",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "3 5\n2 4 1\n1 3 2\n3 3 5",
                        "output": "3 2 1 4 5",
                        "explanation": "N = 3, M = 5. Children requests are {{2, 4, 1}, {1, 3, 2}, {3, 3, 5}}. The optimal cost array is {3, 2, 1, 4, 5}. Ninja's costs are 7, 12, and 5, totaling 24."
                    },
                    {
                        "input": "2 3\n2 3 1\n1 2 2",
                        "output": "2 1 3",
                        "explanation": "N = 2, M = 3. Children requests are {{2, 3, 1}, {1, 2, 2}}. The optimal cost array is {2, 1, 3}. Ninja's costs are 4 and 6, totaling 10."
                    },
                    {
                        "input": "4 6\n2 5 2\n1 5 1\n3 6 3\n4 4 1",
                        "output": "6 4 2 1 3 5",
                        "explanation": null
                    },
                    {
                        "input": "4 6\n1 3 2\n1 5 1\n1 1 3\n2 2 1",
                        "output": "1 2 3 4 5 6",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Calculate the total amount of each candy sold.</p>",
            "<p>Calculate the total amount of each candy sold in O(N).</p>"
        ],
        "relatedTopics": [
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}