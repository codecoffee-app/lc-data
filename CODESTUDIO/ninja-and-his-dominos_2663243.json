{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 15625,
            "title": "Ninja and his Dominos",
            "titleSlug": "ninja-and-his-dominos_2663243",
            "content": "<h4 id=\"ninja-has-n-dominos-he-puts-all-of-these-dominos-in-a-straight-line-each-domino-has-two-values-on-it-top-value-and-bottom-value-you-are-given-two-arrays-top-and-bottom-where-top-i-denotes-the-top-value-at-the-i-th-domino-and-bottom-i-denotes-the-bottom-value-of-the-i-th-domino-top-i-and-bottom-i-are-independent-of-each-other\">Ninja has \u2018N\u2019 dominos. He puts all of these dominos in a straight line. Each domino has two values on it, top value and bottom value. You are given two arrays \u2018top\u2019 and \u2018bottom\u2019 where \u2018top[i]\u2019 denotes the top value at the \u2018i\u2019th domino and \u2018bottom[i]\u2019 denotes the bottom value of the \u2018i\u2019th domino. \u2018top[i]\u2019 and \u2018bottom[i]\u2019 are independent of each other.</h4>\n\n<h4 id=\"ninja-wants-to-arrange-these-dominos-such-that-either-the-top-part-or-the-bottom-part-of-all-the-dominos-is-the-same-but-he-can-do-only-one-operation-i-e-rotate-the-i-th-domino-such-that-top-i-now-becomes-bottom-i-and-bottom-i-becomes-top-i\">Ninja wants to arrange these dominos such that either the top part or the bottom part of all the dominos is the same, but he can do only one operation: i.e., Rotate the \u2018i\u2019th domino such that \u2018top[i]\u2019 now becomes \u2018bottom[i]\u2019 and \u2018bottom[i]\u2019 becomes \u2018top[i]\u2019.</h4>\n\n<h4 id=\"help-ninja-find-the-minimum-number-of-operations-required\">Help Ninja find the minimum number of operations required.</h4>\n\n<h4 id=\"if-he-cannot-do-so-print-1\">If he cannot do so, print -1.</h4>\n\n<h5 id=\"for-example\">For Example :</h5>\n\n<pre><code>\u2018N\u2019 = 4, \u2018top\u2019 = {3, 5, 3, 1}, \u2018bottom\u2019 = {2, 3, 5, 3}.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/ninja_and_his_dominos_ex-13398.png\"/> </p>\n\n<pre><code>Now in this example, if Ninja rotates the second and the fourth dominos, the top row will be {3, 3, 3, 3}. Hence the answer is 2.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of input format contains \u2018T\u2019, denoting the number of test cases. Then each test case follows.\n\nThe first line of each test case contains an integer \u2018N\u2019, denoting the number of dominos.\n\nThe second line of the test case contains an array of \u2018N\u2019 integers denoting the \u2018top\u2019 array.\n\nThe third line of the test case contains an array of \u2018N\u2019 integers denoting the \u2018bottom\u2019 array.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print a single integer denoting the minimum number of rotations required.\n\nOutput for every query will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You are not required to print anything explicitly. It has already been taken care of. Just implement the functions.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= \u2018N\u2019 &lt;= 2 * 10^5\n1 &lt;= \u2018top[i]\u2019, \u2018bottom[i]\u2019 &lt;= 6\n\nTime Limit: 1 second\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n5\n1 1 5 6 1\n5 5 1 1 5\n3\n1 2 3\n2 2 4\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>2\n-1\n</code></pre>\n\n<h5 id=\"explanation-for-sample-output-1\">Explanation For Sample Output 1 :</h5>\n\n<pre><code>In the first test case, Ninja can rotate the third and fourth element to make the top row {1, 1, 1, 1, 1}. Hence the answer is 2.\n\nIn the second test case, there are no possible combinations of operations that can be performed to make either the top or the bottom part same. Hence the answer is -1.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n6\n6 4 6 2 6 6\n5 6 3 6 2 4\n1\n4\n5\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>2\n0\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -9,
            "dislikes": "NA",
            "rephrased": {
                "body": "You are given 'N' dominos arranged in a straight line. Each domino has a top and a bottom value. Two arrays, 'top' and 'bottom', represent these values, where 'top[i]' and 'bottom[i]' are the top and bottom values of the i-th domino, respectively. Your goal is to determine the minimum number of rotations required to make either all the top values or all the bottom values the same. A rotation involves swapping the top and bottom values of a single domino. If it's impossible to achieve this, return -1.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 2 * 10^5",
                    "1 <= top[i], bottom[i] <= 6",
                    "Time Limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "5\n1 1 5 6 1\n5 5 1 1 5",
                        "output": "2",
                        "explanation": "Rotating the third and fourth dominos results in the top row becoming {1, 1, 1, 1, 1}, requiring 2 rotations."
                    },
                    {
                        "input": "3\n1 2 3\n2 2 4",
                        "output": "-1",
                        "explanation": "No combination of rotations can make either the top or bottom row have identical values."
                    },
                    {
                        "input": "6\n6 4 6 2 6 6\n5 6 3 6 2 4",
                        "output": "2",
                        "explanation": null
                    },
                    {
                        "input": "1\n4\n5",
                        "output": "0",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Check for every element from 1 to 6 and find the minimum rotations needed.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}