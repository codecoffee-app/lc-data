{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 11019,
            "title": "NINJA AND HIS GIRLFRIEND",
            "titleSlug": "ninja-and-his-girlfriend_1376433",
            "content": "<h4 id=\"ninja-and-his-girlfriend-want-to-shift-to-a-new-locality-and-want-their-houses-distant-the-homes-in-that-locality-are-like-nodes-of-a-binary-search-tree\">Ninja and his girlfriend want to shift to a new locality and want their houses distant. The homes in that locality are like nodes of a \u201cBinary Search Tree.\u201d</h4>\n\n<h4 id=\"the-distance-between-the-houses-is-the-difference-between-the-house-numbers\">The distance between the houses is the difference between the house numbers.</h4>\n\n<h4 id=\"help-ninja-and-his-girlfriend-find-the-required-location\">Help Ninja and his girlfriend find the required location.</h4>\n\n<h4 id=\"so-your-task-is-to-find-the-minimum-absolute-difference-between-any-two-nodes\">So, your task is to find the minimum absolute difference between any two nodes.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>A binary search tree is a binary tree data structure, with the following properties\n</code></pre>\n\n<p>The left subtree of any node contains nodes with a value less than the node\u2019s value.\nThe right subtree of any node contains nodes with a value equal to or greater than the node\u2019s value.\nRight, and left subtrees are also binary search trees.</p>\n\n<h4 id=\"example\">Example:</h4>\n\n<pre><code>consider the following binary search tree, so the minimum absolute difference is between the node value, i.e., | 15-13 |= \u20182\u2019so \u20182\u2019is our answer.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/cnbst-8250.JPG\" alt=\"Example\"></p>\n\n<h4 id=\"input-format\">Input Format:</h4>\n\n<pre><code>The first line contains an integer \u2018T&#39; which denotes the number of test cases or queries to be run. Then the test cases follow.\nThe first line of each test case contains the tree elements in the level order form separated by a single space.\nIf any node does not have a left or right child, take -1 in its place. Refer to the example below.\n\n\nExample:\n\nElements are in the level order form. The input consists of values of nodes separated by a single space in a single line. In case a node is null, we take -1 in its place.\n\nFor example, the input for the tree depicted in the below image would be :\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/tree2-5139.png\" alt=\"Example\"></p>\n\n<pre><code>1\n2 3\n4 -1 5 6\n-1 7 -1 -1 -1 -1\n-1 -1\n\nExplanation :\nLevel 1 :\nThe root node of the tree is 1\n\nLevel 2 :\nLeft child of 1 = 2\nRight child of 1 = 3\n\nLevel 3 :\nLeft child of 2 = 4\nRight child of 2 = null (-1)\nLeft child of 3 = 5\nRight child of 3 = 6\n\nLevel 4 :\nLeft child of 4 = null (-1)\nRight child of 4 = 7\nLeft child of 5 = null (-1)\nRight child of 5 = null (-1)\nLeft child of 6 = null (-1)\nRight child of 6 = null (-1)\n\nLevel 5 :\nLeft child of 7 = null (-1)\nRight child of 7 = null (-1)\n\nThe first not-null node (of the previous level) is treated as the parent of the first two nodes of the current level. The second not-null node (of the previous level) is treated as the parent node for the next two nodes of the current level and so on.\n\nThe input ends when all nodes at the last level are null (-1).\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>The above format was just to provide clarity on how the input is formed for a given tree. \n\nThe sequence will be put together in a single line separated by a single space. Hence, for the above-depicted tree, the input will be given as:\n\n1 2 3 -1 5 6 7 -1 -1 -1 -1\n</code></pre>\n\n<h4 id=\"output-format\">Output Format:</h4>\n\n<pre><code>For each test case, print the minimum absolute difference between two different node values.     \nPrint output of each test case in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You are not required to print anything explicitly. It has already been taken care of. Just implement the function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints:</h4>\n\n<pre><code>1 &lt;= T &lt;= 5\n2 &lt;= N &lt;= 3000\n0 &lt;= data &lt;= 10^9\n\nWhere \u2018T\u2019 is the total number of test cases, \u2018N\u2019 is the number of nodes of the tree, and \u2018data\u2019 is the value mentioned on the node.\n\nTime Limit: 1 sec\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1:</h4>\n\n<pre><code>2\n5 3 7 2 4 6 8 -1 -1 -1 -1 -1 -1 -1 -1\n1 -1 6 -1 -1\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1:</h4>\n\n<pre><code>1\n5\n</code></pre>\n\n<h4 id=\"explanation-for-sample-1\">Explanation for Sample 1:</h4>\n\n<pre><code>Test Case 1:\nThe level order traversal of a given tree is 5 3 7 2 4 6 8 -1 -1 -1 -1 -1 -1 -1 -1; thus, its first root is root number with value 5 and left, and right nodes of the 5 are nodes with 3 and 7 respectively.\n</code></pre>\n\n<p>The binary tree according to the test case is:</p>\n\n<p><img src=\"https://files.codingninjas.in/bst1-8262.JPG\" alt=\"Example\"></p>\n\n<pre><code>So we choose the node which has a minimum absolute difference, i.e., \u20181\u2019, so our answer is \u20181\u2019.\n\nTest Case 2:\nThe binary tree according to the test case is:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/bst2-8263.JPG\" alt=\"Example\"></p>\n\n<pre><code>So as there are only two nodes in this tree, so on taking their absolute minimum difference, i.e \u20186 - 1\u2019  we get \u20185\u2019, so our answer is \u20185\u2019.\n</code></pre>\n\n<h4 id=\"sample-input2\">Sample Input2:</h4>\n\n<pre><code> 2\n2 1 -1 -1 -1\n10 -1 20 -1 30 -1 40 -1 -1\n</code></pre>\n\n<h4 id=\"sample-output2\">Sample Output2:</h4>\n\n<pre><code>1\n10\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 6,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a Binary Search Tree (BST), find the minimum absolute difference between any two of its nodes. The BST represents homes in a new locality, and the difference between node values represents the distance between houses. Your task is to help Ninja and his girlfriend find a location where the houses are closest to each other.",
                "constraints": [
                    "1 <= T <= 5",
                    "2 <= N <= 3000",
                    "0 <= data <= 10^9",
                    "Where \u2018T\u2019 is the total number of test cases, \u2018N\u2019 is the number of nodes of the tree, and \u2018data\u2019 is the value mentioned on the node.",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "5 3 7 2 4 6 8 -1 -1 -1 -1 -1 -1 -1 -1",
                        "output": "1",
                        "explanation": "The BST is represented as 5 3 7 2 4 6 8. The minimum absolute difference is between nodes 3 and 2 (or 6 and 7), which is |3-2| = 1."
                    },
                    {
                        "input": "1 -1 6 -1 -1",
                        "output": "5",
                        "explanation": "The BST is represented as 1 -1 6. The only possible difference is |6-1| = 5."
                    },
                    {
                        "input": "2 1 -1 -1 -1",
                        "output": "1",
                        "explanation": "The BST is represented as 2 1 -1 -1 -1. The only possible difference is |2-1| = 1."
                    },
                    {
                        "input": "10 -1 20 -1 30 -1 40 -1 -1",
                        "output": "10",
                        "explanation": "The BST is represented as 10 -1 20 -1 30 -1 40 -1 -1. The minimum absolute difference is between nodes 20 and 10 which is |20-10| = 10, between nodes 30 and 20 which is |30-20| = 10, and between nodes 40 and 30 which is |40-30| = 10."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you sort the elements of the tree?</p>",
            "<p>Can you sort the elements of the tree?</p>",
            "<p>Can you traverse the tree?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Trees",
                "slug": "trees"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}