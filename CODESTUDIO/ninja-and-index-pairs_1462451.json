{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12509,
            "title": "Ninja and Index Pairs",
            "titleSlug": "ninja-and-index-pairs_1462451",
            "content": "<h4 id=\"ninja-has-been-given-a-string-text-and-an-array-list-of-strings-words-of-size-n-ninja-has-to-print-all-index-pairs-i-j-such-that-the-substring-of-text-is-present-in-the-words\">Ninja has been given a string \u2018TEXT\u2019 and an array/list of strings \u2018WORDS\u2019 of size \u2018N\u2019. Ninja has to print all index pairs (\u2018i\u2019, \u2018j\u2019) such that the substring of \u2018TEXT\u2019 is present in the \u2018WORDS\u2019.</h4>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>Ninja has to return all the index pairs (\u2018i\u2019, \u2018j\u2019) in sorted order, i.e., sort them by the first element of the pair, i.e., \u2018i\u2019.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 representing the number of test cases. \n\nThe first line of each test case will contain a single space-separated string \u2018TEXT\u2019 which represents the value of \u2018TEXT\u2019.\n\nThe next line of each test case contains a single space-separated integer \u2018N\u2019 denoting the size of \u2018WORDS\u2019.\n\nThe next line of each test case contains \u2018N\u2019 space-separated integers representing the values of \u2018WORDS\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print all index pairs (\u2018i\u2019, \u2018j\u2019) such that the substring of \u2018TEXT\u2019 is present in the \u2018WORDS\u2019 in sorted order according to the first element of the pair.\n\nOutput for every test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You don\u2019t need to print anything; It has already been taken care of.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= \u2018T\u2019 &lt;= 50    \n1 &lt;= | \u2018TEXT\u2019 | &lt;= 100\n1 &lt;= \u2018N\u2019 &lt;= 20\n1 &lt;= |\u2019WORDS[i]\u2019 | &lt;= 50  \n\nWhere \u2018T\u2019 is the number of test cases, &#39;N&#39; is the size of array/vector \u2018WORDS\u2019, |\u2019WORDS[i]\u2019| represents the size of each word in \u2018WORDS\u2019 and |\u2019TEXT\u2019| represents the size of input string \u2018TEXT\u2019|.\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1\nabcdefcd\n2\ncd abc\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>0 2\n2 3\n6 7\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of sample input 1:</h5>\n\n<pre><code>In the first test case:\nFor the string \u201ccd\u201d the index of this substring in the given \u2018TEXT\u2019 string is (2, 3) and (6, 7).\nFor string \u201cabc\u201d index of this substring in given \u2018TEXT\u2019 string is (0, 2).\nHence the sorted order of these indices is (0, 2), (2, 3), and (6, 7).\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\ncodingninjas\n4\ncod co c nar\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>0 0\n0 1\n0 2\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation for sample input 2:</h5>\n\n<pre><code>In the first test case:\nFor string \u201ccod\u201d index of this substring in given \u2018TEXT\u2019 string is (0, 2)\nFor string \u201cco\u201d index of this substring in given \u2018TEXT\u2019 string is (0, 1).\nFor string \u201cc\u201d index of this substring in given \u2018TEXT\u2019 string is (0, 0)\nFor string \u201cnar\u201d there is not an index present in this string \u2018TEXT\u2019.\nHence the sorted order of these indices is (0, 0), (0, 1), and (0, 2).\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 0,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string 'TEXT' and an array 'WORDS' of strings, find all index pairs (i, j) such that the substring of 'TEXT' from index i to j (inclusive) is equal to a word in 'WORDS'. Return the index pairs in sorted order based on the starting index 'i'.",
                "constraints": [
                    "1 <= T <= 50",
                    "1 <= |TEXT| <= 100",
                    "1 <= N <= 20",
                    "1 <= |WORDS[i]| <= 50"
                ],
                "testcases": [
                    {
                        "input": "abcdefcd\n2\ncd abc",
                        "output": "0 2\n2 3\n6 7",
                        "explanation": "The word 'abc' is found in 'abcdefcd' from index 0 to 2. The word 'cd' is found at index 2 to 3 and from index 6 to 7. The index pairs are sorted by the starting index."
                    },
                    {
                        "input": "codingninjas\n4\ncod co c nar",
                        "output": "0 0\n0 1\n0 2",
                        "explanation": "The word 'cod' is found in 'codingninjas' from index 0 to 2. The word 'co' is found from index 0 to 1. The word 'c' is found from index 0 to 0. The word 'nar' is not found. Sorted order is (0,0), (0,1), (0,2)."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you think of a simple iteration on \u2018WORDS\u2019?</p>",
            "<p>Can you think by storing all the values in a Trie?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Tries",
                "slug": "tries"
            },
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}