{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12474,
            "title": "Ninja and Locker",
            "titleSlug": "ninja-and-locker_1461502",
            "content": "<h4 id=\"ninja-has-two-arrays-cash-and-locker-denoting-the-height-of-each-stack-of-cash-of-unit-width-and-height-of-n-sections-in-the-locker-respectively\">Ninja has two arrays \u2018CASH\u2019\u2019 and \u2018LOCKER\u2019 denoting the height of each stack of cash of unit width and height of \u2018N\u2019 sections in the locker respectively.</h4>\n\n<h4 id=\"the-locker-sections-are-labeled-from-0-to-n-1-from-left-to-right\">The locker sections are labeled from 0 to \u2018N\u2019 - 1 from left to right.</h4>\n\n<h4 id=\"cash-stacks-can-only-be-put-in-the-locker-by-following-the-certain-rules\">Cash stacks can only be put in the locker by following the certain rules:</h4>\n\n<h4 id=\"cash-stacks-can-t-be-piled-up\"><li> Cash stacks can\u2019t be piled up </li></h4>\n\n<h4 id=\"you-can-take-any-order-of-cash-stack\"><li> You can take any order of cash stack </li></h4>\n\n<h4 id=\"you-can-push-the-stack-in-the-locker-only-from-left-to-right\"><li> You can push the stack in the locker only from left to right </li></h4>\n\n<h4 id=\"if-height-of-some-stack-is-greater-than-the-height-of-locker-section-then-the-stack-will-be-stopped-before-that-room\"><li> If height of some stack is greater than the height of locker section then the stack will be stopped before that room </li></h4>\n\n<h4 id=\"ninja-wants-your-help-to-find-the-maximum-number-of-cash-stacks-he-can-put-into-the-locker\">Ninja wants your help to find the maximum number of cash stacks he can put into the locker.</h4>\n\n<h5 id=\"for-example\">For Example:</h5>\n\n<pre><code>As we can see from the example below we are only able to put two stacks in the locker so our answer will be 2.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/screenshot-from-2021-04-14-09-04-46-9129.png\" alt=\"\"></p>\n\n<p><img src=\"https://files.codingninjas.in/screenshot-from-2021-04-14-10-48-57-9133.png\" alt=\"\"></p>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer &#39;T&#39; representing the number of test cases.\n\nThe first line of each test case contains two space-separated integers \u2018N\u2019 and \u2018M\u2019 denoting the size of \u2018CASH\u2019 and \u2018LOCKER\u2019 arrays respectively.\n\nThe second line of each test case contains \u2018N\u2019 space-separated integers denoting the elements of \u2018CASH\u2019. \n\nThe third line of each test case contains \u2018M\u2019 space-separated integers denoting the elements of \u2018LOCKER\u2019. \n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print the maximum number of cash stacks that ninja can put in the locker.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= N,M &lt;= 5000\n1 &lt;= CASH[i], LOCKER[i] &lt;= 10^9\n\nWhere \u2018T\u2019 is the number of test cases, \u2018N\u2019 and \u2018M\u2019 is the size of \u2018CASH\u2019 and \u2018LOCKER\u2019 respectively, and &#39;CASH[i]&#39; and &#39;LOCKER[i]&#39; denotes the &#39;i-th&#39; elements of the array.\n\nTime limit: 1 sec\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n3 3\n1 2 3\n2 2 1\n4 3\n4 3 2 5\n4 2 3 \n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>2\n2\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1:</h5>\n\n<pre><code>Test Case 1 :  \nWe can put at most two cash stacks in the locker.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/screenshot-from-2021-04-14-09-05-42-9131.png\" alt=\"\"></p>\n\n<pre><code>Test Case 2 : \nWe can see in the below image we can put at most 2 cash stacks.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/screenshot-from-2021-04-14-09-07-09-9132.png\" alt=\"\"></p>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n4 5\n5 9 4 2\n5 4 3 2 1\n4 4\n1 1 1 1\n1 2 3 4 \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>3\n4\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 6,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two arrays, `CASH` and `LOCKER`, representing the heights of cash stacks and locker sections respectively, determine the maximum number of cash stacks that can be placed into the locker following these rules:\n\n1.  Cash stacks cannot be piled up in the same locker section.\n2.  The order of cash stacks can be chosen arbitrarily.\n3.  Cash stacks must be placed into the locker from left to right.\n4.  If the height of a cash stack exceeds the height of the current locker section, the stack cannot be placed in that section or any subsequent sections.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= N, M <= 5000",
                    "1 <= CASH[i], LOCKER[i] <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "n = 3, cash = [1, 2, 3], m = 3, locker = [2, 2, 1]",
                        "output": "2",
                        "explanation": "We can put at most two cash stacks in the locker. For example, if we place stack 1 (height 1) in locker section 0 (height 2) and stack 2 (height 2) in locker section 1 (height 2), we can't place stack 3 (height 3) as the last locker section has height 1."
                    },
                    {
                        "input": "n = 4, cash = [4, 3, 2, 5], m = 3, locker = [4, 2, 3]",
                        "output": "2",
                        "explanation": "We can see that we can put at most 2 cash stacks. If we choose cash = [4,3,2,5] and locker = [4,2,3]  , stack of height 4 can be placed at locker section of height 4 and stack of height 3 can be placed at locker section of height 2, rest all can not be placed hence 2 is answer."
                    },
                    {
                        "input": "n = 4, cash = [5, 9, 4, 2], m = 5, locker = [5, 4, 3, 2, 1]",
                        "output": "3",
                        "explanation": "The optimal arrangement is to place stacks with heights 5, 4, and 2. A stack of height 9 cannot be placed since height of locker section is decreasing."
                    },
                    {
                        "input": "n = 4, cash = [1, 1, 1, 1], m = 4, locker = [1, 2, 3, 4]",
                        "output": "4",
                        "explanation": "All cash stacks can be placed in the locker since each stack has a height of 1, and the locker section heights are non-decreasing."
                    },
                    {
                        "input": "n = 2, cash = [6, 5], m = 2, locker = [5, 6]",
                        "output": "2",
                        "explanation": "The stacks can be rearranged to have height cash[5, 6] for an optimal solution."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to place the minimum possible cash stack in the locker first.</p>",
            "<p>Try to solve the problem greedily that is put the smallest height stack first.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}