{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 19797,
            "title": "Ninja And Matrix",
            "titleSlug": "ninja-and-matrix_4537652",
            "content": "<h4 id=\"ninja-loves-patterns-and-visuals-and-recently-he-learned-about-2-dimensional-matrices-now-he-wants-to-use-his-pattern-skills-on-it-he-has-been-provided-with-a-2-dimensional-matrix-with-a-size-of-n-x-n-and-he-wants-to-print-the-matrix-in-a-snake-pattern-formally-speaking-he-wants-to-print-every-odd-indexed-row-in-reverse-order-0-indexed-and-even-indexed-row-as-it-is-on-a-single-line\">Ninja loves patterns and visuals and recently he learned about 2-dimensional matrices now he wants to use his pattern skills on it. He has been provided with a 2-dimensional matrix with a size of \u2018N\u2019x\u2019N\u2019 and he wants to print the matrix in a snake pattern. Formally speaking he wants to print every odd indexed row in reverse order(0-indexed) and even indexed row as it is on a single line.</h4>\n\n<h5 id=\"example\">EXAMPLE:</h5>\n\n<pre><code>Input: &#39;N&#39; = 2, \u2018MAT\u2019 = [[1, 2], [5, 6]]\n\nOutput: 1 2 6 5\n\n So the first row will be printed as it is and the second row will be printed in reverse order.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line will contain the integer &#39;T&#39;, denoting the number of test cases.\n\nFor each test case, the first line will contain a single integer &#39;N&#39;, the size of the matrix \u2018Mat\u2019, and then the next \u2018N\u2019 lines will contain \u2018N\u2019 integers representing the matrix elements.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case, print the matrix in a specified manner on a new line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don&#39;t need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= &#39;T&#39; &lt;= 10\n1 &lt;= &#39;N&#39; &lt;= 10^3\n1 &lt;= \u2018MAT[i]\u2019 &lt;= 10^9\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n3\n1 2 3\n4 5 6\n7 8 9\n2\n5 10\n20 15\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>1 2 3 6 5 4 7 8 9 \n5 10 15 20    \n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1 :</h5>\n\n<pre><code>For the first case:\nThe first row will be printed as it is and the second row will be printed in reverse order.\n\nFor the second case:\nSimilarly as for test 1.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n1\n1\n2\n4 4\n6 6\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>1\n4 4 6 6 \n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 9,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a 2D square matrix of size N x N, print the matrix in a snake pattern. This means printing even-indexed rows as they are, and odd-indexed rows in reverse order (0-indexed). All elements should be printed on a single line, separated by spaces.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10^3",
                    "1 <= MAT[i][j] <= 10^9",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "3\n3\n1 2 3\n4 5 6\n7 8 9\n2\n5 10\n20 15",
                        "output": "1 2 3 6 5 4 7 8 9\n5 10 15 20",
                        "explanation": "For the first test case, the matrix is 3x3. The first row (1 2 3) is printed as is. The second row (4 5 6) is printed in reverse order as (6 5 4). The third row (7 8 9) is printed as is.\nFor the second test case, the matrix is 2x2. The first row (5 10) is printed as is. The second row (20 15) is printed in reverse order as (15 20)."
                    },
                    {
                        "input": "2\n1\n1\n2\n4 4\n6 6",
                        "output": "1\n4 4 6 6",
                        "explanation": "For the first test case, the matrix is 1x1. The first row (1) is printed as is.\nFor the second test case, the matrix is 2x2. The first row (4 4) is printed as is. The second row (6 6) is printed in reverse order as (6 6)."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you think of something like an even and odd row?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}