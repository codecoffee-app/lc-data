{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12634,
            "title": "Ninja and Movie Dilemma",
            "titleSlug": "ninja-and-movie-dilemma_1467374",
            "content": "<h4 id=\"ninja-has-a-list-of-movies-and-other-details-regarding-the-movies-the-details-of-each-movie-with-ninja-are-movieid-rating-of-the-movie-whether-movie-is-age-restricted-or-not-price-for-the-movie-ticket-distance-of-the-theater-if-ninja-goes-to-the-theater-with-his-family-he-will-choose-movies-with-age-restriction-but-if-he-plans-to-go-with-his-friends-he-can-select-any-movie-from-the-movie-list-also-ninja-has-constraints-on-the-maximum-distance-of-the-theater-he-chooses-and-the-price-he-pays-for-each-ticket-can-you-end-the-ninja-s-dilemma\">Ninja has a list of movies and other details regarding the movies. The details of each Movie with Ninja are [ &#39;MovieID&#39;, &#39;Rating&#39; of the Movie, Whether Movie is &#39;Age&#39; Restricted or not, &#39;Price&#39; for the movie ticket, &#39;Distance&#39; of the theater]. If Ninja goes to the theater with his family, he will choose movies with &#39;Age&#39; Restriction, but if he plans to go with his friends, he can select any movie from the movie list. Also, Ninja has constraints on the maximum &#39;Distance&#39; of the theater he chooses and the &#39;Price&#39; he pays for each ticket. Can you end the Ninja\u2019s Dilemma?</h4>\n\n<h4 id=\"you-have-to-print-the-array-list-of-movieids-from-the-list-of-movies-ordered-by-rating-of-the-movie-from-highest-to-lowest-for-movies-with-the-same-rating-order-them-by-movieid-from-highest-to-lowest-do-not-forget-to-consider-the-age-restriction-factor-age-restriction-will-be-1-for-age-restricted-movies-and-0-otherwise\">You have to print the array/list of &#39;MovieID&#39;s from the list of movies, ordered by &#39;Rating&#39; of the Movie from highest to lowest. For movies with the same &#39;Rating&#39;, order them by &#39;MovieID&#39; from highest to lowest. Do not forget to consider the &#39;Age&#39; Restriction factor!! ( &#39;Age&#39; Restriction will be 1 for &#39;Age&#39; Restricted Movies and 0 otherwise.)</h4>\n\n<h4 id=\"note-the-list-of-movies-is-denoted-by-the-array-list-movie\">Note : The list of movies is denoted by the array/list \u2018movie\u2019.</h4>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 representing the number of test cases. \n\nThe first line of each test case will contain a single integer \u2018N\u2019 which denotes the number of Movies in the list with Ninja.\n\nThe next \u2018N\u2019 lines contain the five space-separated integers \u2018movie[i][0]\u2019,  \u2018movie[i][1]\u2019,  \u2018movie[i][2]\u2019,  \u2018movie[i][3]\u2019,  \u2018movie[i][4]\u2019 , where \u2018movie[i][0]\u2019 is the MovieID of the \u2018i-th\u2019 movie, \u2018movie[i][1]\u2019 is the rating of the \u2018i-th\u2019 movie,  \u2018movie[i][2]\u2019 indicates whether \u2018i-th\u2019 movie is Age Restricted or not,  \u2018movie[i][3]\u2019 is the price of the ticket for the \u2018i-th\u2019 movie and  \u2018movie[i][4]\u2019 is the distance of the theater where the \u2018i-th\u2019 movie is being shown.\n\nThe next line contains three space separated integers \u2018AgeRes\u2019 , \u2018MaxPrice\u2019, \u2018MaxDistance\u2019 where \u2018AgeRes\u2019 will be 1 if Age Restricted Movies has to be selected and 0 otherwise, \u2018MaxPrice\u2019 is the maximum amount of price that Ninja can spend on one ticket and \u2018MaxDistance\u2019 is the maximum distance ninja can travel from home. \n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print the array/list of \u2018MovieID\u2019s after filtering as discussed above.\n\nOutput for every test case will be printed in a separate line.\n\nNote: You don\u2019t need to print anything; It has already been taken care of.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= N &lt;= 10000\n1 &lt;= movie[ i ][ 0 ], movie[ i ][ 1 ], movie[ i ][ 3 ], movie[ i ][ 4 ] &lt;= 100000  for each \u2018i-th\u2019 movie\n0 &lt;= movie[ i ][ 2 ], AgeRes &lt;= 1\n1 &lt;= MaxPrice, MaxDistance &lt;= 100000 \nAll movie[ i ][ 0 ] ( MovieIDs ) are distinct.\n\nWhere \u2018T\u2019 is the number of test cases.\n\nWhere &#39;N&#39; is the number of movies, \u2019movie[i][0]\u2019 is the \u2018MovieID\u2019 of the \u2018i-th\u2019 movie, \u2018movie[i][1]\u2019 is the \u2018Rating\u2019 of the \u2018i-th\u2019 movie,  \u2018movie[i][2]\u2019 indicates whether \u2018i-th\u2019 movie is \u2018Age\u2019 Restricted or not,  \u2018movie[i][3]\u2019 is the \u2018Price\u2019 of the ticket for the \u2018i-th\u2019 movie and  \u2018movie[i][4]\u2019 is the distance of the theater where the \u2018i-th\u2019 movie is being shown.\n\nWhere \u2018AgeRes\u2019 will be 1 if \u2018Age\u2019 Restricted Movies has to be selected and 0 otherwise, \u2018MaxPrice\u2019 is the maximum amount of price that Ninja can spend on one ticket and \u2018MaxDistance\u2019 is the maximum distance ninja can travel from home. \n\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n3\n1 7 1 5 7\n2 6 0 4 6\n3 6 1 7 4\n1 6 7\n3\n1 7 1 5 7\n2 6 0 4 6\n3 6 1 5 4\n0 6 7 \n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>1 \n1 3 2\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of sample input 1 :</h5>\n\n<pre><code>In the first test case, only the movie with MovieID 1 passes all the conditions.\n\nIn the second test case, all three movies pass the conditions. Movie with MovieID 1 has the highest rating and hence will be first in the answer array. The other two movies have the same ratings but MovieID 3 has a higher ID than MovieID 1 and hence the resulting array will be 1 3 2.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n2\n1 8 0 5 7 \n2 3 1 2 2\n1 5 7\n5\n1 1 1 1 1\n2 6 1 4 6    \n3 9 0 7 5    \n4 7 0 6 5\n5 2 1 3 3\n0 6 5       \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>2\n4 5 1\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation for sample input 2 :</h5>\n\n<pre><code>In the first test case, only the movie with MovieID 1 passes all the conditions.\n\nIn the second test case, the movie with MovieID 2 does not pass the maximum distance condition while the movie with MovieID 3 does not pass the maximum price condition. All the other three ( MovieIDs 1, 4, 5) pass the conditions. According to the rating of the movies, the order will be [ 4, 5, 1 ] as MovieID 4 has the highest rating (7) , and MovieID 5 follows it with rating (2) and MovieID 1 with the lowest rating (1) will end the sequence.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 3,
            "dislikes": "NA",
            "rephrased": {
                "body": "Ninja has a list of movies with details including MovieID, Rating, Age Restriction (1 for restricted, 0 otherwise), Price, and Distance.  Ninja wants to select movies based on whether he's going with family (age-restricted movies only) or friends (any movie). He also has a maximum price he's willing to pay per ticket and a maximum distance he's willing to travel.  The goal is to return a list of MovieIDs, filtered according to these criteria, sorted by Rating (highest to lowest), and then by MovieID (highest to lowest) for movies with the same rating.",
                "constraints": [
                    "1 <= T <= 100 (Number of test cases)",
                    "1 <= N <= 10000 (Number of movies)",
                    "1 <= movie[i][0], movie[i][1], movie[i][3], movie[i][4] <= 100000 for each movie (MovieID, Rating, Price, Distance)",
                    "0 <= movie[i][2], AgeRes <= 1 (Age Restriction flags)",
                    "1 <= MaxPrice, MaxDistance <= 100000",
                    "All movie[i][0] (MovieIDs) are distinct.",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "2\n3\n1 7 1 5 7\n2 6 0 4 6\n3 6 1 7 4\n1 6 7\n3\n1 7 1 5 7\n2 6 0 4 6\n3 6 1 5 4\n0 6 7",
                        "output": "1\n1 3 2",
                        "explanation": "In the first test case, with AgeRes = 1, MaxPrice = 6, and MaxDistance = 7, only movie with ID 1 satisfies the age restriction, price, and distance constraints.\nIn the second test case, with AgeRes = 0, MaxPrice = 6, and MaxDistance = 7, all three movies satisfy the price and distance constraints. Sorting them by rating (highest to lowest) and then by MovieID (highest to lowest) results in the order 1, 3, 2."
                    },
                    {
                        "input": "2\n2\n1 8 0 5 7\n2 3 1 2 2\n1 5 7\n5\n1 1 1 1 1\n2 6 1 4 6\n3 9 0 7 5\n4 7 0 6 5\n5 2 1 3 3\n0 6 5",
                        "output": "2\n4 5 1",
                        "explanation": "In the first test case, with AgeRes=1, MaxPrice=5, and MaxDistance=7, only the movie with ID 2 satisfies the age restriction, price, and distance constraints.\nIn the second test case, with AgeRes=0, MaxPrice=6, and MaxDistance=5, movie 2 exceeds MaxDistance and movie 3 exceeds MaxPrice. The other movies, 1, 4, and 5, are within constraints. Sorted by Rating (9, 7, 1) with ID 4 having the highest rating, ID 5 and ID 1 follow , so the output should be 4 5 1."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you filter all the needed movies list by iterating and then compare the filtered movies?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}