{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12527,
            "title": "Ninja and operations",
            "titleSlug": "ninja-and-operations_1463981",
            "content": "<h4 id=\"ninja-has-been-given-an-array-list-cost-of-size-n-and-an-integer-tar-ninja-can-perform-one-of-the-following-operations-on-each-element-of-the-cost-array-list-i-e-floor-cost-i-or-ceil-cost-i\">Ninja has been given an array/list \u2018COST\u2019 of size \u2018N\u2019 and an integer \u2018TAR\u2019. Ninja can perform one of the following operations on each element of the \u2018COST\u2019 array/list i.e, \u2018FLOOR(COST[i])\u2019 or \u2018CEIL(COST[i])\u2019.</h4>\n\n<h4 id=\"ninja-has-to-find-if-after-performing-one-of-these-operations-on-each-element-of-the-cost-the-sum-of-all-elements-is-equal-to-tar-or-not\">Ninja has to find if after performing one of these operations on each element of the &#39;COST&#39;, the sum of all elements is equal to \u2018TAR\u2019 or not.</h4>\n\n<h4 id=\"if-the-sum-is-equal-to-tar-then-print-the-smallest-possible-value-of-opr-cost-i-cost-i-from-0-to-n-1-up-to-3-decimal-places-where-opr-cost-i-is-floor-cost-i-or-ceil-cost-i-else-print-1\">If the sum is equal to \u2018TAR\u2019 then print the smallest possible value of | opr(\u2018COST[i]\u2019) - \u2018COST[i]\u2019 | from 0 to \u2018N\u2019 - 1 up to 3 decimal places where \u2018opr(\u2018COST[i])\u2019 is \u2018FLOOR(COST[i])\u2019 or \u2018CEIL(COST[i])\u2019. Else print -1.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>FLOOR(2.342) = 2 \nCEIL(2.342) = 3\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 representing the number of test cases. \n\nThe first line of each test case will contain two integers \u2018N\u2019 and \u2018TAR\u2019 which denotes the number of elements of \u2018COST\u2019 and target sum which has been discussed above.\n\nThe next \u2018N\u2019 lines contain space-separated real numbers that have exactly 3 decimal places representing the elements of the \u2018COST\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print a single line containing a single integer such that If the sum is equal to \u2018TAR\u2019 then print the smallest possible value of |opr(\u2018COST[i]\u2019) - \u2018COST[i]\u2019| from 0 to \u2018N\u2019 - 1 up to 3 decimal places. Else print -1.\n\n\nThe output for every test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You don\u2019t need to print anything; It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 50\n1 &lt;= N &lt;= 500\n1 &lt;= TAR &lt;= 10000\n0 &lt;= COST[i] &lt;= 1000\n\nWhere \u2018T\u2019 is the number of test cases, &#39;N&#39; is the size of \u2018COST\u2019, the target sum which is discussed above, and \u2018COST[i]\u2019 represents the real number present in \u2018COST\u2019.\n\nTime limit: 1 sec.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1\n3 8\n0.500 2.300 4.500 \n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>1.300\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of sample input 1:</h5>\n\n<pre><code>In the first test case,\nIf we perform CEIL(COST[0]) + FLOOR(COST[1]) + CEIL(COST[2]) = 1 + 2 + 5 = 8\nAnd the smallest possible value of  | opr(\u2018COST[i]\u2019) - \u2018COST[i]\u2019 | from 0 to \u2018N\u2019 - 1 is (1 - 0.5) + (2.3 - 2) + (5 - 4.5) = 1.3\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code> 1\n 3  10\n 1.840 2.640 3.630 \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code> -1\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation for sample input 2:</h5>\n\n<pre><code>In the first test case, it is impossible to make the sum of all elements of \u2018COST\u2019 equal to \u2018TAR\u2019 after performing the operations. \n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 7,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of real numbers 'COST' and a target integer 'TAR', determine if it's possible to achieve the target sum by applying either the floor or ceiling operation to each element in 'COST'. If the target sum is achievable, find the minimum sum of absolute differences between the original value and the operated value (floor or ceiling) across all elements, formatted to three decimal places. Otherwise, return -1.",
                "constraints": [
                    "1 <= T <= 50",
                    "1 <= N <= 500",
                    "1 <= TAR <= 10000",
                    "0 <= COST[i] <= 1000"
                ],
                "testcases": [
                    {
                        "input": "cost = [0.500, 2.300, 4.500], tar = 8",
                        "output": "1.300",
                        "explanation": "CEIL(0.500) + FLOOR(2.300) + CEIL(4.500) = 1 + 2 + 5 = 8.  The minimum difference is |1-0.5| + |2-2.3| + |5-4.5| = 0.5 + 0.3 + 0.5 = 1.3"
                    },
                    {
                        "input": "cost = [1.840, 2.640, 3.630], tar = 10",
                        "output": "-1",
                        "explanation": "It is impossible to achieve a sum of 10 by applying floor or ceiling to each element in the given array."
                    },
                    {
                        "input": "cost = [1.000, 2.000, 3.000], tar = 6",
                        "output": "0.000",
                        "explanation": "FLOOR(1.000) + FLOOR(2.000) + FLOOR(3.000) = 1 + 2 + 3 = 6. All values are integers, so the minimum difference is 0."
                    },
                    {
                        "input": "cost = [1.100, 2.200, 3.300], tar = 9",
                        "output": "-1",
                        "explanation": "It is impossible to achieve a sum of 9."
                    },
                    {
                        "input": "cost = [0.100, 0.200, 0.300], tar = 1",
                        "output": "0.400",
                        "explanation": "CEIL(0.100) + CEIL(0.200) + FLOOR(0.300) = 1 + 1 + 0 = 2 (too high). FLOOR(0.100) + CEIL(0.200) + CEIL(0.300) = 0 + 1 + 1 = 2 (too high). FLOOR(0.100) + FLOOR(0.200) + CEIL(0.300) = 0 + 0 + 1 = 1.  The minimum difference is |0 - 0.1| + |0 - 0.2| + |1-0.3| = 0.1 + 0.2 + 0.7 = 1.0.  Or CEIL(0.100) + FLOOR(0.200) + FLOOR(0.300) = 1 + 0 + 0 = 1. The diff is |1 - 0.1| + |0 - 0.2| + |0 - 0.3| = 0.9 + 0.2 + 0.3 = 1.4."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you think by storing all elements into a max-heap?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Heap",
                "slug": "heap"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}