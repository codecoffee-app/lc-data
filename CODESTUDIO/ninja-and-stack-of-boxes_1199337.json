{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10282,
            "title": "Ninja and Stack of Boxes",
            "titleSlug": "ninja-and-stack-of-boxes_1199337",
            "content": "<h4 id=\"ninja-has-been-given-n-rectangular-3-d-boxes-each-box-has-dimensions-length-l-breadth-b-and-height-h-ninja-has-to-create-a-stack-of-boxes-as-tall-as-possible-but-there-is-a-condition-to-do-so\">Ninja has been given \u2018N\u2019 rectangular 3-D \u2018BOXES\u2019. Each box has dimensions Length \u2018L\u2019, Breadth \u2018B\u2019 and Height \u2018H\u2019. Ninja has to create a stack of boxes as tall as possible. But there is a condition to do so.</h4>\n\n<h4 id=\"you-can-only-place-a-box-on-top-of-another-box-only-if-the-dimensions-of-the-2-d-base-of-the-lower-box-are-each-strictly-larger-than-those-of-the-2-d-base-of-the-higher-box-you-can-rotate-any-box-so-that-any-side-of-the-box-is-used-as-a-base-you-can-take-multiple-instances-of-any-box\">You can only place a box on top of another box only if the dimensions of the 2-D base of the lower box are each strictly larger than those of the 2-D base of the higher box. You can rotate any box so that any side of the box is used as a base. You can take multiple instances of any box.</h4>\n\n<h4 id=\"can-you-help-the-ninja-to-create-a-stack-of-boxes-as-tall-as-possible\">Can you help the Ninja to create a stack of boxes as tall as possible?.</h4>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 which denotes the number of test cases or queries to be run. Then the test cases follow.\n\nThe first line of each test case contains a space-separated integer \u2018N\u2019, which represents the number of boxes.\n\nThe next \u2018N\u2019 lines of each test case contain three space-separated integers \u2018L\u2019, \u2018B\u2019, and \u2019H\u2019 that represent the length, breadth, and height of a box.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print the maximum height of the stack which can be made using these boxes.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= \u2018T\u2019 &lt;= 100\n1 &lt;= \u2018N\u2019 &lt;= 5000\n1 &lt;= \u2018L\u2019, \u2018B\u2019, \u2018H\u2019 &lt;= 100000 \n\nTime Limit: 1 second\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>1\n3\n1 2 3\n2 3 4\n3 4 5\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>15\n</code></pre>\n\n<h4 id=\"explanation-for-sample-output-1\">Explanation For Sample Output 1 :</h4>\n\n<pre><code>For sample test case 1 : \n\nIn this test case, the possible rotations of all the boxes are  \nBox 1: 1 2 3   2 3 1   3 1 2\nBox 2: 2 3 4   3 4 2   4 2 3\nBox 3: 3 4 5   3 5 4   4 5 3\n\nSo we can use Box 3 with dimensions {4 5 3} as the bottom-most box.\n\nThen we can place Box 3 with dimensions {3 4 5} on the previous box as we can use multiple instances of the same box.\n\nThen we can place Box 2 with dimensions {2 3 4} on Box 3\n\nThen we can place Box 1 with dimensions {1 2 3} on Box 2.\n\nHence the maximum height of the stack is 3 + 5 + 4 + 3 =&gt; 15 \n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>1\n3\n1 2 3\n2 3 4\n4 5 6\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>19\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": -5,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given 'N' rectangular 3-D boxes, each with dimensions Length 'L', Breadth 'B', and Height 'H', the task is to create the tallest possible stack of boxes. A box can only be placed on top of another if the base dimensions of the lower box are strictly larger than those of the upper box. Boxes can be rotated to use any side as the base, and multiple instances of a box are allowed.  Determine the maximum height of the stack that can be created.",
                "constraints": [
                    "1 <= \u2018T\u2019 <= 100",
                    "1 <= \u2018N\u2019 <= 5000",
                    "1 <= \u2018L\u2019, \u2018B\u2019, \u2018H\u2019 <= 100000",
                    "Time Limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "1\n3\n1 2 3\n2 3 4\n3 4 5",
                        "output": "15",
                        "explanation": "Possible rotations for the boxes are:\nBox 1: 1x2x3, 2x3x1, 3x1x2\nBox 2: 2x3x4, 3x4x2, 4x2x3\nBox 3: 3x4x5, 3x5x4, 4x5x3\n\nAn optimal stack can be built as follows:\nBottom: Box 3 (4x5x3) - Height 3\nNext: Box 3 (3x4x5) - Height 5\nNext: Box 2 (2x3x4) - Height 4\nTop: Box 1 (1x2x3) - Height 3\n\nTotal height: 3 + 5 + 4 + 3 = 15"
                    },
                    {
                        "input": "1\n3\n1 2 3\n2 3 4\n4 5 6",
                        "output": "19",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Think of the Recurrence Relation.</p>",
            "<p>Think of the memoization.</p>",
            "<p>Think of the Longest Increasing subsequence.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}