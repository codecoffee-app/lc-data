{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10518,
            "title": "Ninja and Strings",
            "titleSlug": "ninja-and-strings_1230784",
            "content": "<h4 id=\"ninja-has-been-given-a-string-str-containing-lowercase-english-alphabets-he-wants-to-generate-all-the-possible-subsequences-of-the-str-in-lexicographically-sorted-order\">Ninja has been given a string \u2018STR\u2019 containing lowercase english alphabets. He wants to generate all the possible subsequences of the \u2018STR\u2019 in lexicographically sorted order.</h4>\n\n<h4 id=\"for-example-for-str-abc-following-are-the-subsequences-in-lexicographically-sorted-order\">For example: For \u2018STR\u2019 = \u201cabc\u201d following are the subsequences in lexicographically sorted order:</h4>\n\n<pre><code>[\u201ca\u201d], [\u201cab\u201d], [\u201cabc\u201d], [\u201cac\u201d], [\u201cb\u201d], [\u201cbc\u201d], [\u201cc\u201d]\n</code></pre>\n\n<h4 id=\"ninja-is-busy-with-some-other-task-so-he-asks-you-for-help\">Ninja is busy with some other task so he asks you for help.</h4>\n\n<h4 id=\"can-you-help-ninja-to-generate-all-the-possible-subsequences-of-the-given-string-str-in-lexicographically-sorted-order\">Can you help Ninja to generate all the possible subsequences of the given string \u2018STR\u2019 in lexicographically sorted order?</h4>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer &#39;T&#39; which denotes the number of test cases or queries to be run. Then the test cases follow.\n\nThe first and the only line of each test case contains a string \u2018STR\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print all the possible subsequences of the given string \u2018STR\u2019 in lexicographically sorted order.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= \u2018T\u2019 &lt;= 100\n1 &lt;= |STR| &lt;= 10 \n\nWhere |STR| represents the length of \u2018STR\u2019.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\naba\naaa\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>a a aa ab aba b ba \na a a aa aa aa aaa\n</code></pre>\n\n<h4 id=\"explanation-of-sample-output-1\">Explanation Of Sample Output 1:</h4>\n\n<pre><code>For test case 1: \nIn this sample test case, the following are the possible subsequences of the given \u2018STR\u2019:  \n1. \u201ca\u201d\n2. \u201cb\u201d\n3. \u201ca\u201d\n4. \u201cab\u201d\n5. \u201cba\u201d\n6. \u201caa\u201d\n7. \u201caba\u201d\n\nAfter arranging these subsequences into lexicographically sorted order, we get:\n\u201ca\u201d, \u201ca\u201d, \u201caa\u201d, \u201cab\u201d, \u201caba\u201d, \u201cb\u201d, \u201cba\u201d \n\nFor test case 2: \nIn this sample test case, the following are the possible subsequences of the given \u2018STR\u2019:\n1. \u201ca\u201d\n2. \u201ca\u201d\n3. \u201ca\u201d\n4. \u201caa\u201d\n5. \u201caa\u201d\n6. \u201caa\u201d\n7. \u201caaa\u201d\n\nAfter arranging these subsequences into lexicographically sorted order, we get:\n\u201ca\u201d, \u201ca\u201d, \u201ca\u201d, \u201caa\u201d, \u201daa\u201d, \u201caa\u201d, \u201caaa\u201d \n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\nx\nzxy\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>x\nx xy y z zx zxy zy\n</code></pre>\n\n<h4 id=\"explanation-of-sample-output-2\">Explanation Of Sample Output 2:</h4>\n\n<pre><code>For test case 1: \nIn this sample test case, there is only one possible subsequence of the given \u2018STR\u2019:  \n1. \u201cx\u201d\n\nFor test case 2: \nIn this sample test case, the following are the possible subsequences of the given \u2018STR\u2019:  \n1. \u201cz\u201d\n2. \u201czx\u201d\n3. \u201czxy\u201d\n4. \u201cx\u201d\n5. \u201cxy\u201d\n6. \u201cy\u201d\n7. \u201czy\u201d\n\nAfter arranging these subsequences into lexicographically sorted order, we get:\n\u201cx\u201d, \u201cxy\u201d, \u201cy\u201d, \u201cz\u201d, \u201czx\u201d, \u201czxy\u201d, \u201czy\u201d\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 6,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string 'STR' containing lowercase English alphabets, generate all possible subsequences of 'STR' in lexicographically sorted order. A subsequence is a sequence that can be derived from another sequence by deleting some or no elements without changing the order of the remaining elements.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= |STR| <= 10",
                    "|STR| represents the length of \u2018STR\u2019.",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "aba",
                        "output": "a a aa ab aba b ba",
                        "explanation": "The subsequences of 'aba' are 'a', 'b', 'a', 'ab', 'ba', 'aa', 'aba'. When sorted lexicographically, they become 'a', 'a', 'aa', 'ab', 'aba', 'b', 'ba'."
                    },
                    {
                        "input": "aaa",
                        "output": "a a a aa aa aa aaa",
                        "explanation": "The subsequences of 'aaa' are 'a', 'a', 'a', 'aa', 'aa', 'aa', 'aaa'. When sorted lexicographically, they become 'a', 'a', 'a', 'aa', 'aa', 'aa', 'aaa'."
                    },
                    {
                        "input": "x",
                        "output": "x",
                        "explanation": "The only subsequence of 'x' is 'x'."
                    },
                    {
                        "input": "zxy",
                        "output": "x xy y z zx zxy zy",
                        "explanation": "The subsequences of 'zxy' are 'z', 'zx', 'zxy', 'x', 'xy', 'y', 'zy'. When sorted lexicographically, they become 'x', 'xy', 'y', 'z', 'zx', 'zxy', 'zy'."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>&nbsp;Try to generate all subsequence using a iterative way.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}