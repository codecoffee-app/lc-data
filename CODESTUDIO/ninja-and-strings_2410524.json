{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 15090,
            "title": "Ninja and Strings",
            "titleSlug": "ninja-and-strings_2410524",
            "content": "<h4 id=\"ninja-found-an-old-book-having-n-strings-of-equal-length-by-reading-all-these-strings-ninja-thought-of-a-target-string-in-his-mind-and-wanted-to-form-this-target-string-using-these-n-strings-the-formation-of-the-string-should-follow-the-following-conditions\">Ninja found an old book having \u2018N\u2019 strings of equal length. By reading all these strings, Ninja thought of a \u2018TARGET\u2019 string in his mind and wanted to form this target string using these \u2018N\u2019 strings. The formation of the string should follow the following conditions:</h4>\n\n<pre><code>1. The indices of characters in the order in which they are used should form a strictly increasing order.\n2. You can use multiple characters from one string.\n</code></pre>\n\n<h4 id=\"your-task-is-to-find-the-total-number-of-ways-in-which-the-target-string-can-be-formed-two-ways-are-said-to-be-different-if-the-sequence-of-indices-is-different-or-the-sequence-is-the-same-but-chosen-from-different-strings-the-number-of-ways-can-be-very-large-so-return-its-mod-10-9-7\">Your task is to find the total number of ways in which the \u2018TARGET\u2019 string can be formed. Two ways are said to be different if the sequence of indices is different or the sequence is the same but chosen from different strings. The number of ways can be very large so return its mod 10^9 + 7.</h4>\n\n<h5 id=\"for-example\">For Example</h5>\n\n<pre><code>For the given \u2018WORDS\u2019 = [ &quot;acca&quot;,&quot;bbbb&quot;,&quot;caca&quot; ], and \u2018TARGET\u2019 = &quot;aba&quot;.\nThere are 6 ways to form the \u2018TARGET\u2019 string.\n&quot;aba&quot; -&gt; index 0 (&quot;acca&quot;), index 1 (&quot;bbbb&quot;), index 3 (&quot;caca&quot;)\n&quot;aba&quot; -&gt; index 0 (&quot;acca&quot;), index 2 (&quot;bbbb&quot;), index 3 (&quot;caca&quot;)\n&quot;aba&quot; -&gt; index 0 (&quot;acca&quot;), index 1 (&quot;bbbb&quot;), index 3 (&quot;acca&quot;)\n&quot;aba&quot; -&gt; index 0 (&quot;acca&quot;), index 2 (&quot;bbbb&quot;), index 3 (&quot;acca&quot;)\n&quot;aba&quot; -&gt; index 1 (&quot;caca&quot;), index 2 (&quot;bbbb&quot;), index 3 (&quot;acca&quot;)\n&quot;aba&quot; -&gt; index 1 (&quot;caca&quot;), index 2 (&quot;bbbb&quot;), index 3 (&quot;caca&quot;)\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of the input contains an integer, &#39;T,\u2019 denoting the number of test cases.\n\nThe first line of each test case contains a single integer, &#39;N\u2019, denoting the number of strings in the \u2018WORDS\u2019 array.\n\nThe second line contains \u2018N\u2019 strings denoting the \u2018N\u2019 strings found in the book.\n\nThe third line contains the \u2018TARGET\u2019 string.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print an integer corresponding to the number of ways to form the \u2018TARGET\u2019 string  % (10^9 +7).  \n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 1000.\n1 &lt;= length of strings in \u2018WORDS\u2019 array&lt;=1000.\n1 &lt;= length of \u2018TARGET\u2019 string &lt;= length of WORDS[i] .  \n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n3\nadc\naec \nefg\nac  \n3\nacca\nbbbb\ncaca\naba\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>4\n6\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of sample input 1:</h5>\n\n<pre><code>For the first test case,\n\nThe possible ways to form the \u2018TARGET\u2019 string are:\n&quot;ac&quot; -&gt; index 0 (&quot;adc&quot;), index 2 (&quot;adc&quot;)\n&quot;ac&quot; -&gt; index 0 (&quot;acca&quot;), index 2 (&quot;aec&quot;) \n&quot;ac&quot; -&gt; index 0 (&quot;aec&quot;),  index 2 (&quot;adc&quot;)\n&quot;ac&quot; -&gt; index 0 (&quot;aec&quot;), index 2 (&quot;aec&quot;)    \n\nHence, the answer is 4. \n\nFor the second test case:\n\nThe possible ways to form the \u2018TARGET\u2019 string are:\n&quot;aba&quot; -&gt; index 0 (&quot;acca&quot;), index 1 (&quot;bbbb&quot;), index 3 (&quot;caca&quot;)\n&quot;aba&quot; -&gt; index 0 (&quot;acca&quot;), index 2 (&quot;bbbb&quot;), index 3 (&quot;caca&quot;)\n&quot;aba&quot; -&gt; index 0 (&quot;acca&quot;), index 1 (&quot;bbbb&quot;), index 3 (&quot;acca&quot;)\n&quot;aba&quot; -&gt; index 0 (&quot;acca&quot;), index 2 (&quot;bbbb&quot;), index 3 (&quot;acca&quot;)\n&quot;aba&quot; -&gt; index 1 (&quot;caca&quot;), index 2 (&quot;bbbb&quot;), index 3 (&quot;acca&quot;)\n&quot;aba&quot; -&gt; index 1 (&quot;caca&quot;), index 2 (&quot;bbbb&quot;), index 3 (&quot;caca&quot;)\n\nHence, the answer is 6.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n1\nabcd\nabcd\n2\nabba\nbaab\nbab\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>1\n4\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 5,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a set of 'N' strings of equal length ('WORDS') and a 'TARGET' string, determine the number of ways to construct the 'TARGET' string using characters from the 'WORDS' strings.  The characters used must adhere to these conditions:\n\n1.  The indices of the characters used from the 'WORDS' strings must be in strictly increasing order.\n2.  Multiple characters can be selected from a single string in 'WORDS'.\n\nTwo constructions are considered different if the sequence of indices used is different, or if the sequence is the same but the characters are chosen from different strings at the same index.  Return the number of possible ways, modulo 10^9 + 7.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 1000",
                    "1 <= length of strings in \u2018WORDS\u2019 array <= 1000",
                    "1 <= length of \u2018TARGET\u2019 string <= length of WORDS[i]",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "3\nadc\naec\nefg\nac",
                        "output": "4",
                        "explanation": "The possible ways to form the \u2018TARGET\u2019 string are:\n\"ac\" -> index 0 (\"adc\"), index 2 (\"adc\")\n\"ac\" -> index 0 (\"aec\"), index 2 (\"aec\")\n\"ac\" -> index 0 (\"adc\"), index 2 (\"aec\")\n\"ac\" -> index 0 (\"aec\"), index 2 (\"adc\")"
                    },
                    {
                        "input": "3\nacca\nbbbb\ncaca\naba",
                        "output": "6",
                        "explanation": "The possible ways to form the \u2018TARGET\u2019 string are:\n\"aba\" -> index 0 (\"acca\"), index 1 (\"bbbb\"), index 3 (\"caca\")\n\"aba\" -> index 0 (\"acca\"), index 2 (\"bbbb\"), index 3 (\"caca\")\n\"aba\" -> index 0 (\"acca\"), index 1 (\"bbbb\"), index 3 (\"acca\")\n\"aba\" -> index 0 (\"acca\"), index 2 (\"bbbb\"), index 3 (\"acca\")\n\"aba\" -> index 1 (\"caca\"), index 2 (\"bbbb\"), index 3 (\"acca\")\n\"aba\" -> index 1 (\"caca\"), index 2 (\"bbbb\"), index 3 (\"caca\")"
                    },
                    {
                        "input": "1\nabcd\nabcd\nabcd",
                        "output": "1",
                        "explanation": null
                    },
                    {
                        "input": "2\nabba\nbaab\nbab",
                        "output": "4",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to create the \u2018TARGET\u2019 string and find the ways using the frequency of characters.</p>",
            "<p>Try to find the answer for smaller sub-problem and store them for further reference.</p>",
            "<p>Think of an iterative solution.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}