{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 22990,
            "title": "Ninja And The Class Room",
            "titleSlug": "ninja-and-the-class-room_6280693",
            "content": "<h4 id=\"ninja-has-been-asked-to-make-the-seating-arrangement-during-the-exam-given-an-array-a-of-n-integers-where-a-i-1-means-there-is-a-student-seated-at-the-index-i-and-a-i-0-means-that-the-place-is-currently-unoccupied\">Ninja has been asked to make the seating arrangement during the exam. Given an array \u2018A\u2019 of \u2018N\u2019 integers where \u2018A[i] = 1\u2019 means there is a student seated at the index \u2018i\u2019 and \u2018A[i] = 0\u2019 means that the place is currently unoccupied.</h4>\n\n<h4 id=\"provided-no-two-students-can-seat-adjacent-to-each-other-ninjas-has-been-asked-to-place-extra-k-students-in-the-classroom\">Provided no two students can seat adjacent to each other Ninjas has been asked to place extra \u2018K\u2019 students in the classroom.</h4>\n\n<h4 id=\"return-1-if-the-ninja-is-able-to-place-that-extra-k-student-else-return-0\">Return 1 if the Ninja is able to place that extra \u2018K\u2019 student else return 0.</h4>\n\n<h5 id=\"example\">Example :</h5>\n\n<pre><code>Input: \u2018N\u2019 = 7, \u2018K\u2019 = 2, \u2018A\u2019 = [1, 0, 0, 0, 1, 0, 0]\nOutput: 1\n\nIt is possible to place locations 2 and 6 (0-indexed) the updated array will be [1, 0, 1, 0, 1, 0, 1] Here no two students are adjacent to each other.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 denoting the number of test cases, then the test case follows.\n\nFor each test case, the first line will contain two spaced integers \u2018N\u2019, the size of an input array \u2018A\u2019 and \u2018K\u2019. The second line will contain the \u2018N\u2019 spaced integers denoting the array \u2018A\u2019 values.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case print, 1 if the Ninja is able to place that extra \u2018K\u2019 student else print 0.\n\nOutput for each test case will be printed on a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You are not required to print anything; it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 \u2264 T \u2264 10\n1 \u2264 N \u2264 10^5\n0 \u2264 K \u2264 10^9\n0 \u2264 \u2018A[i]\u2019 \u2264 1\nIt is guaranteed that the sum of \u2018N\u2019 is \u2264 10^5 for all test cases.\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n5 2\n1 0 0 0 0\n2 1\n0 1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>1\n0\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1 :</h5>\n\n<pre><code>For test case 1:\nIt is possible to place at locations 2 and 4 (0-indexed) the updated array will be [1, 0, 1, 0, 1] Here no two students are adjacent to each other.\n\nFor test case 2:\nFor any possible combinations, there is no way to place the students.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n4 1\n1 1 1 1\n2 1\n0 0\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>0\n1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 6,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array 'A' of 'N' integers representing a seating arrangement where 'A[i] = 1' indicates a student is seated at index 'i' and 'A[i] = 0' indicates an unoccupied seat.  The task is to determine if it's possible to place 'K' additional students in the classroom such that no two students are seated adjacently. Return 1 if possible, otherwise return 0.",
                "constraints": [
                    "1 \u2264 T \u2264 10",
                    "1 \u2264 N \u2264 10^5",
                    "0 \u2264 K \u2264 10^9",
                    "0 \u2264 \u2018A[i]\u2019 \u2264 1",
                    "The sum of \u2018N\u2019 is \u2264 10^5 for all test cases.",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "N = 7, K = 2, A = [1, 0, 0, 0, 1, 0, 0]",
                        "output": "1",
                        "explanation": "It is possible to place two students at indices 2 and 6 (0-indexed) to satisfy the condition. The updated array would be [1, 0, 1, 0, 1, 0, 1]."
                    },
                    {
                        "input": "N = 5, K = 2, A = [1, 0, 0, 0, 0]",
                        "output": "1",
                        "explanation": "It is possible to place students at indices 2 and 4 (0-indexed). The updated array would be [1, 0, 1, 0, 1]."
                    },
                    {
                        "input": "N = 2, K = 1, A = [0, 1]",
                        "output": "0",
                        "explanation": "No matter where the student is placed it will violate the adjacency rules"
                    },
                    {
                        "input": "N = 4, K = 1, A = [1, 1, 1, 1]",
                        "output": "0",
                        "explanation": "Because every position is occupied it is not possible to place K extra students."
                    },
                    {
                        "input": "N = 2, K = 1, A = [0, 0]",
                        "output": "1",
                        "explanation": "The updated array would be [1, 0] or [0, 1]"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can we find all possible positions where students can be placed?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}