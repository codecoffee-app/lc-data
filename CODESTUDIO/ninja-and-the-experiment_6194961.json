{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 22897,
            "title": "Ninja and the experiment",
            "titleSlug": "ninja-and-the-experiment_6194961",
            "content": "<h4 id=\"ninja-performed-an-experiment-n-times-in-each-attempt-he-took-m-readings-and-noted-them-down\">Ninja performed an experiment &#39;N&#39; times. In each attempt, he took &#39;M&#39; readings and noted them down.</h4>\n\n<h4 id=\"for-any-attempt-to-be-successful-all-the-readings-should-be-in-non-decreasing-order\">For any attempt to be successful, all the readings should be in non-decreasing order.</h4>\n\n<h4 id=\"due-to-some-malfunctioning-of-the-instrument-the-readings-were-quite-inaccurate\">Due to some malfunctioning of the instrument, the readings were quite inaccurate.</h4>\n\n<h4 id=\"for-the-evaluations-of-his-work-ninja-has-to-answer-q-queries\">For the evaluations of his work, Ninja has to answer &#39;Q&#39; queries.</h4>\n\n<h4 id=\"in-each-query-he-is-given-two-integers-l-and-r-and-he-needs-to-return-yes-if-he-has-performed-any-of-the-experiments-successfully-only-considering-the-readings-in-the-range-l-to-r-else-return-no\">In each query, he is given two integers, &#39;L&#39; and &#39;R&#39;, and he needs to return &#39;YES&#39;, if he has performed any of the experiments successfully, only considering the readings in the range &#39;L&#39; to &#39;R&#39;. Else return &#39;NO&#39;.</h4>\n\n<h5 id=\"example\">Example:</h5>\n\n<pre><code>Input: &#39;N&#39; = 3, &#39;M&#39;=3, &#39;Q&#39; = 1, READINGS =[[1, 3, 2], [4, 2, 3], [1, 2, 3]] \n\nFor a query, L = 2 and R = 3 (1-based indexing) \n\nOutput: YES\n\nIf we only consider the readings in the range [L, R], the readings are [[3, 2], [2, 3], [2, 3]].\nThe experiment is successful on the second and the third attempt.\nHence we return &#39;YES&#39;.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line will contain the integer &#39;T&#39;, denoting the number of test cases.\n\nThe first line of each test case contains two integers &#39;N&#39; and &#39;M&#39; denoting the number of attempts and the number of readings in each attempt.\n\nThe next &#39;N&#39; lines of each test case contain &#39;M&#39; space-separated integers, where the &#39;i&#39;th line denotes the readings of the &#39;i&#39;th attempt.\nThe next line contains the integer &#39;Q&#39; denoting the number of queries asked.\nThe next &#39;Q&#39; lines contain two integers &#39;L&#39; and &#39;R&#39; for each query.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case, You need to answer the &#39;Q&#39; queries.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don&#39;t need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N*M &lt;= 10^5\n1 &lt;= Q &lt;= 10^5\n1 &lt;= L,R &lt;= M\n\nSum of N*M Over all the Test cases &lt;= 10^5 and sum of Q Over all the Test cases &lt;= 10^5 \n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n4 5\n1 3 4 5 4\n2 1 5 5 4\n3 3 2 3 3\n5 2 3 2 4\n3\n1 1\n2 5\n4 5\n1 1\n1 \n1\n1 1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>YES\nNO\nYES\nYES\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1 :</h5>\n\n<pre><code>For the first case:\n\n&#39;N&#39; = 5, &#39;M&#39; = 4, &#39;Q&#39; = 3 \n\nOutput:\n\nYES\nNO\nYES\n\nIf we only consider the readings in the range [1, 1], the readings are [[1], [2], [3], [5]].\nAll the experiments are successful.\nHence we return &#39;YES&#39;.\nIf we only consider the readings in the range [2, 5], the readings are [ [3 ,4 ,5 ,4], \n</code></pre>\n\n<p>[1 ,5 ,5 ,4], [3 ,2 ,3 ,3], [2 ,3 ,2 ,4] ].\n    All the experiments are unsuccessful.\n    Hence we return &#39;NO&#39;.\n    If we only consider the readings in the range [4, 5], the readings are [[5, 4], [5, 4], [3, 3], [2, 4]].\n    The experiment is successful on the third and the fourth attempt.\n    Hence we return &#39;YES&#39;.</p>\n\n<p>For the Second case:</p>\n\n<pre><code>&#39;N&#39; = 1, &#39;M&#39; = 1, &#39;Q&#39; = 1 \n\nOutput:\n\nYES\n\nIf we only consider the readings in the range [1, 1], the readings are [[1]].\nThe experiment is successful on the first attempt.\nHence we return &#39;YES&#39;.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>1\n4 5\n1 3 4 5 4\n2 1 5 5 4\n3 3 2 3 3\n5 2 3 2 4\n3\n3 5 \n1 3    \n1 5\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>YES\nYES\nNO\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -10,
            "dislikes": "NA",
            "rephrased": {
                "body": "Ninja conducted an experiment 'N' times. Each attempt involved taking 'M' readings. An attempt is successful if all readings are in non-decreasing order. Due to instrument malfunction, readings were inaccurate. Ninja must answer 'Q' queries. Each query provides a range 'L' to 'R'. He must determine if any experiment was successful considering only readings within this range and return 'YES' or 'NO'.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N*M <= 10^5",
                    "1 <= Q <= 10^5",
                    "1 <= L, R <= M",
                    "Sum of N*M Over all the Test cases <= 10^5",
                    "Sum of Q Over all the Test cases <= 10^5",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "2\n4 5\n1 3 4 5 4\n2 1 5 5 4\n3 3 2 3 3\n5 2 3 2 4\n3\n1 1\n2 5\n4 5\n1 1\n1\n1\n1 1",
                        "output": "YES\nNO\nYES\nYES",
                        "explanation": "Case 1:\nQuery 1 (L=1, R=1): Readings are [[1], [2], [3], [5]]. All experiments are successful, hence 'YES'.\nQuery 2 (L=2, R=5): Readings are [[3, 4, 5, 4], [1, 5, 5, 4], [3, 2, 3, 3], [2, 3, 2, 4]]. No experiment is successful, hence 'NO'.\nQuery 3 (L=4, R=5): Readings are [[5, 4], [5, 4], [3, 3], [2, 4]]. Experiments 3 and 4 are successful, hence 'YES'.\n\nCase 2:\nQuery 1 (L=1, R=1): Reading is [[1]]. The experiment is successful, hence 'YES'."
                    },
                    {
                        "input": "1\n4 5\n1 3 4 5 4\n2 1 5 5 4\n3 3 2 3 3\n5 2 3 2 4\n3\n3 5\n1 3\n1 5",
                        "output": "YES\nYES\nNO",
                        "explanation": "Query 1 (L=3, R=5): Readings are [[4, 5, 4], [5, 5, 4], [2, 3, 3], [3, 2, 4]]. Experiment 3 is successful (2,3,3), hence YES.\nQuery 2 (L=1, R=3): Readings are [[1, 3, 4], [2, 1, 5], [3, 3, 2], [5, 2, 3]]. Experiment 1 is successful (1, 3, 4), hence YES.\nQuery 3 (L=1, R=5): Readings are [[1, 3, 4, 5, 4], [2, 1, 5, 5, 4], [3, 3, 2, 3, 3], [5, 2, 3, 2, 4]]. No experiment is successful, hence NO."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>For each reading \u2018i\u2019 precompute the maximum reading \u2018j\u2019 such that all the readings are non-decreasing</p>"
        ],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Matrices (2D Arrays)",
                "slug": "matrices-(2d-arrays)"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}