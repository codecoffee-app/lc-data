{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 16398,
            "title": "Ninja And The Pizzas",
            "titleSlug": "ninja-and-the-pizzas_3131823",
            "content": "<h4 id=\"ninja-loves-cooking-and-he-decided-to-make-the-pizza-for-his-friend-his-friend-loves-eating-cheese-with-the-pizza-hence-ninja-decided-to-fill-the-pizza-with-the-cheese\">Ninja loves cooking, and he decided to make the pizza for his friend. His friend loves eating cheese with the pizza; hence Ninja decided to fill the pizza with the cheese.</h4>\n\n<h4 id=\"for-our-convenience-lets-consider-the-rectangular-pizza-slices-only-and-to-increase-the-amount-of-cheese-the-ninja-decided-to-cut-some-slices-in-pizza-each-slice-can-be-cut-only-once-and-the-resulting-pieces-must-also-be-rectangular\">For our convenience, let&#39;s consider the rectangular pizza slices only, and to increase the amount of cheese, the Ninja decided to cut some slices in pizza. Each slice can be cut only once, and the resulting pieces must also be rectangular.</h4>\n\n<h4 id=\"ninja-decided-to-cut-it-in-at-most-k-slices-so-that-no-one-gets-suspicious\">Ninja decided to cut it in at most &#39;K&#39; slices so that no one gets suspicious.</h4>\n\n<h4 id=\"given-n-number-of-slices-have-k-maximum-number-of-slices-ninja-can-cut-and-two-arrays-l-and-b-stating-the-length-and-breadth-of-each-slice-your-task-is-to-help-ninja-find-out-the-maximum-extra-cheese-needed-to-fill-the-newly-formed-boundaries-in-pizza\">Given &#39;N&#39; number of slices have, &#39;K&#39; maximum number of slices Ninja can cut and two arrays \u2018L\u2019 and \u2018B\u2019 stating the length and breadth of each slice, your task is to help Ninja find out the maximum extra cheese needed to fill the newly formed boundaries in pizza.</h4>\n\n<h5 id=\"example\">EXAMPLE:</h5>\n\n<pre><code>Input: &#39;N&#39; = 2, &#39;K&#39; = 1\n       &#39;L&#39; = [4, 2]\n       &#39;B&#39; = [6, 8]\nOutput: 16\n\nTo maximize the cheese usage, Ninja can cut a second cake parallel to the side of length 8. So extra cheese needed will be 16.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of input contains an integer \u2018T&#39;, denoting the number of test cases. \n\nFor each test case, the first line contains two integers &#39;N&#39; number of slices have and &#39;K&#39; maximum number of slices Ninja can cut. Next, &#39;N&#39; lines contain two integers, each stating the length and breadth of each slice.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case, print an integer stating the maximum extra cheese needed to fill the newly formed boundaries in pizza.\n\nOutput for each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don\u2019t need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= &#39;T&#39; &lt;= 10\n1 &lt;= &#39;N&#39; &lt;= 10^4\n0 &lt;= &#39;K&#39; &lt;= N\n1 &lt;= &#39;L[i]&#39;, &#39;B[i]&#39; &lt;= 10^4\nTime Limit: 1sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n2 1\n4 2\n6 8\n1 1\n4 6\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>16\n12\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1 :</h5>\n\n<pre><code>For the first test case, to maximize the cheese usage, Ninja can cut a second slice parallel to the side of length 8. So extra cheese needed will be 16.\n\nFor the second test case, Ninja can cut the slice parallel to side 6 to get the extra cheese = (40) - (28) = 12\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n3 2\n1 2\n3 2\n1 3\n5 3\n2 3\n4 5\n2 3\n2 3\n1 2\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>12\n22\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 7,
            "dislikes": "NA",
            "rephrased": {
                "body": "Ninja loves cooking and wants to make pizza for his friend, who loves cheese. To maximize the cheese, Ninja will cut the rectangular pizza slices. Each slice can only be cut once, resulting in more rectangular pieces. The goal is to determine the maximum extra cheese needed to fill the newly formed boundaries, given 'N' slices, a maximum cut limit 'K', and the length and breadth arrays 'L' and 'B' for each slice.",
                "constraints": [
                    "1 <= 'T' <= 10",
                    "1 <= 'N' <= 10^4",
                    "0 <= 'K' <= N",
                    "1 <= 'L[i]', 'B[i]' <= 10^4",
                    "Time Limit: 1sec"
                ],
                "testcases": [
                    {
                        "input": "2\n2 1\n4 2\n6 8\n1 1\n4 6",
                        "output": "16\n12",
                        "explanation": "For the first test case, cutting the second slice parallel to the side of length 8 yields an extra cheese amount of 16.\nFor the second test case, cutting the slice parallel to side 6 gives the extra cheese = (4 * 6) - (4 * 3.5 * 2) = 24 - 12 = 12"
                    },
                    {
                        "input": "2\n3 2\n1 2\n3 2\n1 3\n5 3\n2 3\n4 5\n2 3\n2 3\n1 2",
                        "output": "12\n22",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to imagine relations as a graph edge and then try to arrange students (nodes) by their order of visits.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}