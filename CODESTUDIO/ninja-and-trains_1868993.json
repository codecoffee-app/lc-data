{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 14052,
            "title": "Ninja And Trains",
            "titleSlug": "ninja-and-trains_1868993",
            "content": "<h4 id=\"ninja-is-given-a-few-cities-and-few-connected-trains-each-city-has-a-specific-size-now-due-to-bad-weather-trains-from-certain-cities-get-canceled-given-a-value-x-if-the-size-of-the-city-is-less-than-x-then-all-incoming-and-outgoing-trains-from-the-station-get-canceled-now-ninja-s-task-is-to-determine-the-maximum-threshold-value-x-such-that-trains-from-cities-with-a-size-less-than-x-gets-canceled-then-there-should-exist-a-reachable-component-of-cities-in-the-network-of-size-at-least-k-a-subcomponent-of-the-city-network-is-considered-to-be-a-reachable-component-if-all-the-cities-in-that-network-are-connected-which-implies-all-the-trains-are-available-from-each-other-via-direct-or-connecting-trains\">Ninja is given a few cities and few connected Trains. Each city has a specific size. Now due to bad weather, trains from certain cities get canceled. Given a value X, if the size of the city is less than X, then all incoming and outgoing trains from the station get canceled. Now Ninja\u2019s task is to determine the maximum threshold value X such that trains from cities with a size less than X gets canceled, then there should exist a reachable component of cities in the network of size at least K. A subcomponent of the city network is considered to be a reachable component if all the cities in that network are connected, which implies all the trains are available from each other via direct or connecting trains.</h4>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains a single integer T, denoting the number of test cases.\n\nThe first line of each test case contains \u2018N\u2019, denoting the number of cities, \u2018M\u2019 denoting the number of trains, and \u2018K\u2019 denoting the size of the connected network of cities.\n\nThe second line of each test case contains &#39;N&#39; space-separated integers denoting the value associated with the i-th city.\n\nThe next &#39;M&#39; lines of each test case contains \u2018M\u2019 pairs (u, v), denoting a train available from city u to city v.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>The first and only line of each test case contains the maximum threshold value X, if the maximum threshold value is infinite the return 10 ^ 9. If there is no connected network of cities of size at least K, then return -1.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You are not required to print the expected output; it has already been taken care of. Just implement the function. \n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 5 \n1 &lt;= k &lt;= N &lt;= 10^5\n1 &lt;= M &lt;= 10^5\n1 &lt;= value of nodes &lt;= 10 ^ 9\n\nTime limit: 2 second\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n6 7 3\n100 150 68 138 32 22\n1 2\n2 3\n3 4\n4 5\n5 1\n4 6\n6 3\n4 5 3\n100 150 68 62 \n1 2\n3 4\n2 3\n4 1\n3 1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>32\n68\n</code></pre>\n\n<h5 id=\"explanation-for-sample-output-1\">Explanation for Sample Output 1:</h5>\n\n<pre><code>In the first test case, we can traverse all the node\u2019s values starting from 150 and set them as \u2018X\u2019  and check if we remove it will the remaining nodes form a connected component of size at least K. Here we start from 150 and then go to 32. For X= 32, the required conditions are satisfied. For other values of X greater than 32, the conditions are not satisfied, so we return 32 as our answer.\n\nIn the second test case, we traverse all the node\u2019s values starting from 150. We can see that if we remove nodes whose values are less than it, then the connected component of size at least 3 is not maintained. So we further decrease X. Finally we reach the value of X = 68, for which given conditions are satisfied. So we return 68 as our answer.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n4 4 2\n3 1 4 5\n1 2\n2 3\n3 4\n4 1\n5 5 3\n3 1 4 5 10\n1 2\n2 3\n3 4\n4 1\n2 5\n</code></pre>\n\n<p>##### Sample Output 2: </p>\n\n<pre><code>1\n1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": -4,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a network of cities connected by trains, where each city has a specific size, the task is to find the maximum threshold value 'X'. If a city's size is less than 'X', all its incoming and outgoing trains are canceled. The goal is to determine the largest possible 'X' such that after canceling trains from cities smaller than 'X', there exists a connected component (a group of cities where every city can reach every other city via train) of size at least 'K'. If there are multiple such values choose the largest. If no such value exists, return -1. If the threshold can be infinitely large (no trains are cancelled), return 10^9.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= K <= N <= 10^5",
                    "1 <= M <= 10^5",
                    "1 <= value of nodes <= 10^9",
                    "Time limit: 2 seconds"
                ],
                "testcases": [
                    {
                        "input": "6 7 3\n100 150 68 138 32 22\n1 2\n2 3\n3 4\n4 5\n5 1\n4 6\n6 3",
                        "output": "32",
                        "explanation": "By setting X to 32, cities with sizes less than 32 are removed. This leaves a connected component of size at least 3. Higher values of X will remove more cities, making it impossible to have a connected component of at least 3 nodes."
                    },
                    {
                        "input": "4 5 3\n100 150 68 62 \n1 2\n3 4\n2 3\n4 1\n3 1",
                        "output": "68",
                        "explanation": "After cancelling trains from cities smaller than 68, there exists a connected component (a group of cities where every city can reach every other city via train) of size at least 3. Higher values of X will remove more cities, making it impossible to have a connected component of at least 3 nodes."
                    },
                    {
                        "input": "4 4 2\n3 1 4 5\n1 2\n2 3\n3 4\n4 1",
                        "output": "1",
                        "explanation": "Setting X to 1 cancels no trains (as there are no values less than one), and a connected component of size 2 or greater still exists."
                    },
                    {
                        "input": "5 5 3\n3 1 4 5 10\n1 2\n2 3\n3 4\n4 1\n2 5",
                        "output": "1",
                        "explanation": "Setting X to 1 cancels no trains, so a connected component size of atleast 3 is possible."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you check for all node values?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}