{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 17802,
            "title": "Ninja and Tree",
            "titleSlug": "ninja-and-tree_3955708",
            "content": "<h4 id=\"you-are-given-an-undirected-tree-with-n-vertices-in-the-form-of-an-array-of-edges-and-q-queries-in-queries-array-and-root-in-the-vertex-1-you-have-also-been-given-array-color-where-color-i-represents-the-initial-color-of-i-th-vertex\">You are given an undirected tree with \u2018N\u2019 vertices in the form of an array of \u2018EDGES\u2019 and \u2018Q\u2019 queries in \u2018QUERIES\u2019 array and root in the vertex \u20181\u2019. You have also been given array \u2018COLOR\u2019 where \u2018COLOR[i]\u2019 represents the initial color of i-th vertex.</h4>\n\n<h4 id=\"queries-is-a-2d-array-where-each-row-queries-i-represents-a-query-of-type-queries-i-0\">\u2018QUERIES\u2019 is a 2D array where each row \u2018QUERIES[i]\u2019 represents a query of type \u2018QUERIES[i][0]\u2019.</h4>\n\n<h4 id=\"you-should-process-the-queries-of-the-two-types\">You should process the queries of the two types:</h4>\n\n<h4 id=\"1-change-the-colours-of-all-vertices-in-the-subtree-of-the-vertex-queries-i-1-to-the-colour-queries-i-2\">1) Change the colours of all vertices in the subtree of the vertex \u2018QUERIES[i][1]\u2019 to the colour \u2018QUERIES[i][2]\u2019.</h4>\n\n<h4 id=\"2-find-the-number-of-different-colours-in-the-subtree-of-the-vertex-queries-i-1\">2) Find the number of different colours in the subtree of the vertex \u2018QUERIES[i][1]\u2019.</h4>\n\n<h5 id=\"for-example\">For Example:</h5>\n\n<pre><code>Let \u2018N\u2019 = 5, \u2018EDGES\u2019 = [[1, 2], [1, 3], [2, 4], [2, 5]], \u2018QUERIES\u2019 = [[1, 2, 3], [2, 1], [1, 3, 2], [2, 1]] and \u2018COLOR\u2019 = [1, 1, 1, 1, 1].\nThe initial tree will be:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/drawing-8-15133.png\" alt=\"\"></p>\n\n<pre><code>After processing the query [1, 2, 3] i.e. colour all vertices in the subtree of 2 to 3.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/drawing-1-1-15126.png\" alt=\"\"></p>\n\n<pre><code>Now the number of different colours in subtree of the vertex 1 is 2.\nAfter processing the query [1, 3, 2] i.e. colour all vertices in the subtree of 3 to 2.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/drawing-2-1-15127.png\" alt=\"\"></p>\n\n<pre><code>Now the number of different colours in subtree of the vertex 1 are 3.\nHence the answer to this test case is 2 and 3 (print on separate lines).\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains an integer &#39;T&#39;, which denotes the number of test cases.\n\nThe next line contains two integers \u2018N\u2019 and \u2018Q\u2019 denoting the number of vertices and the number of queries respectively.\n\nThe next line contains \u2018N\u2019 space-separated integers, \u2018COLOR[i]\u2019 denoting the initial colour of i-th vertex.\n\nEach of the next N\u2009-\u20091 line contains two integers Uj, Vj (1 \u2264 Uj, Vj  \u2264 N) - the vertices of j-th edge.\n\nThe last \u2018Q\u2019 lines contain the description of the queries. Each description starts with the integer Tk (1 \u2264 Tk \u2264 2) - the type of k-th query. \nFor the queries of the first type then follows two integers Vk, Ck (1 \u2264 Vk \u2264 N, 1 \u2264 Ck \u2264 60) - the number of the vertex whose subtree will be recoloured with the colour Ck.\nFor the queries of the second type then follows integer Vk(1 \u2264 Vk \u2264 N) - the number of the vertex for which subtree you should find the number of different colours.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, return an array \u2018ANS\u2019, where \u2018ANS[i]\u2019 will denote the answer to i-th query of the second type.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don&#39;t need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 \u2264 T \u2264 10\n1 \u2264 N \u2264 1000\n1 \u2264 Q \u2264 1000\n1 \u2264 COLOR[i] \u2264 60\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n5 4\n1 1 1 1 1\n1 2\n1 3\n2 4\n2 5\n1 2 3\n2 1\n1 3 2\n2 1\n3 2\n1 1 1\n1 2\n1 3\n1 2 2\n2 1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>2\n3\n2\n</code></pre>\n\n<h5 id=\"explanation-of-sample-output-1\">Explanation of Sample Output 1 :</h5>\n\n<pre><code>Test Case 1:\nThe initial tree will be:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/drawing-8-15133.png\" alt=\"\"></p>\n\n<pre><code>After processing the query [1, 2, 3] i.e. color all vertices in subtree of 2 to 3.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/drawing-1-1-15126.png\" alt=\"\"></p>\n\n<pre><code>Now the number of different colors in subtree of the vertex 1 are 2.\nAfter processing the query [1, 3, 2] i.e. color all vertices in subtree of 3 to 2.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/drawing-2-1-15127.png\" alt=\"\"></p>\n\n<pre><code>Now the number of different colors in subtree of the vertex 1 are 3.\nHence the answer to this test case is 2 and 3 (print on separate lines).\n\nTest Case 2:\nThe initial tree will be:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/drawing-3-1-15128.png\" alt=\"\"></p>\n\n<pre><code>After processing the query [1, 2, 2] i.e. color all vertices in subtree of 2 to 2.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/drawing-4-1-15129.png\" alt=\"\"></p>\n\n<pre><code>Now the number of different colors in the subtree of the vertex 1 are 2.\nHence the answer to this test case is 2.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n2 2\n1 3\n1 2\n1 1 2\n2 1\n1 1\n1\n2 1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>1\n1\n</code></pre>\n\n<h5 id=\"explanation-of-sample-output-2\">Explanation of Sample Output 2 :</h5>\n\n<pre><code>Test Case 1:\nThe initial tree will be:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/drawing-5-1-15130.png\" alt=\"\"></p>\n\n<pre><code>After processing the query [1, 1, 2] i.e. color all vertices in the subtree of 1 to 2.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/drawing-6-1-15131.png\" alt=\"\"></p>\n\n<pre><code>Now the number of different colors in subtree of vertex 1 is 1. Hence answer to this testcase will be 1.\n\nTest Case 2:\nInitially, tree will be:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/drawing-7-1-15132.png\" alt=\"\"></p>\n\n<pre><code>The number of different colors in the subtree of vertex 1 is only 1. Hence answer to this testcase will be 1.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Ninja",
            "likes": 9,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an undirected tree with 'N' vertices, represented by an array of 'EDGES', and 'Q' queries in the 'QUERIES' array, rooted at vertex '1'.  An array 'COLOR' provides the initial color of each vertex. Process the queries to either update subtree colors or determine the number of distinct colors within a subtree.  Specifically:\n\n*   **Type 1 Query:**  Change the colors of all vertices within the subtree rooted at a given vertex to a specified color.\n*   **Type 2 Query:** Find the number of distinct colors present within the subtree rooted at a given vertex.",
                "constraints": [
                    "1 \u2264 T \u2264 10",
                    "1 \u2264 N \u2264 1000",
                    "1 \u2264 Q \u2264 1000",
                    "1 \u2264 COLOR[i] \u2264 60"
                ],
                "testcases": [
                    {
                        "input": "n = 5, q = 4, edges = [[1, 2], [1, 3], [2, 4], [2, 5]], queries = [[1, 2, 3], [2, 1], [1, 3, 2], [2, 1]], color = [1, 1, 1, 1, 1]",
                        "output": "[2, 3]",
                        "explanation": "Initial tree: All nodes have color 1.\nQuery [1, 2, 3]: Subtree of 2 (nodes 2, 4, 5) gets color 3. Colors: [1, 3, 1, 3, 3].\nQuery [2, 1]: Subtree of 1 (all nodes) has colors 1 and 3. Count = 2.\nQuery [1, 3, 2]: Subtree of 3 (node 3) gets color 2. Colors: [1, 3, 2, 3, 3].\nQuery [2, 1]: Subtree of 1 (all nodes) has colors 1, 2, and 3. Count = 3."
                    },
                    {
                        "input": "n = 2, q = 2, edges = [[1, 2]], queries = [[1, 1, 2], [2, 1]], color = [1, 3]",
                        "output": "[1]",
                        "explanation": "Initial tree: Node 1 has color 1, Node 2 has color 3.\nQuery [1, 1, 2]: Subtree of 1 (nodes 1, 2) gets color 2. Colors: [2, 2].\nQuery [2, 1]: Subtree of 1 (all nodes) has only color 2. Count = 1."
                    },
                    {
                        "input": "n = 1, q = 1, edges = [], queries = [[2, 1]], color = [1]",
                        "output": "[1]",
                        "explanation": "Single node tree.\nQuery [2, 1]: Subtree of 1 is only 1. Color 1. Count = 1."
                    },
                    {
                        "input": "n = 3, q = 2, edges = [[1, 2], [1, 3]], queries = [[1, 2, 2], [2, 1]], color = [1, 1, 1]",
                        "output": "[2]",
                        "explanation": "Initial tree: all colors are 1\nQuery [1, 2, 2]: Subtree of 2 becomes color 2.\nQuery [2, 1]: Subtree of 1 has colors 1 and 2. Count = 2"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Run DFS for each query.</p>",
            "<p>Flatten the tree and perform queries on array.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Trees",
                "slug": "trees"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}