{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 11182,
            "title": "Ninja and words magic",
            "titleSlug": "ninja-and-words-magic_1380890",
            "content": "<h4 id=\"ninja-has-been-given-a-dictionary-of-words-words-of-length-n-and-a-sentence-sentence-consisting-of-words-separated-by-a-single-space-ninja-has-to-make-the-sentence-as-small-as-possible-by-performing-the-below-operation-any-number-of-times\">Ninja has been given a dictionary of words \u2018WORDS\u2019 of length \u2018N\u2019 and a sentence \u2018SENTENCE\u2019 consisting of words separated by a single space. Ninja has to make the \u2018SENTENCE\u2019 as small as possible by performing the below operation any number of times.</h4>\n\n<h4 id=\"ninja-can-replace-a-word-of-the-sentence-with-a-word-present-in-the-words-if-and-only-if-the-prefix-of-that-word-is-present-in-the-words\">Ninja can replace a word of the \u2018SENTENCE\u2019 with a word present in the \u2018WORDS\u2019 if and only if the prefix of that word is present in the \u2018WORDS\u2019.</h4>\n\n<h4 id=\"note-if-the-word-of-the-sentence-can-be-replaced-by-more-than-one-word-present-in-the-words-then-replace-it-with-the-smallest-possible-word-present-in-the-words\">Note: If the word of the \u2018SENTENCE\u2019 can be replaced by more than one word present in the \u2018WORDS\u2019, then replace it with the smallest possible word present in the \u2018WORDS\u2019.</h4>\n\n<h4 id=\"example-for-all-prefixes-of-a-string\">Example for all prefixes of a string:</h4>\n\n<pre><code>String \u2018STR\u2019 = \u201cabcd\u201d \nThen all possible prefix of this \u2018STR\u2019 are:\n&quot;a&quot;, &quot;ab&quot;, &quot;abc&quot;, &quot;abcd&quot;.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>1. All the words in the \u2018WORDS\u2019 and the \u2018SENTENCE\u2019 contain only lower case English alphabets.\n2. \u2018SENTENCE\u2019 does not have any leading and trailing spaces.\n</code></pre>\n\n<h4 id=\"can-you-help-ninja-to-make-the-sentence-as-small-as-possible-by-performing-the-given-operation\">Can you help Ninja to make the \u2018SENTENCE\u2019 as small as possible by performing the given operation?.</h4>\n\n<h5 id=\"input-format\">Input Format</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 which denotes the number of test cases or queries to be run.\n\nThe first line of each test case will contain an integer \u2018N\u2019 representing the number of words in the \u2018WORDS\u2019.\n\nThe second line of each test case will contain \u2018N\u2019 single space-separated strings representing the words in the \u2018WORDS\u2019.\n\nThe third line of each test case will contain a string that represents the \u2018SENTENCE\u2019. \n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print a single line containing string denoting the \u2018SENTENCE\u2019 after making it as small as possible by performing the given operation.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= \u2018T\u2019 &lt;= 100\n1 &lt;= \u2018N\u2019 &lt;= 100\n\u2018WORDS[ i ]\u2019 = {a to z}\n1 &lt;= | \u2018SENTENCE\u2019 | &lt;= 100000\n\nWhere \u2018T\u2019 denotes the total number of test cases, \u2018N\u2019 represents the number of words in the \u2018WORDS\u2019, and | \u2018SENTENCE\u2019 | denotes the length of the \u2018SENTENCE\u2019.\n\nTime Limit: 1 second\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2 \n3\nram shyam mohan\nwhere is raman mohan babu \n3\na b c\nadd ball cat \n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>where is ram mohan babu\na b c\n</code></pre>\n\n<h4 id=\"explanation-for-sample-output-1\">Explanation for Sample Output 1:</h4>\n\n<pre><code>For sample test case 1: \n\n\nIn the \u2018SENTENCE\u2019 = \u201cwhere is raman mohan babu\u201d\nWe can replace the word \u201craman\u201d to \u201cram\u201d because \u201cram\u201d is the prefix of \u201craman\u2019  and the prefix is present in \u2018WORDS\u2019.\n\nSo after this \u2018SENTENCE\u2019 is : \u201cwhere is ram mohan babu\u201d\n\nFor sample test case 2: \nIn the \u2018SENTENCE\u2019 =  \u201cadd ball cat\u201d\nWe can replace the word \u201cadd\u201d to \u2018a\u2019 , \u201cball\u201d to \u2018b\u2019 and \u201ccat\u201d to \u2018c\u2019 because \u2018a\u2019, \u2018b\u2019 and \u2018c\u2019 is prefixes of \u201cadd\u201d ,\u201dball\u201d and \u201ccat\u201d respectively and all these prefixes are present in \u2018WORDS\u2019.\nSo after performing this operation \u2018SENTENCE\u2019 is : a a b c\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n4\ns ss sss ssss\ns ss naresh saharan baba\n4\na m b\napple mango banana orange\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>s s naresh s baba\na m b orange\n</code></pre>\n\n<h4 id=\"explanation-for-sample-output-2\">Explanation for Sample Output 2:</h4>\n\n<pre><code>For sample test case 1: \nThe \u2018SENTENCE\u2019 = \u201cs ss naresh saharan baba\u201d.\nAfter replacing words with their prefixes if prefixes are present in \u2018WORDS\u2019:\n\u2018SENTENCE\u2019 is : \u201cs s naresh s baba\u201d.\n\nFor sample test case 2: \nThe \u2018SENTENCE\u2019 = \u201capple mango banana orange\u201d.\nAfter replacing words with their prefixes if prefixes are present in \u2018WORDS\u2019:\n\u2018SENTENCE\u2019 is: \u201ca m b orange\u201d.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -6,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a dictionary of words `WORDS` of length `N` and a sentence `SENTENCE` consisting of words separated by a single space. The goal is to minimize the length of the `SENTENCE` by replacing words with their shortest possible prefixes that are present in `WORDS`. A word in the `SENTENCE` can be replaced by a word from `WORDS` only if the latter is a prefix of the former and is present in `WORDS`. If multiple prefixes can replace a word, choose the shortest one (lexicographically smallest). All words contain only lowercase English alphabets, and the `SENTENCE` has no leading or trailing spaces.",
                "constraints": [
                    "1 <= T <= 100 (Number of test cases)",
                    "1 <= N <= 100 (Number of words in WORDS)",
                    "WORDS[i] contains only lowercase English alphabets",
                    "1 <= |SENTENCE| <= 100000 (Length of the SENTENCE)"
                ],
                "testcases": [
                    {
                        "input": "3\nram shyam mohan\nwhere is raman mohan babu",
                        "output": "where is ram mohan babu",
                        "explanation": "The word 'raman' in the sentence can be replaced by 'ram' since 'ram' is a prefix of 'raman' and is present in the dictionary. The resulting sentence is 'where is ram mohan babu'."
                    },
                    {
                        "input": "3\na b c\nadd ball cat",
                        "output": "a b c",
                        "explanation": "The word 'add' can be replaced by 'a', 'ball' by 'b', and 'cat' by 'c' as these are valid prefixes present in the dictionary."
                    },
                    {
                        "input": "4\ns ss sss ssss\ns ss naresh saharan baba",
                        "output": "s s naresh s baba",
                        "explanation": "The word 'saharan' can be replaced by 's' as it is the shortest prefix of 'saharan' present in the dictionary 'WORDS'.  The words 'ss' is already present and can be converted to 's'. Similarly, the word 'baba' can be replaced with 's'."
                    },
                    {
                        "input": "4\na m b\napple mango banana orange",
                        "output": "a m b orange",
                        "explanation": "The word 'apple' can be replaced by 'a', 'mango' by 'm' and 'banana' by 'b' because 'a', 'm', and 'b' are prefixes of 'apple', 'mango', and 'banana' respectively, and they are present in the dictionary. The word 'orange' cannot be replaced because none of its prefixes are in the dictionary."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you think of the solution using hashing?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}