{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 11505,
            "title": "NINJA ATTACK",
            "titleSlug": "ninja-attack_1381847",
            "content": "<h4 id=\"ninja-has-built-his-team-of-ninjas-to-fight-with-the-enemies-in-his-city-ninja-made-a-plan-of-attacking-all-his-enemies-in-his-team-every-ninja-has-his-own-range-of-hitting-and-they-had-secretly-got-the-hitting-range-of-their-enemies-as-well-so-ninja-allowed-some-swaps-between-his-ninjas-so-that-they-can-minimize-the-hamming-distance-that-is-the-number-of-positions-where-the-hitting-range-of-enemies-and-ninjas-are-different\">Ninja has built his team of ninjas to fight with the enemies in his city. Ninja made a plan of attacking all his enemies. In his team, every ninja has his own range of hitting and they had secretly got the hitting range of their enemies as well. So Ninja allowed some swaps between his ninjas so that they can minimize the hamming distance that is the number of positions where the hitting range of enemies and ninjas are different.</h4>\n\n<h4 id=\"your-task-is-to-write-a-code-that-can-minimize-the-hamming-distance-you-are-being-provided-with-two-arrays-ninja-and-enemies-both-of-the-same-size-and-an-array-allowedswaps-where-each-allowedswaps-i-ai-bi-indicates-that-you-are-allowed-to-swap-the-elements-at-index-ai-and-index-bi\">Your task is to write a code that can minimize the hamming distance. You are being provided with two arrays \u2018ninja\u2019 and \u2018enemies\u2019 both of the same size and an array \u2018allowedSwaps\u2019 where each allowedSwaps[i] = [ ai, bi ] indicates that you are allowed to swap the elements at index ai and index bi.</h4>\n\n<h4 id=\"the-hamming-distance-of-two-arrays-of-the-same-length-ninja-and-enemies-is-the-number-of-positions-where-the-elements-are-different\">The Hamming distance of two arrays of the same length, ninja, and enemies, is the number of positions where the elements are different.</h4>\n\n<h4 id=\"example\">Example :</h4>\n\n<pre><code>Consider the case \u2018ninja\u2019array is [ 1, 2, 3, 4 ], \u2018enemies\u2019array is [ 2, 1, 4, 5 ] and \u2018allowedSwaps\u2019 are  = [ [ 0, 1 ], [ 2, 3 ] ] so after swapping in best manner according to \u2018allowedSwaps\u2019 our \u2018ninja\u2019 array becomes [ 2, 1, 4, 3 ]. So minimum Hamming distance is \u20181\u2019 as now there is only one different element as compared to \u2018ninja\u2019 and \u2018enemies\u2019 array index.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>1. You are allowed to do as many swap operations on the \u2018ninja\u2019 array as you want but according to the \u2018allowedSwap\u2019 array.\n2. You are not required to print anything explicitly. It has already been taken care of. Just implement the function.\n</code></pre>\n\n<h4 id=\"input-format\">Input Format :</h4>\n\n<pre><code>The first line of input contains a \u2018T\u2019 number of test cases.\n\nThe first line of each test case contains an integer \u2018n\u2019, which represents the size of the array \u2018ninja\u2019 and \u2018enemies\u2019.\n\nThe second line of each test case contains the \u2018n\u2019 space-separated integer of array \u2018ninja\u2019.\n\nThe third line of each test case contains the \u2018n\u2019 space-separated integer of array \u2018enemies\u2019.\n\nThe fourth line of each test case contains an integer \u2018m\u2019 denoting the number of rows in array \u2018allowedSwap\u2019. Then, \u2018m\u2019 lines follow.\n\nEach line contains two space-separated integers denoting the array values.\n</code></pre>\n\n<h4 id=\"output-format\">Output Format :</h4>\n\n<pre><code>For each test case, return the minimum hamming distance of the \u2018ninja\u2019 and \u2018enemies\u2019 array.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints :</h4>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= N &lt;=  10^3\n0 &lt;= ninja[i], enemies[i] &lt; 10^5\n0 &lt;= allowedSwaps[i] &lt;=10^5      \n\nWhere \u2018T\u2019 represents the number of test cases, \u2018N\u2019 represents the size of the \u2018ninja\u2019 and \u2018enemies\u2019 array and ninja[i], enemies[i], and allowedSwaps[i] represents the element in the array.\n\nTime Limit: 1 second    \n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1 :</h4>\n\n<pre><code>2\n4\n1 2 3 4\n2 1 4 5\n2\n0 1\n2 3\n4\n1 2 3 4\n1 3 2 4\n1\n2 3\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1 :</h4>\n\n<pre><code>1\n2\n</code></pre>\n\n<h4 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1 :</h4>\n\n<pre><code>Test Case 1:\n\nBefore the swapping hamming distance is \u20182\u2019 because in these arrays \u20182\u2019 index has different elements.\nSo according to this test case, \u2018ninja\u2019 = [ 1, 2, 3, 4 ], \u2018enemies\u2019 = [ 2, 1, 4, 5 ] and \u2018allowedSwaps\u2019 = [ [ 0, 1 ], [ 2, 3 ] ] so after swapping in best manner according to \u2018allowedSwaps\u2019 our \u2018ninja\u2019 array becomes [ 2, 1, 4, 3 ] so minimum Hamming distance is \u20181\u2019 as now there is only one different element as compared to \u2018ninja\u2019 and \u2018enemies\u2019 array index.\n\nTest Case 2:\n\nSo according to this test case, \u2018ninja\u2019 = [ 1, 2, 3, 4 ], \u2018enemies\u2019 = [ 1, 3, 2, 4 ], and even after swapping the minimum Hamming distance is \u20182\u2019 as there are \u20182\u2019  different element as compared to \u2018ninja\u2019 and \u2018enemies\u2019 array index.\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2 :</h4>\n\n<pre><code>2\n5\n5 1 2 4 3\n1 5 4 2 3\n4\n0 4\n4 2\n1 3\n1 4  \n3\n1 2 3\n3 1 2\n0\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2 :</h4>\n\n<pre><code>0\n3\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 10,
            "dislikes": "NA",
            "rephrased": {
                "body": "You are given two arrays, `ninja` and `enemies`, both of length `n`.  You are also given a list of allowed swaps, `allowedSwaps`, where each element `allowedSwaps[i]` = `[ai, bi]` indicates that you are allowed to swap the elements at indices `ai` and `bi` in the `ninja` array. Your task is to minimize the Hamming distance between the `ninja` and `enemies` arrays by performing allowed swaps on the `ninja` array. The Hamming distance is the number of positions where the elements in the two arrays are different.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= N <= 10^3",
                    "0 <= ninja[i], enemies[i] < 10^5",
                    "0 <= allowedSwaps[i][0], allowedSwaps[i][1] < N",
                    "Time Limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "4\n1 2 3 4\n2 1 4 5\n2\n0 1\n2 3",
                        "output": "1",
                        "explanation": "Initially, ninja = [1, 2, 3, 4] and enemies = [2, 1, 4, 5]. The Hamming distance is 2.  allowedSwaps = [[0, 1], [2, 3]]. By swapping ninja[0] and ninja[1], and ninja[2] and ninja[3], ninja becomes [2, 1, 4, 3]. Now the Hamming distance between ninja and enemies is 1, because they differ only at index 3."
                    },
                    {
                        "input": "4\n1 2 3 4\n1 3 2 4\n1\n2 3",
                        "output": "2",
                        "explanation": "Initially, ninja = [1, 2, 3, 4] and enemies = [1, 3, 2, 4]. The Hamming distance is 2. allowedSwaps = [[2, 3]]. By swapping ninja[2] and ninja[3], ninja becomes [1, 2, 4, 3]. The Hamming distance is still 2."
                    },
                    {
                        "input": "5\n5 1 2 4 3\n1 5 4 2 3\n4\n0 4\n4 2\n1 3\n1 4",
                        "output": "0",
                        "explanation": "Initially, ninja = [5, 1, 2, 4, 3] and enemies = [1, 5, 4, 2, 3].  allowedSwaps = [[0, 4], [4, 2], [1, 3], [1, 4]]. We can swap ninja[0] and ninja[4], then ninja[1] and ninja[3], and finally ninja[2] and ninja[4] to make ninja = [1, 5, 4, 2, 3]. The Hamming distance is now 0."
                    },
                    {
                        "input": "3\n1 2 3\n3 1 2\n0",
                        "output": "3",
                        "explanation": "Initially, ninja = [1, 2, 3] and enemies = [3, 1, 2]. There are no allowed swaps. The Hamming distance is 3."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><strong>Can you make all possible pairs?</strong></p>",
            "<p><strong>Check all possibilities.</strong></p>",
            "<p><strong>Can you find the union of all swap operations?</strong></p>"
        ],
        "relatedTopics": [
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Depth-first Search",
                "slug": "depth-first-search"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}