{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12044,
            "title": "Ninja island",
            "titleSlug": "ninja-island_1402869",
            "content": "<h4 id=\"there-is-a-very-famous-ninja-island-having-2-n-houses-on-this-island-the-houses-are-built-in-such-a-way-that-they-form-a-2-n-grid-where-each-cell-in-the-grid-represents-a-house-some-of-the-houses-are-occupied-by-ninjas-and-the-remaining-houses-are-occupied-by-ordinary-people-the-king-of-this-island-wants-to-know-the-houses-which-are-occupied-by-ninjas-the-only-thing-he-knows-is-that-out-of-n-houses-k1-and-k2-houses-are-being-occupied-by-ninjas-in-the-first-and-second-row-respectively-the-king-recently-discovered-that-arr-i-houses-are-occupied-by-ninjas-in-the-i-th-column-where-i-is-from-0-to-n-1-as-the-king-is-busy-with-the-queen-he-asked-you-to-find-the-houses-occupied-by-ninjas\">There is a very famous ninja island having 2 * \u2018N\u2019 houses. On this island, the houses are built in such a way that they form a 2 * \u2018N\u2019 grid, where each cell in the grid represents a house. Some of the houses are occupied by ninjas, and the remaining houses are occupied by ordinary people. The king of this island wants to know the houses which are occupied by ninjas. The only thing he knows is that, out of \u2018N\u2019 houses, \u2018K1\u2019 and \u2018K2\u2019 houses are being occupied by ninjas in the first and second row, respectively. The king recently discovered that \u2018ARR[i]\u2019 houses are occupied by ninjas in the i-th column, where \u2018i\u2019 is from 0 to \u2018N\u2019 - 1. As the king is busy with the queen, he asked you to find the houses occupied by ninjas.</h4>\n\n<h4 id=\"input-format\">Input Format</h4>\n\n<pre><code>The first line of input contains an integer &#39;T&#39; representing the number of test cases.\n\nThe first line of each test case contains a single integer, \u2018N\u2019, where \u2018N\u2019 denotes the number of houses in a single row in ninja island.\n\nThe second line of each test case contains two space-separated integers, \u2018K1\u2019 and \u2018K2\u2019, where \u2018K1\u2019 and \u2018K2\u2019 denote the number of houses occupied by ninjas in the first and second row, respectively.\n\nThe third line of each test case contains \u2018N\u2019 space-separated integers, representing the number of houses occupied by ninjas in each of the \u2018N\u2019 columns.\n</code></pre>\n\n<h4 id=\"output-format\">Output Format:</h4>\n\n<pre><code>For each test case, print a single line containing \u201c1\u201d if you have returned the correct 2 * \u2018N\u2019 binary grid, where 0 and 1 in the grid represent that the house is occupied by ordinary people and ninjas, respectively, else the output will be \u201c0\u201d.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints:</h4>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= N &lt;= 5000\n0 &lt;= K1, K2 &lt;= N\n0 &lt;= ARR[ i ] &lt;= 2\n\nWhere \u2018T\u2019 is the number of test cases,  \u2018N\u2019 denotes the number of houses in a single row in ninja island,  \u2018K1\u2019 and \u2018K2\u2019 denote the number of houses occupied by ninjas in the first and second row of the grid, respectively, and \u2018ARR[i]\u2019 denotes the number of houses occupied by ninjas in the i-th column.\n\nTime limit: 1 sec.\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1:</h4>\n\n<pre><code>2\n4\n2 2\n1 1 1 1\n5\n4 3\n1 2 2 2 0 \n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1:</h4>\n\n<pre><code>1\n1\n</code></pre>\n\n<h4 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1:</h4>\n\n<pre><code>Test Case 1 :  \nThe number of houses occupied by ninjas in the first and second row is 2 and 2 respectively. Moreover, there is one house occupied by ninjas in each column.\nTherefore one possible solution is,\n0 1 0 1\n1 0 1 0\nwhere 0 and 1 represent that the house is occupied by ordinary people and ninjas, respectively.\n\nTest Case 2 : \nThe number of houses occupied by ninjas in the first and second row is 4 and 3 respectively. The number of houses occupied by ninjas in 5 columns is 1, 2, 2, 2, and 0 respectively.\nTherefore one possible solution is,\n1 1 1 1 0\n0 1 1 1 0\nwhere 0 and 1 represent that the house is occupied by ordinary people and ninjas, respectively.\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2:</h4>\n\n<pre><code>1\n5\n1 2\n2 2 2 2 2\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2:</h4>\n\n<pre><code>1\n</code></pre>\n\n<h4 id=\"explanation-of-sample-input-2\">Explanation of Sample Input 2:</h4>\n\n<pre><code>Test Case 1 :  \nThe number of houses occupied by ninjas in the first and second row is 1 and 2 respectively. Moreover, there are two houses occupied by ninjas in each column.\n\nOccupying two houses in each column means that all 10 houses have been occupied by ninjas and zero houses will be occupied by ordinary people, but it is given that only 1 and 2 houses are occupied by ninjas in the first and second row, respectively. Therefore, no solution is possible. Hence return an empty grid.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -3,
            "dislikes": "NA",
            "rephrased": {
                "body": "You are given a 2 * N grid representing houses on Ninja Island. Each house is either occupied by a ninja or an ordinary person. You are given the number of ninjas in the first row (K1), the number of ninjas in the second row (K2), and the number of ninjas in each column (ARR[i]). Your task is to determine if a valid grid configuration exists that satisfies these constraints. If a valid grid exists, the problem expects a '1' as output. Otherwise, if no grid is possible given the constraints, output '0'.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= N <= 5000",
                    "0 <= K1, K2 <= N",
                    "0 <= ARR[i] <= 2",
                    "Where \u2018T\u2019 is the number of test cases,  \u2018N\u2019 denotes the number of houses in a single row in ninja island,  \u2018K1\u2019 and \u2018K2\u2019 denote the number of houses occupied by ninjas in the first and second row of the grid, respectively, and \u2018ARR[i]\u2019 denotes the number of houses occupied by ninjas in the i-th column.",
                    "Time limit: 1 sec."
                ],
                "testcases": [
                    {
                        "input": "4\n2 2\n1 1 1 1",
                        "output": "1",
                        "explanation": "With N=4, K1=2, and K2=2, and each column having one ninja, a valid arrangement is possible. For example:\n0 1 0 1\n1 0 1 0\nThis satisfies all the constraints."
                    },
                    {
                        "input": "5\n4 3\n1 2 2 2 0",
                        "output": "1",
                        "explanation": "With N=5, K1=4, K2=3, the column constraints are 1, 2, 2, 2, and 0.  A valid arrangement is possible. For example:\n1 1 1 1 0\n0 1 1 1 0\nThis satisfies all the constraints."
                    },
                    {
                        "input": "5\n1 2\n2 2 2 2 2",
                        "output": "0",
                        "explanation": "With N=5, K1=1, and K2=2, and each column having two ninjas, the total number of ninjas would be 2 * 5 = 10. However, the rows only account for 1 + 2 = 3 ninjas. Therefore, no valid solution exists, as the column constraints require more ninjas than allowed by the row constraints."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Greedily assign houses to ninjas.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Number Theory",
                "slug": "number-theory"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}