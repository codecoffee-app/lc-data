{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10433,
            "title": "NINJA JASOOS",
            "titleSlug": "ninja-jasoos_1215014",
            "content": "<h4 id=\"ninja-grew-19-years-older-and-started-his-own-detective-company-one-day-a-kidnapper-challenges-our-ninja-to-solve-a-case-kidnapper-makes-many-duplicates-of-a-child-and-each-child-or-we-can-say-duplicate-and-the-original-one-is-assigned-a-unique-number-a-bomb-is-tied-to-each-child-and-it-will-blast-within-5-minutes\">Ninja grew 19 years older and started his own detective company. One day a kidnapper challenges our Ninja to solve a case. Kidnapper makes many duplicates of a child and each child (or we can say duplicate and the original one) is assigned a unique number. A bomb is tied to each child and it will blast within 5 minutes.</h4>\n\n<h4 id=\"now-he-gives-a-number-n-to-ninja-and-tells-him-that-the-child-mentioned-with-nth-fibonacci-number-is-the-original-child\">Now he gives a number \u2018N\u2019 to Ninja and tells him that the child mentioned with \u201cNth\u201d Fibonacci number is the original child.</h4>\n\n<h4 id=\"so-help-our-ninja-in-finding-the-nth-fibonacci-number-so-he-can-save-the-lives-of-children-as-within-5-minutes-he-cant-defuse-all-the-bombs-alone\">So help our Ninja in finding the \u201cNth\u201d Fibonacci number so he can save the lives of children as within 5 minutes he can&#39;t defuse all the bombs alone.</h4>\n\n<h4 id=\"nth-term-of-fibonacci-series-f-n-is-calculated-using-the-following-formula\">Nth term of Fibonacci series F(N) is calculated using the following formula -</h4>\n\n<pre><code>F(N) = F(N-1) + F(N-2), \nWhere, F(1) = 1 F(2) = 1\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of input contains the \u2018T\u2019 number of test cases.\n\nThe first line of each test case contains a real number \u2018N\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, return its equivalent Fibonacci number.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You are not required to print anything explicitly. It has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10000\n1 &lt;= N &lt;= 40  \n\nTime Limit: 1 second\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1:</h4>\n\n<pre><code>2\n4\n6\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1:</h4>\n\n<pre><code>3\n8\n</code></pre>\n\n<h4 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1:</h4>\n\n<pre><code>Test Case 1:\n\nIn the first line, there is the number of test cases i.e., 2, and in the next line \u20184\u2019is the number for which we have to find its equivalent Fibonacci number or we can say return the \u201c4th\u201d Fibonacci number.\nSo by using the property of the Fibonacci series i.e \n\n[ 1, 1, 2, 3]\nSo the \u201c4th\u201d element is \u201c3\u201d hence we get the output.\n\nTest Case 2:\n\nNow the number is \u20186\u2019 so we have to find the \u201c6th\u201d Fibonacci number\nSo by using the property of the Fibonacci series i.e \n\n[ 1, 1, 2, 3, 5, 8]\nSo the \u201c6th\u201d element is \u201c8\u201d hence we get the output.\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2 :</h4>\n\n<pre><code>2\n5\n3\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2 :</h4>\n\n<pre><code>5\n2\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 5,
            "dislikes": "NA",
            "rephrased": {
                "body": "Ninja, now a seasoned detective, faces a tricky challenge from a kidnapper. The kidnapper has created numerous duplicates of a child, each assigned a unique number and rigged with a bomb set to detonate in 5 minutes. The kidnapper reveals that the original child is associated with the 'Nth' Fibonacci number. Help Ninja determine the 'Nth' Fibonacci number to identify the original child and save them!",
                "constraints": [
                    "1 <= T <= 10000",
                    "1 <= N <= 40",
                    "Time Limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "n = 4",
                        "output": "3",
                        "explanation": "The 4th Fibonacci number is 3. The Fibonacci sequence starts as [1, 1, 2, 3, 5, 8...]. Therefore, F(4) = 3."
                    },
                    {
                        "input": "n = 6",
                        "output": "8",
                        "explanation": "The 6th Fibonacci number is 8. The Fibonacci sequence starts as [1, 1, 2, 3, 5, 8...]. Therefore, F(6) = 8."
                    },
                    {
                        "input": "n = 5",
                        "output": "5",
                        "explanation": "The 5th Fibonacci number is 5. The Fibonacci sequence starts as [1, 1, 2, 3, 5, 8...]. Therefore, F(5) = 5."
                    },
                    {
                        "input": "n = 3",
                        "output": "2",
                        "explanation": "The 3rd Fibonacci number is 2. The Fibonacci sequence starts as [1, 1, 2, 3, 5, 8...]. Therefore, F(3) = 2."
                    },
                    {
                        "input": "n = 1",
                        "output": "1",
                        "explanation": "The 1st Fibonacci number is 1. The Fibonacci sequence starts as [1, 1, 2, 3, 5, 8...]. Therefore, F(1) = 1."
                    },
                    {
                        "input": "n = 2",
                        "output": "1",
                        "explanation": "The 2nd Fibonacci number is 1. The Fibonacci sequence starts as [1, 1, 2, 3, 5, 8...]. Therefore, F(2) = 1."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can we use recursion to solve the problem?</p>",
            "<p>Can we think of Dynamic programming?</p>",
            "<p>Can we think of optimizing the space?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}