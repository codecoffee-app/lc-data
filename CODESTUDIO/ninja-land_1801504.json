{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 13794,
            "title": "Ninja Land",
            "titleSlug": "ninja-land_1801504",
            "content": "<h4 id=\"in-ninja-land-there-are-n-cities-that-are-connected-to-each-other-by-undirected-roads-the-cities-along-with-all-the-roads-form-a-tree-like-structure-each-city-has-an-initial-height-associated-with-it-the-heights-of-the-cities-can-change-also-now-ninja-got-bored-at-home-and-decided-to-visit-different-cities-but-ninja-only-wants-to-visit-two-cities-if-the-path-between-them-forms-an-alternate-series-of-ups-and-downs-since-ninja-doesn-t-know-whether-the-path-between-the-two-cities-is-alternating-or-not-he-asked-you-to-help-him\">In Ninja land, there are N cities that are connected to each other by undirected roads. The cities along with all the roads form a tree-like structure. Each city has an initial height associated with it. The heights of the cities can change also.  Now Ninja got bored at home and decided to visit different cities. But Ninja only wants to visit two cities if the path between them forms an alternate series of ups and downs. Since Ninja doesn\u2019t know whether the path between the two cities is alternating or not, he asked you to help him.</h4>\n\n<h4 id=\"for-example\">For Example:</h4>\n\n<pre><code>Suppose Ninja is currently standing at X city and want to visit Y city. Let the heights of all the cities in the path from X to Y(including X and Y) are 10 20 5 30. Now these series of heights forms and alternate series. So Ninja will visit the city Y.\n\nSome examples of alternate series are 15 4 11 8 25, 100 120 50 70 60 but the series like 3 5 4 1, 6 3 10 12 are not alternating.\n</code></pre>\n\n<h5 id=\"now-you-will-be-asked-q-queries-and-there-are-two-types-of-queries\">Now you will be asked q queries, and there are two types of queries:</h5>\n\n<pre><code>1 X Y: change the height of city X to Y.\n\n2 X Y: Check whether the path between city X to Y is alternating or not.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains two space-separated integers \u2018N\u2019 and \u2018Q\u2019 denoting the number of cities in the Ninja Land and the number of queries.\n\nThe next N-1 lines will contain two space-separated integers X and Y, denoting that there is an undirected edge between city X and city Y.\n\nThe next line contains \u2018N\u2019 space-separated integers denoting the initial heights of each city.\n\nThe next q lines contain three space-separated integers representing the queries of both types.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>Output for each query of type two only, whether the path between the two cities of that query is alternating or not.\n\nOutput for each query will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note</h5>\n\n<pre><code>You are not required to print anything; it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= N,Q &lt;= 10^5\n1 &lt;= X,Y &lt;= N\n1 &lt;= height[i] &lt;= 10^9\n\nWhere N is the number of cities, Q is the number of queries, X and Y represent the cities, and height[i] represents the height of the i\u2019th city.\n\nTime Limit: 1 sec.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>12 3\n1 2\n2 3\n3 4\n1 5\n5 6\n5 7\n1 8\n8 9\n9 10\n9 11\n9 12\n10 8 5 9 12 16 8 18 21 11 19 20\n2 4 7\n1 1 6\n2 4 7\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>NO\nYES\n</code></pre>\n\n<h5 id=\"explanation-for-sample-output-1\">Explanation For Sample Output 1:</h5>\n\n<p><img src=\"https://files.codingninjas.in/hld_1-11438.png\" alt=\"\"></p>\n\n<pre><code>In the first query, we have to check whether the path between city 4 and city 7 is alternating or not. The path between 4 and 7 is 4, 3, 2, 1, 5, 6, 7 and their corresponding height is 9, 5, 8, 10, 12, 8. \nThis sequence is not alternating as the 3rd 4th and 5th indices are strictly increasing. So, the output will be NO.\n\nIn the second query, we have to update the height array. The height of city 1 will be 6.\nThe final height array will be 6 8 5 9 12 16 8 18 21 11 19 20.\n\nIn the third query, we have to check whether the path between city 4 and city 7 is alternating or not. The path between 4 and 7 is 4, 3, 2, 1, 5, 6, 7 and their corresponding height is 9, 5, 8, 6, 12, 8. \nClearly, this is an alternating sequence. So, the output will be YES.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>6 4\n1 5\n2 1\n3 2\n4 3\n4 6\n2 5 4 1 6 3\n2 3 3\n1 2 7\n2 5 6\n2 5 1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>YES \nNO\nYES\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Ninja",
            "likes": -8,
            "dislikes": "NA",
            "rephrased": {
                "body": "In Ninja Land, a network of N cities connected by undirected roads forms a tree structure. Each city has an initial height, which can be modified. Ninja wishes to travel between two cities only if the path between them creates an alternating sequence of increasing and decreasing heights. Your task is to determine whether the path between two given cities is alternating, given a series of queries to update city heights and check paths.",
                "constraints": [
                    "1 <= N, Q <= 10^5",
                    "1 <= X, Y <= N",
                    "1 <= height[i] <= 10^9",
                    "N is the number of cities, Q is the number of queries, X and Y represent the cities, and height[i] represents the height of the i\u2019th city.",
                    "Time Limit: 1 sec."
                ],
                "testcases": [
                    {
                        "input": "12 3\n1 2\n2 3\n3 4\n1 5\n5 6\n5 7\n1 8\n8 9\n9 10\n9 11\n9 12\n10 8 5 9 12 16 8 18 21 11 19 20\n2 4 7\n1 1 6\n2 4 7",
                        "output": "NO\nYES",
                        "explanation": "First query: The path between city 4 and city 7 is 4-3-2-1-5-6-7 with heights 9-5-8-10-12-16-8. This is not alternating because heights increase from city 2 to city 5. So, the output is NO.\nSecond query: The height of city 1 is updated to 6. The height array becomes 6 8 5 9 12 16 8 18 21 11 19 20.\nThird query: The path between city 4 and city 7 is 4-3-2-1-5-6-7 with heights 9-5-8-6-12-16-8. This sequence forms an alternating pattern so the output is YES."
                    },
                    {
                        "input": "6 4\n1 5\n2 1\n3 2\n4 3\n4 6\n2 5 4 1 6 3\n2 3 3\n1 2 7\n2 5 6\n2 5 1",
                        "output": "YES\nNO\nYES",
                        "explanation": "Query 1: path from 3 to 3 is just 3, height is 4, so alternating is YES.\nQuery 2: change height of 2 to 7. new height array 2 7 4 1 6 3.\nQuery 3: Path from 5 to 6 is 5-1-2-3-4-6. heights are 6 2 7 4 1 3 . alternating is NO.\nQuery 4: Path from 5 to 1 is 5-1. heights are 6 2. alternating is YES."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to use heavy-light decomposition.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Depth-first Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Trees",
                "slug": "trees"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}