{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 13002,
            "title": "Ninja Port",
            "titleSlug": "ninja-port_1536152",
            "content": "<h4 id=\"ninja-is-stuck-in-a-city-with-n-colonies-and-each-colony-contains-k-houses-ninja-is-currently-at-the-house-number-sourcehouse-present-in-the-colony-with-colony-number-sourcecolony-he-wants-to-get-to-the-house-with-house-number-destinationhouse-present-in-the-colony-with-colony-number-destinationcolony-as-fast-as-possible\">Ninja is stuck in a city with \u2018N\u2019 colonies, and each colony contains \u2018K\u2019 houses. Ninja is currently at the house number \u201csourceHouse\u201d present in the colony with colony number \u201csourceColony\u201d. He wants to get to the house with house number \u201cdestinationHouse\u201d present in the colony with colony number \u201cdestinationColony\u201d as fast as possible.</h4>\n\n<h4 id=\"since-ninja-is-a-ninja-he-also-has-a-special-power-by-which-he-can-teleport-from-one-house-to-another-within-the-same-colony-in-1-second-also-ninja-can-travel-from-the-kth-house-of-the-mth-colony-to-the-1st-house-of-the-m-1-th-colony-and-also-vice-versa-in-the-same-time\">Since Ninja is a Ninja, he also has a special power by which he can teleport from one house to another within the same colony in 1 second. Also, Ninja can travel from the Kth house of the Mth colony to the 1st house of the (M + 1)th colony and also vice versa in the same time.</h4>\n\n<h4 id=\"additionally-some-houses-have-secret-underground-paths-to-other-houses-using-which-ninja-can-travel-among-houses-using-this-path-which-also-takes-1-second\">Additionally, some houses have secret underground paths to other houses, using which Ninja can travel among houses using this path which also takes 1 second.</h4>\n\n<h4 id=\"you-are-given-a-list-secretpaths-each-element-of-this-list-contains-4-integers-the-first-two-are-for-the-source-house-of-the-path-secretsourcehouse-and-secretsourcecolony-denoting-the-source-house-number-and-source-colony-number-respectively-the-next-2-integers-are-for-the-destination-house-of-the-path-secretdestinationhouse-and-secretdestinationcolony-denoting-the-destination-house-number-and-destination-colony-number-respectively\">You are given a list \u201csecretPaths\u201d, each element of this list contains 4 integers. The first two are for the source house of the path \u201csecretSourceHouse\u201d and \u201csecretSourceColony\u201d denoting the source house number and source colony number respectively. The next 2 integers are for the destination house of the path \u201csecretDestinationHouse\u201d and \u201csecretDestinationColony\u201d denoting the destination house number and destination colony number respectively.</h4>\n\n<h4 id=\"since-the-underground-paths-are-secret-and-having-too-many-paths-in-the-same-colony-could-lead-the-ninja-community-getting-caught-there-are-at-most-p-underground-paths-in-each-colony-which-includes-incoming-and-outgoing-underground-paths\">Since the underground paths are secret and having too many paths in the same colony could lead the Ninja community getting caught, there are at most \u2018P\u2019 underground paths in each colony (which includes incoming and outgoing underground paths).</h4>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>The secret underground paths cannot be used to travel both ways, you can\u2019t travel from destination to source.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases to run. Then the test case follows.\n\nThe first line of each test case contains four space-separated integers, \u2018N\u2019, \u2018K\u2019, \u2018S\u2019 and \u2018P\u2019 denoting the number of colonies, number of houses in each colony, the number of secret underground paths and the maximum number of underground paths in a colony respectively.\n\nThe next line contains four space-separated integers \u201csourceHouse\u201d, \u201csourceColony\u201d, \u201cdestinationHouse\u201d and \u201cdestinationColony\u201d denoting the house number and colony number of Ninja\u2019s initial position and house number and colony number of the destination house respectively.\n\nThe next \u2018S\u2019 line contains four space-separated integers each denoting the arrays \u201csecretPaths[i]\u201d.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, return an integer denoting the minimum time Ninja takes.\n\nOutput for each test case will be printed in a new line. \n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the given functions.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= N &lt;= 100\n1 &lt;= K &lt;= 10^9\n1 &lt;= P &lt;= 50\n0 &lt;= S &lt;= (P * N) / 2\n\nWhere \u2018T\u2019 denotes the number of test cases,\n\u2018N\u2019 denotes the number of colonies,\n\u2018K\u2019 denotes the number of houses in each colony,\n\u2018P\u2019 denotes the maximum number of underground paths in a colony and\n\u2018S\u2019 denotes the number of underground paths.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>1\n5 5 1 1\n3 1 3 5\n1 1 5 5\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>3\n</code></pre>\n\n<h4 id=\"explanation-for-sample-output-1\">Explanation For Sample Output 1:</h4>\n\n<pre><code>The path Ninja follows would be (colony number, house number) = (1, 3) -&gt; (1, 1) -&gt; (5, 5) -&gt; (5, 3).\n\nThe first teleport from (1, 3) -&gt; (1, 1) can be performed as both of the houses are in the first colony.\n\nThe next transition (1, 1) -&gt; (5, 5) can be done using the underground path and the last one from (5, 5) -&gt; (5, 3) can be done as both the houses are in the fifth colony.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n10 5 2 2\n2 3 4 10\n1 1 5 10\n5 8 4 7\n7 8 0 0\n8 4 6 7\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>7\n6\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 4,
            "dislikes": "NA",
            "rephrased": {
                "body": "Ninja is stranded in a city with 'N' colonies, each containing 'K' houses. Starting at 'sourceHouse' in 'sourceColony', Ninja needs to reach 'destinationHouse' in 'destinationColony' as quickly as possible. Ninja can teleport between houses in the same colony in 1 second.  Traveling from the Kth house of the Mth colony to the 1st house of the (M+1)th colony or vice versa also takes 1 second.  Additionally, 'secretPaths' exist, allowing 1-second travel between specified houses. Given the colonies' structure and secret paths, determine the minimum time required for Ninja to reach the destination.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= N <= 100",
                    "1 <= K <= 10^9",
                    "1 <= P <= 50",
                    "0 <= S <= (P * N) / 2"
                ],
                "testcases": [
                    {
                        "input": "secretPaths = [[1, 1, 5, 5]], N = 5, K = 5, P = 1, sourceHouse = 3, sourceColony = 1, destinationHouse = 3, destinationColony = 5",
                        "output": "3",
                        "explanation": "The path Ninja follows would be (colony number, house number) = (1, 3) -> (1, 1) -> (5, 5) -> (5, 3).\n\nThe first teleport from (1, 3) -> (1, 1) can be performed as both of the houses are in the first colony.\n\nThe next transition (1, 1) -> (5, 5) can be done using the underground path and the last one from (5, 5) -> (5, 3) can be done as both the houses are in the fifth colony."
                    },
                    {
                        "input": "secretPaths = [[1, 1, 5, 10],[5, 8, 4, 7]], N = 10, K = 5, P = 2, sourceHouse = 2, sourceColony = 3, destinationHouse = 4, destinationColony = 10",
                        "output": "7",
                        "explanation": "Optimal path takes 7 seconds."
                    },
                    {
                        "input": "secretPaths = [[8, 4, 6, 7]], N = 7, K = 8, P = 0, sourceHouse = 7, sourceColony = 8, destinationHouse = 0, destinationColony = 0",
                        "output": "6",
                        "explanation": "Optimal path takes 6 seconds."
                    },
                    {
                        "input": "secretPaths = [], N = 1, K = 1000000000, P = 50, sourceHouse = 1, sourceColony = 1, destinationHouse = 1000000000, destinationColony = 1",
                        "output": "1",
                        "explanation": "Ninja simply teleports from house 1 to house 1000000000 within the same colony."
                    },
                    {
                        "input": "secretPaths = [], N = 3, K = 1, P = 50, sourceHouse = 1, sourceColony = 1, destinationHouse = 1, destinationColony = 3",
                        "output": "2",
                        "explanation": "Ninja travels from (1,1) to (2,1) in 1 second and from (2,1) to (3,1) in 1 second."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can we visualize each house as a node in a graph?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Ad-Hoc",
                "slug": "ad-hoc"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Breadth-first Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}