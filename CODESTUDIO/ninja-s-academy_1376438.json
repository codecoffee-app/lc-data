{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 11024,
            "title": "NINJA\u2019S ACADEMY",
            "titleSlug": "ninja-s-academy_1376438",
            "content": "<h4 id=\"coding-ninjas-is-offering-lots-of-courses-but-for-enrolled-in-courses-there-may-be-some-prerequisites-according-to-the-course-so-lots-of-queries-are-coming-for-confirming-the-sequence-of-course-to-confirm-that-the-sequence-of-taking-the-course-is-correct-or-not\">Coding Ninjas is offering lots of courses. But for enrolled in courses, there may be some prerequisites according to the course. So lots of queries are coming for confirming the sequence, of course, to confirm that the sequence of taking the course is correct or not.</h4>\n\n<h4 id=\"so-help-our-ninja-to-write-a-code-so-he-can-give-an-answer-to-the-queries-whether-the-sequence-is-correct-or-not\">So help our ninja to write a code so he can give an answer to the queries whether the sequence is correct or not.</h4>\n\n<h4 id=\"so-your-task-is-to-answer-each-query-whether-it-is-a-correct-sequence-or-not-you-will-be-provided-with-the-total-number-of-courses-n-a-list-of-direct-prerequisite-pairs-and-a-list-of-query-pairs\">So your task is to answer each query whether it is a correct sequence or not. You will be provided with the total number of courses &#39;N&#39;, a list of direct prerequisite pairs, and a list of query pairs.</h4>\n\n<h5 id=\"example\">Example:</h5>\n\n<p><img src=\"https://files.codingninjas.in/capture-8630.JPG\" alt=\"Example\"></p>\n\n<pre><code>In the image left side represents the prerequisite and on-right queries.\nconsider the following example suppose the number of courses \u2018N = 2\u2019prerequisites pair is [ [ 1, 0 ] ] and queries are [ [ 0, 1 ], [ 1, 0 ] ] so we return [ False, True ]  as \u20180\u2019is not a prerequisite for the course \u20181\u2019but \u20181\u2019is prerequisite for the course \u20180\u2019.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains an integer  \u2018T&#39; which denotes the number of test cases or queries to be run. Then the test cases follow:\n\nThe first line of each test case contains, the total number of courses.\n\nThe second line of each test case contains an integer \u2018M\u2019 and \u2018Q\u2019 denoting the number of rows in the array \u2018PREREQUISITE\u2019 and \u2018Q\u2019 rows in array queries.\n\nThen, \u2018M\u2019 lines follow:\nEach line contains \u20182\u2019 space-separated integers denoting the row values.\n\nThen, \u2018Q\u2019 lines follow:\nEach line contains \u20182\u2019 space-separated integers denoting the row values.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print \u2018True\u2019 if the order is correct else \u2018False\u2019.\n\nPrint output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You are not required to print anything explicitly. It has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10^2\n1 &lt;= N &lt;= 3*10^3\n0 &lt;= PREREQUISITE[i] &lt;= 3*10^3\n\nWhere \u2018T\u2019 is the total number of test cases, \u2018N\u2019 is the number of courses and &#39;PREREQUISITE[i]&#39; is the value of that courses.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n3\n2 2\n1 0\n2 0\n0 1\n2 0\n5\n4 4\n1 2\n0 1\n2 3\n3 4\n0 4\n4 0\n1 3\n3 0\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1:</h4>\n\n<pre><code>False True\nTrue False True False\n</code></pre>\n\n<h4 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1:</h4>\n\n<pre><code>Test Case 1:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/capture-8631.JPG\" alt=\"Example\"></p>\n\n<pre><code>In this image left side represents the prerequisite array and the right side represents the query array.\nSo according to this test case, the number of courses is \u2018N = 3\u2019 prerequisite array is [ [ 1, 0 ], [ 2, 0 ] ] and queries array is [ [ 0, 1 ], [ 2, 0 ] ] so we return \u2018False\u2019 and \u2018True\u2019 as \u20180\u2019 is not prerequisite for \u20181\u2019 course and 2 is prerequisite for the course \u20180\u2019.\n\nTest Case 2:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/capture-8632.JPG\" alt=\"Example\"></p>\n\n<pre><code>In this image left side represents the prerequisite array and the right side represents the query array.\n\nSo according to this test case, the number of courses is \u2018N = 5\u2019 prerequisite array is [ [ 0,1 ], [ 1, 2 ], [ 2, 3 ], [ 3, 4 ] ] and queries array is [ [ 0, 4 ], [ 4, 0 ], [ 1, 3 ], [ 3, 0 ] ] so we return \u2018True\u2019 for the first query and the third query as \u20181\u2019 is indirectly prerequisite for course \u20184\u2019 as well as for course \u20183\u2019.and we return \u2018False\u2019 for the second and fourth query as \u20180\u2019 is prerequisite for course \u20183\u2019 and \u20184\u2019 not \u20183\u2019 and \u20184\u2019 are prerequisite for the course \u20180\u2019.\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2:</h4>\n\n<pre><code>2\n3\n3 2\n1 2\n1 0\n2 0\n1 0\n1 2\n3\n2 2\n1 0\n2 0\n0 1\n2 0\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2:</h4>\n\n<pre><code>True True\nFalse True\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 1,
            "dislikes": "NA",
            "rephrased": {
                "body": "Coding Ninjas offers courses with prerequisites. Given the total number of courses, a list of direct prerequisite pairs, and a list of query pairs, determine for each query if the course sequence is correct, meaning the first course in the query is a prerequisite (direct or indirect) of the second course. Return a list of boolean values representing the correctness of each query sequence.",
                "constraints": [
                    "1 <= T <= 10^2",
                    "1 <= N <= 3*10^3",
                    "0 <= PREREQUISITE[i] <= 3*10^3"
                ],
                "testcases": [
                    {
                        "input": "n = 3, prerequisite = [[1, 0], [2, 0]], query = [[0, 1], [2, 0]]",
                        "output": "[false, true]",
                        "explanation": "Course 0 is not a prerequisite for course 1, hence false. Course 2 is a prerequisite for course 0, hence true."
                    },
                    {
                        "input": "n = 5, prerequisite = [[1, 2], [0, 1], [2, 3], [3, 4]], query = [[0, 4], [4, 0], [1, 3], [3, 0]]",
                        "output": "[true, false, true, false]",
                        "explanation": "Course 0 is a prerequisite of course 4 (0 -> 1 -> 2 -> 3 -> 4), hence true. Course 4 is not a prerequisite of course 0, hence false. Course 1 is a prerequisite of course 3 (1 -> 2 -> 3), hence true. Course 3 is not a prerequisite of course 0, hence false."
                    },
                    {
                        "input": "n = 3, prerequisite = [[1, 2], [1, 0], [2, 0]], query = [[1, 0], [1, 2]]",
                        "output": "[true, true]",
                        "explanation": "Course 1 is a prerequisite of course 0, hence true. Course 1 is a prerequisite of course 2, hence true."
                    },
                    {
                        "input": "n = 3, prerequisite = [[1, 0], [2, 0]], query = [[0, 1], [2, 0]]",
                        "output": "[false, true]",
                        "explanation": "Course 0 is not prerequisite for course 1, but 1 is prerequisite for course 0. 2 is prerequisite for 0."
                    },
                    {
                        "input": "n = 3, prerequisite = [[1,2],[0,2]], query = [[0,1],[2,0]]",
                        "output": "[false, false]",
                        "explanation": "Course 0 is not a prerequisite of course 1. Course 2 is not a prerequisite of course 0."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you iterate over the courses?&nbsp;</p>",
            "<p>Think of recursively traversing over the courses.&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Depth-first Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}