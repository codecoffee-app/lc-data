{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10244,
            "title": "NINJA\u2019S CALCULATOR",
            "titleSlug": "ninja-s-calculator_1172220",
            "content": "<h4 id=\"ninja-and-his-friends-go-to-the-park-every-day-but-now-due-to-his-homework-he-wasn-t-able-to-go-to-the-park-with-his-friends-so-when-he-figures-out-he-notes-that-a-lot-of-time-is-consumed-in-doing-maths-homework-where-he-has-to-convert-some-real-number-to-a-binary-string-so-he-is-deciding-to-build-a-calculator-which-can-convert-real-numbers-to-the-binary-string\">Ninja and his friends go to the park every day. But now, due to his homework, he wasn\u2019t able to go to the park with his friends. So when he figures out, he notes that a lot of time is consumed in doing maths homework where he has to convert some real number to a binary string. So he is deciding to build a calculator which can convert real numbers to the binary string.</h4>\n\n<h4 id=\"so-help-our-ninja-to-write-a-code-for-the-calculator-which-can-convert-the-real-numbers-into-a-binary-string-and-save-his-time-to-join-his-friends-in-the-park\">So help our Ninja to write a code for the calculator, which can convert the real numbers into a binary string and save his time to join his friends in the park.</h4>\n\n<h4 id=\"so-your-task-is-to-write-a-code-that-can-convert-real-numbers-between-0-and-1-into-a-binary-string\">So your task is to write a code that can convert real numbers between \u20180\u2019 and \u20181\u2019into a binary string.</h4>\n\n<h4 id=\"for-example-you-have-given-a-number-0-750-so-you-have-to-convert-it-in-its-binary-form-that-is-0-110\">For example, you have given a number \u201c0.750\u201d so you have to convert it in its binary form that is \u201c0.110\u201d</h4>\n\n<h4 id=\"input-format\">Input Format :</h4>\n\n<pre><code>The first line of input contains the \u2018T\u2019 number of test cases.\n\nThe first line of each test case contains a real number \u2018N\u2019 between 0 and 1 (e.g., 0.72) as a double.    \n</code></pre>\n\n<h4 id=\"output-format\">Output Format :</h4>\n\n<pre><code>For each test case, print the binary representation in form of a string in case the number cannot be represented accurately in binary with at most  32 characters,  return string as \u201cERROR\u201d.\n</code></pre>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>You don\u2019t have to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints :</h4>\n\n<pre><code>1 &lt;= T &lt;= 100000\n0 &lt;= N &lt; 1  \n\nTime Limit: 1 sec\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1 :</h4>\n\n<pre><code>2\n0.625\n0.72\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1 :</h4>\n\n<pre><code>0.101\nERROR\n</code></pre>\n\n<h4 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1 :</h4>\n\n<pre><code>Test Case 1:\nIn the first line, there is the number of test cases i.e., 1, and in the next line \u20180.625\u2019 is the real number in a decimal form which we have to convert into a binary string.\n\nHere, we have started with multiplying the number that is \u2018N\u2019with \u20182\u2019 and hence write its binary number like \nString s= \u20180\u2019+ \u2018.\u2019+ \u20181\u2019+ \u20180\u2019+ \u20181\u2019   =[0.101].\n\nTest case 2:\n\nHere the number is \u201c0.72\u201d on multiplication with 2 we see we didn\u2019t get its equivalent Binary number or we can say that we weren\u2019t able to convert our number into binary form up to the 32 characters as 32 can be the maximum length of our string so we return our string as \u201cERROR\u201d.\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2 :</h4>\n\n<pre><code>2\n0.248\n0.50\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2 :</h4>\n\n<pre><code>ERROR\n0.1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 7,
            "dislikes": "NA",
            "rephrased": {
                "body": "You are tasked with implementing a function `toBinaryCalculator` that converts a real number between 0 and 1 (exclusive) into its binary string representation. The function should adhere to the following:\n\nGiven a real number `num` (0 < num < 1), convert it to a binary string.\nIf the number can be accurately represented in binary within 32 characters after the decimal point, return the binary string in the format \"0.xxxxx...\" where 'x' represents a binary digit (0 or 1).\nIf the number cannot be accurately represented in binary within 32 characters, return the string \"ERROR\".",
                "constraints": [
                    "1 <= T <= 100000",
                    "0 < N < 1",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "num = 0.625",
                        "output": "0.101",
                        "explanation": "0.625 can be represented as 0.101 in binary. 0.625 * 2 = 1.25 (1), 0.25 * 2 = 0.5 (0), 0.5 * 2 = 1.0 (1). Hence 0.101"
                    },
                    {
                        "input": "num = 0.72",
                        "output": "ERROR",
                        "explanation": "0.72 cannot be accurately represented in binary within 32 characters. Repeated multiplication by 2 does not lead to a terminating binary representation within the limit."
                    },
                    {
                        "input": "num = 0.50",
                        "output": "0.1",
                        "explanation": "0.5 can be represented as 0.1 in binary. 0.5 * 2 = 1.0 (1). Hence 0.1"
                    },
                    {
                        "input": "num = 0.248",
                        "output": "ERROR",
                        "explanation": "0.248 cannot be accurately represented in binary within 32 characters. Repeated multiplication by 2 does not lead to a terminating binary representation within the limit."
                    },
                    {
                        "input": "num = 0.875",
                        "output": "0.111",
                        "explanation": "0.875 can be represented as 0.111 in binary. 0.875 * 2 = 1.75 (1), 0.75 * 2 = 1.5 (1), 0.5 * 2 = 1.0 (1). Hence 0.111"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to convert all digits in the form of 0 and 1</p>",
            "<p>Can you compare the number with \u2018\u00bd\u2019, \u2018\u00bc\u2019, \u2018\u215b\u2019, and so on?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}