{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 14687,
            "title": "Ninja\u2019s Circular Array",
            "titleSlug": "ninja-s-circular-array_2221409",
            "content": "<h4 id=\"ninja-has-a-circular-array-nums-containing-n-positive-integers-an-array-is-called-circular-if-we-consider-the-first-element-as-next-of-the-last-element\">Ninja has a circular array \u2018Nums\u2019 containing \u2018N\u2019 positive integers. An array is called circular if we consider the first element as next of the last element.</h4>\n\n<h4 id=\"ninja-wants-you-to-find-the-first-greater-number-to-the-right-of-each-element-in-the-array-if-there-is-no-greater-element-to-the-right-of-an-element-then-output-1-for-this-element\">Ninja wants you to find the first greater number to the right of each element in the array, if there is no greater element to the right of an element, then output -1 for this element.</h4>\n\n<h5 id=\"example\">Example :</h5>\n\n<pre><code>If N = 5 and the array is: { 1, 6, 4, 3, 5 }\n\nWe will return { 6, -1, 5, 5, 6 }\nbecause 6 is the first element to the right of 1 that is greater than 1,\nno element exists that is greater than 6,\n5 is the first element to the right of 4 that is greater than 4,\n5 is the first element to the right of 3 that is greater than 3,\n6 is the first element to the circular-right of 5 that is greater than 5.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 denoting the number of test cases, then each test case follows:\n\nThe first line of each test case contains a single integer \u2018N\u2019 denoting the size of the array.\n\nThe second line of each test case contains N positive integers denoting the array elements \u2018Nums[i]\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print the next greater elements for each element in the circular array.\n\nOutput for each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You are not required to print anything; it has already been taken care of. Just implement the function and return an array that stores the answer to each test case.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10      \n1 &lt;= N &lt;= 200\n1 &lt;= Arr[i] &lt;= 10^5\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n5\n1 6 4 3 5\n3\n1 2 1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>6 -1 5 5 6\n2 -1 2\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1 :</h5>\n\n<pre><code>For test case 1 : \nWe will return { 6, -1, 5, 5, 6 } because 6 is the first element to the right of 1 that is greater than 1, no element exists that is greater than 6, 5 is the first element to the right of 4 that is greater than 4, 5 is the first element to the right of 3 that is greater than 3, 6 is the first element to the circular-right of 5 that is greater than 5.\n\nFor test case 2 :\nWe will return { 2, -1, 2 } because 2 is the first element to the right of 1 that is greater than 1, no element exists that is greater than 2, 2  is the first element to the circular-right of 1 that is greater than 1.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n1\n500\n4\n1 2 3 4\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>-1\n2 3 4 -1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 14,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a circular array `Nums` of `N` positive integers, find the first greater element to the right of each element in the array. If no greater element exists, output -1 for that element. A circular array means that the first element is considered the next element of the last element.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 200",
                    "1 <= Arr[i] <= 10^5",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "5\n1 6 4 3 5",
                        "output": "6 -1 5 5 6",
                        "explanation": "For the array {1, 6, 4, 3, 5}: 6 is the first element greater than 1. There is no element greater than 6. 5 is the first element greater than 4. 5 is the first element greater than 3. 6 (from the start of the array) is the first element greater than 5."
                    },
                    {
                        "input": "3\n1 2 1",
                        "output": "2 -1 2",
                        "explanation": "For the array {1, 2, 1}: 2 is the first element greater than 1. There is no element greater than 2. 2 (from the start of the array) is the first element greater than 1."
                    },
                    {
                        "input": "1\n500",
                        "output": "-1",
                        "explanation": "For the array {500}: There is no element greater than 500."
                    },
                    {
                        "input": "4\n1 2 3 4",
                        "output": "2 3 4 -1",
                        "explanation": "For the array {1, 2, 3, 4}: 2 is the first element greater than 1, 3 is the first element greater than 2, 4 is the first element greater than 3, and no element is greater than 4."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you take advantage of the small constraints?</p>",
            "<p>Think of using the stack data structure to find the next greater element in a normal array, and later extend the logic to a circular array.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Stacks & Queues",
                "slug": "stacks-&-queues"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}