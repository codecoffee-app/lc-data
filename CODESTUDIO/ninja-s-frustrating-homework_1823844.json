{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 13932,
            "title": "Ninja's Frustrating Homework",
            "titleSlug": "ninja-s-frustrating-homework_1823844",
            "content": "<h4 id=\"ninja-got-a-summer-vacation-homework-in-which-he-got-a-booklet-containing-a-very-long-string-and-some-set-of-words-written-in-his-diary-for-which-he-had-to-search-all-these-words-in-that-string-booklet\">Ninja got a summer vacation homework in which he got a booklet containing a very long string and some set of words written in his diary for which he had to search all these words in that string booklet.</h4>\n\n<h4 id=\"his-teacher-asked-him-to-write-all-the-starting-indices-for-all-the-words-written-in-the-diary-after-searching-that-from-the-string-booklet\">His teacher asked him to write all the starting indices for all the words written in the diary after searching that from the string booklet.</h4>\n\n<h4 id=\"ninja-finds-this-work-very-frustrating-he-tries-to-find-some-help-from-his-neighbor-and-currently-you-are-the-one-who-is-his-neighbor\">Ninja finds this work very frustrating. He tries to find some help from his neighbor and currently, you are the one who is his neighbor.</h4>\n\n<h4 id=\"it-is-very-time-consuming-to-find-every-word-in-the-string-booklet-manually-so-you-decide-to-design-a-code-for-that-help-ninja\">It is very time consuming to find every word in the string booklet manually. So you decide to design a code for that. Help Ninja!</h4>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>Follow 0 based indexing. \nPrint the indices in sorted order.\n</code></pre>\n\n<h4 id=\"input-format\">Input Format :</h4>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019, which denotes the number of test cases. Then each test case follows.\n\nThe first line of each test case contains a string \u2018S\u2019 representing the string in the booklet.\n\nThe second line of each test case contains an integer N denoting the number of words in the diary.\n\nThe third line of each test case contains an array of strings of size \u2018N\u2019 representing the words in the diary.\n</code></pre>\n\n<h4 id=\"output-format\">Output Format :</h4>\n\n<pre><code>The output contains \u2018N\u2019 space-separated integers representing starting indices of \u2018N\u2019 number of words present in the diary.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You don&#39;t need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints :</h4>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= |S| &lt;= 1000\n1 &lt;= N &lt;= 30\n\nWhere |S| denotes the length of the given string \u2018S\u2019. \n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\nabcab\n3\na cab abca\nninjasmart\n3\njas art nin \n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>0 1 2\n0 3 7 \n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1:</h5>\n\n<pre><code>Test Case 1 :\nThe given string is \u201cabcab\u201d. The word \u201ca\u201d is present in the string starting from index 0 and ending at index 0, The word \u201ccab\u201d has starting index 2 and ending index 4 , \u201cabca\u201d has starting index 0 ending index 3.\n\nTest Case 2:\nThe given string is \u201cninjasmart\u201d. \u201cJas\u201d has starting index 3 ending index 5, \u201cart\u201d has starting index 8 ending index 10, \u201cnin\u201d has starting index 0 ending index 2.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\nahishers\n4\nhe she his hers\nbheythis\n2\nhey this \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>1 3 4 4\n1 4\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Ninja",
            "likes": 0,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a long string `booklet` and a list of words `diary`, find all starting indices of each word in `diary` within `booklet`. The indices should be 0-based and returned in sorted order.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= |S| <= 1000, where |S| denotes the length of the given string \u2018S\u2019.",
                    "1 <= N <= 30"
                ],
                "testcases": [
                    {
                        "input": "booklet = \"abcab\", diary = [\"a\", \"cab\", \"abca\"]",
                        "output": "0 1 2",
                        "explanation": "The word \"a\" is present in the string starting from index 0. The word \"cab\" has starting index 2. \"abca\" has starting index 0."
                    },
                    {
                        "input": "booklet = \"ninjasmart\", diary = [\"jas\", \"art\", \"nin\"]",
                        "output": "3 7 0",
                        "explanation": "\"Jas\" has starting index 3, \"art\" has starting index 7, \"nin\" has starting index 0."
                    },
                    {
                        "input": "booklet = \"ahishers\", diary = [\"he\", \"she\", \"his\", \"hers\"]",
                        "output": "1 3 4 4",
                        "explanation": "\"he\" is at index 1, \"she\" is at index 3, \"his\" is at index 4, and \"hers\" is at index 4."
                    },
                    {
                        "input": "booklet = \"bheythis\", diary = [\"hey\", \"this\"]",
                        "output": "1 4",
                        "explanation": "\"hey\" is at index 1 and \"this\" is at index 4."
                    },
                    {
                        "input": "booklet = \"aaaaa\", diary = [\"aa\", \"aaa\"]",
                        "output": "0 1 2 3 0 1 2",
                        "explanation": "\"aa\" is found at indices 0, 1, 2, 3. \"aaa\" is found at indices 0, 1, 2."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to search matches for every character of word in \u2018diary\u2019 in the \u2018booklet\u2019 string naively.</p>",
            "<p>Try implementing Aho - Corasick Algorithm for pattern Matching.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}