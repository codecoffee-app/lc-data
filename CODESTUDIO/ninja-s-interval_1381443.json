{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 11405,
            "title": "NINJA'S INTERVAL",
            "titleSlug": "ninja-s-interval_1381443",
            "content": "<h4 id=\"ninja-is-assigned-some-task-to-complete-in-the-given-intervals-each-interval-has-a-starting-point-and-ending-point-and-is-given-in-the-form-of-a-list-but-there-is-an-issue-with-these-intervals-as-some-intervals-starting-point-and-ending-points-lie-in-some-other-intervals-so-ninja-has-to-remove-such-intervals-and-wants-to-know-the-count-of-remaining-intervals\">Ninja is assigned some task to complete in the given intervals. Each interval has a starting point and ending point and is given in the form of a list. But there is an issue with these intervals as some intervals starting point and ending points lie in some other intervals so ninja has to remove such intervals and wants to know the count of remaining intervals.</h4>\n\n<h4 id=\"so-your-task-is-to-detect-such-intervals-and-return-the-count-of-remaining-intervals-in-the-list-after-removing-such-overlapping-intervals\">So your task is to detect such intervals and return the count of remaining intervals in the list after removing such overlapping intervals.</h4>\n\n<h4 id=\"example\">Example:</h4>\n\n<pre><code>Let assume the given interval list is \u2018[ [ 1, 4 ], [ 5, 10 ], [ 6, 9 ] ] so we return \u20182\u2019 as our answer as the interval [ 6, 9 ] lies in the interval [ 5, 10 ] so we removed  [ 6, 9 ] from the list hence remaining intervals left are \u20182\u2019 so \u20182\u2019 is our answer.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>We can take two intervals even when their starting and ending time are same. For eg: [1,3], [3,5] can be taken together.\n</code></pre>\n\n<h4 id=\"input-format\">Input Format:</h4>\n\n<pre><code>The first line of input contains a \u2018T\u2019 number of test cases.\nThe first line of each test case contains an integer \u2018N\u2019 denoting the size of the given interval list. Then, \u2018N\u2019 lines follow.\nEach line contains two space-separated integers denoting the starting and ending points of the interval.\n</code></pre>\n\n<h4 id=\"output-format\">Output Format:</h4>\n\n<pre><code>For each test case, print a single line containing the remaining intervals left in the list after removing intervals that lie in other intervals.\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints:</h4>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= N &lt;= 3000\n0 &lt;= arr[i][0], arr[i][1] &lt; 10 ^ 9\n\nWhere \u2018T\u2019 is the number of test cases, \u2018N\u2019 is the size of the given list or we can say an array of array, and \u2018arr[i][0]\u2019 and \u2018arr[i][1]\u2019 represents the starting and ending points of the intervals.\n\nTime Limit: 1 sec\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1:</h4>\n\n<pre><code>2\n3\n1 4\n5 10\n6 9\n3\n1 10\n2 6\n3 8\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1:</h4>\n\n<pre><code>2\n1\n</code></pre>\n\n<h4 id=\"explanation-for-sample-input-1\">Explanation for sample input 1:</h4>\n\n<pre><code>Test Case 1:\nFor the first test case, the list is [ [ 1, 4 ], [ 5, 10 ], [ 6, 9 ] ]. \nSo we can see that interval [ 6, 9 ] lies in the interval  [ 5, 10 ] so we will remove that interval. Hence the remaining intervals left are \u20182\u2019 so we return \u20182\u2019 as our answer.\n\nTest Case 2:\nFor the second test case, the list is [ [ 1, 10 ], [ 2, 6 ], [ 3, 8 ] ]\nSo we can see that both [ 2, 6 ] and [ 3, 8 ] lie in the interval [ 1, 10 ] so we removed both the intervals hence the remaining interval is [ 1, 10 ] so we return \u20181\u2019 as our answer.\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2:</h4>\n\n<pre><code>1\n3\n2 4\n3 4\n4 5\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2:</h4>\n\n<pre><code>2\n</code></pre>\n\n<h4 id=\"explanation-of-sample-input-2\">Explanation of sample input 2:</h4>\n\n<pre><code>For this test case, the list is [ [ 2, 4 ], [ 3, 4 ], [ 4, 5 ] ] so we can see that both [ 2, 4 ] and [ 3, 4 ] have some common points so we remove any one of the interval. Hence remaining intervals left is [ 1, 5 ] and [2, 4] so we return \u20182\u2019 as our answer.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 5,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a list of intervals, where each interval has a starting and ending point, the task is to remove intervals that are completely contained within other intervals. Determine the number of remaining intervals after removing the overlapping ones.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= N <= 3000",
                    "0 <= arr[i][0], arr[i][1] < 10 ^ 9",
                    "Where \u2018T\u2019 is the number of test cases, \u2018N\u2019 is the size of the given list or we can say an array of array, and \u2018arr[i][0]\u2019 and \u2018arr[i][1]\u2019 represents the starting and ending points of the intervals.",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "3\n1 4\n5 10\n6 9",
                        "output": "2",
                        "explanation": "The input intervals are [1, 4], [5, 10], and [6, 9]. Interval [6, 9] is contained within [5, 10], so it is removed. The remaining intervals are [1, 4] and [5, 10], resulting in a count of 2."
                    },
                    {
                        "input": "3\n1 10\n2 6\n3 8",
                        "output": "1",
                        "explanation": "The input intervals are [1, 10], [2, 6], and [3, 8]. Both [2, 6] and [3, 8] are contained within [1, 10], so they are removed. The remaining interval is [1, 10], resulting in a count of 1."
                    },
                    {
                        "input": "3\n2 4\n3 4\n4 5",
                        "output": "2",
                        "explanation": "The input intervals are [2, 4], [3, 4], and [4, 5]. Interval [3,4] is completely within [2,4], so it is removed. The remaining intervals are [2, 4] and [4, 5], resulting in a count of 2."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you traverse the whole list and compare each interval?</p>",
            "<p>Can you think of sorting?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}