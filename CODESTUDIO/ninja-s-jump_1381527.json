{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 11407,
            "title": "NINJA'S JUMP",
            "titleSlug": "ninja-s-jump_1381527",
            "content": "<h4 id=\"ninja-is-assigned-a-task-to-reach-the-last-stone-by-his-master-these-stones-are-numbered-with-some-value-and-in-the-form-of-an-array-he-is-allowed-to-jump-either-odd-numbered-jumps-or-even-numbered-jumps-and-has-to-reach-the-last-stone\">Ninja is assigned a task to reach the last stone by his master. These stones are numbered with some value and in the form of an array. He is allowed to jump either odd-numbered jumps or even-numbered jumps and has to reach the last stone.</h4>\n\n<h4 id=\"so-your-task-is-to-find-the-number-of-starting-index-from-which-he-may-start-jumping-so-he-reaches-the-last-stones-you-are-provided-with-the-given-array-and-you-have-to-find-the-number-of-starting-index-of-the-array-from-which-ninja-can-reach-the-end-of-the-array-by-jumping-some-number-of-times\">So your task is to find the number of starting index from which he may start jumping so he reaches the last stones. You are provided with the given array and you have to find the number of starting index of the array from which Ninja can reach the end of the array by jumping some number of times.</h4>\n\n<h4 id=\"for-jumping-you-have-to-follow-below-instructions\">For jumping you have to follow below instructions:</h4>\n\n<h4 id=\"you-may-jump-forward-from-index-i-to-index-j-with-i-j-in-the-following-way\">You may jump forward from index \u2018i\u2019 to index \u2018j\u2019 (with i &lt; j) in the following way:</h4>\n\n<h4 id=\"during-odd-numbered-jumps-i-e-jumps-1-3-5-you-jump-to-the-index-j-such-that-arr-i-arr-j-and-arr-j-is-the-smallest-possible-value-if-there-are-multiple-such-indices-j-you-can-only-jump-to-the-smallest-such-index-j\">During odd-numbered jumps (i.e., jumps 1, 3, 5, ...), you jump to the index \u2018j\u2019 such that \u2018arr[i] &lt;= arr[j]\u2019 and \u2018arr[j]\u2019 is the smallest possible value. If there are multiple such indices \u2018j\u2019, you can only jump to the smallest such index j.</h4>\n\n<h4 id=\"during-even-numbered-jumps-i-e-jumps-2-4-6-you-jump-to-the-index-j-such-that-arr-i-arr-j-and-arr-j-is-the-largest-possible-value-if-there-are-multiple-such-indices-j-you-can-only-jump-to-the-smallest-such-index-j\">During even-numbered jumps (i.e., jumps 2, 4, 6, ...), you jump to the index \u2018j\u2019 such that \u2018arr[i] &gt;= arr[j]\u2019 and \u2018arr[j]\u2019 is the largest possible value. If there are multiple such indices \u2018j\u2019, you can only jump to the smallest such index \u2018j\u2019.</h4>\n\n<h4 id=\"it-may-be-the-case-that-for-some-index-i-there-are-no-legal-jumps\">It may be the case that for some index \u2018i\u2019, there are no legal jumps.</h4>\n\n<h4 id=\"input-format\">Input Format:</h4>\n\n<pre><code>The first line contains an integer &#39;T&#39; which denotes the number of test cases or queries to be run.\n\nThe first line of each test case contains a single integer \u2018N\u2019 denoting the size of the \u2018arr\u2019 array.\n\nThe next line contains \u2018N\u2019 space-separated integers denoting the values of elements of the \u2018arr\u2019 array.\n</code></pre>\n\n<h4 id=\"output-format\">Output Format:</h4>\n\n<pre><code>For each test case, print a single line containing the number of starting indices, from where Ninja can reach the end by following the required jump conditions.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints:</h4>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= N &lt;= 5000\n0 &lt;= arr[i] &lt; 10 ^ 6\n\nWhere \u2018T\u2019 is the number of test cases, \u2018N\u2019 is the size of an array, and \u2018arr[i]\u2019 represents the elements of the array.\n\nTime Limit: 1 sec\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1:</h4>\n\n<pre><code>2\n5\n20 23 22 24 25\n5\n5 6 4 4 7\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1:</h4>\n\n<pre><code>2\n3\n</code></pre>\n\n<h4 id=\"explanation-for-sample-input-1\">Explanation for sample input 1:</h4>\n\n<pre><code>Test Case 1:\nFor the first test case, if we start from index i = 0, we can make our first jump to i = 2, since it is smaller than all other array values but then we cannot jump anymore. \nIf we start from the index i = 1, or i = 2 we can make the first jump to i = 3 then we cannot jump anymore.\nIf we start from index i = 3 we have to make only one jump and we reach the end.\nAnd if we start from index i = 4 we are already at the end.\nSo we return \u20182\u2019 as our answer as there are \u20182\u2019 good starting index.\n\nTest Case 2:\nFor the test case if we start From starting index i = 0, we make jumps to i = 1, i = 2, i = 3\nFrom starting index i = 1, we jump to i = 4, so we reach the end.\nFrom starting index i = 2, we jump to i = 3, and then we can&#39;t jump anymore.\nFrom starting index i = 3, we jump to i = 4, so we reach the end.\nFrom starting index i = 4, we are already at the end.\n\nIn total, there are 3 different starting indices i = 1, i = 3, and i = 4, where we can reach the end with some number of jumps so we return \u20183\u2019 as our answer.\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2:</h4>\n\n<pre><code>1\n5\n5 1 3 4 2\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2:</h4>\n\n<pre><code>3\n</code></pre>\n\n<h4 id=\"explanation-of-sample-input-2\">Explanation of sample input 2:</h4>\n\n<pre><code>As we can reach the end by starting from index 1, 2, 4\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 8,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of integers representing stones, a ninja must reach the last stone by making a series of jumps. Jumps can be either odd-numbered or even-numbered. The goal is to find the number of starting indices from which the ninja can successfully reach the last stone.\n\nOdd-numbered jumps (1st, 3rd, 5th, etc.) must land on the smallest stone whose value is greater than or equal to the current stone. If multiple such stones exist, choose the one with the smallest index.\n\nEven-numbered jumps (2nd, 4th, 6th, etc.) must land on the largest stone whose value is less than or equal to the current stone. If multiple such stones exist, choose the one with the smallest index. If no such jump is possible from the current index, the ninja cannot proceed from that starting index.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= N <= 5000",
                    "0 <= arr[i] < 10 ^ 6",
                    "Where \u2018T\u2019 is the number of test cases, \u2018N\u2019 is the size of an array, and \u2018arr[i]\u2019 represents the elements of the array.",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "5\n20 23 22 24 25",
                        "output": "2",
                        "explanation": "Starting from index 3 or 4 allows the ninja to reach the end.  Starting from index 0, the ninja can jump to index 2, but cannot proceed further. Starting from indices 1 or 2, the ninja can jump to index 3, but cannot proceed further.  Therefore, only starting indices 3 and 4 lead to the last stone."
                    },
                    {
                        "input": "5\n5 6 4 4 7",
                        "output": "3",
                        "explanation": "Starting from indices 1, 3, or 4 allows the ninja to reach the end. Starting from index 0, the jumps will be to indices 1 and then indices 2 or 3. After this no more jumps are possible. The jump from indices 2 and 3 does not reach the end. If starting from index 1 the jump reaches the end. If starting from index 2 or 3 it jumps to index 4 which is the end. Index 4 is also a starting point and the ending point. Hence there are 3 ways to reach the end."
                    },
                    {
                        "input": "5\n5 1 3 4 2",
                        "output": "3",
                        "explanation": "The ninja can reach the end starting from indices 1, 2, or 4."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you traverse the whole array for each index?</p>",
            "<p>Can you think of a stack for solving this problem?</p>",
            "<p>Can you use the map and store the required key-value pairs?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Stacks & Queues",
                "slug": "stacks-&-queues"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}