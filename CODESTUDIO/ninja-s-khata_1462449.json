{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12507,
            "title": "NINJA\u2019S KHATA",
            "titleSlug": "ninja-s-khata_1462449",
            "content": "<h4 id=\"ninja-has-started-working-as-a-trader-where-he-buys-a-stock-and-sells-them-so-ninja-has-to-maintain-a-khata-where-he-is-keeping-entries-of-the-order-which-are-still-not-executed-orders-are-given-in-the-form-of-the-2-d-array-where-each\">Ninja has started working as a trader where he buys a stock and sells them. So ninja has to maintain a \u2018KHATA\u2019 where he is keeping entries of the order which are still not executed. Orders are given in the form of the 2-D array where each:</h4>\n\n<pre><code>\u2018ORDER_ARR[i] = [RATE[i], AMOUNT[i], TYPE[i]]\u2019  denotes that \u2018AMOUNT\u2019 orders have been placed of type \u2018TYPE\u2019 at the rate \u2018RATE\u2019. The \u2018TYPE\u2019 is:\n0 represents it as a batch of buy orders, or\n1 represents it as a batch of sell orders.\n</code></pre>\n\n<h4 id=\"the-khata-is-initially-empty-when-an-order-is-placed-the-following-steps-take-place\">The \u2018KHATA\u2019 is initially empty. When an order is placed, the following steps take place:</h4>\n\n<pre><code>If the order is a buy order, you look at the sell order with the smallest price in the \u2018KHATA\u2019. \nIf that sell order&#39;s price is smaller than or equal to the current buy order&#39;s price, they will match and be executed, and that sell order will be removed from the \u2018KHATA\u2019. \nElse, the buy order is added to the KHATA\u2019.\nIf the order is a sell order, you look at the buy order with the largest price in the \u2018KHATA\u2019.\nIf that buy order&#39;s price is larger than or equal to the current sell order&#39;s price, they will match and be executed, and that buy order will be removed from the \u2018KHATA\u2019. \nElse, the sell order is added to the \u2018KHATA\u2019.\n</code></pre>\n\n<h4 id=\"so-your-task-is-to-return-the-total-amounts-of-order-in-the-khata-after-placing-all-the-orders-from-the-input\">So your task is to return the total amounts of order in the \u2018KHATA\u2019 after placing all the orders from the input.</h4>\n\n<h4 id=\"example\">Example:</h4>\n\n<p><img src=\"https://files.codingninjas.in/capture1-9167.JPG\" alt=\"Example\"></p>\n\n<pre><code>Suppose the given \u2018ORDER_ARR\u2019 is [ [ 10, 5, 0 ], [ 15, 2, 1 ], [ 25, 1, 1 ], [ 30, 4, 0 ] ] \nNow 5 orders of type buy with price 10 are placed. There are no sell orders, so the 5 orders are added to the \u2018KHATA\u2019. \n2 orders of type sell with price 15 are placed. There are no buy orders with prices larger than or equal to 15, so the 2 orders are added to the \u2018KHATA\u2019. \n1 order of type sell with price 25 is placed. There are no buy orders with prices larger than or equal to 25 in the \u2018KHATA\u2019, so this order is added to the \u2018KHATA\u2019. \n4 orders of type buy with price 30 are placed. The first 2 orders are matched with the 2 sell orders of the least price, which is 15 and these 2 sell orders are removed from the \u2018KHATA\u2019. The 3rd order is matched with the sell order of the least price, which is 25 and this sell order is removed from the \u2018KHATA\u2019. Then, there are no more sell orders in the \u2018KHATA\u2019, so the 4th order is added to the \u2018KHATA\u2019.\nFinally, the \u2018KHATA\u2019 has 5 buy orders with a price of 10, and 1 buy order with a price of 30. So the total number of orders in the \u2018khata\u2019 is 6.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>1. The answer can be large, so return (ans % 10^9+7)\n</code></pre>\n\n<h4 id=\"input-format\">Input Format:</h4>\n\n<pre><code>The first line of input contains a \u2018T\u2019 number of test cases.\n\nThe first line of each test case contains an integer \u2018N\u2019 denoting the number of rows in array \u2018ORDER_ARR\u2019. Then, \u2018N\u2019 lines follow.\n\nEach line contains three integers denoting the number of columns in that row and \u20183\u2019 space-separated integers denoting the \u2018RATE\u2019, \u2018AMOUNT\u2019, and \u2018TYPE\u2019 value respectively.\n</code></pre>\n\n<h4 id=\"output-format\">Output Format:</h4>\n\n<pre><code>For each test case, print the total amounts of order in the \u2018KHATA\u2019.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints:</h4>\n\n<pre><code>1 &lt;= \u2018T\u2019 &lt;= 10\n1 &lt;= \u2018N\u2019 &lt;= 1000\n1 &lt;= \u2018RATE\u2019, \u2018AMOUNT\u2019 &lt;=10 ^ 6\n \u2018TYPE\u2019  = [ \u20180\u2019, \u20181\u2019 ]\n\nWhere \u2018T\u2019 represents the number of test cases and \u2018N\u2019 represents the size of \u2018ORDER_ARR\u2019.\n\nTime Limit: 1 sec.\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1:</h4>\n\n<pre><code>2\n4\n10 5 0\n15 2 1\n25 1 1\n30 4 0\n3\n5 8 0\n10 4 1\n15 3 1\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1:</h4>\n\n<pre><code>6\n15\n</code></pre>\n\n<h4 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1:</h4>\n\n<pre><code>Test Case 1:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/capture1-9167.JPG\" alt=\"Example\"></p>\n\n<pre><code>For the first test case given \u2018ORDER_ARR\u2019 is [ [ 10, 5, 0 ], [ 15, 2, 1 ], [ 25, 1, 1 ], [ 30, 4, 0 ] ] \nNow 5 orders of type buy with price 10 are placed. There are no sell orders, so the 5 orders are added to the \u2018KHATA\u2019. \n2 orders of type sell with price 15 are placed. There are no buy orders with prices larger than or equal to 15, so the 2 orders are added to the \u2018KHATA\u2019. \n1 order of type sell with price 25 is placed. There are no buy orders with prices larger than or equal to 25 in the \u2018KHATA\u2019, so this order is added to the \u2018KHATA\u2019. \n4 orders of type buy with price 30 are placed. The first 2 orders are matched with the 2 sell orders of the least price, which is 15 and these 2 sell orders are removed from the \u2018KHATA\u2019. The 3rd order is matched with the sell order of the least price, which is 25, and this sell order is removed from the \u2018KHATA\u2019. Then, there are no more sell orders in the \u2018KHATA\u2019, so the 4th order is added to the \u2018KHATA\u2019. \nFinally, the \u2018KHATA\u2019 has 5 buy orders with a price of 10, and 1 buy order with a price of 30. So the total number of orders in the \u2018KHATA\u2019 is 6.\n\nTest Case 2:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/capture2-9168.JPG\" alt=\"Example\"></p>\n\n<pre><code>For this test case given \u2018ORDER_ARR\u2019 is [ [ 5, 8, 0 ], [ 10, 4, 1 ], [ 15, 3, 1 ] ]\nNow 8 orders of type buy with price 5 are placed. There are no sell orders, so the 8 orders are added to the \u2018KHATA\u2019. \n4 orders of type sell with price 10 are placed. There are no buy orders with prices larger than or equal to 10, so the 4 orders are added to the \u2018KHATA\u2019. \n3 order of type sell with price 15 is placed. There are no buy orders with prices larger than or equal to 15 in the \u2018KHATA\u2019, so this order is added to the \u2018KHATA\u2019. So we return \u201815\u2019 as \u201815\u2019 orders are in our \u2018KHATA\u2019.    \n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2:</h4>\n\n<pre><code>2\n4\n23 5 0\n35 2 1\n45 1 1\n50 4 0\n3\n33 3 0\n42 1 1\n61 1 1\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2:</h4>\n\n<pre><code>6\n5\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation For Sample Input 2:</h5>\n\n<pre><code>For first test case, total amounts of order in the khata is 6.\n\nFor second test case, total amounts of order in the khata is 5.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 9,
            "dislikes": "NA",
            "rephrased": {
                "body": "Ninja, a budding trader, maintains a 'KHATA' to track unexecuted buy and sell orders. Each order is represented as [RATE, AMOUNT, TYPE], where RATE is the price, AMOUNT is the number of orders, and TYPE (0 for buy, 1 for sell).  When a new order arrives, buy orders are matched with the lowest-priced sell orders (if the buy price is greater or equal), and sell orders are matched with the highest-priced buy orders (if the sell price is less than or equal).  Matched orders are executed and removed from the KHATA. The task is to calculate the total number of orders remaining in the KHATA after processing all orders.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 1000",
                    "1 <= RATE, AMOUNT <= 10^6",
                    "TYPE = [0, 1]"
                ],
                "testcases": [
                    {
                        "input": "n = 4, orderArr = [[10, 5, 0], [15, 2, 1], [25, 1, 1], [30, 4, 0]]",
                        "output": "6",
                        "explanation": "Initially, 5 buy orders at rate 10 are added. Then, 2 sell orders at rate 15 and 1 sell order at rate 25 are added. Finally, 4 buy orders at rate 30 arrive. The first 2 match and remove the 2 sell orders at 15. The third matches and removes the 1 sell order at 25. The last buy order at rate 30 remains in the KHATA. So we have 5 buy orders at rate 10 and 1 buy order at rate 30, which is a total of 6 orders."
                    },
                    {
                        "input": "n = 3, orderArr = [[5, 8, 0], [10, 4, 1], [15, 3, 1]]",
                        "output": "15",
                        "explanation": "Initially, 8 buy orders at rate 5 are added. Then, 4 sell orders at rate 10 and 3 sell orders at rate 15 are added. Since no buy/sell orders can be matched, the total number of orders in the KHATA is 8 + 4 + 3 = 15."
                    },
                    {
                        "input": "n = 4, orderArr = [[23, 5, 0], [35, 2, 1], [45, 1, 1], [50, 4, 0]]",
                        "output": "6",
                        "explanation": "Initially, 5 buy orders at rate 23 are added. Then 2 sell orders at rate 35, and 1 sell order at rate 45 are added. Finally, 4 buy orders at rate 50 are added. 2 buy orders are matched with the 2 sell orders at rate 35. Then one buy order is matched with the 1 sell order at rate 45. Finally we are left with 5 buy orders at rate 23, and 1 buy order at rate 50. so total is 6."
                    },
                    {
                        "input": "n = 3, orderArr = [[33, 3, 0], [42, 1, 1], [61, 1, 1]]",
                        "output": "5",
                        "explanation": "Initially, 3 buy orders at rate 33 are added. Then, 1 sell order at rate 42, and 1 sell order at rate 61 are added. Since no buy/sell orders can be matched, the total number of orders in the KHATA is 3 + 1 + 1 = 5."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><strong>If an order is of type \u2018BUY\u2019, check \u2018KHATA\u2019 for sell order and find the minimum value order. Similarly, if the order is of type \u2018SELL\u2019, check \u2018KHATA\u2019 for buy order and find the maximum value order.</strong></p>"
        ],
        "relatedTopics": [
            {
                "name": "Heap",
                "slug": "heap"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}