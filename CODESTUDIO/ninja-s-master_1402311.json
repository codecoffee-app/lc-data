{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 11942,
            "title": "NINJA\u2019S MASTER",
            "titleSlug": "ninja-s-master_1402311",
            "content": "<h4 id=\"ninja-is-assigned-a-task-to-reach-a-target-by-his-master-his-master-is-taking-a-trial-of-ninja-for-checking-how-well-he-can-listen-to-his-commands-he-left-ninja-in-a-hidden-grid-where-each-cell-can-be-empty-or-blocked-ninja-has-to-go-to-the-target-cell-from-his-current-location-in-a-minimum-number-of-steps\">Ninja is assigned a task to reach a target by his master. His master is taking a trial of ninja for checking how well he can listen to his commands. He left ninja in a hidden grid where each cell can be empty or blocked. Ninja has to go to the target cell from his current location in a minimum number of steps.</h4>\n\n<h4 id=\"so-your-task-is-to-find-the-ninja-s-minimum-distance-to-the-target-cell-you-were-being-provided-with-the-starting-point-of-the-ninja\">So your task is to find the ninja\u2019s minimum distance to the target cell you were being provided with the starting point of the ninja.</h4>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>1. There is exactly one -1 and 2 in the grid. Remember that you will not have this information in your code.\n</code></pre>\n\n<h5 id=\"input-format\">Input format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 which denotes the number of test cases. Then, the \u2018T\u2019 test cases follow.\n\nEach test case\u2019s first line contains two space-separated integers, \u2018n\u2019 and \u2018m\u2019, denoting the number of rows and columns in the \u2018grid\u2019.\nThe next \u2018n\u2019 lines contain \u2018m\u2019 characters denoting the elements of the matrix.\n\ngrid[i][j] == -1 indicates that the ninja is in cell (i, j).\ngrid[i][j] == 0 indicates that the cell (i, j) is blocked.\ngrid[i][j] == 1 indicates that the cell (i, j) is empty.\ngrid[i][j] == 2 indicates that the cell (i, j) is the target cell.\n</code></pre>\n\n<h5 id=\"output-format\">Output format:</h5>\n\n<pre><code>For every test case, print the length of the shortest path to the ninja target. If no such path is available, print -1.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N, M &lt;= 10^2\nValue in each element of \u2018grid\u2019 = {\u2018-1\u2019, \u20181\u2019, \u20180\u2019, \u20182\u2019}\n\nWhere \u2018T\u2019 is the number of test cases, \u2018N\u2019 is the number of rows, and \u2018M\u2019 is the number of columns in a \u2018grid\u2019.\n\nTime Limit: 1 sec\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1:</h4>\n\n<pre><code>1\n3 3\n0 -1 1\n0 0 1\n0 1 2\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1:</h4>\n\n<pre><code>3\n</code></pre>\n\n<h4 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1:</h4>\n\n<pre><code>Test Case 1:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/cn1-8698.jpg\" alt=\"Example\"></p>\n\n<pre><code>As you can see in the input matrix first ninja has to move right then down and then again down for reaching the destination. So the minimum steps needed are is \u20183\u2019.\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2:</h4>\n\n<pre><code>1\n3 4\n0 -1 1 0\n0 0 1 1\n0 1 0 2\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2:</h4>\n\n<pre><code>4\n</code></pre>\n\n<h4 id=\"explanation-for-sample-input-2\">Explanation For Sample Input 2:</h4>\n\n<pre><code>Test Case 1:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/cn2-8699.jpg\" alt=\"Example\"></p>\n\n<pre><code>As you can see in the input matrix first ninja has to move right then down and then right and then down for reaching the destination. So the minimum steps needed are is \u20184\u2019.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": -7,
            "dislikes": "NA",
            "rephrased": {
                "body": "A ninja is tasked by their master to reach a target location within a hidden grid. The master is testing the ninja's ability to follow instructions. The grid consists of empty cells, blocked cells, the ninja's starting position, and the target location. Find the minimum number of steps for the ninja to reach the target from their starting point.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N, M <= 100",
                    "Each element in the grid is one of: '-1', '1', '0', '2'",
                    "T is the number of test cases, N is the number of rows, and M is the number of columns in the grid.",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "3 3\n0 -1 1\n0 0 1\n0 1 2",
                        "output": "3",
                        "explanation": "The ninja starts at (0,1), needs to go to (2,2). One optimal path is Right -> Down -> Down, requiring 3 steps."
                    },
                    {
                        "input": "3 4\n0 -1 1 0\n0 0 1 1\n0 1 0 2",
                        "output": "4",
                        "explanation": "The ninja starts at (0,1), needs to go to (2,3). One optimal path is Right -> Down -> Right -> Down, requiring 4 steps."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to iterate through all the nodes.</p>",
            "<p>Try to get starting node and then iterate through its adjacent nodes.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Depth-first Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-first Search",
                "slug": "breadth-first-search"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}