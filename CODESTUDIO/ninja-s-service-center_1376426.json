{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 11015,
            "title": "Ninja\u2019s Service Center",
            "titleSlug": "ninja-s-service-center_1376426",
            "content": "<h4 id=\"ninja-wants-to-start-a-service-center-in-town-but-people-being-quite-lazy-these-days-he-decided-to-open-the-service-center-in-such-a-place-that-the-sum-of-the-euclidian-distance-of-his-service-center-from-all-his-customer-s-location-is-minimum-ninja-has-positions-of-all-its-customer-in-a-2d-map-but-ninja-doesn-t-know-how-to-minimize-the-euclidian-distance-being-his-business-advisor-your-task-is-to-help-ninja-find-a-suitable-position-for-his-service-center\">Ninja wants to start a service center in town. But people being quite lazy these days,  he decided to open the service center in such a place that the sum of the euclidian distance of his service center from all his customer\u2019s location is minimum. Ninja has positions of all its customer in a 2D map, but Ninja doesn\u2019t know how to minimize the euclidian distance. Being his business advisor your task is to help Ninja find a suitable position for his service center.</h4>\n\n<h4 id=\"given-a-2-d-array-location-where-locations-i-0-and-location-i-1-denotes-the-x-and-y-coordinates-of-position-of-i-th-person-you-need-to-return-the-minimum-sum-of-euclidian-distance-of-ninja-s-service-center-from-all-customers\">Given a 2-D array \u2018location\u2019 where locations[ i ][ 0 ] and location[ i ][ 1 ] denotes the x and y coordinates of position of \u2018i-th\u2019 person.You need to return the minimum sum of Euclidian distance of Ninja\u2019s service center from all customers.</h4>\n\n<p>The euclidian distance of a point [ x2, y2 ] from [ x1,y1 ] is given as \n<img src=\"https://miro.medium.com/max/1856/1*L1pWK9foGvUIT7uQM9f_yQ.png\"  width=\"300\" height=\"50\"></p>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You need to round up your answer to the nearest three decimal places.\n</code></pre>\n\n<h5 id=\"for-example\">For Example :</h5>\n\n<pre><code>If the position of the customers is [ [ 1,0 ], [ 4,0 ], [ 6,0 ] ], then if Ninja opens his service center at [ 4,0 ] then he will get the minimum sum of euclidian distance = 5.000  from all customers.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains \u2018T\u2019 denoting the number of test cases.\n\nThe first line of each test case contains \u2018N\u2019 denoting the number of customers.\n\nThe next \u2018N\u2019 lines contain two space-separated integers \u2018 x \u2019 and \u2018 y \u2019 denoting the coordinates of the position of the customers.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print a single integer denoting the minimum sum of Euclidian distance.\n\nPrint your answer up to the nearest three decimal places.\n\nPrint the output of each test case in a separated line.\n</code></pre>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 10^3\n0 &lt;= location[ i ][ 0 ], location[ i ][ 1 ] &lt;= 10^3\n\nWhere  location[ i ][ 0 ], location[ i ][ 1 ] denotes the \u2018 x \u2019 and \u2018 y \u2019 coordinates of the position of customers.\n\nTime Limit : 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n3\n2 0\n0 0\n1 1\n1\n3 4\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1  :</h5>\n\n<pre><code>2.733\n0.000\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1 :</h5>\n\n<pre><code>Test Case 1: If NInja opens his service center at [ 1,0 ] then he will get a sum of euclidian distances = 3. But if he opens his center at [ 1, 0.5773 ] then he will get a minimum sum of distances = 2.73205. Round to the nearest three decimal places = 2.733\n\nTest Case 2: There is only one customer so the minimum distance can be \u20180\u2019.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n3\n2 2\n3 4\n4 1\n2\n5 3\n3 2\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>4.320\n2.237\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 5,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a 2D array 'location' representing the coordinates of N customers, determine the optimal location for a service center such that the sum of Euclidean distances from the service center to each customer is minimized. Return the minimum sum of Euclidean distances, rounded to three decimal places.",
                "constraints": [
                    "1 <= N <= 10^3",
                    "0 <= location[ i ][ 0 ], location[ i ][ 1 ] <= 10^3",
                    "The answer should be rounded up to the nearest three decimal places."
                ],
                "testcases": [
                    {
                        "input": "location = [[2.0, 0.0], [0.0, 0.0], [1.0, 1.0]], N = 3",
                        "output": "2.733",
                        "explanation": "The optimal location for the service center is approximately [1, 0.5773], resulting in a minimum sum of Euclidean distances of approximately 2.733."
                    },
                    {
                        "input": "location = [[3.0, 4.0]], N = 1",
                        "output": "0.000",
                        "explanation": "With only one customer, the optimal location for the service center is at the customer's location, resulting in a zero Euclidean distance."
                    },
                    {
                        "input": "location = [[2.0, 2.0], [3.0, 4.0], [4.0, 1.0]], N = 3",
                        "output": "4.320",
                        "explanation": "The optimal service center location results in a minimum sum of Euclidean distances of approximately 4.320."
                    },
                    {
                        "input": "location = [[5.0, 3.0], [3.0, 2.0]], N = 2",
                        "output": "2.237",
                        "explanation": "The optimal service center location results in a minimum sum of Euclidean distances of approximately 2.237."
                    },
                    {
                        "input": "location = [[1.0, 0.0], [4.0, 0.0], [6.0, 0.0]], N = 3",
                        "output": "5.000",
                        "explanation": "The optimal service center location is at [4.0, 0.0], resulting in a sum of Euclidean distances of 5.000."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>&nbsp;Do you know about geometric median??</p>"
        ],
        "relatedTopics": [
            {
                "name": "Computational Geometry",
                "slug": "computational-geometry"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}