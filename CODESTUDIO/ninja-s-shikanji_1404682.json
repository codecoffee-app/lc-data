{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12269,
            "title": "NINJA\u2019S SHIKANJI",
            "titleSlug": "ninja-s-shikanji_1404682",
            "content": "<h4 id=\"ninja-opened-a-shikanji-s-stall-to-earn-a-living-for-him-in-his-stall-each-shikanji-drinks-cost-5-customers-are-standing-in-the-form-queue-and-each-customer-either-pays-5-10-20-so-now-ninja-has-to-give-them-change-so-that-each-customer-exactly-pays-5\">Ninja opened a shikanji\u2019s stall to earn a living for him. In his stall, each shikanji drinks cost \u20185$\u2019. Customers are standing in the form queue and each customer either pays \u20185$, 10$, 20$ \u2018 so now Ninja has to give them change so that each customer exactly pays \u20185$\u2019.</h4>\n\n<h4 id=\"so-now-help-the-ninja-to-find-out-whether-he-is-able-to-charge-exactly-5-from-each-customer-by-providing-them-the-change\">So now help the ninja to find out whether he is able to charge exactly \u20185$\u2019 from each customer by providing them the change.</h4>\n\n<h4 id=\"so-your-task-is-to-write-a-code-to-check-whether-ninja-can-provide-change-to-the-customer-if-they-paid-extra-to-him-you-will-be-provided-with-the-bill_arr-array-denoting-the-amount-paid-by-each-customer-you-have-to-return-true-if-it-is-possible-else-you-have-to-return-false\">So your task is to write a code to check whether ninja can provide change to the customer if they paid extra to him. You will be provided with the \u2018BILL_ARR\u2019 array denoting the amount paid by each customer you have to return \u2018True\u2019 if it is possible else you have to return \u2018False\u2019.</h4>\n\n<h4 id=\"example\">Example:</h4>\n\n<pre><code>Suppose given \u2018BILL_ARR\u2019 array is { 5, 5, 5, 10, 20 } so we return \u2018True\u2019 for this test case as from first \u20183\u2019 customers we take \u20185$\u2019 from each customer then \u20184th\u2019 customer give \u201810$\u2019 we give him \u20185$\u2019 back now we have \u20182\u2019, \u20185$\u2019 note and \u20181\u2019, \u201810$\u2019 note than \u20185th\u2019 customer give \u201820$\u2019 so we give him back one \u201810$\u2019 and one \u20185$\u2019 note.\n</code></pre>\n\n<h4 id=\"input-format\">Input Format:</h4>\n\n<pre><code>The first line of input contains a \u2018T\u2019 number of test cases.\n\nThe first line of each test case contains an integer \u2018N\u2019 i.e size of the array \u2018BILL_ARR\u2019.\n\nThe second line of each test case contains an array \u2018BILL_ARR\u2019, where \u2018BILL_ARR[i]\u2019  denotes the money paid for \u2018i-th\u2019 shikanji.\n</code></pre>\n\n<h4 id=\"output-format\">Output Format:</h4>\n\n<pre><code>For each test case, print \u2018True\u2019 if it is possible else print \u2018False\u2019.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>1. You don\u2019t have any changes at starting.\n2. You are not required to print anything explicitly. It has already been taken care of. Just implement the function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints:</h4>\n\n<pre><code>1 &lt;= T &lt;= 10^2\n1 &lt;= N &lt;= 10^3\nBILL_ARR[i]  = [ \u20185\u2019, \u201810\u2019, \u201820\u2019 ]  \n\nWhere \u2018T\u2019 represents the number of test cases and \u2018N\u2019 represents the size of the array and \u2018BILL_ARR[i]\u2019 represents the elements of the array.\n\nTime Limit: 1 sec\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1:</h4>\n\n<pre><code>2\n5\n5 10 5 20 5\n4\n5 20 5 10\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1:</h4>\n\n<pre><code>True\nFalse\n</code></pre>\n\n<h4 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1:</h4>\n\n<pre><code>Test Case 1:\nFor the first test case given \u2018BILL_ARR\u2019 is { 5, 10, 5, 20, 5 } so we print \u2018True\u2019 as we take \u20185$\u2019 from the first customer then \u20182nd\u2019 customer gives us \u201810$\u2019 we give him back \u20185$\u2019 then \u20183rd\u2019 customer give use \u20185$\u2019 then \u20184th\u2019 customer give us \u201820$\u2019 now we give him back one \u20185$\u2019 note and one \u201810$\u2019 note.\n\nTest Case 2:\nFor the second test case given \u2018BILL_ARR\u2019 is { 5, 20, 5, 10 } so we print \u2018False\u2019 as from the first customer we take \u20185$\u2019 note than \u20182nd\u2019 customer give us \u201820$\u2019 note and we don\u2019t have required change.\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2 :</h4>\n\n<pre><code>2\n3\n5 10 20\n7\n5 5 10 5 5 20 10\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2 :</h4>\n\n<pre><code>False\nTrue\n</code></pre>\n\n<h4 id=\"explanation-for-sample-input-2\">Explanation For Sample Input 2:</h4>\n\n<pre><code>Test Case 1:\nFor the first test case given \u2018BILL_ARR\u2019 is { 5, 10, 20} so we print \u2018False\u2019 as we take \u20185$\u2019 from the first customer then \u20182nd\u2019 customer gives us \u201810$\u2019 we give him back \u20185$\u2019 then \u20183rd\u2019 customer give use \u201820$\u2019 but we will not be able to give him change back.\n\nTest Case 2:\nFor the second test case given \u2018BILL_ARR\u2019 is { 5, 5, 10, 5, 5, 20, 10 } so we print \u2018True\u2019 as every transaction is possible.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 4,
            "dislikes": "NA",
            "rephrased": {
                "body": "Ninja is running a shikanji stall where each drink costs $5. Customers pay with $5, $10, or $20 bills. Given an array representing the bills paid by customers in a queue, determine if Ninja can provide the correct change to every customer, starting with no change initially.",
                "constraints": [
                    "1 <= T <= 10^2",
                    "1 <= N <= 10^3",
                    "BILL_ARR[i] = ['5', '10', '20']"
                ],
                "testcases": [
                    {
                        "input": "n = 5, bill=[5, 10, 5, 20, 5]",
                        "output": "True",
                        "explanation": "Ninja receives $5, then $10 (gives $5 change), then $5, then $20 (gives $10 and $5 change), then $5. All transactions are possible."
                    },
                    {
                        "input": "n = 4, bill=[5, 20, 5, 10]",
                        "output": "False",
                        "explanation": "Ninja receives $5, then $20. Since Ninja initially had no change, and only has one $5 from the first customer, he cannot provide the $15 change required for the $20 bill."
                    },
                    {
                        "input": "n = 3, bill=[5, 10, 20]",
                        "output": "False",
                        "explanation": "Ninja receives $5, then $10 (gives $5 change). Now he has a $10 bill. The next customer pays with $20, requiring $15 change. Ninja cannot provide the correct change since he only has one $10 bill."
                    },
                    {
                        "input": "n = 7, bill=[5, 5, 10, 5, 5, 20, 10]",
                        "output": "True",
                        "explanation": "All transactions are possible with the bills received. Ninja receives $5, $5, $10(gives $5 change), $5, $5, $20 (gives $10 and $5 change), $10"
                    },
                    {
                        "input": "n = 2, bill=[10,10]",
                        "output": "False",
                        "explanation": "Ninja receives $10 from first customer, needs to return $5 change, which is not possible as he started with no change."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you think of storing the count of notes?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}