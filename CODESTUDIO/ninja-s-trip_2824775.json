{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 15800,
            "title": "Ninja's Trip",
            "titleSlug": "ninja-s-trip_2824775",
            "content": "<h4 id=\"ninja-is-new-to-the-city-so-he-decided-to-explore-the-city-the-city-is-in-the-form-of-an-undirected-graph-having-n-locations-and-e-roads-ninja-wants-to-visit-the-city-in-such-a-way-that-if-he-starts-his-journey-from-location-x-he-visits-all-the-roads-of-the-city-exactly-once-and-returns-to-the-starting-point-x-can-you-help-ninja-to-find-either-it-is-possible-or-not-to-have-such-a-trip\">Ninja is new to the city, so he decided to explore the city. The city is in the form of an undirected graph having \u2018N\u2019 locations and \u2018E\u2019 roads. Ninja wants to visit the city in such a way that if he starts his journey from location \u2018X\u2019, he visits all the roads of the city exactly once and returns to the starting point \u2018X\u2019.Can you help Ninja to find either it is possible or not to have such a trip?</h4>\n\n<h4 id=\"you-are-given-an-undirected-graph-having-n-vertices-and-e-edges-you-have-to-find-either-a-round-trip-visiting-all-edges-exactly-once-is-possible-or-not\">You are given an undirected graph having \u2018N\u2019 vertices and \u2018E\u2019 edges. You have to find either a round trip visiting all edges exactly once is possible or not.</h4>\n\n<h5 id=\"for-example\">For Example</h5>\n\n<pre><code>For the given graph:\n</code></pre>\n\n<p><img src=\"https://ninjasfiles.s3.amazonaws.com/asset_0000000000000528_1636452951_graph1.png\" alt=\"alt-text\"></p>\n\n<p>The required path exists in the given graph as we can start from 1 and follow the path\n1 -&gt; 0 -&gt; 2 -&gt; 1. This path visits all edges exactly once. Hence, the answer is YES.</p>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of the input contains an integer, &#39;T,\u2019 denoting the number of test cases.\n\nThe first line of each test case contains two integers \u2018N\u2019 and \u2018E\u2019 denoting the number of vertices and edges.\nThe next \u2018E\u2019 lines have two integers denoting an edge between them.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print \u2018YES\u2019 if the path with given condition is possible,else print \u2018NO\u2019.  \n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n2 &lt;= N &lt;= 1000.\n1 &lt;= E &lt;= min(N*(N-1)/2, 5000).\n0 &lt;= u,v &lt; \u2018N\u2019\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n3 3\n0 1\n1 2\n2 0\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>YES\nYES\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of sample input 1:</h5>\n\n<pre><code>For the first test case,\n</code></pre>\n\n<p><img src=\"https://ninjasfiles.s3.amazonaws.com/asset_0000000000000528_1636452951_graph1.png\" alt=\"alt-text\"></p>\n\n<p>The path 1 -&gt; 0 -&gt; 2 -&gt; 1  fulfills all the requirements.Hence the answer is \u2018YES\u2019.</p>\n\n<pre><code>For the second test case:\n</code></pre>\n\n<p><img src=\"https://ninjasfiles.s3.amazonaws.com/asset_0000000000000529_1636452960_graph2.png\" alt=\"alt-text\"></p>\n\n<p>The path 1 -&gt; 0 -&gt; 4 -&gt; 3 -&gt;0 -&gt;2 -&gt; 1 fulfills all the requirements.Hence the answer is \u2018YES\u2019.</p>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n2 1\n0 1\n3 1\n0 1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>NO\nNO\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 3,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an undirected graph with 'N' locations (vertices) and 'E' roads (edges), determine if it's possible to start at a location 'X', traverse each road exactly once, and return to 'X'. In essence, check if the graph has an Eulerian circuit.",
                "constraints": [
                    "1 <= T <= 10",
                    "2 <= N <= 1000",
                    "1 <= E <= min(N*(N-1)/2, 5000)",
                    "0 <= u, v < N",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "3 3\n0 1\n1 2\n2 0",
                        "output": "YES",
                        "explanation": "The graph has an Eulerian circuit. Starting from node 0, a possible path is 0 -> 1 -> 2 -> 0."
                    },
                    {
                        "input": "5 6\n0 1\n0 4\n1 0\n1 2\n2 0\n3 0",
                        "output": "YES",
                        "explanation": "The graph has an Eulerian circuit. A possible path is 0 -> 1 -> 2 -> 0 -> 4 -> 0 -> 3."
                    },
                    {
                        "input": "2 1\n0 1",
                        "output": "NO",
                        "explanation": "The graph does not have an Eulerian circuit.  Both nodes have a degree of 1, which is odd.  For an Eulerian circuit, all nodes must have an even degree."
                    },
                    {
                        "input": "3 1\n0 1",
                        "output": "NO",
                        "explanation": "The graph does not have an Eulerian circuit. The nodes 0 and 1 has odd degree and it is not a connected graph. "
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to observe a pattern in about the degree of each vertex.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Depth-first Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}