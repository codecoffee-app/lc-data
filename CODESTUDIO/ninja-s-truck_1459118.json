{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12286,
            "title": "NINJA'S TRUCK",
            "titleSlug": "ninja-s-truck_1459118",
            "content": "<h4 id=\"ninja-is-assigned-a-task-to-deliver-some-boxes-which-contain-different-units-having-different-weights-with-the-help-of-his-truck-he-will-earn-money-on-the-basis-of-the-number-of-units-of-boxes-he-will-deliver-by-his-truck-ninja-truck-has-some-capacity-on-the-number-of-boxes-he-can-put-on-his-truck\">Ninja is assigned a task to deliver some boxes which contain different units having different weights. With the help of his truck, he will earn money on the basis of the number of units of boxes he will deliver by his truck. Ninja truck has some capacity on the number of boxes he can put on his truck.</h4>\n\n<h4 id=\"so-your-task-is-to-find-a-way-so-that-ninja-will-choose-boxes-in-a-way-that-units-will-be-maximum-and-he-would-be-able-to-get-more-money-you-will-be-provided-with-an-array-of-box\">So your task is to find a way so that ninja will choose boxes in a way that units will be maximum and he would be able to get more money you will be provided with an array of \u2018BOX\u2019</h4>\n\n<pre><code>where BOX[i] = [countofBoxes, unitsperBox]:\ncountofBoxes is the number of boxes of type I.\nunitsperBox is the number of units in each box of type I.\nAnd an integer \u2018K\u2019 denoting the limit of boxes on the truck.\n</code></pre>\n\n<h4 id=\"input-format\">Input Format:</h4>\n\n<pre><code>The first line of input contains a \u2018T\u2019 number of test cases.\nThe first line of each test case contains an integer \u2018N\u2019 and \u2018K\u2019 denoting the number of rows in array \u2018BOX\u2019 and the limit on boxes on the truck. Then, \u2018N\u2019 lines follow.\nEach line contains two space-separated integers denoting the row values i.e count of boxes and units per box.\n</code></pre>\n\n<h4 id=\"output-format\">Output Format:</h4>\n\n<pre><code>For each test case, print a single line containing the maximum number of units that Ninja can deliver.\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints:</h4>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= N &lt;= 1000\n1 &lt;= BOX[i] &lt;= 1000\n1 &lt;= K &lt;= 10 ^ 6\n\nWhere \u2018T\u2019 is the number of test cases, \u2018N\u2019 is the number of rows in 2-D array \u2018BOX\u2019, and \u2018K\u2019 is the limit on boxes on the truck.\n\nTime Limit: 1 sec\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1:</h4>\n\n<pre><code>2\n3 3\n1 1\n2 5\n1 3\n2 1\n2 5\n3 4\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1:</h4>\n\n<pre><code>13\n5\n</code></pre>\n\n<h4 id=\"explanation-for-sample-input-1\">Explanation for sample input 1:</h4>\n\n<pre><code>Test Case 1:\nAs the limit on boxes is \u20183\u2019 so we choose \u20182\u2019 boxes each of \u20185\u2019 units and \u20181\u2019 boxes of \u20183\u2019 units making our maximum number of units in the required number of boxes that is \u201813\u2019.\n\nTest Case 2:\nAs the limit on boxes is \u20181\u2019 so we can choose only one box so we choose \u20181\u2019 box containing \u20185\u2019 units making our maximum number of units in the required number of boxes that is \u20185\u2019.\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2:</h4>\n\n<pre><code>1\n4 4\n3 5\n2 10\n1 15\n2 4\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2:</h4>\n\n<pre><code>40\n</code></pre>\n\n<h4 id=\"explanation-for-sample-input-2\">Explanation for sample input 2:</h4>\n\n<pre><code>Test Case 1:\nAs the limit on boxes is \u20184\u2019 so we choose \u20181\u2019 box of \u201815\u2019 units and \u20182\u2019 box of \u201810\u2019 units each and \u20181\u2019 box of \u20185\u2019 unit making our maximum number of units in the required number of boxes that is \u201840\u2019.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 8,
            "dislikes": "NA",
            "rephrased": {
                "body": "Ninja needs to transport boxes with his truck to maximize his earnings. Each box type has a certain number of boxes available and a certain number of units per box. Given the available box types and the truck's box capacity, determine the maximum number of units Ninja can deliver.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= N <= 1000",
                    "1 <= BOX[i][0], BOX[i][1] <= 1000",
                    "1 <= K <= 10^6"
                ],
                "testcases": [
                    {
                        "input": "box=[[1, 1], [2, 5], [1, 3]], k=3",
                        "output": "13",
                        "explanation": "Choosing 2 boxes each of 5 units and 1 box of 3 units results in a maximum of 13 units. (2 * 5) + (1 * 3) = 13"
                    },
                    {
                        "input": "box=[[2, 5], [3, 4]], k=1",
                        "output": "5",
                        "explanation": "With a box limit of 1, choosing 1 box with 5 units yields the maximum of 5 units."
                    },
                    {
                        "input": "box=[[3, 5], [2, 10], [1, 15], [2, 4]], k=4",
                        "output": "40",
                        "explanation": "Choosing 1 box of 15 units, 2 boxes of 10 units each, and 1 box of 5 units maximizes the units to 40. (1 * 15) + (2 * 10) + (1 * 5) = 40"
                    },
                    {
                        "input": "box=[[1, 1000], [1, 1], [1, 1]], k=3",
                        "output": "1002",
                        "explanation": "Choosing one box of 1000 units and two of 1 unit yields the max units of 1002"
                    },
                    {
                        "input": "box=[[5, 2], [3, 7], [1, 9]], k=6",
                        "output": "36",
                        "explanation": "Choosing all 5 boxes of 2 units and one box of 7 units yields the maximum of 17 units. (5 * 2) + (1 * 7) = 17"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you think of using a 1-D array for storing each box weight?</p>",
            "<p>Can you think of using a 1-D array for storing each box weight?</p>",
            "<p>Can you think of a method for optimizing space and time complexity?</p>",
            "<p>Can you think of a method for optimizing space and time complexity?</p>"
        ],
        "relatedTopics": [],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}