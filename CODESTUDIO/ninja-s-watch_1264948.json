{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10796,
            "title": "NINJA\u2019S WATCH",
            "titleSlug": "ninja-s-watch_1264948",
            "content": "<h4 id=\"ninja-has-his-own-philosophy-he-thinks-that-if-his-watch-started-showing-next-closet-time-he-will-be-able-to-do-all-his-work-on-time-as-if-his-watch-shows-next-closet-time-then-he-would-think-that-the-deadline-is-near-and-he-will-be-able-to-do-his-work-before-deadline\">Ninja has his own philosophy. He thinks that if his watch started showing next closet time he will be able to do all his work on time. As if his watch shows next closet time, then he would think that the deadline is near and he will be able to do his work before deadline.</h4>\n\n<h4 id=\"so-your-task-is-to-write-a-code-that-can-return-the-next-closet-time-you-are-given-a-time-represented-in-the-format-hh-mm-by-using-the-current-digits-there-is-no-limit-on-how-many-times-a-digit-can-be-used\">So your task is to write a code that can return the next closet time you are given a time represented in the format \u201cHH: MM\u201d by using the current digits. There is no limit on how many times a digit can be used.</h4>\n\n<h4 id=\"input-format\">Input Format:</h4>\n\n<pre><code>The first line of input contains a \u2018T\u2019 number of test cases.\n\nThe first line of input of each test case contains a string &#39;TIME&#39;, which represents the time in \u201cHH: MM\u201d format.\n</code></pre>\n\n<h4 id=\"output-format\">Output Format:</h4>\n\n<pre><code>For each test case, return the string which is the next closest time to the given string.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You are not required to print anything explicitly. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints:</h4>\n\n<pre><code>1 &lt;= T &lt;= 100 \n| TIME | = 5\n\nTime Limit: 1 sec\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1:</h4>\n\n<pre><code>2\n19:34\n23:59\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1:</h4>\n\n<pre><code>19:39\n22:22\n</code></pre>\n\n<h4 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1:</h4>\n\n<pre><code>Test Case 1:\nAccording to this test case string given is \u201819:34\u2019 so the possible time combination is:\nFor the same day, the next closet time is \u201819:39\u2019, \u201819:41\u2019, 19:43\u2019\nFor the next day, the next closet time is \u201811:11\u2019, \u201811:13\u2019, \u201811:14\u2019, \u201811:19\u2019, \u201811:31\u2019, \u201811:34\u2019, \u201811:41\u2019, \u201811:43\u2019and so on.\nSo next time which is near to 19:34 is 19:39 so we return this as our answer.\n\nTest Case 2:\nAccording to this test case string given is \u201823:59\u2019 so possible time combination is only possible for the next day i.e \u201822:22\u2019, \u201822:23\u2019, \u201822:25\u2019, \u201822:29\u2019, \u201822:32\u2019and so on.\n So next time which is near 23:59 is 22:22 so we return this as our answer.\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2:</h4>\n\n<pre><code>2\n11:34\n07:24\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2:</h4>\n\n<pre><code>11:41\n07:27\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 8,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a time represented as a string in \"HH:MM\" format, find the next closest time that can be formed using only the digits present in the original time string. You can use each digit as many times as needed. Return the next closest time in the same \"HH:MM\" format.",
                "constraints": [
                    "1 <= T <= 100",
                    "|TIME| = 5",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "time = \"19:34\"",
                        "output": "19:39",
                        "explanation": "The digits available are 1, 9, 3, and 4. The next closest time to 19:34 using these digits is 19:39."
                    },
                    {
                        "input": "time = \"23:59\"",
                        "output": "22:22",
                        "explanation": "The digits available are 2, 3, 5, and 9. The next closest time to 23:59 using these digits is 22:22. Because finding a valid time on the same day is impossible, we wrap around to the next day."
                    },
                    {
                        "input": "time = \"11:34\"",
                        "output": "11:41",
                        "explanation": "The digits available are 1, 3, and 4. The next closest time to 11:34 using these digits is 11:41."
                    },
                    {
                        "input": "time = \"07:24\"",
                        "output": "07:27",
                        "explanation": "The digits available are 0, 7, 2, and 4. The next closest time to 07:24 using these digits is 07:27."
                    },
                    {
                        "input": "time = \"22:22\"",
                        "output": "22:22",
                        "explanation": "The digit available is 2. So, next closest time is 22:22"
                    },
                    {
                        "input": "time = \"12:34\"",
                        "output": "12:41",
                        "explanation": "The digits are 1, 2, 3, and 4. The next closest time after 12:34 is 12:41"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><strong>Can you find all possible combinations of time by using these given 4 digits?</strong></p>",
            "<p><strong>Can you think of dfs?</strong></p>"
        ],
        "relatedTopics": [
            {
                "name": "Depth-first Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}