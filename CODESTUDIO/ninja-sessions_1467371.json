{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12633,
            "title": "Ninja Sessions",
            "titleSlug": "ninja-sessions_1467371",
            "content": "<h4 id=\"ninja-has-enrolled-in-n-practice-sessions-but-he-forgot-that-the-timings-of-some-of-these-sessions-can-clash-with-each-other-the-practice-sessions-may-or-may-not-have-the-same-duration-ninja-is-not-allowed-to-leave-any-session-midway-you-are-given-the-starting-and-ending-times-of-each-session\">Ninja has enrolled in \u2018N\u2019 practice sessions but he forgot that the timings of some of these sessions can clash with each other. The practice sessions may or may not have the same duration. Ninja is not allowed to leave any session midway. You are given the starting and ending times of each session.</h4>\n\n<h4 id=\"your-task-is-to-determine-the-maximum-number-of-sessions-ninja-can-attend-without-leaving-any-session-midway\">Your task is to determine the maximum number of sessions Ninja can attend without leaving any session midway.</h4>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains an integer \u2018T\u2019, which denotes the number of test cases to be run. Then, the T test cases follow. \n\nThe first line of each test case contains a single integer, \u2018N\u2019, denoting the total number of sessions. Then \u2018N\u2019 lines follow. \n\nEach of these \u2018N\u2019 lines contains two space-separated integers, denoting the starting time and ending time of the \u2018ith\u2019 session.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print a single integer, denoting the maximum number of sessions Ninja can attend.\n\nOutput for each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 10^5\n1 &lt;= A,B, &lt;= 10^9\n\nTime Limit: 1sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1\n2\n1 4\n6 7\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>2\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1:</h5>\n\n<pre><code>In the given test case, Ninja can attend both the sessions he enrolled in. He can attend the first session, which starts at 1 and ends at 4. He can also attend the second session because this session starts at 6. So, our final answer will be 2.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\n3\n1 4\n2 5\n4 7\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>2\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 9,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a list of practice session start and end times, determine the maximum number of non-overlapping sessions Ninja can attend. Ninja cannot leave a session midway.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10^5",
                    "1 <= A, B <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "sessions = [[1, 4], [6, 7]]",
                        "output": "2",
                        "explanation": "Ninja can attend both sessions since they don't overlap."
                    },
                    {
                        "input": "sessions = [[1, 4], [2, 5], [4, 7]]",
                        "output": "2",
                        "explanation": "Ninja can attend either [1,4] and [4,7] or [2,5] and another session.  Choosing [1,4] and [4,7] gives two non-overlapping sessions."
                    },
                    {
                        "input": "sessions = [[1, 2], [2, 3], [3, 4], [4, 5], [5, 6], [6, 7], [7, 8], [8, 9], [9, 10], [10, 11], [11, 12]]",
                        "output": "11",
                        "explanation": "All sessions are back to back and non-overlapping."
                    },
                    {
                        "input": "sessions = [[1, 10], [2, 3], [4, 5], [6, 7], [8, 9]]",
                        "output": "4",
                        "explanation": "Ninja cannot attend the session [1,10] together with any other session.  The optimal solution is to choose [2,3], [4,5], [6,7], [8,9]."
                    },
                    {
                        "input": "sessions = [[1, 5], [6, 10], [11, 15], [1, 2], [3, 4], [5, 6], [7, 8], [9, 10], [11, 12], [13, 14]]",
                        "output": "7",
                        "explanation": "Optimal solution is to choose sessions [1, 2], [3, 4], [5, 6], [7, 8], [9, 10], [11, 12], [13, 14]."
                    },
                    {
                        "input": "sessions = [[1,2]]",
                        "output": "1",
                        "explanation": "Only one session available."
                    },
                    {
                        "input": "sessions = []",
                        "output": "0",
                        "explanation": "No sessions available."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><i>Sort all the sessions according to the non-decreasing order of their ending time.</i></p>"
        ],
        "relatedTopics": [
            {
                "name": "Number Theory",
                "slug": "number-theory"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}