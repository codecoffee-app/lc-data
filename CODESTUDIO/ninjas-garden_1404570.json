{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12197,
            "title": "NINJAS GARDEN",
            "titleSlug": "ninjas-garden_1404570",
            "content": "<h4 id=\"nowadays-ninja-develops-an-interest-in-gardening-he-wants-to-grow-flowers-in-his-garden-so-he-makes-his-garden-in-the-form-array-like-there-is-an-n-number-of-slots-in-the-garden-ninja-has-grown-special-flowers-that-have-unique-properties-like-n-flowers-will-bloom-one-by-one-in-n-days-on-each-day-there-will-be-exactly-one-flower-blooming-and-it-will-be-in-the-status-of-blooming-since-then\">Nowadays ninja develops an interest in gardening. He wants to grow flowers in his garden. So he makes his garden in the form array-like there is an \u2018N\u2019 number of slots in the garden. Ninja has grown special flowers that have unique properties like \u2018N\u2019 flowers will bloom one by one in N days. On each day, there will be exactly one flower blooming and it will be in the status of blooming since then.</h4>\n\n<h4 id=\"so-your-task-is-to-return-on-which-day-there-exists-two-flowers-in-the-status-of-blooming-and-also-the-number-of-flowers-between-them-is-k-and-these-flowers-are-not-blooming\">So your task is to return on which day there exists two flowers in the status of blooming, and also the number of flowers between them is K and these flowers are not blooming.</h4>\n\n<h4 id=\"you-will-be-provided-with-an-array-of-flowers-consisting-of-a-number-from-1-to-n-each-number-in-the-array-represents-the-place-where-the-flower-will-open-on-that-day-and-an-integer-k\">You will be provided with an array of  \u2018FLOWERS\u2019 consisting of a number from 1 to N. Each number in the array represents the place where the flower will open on that day and an integer \u2018K\u2019.</h4>\n\n<h4 id=\"for-example-flowers-i-x-means-that-the-unique-flower-that-blooms-at-day-i-will-be-at-position-x-where-i-and-x-will-be-in-the-range-from-1-to-n\">For example, FLOWERS[i] = X means that the unique flower that blooms at day \u2018i\u2019 will be at position X, where i and X will be in the range from 1 to N.</h4>\n\n<h4 id=\"input-format\">Input Format:</h4>\n\n<pre><code>The first line contains an integer &#39;T&#39; which denotes the number of test cases or queries to be run.\n\nThe first line of each test case contains two space-separated integers \u2018N\u2019 and \u2018K\u2019 denoting the size of the \u2018flowers\u2019 array and the integer \u2018K\u2019.\n\nThe next line contains \u2018N\u2019 space-separated integers denoting the values of elements of the \u2018FLOWERS\u2019 array.\n</code></pre>\n\n<h4 id=\"output-format\">Output Format:</h4>\n\n<pre><code>For each test case, print a single line containing a single integer denoting the day. If there are multiple answers, choose the smallest, if there isn&#39;t such day, output -1.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints:</h4>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= N &lt;= 5000\n1 &lt;= FLOWERS[i] &lt; 10 ^ 4\n\nWhere \u2018T\u2019 is the number of test cases, \u2018N\u2019 is the size of an array, and \u2018FLOWERS[i] = X\u2019 represents that the unique flower that blooms at day \u2018i\u2019 will be at position X.\n\nTime Limit: 1 sec.\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1:</h4>\n\n<pre><code>2\n3 1\n1 3 2\n4 1\n1 2 3 4\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1:</h4>\n\n<pre><code>2\n-1\n</code></pre>\n\n<h4 id=\"explanation-for-sample-input-1\">Explanation for sample input 1:</h4>\n\n<pre><code>Test Case 1:\nFor the first test case on day 2, the first and third flowers are blooming and there is one flower that is not blooming so we return \u20182\u2019 as our answer.\n\nTest Case 2:\nFor this test case, the first two flowers are open and next to each other. So for this test case, no day exists for which our required condition satisfies so we return \u2018-1\u2019.\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2:</h4>\n\n<pre><code>1\n5 2\n1 4 2 3 5\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2:</h4>\n\n<pre><code>2\n</code></pre>\n\n<h4 id=\"explanation-of-sample-input-2\">Explanation of sample input 2:</h4>\n\n<pre><code>For this test case on day 2, the first and fourth flowers are blooming and there are 2 flowers in between them that are not blooming.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 39,
            "dislikes": "NA",
            "rephrased": {
                "body": "Ninja is designing a garden with 'N' slots. 'N' unique flowers will bloom one by one over 'N' days, each at a specific slot. Given an array 'FLOWERS' where FLOWERS[i] = X means the flower at position X blooms on day 'i+1', and an integer 'K', find the earliest day when there exist two blooming flowers with exactly 'K' non-blooming flowers between them. If no such day exists, return -1.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= N <= 5000",
                    "1 <= FLOWERS[i] <= 10 ^ 4"
                ],
                "testcases": [
                    {
                        "input": "n = 3, flowers = [1, 3, 2], k = 1",
                        "output": "2",
                        "explanation": "On day 2, flowers at positions 1 and 3 are blooming, with 1 (position 2) non-blooming flower between them."
                    },
                    {
                        "input": "n = 4, flowers = [1, 2, 3, 4], k = 1",
                        "output": "-1",
                        "explanation": "No day satisfies the condition of having two blooming flowers with 1 non-blooming flower between them."
                    },
                    {
                        "input": "n = 5, flowers = [1, 4, 2, 3, 5], k = 2",
                        "output": "2",
                        "explanation": "On day 2, flowers at positions 1 and 4 are blooming, with 2 non-blooming flowers (positions 2 and 3) between them."
                    },
                    {
                        "input": "n = 5, flowers = [5, 4, 3, 2, 1], k = 2",
                        "output": "4",
                        "explanation": "On day 4, flowers at positions 5 and 2 are blooming, with 2 non-blooming flowers (positions 4 and 3) between them. We need to iterate all the way to day 4 to find a solution"
                    },
                    {
                        "input": "n = 6, flowers = [6, 5, 4, 3, 2, 1], k = 4",
                        "output": "6",
                        "explanation": "On day 6, flowers at positions 6 and 1 are blooming, with 4 non-blooming flowers (positions 5,4,3,2) between them."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you check each and every position?</p>",
            "<p>Can you find the window of size K + 2 such that in window endpoints refer to a position where the flower has bloomed and all other points in the window refer to points where the flower has not bloomed?</p>",
            "<p>Can you build another array of days that represents which day a flower at that position will bloom?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}