{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12648,
            "title": "Ninjas's Robot",
            "titleSlug": "ninjas-s-robot_1469231",
            "content": "<h4 id=\"ninja-has-a-robot-that-can-move-in-an-infinite-number-line-the-robot-starts-at-position-0-with-speed-1-the-robot-moves-automatically-according-to-the-sequence-of-instructions-a-accelerate-and-r-reverse\">Ninja has a robot that can move in an infinite number line. The robot starts at position 0, with speed = +1.  The robot moves automatically according to the sequence of instructions \u201cA\u201d (Accelerate) and \u201cR\u201d (Reverse).</h4>\n\n<h4 id=\"when-robot-get-an-instruction-a-the-robot-does-the-following-position-speed-speed-2\">When robot get an instruction &quot;A&quot;, the robot does the following: position += speed, speed *= 2.</h4>\n\n<h4 id=\"when-the-robot-gets-an-instruction-r-the-robot-does-the-following-if-its-speed-is-positive-then-speed-1-otherwise-speed-1-the-position-of-the-robot-will-remain-the-same\">When the robot gets an instruction \u201cR\u201d, the robot does the following: if its speed is positive then speed = -1, otherwise speed = +1.  The position of the robot will remain the same.</h4>\n\n<h4 id=\"for-example-after-commands-aaara-the-robot-goes-to-positions-0-1-3-7-7-6-and-robot-speed-goes-to-1-2-4-8-1-2\">For example, after commands &quot;AAARA&quot;, the robot goes to positions 0-&gt;1-&gt;3-&gt;7-&gt;7-&gt;6, and robot speed goes to 1-&gt;2-&gt;4-&gt;8-&gt;-1-&gt;-2.</h4>\n\n<h4 id=\"you-are-given-a-positive-integer-target-and-your-task-is-to-find-and-return-the-length-of-the-shortest-sequence-of-instruction-to-reach-position-equals-target\">You are given a positive integer \u2018TARGET\u2019, and your task is to find and return the length of the shortest sequence of instruction to reach position equals \u2018TARGET\u2019.</h4>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>The position of the robot can be negative.\n</code></pre>\n\n<h4 id=\"input-format\">Input Format :</h4>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 representing the number of test cases. The &#39;T&#39; test cases follow.\n\nThe first line of each test case will contain a single integer \u2018TARGET\u2019.\n</code></pre>\n\n<h4 id=\"output-format\">Output Format :</h4>\n\n<pre><code>For each test case, print an integer representing the length of the shortest sequence of instruction to reach position equals \u2018TARGET\u2019.\n\nOutput for every test case will be printed in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>You don\u2019t need to print anything, It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints :</h4>\n\n<pre><code>1 &lt;= &#39;T&#39; &lt;= 50\n1 &lt;= \u2018TARGET\u2019 &lt;= 10000\n\nTime limit: 1 sec\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1 :</h4>\n\n<pre><code>2\n1\n2\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1 :</h4>\n\n<pre><code>1\n4\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of sample input 1 :</h5>\n\n<pre><code>In the first test case, The shortest sequence of instruction is \u2018A\u2019.\n\nIn the second test case,  The shortest sequence of instruction is \u2018AARA\u2019, and the position changes as 0-&gt;1-&gt;3-&gt;3-&gt;2. \n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2 :</h4>\n\n<pre><code>2\n6\n7\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2 :</h4>\n\n<pre><code>5\n3\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 1,
            "dislikes": "NA",
            "rephrased": {
                "body": "A robot starts at position 0 with speed +1 on an infinite number line. It follows instructions 'A' (Accelerate) and 'R' (Reverse). 'A' makes the robot move `speed` units and doubles the speed (`position += speed`, `speed *= 2`). 'R' reverses the speed's sign (`speed = -1 if speed > 0 else speed = 1`).  Given a target position, find the length of the shortest instruction sequence to reach it.",
                "constraints": [
                    "1 <= 'T' <= 50",
                    "1 <= \u2018TARGET\u2019 <= 10000",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "target = 1",
                        "output": "1",
                        "explanation": "The shortest sequence is 'A'."
                    },
                    {
                        "input": "target = 2",
                        "output": "4",
                        "explanation": "The shortest sequence is 'AARA', resulting in positions 0->1->3->3->2."
                    },
                    {
                        "input": "target = 6",
                        "output": "5",
                        "explanation": ""
                    },
                    {
                        "input": "target = 7",
                        "output": "3",
                        "explanation": ""
                    },
                    {
                        "input": "target = 5",
                        "output": "7",
                        "explanation": "One possible sequence is 'AARAAAR', resulting in positions 0->1->3->3->2->6->6->5."
                    },
                    {
                        "input": "target = 3",
                        "output": "2",
                        "explanation": "The shortest sequence is AA"
                    },
                    {
                        "input": "target = 4",
                        "output": "5",
                        "explanation": "The shortest sequence is AARA or AAAR."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Track all the possible positions of the robot after each instruction.</p>",
            "<p>Find recurrence relation to solve this problem, and optimize by the memoization.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}