{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12288,
            "title": "NINJAS TRUCK",
            "titleSlug": "ninjas-truck_1459120",
            "content": "<h4 id=\"ninja-is-assigned-a-task-to-deliver-some-boxes-which-contain-different-units-having-different-weights-with-the-help-of-his-truck-he-will-earn-money-on-the-basis-of-the-number-of-units-of-boxes-he-will-deliver-by-his-truck-ninja-truck-has-some-capacity-on-the-number-of-boxes-he-can-put-on-his-truck\">Ninja is assigned a task to deliver some boxes which contain different units having different weights. With the help of his truck, he will earn money on the basis of the number of units of boxes he will deliver by his truck. Ninja truck has some capacity on the number of boxes he can put on his truck.</h4>\n\n<h4 id=\"so-your-task-is-to-find-a-way-so-that-ninja-will-choose-boxes-in-a-way-that-units-will-be-maximum-and-he-would-be-able-to-get-more-money-you-will-be-provided-with-an-array-of-box-where-box-i-countofboxes-unitsperbox\">So your task is to find a way so that ninja will choose boxes in a way that units will be maximum and he would be able to get more money you will be provided with an array of \u2018BOX\u2019, where BOX[i] = [countofBoxes, unitsperBox].</h4>\n\n<h4 id=\"countofboxes-represents-the-number-of-boxes-of-the-same-type-i-e-containing-the-units-of-the-same-value\">CountofBoxes represents the number of boxes of the same type i.e containing the units of the same value.</h4>\n\n<h4 id=\"unitsperbox-represents-the-number-of-units-in-the-box-or-we-simply-say-that-unit-value\">UnitsperBox represents the number of units in the box or we simply say that unit value.</h4>\n\n<h4 id=\"and-an-integer-k-denoting-the-limit-of-boxes-on-the-truck\">And an integer \u2018K\u2019 denoting the limit of boxes on the truck.</h4>\n\n<h4 id=\"input-format\">Input Format :</h4>\n\n<pre><code>The first line of input contains a \u2018T\u2019 number of test cases.\nThe first line of each test case contains an integer \u2018N\u2019 and \u2018K\u2019 denoting the number of rows in array \u2018BOX\u2019 and the limit on boxes on the truck. Then, \u2018N\u2019 lines follow.\nEach line contains two space-separated integers denoting the row values i.e count of boxes and units per box.\n</code></pre>\n\n<h4 id=\"output-format\">Output Format :</h4>\n\n<pre><code>For each test case, print a single line containing the maximum number of units that Ninja can deliver.\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints :</h4>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= N &lt;= 1000\n1 &lt;= BOX[i] &lt;= 1000\n1 &lt;= K &lt;= 10 ^ 6\n\nWhere \u2018T\u2019 is the number of test cases, \u2018N\u2019 is the number of rows in 2-D array \u2018BOX\u2019, and \u2018K\u2019 is the limit on boxes on the truck.\n\nTime Limit: 1 sec\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1 :</h4>\n\n<pre><code>2\n3 3\n1 1\n2 5\n1 3\n2 1\n2 5\n3 4\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1 :</h4>\n\n<pre><code>13\n5\n</code></pre>\n\n<h4 id=\"explanation-for-sample-input-1\">Explanation for sample input 1 :</h4>\n\n<pre><code>Test Case 1 :\nAs the limit on boxes is \u20183\u2019 so we choose \u20182\u2019 boxes each of \u20185\u2019 units and \u20181\u2019 boxes of \u20183\u2019 units making our maximum number of units in the required number of boxes that is \u201813\u2019.\n\nTest Case 2 :\nAs the limit on boxes is \u20181\u2019 so we can choose only one box so we choose \u20181\u2019 box containing \u20185\u2019 units making our maximum number of units in the required number of boxes that is \u20185\u2019.\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2 :</h4>\n\n<pre><code>1\n4 4\n3 5\n2 10\n1 15\n2 4\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2 :</h4>\n\n<pre><code>40\n</code></pre>\n\n<h4 id=\"explanation-for-sample-input-2\">Explanation for sample input 2 :</h4>\n\n<pre><code>Test Case 1 :\nAs the limit on boxes is \u20184\u2019 so we choose \u20181\u2019 box of \u201815\u2019 units and \u20182\u2019 box of \u201810\u2019 units each and \u20181\u2019 box of \u20185\u2019 unit making our maximum number of units in the required number of boxes that is \u201840\u2019.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 5,
            "dislikes": "NA",
            "rephrased": {
                "body": "A delivery driver, Ninja, needs to maximize the units he transports using his truck. Given a list of box types, where each box type has a count and a unit value per box, and a limit on the total number of boxes the truck can carry, determine the maximum number of units Ninja can deliver.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= N <= 1000",
                    "1 <= BOX[i][0], BOX[i][1] <= 1000",
                    "1 <= K <= 10 ^ 6"
                ],
                "testcases": [
                    {
                        "input": "box = [[1, 1], [2, 5], [1, 3]], k = 3",
                        "output": "13",
                        "explanation": "We choose 2 boxes each of 5 units and 1 box of 3 units, resulting in a total of 2*5 + 1*3 = 13 units."
                    },
                    {
                        "input": "box = [[2, 5]], k = 1",
                        "output": "5",
                        "explanation": "We can choose only one box, so we pick the box with 5 units, resulting in 5 units."
                    },
                    {
                        "input": "box = [[3, 5], [2, 10], [1, 15], [2, 4]], k = 4",
                        "output": "40",
                        "explanation": "We choose 1 box of 15 units, 2 boxes of 10 units, and 1 box of 5 units, resulting in a total of 1*15 + 2*10 + 1*5 = 40 units."
                    },
                    {
                        "input": "box = [[1, 10], [2, 8], [3, 5], [4, 2]], k = 6",
                        "output": "44",
                        "explanation": "We choose 1 box of 10 units, 2 boxes of 8 units and 3 boxes of 5 unit, resulting in a total of 1*10 + 2*8 + 3*5 = 41 units."
                    },
                    {
                        "input": "box = [[5, 10]], k = 10",
                        "output": "50",
                        "explanation": "We can take all 5 boxes, resulting in a total of 5 * 10 = 50 units."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you think of using a 1-D array for storing each box weight?</p>",
            "<p>Can you think of a method for optimizing space and time complexity?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}