{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8833,
            "title": "Node Level",
            "titleSlug": "node-level_920383",
            "content": "<h4 id=\"ninja-has-been-given-a-binary-tree-having-n-nodes-and-an-integer-m-he-needs-to-find-the-level-of-node-m-he-finds-it-difficult-to-solve-and-asks-for-your-help\">Ninja has been given a binary tree having N nodes and an integer M, he needs to find the level of node M. He finds it difficult to solve and asks for your help.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>Consider root to be at level 1. It is guaranteed that all the nodes in the binary tree have distinct values.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains an integer &#39;T&#39; which denotes the number of test cases or queries to be run.\n\nThe first line of each test case contains elements of the tree in the level order form. The line consists of values of nodes separated by a single space. In case a node is null, we take -1 in its place.\n\nThe second line of each test case contains one integer \u2018M\u2019 denoting the node whose level has to be calculated.\n\nFor example, the input for the tree depicted in the below image. \n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/image1-11015.png\" alt=\"1\"></p>\n\n<pre><code>1\n3 8\n5 2 7 -1\n-1 -1 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"explanation\">Explanation :</h5>\n\n<pre><code>Level 1 :\nThe root node of the tree is 1\n\nLevel 2 :\nLeft child of 1 = 3\nRight child of 1 = 8\n\nLevel 3 :\nLeft child of 3 = 5\nRight child of 3 = 2\nLeft child of 8 =7\nRight child of 8 =  null (-1)\n\n\nLevel 4 :\nLeft child of 5 = null (-1)\nRight child of 5 = null (-1)\nLeft child of 2 = null (-1)\nRight child of 2 = null (-1)\nLeft child of 7 = null (-1)\nRight child of 7 = null (-1)\n\nThe first not-null node(of the previous level) is treated as the parent of the first two nodes of the current level. The second not-null node (of the previous level) is treated as the parent node for the next two nodes of the current level and so on.\nThe input ends when all nodes at the last level are null(-1).\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>The above format was just to provide clarity on how the input is formed for a given tree. \n\nThe sequence will be put together in a single line separated by a single space. Hence, for the above-depicted tree, the input will be given as:\n1 3 8 5 2 7 -1 -1 -1 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, return a single line containing the level specified by the node. If the node is not present, return 0.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 5\n0 &lt;= N &lt;= 3000\n0 &lt;= node data &lt;= 10^9  \n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n1 2 3 -1 -1 -1  6 -1 -1\n6\n1 2 -1 -1 -1\n1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>3\n1\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1:</h5>\n\n<pre><code> For the first test case, the given binary tree is shown below.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/image2-11014.png\" alt=\"1\">\n    Here, we see that node 6 is at a distance of 2 units from the root(node 1). Hence, our level will be 3.</p>\n\n<pre><code>For the second test case, the given binary tree is shown below.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/image3-11013.png\" alt=\"1\"></p>\n\n<pre><code>As we are looking for node 1 which is itself the root node, hence our level is 1.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\n1 3 8 5 -1 7 -1 -1 -1 -1 -1\n10\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>0\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-2\">Explanation of Sample Input 2:</h5>\n\n<pre><code>For the first test case, the given binary tree is shown below.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/image4-11012.png\" alt=\"1\"></p>\n\n<pre><code>As node 10 is not present in the tree, so we return 0.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 25,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a binary tree with N nodes and an integer M, find the level of node M in the tree. The root is considered to be at level 1. All node values are guaranteed to be distinct.",
                "constraints": [
                    "1 <= T <= 5",
                    "0 <= N <= 3000",
                    "0 <= node data <= 10^9",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "1 2 3 -1 -1 -1 6 -1 -1\n6",
                        "output": "3",
                        "explanation": "The tree is constructed as follows: root = 1, left(1) = 2, right(1) = 3, right(3) = 6. Node 6 is at level 3."
                    },
                    {
                        "input": "1 2 -1 -1 -1\n1",
                        "output": "1",
                        "explanation": "The tree is constructed as follows: root = 1, left(1) = 2. Node 1 is the root node and is at level 1."
                    },
                    {
                        "input": "1 3 8 5 -1 7 -1 -1 -1 -1 -1\n10",
                        "output": "0",
                        "explanation": "The tree is constructed as follows: root = 1, left(1) = 3, right(1) = 8, left(3) = 5, right(8) = 7. Node 10 is not present in the tree, so the level is 0."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>What is the distance between the root and node containing the specified value?</p>",
            "<p>Travel each level and find the node in that level.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Binary Trees",
                "slug": "binary-trees"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}