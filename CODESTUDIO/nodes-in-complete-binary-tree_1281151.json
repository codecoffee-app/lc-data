{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10935,
            "title": "Nodes in Complete Binary Tree",
            "titleSlug": "nodes-in-complete-binary-tree_1281151",
            "content": "<h4 id=\"you-are-given-the-root-of-a-complete-binary-tree-you-need-to-calculate-the-number-of-nodes-in-the-given-complete-binary-tree\">You are given the root of a complete binary tree,  you need to calculate the number of nodes in the given complete binary tree.</h4>\n\n<h4 id=\"a-complete-binary-tree-is-a-tree-in-which-all-the-levels-are-completely-filled-except-the-last-level-nodes-in-the-last-level-are-as-left-as-possible\">A complete binary tree is a tree in which all the levels are completely filled except the last level. Nodes in the last level are as left as possible.</h4>\n\n<h5 id=\"for-example\">For Example:</h5>\n\n<p><img src=\"https://files.codingninjas.in/graph-3-8532.png\" alt=\"\"></p>\n\n<pre><code>In the above complete binary tree, all the levels are filled except for the last. In the last level, all the nodes in the last level are as far left as possible.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains an Integer &#39;T&#39; which denotes the number of test cases or queries to be run. Then the test cases follow.\n\nThe first line of each test case contains elements of the tree in the level order form. The line consists of values of nodes separated by a single space. In case a node is null, we take -1 in its place.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/graph-input-format-2-8282.png\" alt=\"\"></p>\n\n<pre><code>For example, the input for the tree depicted in the above image would be:\n\n1\n2 3\n4 -1 5 6\n-1 7 -1 -1 -1 -1\n-1 -1\n</code></pre>\n\n<h4 id=\"explanation\">Explanation:</h4>\n\n<pre><code>Level 1 :\nThe root node of the tree is 1.\n\nLevel 2 :\nLeft child of 1 = 2\nRight child of 1 = 3\n\nLevel 3 :\nLeft child of 2 = 4\nRight child of 2 = null (-1)\nLeft child of 3 = 5\nRight child of 3 = 6\n\nLevel 4 :\nLeft child of 4 = null (-1)\nRight child of 4 = 7\nLeft child of 5 = null (-1)\nRight child of 5 = null (-1)\nLeft child of 6 = null (-1)\nRight child of 6 = null (-1)\n\nLevel 5 :\nLeft child of 7 = null (-1)\nRight child of 7 = null (-1)\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>The above format was just to provide clarity on how the input is formed for a given tree. \n\nThe sequence will be put together in a single line separated by a single space. Hence, for the above-depicted tree, the input will be given as:\n\n1 2 3 4 -1 5 6 -1 7 -1 -1 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>Return the number of nodes of the given complete \nbinary tree.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints:</h4>\n\n<pre><code>1 &lt;= T &lt;= 10\n0 &lt;= Number of nodes in tree &lt;= 10^5\n1 &lt;= Nodes Value &lt;= 5*10^5\n\nTime Limit: 1 second\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1\n1 2 3 4 5 7 6 -1 -1 -1 -1 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>7\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1:</h5>\n\n<pre><code>For the above test case, the given tree is:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/graph-2-8531.png\" alt=\"\"></p>\n\n<pre><code>Level 1 :\nThe root node of the tree is 1\n\nLevel 2 :\nLeft child of 1 = 2\nRight child of 1 = 3\n\nLevel 3 :\nLeft child of 2 = 4\nRight child of 2 = 5\nLeft child of 3 = 7\nRight child of 3 = 6\n\nLevel 4 :\nLeft child of 4 = null (-1)\nRight child of 4 = null(-1)\nLeft child of 5 = null (-1)\nRight child of 5 = null (-1)\nLeft child of 7 = null (-1)\nRight child of 7 = null (-1).\nLeft child of 6 = null (-1)\nRight child of 6 = null (-1)\n\nHence the total number of nodes in the given tree is 7.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\n5 6 7 10 -1 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>4\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 22,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given the root of a complete binary tree, determine the total number of nodes present in the tree. A complete binary tree is defined as a binary tree in which every level, except possibly the last, is completely filled, and all nodes in the last level are as far left as possible.",
                "constraints": [
                    "1 <= T <= 10",
                    "0 <= Number of nodes in tree <= 10^5",
                    "1 <= Node Value <= 5*10^5"
                ],
                "testcases": [
                    {
                        "input": "root=[1, 2, 3, 4, 5, 7, 6, -1, -1, -1, -1, -1, -1, -1, -1]",
                        "output": "7",
                        "explanation": "The provided complete binary tree has 7 nodes with values: 1, 2, 3, 4, 5, 7, and 6."
                    },
                    {
                        "input": "root=[5, 6, 7, 10, -1, -1, -1, -1, -1]",
                        "output": "4",
                        "explanation": "The provided complete binary tree has 4 nodes with values: 5, 6, 7, and 10."
                    },
                    {
                        "input": "root=[1]",
                        "output": "1",
                        "explanation": "The binary tree consists of only the root node with value 1."
                    },
                    {
                        "input": "root=[]",
                        "output": "0",
                        "explanation": "The binary tree is empty and contains no nodes."
                    },
                    {
                        "input": "root=[1,2]",
                        "output": "2",
                        "explanation": "The tree has root = 1 and left child = 2. Hence, the node count is 2."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Traverse all the nodes of the tree.</p>",
            "<p>Use divide and conquer to divide the tree into two parts.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Trees",
                "slug": "trees"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Binary Trees",
                "slug": "binary-trees"
            },
            {
                "name": "Depth-first Search",
                "slug": "depth-first-search"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}