{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8957,
            "title": "Nodes Vertically Below Root Node",
            "titleSlug": "nodes-vertically-below-root-node_920756",
            "content": "<h4 id=\"king-greg-s-kingdom-is-divided-like-a-binary-tree-such-that-the-capital-of-the-empire-was-in-the-north-and-all-the-remaining-cities-are-below-the-capital-city-one-day-king-greg-wanted-to-know-all-the-cities-which-are-in-the-south-vertically-below-of-the-capital-city-but-greg-is-too-busy-managing-his-kingdom-so-you-have-to-help-greg-find-all-the-cities-vertically-below-the-capital-city\">King Greg\u2019s kingdom is divided like a binary tree such that the capital of the empire was in the North, and all the remaining cities are below the capital city. One day King Greg wanted to know all the cities which are in the South(Vertically below) of the capital city, But Greg is too busy managing his kingdom, so you have to help Greg find all the cities vertically below the capital city.</h4>\n\n<h4 id=\"if-there-is-no-node-vertically-below-the-root-node-return-1\">If there is no node vertically below the root node, return -1.</h4>\n\n<h5 id=\"for-example\">For Example :</h5>\n\n<p><img src=\"https://files.codingninjas.in/nodes_vertically_below_root_node_example-11548.png\"/> </p>\n\n<pre><code>In this tree, cities 5 and 6 are directly below the capital city; hence, the answer is 5, 6.\n</code></pre>\n\n<h5 id=\"input-format\">Input format :</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 denoting the number of test cases to be run. Then the test cases follow.\n\nThe first line of each test case contains the elements of the binary tree in the level order form separated by a single space.\n\nIf any node does not have a left or right child, take -1 in its place. Refer to the example below.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/nodes_vertically_below_root_node_input_format-11549.png\"/> </p>\n\n<pre><code>1\n2 3\n-1 4 -1 -1\n5 -1\n-1 -1\nExplanation :\nLevel 1 :\nThe root node of the tree is 1\n\nLevel 2 :\nLeft child of 1 = 2\nRight child of 1 = 3\n\nLevel 3 :\nLeft child of 2 = null (-1)\nRight child of 2 = 4\nLeft child of 3 = null (-1)\nRight child of 3 = null (-1)\n\nLevel 4 :\nLeft child of 4 = 5\nRight child of 4 = null (-1)\n\nLevel 5 :\nLeft child of 5 = null (-1)\nRight child of 5 = null (-1)\n\nThe first not-null node (of the previous level) is treated as the parent of the first two nodes of the current level. The second not-null node (of the previous level) is treated as the parent node for the next two nodes of the current level and so on.\n\nThe input ends when all nodes at the last level are null (-1).\n\nNote: The above format was just to provide clarity on how the input is formed for a given tree. \nThe sequence will be put together in a single line separated by a single space. Hence, for the above-depicted tree, the input will be given as:\n\n1 2 3 -1 4 -1 -1 5 -1 -1 -1\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case, return a List containing all the cities vertically below the root node.\n\nOutput for each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code> You are not required to print anything; it has already been taken care of. Just implement the function and return the answer.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= N &lt;= 3000\n0 &lt;= NodeVal &lt;= 10^9\n\nTime Limit: 1sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n1 2 3 4 5 -1 -1 -1 -1 6 7 -1 -1 -1 -1\n11 5 8 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>5\n-1\n</code></pre>\n\n<h5 id=\"explanation-for-sample-output-1\">Explanation For Sample Output 1 :</h5>\n\n<p><img src=\"https://files.codingninjas.in/nodes_vertically_below_root_node_st1-11550.png\"/> </p>\n\n<pre><code>In the first test case, Node 5 is the only node vertically below the root node; hence the answer is 5, 6.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/nodes_vertically_below_root_node_st2-11551.png\"/> </p>\n\n<pre><code>In the second test case, No node is directly below the root node; hence we return -1.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n5 6 10 2 3 5 9  -1 -1 -1 -1 -1 -1 -1 -1\n1 2 3 4 5 6 7 -1 -1 -1 -1 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>3 5\n5 6\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 8,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a binary tree rooted at the 'North', representing King Greg's kingdom, identify all the cities located directly 'South' (vertically below) of the capital city (root node). Return a list of the data values of these cities. If no such cities exist, return a list containing only -1.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= N <= 3000",
                    "0 <= NodeVal <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "root=[1, 2, 3, 4, 5, -1, -1, -1, -1, 6, 7, -1, -1, -1, -1]",
                        "output": "[5]",
                        "explanation": "The binary tree is represented as follows:\n\n      1\n     / \\\n    2   3\n   / \\\n  4   5\n / \\\n6   7\nNode 5 is the only node vertically below the root node."
                    },
                    {
                        "input": "root=[11, 5, 8, -1, -1, -1, -1]",
                        "output": "[-1]",
                        "explanation": "The binary tree is represented as follows:\n\n  11\n /  \\\n5    8\nThere are no nodes directly below the root node. Therefore, the output is -1."
                    },
                    {
                        "input": "root=[5, 6, 10, 2, 3, 5, 9, -1, -1, -1, -1, -1, -1, -1, -1]",
                        "output": "[3, 5]",
                        "explanation": "The binary tree is represented as follows:\n\n      5\n     / \\\n    6   10\n   / \\ / \\\n  2  3 5  9\nNodes 3 and 5 are vertically below the root node."
                    },
                    {
                        "input": "root=[1, 2, 3, 4, 5, 6, 7, -1, -1, -1, -1, -1, -1, -1, -1]",
                        "output": "[5, 6]",
                        "explanation": "The binary tree is represented as follows:\n\n       1\n      / \\\n     2   3\n    / \\ / \\\n   4   5 6  7\nNodes 5 and 6 are vertically below the root node."
                    },
                    {
                        "input": "root=[1, -1, -1]",
                        "output": "[-1]",
                        "explanation": "The binary tree consists of only the root node 1. There are no nodes vertically below the root, so the output is [-1]."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Maybe calculating the distance, i.e., how far a node is from the root node, might work?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Binary Trees",
                "slug": "binary-trees"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Trees",
                "slug": "trees"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}