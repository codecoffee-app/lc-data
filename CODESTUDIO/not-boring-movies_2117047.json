{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 14345,
            "title": " Not Boring Movies",
            "titleSlug": "not-boring-movies_2117047",
            "content": "<h4 id=\"table-cinema\">Table: <b> Cinema</b></h4>\n\n<p><br></p>\n\n<table style=\"border:2px solid black; border-collapse: collapse; width:35.5%\">\n<thead>\n<tr>\n<th style=\"border:1px solid black;\">&nbsp;Column Name &nbsp;</th>\n<th style=\"border:1px solid black;\">&nbsp;Data Type &nbsp;</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"border:1px solid black;\"> &nbsp;id </td>\n<td style=\"border:1px solid black;\">&nbsp;INT</td>\n</tr>\n<tr>\n<td style=\"border:1px solid black;\">&nbsp;movie  </td>\n<td style=\"border:1px solid black;\">&nbsp;VARCHAR</td>\n</tr>\n<tr>\n<td style=\"border:1px solid black;\">&nbsp;description   </td>\n<td style=\"border:1px solid black;\">&nbsp;VARCHAR</td>\n</tr>\n<tr>\n<td style=\"border:1px solid black;\">&nbsp;rating    </td>\n<td style=\"border:1px solid black;\">&nbsp;FLOAT</td>\n</tr>\n</tbody>\n</table>\n\n<p><br/>\n<br>\n<li>id is the primary key for this table.\n<li>Each row contains information about the name of a movie, its genre, and its rating.\n<li>rating is a 2 decimal places float in the range [0, 10]</p>\n\n<p><br></p>\n\n<h4 id=\"write-an-sql-query-to-report-the-movies-with-an-odd-numbered-id-and-a-description-that-is-not-boring\">Write an SQL query to report the movies with an odd-numbered ID and a description that is not &quot;boring&quot;.</h4>\n\n<p><br></p>\n\n<h4 id=\"return-the-result-table-in-descending-order-by-rating\">Return the result table in descending order by rating.</h4>\n\n<p><br></p>\n\n<h4 id=\"the-query-result-format-is-in-the-following-example\">The query result format is in the following example:</h4>\n\n<p><br></p>\n\n<pre><code>Cinema table:\n+----+------------+-------------+--------+\n| id | movie      | description | rating |\n+----+------------+-------------+--------+\n| 1  | War        | great 3D    | 8.9    |\n| 2  | Science    | fiction     | 8.5    |\n| 3  | irish      | boring      | 6.2    |\n| 4  | Ice song   | Fantacy     | 8.6    |\n| 5  | House card | Interesting | 9.1    |\n+----+------------+-------------+--------+\n</code></pre>\n\n<p><br></p>\n\n<h4 id=\"result-table\">Result table:</h4>\n\n<pre><code>+----+------------+-------------+--------+\n| id | movie      | description | rating |\n+----+------------+-------------+--------+\n| 5  | House card | Interesting | 9.1    |\n| 1  | War        | great 3D    | 8.9    |\n+----+------------+-------------+--------+\n</code></pre>\n\n<p><br></p>\n\n<h4 id=\"we-have-three-movies-with-odd-numbered-id-1-3-and-5-the-movie-with-id-3-is-boring-so-we-dont-include-it-in-the-answer\">We have three movies with odd-numbered ID: 1, 3, and 5. The movie with ID = 3 is boring so we don&#39;t include it in the answer.</h4>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 4,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a table `Cinema` with columns `id` (INT, primary key), `movie` (VARCHAR), `description` (VARCHAR), and `rating` (FLOAT, 2 decimal places in the range [0, 10]), write an SQL query to report the movies with an odd-numbered `id` and a `description` that is not 'boring'. Return the result table in descending order by `rating`.",
                "constraints": [
                    "id is the primary key for the Cinema table.",
                    "rating is a 2 decimal places float in the range [0, 10]"
                ],
                "testcases": [
                    {
                        "input": "Cinema table:\n+----+------------+-------------+--------+\n| id | movie      | description | rating |\n+----+------------+-------------+--------+\n| 1  | War        | great 3D    | 8.9    |\n| 2  | Science    | fiction     | 8.5    |\n| 3  | irish      | boring      | 6.2    |\n| 4  | Ice song   | Fantacy     | 8.6    |\n| 5  | House card | Interesting | 9.1    |\n+----+------------+-------------+--------+",
                        "output": "+----+------------+-------------+--------+\n| id | movie      | description | rating |\n+----+------------+-------------+--------+\n| 5  | House card | Interesting | 9.1    |\n| 1  | War        | great 3D    | 8.9    |\n+----+------------+-------------+--------+",
                        "explanation": "The movies with odd-numbered IDs are 1, 3, and 5. The movie with ID 3 has a description 'boring', so it is excluded. The remaining movies (ID 1 and 5) are ordered by rating in descending order."
                    },
                    {
                        "input": null,
                        "output": null,
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "SQL",
                "slug": "sql"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}