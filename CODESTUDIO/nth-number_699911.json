{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 7570,
            "title": "Nth Number",
            "titleSlug": "nth-number_699911",
            "content": "<h4 id=\"in-a-series-of-numbers-where-each-number-is-such-that-the-sum-of-its-digits-equals-10-given-an-integer-value-n-your-task-is-to-find-the-n-th-positive-integer-whose-sum-of-digits-equals-to-10\">In a series of numbers where each number is such that the sum of its digits equals 10. Given an integer value &#39;N&#39;, your task is to find the N-th positive integer whose sum of digits equals to 10.</h4>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains an Integer &#39;T&#39; which denotes the number of test cases/queries to be run. \nThen the test cases follow. \n\nThe first line of input for each test case/query contains an integer N, the Nth number to find.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print the N-th positive integer whose sum of digits equals 10.\n\nOutput for every test case will be printed in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note</h4>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= N &lt;= 10^7    \n\nTime Limit: 1sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n1\n4\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>19\n46   \n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1:</h5>\n\n<pre><code>Since N=1 here, therefore, the first number having a sum of digits equal to 10 is 19. Therefore, the output here is 19.\n\nSince N=4 here, therefore, The first four numbers having a sum of digits equal to 10 are 19, 28, 37, and 46. Therefore, the output here becomes 46.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n5\n9\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>55\n91\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 15,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an integer 'N', find the N-th positive integer whose digits sum to 10.  You will be given a series of test cases.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= N <= 10^7",
                    "Time Limit: 1sec"
                ],
                "testcases": [
                    {
                        "input": "1\n1\n4",
                        "output": "19\n46",
                        "explanation": "The first number whose digits sum to 10 is 19. The first four numbers are 19, 28, 37, and 46."
                    },
                    {
                        "input": "2\n5\n9",
                        "output": "55\n91",
                        "explanation": "The first five numbers whose digits sum to 10 are 19, 28, 37, 46, and 55. The first nine numbers are 19, 28, 37, 46, 55, 64, 73, 82, and 91."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Iterate over all numbers until we find the n-th number with a digit sum equals to 10.</p>",
            "<p>Use Binary Search and find the Number of possible numbers with digit sum equals to 10 and less than a particular number(mid-value of the binary search).&nbsp;</p>",
            "<p>Try to use extra space to optimize the previous approach.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}