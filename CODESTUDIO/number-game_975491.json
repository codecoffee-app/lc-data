{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9136,
            "title": "Number Game",
            "titleSlug": "number-game_975491",
            "content": "<h4 id=\"alice-and-bob-have-invented-a-new-game-to-play-the-rules-are-as-follows\">Alice and Bob have invented a new game to play. The rules are as follows -</h4>\n\n<h4 id=\"first-they-get-a-set-of-n-distinct-integers-and-then-they-take-turns-to-make-the-following-moves-during-each-move-either-alice-or-bob-the-player-whose-turn-is-the-current-can-choose-two-distinct-integers-x-and-y-from-the-set-such-that-the-set-doesnt-contain-their-absolute-difference-x-y-then-this-player-adds-integer-x-y-to-the-set-so-the-size-of-the-set-increases-by-one\">First, they get a set of \u2018N\u2019 distinct integers. And then they take turns to make the following moves. During each move, either Alice or Bob (the player whose turn is the current) can choose two distinct integers \u2018X\u2019 and \u2018Y\u2019 from the set, such that the set doesn&#39;t contain their absolute difference |X -\u2009Y|. Then this player adds integer |X\u2009-\u2009Y| to the set (so, the size of the set increases by one).</h4>\n\n<h4 id=\"if-the-current-player-has-no-valid-move-he-or-she-loses-the-game-the-question-is-who-will-finally-win-the-game-if-both-players-play-optimally-remember-that-alice-always-moves-first\">If the current player has no valid move, he (or she) loses the game. The question is who will finally win the game if both players play optimally. Remember that Alice always moves first.</h4>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains a single integer T representing the number of test cases. Then test cases follow:\n\nThe first line contains an integer \u2018N\u2019 representing the size of the array.\nThe second line contains N space-separated distinct integers denoting the elements of the array.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print the name of the winner i.e. &quot;Alice&quot; or &quot;Bob&quot; (without quotes).\n\nPrint the output of each test case in a new line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don\u2019t need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n2 &lt;= N &lt;= 10^5\n1 &lt;= array[i] &lt;= 10^9\n\nTime Limit : 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n2\n2 3\n2\n5 3\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>Alice\nAlice\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1</h5>\n\n<pre><code>For the first test case, we have, initial set as { 2, 3}. Alice moves first, and the only move she can do is to choose 2 and 3, then to add 1 to the set. The new set is { 1, 2, 3 }. Next Bob moves, there is no valid move anymore, so the winner is Alice.\n\nFor the second test case, we have, initial set as { 3, 5}. Alice moves first, and the only move she can do is to choose 5 and 3, then to add 2 to the set. So, the new set is { 2, 3, 5 }. Next Bob moves, he cannot choose 2 and 5 as | 2 - 5 | = 3 is already in the set. He chooses 2 and 3 and adds 1 to the set. The new set is { 1, 2, 3, 5 }. Now, Alice can choose 1 and 5 and add 4 to the set. The new set is { 1, 2, 3, 4, 5 }. Next Bob moves, there is no valid move anymore, so the winner is Alice.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>3\n2\n2 3\n2\n5 3\n3\n5 6 7\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>Alice\nAlice\nBob\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 7,
            "dislikes": "NA",
            "rephrased": {
                "body": "Alice and Bob are playing a game with a set of N distinct integers.  Players take turns choosing two distinct integers X and Y from the set. If the absolute difference |X - Y| is not already in the set, the player adds it to the set. The game ends when a player cannot make a valid move. Alice always goes first.  Determine who wins the game if both players play optimally.",
                "constraints": [
                    "1 <= T <= 10",
                    "2 <= N <= 10^5",
                    "1 <= array[i] <= 10^9",
                    "Time Limit : 1 sec"
                ],
                "testcases": [
                    {
                        "input": "2\n2\n2 3\n2\n5 3",
                        "output": "Alice\nAlice",
                        "explanation": "Test case 1: Initial set {2, 3}. Alice adds |3-2| = 1 to get {1, 2, 3}. Bob has no valid move. Alice wins.\nTest case 2: Initial set {5, 3}. Alice adds |5-3| = 2 to get {2, 3, 5}. Bob adds |3-2| = 1 to get {1, 2, 3, 5}. Alice adds |5-1| = 4 to get {1, 2, 3, 4, 5}. Bob has no valid move. Alice wins."
                    },
                    {
                        "input": "3\n2\n2 3\n2\n5 3\n3\n5 6 7",
                        "output": "Alice\nAlice\nBob",
                        "explanation": "Test case 1: Initial set {2, 3}. Alice adds |3-2| = 1 to get {1, 2, 3}. Bob has no valid move. Alice wins.\nTest case 2: Initial set {5, 3}. Alice adds |5-3| = 2 to get {2, 3, 5}. Bob adds |3-2| = 1 to get {1, 2, 3, 5}. Alice adds |5-1| = 4 to get {1, 2, 3, 4, 5}. Bob has no valid move. Alice wins.\nTest case 3: With initial set {5,6,7}, Alice adds |7-6|=1 to get {1,5,6,7}. Bob adds |6-5|=1 which exists. He adds |7-5|=2 to get {1,2,5,6,7}. Alice adds |5-1|=4 to get {1,2,4,5,6,7}. Bob adds |6-2|=4 which exist. He adds |7-2|=5 which exist. He can adds |4-1| =3 to get {1,2,3,4,5,6,7}. Alice has no valid move left as all the possible differnce are already there. Thus, Bob wins."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Think about the fact that the maximum number in the set will remain the same.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Number Theory",
                "slug": "number-theory"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}