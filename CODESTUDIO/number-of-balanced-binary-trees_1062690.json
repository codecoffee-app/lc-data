{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9588,
            "title": "Number of balanced binary trees",
            "titleSlug": "number-of-balanced-binary-trees_1062690",
            "content": "<h4 id=\"you-are-given-an-integer-n-you-are-supposed-to-find-the-number-of-balanced-binary-trees-with-height-n-since-the-answer-can-be-very-large-return-the-answer-modulo-10-9-7\">You are given an integer \u2018N\u2019, you are supposed to find the number of balanced binary trees with height \u2018N\u2019. Since the answer can be very large, return the answer modulo 10^9+7.</h4>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>A binary tree is considered balanced if the difference between the left subtree\u2019s height and the right subtree\u2019s height is less than or equal to 1, for all non-leaf nodes.\n</code></pre>\n\n<h4 id=\"example\">Example:</h4>\n\n<pre><code>Consider N=2, there are three different binary trees.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/treesofheight2-6897.png\" alt=\"Example\"></p>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 denoting the number of test cases. The test cases are as follows.\n\nThe first line of each test case contains a single integer \u2018N\u2019 denoting the height of the balanced binary tree.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print the number of balanced binary trees with height \u2018N\u2019 modulo 10^9+7.\n\nPrint the output of each test case on a new line. \n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don\u2019t need to print anything; It has already been taken care of.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 50\n1 &lt;= N &lt;= 10 ^ 4\n\nWhere \u2018T\u2019 denotes the number of test cases, \u2018N\u2019 denotes the height of the balanced binary tree.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n2\n3\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>3\n15\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1 :</h5>\n\n<pre><code>In the first test case, the total number of binary trees with height 2 is 3.\n\nIn the second test case, the total number of binary trees with height 3 is 15.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>1\n4\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>315\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-2\">Explanation of Sample Input 2 :</h5>\n\n<pre><code>The total number of binary trees with height 4 is 315.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 8,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an integer 'N', determine the number of balanced binary trees with height 'N'. A binary tree is considered balanced if, for all non-leaf nodes, the absolute difference between the heights of its left and right subtrees is at most 1. Since the answer can be very large, return the answer modulo 10^9 + 7.",
                "constraints": [
                    "1 <= T <= 50",
                    "1 <= N <= 10 ^ 4",
                    "Where \u2018T\u2019 denotes the number of test cases, \u2018N\u2019 denotes the height of the balanced binary tree.",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "2\n2\n3",
                        "output": "3\n15",
                        "explanation": "For N=2, there are 3 possible balanced binary trees. For N=3, there are 15 possible balanced binary trees."
                    },
                    {
                        "input": "1\n4",
                        "output": "315",
                        "explanation": "For N=4, there are 315 possible balanced binary trees."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you think about different possible combinations of heights of left and right subtree for any node?</p>",
            "<p>Can you try to identify overlapping subproblems and use dynamic programming?</p>",
            "<p>Can you try to solve this problem iteratively?</p>",
            "<p>Can you try to reduce the space complexity and solve this problem in constant space?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Trees",
                "slug": "trees"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}