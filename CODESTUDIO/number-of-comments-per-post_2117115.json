{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 14370,
            "title": "Number of Comments per Post",
            "titleSlug": "number-of-comments-per-post_2117115",
            "content": "<pre><code>Table: Submissions\n\n+---------------+----------+\n| Column Name   | Type     |\n+---------------+----------+\n| sub_id        | int      |\n| parent_id     | int      |\n+---------------+----------+\nThere is no primary key for this table, it may have duplicate rows.\nEach row can be a post or comment on the post.\nparent_id is null for posts.\nparent_id for comments is sub_id for another post in the table.\n\n\nWrite an SQL query to find number of comments per each post.\n\nResult table should contain post_id and its corresponding number_of_comments, and must be sorted by post_id in ascending order.\n\nSubmissions may contain duplicate comments. You should count the number of unique comments per post.\n\nSubmissions may contain duplicate posts. You should treat them as one post.\n\nThe query result format is in the following example:\n\nSubmissions table:\n+---------+------------+\n| sub_id  | parent_id  |\n+---------+------------+\n| 1       | Null       |\n| 2       | Null       |\n| 1       | Null       |\n| 12      | Null       |\n| 3       | 1          |\n| 5       | 2          |\n| 3       | 1          |\n| 4       | 1          |\n| 9       | 1          |\n| 10      | 2          |\n| 6       | 7          |\n+---------+------------+\n\n Result table:\n+---------+--------------------+\n| post_id | number_of_comments |\n+---------+--------------------+\n| 1       | 3                  |\n| 2       | 2                  |\n| 12      | 0                  |\n+---------+--------------------+\n\nThe post with id 1 has three comments in the table with id 3, 4 and 9. The comment with id 3 is repeated in the table, we counted it only once.\nThe post with id 2 has two comments in the table with id 5 and 10.\nThe post with id 12 has no comments in the table.\nThe comment with id 6 is a comment on a deleted post with id 7 so we ignored it.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 3,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a table `Submissions` with columns `sub_id` (int) and `parent_id` (int), determine the number of unique comments for each post. A post is identified by having a `NULL` value in the `parent_id` column. A comment refers to a `sub_id` that appears as a `parent_id` of other rows in the table, referencing the post it belongs to. Return a table with `post_id` and `number_of_comments`, sorted by `post_id` in ascending order. Handle duplicate posts and duplicate comments appropriately; consider them only once when counting.",
                "constraints": [
                    "The `Submissions` table does not have a primary key and may contain duplicate rows.",
                    "`parent_id` is NULL for posts.",
                    "`parent_id` for comments is the `sub_id` of the post they belong to."
                ],
                "testcases": [
                    {
                        "input": "submissions=[(1, None), (2, None), (1, None), (12, None), (3, 1), (5, 2), (3, 1), (4, 1), (9, 1), (10, 2), (6, 7)]",
                        "output": "[(1, 3), (2, 2), (12, 0)]",
                        "explanation": "Post 1 has comments 3, 4, and 9. Post 2 has comments 5 and 10. Post 12 has no comments. The comment 3 on post 1 is duplicated, and post 1 is duplicated, but they are only counted once. Comment 6 on a non-existent post 7 is ignored."
                    },
                    {
                        "input": "submissions=[(1, None), (2, None), (3, None), (4, 1), (5, 1), (6, 2), (7, 2), (8, 3)]",
                        "output": "[(1, 2), (2, 2), (3, 1)]",
                        "explanation": "Post 1 has comments 4 and 5. Post 2 has comments 6 and 7. Post 3 has comment 8."
                    },
                    {
                        "input": "submissions=[(1, None), (2, None), (3, None)]",
                        "output": "[(1, 0), (2, 0), (3, 0)]",
                        "explanation": "There are three posts but no comments, so all posts have 0 comments."
                    },
                    {
                        "input": "submissions=[(1, 2), (2, 3), (3, 4), (4, 5), (5, None)]",
                        "output": "[(5, 1)]",
                        "explanation": "Post 5 has only one comment which is 4, and so on."
                    },
                    {
                        "input": "submissions=[(1, None), (1, 1)]",
                        "output": "[(1, 1)]",
                        "explanation": "Post 1 has one comment which is 1."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "SQL",
                "slug": "sql"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}