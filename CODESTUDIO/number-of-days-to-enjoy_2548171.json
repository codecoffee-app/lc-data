{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 15559,
            "title": "Number of Days to Enjoy",
            "titleSlug": "number-of-days-to-enjoy_2548171",
            "content": "<h4 id=\"after-a-hectic-schedule-at-the-office-ninja-has-decided-to-take-off-for-the-next-m-months-each-month-has-exactly-30-days-there-are-n-countries-that-he-can-visit-during-his-vacations\">After a hectic schedule at the office, Ninja has decided to take off for the next \u2018M\u2019 months (each month has exactly 30 days). There are \u2018N\u2019 countries that he can visit during his vacations.</h4>\n\n<h4 id=\"but-there-is-a-restriction-on-every-country-a-person-can-only-stay-outside-for-limited-days-in-a-month-in-a-particular-country-you-are-given-a-matrix-restriction-where-restriction-i-j-denotes-that-the-i-th-country-allows-a-person-to-enjoy-only-restriction-i-j-days-in-the-j-th-month\">But there is a restriction on every country, a person can only stay outside for limited days in a month in a particular country, you are given a matrix \u2018Restriction\u2019 where &#39;Restriction[i][j]&#39; denotes that the i\u2019th country allows a person to enjoy only &#39;Restriction[i][j]&#39; days in the j\u2019th month.</h4>\n\n<h4 id=\"there-is-a-magical-teleportation-tunnel-that-can-directly-transfer-ninja-from-one-country-to-another-this-tunnel-only-operates-on-the-first-day-of-each-month-and-can-be-only-used-once-a-month-you-are-given-a-matrix-teleport-of-size-n-n-where-teleport-i-j-1-denotes-that-a-person-can-be-teleported-from-i-th-country-to-the-j-th-country\">There is a magical teleportation tunnel that can directly transfer Ninja from one country to another, this tunnel only operates on the first day of each month and can be only used once a month. You are given a matrix \u2018Teleport\u2019 of size N*N where Teleport[i][j] = 1 denotes that a person can be teleported from i\u2019th country to the j\u2019th country.</h4>\n\n<h4 id=\"you-need-to-help-ninja-by-telling-him-the-maximum-days-that-he-can-enjoy-during-his-vacations\">You need to help Ninja by telling him the maximum days that he can enjoy during his vacations.</h4>\n\n<h5 id=\"for-example\">For Example :</h5>\n\n<pre><code>If N = 3 and M = 3\nRestriction = { { 20, 10, 10 }, { 10, 20, 10 }, { 10, 10, 20 } }\nTeleport = { { 0, 1, 1 }, { 1, 0, 1 }, { 1, 1, 0 } }\n\nThen the Ninja can spend the first month in Country-1 and spend 20 days of the first month by going outside and enjoying himself, and the remaining 10 days of the first month will need to be spent inside his house (without enjoying).\n\nAs there is a teleportation path from Country-1 to Country-2 so Ninja will get himself teleported to Country-2 in the second month and spend 20 days there enjoying himself.\n\nFor the third month, as there is a teleportation path from Country-2 to Country-3 so Ninja will get himself teleported to Country-3 in the third month and spend 20 days there enjoying himself.\n\nIn total, he will spend 20 + 20 + 20 = 60 days enjoying his three months vacation.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 denoting the number of test cases, then each test case follows:\n\nThe first line of each test case contains two integers \u2018N\u2019 and \u2018M\u2019 denoting the countries and number of vacation months respectively.\n\nThe next N lines each contain M integers, each denoting Restriction[i][j] (maximum days that a person can enjoy in i\u2019th country in j\u2019th month).\n\nThe next N lines each contain N integers, each denoting Teleport[i][j] (possibility of getting teleported from i\u2019th country to j\u2019th country).\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print the maximum days that Ninja can enjoy during his vacations.\n\nOutput for each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You are not required to print anything; it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 \u2264 T \u2264 10      \n1 \u2264 N \u2264 25\n1 \u2264 M \u2264 100, each month consists of exactly 30 days\nRestriction.length = N\nRestriction[i].length = M\n0 \u2264 Restriction[i][j] \u2264 30\nTeleport.length = N\nTeleport[i].length = N\n0 \u2264 Teleport[i][j] \u2264 1, Teleport[i][i] = 0\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n3 3\n20 10 10\n10 20 10\n10 10 20\n0 1 1\n1 0 1\n1 1 0\n3 5\n0 0 0 0 30\n10 10 10 10 0\n20 20 20 20 0\n0 1 0\n1 0 1\n1 1 0\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>60 \n100 \n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1 :</h5>\n\n<pre><code>For test case 1 :\nWe will print 60 because:\nNinja will spend the first month in Country-1 and enjoy 20 days, he will then teleport to Country-2 for the second month and again spend 20 days enjoying, and for the last month, he will get transported to Country-3 and spend 20 days enjoying over there. In total he has spent 20 + 20 + 20 = 60 days enjoying himself.\n\nFor test case 2 : \nWe will print 100 because:\nNinja will get himself teleported to Country-2 in the first month itself and spend the first month in Country-2 and enjoy 10 days, he will get teleported to Country-3 in the second month and enjoy 20 days in the second month, he will continue to stay in Country-3 for the 3\u2019rd and 4\u2019th month and spend 20 days in each of these months enjoying himself. He will finally get teleported to Country-1 in the fifth month and enjoy 30 days there. In total he has spent 10 + 20 + 20 + 20 + 30 = 100 days enjoying himself.\n(Note: a better answer could have existed if he visited Country-3 in the first month, but teleportation from Country-1 to Country-3 was not possible).\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n1 2\n10 20\n0\n2 1\n10\n20\n0 1\n1 0\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>30\n20\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": -7,
            "dislikes": "NA",
            "rephrased": {
                "body": "Ninja is planning a vacation for 'M' months, each with 30 days. He can visit 'N' countries, but each country 'i' has a restriction on the maximum days he can spend there in month 'j', given by Restriction[i][j]. A teleportation tunnel allows him to travel between countries on the first day of each month, usable only once per month. Teleport[i][j] = 1 indicates a possible teleport from country 'i' to country 'j'. The goal is to determine the maximum number of days Ninja can enjoy during his vacation.",
                "constraints": [
                    "1 \u2264 T \u2264 10",
                    "1 \u2264 N \u2264 25",
                    "1 \u2264 M \u2264 100",
                    "0 \u2264 Restriction[i][j] \u2264 30",
                    "0 \u2264 Teleport[i][j] \u2264 1",
                    "Teleport[i][i] = 0",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "3 3\n20 10 10\n10 20 10\n10 10 20\n0 1 1\n1 0 1\n1 1 0",
                        "output": "60",
                        "explanation": "Ninja spends the first month in Country-1 (20 days). Teleports to Country-2 for the second month (20 days). Then, teleports to Country-3 for the third month (20 days). Total: 20 + 20 + 20 = 60 days."
                    },
                    {
                        "input": "3 5\n0 0 0 0 30\n10 10 10 10 0\n20 20 20 20 0\n0 1 0\n1 0 1\n1 1 0",
                        "output": "100",
                        "explanation": "Ninja teleports to Country-2 in the first month (10 days). Teleports to Country-3 in the second month (20 days). Stays in Country-3 for the third and fourth months (20 days each). Finally, teleports to Country-1 in the fifth month (30 days). Total: 10 + 20 + 20 + 20 + 30 = 100 days."
                    },
                    {
                        "input": "1 2\n10 20\n0",
                        "output": "30",
                        "explanation": "Ninja stays in the only country for both months, enjoying 10 days in the first month and 20 days in the second. Total: 10 + 20 = 30 days."
                    },
                    {
                        "input": "2 1\n10\n20\n0 1\n1 0",
                        "output": "20",
                        "explanation": "Ninja starts in the second country and spends 20 days. No matter what he does with teleport the maximum enjoyable day would be 20 in the second country."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to stimulate the moves, to visit the i\u2019th country in the j\u2019th month, try exploring all the options for the (j-1)\u2019th month that will allow us to visit the i\u2019th country in the j\u2019th month.</p>",
            "<p>Try to stimulate the moves, to visit the i\u2019th country in the j\u2019th month, try exploring all the options for the (j-1)\u2019th month that will allow us to visit the i\u2019th country in the j\u2019th month.</p><p>Also store the result for all (i, j) so that we don\u2019t have to recalculate it in the future (Memoization!).</p>",
            "<p>Can you calculate the maximum enjoyment days you can spend in the first \u2018y\u2019 months if you have to spend your y\u2019th month in the x\u2019th country? If you are able to do this then you can finally return the maximum calculated value over one of the countries after spending \u2018M\u2019 months of vacation.</p>",
            "<p>Need more help? Try thinking of dynamic programming, assume that you compulsorily have to visit the x\u2019th country in the y\u2019th month, let dp[x][y] denote the maximum enjoyment days after spending total \u2018y\u2019 months, now dp[x][y] can be calculated from dp[...][y-1] (try using the Teleport matrix to know which \u201c...\u201d terms you can consider).</p>"
        ],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}