{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8843,
            "title": "Number of Mismatching Bits",
            "titleSlug": "number-of-mismatching-bits_920394",
            "content": "<h4 id=\"given-two-integers-first-and-second-find-the-number-of-bits-that-do-not-match-in-the-binary-representation-of-the-given-numbers\">Given two integers &quot;first&quot; and &quot;second&quot;. Find the number of bits that do not match in the binary representation of the given numbers.</h4>\n\n<h4 id=\"for-example-let-first-be-11-and-second-be-15-writing-both-the-given-numbers-in-binary-we-get-first-1011-binary-representation-of-11-and-second-1111-binary-representation-of-15-we-can-see-all-the-bits-are-the-same-except-the-second-bit\">For example, let &quot;first&quot; be 11 and &quot;second&quot; be 15. Writing both the given numbers in binary we get first = 1011(binary representation of 11) and second = 1111(binary representation of 15) we can see all the bits are the same except the second bit.</h4>\n\n<p><img src=\"https://files.codingninjas.in/tc1-1-6201.jpg\" alt=\"ex\"></p>\n\n<h4 id=\"therefore-only-1-bit-differs-hence-we-return-1-as-shown-in-the-diagram\">Therefore only 1 bit differs hence we return 1 as shown in the diagram.</h4>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>1. Do not print anything, just implement the provided function and return the number of mismatching bits for the given numbers.\n</code></pre>\n\n<h5 id=\"input-format\">Input format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases.\nThe next \u2018T\u2019 lines represent the \u2018T\u2019 test cases.\nThe only line of each test case contains 2 space-separated integers &quot;first&quot; and &quot;second&quot;\n</code></pre>\n\n<h5 id=\"output-format\">Output Format</h5>\n\n<pre><code>For each test case, print a single integer denoting the number of mismatched bits in their binary representation.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10 ^ 5\n0 &lt;= first, second &lt;= 10^9\n\nWhere \u2018T\u2019 is the total number of test cases and &quot;first&quot;, &quot; second&quot; are the given numbers.\n\nTime limit: 1 second\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n11 15\n12 16\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>1\n3\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of sample input 1 :</h5>\n\n<pre><code>Test Case 1:\n\nWe get &quot;first&quot; is equal to 11 and &quot;second&quot; is equal to 15.\n\nConverting to binary representation, we get \nFirst = 11 = 2^3 + 2^1 + 2^0\nFirst = 1011\nSecond = 15 = 2^3 + 2^2 + 2^1 + 2^0\nSecond = 1111\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/tc1-1-6201.jpg\" alt=\"ex\"></p>\n\n<pre><code>We can see that the first third and fourth bits are the same in both the numbers but the second bit is different,  it is 0 in the first number and 1 in the second number. Since only 1 bit differs, we return 1.\n\nTest Case 2: \n\nWe get &quot;first&quot; = 12 and &quot;second&quot; = 16.\n\nConverting to binary, we get \nFirst = 12 = 2^3 + 2^2\nFirst = 01100\nSecond = 16 = 2^4\nSecond = 10000\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/tc2-1-6202.jpg\" alt=\"alt-2\"></p>\n\n<pre><code>We can clearly see that the first second and third bit differ(highlighted in red) therefore we return 3.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>4\n100 1000\n5 13\n6 20\n21 23\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>5\n1\n2\n1  \n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 3,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two integers, `first` and `second`, determine the number of bit positions where the bits are different in their binary representations.",
                "constraints": [
                    "1 <= T <= 10 ^ 5",
                    "0 <= first, second <= 10^9",
                    "Where \u2018T\u2019 is the total number of test cases and 'first', 'second' are the given numbers."
                ],
                "testcases": [
                    {
                        "input": "first = 11, second = 15",
                        "output": "1",
                        "explanation": "first = 11 (binary: 1011), second = 15 (binary: 1111). Only the second bit from the right is different."
                    },
                    {
                        "input": "first = 12, second = 16",
                        "output": "3",
                        "explanation": "first = 12 (binary: 01100), second = 16 (binary: 10000). The first, second, and third bits from the right differ."
                    },
                    {
                        "input": "first = 100, second = 1000",
                        "output": "5",
                        "explanation": "first = 100 (binary: 01100100), second = 1000 (binary: 1111101000). There are 5 different bits"
                    },
                    {
                        "input": "first = 5, second = 13",
                        "output": "1",
                        "explanation": "first = 5 (binary: 0101), second = 13 (binary: 1101). Only the first bit from right is different"
                    },
                    {
                        "input": "first = 6, second = 20",
                        "output": "2",
                        "explanation": "first = 6 (binary: 00000110), second = 20 (binary: 00010100). The third and fifth bits from right are different."
                    },
                    {
                        "input": "first = 21, second = 23",
                        "output": "1",
                        "explanation": "first = 21 (binary: 00010101), second = 23 (binary: 00010111). Only the first bit from right is different."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><strong>Check if every bit is same or not</strong></p>",
            "<p>Can we use the XOR operator?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}