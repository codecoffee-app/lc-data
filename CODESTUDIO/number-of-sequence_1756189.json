{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 13647,
            "title": "Number Of Sequence",
            "titleSlug": "number-of-sequence_1756189",
            "content": "<h4 id=\"a-sequence-is-called-nice-by-a-coding-ninja-if-the-following-conditions-are-met\">A sequence is called nice by a coding ninja if the following conditions are met:</h4>\n\n<pre><code>0 &lt;= \u2018ARR\u2019[k] &lt;= k \n\u2018ARR\u2019[k] = \u2018ARR\u2019[m] mod k, for all pairs of k,m such that k divides m.\n</code></pre>\n\n<h4 id=\"you-are-given-a-sequence-of-integers-arr-where-some-numbers-may-be-1-find-and-print-the-number-of-nice-sequences-you-can-create-by-changing-each-1-to-a-non-negative-integer-as-this-number-can-be-quite-large-your-answer-must-be-modulo-it-by-10-9-7\">You are given a sequence of integers \u2018ARR\u2019 where some numbers may be -1. Find and print the number of nice sequences you can create by changing each -1 to a non-negative integer. As this number can be quite large, your answer must be modulo it by 10 ^ 9 + 7.</h4>\n\n<h4 id=\"for-example\">For example:</h4>\n\n<pre><code>Given \u2018N\u2019 = 3, \n&#39;A&#39; = {0, -1, -1} \nThen the answer is 6 because following sequences are possible:[0, 0, 0], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 0, 1], [0, 0, 2].\n</code></pre>\n\n<h5 id=\"input-format\">Input format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases.\n\nThe first line of each test case contains a single integer, \u2018N,\u2019 where \u2018N\u2019 is the number of elements of the array.\n\nThe second line of each test case contains \u2018N\u2019 space-separated integers, denoting the array elements.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, You are supposed to return the total number of nice arrays that can be formed.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You are not required to print the expected output; it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= \u2018T\u2019 &lt;= 10\n1 &lt;= \u2018N\u2019 &lt;= 3000\n0 &lt;= &#39;ARR[i]\u2019 &lt;= 10 ^ 6\n\nTime Limit: 1 sec.\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1 :</h4>\n\n<pre><code>2\n3\n0 -1 -1\n3\n0 1 -1\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1 :</h4>\n\n<pre><code>6\n3  \n</code></pre>\n\n<h4 id=\"explanation-of-the-sample-input-1\">Explanation of the Sample Input 1:</h4>\n\n<pre><code>In the first test case, The following sequences are possible: [0, 0, 0], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 0, 1], [0, 0, 2]. Hence the answer is 6.\n\nIn the second test case, The following sequences are possible: [0,1,0],[0,1,1], and [0,1,2]. Therefore the final answer is 3.\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2 :</h4>\n\n<pre><code>2\n3\n0 1 2\n3\n-1 -1 2 \n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2 :</h4>\n\n<pre><code>1\n2\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 4,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an integer array 'ARR' of size 'N', where some elements may be -1, determine the number of \"nice\" sequences that can be formed by replacing each -1 with a non-negative integer. A sequence is considered \"nice\" if it satisfies the following conditions:\n\n1.  0 <= ARR[k] <= k for all valid indices k.\n2.  ARR[k] = ARR[m] mod k, for all pairs of indices k and m such that k divides m.\n\nReturn the count of such \"nice\" sequences modulo 10^9 + 7.",
                "constraints": [
                    "1 <= \u2018T\u2019 <= 10",
                    "1 <= \u2018N\u2019 <= 3000",
                    "0 <= ARR[i] <= 10 ^ 6 (if ARR[i] != -1)"
                ],
                "testcases": [
                    {
                        "input": "arr=[0,-1,-1]",
                        "output": "6",
                        "explanation": "The possible nice sequences are: [0, 0, 0], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 0, 1], [0, 0, 2]."
                    },
                    {
                        "input": "arr=[0,1,-1]",
                        "output": "3",
                        "explanation": "The possible nice sequences are: [0, 1, 0], [0, 1, 1], [0, 1, 2]."
                    },
                    {
                        "input": "arr=[0,1,2]",
                        "output": "1",
                        "explanation": "The sequence [0, 1, 2] is already a nice sequence."
                    },
                    {
                        "input": "arr=[-1,-1,2]",
                        "output": "2",
                        "explanation": "The possible nice sequences are [0, 0, 2] and [1, 0, 2] as ARR[0] <= 0 and ARR[1] <= 1, and ARR[2] = ARR[0] mod 2, ARR[2] = ARR[1] mod 2. Therefore 2 = 0 mod 2 and 2 = 1 mod 2 which means ARR[0] must be 0 and ARR[1] must be 0."
                    },
                    {
                        "input": "arr=[-1,-1,-1]",
                        "output": "12",
                        "explanation": "The possible nice sequences are [0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2]."
                    },
                    {
                        "input": "arr=[2,-1]",
                        "output": "0",
                        "explanation": "Because arr[0] > 0, and arr[0] > 0, there is no possible replacement where arr[0] <= 0, the final array cannot be a nice array."
                    },
                    {
                        "input": "arr=[0,-1, -1, -1]",
                        "output": "24",
                        "explanation": "The possible nice sequences are 24."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can we use the Chinese remainder theorem?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}