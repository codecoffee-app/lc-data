{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 14525,
            "title": "Number of Trusted Contacts of a Customer",
            "titleSlug": "number-of-trusted-contacts-of-a-customer_2188773",
            "content": "<pre><code>Table: Customers\n\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| customer_id   | int     |\n| customer_name | varchar |\n| email         | varchar |\n+---------------+---------+\ncustomer_id is the primary key for this table.\nEach row of this table contains the name and the email of a customer of an online shop.\n\n\nTable: Contacts\n\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| user_id       | id      |\n| contact_name  | varchar |\n| contact_email | varchar |\n+---------------+---------+\n(user_id, contact_email) is the primary key for this table.\nEach row of this table contains the name and email of one contact of customer with user_id.\nThis table contains information about people each customer trust. The contact may or may not exist in the Customers table.\n\n\n\nTable: Invoices\n\n+--------------+---------+\n| Column Name  | Type    |\n+--------------+---------+\n| invoice_id   | int     |\n| price        | int     |\n| user_id      | int     |\n+--------------+---------+\ninvoice_id is the primary key for this table.\nEach row of this table indicates that user_id has an invoice with invoice_id and a price.\n\n\nWrite an SQL query to find the following for each invoice_id:\n\ncustomer_name: The name of the customer the invoice is related to.\nprice: The price of the invoice.\ncontacts_cnt: The number of contacts related to the customer.\ntrusted_contacts_cnt: The number of contacts related to the customer and at the same time they are customers to the shop. (i.e His/Her email exists in the Customers table.)\nOrder the result table by invoice_id.\n\nThe query result format is in the following example:\n\nCustomers table:\n+-------------+---------------+--------------------+\n| customer_id | customer_name | email              |\n+-------------+---------------+--------------------+\n| 1           | Alice         | alice@codingninjas.com |\n| 2           | Bob           | bob@codingninjas.com   |\n| 13          | John          | john@codingninjas.com  |\n| 6           | Alex          | alex@codingninjas.com  |\n+-------------+---------------+--------------------+\nContacts table:\n+-------------+--------------+--------------------+\n| user_id     | contact_name | contact_email      |\n+-------------+--------------+--------------------+\n| 1           | Bob          | bob@codingninjas.com   |\n| 1           | John         | john@codingninjas.com  |\n| 1           | Jal          | jal@codingninjas.com   |\n| 2           | Omar         | omar@codingninjas.com  |\n| 2           | Meir         | meir@codingninjas.com  |\n| 6           | Alice        | alice@codingninjas.com |\n+-------------+--------------+--------------------+\nInvoices table:\n+------------+-------+---------+\n| invoice_id | price | user_id |\n+------------+-------+---------+\n| 77         | 100   | 1       |\n| 88         | 200   | 1       |\n| 99         | 300   | 2       |\n| 66         | 400   | 2       |\n| 55         | 500   | 13      |\n| 44         | 60    | 6       |\n+------------+-------+---------+\nResult table:\n+------------+---------------+-------+--------------+----------------------+\n| invoice_id | customer_name | price | contacts_cnt | trusted_contacts_cnt |\n+------------+---------------+-------+--------------+----------------------+\n| 44         | Alex          | 60    | 1            | 1                    |\n| 55         | John          | 500   | 0            | 0                    |\n| 66         | Bob           | 400   | 2            | 0                    |\n| 77         | Alice         | 100   | 3            | 2                    |\n| 88         | Alice         | 200   | 3            | 2                    |\n| 99         | Bob           | 300   | 2            | 0                    |\n+------------+---------------+-------+--------------+----------------------+\nAlice has three contacts, two of them are trusted contacts (Bob and John).\nBob has two contacts, none of them is a trusted contact.\nAlex has one contact and it is a trusted contact (Alice).\nJohn doesn&#39;t have any contacts.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 7,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given three tables: `Customers`, `Contacts`, and `Invoices`, write an SQL query to retrieve information about each invoice. For each invoice, you need to determine the customer's name, the invoice price, the total number of contacts associated with the customer, and the number of those contacts who are also customers in the `Customers` table (trusted contacts). Order the results by `invoice_id`.",
                "constraints": [
                    "The `Customers` table contains customer information including `customer_id`, `customer_name`, and `email`.",
                    "The `Contacts` table contains contact information for each customer, including `user_id`, `contact_name`, and `contact_email`.  A contact is 'trusted' if their email also appears in the `Customers` table.",
                    "The `Invoices` table contains invoice information including `invoice_id`, `price`, and `user_id`."
                ],
                "testcases": [
                    {
                        "input": "Customers=[(1,'Alice','alice@codingninjas.com'),(2,'Bob','bob@codingninjas.com'),(13,'John','john@codingninjas.com'),(6,'Alex','alex@codingninjas.com')], Contacts=[(1,'Bob','bob@codingninjas.com'),(1,'John','john@codingninjas.com'),(1,'Jal','jal@codingninjas.com'),(2,'Omar','omar@codingninjas.com'),(2,'Meir','meir@codingninjas.com'),(6,'Alice','alice@codingninjas.com')], Invoices=[(77,100,1),(88,200,1),(99,300,2),(66,400,2),(55,500,13),(44,60,6)]",
                        "output": "[(44,'Alex',60,1,1),(55,'John',500,0,0),(66,'Bob',400,2,0),(77,'Alice',100,3,2),(88,'Alice',200,3,2),(99,'Bob',300,2,0)]",
                        "explanation": "This test case uses the example data provided in the problem description.  The expected output is derived by correctly joining the tables and calculating the `contacts_cnt` and `trusted_contacts_cnt` for each invoice."
                    },
                    {
                        "input": "Customers=[(1,'Alice','alice@example.com')], Contacts=[(1,'Bob','bob@external.com'),(1,'Charlie','charlie@example.com')], Invoices=[(1,100,1),(2,200,1)]",
                        "output": "[(1,'Alice',100,2,1),(2,'Alice',200,2,1)]",
                        "explanation": "In this case, Alice has two contacts, Bob and Charlie. However, only Charlie is also a customer (based on the email existing in the Customers table). Thus, contacts_cnt is 2 and trusted_contacts_cnt is 1 for both invoices related to Alice."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "SQL",
                "slug": "sql"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}