{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 17120,
            "title": "Number of Ways",
            "titleSlug": "number-of-ways_3755252",
            "content": "<h4 id=\"you-are-given-an-array-of-distinct-integers-and-you-have-to-tell-how-many-different-ways-of-selecting-the-elements-from-the-array-are-there-such-that-the-sum-of-chosen-elements-is-equal-to-the-target-number-tar\">You are given an array of distinct integers and you have to tell how many different ways of selecting the elements from the array are there such that the sum of chosen elements is equal to the target number tar.</h4>\n\n<h4 id=\"note-two-ways-are-considered-the-same-if-for-every-index-the-contents-of-both-the-ways-are-equal-example-way1-1-2-3-1-and-way2-1-2-3-1-both-way1-and-way-2-are-the-same\">Note: Two ways are considered the same if for every index the contents of both the ways are equal example way1=[1,2,3,1] and way2= [1,2,3,1] both way1 and way 2 are the same.</h4>\n\n<h4 id=\"but-if-way1-1-2-3-4-and-way2-4-3-2-1-then-both-ways-are-different\">But if way1 =[1,2,3,4] and way2= [4,3,2,1] then both ways are different.</h4>\n\n<h5 id=\"input-is-given-such-that-the-answer-will-fit-in-a-32-bit-integer\">Input is given such that the answer will fit in a 32-bit integer.</h5>\n\n<h5 id=\"for-example\">For Example:</h5>\n\n<pre><code>If N = 3 and tar = 5 and array elements are [1,2,5] then the number of possible ways of making sum = 5 are:\n(1,1,1,1,1)\n(1,1,1,2)\n(1,2,1,1)\n(2,1,1,1)\n(1,1,2,1)\n(2,2,1)\n(1,2,2)\n(2,1,2)\n(5)\nHence the output will be 9.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of the input contains an integer, &#39;T\u2019, denoting the number of test cases.\n\nThe first line of each test case will contain two space-separated integers \u2018N\u2019 and \u201ctar\u201d, denoting the size of the array and the given integer.\n\nThe second line of each test case contains \u2018N\u2019 space-separated integers denoting elements of the array.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print the number of ways that satisfy the condition mentioned in the problem statement.\n\nPrint a separate line for each test case.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= N &lt;= 200\n1 &lt;= nums[i] &lt;= 1000\nAll the elements will be unique\n1 &lt;= tar &lt;= 1000\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n3 5\n1 2 5\n2 3\n1 2\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample output 1 :</h5>\n\n<pre><code>9\n3\n</code></pre>\n\n<h5 id=\"explanation-for-sample-output-1\">Explanation For Sample Output 1:</h5>\n\n<pre><code>For the first test case, the number of possible ways will be\n(1,1,1,1,1)\n(1,1,1,2)\n(1,2,1,1)\n(2,1,1,1)\n(1,1,2,1)\n(2,2,1)\n(1,2,2)\n(2,1,2)\n(5)\n\nFor the second test case, the number of ways will be\n(1,1,1)\n(1,2)\n(2,1)\nHere you can see we have considered (1,2) and (2,1) in 2 different ways.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n3 4\n12 1 3\n2 41\n2 34\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample output 2 :</h5>\n\n<pre><code>3\n0\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 34,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of distinct integers, determine the number of unique ways to select elements from the array such that the sum of the chosen elements equals a specified target value. The order of selection matters, meaning that different orderings of the same elements are considered distinct ways.",
                "constraints": [
                    "1 <= N <= 200",
                    "1 <= nums[i] <= 1000",
                    "All the elements will be unique",
                    "1 <= tar <= 1000",
                    "Input is given such that the answer will fit in a 32-bit integer."
                ],
                "testcases": [
                    {
                        "input": "num=[1, 2, 5], tar=5",
                        "output": "1",
                        "explanation": "The possible ways to achieve a sum of 5 are: [5]. Notice the original problem has errors in sample output"
                    },
                    {
                        "input": "num=[1, 2], tar=3",
                        "output": "2",
                        "explanation": "The possible ways to achieve a sum of 3 are: [1, 1, 1], [1, 2], [2, 1]."
                    },
                    {
                        "input": "num=[12, 1, 3], tar=4",
                        "output": "3",
                        "explanation": "The possible ways to achieve a sum of 4 are: [1, 1, 1, 1], [1, 3], [3, 1]."
                    },
                    {
                        "input": "num=[2, 34], tar=41",
                        "output": "0",
                        "explanation": "It is not possible to achieve a sum of 41 using the given numbers."
                    },
                    {
                        "input": "num=[1, 2, 3, 4, 5], tar=10",
                        "output": "22",
                        "explanation": "This testcase tests for larger set of numbers"
                    },
                    {
                        "input": "num=[2,4,6], tar=8",
                        "output": "6",
                        "explanation": "Multiple combinations are possible: [2,2,2,2], [2,2,4], [2,4,2], [4,2,2], [4,4], [2,6], [6,2]"
                    },
                    {
                        "input": "num=[1], tar=1",
                        "output": "1",
                        "explanation": "Base Case, should return 1 if the array has only 1 element"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Check for every possible way such that the sum is \u2018tar\u2019.</p>",
            "<p>Can you optimize your recursive solution using some extra space?</p>",
            "<p>Can you think of doing it iteratively to avoid stack size problems?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}