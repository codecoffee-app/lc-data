{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8977,
            "title": "Numbers with same bits",
            "titleSlug": "numbers-with-same-bits_972993",
            "content": "<h4 id=\"you-are-given-an-array-of-n-numbers-your-task-is-to-return-the-sum-of-all-special-numbers-present-in-it\">You are given an array of <strong>N</strong> numbers. Your task is to return the sum of all special numbers present in it.</h4>\n\n<h4 id=\"a-number-is-said-to-be-special-if-the-count-of-0-s-is-equal-to-the-count-of-1s-in-its-binary-representation\">A number is said to be special if the count of 0\u2019s is equal to the count of 1&#39;s in its binary representation.</h4>\n\n<h4 id=\"note-we-only-consider-0-s-to-the-right-of-most-significant-bit-while-calculating-the-count-of-0-s-in-a-number-s-binary-representation-ie-25-000011001-2-has-3-bits-equal-to-1-and-2-bits-equal-to-0\">Note : We only consider 0\u2019s to the right of Most Significant Bit while calculating the count of 0\u2019s in a number\u2019s binary representation, ie: 25=(000011001)<sub>2</sub> has 3 bits equal to 1 and 2 bits equal to 0.</h4>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 denoting the number of test cases to run. Then the test cases follow.\n\nThe first line contains a single integer N, where N represents the size of the array.\n\nThe next line contains N integers, denoting the elements of the given array.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case print a single integer denoting the sum of special numbers in the array.\n\nOutput for each test case will be printed in a separate line,\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You are not required to print anything; it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10      \n1 &lt;= N &lt;= 2 * 10^4\n1 &lt;= a[i] &lt;= 10^9\nTime limit: 1 sec\n</code></pre>\n\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n6\n1 2 3 4 5 6\n4\n4 8 16 32\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>2\n0\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of sample input 1 :</h5>\n\n<pre><code>For test case 1:\nThe binary representation of 2 is (10)2 it has an equal number of bits with values 1 and value 0.\nRest all the numbers have unequal count of bits with values 0 and 1.\nHence the final sum is 0+2+0+0+0+0 = 2\n\nFor test case 2:\nNone of the array elements has an equal count of bits with values 0 and 1.\n4=(100) , 8=(1000) , 16=(10000) ,32=(100000)\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n2\n12 9 \n1\n12\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code> 21\n 12\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 5,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of integers, determine which numbers are 'special'. A number is considered 'special' if the count of 0s in its binary representation equals the count of 1s. Only consider 0s to the right of the most significant bit (MSB) when calculating the count of 0s. Calculate the sum of all special numbers in the given array.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 2 * 10^4",
                    "1 <= a[i] <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "n = 6, nums=[1, 2, 3, 4, 5, 6]",
                        "output": "2",
                        "explanation": "The binary representation of 2 is (10)2, which has one 0 and one 1. Therefore, 2 is a special number. The other numbers do not have an equal number of 0s and 1s in their binary representation."
                    },
                    {
                        "input": "n = 4, nums=[4, 8, 16, 32]",
                        "output": "0",
                        "explanation": "None of the numbers 4, 8, 16, or 32 have an equal number of 0s and 1s in their binary representation. 4=(100), 8=(1000), 16=(10000), 32=(100000)"
                    },
                    {
                        "input": "n = 2, nums=[12, 9]",
                        "output": "21",
                        "explanation": "12 is 1100 in binary, so 2 ones and 2 zeros. 9 is 1001, so 2 ones and 2 zeros. The sum is 12 + 9 = 21"
                    },
                    {
                        "input": "n = 1, nums=[12]",
                        "output": "12",
                        "explanation": "12 is 1100 in binary, so 2 ones and 2 zeros. Thus, the sum is simply 12."
                    },
                    {
                        "input": "n = 5, nums=[5, 10, 12, 15, 21]",
                        "output": "36",
                        "explanation": "5 (101) - Not Special, 10 (1010) - Not Special, 12 (1100) - Special, 15 (1111) - Not Special, 21 (10101) - Not Special, The Special ones are 12 and 24. so sum is 12",
                        "incorrect": true
                    },
                    {
                        "input": "n = 5, nums=[5, 10, 12, 15, 21]",
                        "output": "12",
                        "explanation": "5 (101) - Not Special, 10 (1010) - Not Special, 12 (1100) - Special, 15 (1111) - Not Special, 21 (10101) - Not Special, The Special ones are only 12. so sum is 12"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>How to count the number of set bits in a number? Can you directly count the number of set bits in the binary representation of a number?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}