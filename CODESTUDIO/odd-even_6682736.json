{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 23444,
            "title": "Odd Even ",
            "titleSlug": "odd-even_6682736",
            "content": "<h4 id=\"alice-has-two-numbers-x-and-y-he-is-asked-to-perform-the-following-operations-any-number-of-times\">Alice has two numbers, &#39;X&#39; and &#39;Y&#39;. He is asked to perform the following operations any number of times.</h4>\n\n<h4 id=\"alice-adds-1-to-x-if-x-is-odd-alice-adds-2-to-x-if-x-is-even-will-he-be-able-to-make-x-equal-to-y\">Alice adds 1 to &#39;X&#39; if &#39;X&#39; is odd. Alice adds 2 to &#39;X&#39; if &#39;X&#39; is even. Will he be able to make &#39;X&#39; equal to &#39;Y&#39;?</h4>\n\n<p><br/></p>\n\n<h4 id=\"return-1-if-x-can-be-made-equal-to-y-using-the-above-operations-any-number-of-times-possibly-0-and-0-otherwise\">Return 1 if &#39;X&#39; can be made equal to &#39;Y&#39; using the above operations any number of times(possibly 0) and 0 otherwise.</h4>\n\n<h4 id=\"note-assume-1-based-indexing\">Note: Assume 1-based indexing.</h4>\n\n<p><br/></p>\n\n<h5 id=\"for-example\">For example:</h5>\n\n<pre><code>Let &#39;X&#39; = 3 and &#39;Y&#39; = 6, Alice adds 1 to &#39;X&#39; since &#39;X&#39; is odd. Now &#39;X&#39; will become 4. Then, Alice will add 2 to &#39;X&#39;, since &#39;X&#39; is even, and it will become 6. &#39;X&#39; becomes equal to &#39;Y&#39;. Hence we will return 1 as the answer.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:-</h5>\n\n<pre><code>The first line contains an integer &#39;T&#39;, which denotes the number of test cases.\nFor every test case:-\nThe first line contains two integers, &#39;X&#39; and &#39;Y&#39;, the variables mentioned above.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:-</h5>\n\n<pre><code>For each test case, Return 1 if &#39;X&#39; can be made equal to &#39;Y&#39; using the above operations any number of times(possibly 0) and 0 otherwise.\n</code></pre>\n\n<h5 id=\"note\">Note:-</h5>\n\n<pre><code>You don\u2019t need to print anything. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:-</h5>\n\n<pre><code>1 &lt;= &#39;T&#39; &lt;= 10\n1 &lt;= &#39;X&#39;, &#39;Y&#39; &lt;= 10^9\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:-</h5>\n\n<pre><code>2\n4 8\n1 1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:-</h5>\n\n<pre><code>1\n1\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of sample input 1:-</h5>\n\n<pre><code>First test case:- \nIn 1st operation, Alice will add 2 to &#39;X&#39; as &#39;X&#39; is even. Now, &#39;X&#39; is 6. Again, in the 2nd operation, Alice will add 2 to &#39;X&#39;. Now &#39;X&#39; is 8, which is equal to &#39;Y&#39;. So, the answer is 1.\n\nSecond test case:-\n&#39;X&#39; is already equal to &#39;Y&#39;. So, the answer is 1.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:-</h5>\n\n<pre><code>2\n4 9 \n7 8\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:-</h5>\n\n<pre><code>0\n1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 0,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two integers, X and Y, determine if it's possible to make X equal to Y using the following operations any number of times:\n\n- If X is odd, add 1 to X.\n- If X is even, add 2 to X.\n\nReturn 1 if X can be made equal to Y, and 0 otherwise.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= X, Y <= 10^9",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "x = 4, y = 8",
                        "output": "1",
                        "explanation": "X is initially 4 (even). Adding 2 makes it 6 (even). Adding 2 again makes it 8, which equals Y."
                    },
                    {
                        "input": "x = 1, y = 1",
                        "output": "1",
                        "explanation": "X is already equal to Y."
                    },
                    {
                        "input": "x = 4, y = 9",
                        "output": "0",
                        "explanation": "X is initially 4 (even). Adding 2 makes it 6 (even). Adding 2 again makes it 8 (even). Adding 2 again makes it 10. It is not possible to make X equal to Y."
                    },
                    {
                        "input": "x = 7, y = 8",
                        "output": "1",
                        "explanation": "X is initially 7 (odd). Adding 1 makes it 8, which equals Y."
                    },
                    {
                        "input": "x = 3, y = 6",
                        "output": "1",
                        "explanation": "X is initially 3 (odd). Adding 1 makes it 4 (even). Adding 2 makes it 6, which equals Y."
                    },
                    {
                        "input": "x = 10, y = 15",
                        "output": "0",
                        "explanation": "X is initially 10 (even). Adding 2 makes it 12 (even). Adding 2 makes it 14 (even). Adding 2 again makes it 16. It is not possible to make X equal to Y."
                    },
                    {
                        "input": "x = 5, y = 11",
                        "output": "1",
                        "explanation": "X is initially 5 (odd). Adding 1 makes it 6 (even). Adding 2 makes it 8 (even). Adding 2 makes it 10 (even). Adding 2 makes it 12. We can't reach to 11 so we reduce 2 from 12 which results 10. We are stuck with even numbers and we can never reach an odd number after the initial step. If we reach 11 by odd number addition, we must have arrived at 10 before adding 1 and it is impossible."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Look for the parity of 'y'.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}