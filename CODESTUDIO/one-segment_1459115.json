{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12283,
            "title": "One Segment",
            "titleSlug": "one-segment_1459115",
            "content": "<h4 id=\"you-are-given-a-binary-string-str-containing-only-zeroes-and-ones-this-string-does-not-contain-any-leading-zero\">You are given a binary string \u2018STR\u2019, containing only zeroes and ones. This string does not contain any leading zero.</h4>\n\n<h4 id=\"your-task-is-to-determine-if-this-string-contains-at-most-one-contiguous-segment-of-ones\">Your task is to determine if this string contains at most one contiguous segment of ones.</h4>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains an integer \u2018T\u2019, which denotes the number of test cases to be run. Then, the T test cases follow. \nThe first line of each test case contains the binary string \u2018STR\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print \u201cYes\u201d if the string contains at most one contiguous segment of ones or print \u201cNo\u201d if it contains more than one contiguous segment.\n\nOutput for each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= |STR| &lt; 10^6\nWhere \u2018T\u2019 denotes the number of test cases and |STR| represents the length of the string \u2018STR\u2019\n\nTime Limit: 1sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1\n11100\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>Yes\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for sample input 1:</h5>\n\n<pre><code>In this test case, we can observe that the string contains only one contiguous segment of ones. This segment starts at the 0th index and ends at the 2nd index. \n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\n111011\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>No\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation for sample input 2:</h5>\n\n<pre><code>In this case, the string contains two contiguous segments of ones. The first segment starts at the 0th index and ends at the 2nd index. The second segment starts at the 4th index and ends at the 5th index.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 58,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a binary string \u2018STR\u2019 consisting of only zeroes and ones (without leading zeroes), determine if it contains at most one contiguous segment of ones.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= |STR| <= 10^6",
                    "Where \u2018T\u2019 denotes the number of test cases and |STR| represents the length of the string \u2018STR\u2019",
                    "Time Limit: 1sec"
                ],
                "testcases": [
                    {
                        "input": "11100",
                        "output": "Yes",
                        "explanation": "The string '11100' has a single contiguous segment of ones, spanning from index 0 to 2. Therefore, the answer is 'Yes'."
                    },
                    {
                        "input": "111011",
                        "output": "No",
                        "explanation": "The string '111011' has two contiguous segments of ones: the first from index 0 to 2, and the second from index 4 to 5. Therefore, the answer is 'No'."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><i>Think about how do we know when a new segment starts</i></p>"
        ],
        "relatedTopics": [
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}