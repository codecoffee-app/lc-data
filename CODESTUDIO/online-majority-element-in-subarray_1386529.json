{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 11785,
            "title": "Online Majority Element In Subarray",
            "titleSlug": "online-majority-element-in-subarray_1386529",
            "content": "<h4 id=\"you-are-given-an-array-arr-and-you-are-supposed-to-answer-q-queries-in-each-query-you-have-three-integers-l-r-and-x-you-are-supposed-to-find-if-there-exists-an-element-in-the-subarray-arr-l-arr-l-1-arr-r-1-arr-r-that-occurs-at-least-x-number-of-times-under-the-following-conditions\">You are given an array \u2018ARR\u2019, and you are supposed to answer &#39;Q&#39; queries. In each query you have three integers, \u2018L\u2019, \u2018R\u2019, and \u2018X\u2019. You are supposed to find if there exists an element in the subarray [ARR[L], ARR[L+1], \u2026, ARR[R-1], ARR[R] that occurs at least \u2018X\u2019 number of times under the following conditions:</h4>\n\n<h4 id=\"1-0-l-r-n-where-l-is-the-left-most-index-of-the-subarray-r-is-the-right-most-index-of-the-subarray-and-n-is-the-number-of-elements-in-the-array-arr\">1. 0 &lt;= L &lt;= R &lt; N, where L is the left-most index of the subarray, R is the right-most index of the subarray, and N is the number of elements in the array \u2018ARR\u2019.</h4>\n\n<h4 id=\"2-2-x-r-l-1-i-e-the-threshold-is-always-greater-than-the-majority-length-of-the-subarray\">2. 2 * X&gt; R - L + 1 i.e. the threshold is always greater than the majority length of the subarray.</h4>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019, denoting the number of test cases. The test cases follow.\n\nThe first line contains an integer \u2018N\u2019, which denotes the number of elements in the array \u2018ARR\u2019.\n\nThe second line contains &#39;N&#39; integers denoting the elements of the array \u2018ARR\u2019.\n\nThe third line contains an integer \u2018Q\u2019, which denotes the number of queries for the given array.\n\nThe next &#39;Q&#39; lines contain three integers, \u2018L\u2019, \u2018R\u2019, and \u2018X\u2019, where &#39;L&#39; is the left-most index of the subarray, &#39;R&#39; is the right-most index of the subarray, and \u2018X\u2019 is the threshold value for the given query.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, return the majority elements if it exists. Otherwise, return -1.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You are not required to print the expected output, it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1&lt;= T &lt;= 50\n1 &lt;= N &lt;= 2* 10^4\n1 &lt;= ARR[i] &lt;= 2* 10^4 \n1 &lt;= Q &lt;= 10^4\n0 &lt;= L &lt;= R &lt; N\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n6\n2 2 1 1 2 2\n3\n0 5 4\n0 3 3\n2 3 2\n6\n1 2 3 4 5 6\n3\n0 5 4\n0 3 3\n2 3 2\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>2\n-1\n1\n-1\n-1\n-1\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1:</h5>\n\n<pre><code>In the first test case, the array elements are [2, 2, 1, 1, 2,2].\n\nIn the first query, we have to find a number from indices 0 to 5 that occur at least 4 times. In this range, 2 satisfies the conditions.\n\nIn the second query, we have to find a number from indices 0 to 3 that occur at least 3 times. In this range, no number satisfies the condition. So, the answer is -1.\n\nIn the third query, we have to find a number from indices 2 to 3 that occur at least 2 times. In this range, 1 satisfies the conditions.\n\nIn the second test case, the array elements are [1, 2, 3, 4, 5, 6].\n\nIn the first query, we have to find a number from indices 0 to 5 that occur at least 4 times.  In this range, no number satisfies the condition. So, the answer is -1.\n\nIn the second query, we have to find a number from indices 0 to 3 that occur at least 3 times. In this range, no number satisfies the condition. So, the answer is -1.\n\nIn the third query, we have to find a number from indices 2 to 3 that occur at least 2 times.  In this range, no number satisfies the condition. So, the answer is -1.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n10\n2 2 1 2 1 2 2 1 1 2\n4\n2 5 4\n0 5 6\n0 1 2\n2 3 2\n10\n2 2 1 2 1 2 2 1 1 2\n4\n6 6 1\n0 3 3\n4 9 6\n4 8 4\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>-1\n-1\n2\n-1\n2\n2\n-1\n-1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -3,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array 'ARR' of size N and Q queries. For each query, given L, R, and X, determine if there exists an element in the subarray ARR[L...R] that appears at least X times. The indices L and R are inclusive, and 0 <= L <= R < N. It is guaranteed that 2 * X > R - L + 1 for each query.",
                "constraints": [
                    "1 <= T <= 50",
                    "1 <= N <= 2 * 10^4",
                    "1 <= ARR[i] <= 2 * 10^4",
                    "1 <= Q <= 10^4",
                    "0 <= L <= R < N",
                    "2 * X > R - L + 1"
                ],
                "testcases": [
                    {
                        "input": "6\n2 2 1 1 2 2\n3\n0 5 4\n0 3 3\n2 3 2",
                        "output": "2\n-1\n1",
                        "explanation": "Test Case 1:\nQuery 1: Subarray [2, 2, 1, 1, 2, 2]. Element 2 appears 4 times which is >= X=4.\nQuery 2: Subarray [2, 2, 1, 1]. No element appears >= X=3 times. Returns -1.\nQuery 3: Subarray [1, 1]. Element 1 appears 2 times which is >= X=2."
                    },
                    {
                        "input": "6\n1 2 3 4 5 6\n3\n0 5 4\n0 3 3\n2 3 2",
                        "output": "-1\n-1\n-1",
                        "explanation": "Test Case 2:\nQuery 1: Subarray [1, 2, 3, 4, 5, 6]. No element appears >= X=4 times. Returns -1.\nQuery 2: Subarray [1, 2, 3, 4]. No element appears >= X=3 times. Returns -1.\nQuery 3: Subarray [3, 4]. No element appears >= X=2 times. Returns -1."
                    },
                    {
                        "input": "10\n2 2 1 2 1 2 2 1 1 2\n4\n2 5 4\n0 5 6\n0 1 2\n2 3 2",
                        "output": "-1\n-1\n2\n-1",
                        "explanation": "Test Case 3:\nQuery 1: Subarray [1, 2, 1, 2]. No element appears >= X=4 times. Returns -1.\nQuery 2: Subarray [2, 2, 1, 2, 1, 2]. No element appears >= X=6 times. Returns -1.\nQuery 3: Subarray [2, 2]. Element 2 appears 2 times which is >= X=2.\nQuery 4: Subarray [1, 2]. No element appears >= X=2 times. Returns -1."
                    },
                    {
                        "input": "10\n2 2 1 2 1 2 2 1 1 2\n4\n6 6 1\n0 3 3\n4 9 6\n4 8 4",
                        "output": "2\n2\n-1\n-1",
                        "explanation": "Test Case 4:\nQuery 1: Subarray [1, 2, 2, 1, 1, 2]. Element 2 appears 3 times which is >= X=1.\nQuery 2: Subarray [2, 2, 1, 2]. Element 2 appears 3 times which is >= X=3.\nQuery 3: Subarray [1, 2, 2, 1, 1, 2]. No element appears >= X=6 times. Returns -1.\nQuery 4: Subarray [1, 2, 2, 1, 1]. No element appears >= X=4 times. Returns -1."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you traverse over the given sub-array and find the count of every element?</p>",
            "<p>Can you make use of the second condition given?</p><p>&nbsp;</p>",
            "<p>Try to store the array in the form of segment tree and then find the query's solution in O(logN).</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Trees",
                "slug": "trees"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}