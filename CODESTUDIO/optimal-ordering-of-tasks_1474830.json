{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12751,
            "title": "Optimal Ordering Of Tasks",
            "titleSlug": "optimal-ordering-of-tasks_1474830",
            "content": "<h4 id=\"you-are-given-n-tasks-each-task-has-its-own-duration-and-deadline-stored-in-array-list-arr-you-have-to-do-all-the-tasks-reward-earned-by-doing-a-task-is-deadline-of-the-task-time-when-the-task-is-done\">You are given \u2018N\u2019 tasks. Each task has its own duration and deadline stored in array/list &#39;ARR&#39;. You have to do all the tasks. Reward earned by doing a task is  \u2018deadline of the task\u2019 -  \u2018time when the task is done\u2019.</h4>\n\n<h4 id=\"you-have-to-order-the-tasks-in-such-a-way-that-the-sum-of-rewards-is-maximized-and-find-the-maximum-sum-of-the-reward\">You have to order the tasks in such a way that the sum of rewards is maximized and find the maximum sum of the reward.</h4>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>1. The time starts from zero. \n2. Before completing one task another task can not be started. \n3. The reward for doing a task can be negative. \n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 representing the number of test cases. \n\nThe first line of each test case will contain a single integer \u2018N\u2019 which denotes the number of tasks.\n\nThe next \u2018N\u2019 lines contain the two space-separated integers \u201cARR[i][0]\u201d and \u201cARR[i][1]\u201d, where \u201cARR[i][0]\u201d is the duration of the \u2018i-th\u2019 task and \u201cARR[i][1]\u201d is the deadline of the \u2018i-th\u2019 task.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print the maximum reward for doing all the tasks.\n\nOutput for every test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don\u2019t need to print anything; It has already been taken care of.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 100000\n1 &lt;= ARR[ i ][ 0 ] and ARR[ i ][ 1 ] &lt;= 10^5\n\nWhere \u2018T\u2019 is the number of test cases, &#39;N&#39; is the number of tasks,  \u2018ARR[ i ][ 0 ]\u2019 is the duration and  \u2018ARR[ i ][ 1 ]\u2019 deadline of the \u2018i-th\u2019 task. \n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n2\n1 10\n10 1\n4\n1 1\n1 2   \n1 4\n1 3\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>-1\n0\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of sample input 1:</h5>\n\n<pre><code>In the first test case:\nTime starts from zero. \nFirst, we will do 1\u2019st task. It will be done at time = 1, reward = 10 - 1 = 9.\nAfter first we will do the second task. It will be done at time = 11, reward = 1 - 11 = -10.\nTotal reward =  9 + ( -10 ) = -1.\n\nIn the second test case:\nTime starts from zero. \nWe will do the task in order  : 3, 4, 2, 1\nAfter time = 1 unit, 3rd task will be done, reward = 4 - 1 = 3.\nAfter time = 2 unit, 4th task will be done, reward = 3 - 2 = 1.\nAfter time = 3 unit, 2nd task will be done, reward = 2 - 3 = - 1.\nAfter time = 4 unit, 1st task will be done, reward = 1 - 4 = - 3.\nTotal reward = 3 + 1 - 1 - 3 = 0. \n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n5\n123 250\n3 120\n67 100\n88 93\n5 10\n1\n100 101\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>38\n1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 8,
            "dislikes": "NA",
            "rephrased": {
                "body": "You are given 'N' tasks, each with a duration and a deadline. Your goal is to schedule these tasks to maximize the total reward. The reward for each task is calculated as its deadline minus its completion time. You must complete all tasks, and a new task can only begin after the previous one is finished. Find the maximum achievable total reward.",
                "constraints": [
                    "1 <= T <= 10 (T is the number of test cases)",
                    "1 <= N <= 100000 (N is the number of tasks)",
                    "1 <= ARR[i][0] <= 10^5 (ARR[i][0] is the duration of the i-th task)",
                    "1 <= ARR[i][1] <= 10^5 (ARR[i][1] is the deadline of the i-th task)",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "2\n2\n1 10\n10 1\n4\n1 1\n1 2\n1 4\n1 3",
                        "output": "-1\n0",
                        "explanation": "Test Case 1:\n\nWith 2 tasks: (duration=1, deadline=10) and (duration=10, deadline=1).\n\nSchedule task 1 first: Reward = 10 - 1 = 9. Then schedule task 2: Reward = 1 - (1+10) = -10. Total reward = 9 - 10 = -1.\n\nTest Case 2:\n\nWith 4 tasks: (1,1), (1,2), (1,4), (1,3).\n\nSchedule tasks in order 3, 4, 2, 1:\nTask 3: Completion time = 1, Reward = 4 - 1 = 3.\nTask 4: Completion time = 2, Reward = 3 - 2 = 1.\nTask 2: Completion time = 3, Reward = 2 - 3 = -1.\nTask 1: Completion time = 4, Reward = 1 - 4 = -3.\nTotal reward = 3 + 1 - 1 - 3 = 0."
                    },
                    {
                        "input": "2\n5\n123 250\n3 120\n67 100\n88 93\n5 10\n1\n100 101",
                        "output": "38\n1",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>If there are two tasks \u2018i-th\u2019 and \u2018(i+1)-th\u2019 when is it optimal to swap them?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}