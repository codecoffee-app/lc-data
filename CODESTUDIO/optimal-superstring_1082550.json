{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9729,
            "title": "Optimal Superstring",
            "titleSlug": "optimal-superstring_1082550",
            "content": "<h4 id=\"you-are-given-a-set-of-strings-you-have-to-find-the-length-of-the-optimal-superstring-for-this-set\">You are given a set of strings. You have to find the length of the Optimal Superstring for this set.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>1. A string is said to be the Superstring of a set of strings if all the strings of the set are present in it as a substring.\n\n2. A Superstring is said to be an Optimal Superstring if its length is minimum out of all possible Superstrings for a given set of strings. \n\n3. Each string of the set consists of the uppercase English alphabet.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of the input contains an integer &#39;N&#39;, denoting the size of the set.\n\nThe following &#39;N&#39; lines contain one string denoting the strings, part of the given set.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print a single line containing a single integer denoting the length of the optimal Superstring.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You don&#39;t have to print anything, it has already been taken care of. Just Implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= N &lt;= 14\n1 &lt;= |Si| &lt;= 100\n\nTime Limit: 1 sec.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\nAA\nAAAA\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>4\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of sample input 1:</h5>\n\n<pre><code>In string \u201cAAAA\u201d, both strings \u201cAA\u201d and \u201cAAAA\u201d are present as substrings.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample input 2:</h5>\n\n<pre><code>3\nABC\nCDE\nEFG\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample output 2:</h5>\n\n<pre><code>7\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-2\">Explanation of sample input 2:</h5>\n\n<pre><code>In string \u201cABCDEFG\u201d, all the strings given in the set are present as a substring.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 7,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a set of strings, determine the length of the shortest string that contains all the strings in the set as substrings. This shortest string is known as the optimal superstring.",
                "constraints": [
                    "1 <= N <= 14",
                    "1 <= |Si| <= 100",
                    "Time Limit: 1 sec."
                ],
                "testcases": [
                    {
                        "input": "size=2, s=[AA, AAAA]",
                        "output": "4",
                        "explanation": "The string 'AAAA' contains both 'AA' and 'AAAA' as substrings.  Any string shorter than length 4 cannot contain 'AAAA'."
                    },
                    {
                        "input": "size=3, s=[ABC, CDE, EFG]",
                        "output": "7",
                        "explanation": "The string 'ABCDEFG' contains all three strings as substrings, and is the shortest possible such string."
                    },
                    {
                        "input": "size=3, s=[AB, BC, CA]",
                        "output": "5",
                        "explanation": "The shortest superstring is 'ABCAB' or 'BCABC' or 'CABCA', each of length 5."
                    },
                    {
                        "input": "size=4, s=[ABCD, BCD, CD, D]",
                        "output": "4",
                        "explanation": "The string 'ABCD' contains all four strings as substrings."
                    },
                    {
                        "input": "size=1, s=[XYZ]",
                        "output": "3",
                        "explanation": "The input array consists of only one string, and the shortest superstring is the string itself. Its length is 3."
                    },
                    {
                        "input": "size=2, s=[ACBAC, ACB]",
                        "output": "5",
                        "explanation": "The superstring is ACBAC"
                    },
                    {
                        "input": "size=3, s=[GEEKS, FOR, GEEKSFOR]",
                        "output": "10",
                        "explanation": "The optimal string is GEEKSFOR"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can we use DP with bitmasking to denote the already added strings?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}