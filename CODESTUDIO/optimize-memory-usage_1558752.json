{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 13366,
            "title": "Optimize Memory Usage",
            "titleSlug": "optimize-memory-usage_1558752",
            "content": "<h4 id=\"alex-has-a-computer-with-k-memory-spaces-he-has-a-list-of-n-different-document-downloads-that-he-would-like-to-do-each-of-which-consumes-some-unique-memory-usage-he-also-has-m-computer-games-each-of-which-consumes-some-unique-memory-usage-his-computer-can-allow-at-most-one-download-and-at-most-one-game-to-run-simultaneously-provided-that-the-sum-of-memory-usages-doesn-t-exceed-k-alex-wants-to-play-at-most-one-game-and-complete-at-most-one-download-so-that-the-total-memory-usage-is-maximum\">Alex has a computer with \u2018K\u2019 memory spaces. He has a list of \u2018N\u2019 different document downloads that he would like to do, each of which consumes some unique memory usage. He also has \u2018M\u2019 computer games, each of which consumes some unique memory usage. His computer can allow at most one download and at most one game to run simultaneously, provided that the sum of memory usages doesn\u2019t exceed \u2018K\u2019. Alex wants to play at most one game and complete at most one download so that the total memory usage is maximum.</h4>\n\n<h4 id=\"given-a-list-download-and-a-list-game-help-alex-find-out-the-number-of-pairs-of-downloads-and-games-such-that-the-sum-of-memory-usages-is-maximum-it-can-also-be-possible-that-alex-only-plays-a-game-or-performs-a-download-at-a-time\">Given a list \u2018download\u2019 and a list \u2018game\u2019, help Alex find out the number of pairs of downloads and games such that the sum of memory usages is maximum. It can also be possible that Alex only plays a game or performs a download at a time.</h4>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019, denoting the number of test cases. Then the test cases follow.\n\nThe first line of each test case contains three space-separated integers, \u2018N\u2019, \u2018M\u2019 and \u2018K\u2019, denoting the number of downloads and games and the total memory available, respectively.\n\nThe second line of each test case contains  \u2018N\u2019 space-separated integers denoting the memory usages of downloads in the array \u2018download\u2019.\n\nThe third line of each test case contains  \u2018M\u2019 space-separated integers denoting the memory usages of games in the array \u2018game\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print an array \u2018result\u2019, denoting the pairs of downloads and games for maximum memory usage in the following format.\nresult[i] = [ind1, ind2], where ind1 is the index of the download chosen and ind2 is the index of the game selected. If only one game or one download is chosen, put the other index as \u2018-1\u2019. In case no options are available, print \u2018-1 -1\u2019.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You are not required to print the expected output. It has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N, M &lt;= 10^5\n1 &lt;= K &lt;= 10^9\n1 &lt;= game[i], download[i] &lt;= 10^6\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n6 7 6\n1 7 2 4 5 6\n2 3 4 1 5 8 10\n4 3 8\n2 1 5 9\n9 2 4\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>0 4\n2 2\n3 0\n4 3\n5 -1\n2 1\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1:</h5>\n\n<pre><code>In test case one, if we check the pairs, we can see that the maximum permitted memory that we can use is 6. The pairs (0, 4), (2, 2), (3, 0), and (4, 3) sum up to 6 memory usages. Also, download number 5 will alone consume 6 memory. So, pair (6, -1) is also valid.\nIn test case two, the maximum permitted memory usage is 7. Only pair (2, 1) sum up to 7 memory usages.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>3\n2 3 4\n1 3\n3 1 10\n5 6 2\n1 3 5 7 9\n1 3 5 7 9 11\n1 3 5\n3\n1 2 3\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>0 0\n1 1\n0 0\n0 1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 8,
            "dislikes": "NA",
            "rephrased": {
                "body": "Alex has a computer with K memory spaces. He wants to download one document from a list of N available downloads and play one game from a list of M available games. Each download and game consumes a unique amount of memory. The computer can only run one download and one game simultaneously, as long as their combined memory usage doesn't exceed K. Alex wants to maximize the total memory usage by choosing at most one download and at most one game. Find all pairs of (download index, game index) that result in the maximum possible memory usage, considering also the possibility of only choosing a download or a game.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N, M <= 10^5",
                    "1 <= K <= 10^9",
                    "1 <= game[i], download[i] <= 10^6",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "2\n6 7 6\n1 7 2 4 5 6\n2 3 4 1 5 8 10\n4 3 8\n2 1 5 9\n9 2 4",
                        "output": "0 4\n2 2\n3 0\n4 3\n5 -1\n2 1",
                        "explanation": "Test case 1: With K = 6, the maximum memory usage is 6. Pairs (0, 4), (2, 2), (3, 0), (4, 3) all sum to 6. Also, download 5 (index 5) uses 6 memory alone, represented as (5, -1).\nTest case 2: With K = 8, the maximum memory usage is 7. The pair (2, 1) results in 5+2=7 memory usage."
                    },
                    {
                        "input": "3\n2 3 4\n1 3\n3 1 10\n5 6 2\n1 3 5 7 9\n1 3 5 7 9 11\n1 3 5\n3\n1 2 3",
                        "output": "0 0\n1 1\n0 0\n0 1",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you check all possible pairs to come up with the optimal pairs?</p>",
            "<p>Can we use binary search to find the optimal pairs?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}