{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10031,
            "title": "Optimum Location",
            "titleSlug": "optimum-location_1116097",
            "content": "<h4 id=\"you-are-given-a-straight-line-on-a-2d-plane-in-the-form-of-ax-by-c-0-and-an-array-of-points-of-the-form-xi-yi-your-task-is-to-find-a-point-on-the-given-line-for-which-the-sum-of-distances-from-this-point-to-the-given-array-list-of-points-is-minimum\">You are given a straight line on a 2D plane in the form of (ax + by + c = 0) and an array of points of the form (Xi, Yi). Your task is to find a point on the given line for which the sum of distances from this point to the given array/list of points is minimum.</h4>\n\n<h5 id=\"for-example\">For Example :</h5>\n\n<p><img src=\"https://files.codingninjas.in/example-optimum-location-7836.png\" alt=\"optimum_location_example\"></p>\n\n<pre><code>Here the equation for the given line is x - y = 0, i.e. a = 1, b = -1 and c = 0. \nThere are two points, i.e. (-1, 1) and (1, -1).\n\nSo, the point on the line that has minimum distances from the points is (0, 0). The sum of distances is sqrt(1 + 1) + sqrt(1 + 1) = sqrt(2) + sqrt(2) = 2.83 (rounding to 2 decimal digits).\n</code></pre>\n\n<h5 id=\"input-format\">Input format :</h5>\n\n<pre><code>The first line contains an integer &#39;T&#39;, which denotes the number of test cases or queries to be run. Then, the T test cases follow.\n\nThe first line of each test case contains three space-separated integers denoting a, b and c, respectively, representing the equation of the given line as mentioned above.\n\nThe second line of each test case contains a single integer N, denoting the number of coordinates.\n\nThen N lines follow. Each line contains two space-separated integers denoting the x-coordinate and the y-coordinate of the point, respectively.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case, print the minimum possible distance.\nYour answer will be considered correct if its absolute or relative error doesn\u2019t exceed 10^-6.\n\nOutput for each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= N &lt;= 3000\n-100 &lt;= a, b, c, points[i].x, points[i].y &lt;= 100 and (a != 0, b != 0) \n\nTime limit: 1 second\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n3 2 5\n5\n1 -1\n2 3\n4 4\n5 -1\n3 2\n3 1 -4\n4\n1 2\n4 -2\n5 -3\n7 -6\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>24.94\n15.32\n</code></pre>\n\n<h5 id=\"explanation-for-sample-1\">Explanation for sample 1:</h5>\n\n<pre><code>For the first test case, the optimum point is (-0.72, -1.42). \n\nFor the second test case, the optimum point is (2.29, -2.87).\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n-1 2 -4\n4\n-2 1\n2 3\n0 2\n-4 0\n2 -5 4\n5\n2 1\n7 -9\n4 -3\n-5 2\n8 -6\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>8.94\n33.83\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 4,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a straight line in the 2D plane represented by the equation ax + by + c = 0, and a set of points (Xi, Yi), find a point on the line such that the sum of the Euclidean distances from this point to all given points is minimized.",
                "constraints": [
                    "1 <= T <= 100 (Number of test cases)",
                    "1 <= N <= 3000 (Number of points)",
                    "-100 <= a, b, c, points[i].x, points[i].y <= 100",
                    "a != 0, b != 0",
                    "Time limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "3 2 5\n5\n1 -1\n2 3\n4 4\n5 -1\n3 2\n3 1 -4\n4\n1 2\n4 -2\n5 -3\n7 -6",
                        "output": "24.94\n15.32",
                        "explanation": "For the first test case with line 3x + 2y + 5 = 0 and points (1, -1), (2, 3), (4, 4), (5, -1), (3, 2), the optimal point on the line is approximately (-0.72, -1.42), resulting in a minimum sum of distances of 24.94.\n\nFor the second test case with line 3x + y - 4 = 0 and points (1, 2), (4, -2), (5, -3), (7, -6), the optimal point on the line is approximately (2.29, -2.87), resulting in a minimum sum of distances of 15.32."
                    },
                    {
                        "input": "-1 2 -4\n4\n-2 1\n2 3\n0 2\n-4 0\n2 -5 4\n5\n2 1\n7 -9\n4 -3\n-5 2\n8 -6",
                        "output": "8.94\n33.83",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Think of a ternary search approach.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Matrices (2D Arrays)",
                "slug": "matrices-(2d-arrays)"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}