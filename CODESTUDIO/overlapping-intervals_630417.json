{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 7183,
            "title": "Overlapping Intervals",
            "titleSlug": "overlapping-intervals_630417",
            "content": "<h4 id=\"you-have-been-given-the-start-and-end-times-of-n-intervals-write-a-function-to-check-if-any-two-intervals-overlap-with-each-other\">You have been given the start and end times of &#39;N&#39; intervals. Write a function to check if any two intervals overlap with each other.</h4>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>If an interval ends at time T and another interval starts at the same time, they are not considered overlapping intervals.\n</code></pre>\n\n<h5 id=\"input-format\">Input format :</h5>\n\n<pre><code>The first line contains an Integer &#39;T&#39; which denotes the number of test cases or queries to be run. Then the test cases follow.\n\nThe first line of each test case or query contains an integer &#39;N&#39; representing the total number of intervals.\n\nThe second line contains &#39;N&#39; single space-separated integers representing the starting time of the intervals. \n\nThe third line contains &#39;N&#39; single space-separated integers representing the end time of the intervals.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, return true if overlapping intervals are present. Otherwise, return false.\n\nOutput for every test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You do not have to print anything. Just return the boolean value.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10^2\n0 &lt;= N &lt;= 10^5\n0 &lt;= Start[i] &lt;= 10^15\n1 &lt;= End[i] &lt;= 10^15  \n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>1\n3\n1 2 3\n2 3 4\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>false\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1:</h5>\n\n<pre><code>Here, in given intervals [1, 2], [2, 3], [3, 4], there are no overlapping intervals present.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n1\n100\n200\n2\n2 1\n3 4\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>false\ntrue\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 46,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given 'N' intervals, each defined by a start time and an end time, determine if any two intervals overlap. Overlapping is defined as sharing a common time period. Note that if an interval ends at time T and another starts at time T, they are *not* considered overlapping.",
                "constraints": [
                    "1 <= T <= 10^2 (Number of test cases)",
                    "0 <= N <= 10^5 (Number of intervals)",
                    "0 <= Start[i] <= 10^15",
                    "1 <= End[i] <= 10^15",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "1\n3\n1 2 3\n2 3 4",
                        "output": "false",
                        "explanation": "The intervals are [1, 2], [2, 3], and [3, 4].  No two intervals share a common time period; the end of one coincides with the start of the next, which, according to the problem definition, is not considered an overlap."
                    },
                    {
                        "input": "2\n1\n100\n200\n2\n2 1\n3 4",
                        "output": "false\ntrue",
                        "explanation": "Case 1: Only one interval [100, 200], so no overlap.\nCase 2: The intervals are [2, 3] and [1, 4]. Since 1 < 2 < 4, there is overlap as the first interval lies within the second."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>A very naive way to look at this would be to pick an interval and check it with every other interval for overlap.</p>",
            "<p>Can we do something through sorting?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}