{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8943,
            "title": "Painting fences",
            "titleSlug": "painting-fences_920549",
            "content": "<h4 id=\"you-are-given-n-fences-your-task-is-to-find-the-total-number-of-ways-to-paint-fences-using-2-colors-only-such-that-at-most-2-adjacent-fences-are-painted-with-the-same-color\">You are given \u2018N\u2019 fences. Your task is to find the total number of ways to paint fences using 2 colors only such that at most 2 adjacent fences are painted with the same color.</h4>\n\n<h4 id=\"as-the-answer-can-be-too-large-return-the-answer-modulo-10-9-7\">As the answer can be too large, return the answer modulo 10^9 + 7.</h4>\n\n<h5 id=\"for-example\">For Example:</h5>\n\n<pre><code>Consider If N = 2, then there can be 4 different ways to color fences such that at most 2 adjacent fences have the same color-:\n[ [0, 1],\n  [1, 0],\n  [1, 1],\n  [0, 0] ]\nHence, the answer is 4.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 representing the number of test cases.\n\nThe first line of each test case contains a single integer \u2018N\u2019, representing the number of fences.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print a single integer denoting the number of ways to paint the fences modulo 10^9 + 7.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 10^6\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n2\n3\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>4\n6\n</code></pre>\n\n<h5 id=\"explanation\">Explanation:</h5>\n\n<pre><code>For test case 1: \nIn this case, N = 2, so the total number of ways to color fences using 2 colors is 4\n[ [0, 0],\n  [1, 1],\n  [0, 1],\n  [1, 0] ]\nHence, the answer is 4.\n\nFor test case 2: \nIn this case, N = 3, so the total number of ways to color fences using 2 colors is 6.\n[ [0, 1, 1],\n  [1, 0, 0],\n  [0, 1, 0],\n  [1, 0, 1],\n  [0, 0, 1],\n  [1, 1, 0] ]\nHence, the answer is 6.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n4\n5\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>10\n16\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 0,
            "dislikes": "NA",
            "rephrased": {
                "body": "You are given N fences. Your task is to find the total number of ways to paint the fences using 2 colors such that at most 2 adjacent fences are painted with the same color. Since the answer can be very large, return the answer modulo 10^9 + 7.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10^6",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "2\n2\n3",
                        "output": "4\n6",
                        "explanation": "For the first test case, N = 2. The valid colorings are [[0, 0], [1, 1], [0, 1], [1, 0]].  Therefore, the answer is 4.\nFor the second test case, N = 3. The valid colorings are [[0, 1, 1], [1, 0, 0], [0, 1, 0], [1, 0, 1], [0, 0, 1], [1, 1, 0]]. Therefore, the answer is 6."
                    },
                    {
                        "input": "2\n4\n5",
                        "output": "10\n16",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to think of a recursive approach.</p>",
            "<p>Try to optimize the recursive approach.</p>",
            "<p>Try to think of an iterative approach?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}