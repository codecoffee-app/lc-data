{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10738,
            "title": "Palindrome Partitioning with Changes",
            "titleSlug": "palindrome-partitioning-with-changes_1263705",
            "content": "<h4 id=\"on-valentine-s-day-alice-and-bob-planned-to-go-on-a-dinner-date-but-alice-is-still-unsure-about-bob-so-she-decided-to-give-him-a-task-she-gave-him-a-string-s-of-length-n-containing-only-lowercase-english-letters-and-an-integer-k-and-told-him-that-he-could\">On Valentine\u2019s Day, Alice and Bob planned to go on a dinner date, but Alice is still unsure about Bob, so she decided to give him a task. She gave him a string \u2018S\u2019 of length \u2018N\u2019 containing only lowercase English letters and an integer \u2018K\u2019 and told him that he could:</h4>\n\n<pre><code>Change some characters of \u2018S\u2019 to other lowercase letters  (if required).\n\nDivide \u2018S\u2019 into \u2018K\u2019 non-empty disjoint substrings such that each substring is a palindrome.\n</code></pre>\n\n<h4 id=\"she-asked-bob-to-find-the-minimum-number-of-characters-he-needs-to-change-to-divide-the-given-string-in-the-required-condition-since-bob-is-busy-preparing-a-perfect-date-for-her-he-called-you-to-solve-alice-s-challenge-can-you-help-bob-to-impress-her\">She asked Bob to find the minimum number of characters he needs to change to divide the given string in the required condition. Since Bob is busy preparing a perfect date for her, he called you to solve Alice\u2019s challenge. Can you help Bob to impress her?</h4>\n\n<h5 id=\"input-format\">Input Format</h5>\n\n<pre><code>The first line of input contains an integer &#39;T&#39; representing the number of test cases.\n\nThe first line of each test case contains two space-separated integers, \u2018N\u2019 and \u2018K\u2019. Here \u2018N\u2019 denotes the length of the string, and \u2018K\u2019 is an integer given by Alice.\n\nThe next line contains a string \u2018S\u2019 of length \u2018N\u2019. Here \u2018S\u2019 is the string given by Alice to Bob. \n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print a single line containing a single integer denoting the minimum number of characters that Bob needs to change to divide \u2018S\u2019 into \u2018K\u2019 non-empty disjoint palindromic substrings.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= N &lt;= 50\n1 &lt;= K &lt;= N\n\u2018S\u2019 contains only lowercase English letters.\n\nTime limit: 1 sec.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n6 2\ncoding\n6 6\nninjas\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>2\n0\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1:</h5>\n\n<pre><code>Test Case 1 :  \nThe string given by Alice is \u201ccoding\u201d and \u2018K\u2019 = 2\nOne possible way is to change \u2018d\u2019 to \u2018c\u2019 and \u2018g\u2019 to \u2018i\u2019, the resulting string will be \u201ccocini\u201d\n\nNow we can divide the new string into 2 substrings \u201ccoc\u201d and \u201cini\u201d\nSo the minimum required change is 2.\n\nTest Case 2 : \nThe string given by Alice is \u201cninjas\u201d and \u2018K\u2019 = 6\n\nWe can divide the string into 6 substrings of length 1.\nSo the minimum required change is 0.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\n6 3\naabbcc\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>0\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 6,
            "dislikes": "NA",
            "rephrased": {
                "body": "Alice has challenged Bob to a task involving string manipulation. Given a string 'S' of length 'N' consisting of lowercase English letters and an integer 'K', Bob needs to determine the minimum number of character changes required to divide 'S' into 'K' non-empty, disjoint palindromic substrings. Help Bob solve this problem to impress Alice.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= N <= 50",
                    "1 <= K <= N",
                    "\u2018S\u2019 contains only lowercase English letters."
                ],
                "testcases": [
                    {
                        "input": "n = 6, k = 2, s = \"coding\"",
                        "output": "2",
                        "explanation": "One possible solution is to change 'd' to 'c' and 'g' to 'i', resulting in \"cocini\".  This can be divided into palindromes \"coc\" and \"ini\".  Two changes are necessary."
                    },
                    {
                        "input": "n = 6, k = 6, s = \"ninjas\"",
                        "output": "0",
                        "explanation": "The string can be divided into 6 substrings of length 1, each of which is a palindrome. No changes are needed."
                    },
                    {
                        "input": "n = 6, k = 3, s = \"aabbcc\"",
                        "output": "0",
                        "explanation": "The string can be divided into palindromes \"aa\", \"bb\", and \"cc\" with no changes."
                    },
                    {
                        "input": "n = 4, k = 2, s = \"abba\"",
                        "output": "0",
                        "explanation": "The string is already a palindrome. It can be divided into \"ab\" and \"ba\" after changing 'b' to 'a' and 'a' to 'b', however no change is needed as the whole string can be divided by 1 palindrome. A better split is to create \"ab\" and \"ba\". Because \"abba\" is a palindrome already, we can return 0."
                    },
                    {
                        "input": "n = 5, k = 1, s = \"abcde\"",
                        "output": "2",
                        "explanation": "To make the whole string a palindrome, we can make 'b' equal to 'd' and 'a' equal to 'e'.  For example, we have \"edcde\" or \"abcba\", thus need only 2 changes."
                    },
                    {
                        "input": "n = 7, k = 3, s = \"aababca\"",
                        "output": "1",
                        "explanation": "One optimal solution is to change 'c' to 'b', making the string \"aababba\". Then the palindromic substrings can be \"aa\", \"bab\", and \"ba\". "
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you check all possible partitions to divide the given string into exactly \u2018K\u2019 non-empty disjoint substrings?</p>",
            "<p>The problem has overlapping subproblems and optimal substructure, so you can try to think in terms of DP and memorizing some states.</p>",
            "<p>Use Iterative dynamic programming and try to precompute minimum required changes for all substrings in O(N ^ 2)</p>"
        ],
        "relatedTopics": [
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}