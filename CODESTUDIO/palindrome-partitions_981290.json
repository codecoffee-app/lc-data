{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9259,
            "title": "Palindrome Partitions",
            "titleSlug": "palindrome-partitions_981290",
            "content": "<h4 id=\"you-are-given-a-string-s-partition-s-such-that-every-substring-of-the-partition-is-a-palindrome-you-need-to-return-all-possible-palindrome-partitioning-of-s\">You are given a string S, partition S such that every substring of the partition is a palindrome. You need to return all possible palindrome partitioning of S.</h4>\n\n<h4 id=\"note-a-substring-is-a-contiguous-segment-of-a-string\">Note: A substring is a contiguous segment of a string.</h4>\n\n<h5 id=\"for-example\">For Example :</h5>\n\n<pre><code>For a given string \u201cBaaB.\u201d\n3 possible palindrome partitioning of the given string are:\n{\u201cB\u201d, \u201ca\u201d, \u201ca\u201d, \u201cB\u201d}\n{\u201cB\u201d, \u201caa\u201d, \u201cB\u201d}\n{\u201cBaaB\u201d}\nEvery substring of all the above partitions of \u201cBaaB\u201d is a palindrome.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 denoting the number of test cases. The test cases follow.\nThe first line of each test case contains a string S.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>Print each palindromic partition of the given string in a separate line. Print the substrings of a string separated by a single space.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print. It has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 5\n0 &lt;= |S|&lt;= 12\nWhere \u2018T\u2019 denotes the number of test cases, and |S| denotes the length of string S.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\naaC\nbb\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>a a C\naa C\nb b\nbb\n</code></pre>\n\n<h5 id=\"explanation-for-input-1\">Explanation for input 1:</h5>\n\n<pre><code>In the first test case, there are two partitions in which all substrings of the partition are palindromes. The partitions are {\u201ca\u201d, \u201da\u201d, \u201dC\u201d} and {\u201caa\u201d, \u201cC\u201d}.\nIn the second test case, there are two partitions in which all substrings of the partition are palindromes. The partitions are {\u201cb\u201d, \u201db\u201d} and {\u201cbb\u201d}.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\nBaaB\nabc\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>B a a B\nB aa B\nBaaB\na b c\n</code></pre>\n\n<h5 id=\"explanation-for-input-2\">Explanation for input 2:</h5>\n\n<pre><code>In the first test case, there are three partitions in which all substrings of the partition are palindromes. The partitions are {\u201cB\u201d, \u201da\u201d, \u201ca\u201d, \u201dB\u201d}, {\u201cB\u201d, \u201caa\u201d, \u201cB\u201d}, {\u201cBaaB\u201d}.\nIn the second test case, there is only one partition in which all substrings of the partition are palindromes. The partition is {\u201ca\u201d, \u201cb\u201d, \u201cc\u201d}.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": -3,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string S, find all possible ways to partition S such that each substring in the partition is a palindrome. Return all possible palindrome partitions of S.",
                "constraints": [
                    "1 <= T <= 5",
                    "0 <= |S| <= 12",
                    "Where \u2018T\u2019 is the number of test cases, and |S| is the length of the string S.",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "aaC",
                        "output": "a a C\naa C",
                        "explanation": "The palindromic partitions for 'aaC' are {'a', 'a', 'C'} and {'aa', 'C'}.  Each substring in these partitions is a palindrome."
                    },
                    {
                        "input": "bb",
                        "output": "b b\nbb",
                        "explanation": "The palindromic partitions for 'bb' are {'b', 'b'} and {'bb'}.  Each substring in these partitions is a palindrome."
                    },
                    {
                        "input": "BaaB",
                        "output": "B a a B\nB aa B\nBaaB",
                        "explanation": "The palindromic partitions for 'BaaB' are {'B', 'a', 'a', 'B'}, {'B', 'aa', 'B'}, and {'BaaB'}. Each substring in these partitions is a palindrome."
                    },
                    {
                        "input": "abc",
                        "output": "a b c",
                        "explanation": "The only palindromic partition for 'abc' is {'a', 'b', 'c'}. Each substring in this partition is a palindrome."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you try to generate all the partitions using recursion?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Backtracking",
                "slug": "backtracking"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}