{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 13918,
            "title": "Palindromes at Index.",
            "titleSlug": "palindromes-at-index_1822909",
            "content": "<h4 id=\"you-are-given-a-string-s-consisting-of-lowercase-characters-only-an-index-i-and-length-len-your-task-is-to-find-the-count-of-all-palindromic-substrings-in-the-string-s-which-start-at-index-i-and-have-a-length-of-at-least-len\">You are given a string S consisting of lowercase characters only, an index \u2018i\u2019 and length \u2018len\u2019. Your task is to find the count of all palindromic substrings in the string \u2018S\u2019 which start at index \u2018i\u2019 and have a length of at least \u2018len\u2019.</h4>\n\n<h4 id=\"a-string-is-called-palindromic-if-it-reads-the-same-backward-as-forward-ex-aba-is-a-palindrome-but-abaab-is-not-a-palindrome\">A string is called palindromic if it reads the same backward as forward. ex &quot;aba&quot; is a palindrome but &quot;abaab&quot; is not a palindrome.</h4>\n\n<h4 id=\"note-a-substring-is-a-contiguous-non-empty-segment-of-the-string\">Note: A substring is a contiguous non-empty segment of the string.</h4>\n\n<h5 id=\"for-example\">For example:</h5>\n\n<pre><code>String S = ababa\nIndex i = 1\nlen = 3\n\nThe answer to the above test case is 2 since there are two substrings that start at index 1 (1 - based indexing) - \u201caba\u201d, \u201cababa\u201d. Both these have a length of at least 3.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 denoting the number of test cases to be run. Then the test cases follow.\n\nThe first line of each test case contains the string S.\n\nThe next line contains 2 space-separated integers denoting index \u2018i\u2019 and length \u2018len\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print an integer denoting the number of possible strings.\n\nOutput for each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You are not required to print anything; it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= |S| &lt;= 10^4\n1 &lt;= i, len &lt;= N\n\nTime Limit: 1 sec.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\nababa\n1 3\nabaaa\n2 2\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>2\n0\n</code></pre>\n\n<h5 id=\"explanation-for-sample-output-1\">Explanation For Sample Output 1:</h5>\n\n<pre><code>For the first test case aba, ababa are the two palindromic substrings.\n\nFor the second test case there are no palindromic substrings of length greater than 2 beginning with 2nd index.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\naaaaa\n3 1\nabc\n3 3\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>3\n0\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -7,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string `S` consisting of lowercase characters, an index `i` (1-based), and a length `len`, find the number of palindromic substrings of `S` that start at index `i` and have a length of at least `len`. A palindrome is a string that reads the same forwards and backward.  A substring is a contiguous, non-empty segment of the string.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= |S| <= 10^4",
                    "1 <= i, len <= |S|",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "ababa\n1 3",
                        "output": "2",
                        "explanation": "The substrings starting at index 1 (1-based) are 'aba', 'ababa'. Both are palindromes and have a length of at least 3."
                    },
                    {
                        "input": "abaaa\n2 2",
                        "output": "0",
                        "explanation": "The substrings starting at index 2 (1-based) are 'baa', 'baaa'. Neither of these are palindromes."
                    },
                    {
                        "input": "aaaaa\n3 1",
                        "output": "3",
                        "explanation": "The substrings starting at index 3 (1-based) are 'a', 'aa', 'aaa'. All are palindromes and have a length of at least 1."
                    },
                    {
                        "input": "abc\n3 3",
                        "output": "0",
                        "explanation": "The substring starting at index 3 (1-based) is 'c'. It is a palindrome, but its length is not at least 3."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try checking all possible substrings starting at index.</p>",
            "<p>Can we use manacher\u2019s algorithm to compute palindromes quickly?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}