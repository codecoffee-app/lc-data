{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9606,
            "title": "Palindromic Partitioning",
            "titleSlug": "palindromic-partitioning_1063252",
            "content": "<h4 id=\"ninja-contains-a-string-str-he-has-to-partition-the-string-str-into-a-minimum-number-of-partitions-such-that-each-partition-is-a-palindrome\">Ninja contains a string &#39;STR&#39;. He has to partition the string &#39;STR&#39; into a minimum number of partitions such that each partition is a palindrome.</h4>\n\n<h4 id=\"ninja-is-stuck-and-needs-your-help-your-task-is-to-print-the-minimum-number-of-cuts-required-such-that-each-partition-of-the-string-str-is-a-palindrome\">Ninja is stuck and needs your help. Your task is to print the minimum number of cuts required such that each partition of the string &#39;STR&#39; is a palindrome.</h4>\n\n<h4 id=\"for-example\">For example:</h4>\n\n<pre><code>For the string \u201cabc\u201d, we can create 2 partitions and get 3 palindromic strings &quot;a&quot;, &quot;b&quot; and &quot;c&quot;. \n\nFor the string \u201cabbcb\u201d, we can create 2 partitions and get 3 palindrome strings &quot;a&quot;, &quot;b&quot; and &quot;bcb&quot;.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases.\nThe first and only line of each test case contains the string &#39;STR&#39;.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print an integer denoting the minimum number of partitions required such that each partition is a palindrome. \n</code></pre>\n\n<h5 id=\"note\">Note</h5>\n\n<pre><code>You don\u2019t have to print anything, it has already been taken care of. Just complete the function.  \n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;=  | STR | &lt;= 200\nSTR contains lowercase English alphabets only.\n\nWhere \u2018T\u2019 is the total number of test cases and | STR | represents the length of the string STR. \n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2 \nrohit \nabb\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>4\n1\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1:</h5>\n\n<pre><code>In the first test case, the minimum partitions required are 4 which will make palindrome substrings as: \u2018r\u2019, \u2018o\u2019, \u2018h\u2019, \u2018i\u2019 and \u2018t\u2019.\n\nIn the second test case, the minimum partitions required is 1 which will make palindrome substrings as: \u2018a\u2019 and \u2018bb\u2019.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\nabba\naakaashh\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>0\n2\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation For Sample Input 2:</h5>\n\n<pre><code>In the first test case, the given string itself is a palindrome. Thus, there is no need to make any cuts. \n\nIn the second test case, thepartitioned strings are as follows: \u2018aakaa\u2019, \u2018s\u2019 and \u2018hh\u2019.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 0,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string 'STR', find the minimum number of cuts required to partition the string such that each partition is a palindrome.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= |STR| <= 200",
                    "STR contains lowercase English alphabets only.",
                    "Where \u2018T\u2019 is the total number of test cases and | STR | represents the length of the string STR.",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "rohit\nabb",
                        "output": "4\n1",
                        "explanation": "For the string \"rohit\", the minimum partitions required are 4, resulting in the palindromic substrings 'r', 'o', 'h', 'i', and 't'.  For the string \"abb\", the minimum partitions required is 1, resulting in the palindromic substrings 'a' and 'bb'."
                    },
                    {
                        "input": "abba\naakaashh",
                        "output": "0\n2",
                        "explanation": "For the string \"abba\", the string itself is a palindrome, so no cuts are needed. For the string \"aakaashh\", the string can be partitioned into 'aakaa', 's', and 'hh'."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you do this recursively? Try to solve the problem by solving its subproblems first.</p>",
            "<p>Can you optimise the previous approach? Try to memoize the subproblems.&nbsp;</p>",
            "<p>Can you solve the small problem first and then reach the final answer?</p>",
            "<p>Can you optimize the previous approach by precomputing the palindromic result of every substring?&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}