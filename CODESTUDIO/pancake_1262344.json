{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10661,
            "title": "pancake",
            "titleSlug": "pancake_1262344",
            "content": "<h4 id=\"you-are-given-an-array-of-integers-arr-sort-the-array-by-performing-a-series-of-pancake-flips-in-one-pancake-flip-we-do-the-following-steps\">You are given an array of integers \u2018ARR\u2019. Sort the array by performing a series of pancake flips. In one pancake flip, we do the following steps:</h4>\n\n<pre><code>Choose an integer \u2018K\u2019 where 1 &lt;= \u2018K\u2019 &lt;= ARR.LENGTH.\nReverse the sub-array ARR[0, , ,K-1] (0-indexed).\n</code></pre>\n\n<h4 id=\"your-task-is-to-sort-the-array-and-return-all-the-series-of-positions-from-where-you-flipped-the-array\">Your task is to sort the array and return all the series of positions from where you flipped the array.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>1. The array given will have elements between 1 to \u2018N\u2019, where N is the size of the array, and all elements of the array will be unique.\n2. Any valid answer that sorts the array within 10 * array\u2019s length flips will be judged as correct.\n3. If the array is already sorted return an empty list. \n</code></pre>\n\n<h4 id=\"for-example\">For example:</h4>\n\n<pre><code>If ARR = [3,2,1] and we performed a pancake flip choosing K = 3, we reverse the sub-array [3,2,1], so ARR = [1,2,3] .  Hence the array becomes sorted therefore return {3}.\n</code></pre>\n\n<h4 id=\"input-format\">Input format :</h4>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases.\n\nThe first line of each test case contains a single integer N, where \u2018N\u2019 is the number of elements of the array.\n\nThe second line of each test case contains \u2018N\u2019 space-separated integers, denoting the array elements.\n</code></pre>\n\n<h4 id=\"output-format\">Output format :</h4>\n\n<pre><code>For each test case, return the sequence of flips made.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You don\u2019t need to print anything. You just need to implement the given function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints:</h4>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;=  N &lt;= 100\n1 &lt;= ARR[i] &lt; N\n\nTime Limit: 1 second\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1 :</h4>\n\n<pre><code>2\n3\n3 2 1 \n4\n4 1 2 3 \n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1 :</h4>\n\n<pre><code>3\n4 3\n</code></pre>\n\n<h4 id=\"explanation-of-the-sample-input-1\">Explanation of the Sample Input 1:</h4>\n\n<pre><code>For the first test case:\nWe performed a pancake flip choosing K = 3, we reverse the sub-array [3,2,1], so ARR = [1,2,3] .  Hence the array becomes sorted.\n\nFor the second test case:\nWe first chose index 4, which made the array after reversing [3, 2, 1, 4]. Then we chose index 3 and reversed it hence giving the array [1, 2, 3, 4], which is sorted.\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2 :</h4>\n\n<pre><code>2\n4\n3 4 1 2 \n5\n5 3 4 1 2\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2 :</h4>\n\n<pre><code>2 4 2 \n5 3 4 3\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 5,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of unique integers from 1 to N, sort the array using pancake flips. A pancake flip involves choosing an integer K (1 <= K <= ARR.length) and reversing the subarray ARR[0...K-1]. Return the sequence of K values representing the flips performed to sort the array.  The array elements will be between 1 to \u2018N\u2019, where N is the size of the array, and all elements of the array will be unique.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= N <= 100",
                    "1 <= ARR[i] <= N"
                ],
                "testcases": [
                    {
                        "input": "n = 3, arr = [3, 2, 1]",
                        "output": "3",
                        "explanation": "Flipping with K=3 reverses the array to [1, 2, 3], which is sorted."
                    },
                    {
                        "input": "n = 4, arr = [4, 1, 2, 3]",
                        "output": "4 3",
                        "explanation": "Flipping with K=4 reverses the array to [3, 2, 1, 4]. Then, flipping with K=3 reverses it to [1, 2, 3, 4], which is sorted."
                    },
                    {
                        "input": "n = 4, arr = [3, 4, 1, 2]",
                        "output": "2 4 2",
                        "explanation": "Flipping with K=2 reverses the array to [4, 3, 1, 2]. Flipping with K=4 reverses the array to [2, 1, 3, 4]. Finally, flipping with K=2 gives [1,2,3,4]."
                    },
                    {
                        "input": "n = 5, arr = [5, 3, 4, 1, 2]",
                        "output": "5 3 4 3",
                        "explanation": "Multiple flips are required to sort the array. The specific flips needed would result in sorting the array."
                    },
                    {
                        "input": "n = 4, arr = [1, 2, 3, 4]",
                        "output": "",
                        "explanation": "The array is already sorted, so no flips are needed. Returns an empty list."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Fix one element at a time.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}