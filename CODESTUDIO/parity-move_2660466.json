{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 15624,
            "title": "Parity Move",
            "titleSlug": "parity-move_2660466",
            "content": "<h4 id=\"ninja-recently-studied-odd-and-even-numbers-but-he-is-more-interested-in-even-numbers\">Ninja recently studied odd and even numbers but he is more interested in even numbers.</h4>\n\n<h4 id=\"he-has-an-array-a-containing-n-integers-he-will-transform-this-array-by-moving-all-the-even-numbers-at-the-beginning-of-the-array-and-all-the-odd-numbers-at-the-end-of-the-array\">He has an array \u2018A\u2019 containing \u2018N\u2019 integers. He will transform this array by moving all the even numbers at the beginning of the array and all the odd numbers at the end of the array.</h4>\n\n<h4 id=\"output-the-final-array-after-transformation-if-there-are-multiple-transformations-possible-for-the-array-output-any\">Output the final array after transformation. If there are multiple transformations possible for the array, output any.</h4>\n\n<h5 id=\"example\">Example :</h5>\n\n<pre><code>N = 4\nA = [ 1, 4, 3, 2 ]\n\nExplanation : \n\nThe even numbers are : 4, 2.\nThe odd numbers are : 1, 3.\nThe final array \u2018A\u2019 is : [ 4, 2, 1, 3 ].\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains an integer &#39;T&#39; which denotes the number of test cases to be run. Then the test cases follow.\n\nThe first line of each test case contains an integer \u2018N\u2019.\n\nThe next line contains \u2018N\u2019 integers denoting the elements of array \u2018A\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case, print the final array after transformation.\n\nPrint the output of each test case in a new line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don\u2019t need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1\u2009&lt;= N &lt;= 10^5\n1 &lt;= A[i] &lt;= 10^5\nSum of N over all Test cases &lt;= 10^5\n\nTime Limit : 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n2\n1 1\n3\n3 2 4\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>1 1\n2 4 3\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1 :</h5>\n\n<pre><code>For test case 1 we have, \n\nThere are no even numbers and only odd numbers. \n\nSo, the array remains the same.\n\nFor test case 2 we have,\n\nThe even numbers are : 2, 4.\n\nThe odd numbers are : 3.\n\nArray \u2018A\u2019 after transformation : [ 2, 4, 3 ].\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n2\n7 2 \n5\n4 1 7 5 1 \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>2 7\n4 1 5 1 7\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 7,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of integers, rearrange the elements such that all even numbers appear at the beginning of the array, followed by all odd numbers. Return the modified array. The order of even numbers and the order of odd numbers need not be preserved.",
                "constraints": [
                    "1 <= T <= 10",
                    "1\u2009<= N <= 10^5",
                    "1 <= A[i] <= 10^5",
                    "Sum of N over all Test cases <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "n = 2, nums = [1, 1]",
                        "output": "[1, 1]",
                        "explanation": "There are no even numbers, so the array remains unchanged."
                    },
                    {
                        "input": "n = 3, nums = [3, 2, 4]",
                        "output": "[2, 4, 3]",
                        "explanation": "The even numbers are 2 and 4. The odd number is 3. The array is transformed to have even numbers first, followed by odd numbers."
                    },
                    {
                        "input": "n = 4, nums = [1, 4, 3, 2]",
                        "output": "[4, 2, 1, 3]",
                        "explanation": "The even numbers are 4 and 2. The odd numbers are 1 and 3. The array is transformed to have even numbers first, followed by odd numbers."
                    },
                    {
                        "input": "n = 2, nums = [7, 2]",
                        "output": "[2, 7]",
                        "explanation": "The even number is 2. The odd number is 7. The array is transformed to have even numbers first, followed by odd numbers."
                    },
                    {
                        "input": "n = 5, nums = [4, 1, 7, 5, 1]",
                        "output": "[4, 1, 7, 5, 1]",
                        "explanation": "The even number is 4. The odd numbers are 1, 7, 5, and 1. The array is transformed to have the even number first, followed by odd numbers."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you implement a comparator that prioritizes even numbers.</p>",
            "<p>Separate even numbers and odd numbers.</p><p>&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}