{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10609,
            "title": "partition list",
            "titleSlug": "partition-list_1235224",
            "content": "<h4 id=\"you-are-given-a-singly-linked-list-of-integers-with-a-head-pointer-every-node-of-the-linked-list-has-a-value-written-on-it\">You are given a Singly Linked List of integers with a head pointer. Every node of the Linked List has a value written on it.</h4>\n\n<h4 id=\"a-sample-linked-list\">A sample Linked List</h4>\n\n<p><img src=\"https://files.codingninjas.in/1-8313.jpg\" alt=\"1\"></p>\n\n<h4 id=\"now-you-have-been-given-an-integer-value-k-your-task-is-to-rearrange-this-linked-list-such-that-the-following-conditions-hold-true\">Now you have been given an integer value \u2018K\u2019. Your task is to rearrange this linked list such that the following conditions hold true :</h4>\n\n<h4 id=\"1-all-nodes-that-have-a-value-less-than-k-must-come-before-the-nodes-that-have-a-value-greater-than-equal-to-k\">1. All nodes that have a value less than \u2018K\u2019 must come before the nodes that have a value greater than equal to \u2018K\u2019.</h4>\n\n<h4 id=\"2-all-nodes-must-maintain-the-original-relative-order-as-they-have-present-in-the-original-linked-list-after-rearrangement\">2. All nodes must maintain the original relative order as they have present in the original linked list after rearrangement.</h4>\n\n<h4 id=\"input-format\">Input Format:</h4>\n\n<pre><code>The first line of the input contains an integer \u2018T\u2019 representing the number of test cases.\n\nThe first line of each test case contains space-separated integers denoting the values of nodes of the Linked List. The Linked List is terminated with -1. Hence, -1 is never a node value of the Linked List.\n\nThe second line of each test case contains a single integer \u2018K\u2019.\n</code></pre>\n\n<h4 id=\"output-format\">Output Format:</h4>\n\n<pre><code>For each test case return space-separated integers denoting the values of nodes of the Linked List.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints:</h4>\n\n<pre><code>1 &lt;= T &lt;= 5\n0 &lt;= N &lt;= 5*10^4\n1 &lt;= DATA &lt;= 10^9 and DATA != -1\n1 &lt;= K &lt;= 10^9   \n\nTime Limit: 1 sec\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1:</h4>\n\n<pre><code>2\n3 6 2 7 9 -1\n6\n1 3 8 7 -1\n8\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1:</h4>\n\n<pre><code>3 2 6 7 9\n1 3 7 8\n</code></pre>\n\n<h4 id=\"explanation-for-sample-input-1\">Explanation for sample input 1:</h4>\n\n<pre><code>Test case 1:\nThe given linked list is shown below and K = 6.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/2-8314.jpg\" alt=\"2\"></p>\n\n<pre><code>We can rearrange this linked as 3 -&gt; 2 -&gt; 6 -&gt; 7 -&gt; 9\nNodes having a value less than \u2018K\u2019 = [3, 2]\nNodes having a value greater than or equal to \u2018K\u2019 = [6, 7, 9]\nHere [3, 2] comes before [6, 7, 9], therefore, the final list will be [3, 2, 6, 7, 9].\n\nTest case 2:\nThe given linked list is shown below and K = 8.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/3-8315.jpg\" alt=\"3\"></p>\n\n<pre><code>We can rearrange this linked as 1 -&gt; 3 -&gt; 7 -&gt; 8\nNodes having a value less than \u2018K\u2019 = [1, 3, 7]\nNodes having a value greater than or equal to \u2018K\u2019 = [8]\nHere [1, 3, 7] comes before [8], therefore, the final list will be [1, 3, 7, 8].\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2:</h4>\n\n<pre><code>1\n1 2 3 7 -1\n5\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2:</h4>\n\n<pre><code> 1 2 3 7\n</code></pre>\n\n<h4 id=\"explanation-for-sample-input-1\">Explanation for sample input 1:</h4>\n\n<pre><code>Test case 1:\nThe given linked list is shown below and K = 5\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/4-8316.jpg\" alt=\"4\"></p>\n\n<pre><code>We can rearrange this linked as 1 -&gt; 2 -&gt; 3 -&gt; 7\nNodes having value less than \u2018K\u2019 = [1, 2, 3]\nNodes having value greater than or equal to \u2018K\u2019 = [7]\nHere [1, 2, 3] comes before [7],  therefore, the final list will be [1, 2, 3, 7].\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": -3,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a singly linked list of integers and an integer 'K', rearrange the linked list such that all nodes with values less than 'K' come before nodes with values greater than or equal to 'K'. The original relative order of the nodes must be maintained after rearrangement.",
                "constraints": [
                    "1 <= T <= 5",
                    "0 <= N <= 5 * 10^4",
                    "1 <= DATA <= 10^9 and DATA != -1",
                    "1 <= K <= 10^9",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "3 6 2 7 9 -1\n6",
                        "output": "3 2 6 7 9",
                        "explanation": "The linked list is rearranged such that elements less than 6 (3, 2) come before elements greater than or equal to 6 (6, 7, 9), preserving the original order within each group."
                    },
                    {
                        "input": "1 3 8 7 -1\n8",
                        "output": "1 3 7 8",
                        "explanation": "The linked list is rearranged such that elements less than 8 (1, 3, 7) come before elements greater than or equal to 8 (8), preserving the original order within each group."
                    },
                    {
                        "input": "1 2 3 7 -1\n5",
                        "output": "1 2 3 7",
                        "explanation": "The linked list is rearranged such that elements less than 5 (1, 2, 3) come before elements greater than or equal to 5 (7), preserving the original order within each group."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Make two-pointers and store all nodes that have values less than \u2018K\u2019 in one pointer and all nodes that have values greater or equal to \u2018K\u2019 in another pointer.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Linked List",
                "slug": "linked-list"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}