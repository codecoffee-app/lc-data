{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9295,
            "title": "Partition String",
            "titleSlug": "partition-string_982762",
            "content": "<h4 id=\"given-a-string-s-of-lowercase-english-letters-your-task-is-to-partition-the-list-in-as-many-parts-as-possible-such-that-each-letter-appears-in-at-most-one-part-and-return-a-list-of-integers-representing-the-size-of-these-parts\">Given a string S of lowercase English letters, your task is to partition the list in as many parts as possible such that each letter appears in at most one part, and return a list of integers representing the size of these parts.</h4>\n\n<h5 id=\"note\">Note</h5>\n\n<pre><code>You don\u2019t have to print anything, it has already been taken care of. Just implement the function. \nThe string will contain lowercase alphabets only. \n</code></pre>\n\n<h5 id=\"input-format\">Input format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases.\n\nThe first and only line of each test case contains string S.. \n</code></pre>\n\n<h5 id=\"output-format\">Output Format</h5>\n\n<pre><code>For each test case, the list containing the size of partitions will be printed.\n\nThe output of each test case is printed in a separate line.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;=  N &lt;= 5 * 10^4    \nWhere \u2018T\u2019 is the total number of test cases and N represents the length of the string S. \n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1 \naaababcc\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>6 2\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of sample input 1:</h5>\n\n<pre><code>The partitions are &quot;aaabab&quot; , &quot;cc&quot;. The partitions are such that &#39;a&#39; and &#39;b&#39; appear only in the first part and &#39;c&#39; appears only in the second part.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\nababcbacadefegdehijhklij\nbbbbbb\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>9 7 8\n6\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-2\">Explanation of sample input 2:</h5>\n\n<pre><code>Test Case 1: \nThe partitions are &quot;ababcbaca&quot; , &quot;defegde&quot; , \n&quot;hijhklij&quot;.    \n\nTest Case 2: \nThe partition is &quot;bbbbbb&quot;. \n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 0,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string `S` consisting of lowercase English letters, partition it into as many parts as possible such that each letter appears in at most one part. Return a list of integers representing the sizes of these parts.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 5 * 10^4",
                    "Where \u2018T\u2019 is the total number of test cases and N represents the length of the string S."
                ],
                "testcases": [
                    {
                        "input": "aaababcc",
                        "output": "6 2",
                        "explanation": "The optimal partitions are \"aaabab\" and \"cc\".  All occurrences of 'a' and 'b' are contained within the first partition, and all occurrences of 'c' are contained within the second partition. No character appears in more than one partition."
                    },
                    {
                        "input": "ababcbacadefegdehijhklij",
                        "output": "9 7 8",
                        "explanation": "The optimal partitions are \"ababcbaca\", \"defegde\", and \"hijhklij\". Each character appears in only one partition."
                    },
                    {
                        "input": "bbbbbb",
                        "output": "6",
                        "explanation": "The optimal partition is \"bbbbbb\"."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><strong>&nbsp;</strong>Find the start and end index for every partition.&nbsp;</p>",
            "<p>Find the first and last occurrence of each character to make intervals and merge them.</p>",
            "<p>Instead of merging intervals after finding all the intervals, find merged intervals.&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}