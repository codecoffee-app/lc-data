{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8312,
            "title": "Partition to K equal sum subsets",
            "titleSlug": "partition-to-k-equal-sum-subsets_843262",
            "content": "<h4 id=\"you-are-given-an-array-of-n-integers-and-a-positive-integer-k-you-need-to-determine-if-it-is-possible-to-divide-the-array-into-k-non-empty-subsets-such-that-the-sum-of-elements-of-each-subset-is-equal\">You are given an array of &#39;N&#39; integers, and a positive integer &#39;K&#39;. You need to determine if it is possible to divide the array into &#39;K&#39; non-empty subsets such that the sum of elements of each subset is equal.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>1. The array can have duplicate elements.\n\n2. Each of the array elements must belong to exactly one of the &#39;K&#39; subsets.\n\n3. The elements chosen for a subset may not be contiguous in the array.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of the input contains an integer &#39;T&#39;, denoting the number of test cases. \n\nThe first line of each test case will contain an integer &#39;N&#39;, denoting the size of the input array.\n\nThe second line of each test case will contain &#39;N&#39; space-separated integers denoting the array elements.\n\nThe third and last line of each input will contain the value &#39;K&#39;, which denotes the number of non-empty subsets you have to break the input array into.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print a single line containing \u201cTrue\u201d if it is possible to divide the array into \u2018K&#39; equal sum subsets, \u201cFalse\u201d otherwise. \n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of.  Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 15\n0 &lt;= NUMS[i] &lt;= 10 ^ 3\n1 &lt;= K &lt;= N\n\nWhere NUMS[i] denotes ith element of given array &#39;NUMS&#39;.\n\nTime Limit: 1 sec.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1\n8\n4 3 1 3 4 3 1 2 \n3\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>True\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for sample input 1:</h5>\n\n<pre><code>It&#39;s possible to divide it into 3 subsets (4, 3), (1, 3, 3), (4, 2, 1) with equal sum = 7.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\n7\n5 1 2 6 7 1 2\n4\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>False\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 29,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array 'N' of integers and a positive integer 'K', determine if it's possible to divide the array into 'K' non-empty subsets such that the sum of elements in each subset is equal. Each element must belong to exactly one subset and the elements chosen for a subset don't need to be contiguous.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 15",
                    "0 <= NUMS[i] <= 10 ^ 3",
                    "1 <= K <= N",
                    "Where NUMS[i] denotes ith element of given array 'NUMS'.",
                    "Time Limit: 1 sec."
                ],
                "testcases": [
                    {
                        "input": "8\n4 3 1 3 4 3 1 2\n3",
                        "output": "True",
                        "explanation": "The array can be divided into 3 subsets: (4, 3), (1, 3, 3), and (4, 2, 1), each having a sum of 7."
                    },
                    {
                        "input": "7\n5 1 2 6 7 1 2\n4",
                        "output": "False",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try all possible combinations of \u2018K\u2019 subsets.</p>",
            "<p>Try to find which possible subsets are present.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Depth-first Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}