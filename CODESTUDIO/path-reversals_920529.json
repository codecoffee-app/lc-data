{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8924,
            "title": "Path reversals",
            "titleSlug": "path-reversals_920529",
            "content": "<h4 id=\"you-are-given-a-directed-graph-and-two-nodes-s-and-d-denoting-the-start-and-end-node-your-task-is-to-find-the-minimum-number-of-edges-that-you-have-to-reverse-to-find-the-path-from-nodes-s-to-d\">You are given a directed graph and two nodes, \u2018S\u2019 and \u2018D\u2019, denoting the start and end node. Your task is to find the minimum number of edges that you have to reverse to find the path from nodes &#39;S&#39; to &#39;D&#39;.</h4>\n\n<h5 id=\"for-example\">For example:</h5>\n\n<p><img src=\"https://ninjasfiles.s3.amazonaws.com/asset_0000000000000465_1625593540_directedGraph.png\" alt=\"graph1\"></p>\n\n<pre><code>Let&#39;s consider &#39;S&#39; = 0 and &#39;D&#39; = 4. In the above graph, the path from nodes 0 to 4 can be created by only reversing the edge (0, 5). Hence, the answer is 1.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 representing the number of test cases.\n\nThe first line of each test case contains two space-separated integers, \u2018N\u2019 and \u2018M\u2019, representing the number of nodes and edges in the graph.\n\nThe following M lines of the test case contain two space-separated integers, \u2018A\u2019 and \u2018B\u2019, representing an edge from node \u2018A\u2019 to node \u2018B\u2019.\n\nThe last line of the test case contains two space-separated integers, \u2018S\u2019 and \u2018D\u2019, denoting the start and end node.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print a single integer, i.e., the minimum number of edges to be reversed, so the path exists from \u2018S\u2019 to \u2018D\u2019.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 5\n2 &lt;= N &lt;= 10^5\nN - 1 &lt;= M &lt;= 10^5\n0 &lt;= A, B &lt; N\n0 &lt;= S, D &lt; N\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n6 7\n5 0\n1 0\n5 3 \n2 1\n2 3\n5 4 \n3 4\n0 4\n4 4\n0 1\n1 2\n1 3\n0 3\n3 0\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>1\n1\n</code></pre>\n\n<h5 id=\"explanation\">Explanation:</h5>\n\n<p><img src=\"https://ninjasfiles.s3.amazonaws.com/asset_0000000000000465_1625593540_directedGraph.png\" alt=\"graph1\"></p>\n\n<pre><code>For the first test case, the only edge that needs to be reversed is (5,0), so that path exists from nodes 0 to 4. Hence, the answer is 1.\n</code></pre>\n\n<p><img src=\"https://ninjasfiles.s3.amazonaws.com/asset_0000000000000466_1625638835_UntitledDiagram.png\" alt=\"graph2\"></p>\n\n<pre><code>For the second test case, only one edge (0, 3) needs to be reversed so that path exists from nodes 3 to 0. Hence, the answer is 1. \n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n6 5\n1 0\n2 3\n4 1\n3 5\n5 1\n0 4\n5 4\n4 1\n2 0\n2 1\n2 4\n0 4\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>2\n1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -1,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a directed graph with 'N' nodes and 'M' edges, and two nodes 'S' (start) and 'D' (destination), find the minimum number of edges that need to be reversed to create a path from 'S' to 'D'.",
                "constraints": [
                    "1 <= T <= 5",
                    "2 <= N <= 10^5",
                    "N - 1 <= M <= 10^5",
                    "0 <= A, B < N",
                    "0 <= S, D < N",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "6 7\n5 0\n1 0\n5 3 \n2 1\n2 3\n5 4 \n3 4\n0 4",
                        "output": "1",
                        "explanation": "To create a path from node 0 to node 4, reversing the edge (5, 0) is sufficient. This allows a path like 0 -> 5 (reversed edge) -> 3 -> 4. Therefore, the minimum number of reversals is 1."
                    },
                    {
                        "input": "4 4\n0 1\n1 2\n1 3\n0 3\n3 0",
                        "output": "1",
                        "explanation": "To create a path from node 3 to node 0, reversing the edge (0, 3) is sufficient. This creates a path 3 -> 0 (reversed edge). Therefore, the minimum number of reversals is 1."
                    },
                    {
                        "input": "6 5\n1 0\n2 3\n4 1\n3 5\n5 1\n0 4",
                        "output": "2",
                        "explanation": "One possible solution: Reverse the edge (1,0) and (4,1). This makes a path from 0 -> 1 -> 4. Therefore, the minimum number of reversals is 2."
                    },
                    {
                        "input": "5 4\n4 1\n2 0\n2 1\n2 4\n0 4",
                        "output": "1",
                        "explanation": "Reverse (4,1) this allows a path of 0->4 with 1 reversal"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try adding reverse edges.&nbsp;</p>",
            "<p>Try to find a faster way to get the shortest path.&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}