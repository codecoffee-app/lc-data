{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10449,
            "title": "Path Sum IV",
            "titleSlug": "path-sum-iv_1229382",
            "content": "<h4 id=\"you-are-given-an-array-a-of-length-n-consisting-of-three-digit-integers-in-ascending-order-you-can-construct-a-binary-tree-from-these-integers-all-integers-are-of-form-dpv-3-digits-where-d-tells-depth-in-the-tree-p-tells-position-in-the-tree-and-v-tells-value-in-this-position\">You are given an array &#39;A&#39; of length &#39;N&#39; consisting of three-digit integers in ascending order. You can construct a binary tree from these integers. All integers are of form DPV (3 digits), where &#39;D&#39; tells depth in the tree, &#39;P&#39; tells position in the tree, and &#39;V&#39; tells value in this position.</h4>\n\n<p><img src=\"https://ninjasfiles.s3.amazonaws.com/asset_0000000000000275_1615028968_graph1.png\" alt=\"binary-tree\"></p>\n\n<h4 id=\"for-example\">For Example:</h4>\n\n<pre><code>215 means value 5 is in position 1 at depth 2.\n</code></pre>\n\n<h4 id=\"your-task-in-the-problem-is-to-find-the-sum-of-all-paths-from-node-to-leaf\">Your task in the problem is to find the sum of all paths from node to leaf.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>The maximum depth allowed is 4, i.e. the maximum number of positions can be 8 ( or 2 ^ (4 - 1)).\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of the input contains \u2018T\u2019 denoting the number of test cases.\n\nThe first line of each test case contains an integer \u2018N\u2019, representing the length of the array.\n\nThe second line of each test case contains N space-separated integers of the array A. \n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case print a single line containing a single integer denoting the sum of all paths from the root node.\n\nThe output of each test case is printed on a new line.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 150\n100 &lt;= A[i] &lt;= 999 \n1 &lt;= D &lt;= 4\n1 &lt;= P &lt;= 8\n0 &lt;= V &lt;= 9\n\nWhere \u2018T\u2019 denotes the number of test cases and &#39;N&#39; denotes the length of array &#39;A&#39;.\n\nTime limit: 1 sec.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n3\n113 215 221\n2\n113 221\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>12\n4\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1:</h5>\n\n<pre><code>For test case 1:\n</code></pre>\n\n<p><img src=\"https://ninjasfiles.s3.amazonaws.com/asset_0000000000000277_1615032637_tree2.png\" alt=\"binary-tree\"></p>\n\n<pre><code>The path sum is (3 + 5) + (3 + 1) = 12.\n\nFor test case 2:\n</code></pre>\n\n<p><img src=\"https://ninjasfiles.s3.amazonaws.com/asset_0000000000000276_1615032625_tree1.png\" alt=\"binary-tree\"></p>\n\n<pre><code>The path sum is (3 + 1) = 4.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n3\n115 217 322 \n4\n117 212 313 421 \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>14\n13\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 5,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array 'A' of three-digit integers representing a binary tree, where each integer is in the form DPV (Depth, Position, Value), calculate the sum of all paths from the root node to the leaf nodes in the tree. The array 'A' is sorted in ascending order based on the DPV representation. The maximum depth of the tree is 4.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 150",
                    "100 <= A[i] <= 999"
                ],
                "testcases": [
                    {
                        "input": "n = 3, a = [113, 215, 221]",
                        "output": "12",
                        "explanation": "The tree formed is: 3 at depth 1, position 1; 5 at depth 2, position 1; and 1 at depth 2, position 2.  The path sum is (3 + 5) + (3 + 1) = 12."
                    },
                    {
                        "input": "n = 2, a = [113, 221]",
                        "output": "4",
                        "explanation": "The tree formed is: 3 at depth 1, position 1; and 1 at depth 2, position 2. The path sum is (3 + 1) = 4."
                    },
                    {
                        "input": "n = 3, a = [115, 217, 322]",
                        "output": "14",
                        "explanation": "The tree formed is: 5 at depth 1, position 1; 7 at depth 2, position 1; and 2 at depth 3 position 2.  The path sum is (5 + 7 + 2) = 14."
                    },
                    {
                        "input": "n = 4, a = [117, 212, 313, 421]",
                        "output": "13",
                        "explanation": "The tree formed is: 7 at depth 1, position 1; 2 at depth 2, position 1; 3 at depth 3 position 1; 1 at depth 4 position 2. The path sum is (7 + 2 + 3 + 1) = 13."
                    },
                    {
                        "input": "n = 1, a = [115]",
                        "output": "5",
                        "explanation": "The tree consists only of the root node with value 5. The path sum is simply 5."
                    },
                    {
                        "input": "n = 5, a = [111, 211, 221, 311, 321]",
                        "output": "3",
                        "explanation": "The tree formed is: 1 at depth 1, position 1; 1 at depth 2, position 1; 1 at depth 2, position 2; 1 at depth 3 position 1; 1 at depth 3 position 2. Path 1: 1+1+1=3, Path 2: 1+1+1=3. Total paths sum is (1+1) + (1+1) = 2."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can we use DFS approach?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Depth-first Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Trees",
                "slug": "binary-trees"
            },
            {
                "name": "Trees",
                "slug": "trees"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}