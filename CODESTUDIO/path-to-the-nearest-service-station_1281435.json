{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10995,
            "title": "Path to the nearest service station",
            "titleSlug": "path-to-the-nearest-service-station_1281435",
            "content": "<h4 id=\"ninja-was-supposed-to-go-on-a-road-trip-with-his-friends-but-his-car-was-damaged-ninja-wants-to-repair-it-as-soon-as-possible-help-ninja-to-find-the-nearest-service-station-you-are-given-a-character-matrix-grid-of-size-n-x-m-the-grid-contains-the-following-characters-n-represents-the-ninja-s-location-there-is-exactly-one-cell-with-the-character-n-in-it-s-represents-a-service-station-the-grid-can-have-multiple-s-cells-0-o-is-a-free-space-and-the-ninja-can-travel-through-these-cells-x-is-an-obstacle-and-the-ninja-cannot-travel-through-these-cells\">Ninja was supposed to go on a road trip with his friends, but his car was damaged. Ninja wants to repair it as soon as possible. Help ninja to find the nearest service station. You are given a character matrix, \u2018GRID\u2019 of size \u2018N x M\u2019. The \u2018grid\u2019 contains the following characters:<ul><li>\u2018N\u2019 represents the ninja\u2019s location. There is exactly one cell with the character \u2018N\u2019 in it.</li><li>\u2018S\u2019 represents a service station. The \u2018GRID\u2019 can have multiple \u2018S\u2019 cells (&gt;= 0).</li><li>\u2018O\u2019 is a free space, and the ninja can travel through these cells</li><li>\u2018X\u2019 is an obstacle, and the ninja cannot travel through these cells.</li></ul></h4>\n\n<h4 id=\"the-ninja-can-only-travel-to-adjacent-free-cells-from-his-current-location-i-e-in-the-north-south-east-or-west-direction-your-task-is-to-find-the-length-of-the-shortest-path-through-which-the-ninja-can-get-to-a-service-station-if-there-is-no-such-path-available-return-1\">The Ninja can only travel to adjacent free cells from his current location, i.e., in the North, South, East, or West direction. Your task is to find the length of the shortest path through which the Ninja can get to a service station. If there is no such path available, return -1.</h4>\n\n<h5 id=\"example\">Example:</h5>\n\n<pre><code>\u2018N\u2019 = 4, \u2018M\u2019 = 6\nGiven \u2018GRID\u2019:\n(Empty cells represent the character \u2018O\u2019)\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/example-path-to-the-nearest-station-8614.png\" alt=\"example\"></p>\n\n<pre><code>The Ninja can reach the nearest service station by moving two cells south and then three cells east. So, the answer is \u20185\u2019.\n</code></pre>\n\n<h5 id=\"input-format\">Input format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 which denotes the number of test cases. Then, the \u2018T\u2019 test cases follow.\n\nEach test case\u2019s first line contains two space-separated integers, \u2018N\u2019 and \u2018M\u2019, denoting the number of rows and columns in the \u2018GRID\u2019.\n\nThe next \u2018N\u2019 lines contain \u2018M\u2019 characters denoting the elements of the &#39;GRID&#39;.\n</code></pre>\n\n<h5 id=\"output-format\">Output format:</h5>\n\n<pre><code>For every test case, return the length of the shortest path to a service station. If no such path is available, return -1;\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N, M &lt;= 100\nValue in each element of \u2018GRID\u2019 = {\u2018N\u2019, \u2018S\u2019, \u2018O\u2019, \u2018X\u2019}\n\nTime limit: 1 second\n</code></pre>\n<h4 id=\"sample-input-1\">Sample input 1:</h4>\n\n<pre><code>2\n5 8\nX X X X X X X X \nX N O X O O S X \nX O O X O X X X \nX O O O O O S X \nX X X X X X X X \n5 6\nX X X X X X \nX N O X S X \nX O O X O X \nX O X S O X \nX X X X X X \n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample output 1:</h4>\n\n<pre><code>7\n-1    \n</code></pre>\n\n<h4 id=\"explanation-of-sample-input-1\">Explanation of sample input 1:</h4>\n\n<pre><code>Test Case 1:\n\u2018N\u2019 = 5, \u2018M\u2019 = 8\nGiven \u2018GRID\u2019:\n(Empty cells represent the character \u2018O\u2019)\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/sample1-path-to-the-nearest-station-8615.png\" alt=\"sample1\"></p>\n\n<pre><code>The Ninja can reach the nearest service station by moving two cells south and then five cells east. So, the answer is \u20187\u2019.\n\n\nTest Case 2:\n\u2018N\u2019 = 5, \u2018M\u2019 = 6\nGiven \u2018GRID\u2019:\n(Empty cells represent the character \u2018O\u2019)\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/sample2-path-to-the-nearest-station-8616.png\" alt=\"sample2\"></p>\n\n<pre><code>As the Ninja cannot reach any service station because of obstacles, the answer is \u2018-1\u2019.\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample input 2:</h4>\n\n<pre><code>2\n4 5\nX X X X X \nX N O O O \nX O O O S \nX X X X X \n3 4\nN O S X \nO O X X \nS O X X \n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample output 2:</h4>\n\n<pre><code>4\n2\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -6,
            "dislikes": "NA",
            "rephrased": {
                "body": "A ninja's car is damaged, and he needs to reach the nearest service station to repair it for a road trip. Given a character matrix representing the grid, find the shortest path length for the ninja to reach any service station. The ninja can only move North, South, East, or West to adjacent free cells. 'N' represents the ninja's location, 'S' represents a service station, 'O' represents a free space, and 'X' represents an obstacle.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N, M <= 100",
                    "Value in each element of \u2018GRID\u2019 = {\u2018N\u2019, \u2018S\u2019, \u2018O\u2019, \u2018X\u2019}",
                    "Time limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "5 8\nX X X X X X X X \nX N O X O O S X \nX O O X O X X X \nX O O O O O S X \nX X X X X X X X \n5 6\nX X X X X X \nX N O X S X \nX O O X O X \nX O X S O X \nX X X X X X",
                        "output": "7\n-1",
                        "explanation": "Test Case 1: The Ninja can reach the nearest service station by moving two cells south and then five cells east, taking a path of length 7. \n\nTest Case 2: The Ninja cannot reach any service station because of obstacles, so the answer is -1."
                    },
                    {
                        "input": "4 5\nX X X X X \nX N O O O \nX O O O S \nX X X X X \n3 4\nN O S X \nO O X X \nS O X X",
                        "output": "4\n2",
                        "explanation": "Test Case 1: The Ninja can reach the service station with shortest path length of 4.\n\nTest Case 2: The Ninja can reach the service station with shortest path length of 2."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Consider the \u2018GRID\u2019 as an undirected graph.</p>",
            "<p>Try to implement some shortest path algorithm that works efficiently.</p>",
            "<p>Try to use modified BFS to calculate the shortest path. Consider the given grid as an unweighted graph.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Matrices (2D Arrays)",
                "slug": "matrices-(2d-arrays)"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Depth-first Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-first Search",
                "slug": "breadth-first-search"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}