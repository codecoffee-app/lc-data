{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 11000,
            "title": "Path With Maximum And Minimum Value",
            "titleSlug": "path-with-maximum-and-minimum-value_1281861",
            "content": "<h4 id=\"given-a-matrix-of-integers-arr-with-r-rows-and-c-columns-find-the-maximum-score-of-a-path-starting-at-0-0-and-ending-at-r-1-c-1-the-score-of-a-path-is-the-minimum-value-in-that-path-for-example-the-value-of-the-path-8-4-5-9-is-4-a-path-moves-some-number-of-times-from-one-visited-cell-to-any-neighbouring-unvisited-cell-in-one-of-the-4-cardinal-directions-north-east-west-south\">Given a matrix of integers \u2018ARR\u2019 with \u2018R\u2019 rows and \u2018C\u2019 columns, find the maximum score of a path starting at [0, 0] and ending at [R-1, C-1]. The score of a path is the minimum value in that path. For example, the value of the path 8 -&gt; 4 -&gt; 5 -&gt; 9 is 4. A path moves some number of times from one visited cell to any neighbouring unvisited cell in one of the 4 cardinal directions (north, east, west, south).</h4>\n\n<h4 id=\"example\">Example:</h4>\n\n<pre><code>Let\u2019s say we have ARR = { {5 4 5} , {1 2 6} , {7 4 6}} so the path with \nmaximum value will be 5 -&gt; 4 -&gt; 5 -&gt; 6 -&gt; 6 and we have to return \nthe minimum value in this path as the answer i.e 4.\n</code></pre>\n\n<h5 id=\"input-format\">Input format:</h5>\n\n<pre><code>The very first line of input contains an integer \u2018T\u2019 denoting the number of test cases. \n\nThe first line of every test case contains two integers \u2018R\u2019 and \u2018C\u2019 denoting the number of rows and columns respectively.\n\nThen the remaining input is of R lines where each line contains C space-separated numbers denoting the elements of the RXC sized matrix \u2018ARR\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output format:</h5>\n\n<pre><code>For each test case, return the minimum value in the maximum path.\n\nOutput for each test case is printed on a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just return the minimum value in the maximum path.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= R , C &lt;= 100\n0 &lt;= ARR[i][j] &lt;= 10^9\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n2 6\n2 2 1 2 2 2\n1 2 2 2 1 2\n3 3\n5 4 5\n1 2 6\n7 4 6\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code> 2\n 4\n</code></pre>\n\n<h5 id=\"explanation-1\">Explanation 1:</h5>\n\n<pre><code>For the first test case, \nThe path will be {0, 0} -&gt; {0, 1} -&gt; {1, 1} -&gt; {1, 2} -.&gt; {1, 3} -&gt; \n{0, 3} -&gt; {0, 4} -&gt; {0, 5} -&gt; {1, 5};\n\n\nTherefore the path highlighted is the maximum path and the \nminimum value in this path will be 2 which is our required answer.\n\nFor the second test case,\nIt is already explained above in the example.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n3 3\n6 8 5\n7 2 4\n7 7 6\n3 4\n1 2 3 4\n5 6 7 8\n9 10 11 12\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>6\n1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 3,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a matrix of integers \u2018ARR\u2019 with \u2018R\u2019 rows and \u2018C\u2019 columns, find the maximum score of a path from the top-left cell [0, 0] to the bottom-right cell [R-1, C-1]. The score of a path is defined as the minimum value encountered along that path. Allowed moves are to neighboring cells in the four cardinal directions (north, east, west, south).",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= R, C <= 100",
                    "0 <= ARR[i][j] <= 10^9",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "2\n2 6\n2 2 1 2 2 2\n1 2 2 2 1 2\n3 3\n5 4 5\n1 2 6\n7 4 6",
                        "output": "2\n4",
                        "explanation": "For the first test case, a possible optimal path is {0, 0} -> {0, 1} -> {1, 1} -> {1, 2} -> {1, 3} -> {0, 3} -> {0, 4} -> {0, 5} -> {1, 5}, with a minimum value of 2.\n\nFor the second test case, a possible optimal path is 5 -> 4 -> 5 -> 6 -> 6, with a minimum value of 4."
                    },
                    {
                        "input": "2\n3 3\n6 8 5\n7 2 4\n7 7 6\n3 4\n1 2 3 4\n5 6 7 8\n9 10 11 12",
                        "output": "6\n1",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you solve this problem by using a priority queue?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Matrices (2D Arrays)",
                "slug": "matrices-(2d-arrays)"
            },
            {
                "name": "Heap",
                "slug": "heap"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}