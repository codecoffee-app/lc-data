{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10981,
            "title": "Path with Maximum Proability",
            "titleSlug": "path-with-maximum-proability_1281358",
            "content": "<h4 id=\"you-are-given-an-undirected-unweighted-graph-and-an-array-sproability-which-denotes-the-probability-of-traversing-edges-such-that-sproability-i-denotes-the-probability-of-traversing-ith-edge-you-are-given-the-start-and-end-vertex-you-need-to-determine-the-maximum-path-probability-on-going-from-start-to-end-vertex-if-there-is-no-path-from-start-to-end-return-0\">You are given an undirected unweighted graph and an array &#39;sProability&#39; which denotes the probability of traversing edges such that &#39;sProability[i]&#39; denotes the probability of traversing ith edge. You are given the start and end vertex, You need to determine the maximum path probability on going from start to end vertex if there is no path from start to end return 0.</h4>\n\n<h5 id=\"input-format\">Input Format</h5>\n\n<pre><code>The first line of input contains an integer &#39;T&#39;, the number \nof test cases.\n\nThe first line of the test case contains four integers \u2018N\u2019, \n\u2018M\u2019, &#39;START&#39;, &#39;END&#39; denoting the number of vertices, edges, starting vertex, and ending vertex.\n\nThe next \u2018M\u2019 lines describe the edge. Each edge is \ncharacterized by two integers \u2018A\u2019 and \u2018B\u2019 where \u2018A\u2019 and \u2018B\u2019 denotes the endpoints of the edge.\n\nThe last line of each test case contains \u2018M\u2019 space-separated floating-point number denoting the probability of traversing ith edge.\n\nThe edges[i][0], edges[i][1] contains the vertex that is \nconnected to the edge.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format</h5>\n\n<pre><code>Return the maximum probability of path from start to end vertex up to 6 decimal places. If there is no path, return 0.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>Graph does not contain self-loops.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 5 * 10 ^ 4\n1 &lt;= M &lt;= min((N * (N - 1) / 2),10^5)\n0 &lt;= VERTEX VALUE, START, END &lt;= N - 1\n0 &lt;= sProability[i] &lt;= 1\n\nTime Limit: 1 second\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1</h5>\n\n<pre><code>1\n3 3 0 2\n0 1\n1 2\n0 2\n0.9 0.9 0.75\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1</h5>\n\n<pre><code>0.810000\n</code></pre>\n\n<h5 id=\"explanation-for-sample-output-1\">Explanation for Sample Output 1:</h5>\n\n<pre><code>For the test case 1:\n\nThe graph is as follows:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/graph-4-8606.png\" alt=\"\"></p>\n\n<pre><code>Path with maximum probability from 0 to 1 is 0-&gt;2-&gt;1. Hence the maximum probability is 0.90 * 0.90 = 0.81.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2</h5>\n\n<pre><code>1\n4 2 0 2\n0 1\n2 3\n0.8 0.8\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2</h5>\n\n<pre><code>0.000000\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -8,
            "dislikes": "NA",
            "rephrased": {
                "body": "You are given an undirected, unweighted graph and an array `sProability` representing the probabilities of traversing each edge. `sProability[i]` denotes the probability of traversing the i-th edge. Given a start and end vertex, determine the maximum path probability from the start to the end vertex. If no path exists between the start and end vertices, return 0.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 5 * 10^4",
                    "1 <= M <= min((N * (N - 1) / 2), 10^5)",
                    "0 <= VERTEX VALUE, START, END <= N - 1",
                    "0 <= sProability[i] <= 1",
                    "Time Limit: 1 second",
                    "Graph does not contain self-loops."
                ],
                "testcases": [
                    {
                        "input": "1\n3 3 0 2\n0 1\n1 2\n0 2\n0.9 0.9 0.75",
                        "output": "0.810000",
                        "explanation": "The graph consists of 3 vertices and 3 edges. The goal is to find the path with the maximum probability from vertex 0 to vertex 2. One possible path is 0 -> 1 -> 2 with a probability of 0.9 * 0.9 = 0.81. Another path is directly from 0 -> 2, which has a probability of 0.75. Therefore, the maximum probability is 0.81."
                    },
                    {
                        "input": "1\n4 2 0 2\n0 1\n2 3\n0.8 0.8",
                        "output": "0.000000",
                        "explanation": "There is no path from vertex 0 to vertex 2. Therefore the probability is 0."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Find all the paths from start to end.</p>",
            "<p>Use Dijkstra Algorithm</p>"
        ],
        "relatedTopics": [
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Depth-first Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}