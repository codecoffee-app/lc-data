{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8665,
            "title": "Pattern_ify",
            "titleSlug": "pattern_ify_893282",
            "content": "<h4 id=\"you-are-given-an-integer-n-your-task-is-to-print-a-pattern-with-the-following-description\">You are given an integer \u2018N\u2019. Your task is to print a pattern with the following description</h4>\n\n<pre><code>The pattern will consist of \u2018N\u2019 lines.\n\nFor 1 &lt;= \u2018i\u2019 &lt;= \u2018N\u2019 \u2018i\u2019th line consists of a string of \u2018N\u2019  + 1 - \u2018i\u2019  \u2018*\u2019 characters.\n</code></pre>\n\n<h4 id=\"for-example\">For example:</h4>\n\n<pre><code>If \u2018N\u2019 is 5 then the pattern will be.\n\n*****\n****\n***\n**\n*\n</code></pre>\n\n<h4 id=\"input-format\">Input Format</h4>\n\n<pre><code>The first line of input contains an integer &#39;T&#39; representing the number of test cases.\n\nThen each test case contains a single integer \u2018N\u2019 denoting the size of the pattern.\n</code></pre>\n\n<h4 id=\"output-format\">Output Format:</h4>\n\n<pre><code>The output for each test case will be &#39;N&#39; strings denoting the pattern printed for the given \u2018N\u2019 number of rows.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints:</h4>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= N &lt;= 500\n\nWhere \u2018T\u2019 is the number of test cases, \u2018N\u2019  is the size of the pattern.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1:</h4>\n\n<pre><code>2\n5\n3\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1:</h4>\n\n<pre><code>*****\n****\n***\n**\n*\n***\n**\n*\n</code></pre>\n\n<h4 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1:</h4>\n\n<pre><code>Test Case 1:\n\nGiven \u2018N\u2019 = 5\nWe will print the pattern as description first line will contain a string of 5 \u2018*\u2019, the second line will contain a string of 4 \u2018*\u2019, the third line will contain 3 \u2018*\u2019, the fourth line will contain 2 \u2018*\u2019 and the fifth line will contain 1 \u2019*\u2019.\n\nTest Case 2:\n\nGiven \u2018N\u2019 = 3\nFor 1 &lt;= \u2018i\u2019 &lt;= 3  , \u2018i\u2019th line contains 4 - \u2019i\u2019, \u2018*\u2019 characters.\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2:</h4>\n\n<pre><code>2\n1\n2\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2:</h4>\n\n<pre><code>*\n**\n* \n</code></pre>\n\n<h4 id=\"explanation-of-sample-input-2\">Explanation of Sample Input 2:</h4>\n\n<pre><code>Test Case 1:\n\nGiven \u2018N&#39; = 1\nThere will be only 1 line and that will contain a single \u2018*\u2019.\n\nTest Case 2:\n\nGiven \u2018N\u2019 = 2\nFirst-line will contain 2 \u2018*\u2019 while the second line will contain 1 \u2018*\u2019 as per description.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 94,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an integer 'N', print a pattern of 'N' lines. The i-th line (where 1 <= i <= N) should consist of a string of 'N' + 1 - 'i' '*' characters.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= N <= 500",
                    "Where \u2018T\u2019 is the number of test cases, \u2018N\u2019 is the size of the pattern."
                ],
                "testcases": [
                    {
                        "input": "5\n3",
                        "output": "*****\n****\n***\n**\n*\n***\n**\n*",
                        "explanation": "For N = 5, the pattern consists of five lines with 5, 4, 3, 2, and 1 asterisks respectively. For N = 3, the pattern consists of three lines with 3, 2, and 1 asterisks respectively."
                    },
                    {
                        "input": "1\n2",
                        "output": "*\n**\n*",
                        "explanation": "For N = 1, there is a single line with one asterisk. For N = 2, the first line has two asterisks, and the second line has one asterisk."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>In each step, we will decrease the length of the string by 1.</p>"
        ],
        "relatedTopics": [],
        "solutions": [
            {
                "lang": "cpp",
                "full_func": "/* \r\n   Time complexity: O(N ^ 2)  \r\n   Space complexity: O(N ^ 2) \r\n\r\n   Where N is the size of the pattern \r\n*/\r\n\r\nvector<string> printPatt(int n)\r\n{\r\n    // Create an array of string for storing the pattern\r\n    vector<string> answer;\r\n\r\n    // Create a string that will contain 'N' '*' characters\r\n    string str;\r\n\r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        // Append '*' in string in each iteration of loop\r\n        str.push_back('*');\r\n    }\r\n\r\n    // Run a loop from 'i'=1 to 'i'='N'\r\n    for (int i = 1; i <= n; i++)\r\n    {\r\n        // Append current string to answer\r\n        answer.push_back(str);\r\n\r\n        // Decrese length of string by 1\r\n        str.pop_back();\r\n    }\r\n\r\n    // Return the array of string that contains pattern\r\n    return answer;\r\n}",
                "lang_text": "cpp"
            },
            {
                "lang": "python",
                "full_func": "'''\r\n   Time complexity: O(N ^ 2)  \r\n   Space complexity: O(N ^ 2) \r\n\r\n   Where N is the size of the pattern \r\n'''\r\n\r\n\r\ndef printPatt(n):\r\n\t\r\n\t# Create an array of string for storing the pattern\r\n\tanswer = []\r\n\t\r\n\t# Create a string that will contain 'N' '*' characters\r\n\tstr = \"\"\r\n\t\r\n\tfor i in range(n):\r\n\t\t\r\n\t\t# Append '*' in string in each iteration of loop\r\n\t\tstr += '*'\r\n\t\t\r\n\t\t\r\n\t# Run a loop from 'i'=1 to 'i'='N'\r\n\tfor i in range(1, n + 1):\r\n\t\t\r\n\t\t# Append current string to answer\r\n\t\tanswer.append(str)\r\n\t\t\r\n\t\t# Decrese length of string by 1\r\n\t\tstr = str[: - 1]\r\n\t\t\r\n\t# Return the array of string that contains pattern\r\n\treturn answer\r\n",
                "lang_text": "python"
            },
            {
                "lang": "java",
                "full_func": "/* \n\tTime complexity: O(N ^ 2)  \n\tSpace complexity: O(N ^ 2) \n\n\tWhere N is the size of the pattern \n*/\n\npublic class Solution {\n\tpublic static String[] printPatt(int N) {\n\n\t\t// Create an array of string for storing the pattern\n\t\tString result[] = new String[N];\n\n\t\t// Result index marker\n\t\tint index = 0;\n\n\t\t// Create a string that will contain 'N' '*' characters\n\t\tString str = \"\";\n\n\t\tfor (int i = 0; i < N; i++) {\n\n\t\t\t// Append '*' in string in each iteration of loop\n\t\t\tstr += ('*');\n\t\t}\n\n\t\t// Run a loop from 'i'=1 to 'i'='N'\n\t\tfor (int i = 1; i <= N; i++) {\n\n\t\t\t// Append current string to answer\n\t\t\tresult[index++] = str;\n\n\t\t\t// Decrese length of string by 1\n\t\t\tstr = str.substring(0, str.length() - 1);\n\t\t}\n\n\t\t// Return the array of string that contains pattern\n\t\treturn result;\n\t}\n\n}\n\n",
                "lang_text": "java"
            }
        ],
        "platform": "CODESTUDIO"
    }
}