{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8553,
            "title": "Permutation In String",
            "titleSlug": "permutation-in-string_893032",
            "content": "<h4 id=\"you-are-given-two-strings-named-str1-and-str2-of-length-n-and-m-respectively-find-whether-string-str2-contains-one-of-the-permutations-of-string-str1-as-its-substring-in-other-words-whether-there-exists-any-permutation-of-string-str1-that-is-a-substring-of-str2\">You are given two strings named str1 and str2 of length N and M respectively. Find whether string str2 contains one of the permutations of string str1 as its substring. In other words, whether there exists any permutation of string str1 that is a substring of str2.</h4>\n\n<h4 id=\"for-example\">For Example :</h4>\n\n<pre><code>Input: str1 = \u201cab\u201d , str2 = \u201caoba\u201d\nOutput: True\nExplanation : Permutations of first-string str1 i.e. \u201cab\u201d are [ \u201cab\u201d, \u201cba\u201d ].\nThe substrings of str2 i.e. \u201caoba\u201d are [ \u201ca\u201d, \u201co\u201d, \u201cb\u201d, \u201ca\u201d, \u201cao\u201d, \u201cob\u201d, \u201cba\u201d, \u201caob\u201d, \u201coba\u201d, \u201caoba\u201d ].\nThe string \u201cba\u201d is present in the list of substrings of string str2.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases.\nThe next \u2018T\u2019 lines represent the \u2018T\u2019 test cases.\n\nThe first and only line of each test case contains two single space-separated strings str1 and str2.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code> For each test case, print either \u201cTrue\u201d or \u201cFalse\u201d. \n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 10^4\n1 &lt;= M &lt;= 10^4\n\nStrings \u2018str1\u2019 and \u2018str2\u2019 consists only of lower case letters.\n\nTime limit: 1 second\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\nab ebbao\nb acd\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>True\nFalse\n</code></pre>\n\n<h5 id=\"explanation-of-the-sample-input-1\">Explanation Of the Sample Input 1 :</h5>\n\n<pre><code>In the First Test Case :\nPermutations of first-string str1 i.e. \u201cab\u201d are [ \u201cab\u201d, \u201cba\u201d ].\nThe substrings of str2 i.e. \u201cebbao\u201d are [ \u201ce\u201d, \u201cb\u201d, \u201cb\u201d, \u201ca\u201d, \u201co\u201d, \u201ceb\u201d, \u201cbb\u201d,  \u201cba\u201d, \u201cao\u201d,  \u201cebb\u201d, \u201cbba\u201d, \u201cbao\u201d,  \u201cebba\u201d, \u201cbbao\u201d, \u201cebbao\u201d  ].\nThe string \u201cba\u201d is present in the list of substrings of string str2.\n\nIn the Second Test Case :\nPermutations of first-string str1 i.e. \u201cb\u201d are [ \u201cb\u201d ].\nThe substrings of str2 i.e. \u201cacd\u201d are [ \u201ca\u201d, \u201cc\u201d, \u201cd\u201d, \u201cac\u201d, \u201ccd\u201d, \u201cacd\u201d ]. \nThe string \u201cb\u201d is not present in the list of substrings of string str2.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\nabc bdbkcera\nabc cb\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>False\nFalse\n</code></pre>\n\n<h5 id=\"explanation-of-the-sample-input-2\">Explanation Of the Sample Input 2 :</h5>\n\n<pre><code>In the Second Test Case :\nPermutations of first-string str1 i.e. \u201cabc\u201d are [ \u201cabc\u201d, \u201cbac\u201d, \u201cacb\u201d, \u201cbca\u201d, \u201ccab\u201d, cba\u201d ].\nThe substrings of str2 i.e. \u201ccb\u201d are [ \u201cc\u201d, \u201cb\u201d, \u201ccb\u201d ].\nThe string of any of the permutations of \u201cabc\u201d  is not present in the list of substrings of string str2.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 0,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two strings, `str1` and `str2`, of lengths N and M respectively, determine if any permutation of `str1` exists as a substring within `str2`.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10^4 (Length of str1)",
                    "1 <= M <= 10^4 (Length of str2)",
                    "Strings 'str1' and 'str2' consist only of lowercase letters.",
                    "Time limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "ab ebbao",
                        "output": "True",
                        "explanation": "`str1` is \"ab\" and `str2` is \"ebbao\". Permutations of \"ab\" are [\"ab\", \"ba\"]. The substring \"ba\" is present in \"ebbao\"."
                    },
                    {
                        "input": "b acd",
                        "output": "False",
                        "explanation": "`str1` is \"b\" and `str2` is \"acd\". The permutation of \"b\" is [\"b\"].  The substring \"b\" is not present in \"acd\"."
                    },
                    {
                        "input": "abc bdbkcera",
                        "output": "False",
                        "explanation": "`str1` is \"abc\" and `str2` is \"bdbkcera\". No permutation of \"abc\" (e.g., \"abc\", \"bac\", \"acb\", \"bca\", \"cab\", \"cba\") exists as a substring in \"bdbkcera\"."
                    },
                    {
                        "input": "abc cb",
                        "output": "False",
                        "explanation": "`str1` is \"abc\" and `str2` is \"cb\".  No permutation of \"abc\" (e.g., \"abc\", \"bac\", \"acb\", \"bca\", \"cab\", \"cba\") exists as a substring in \"cb\"."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Brute-Force Method</p>",
            "<p>Using Sorting</p>",
            "<p>Using HashMap</p>",
            "<p>Using Sliding Window Technique</p>",
            "<p>Optimized Sliding Window Technique</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}