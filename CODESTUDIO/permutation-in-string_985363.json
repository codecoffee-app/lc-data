{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9459,
            "title": "Permutation in String",
            "titleSlug": "permutation-in-string_985363",
            "content": "<h4 id=\"you-have-been-given-two-strings-str1-and-str2-of-length-n-and-m-respectively-your-task-is-to-check-whether-string-str2-contains-one-of-the-permutations-of-string-str1-as-its-substring\">You have been given two strings \u2018str1\u2019 and \u2018str2\u2019 of length N and M respectively. Your task is to check whether string \u2018str2\u2019 contains one of the permutations of string \u2018str1\u2019 as its substring.</h4>\n\n<h4 id=\"in-other-words-find-whether-there-exists-any-permutation-of-string-str1-that-is-a-substring-of-str2\">In other words, find whether there exists any permutation of string \u2018str1\u2019 that is a substring of \u2018str2\u2019.</h4>\n\n<h4 id=\"a-string-x-is-a-permutation-of-another-string-y-only-if-sorted-x-sorted-y-for-example-listen-is-a-permutation-of-silent\">A string \u2018x\u2019 is a permutation of another string \u2018y\u2019 only if sorted(x) = sorted(y). For example, LISTEN is a permutation of SILENT.</h4>\n\n<h4 id=\"note-str1-and-str2-contains-only-lowercase-english-alphabet-letters\">Note: \u2018str1\u2019 and \u2018str2\u2019 contains only lowercase English Alphabet letters.</h4>\n\n<h4 id=\"for-example\">For Example :</h4>\n\n<pre><code>Input: str1 = \u201cab\u201d , str2 = \u201caoba\u201d\nOutput: Yes\n\nExplanation: Permutations of first-string str1 i.e. \u201cab\u201d are [\u201cab\u201d, \u201cba\u201d].\nThe substrings of str2, i.e. \u201caoba\u201d are [\u201ca\u201d, \u201co\u201d, \u201cb\u201d, \u201ca\u201d, \u201cao\u201d, \u201cob\u201d, \u201cba\u201d, \u201caob\u201d, \u201coba\u201d, \u201caoba\u201d].\nThe string \u201cba\u201d is present in the list of substrings of string str2.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains an integer &#39;T&#39; which denotes the number of test cases or queries to be run. Then the test cases follow.\n\nThe first line of each test case contains two single space-separated integers \u2018N\u2019 and \u2018M\u2019 respectively.\n\nThe second line of each test case contains two single space-separated strings \u2018str1\u2019 and \u2018str2\u2019 respectively.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case, the only line of output will print \u201cYes\u201d if there exists any permutation of \u201cstr1\u201d that is a substring of \u201cstr2\u201d. Else print \u201cNo\u201d.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You are not required to print the expected output, it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= N &lt;= 5000\n1 &lt;= M &lt;= 5000\n\nTime limit: 1 second\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n2 5\nab ebbao\n1 3 \nb acd\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>Yes\nNo\n</code></pre>\n\n<h5 id=\"explanation-of-the-sample-input-1\">Explanation Of the Sample Input 1 :</h5>\n\n<pre><code>In the First Test Case :\nPermutations of first-string str1 i.e. \u201cab\u201d are [\u201cab\u201d, \u201cba\u201d].\nThe substrings of str2 i.e. \u201cebbao\u201d are [\u201ce\u201d, \u201cb\u201d, \u201cb\u201d, \u201ca\u201d, \u201co\u201d, \u201ceb\u201d, \u201cbb\u201d,  \u201cba\u201d, \u201cao\u201d,  \u201cebb\u201d, \u201cbba\u201d, \u201cbao\u201d,  \u201cebba\u201d, \u201cbbao\u201d, \u201cebbao\u201d].\nThe string \u201cba\u201d is present in the list of substrings of string str2.\n\nIn the Second Test Case :\nPermutations of first-string str1 i.e. \u201cb\u201d are [\u201cb\u201d].\nThe substrings of str2, i.e. \u201cacd\u201d are [\u201ca\u201d, \u201cc\u201d, \u201cd\u201d, \u201cac\u201d, \u201ccd\u201d, \u201cacd\u201d]. \nThe string \u201cb\u201d is not present in the list of substrings of string str2.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n3 8\nabc bdbkcera\n3 2\nabc cb\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>No\nNo\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 11,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two strings, `str1` of length `n` and `str2` of length `m`, determine if any permutation of `str1` is a substring of `str2`. Both strings contain only lowercase English alphabet letters.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= N <= 5000",
                    "1 <= M <= 5000"
                ],
                "testcases": [
                    {
                        "input": "n = 2, m = 5, str1 = \"ab\", str2 = \"ebbao\"",
                        "output": "Yes",
                        "explanation": "Permutations of str1 are [\"ab\", \"ba\"]. Substrings of str2 are [\"e\", \"b\", \"b\", \"a\", \"o\", \"eb\", \"bb\", \"ba\", \"ao\", \"ebb\", \"bba\", \"bao\", \"ebba\", \"bbao\", \"ebbao\"]. The substring \"ba\" exists in str2."
                    },
                    {
                        "input": "n = 1, m = 3, str1 = \"b\", str2 = \"acd\"",
                        "output": "No",
                        "explanation": "Permutations of str1 are [\"b\"]. Substrings of str2 are [\"a\", \"c\", \"d\", \"ac\", \"cd\", \"acd\"].  The substring \"b\" does not exists in str2."
                    },
                    {
                        "input": "n = 3, m = 8, str1 = \"abc\", str2 = \"bdbkcera\"",
                        "output": "No",
                        "explanation": "No permutation of \"abc\" (e.g., \"abc\", \"acb\", \"bac\", \"bca\", \"cab\", \"cba\") is a substring of \"bdbkcera\"."
                    },
                    {
                        "input": "n = 3, m = 2, str1 = \"abc\", str2 = \"cb\"",
                        "output": "No",
                        "explanation": "No permutation of \"abc\" is a substring of \"cb\" as the substring \"cb\" is shorter in length than \"abc\""
                    },
                    {
                        "input": "n = 2, m = 4, str1 = \"xy\", str2 = \"axyb\"",
                        "output": "Yes",
                        "explanation": "One permutation of \"xy\" is \"yx\". The substring \"yx\" exists in str2."
                    },
                    {
                        "input": "n = 3, m = 7, str1 = \"aaa\", str2 = \"aaaaaaa\"",
                        "output": "Yes",
                        "explanation": "A permutation of \"aaa\" is \"aaa\" and this appears multiple times as a substring of \"aaaaaaa\"."
                    },
                    {
                        "input": "n = 4, m = 4, str1 = \"abcd\", str2 = \"dcba\"",
                        "output": "Yes",
                        "explanation": "The strings are permutations of each other, and the shorter string's permutation is necessarily a substring of itself (if it exists)."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Naively check for all permutations of \u2018str1\u2019 if they exist in \u2018str2\u2019 as a substring or not.</p>",
            "<p>Try to optimise the approach1.</p>",
            "<p>Try using a Sliding Window Technique.</p>",
            "<p>Try to optimise the approach 3.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}