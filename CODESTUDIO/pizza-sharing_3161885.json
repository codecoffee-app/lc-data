{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 16469,
            "title": "Pizza Sharing",
            "titleSlug": "pizza-sharing_3161885",
            "content": "<h4 id=\"ninja-and-his-two-friends-went-to-a-picnic-and-enjoy-their-pizza-but-they-found-that-the-slices-of-pizza-are-not-uniform-ninja-is-very-hungry-so-he-wants-to-take-the-bigger-slices-of-pizza-so-all-friends-decided-to-follow-the-rule-while-eating-pizza\">Ninja and his two friends went to a picnic and enjoy their pizza. But they found that the slices of pizza are not uniform. Ninja is very hungry so he wants to take the bigger slices of pizza. So all friends decided to follow the rule while eating pizza:</h4>\n\n<pre><code>1 . Ninja will pick a slice of pizza.\n2 . One of his friends will pick the next slice in the anti-clockwise direction.\n3 . the Second friend will pick the next slice in the clockwise direction of Ninja\u2019s pick.\n</code></pre>\n\n<h4 id=\"you-are-given-an-array-arr-having-the-weights-of-n-slices-representing-a-circular-array-in-the-clockwise-direction-n-is-a-multiple-of-3-ninja-wants-to-collect-the-slices-such-that-their-sum-is-maximum-can-you-help-ninja-to-solve-this-problem-and-tell-him-the-maximum-sum-he-can-achieve\">You are given an array \u2018ARR\u2019 having the weights of \u2018N\u2019 slices representing a circular array in the clockwise direction.N is a multiple of 3. Ninja wants to collect the slices such that their sum is maximum. Can you help Ninja to solve this problem and tell him the maximum sum he can achieve?</h4>\n\n<h5 id=\"for-example\">For Example</h5>\n\n<pre><code>If the ARR is [4,3,11,12,2,4] , so the optimal answer will be as follows:\nNinja will pick the slice having weight 12, so his friends will pick the slices having weights 11 and 2. After that Ninja will pick the slice with weight 4 and his friends will pick 4 and 3.\nNinja\u2019s sum will be 16 which is the maximum.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of the input contains an integer, &#39;T,\u2019 denoting the number of test cases.\n\nThe first line of each test case contains a single integer, \u2018N\u2019, denoting the number of elements in array \u2018ARR\u2019.\n\nThe following line contains \u2018N\u2019 values corresponding to elements of \u2018ARR\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print the maximum sum of the weight of slices.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 1000.\n1 &lt;=ARR[i] &lt;=10^6.\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n6\n4 3 11 12 2 4\n6\n1 2 3 4 5 6\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>16\n10\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of sample input 1:</h5>\n\n<pre><code>For the first test case,\n\nNinja will pick the slice having weight 12, so his friends will pick the slices having weights 11 and 2. After that Ninja will pick the slice with weight 4 and his friends will pick 4 and 3.\nNinja\u2019s sum will be 16 which is the maximum.\nHence, the answer is 16.\n\nFor the second test case:\n\nNinja will pick the slice having weight 6, so his friends will pick the slices having weights 5 and 1. After that Ninja will pick the slice with weight 4 and his friends will pick 3 and 2.\nNinja\u2019s sum will be 10 which is the maximum.\nHence,the answer is 10.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n9\n6 5 8 4 9 2 3 1 9 \n6\n6 9 7 2 10 5\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>26\n19\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 6,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a circular array 'arr' of 'N' slices of pizza, where 'N' is a multiple of 3, determine the maximum sum Ninja can achieve by selecting slices according to the following rule: Ninja picks a slice, one friend picks the next slice anti-clockwise, and the other friend picks the next slice clockwise.  Your task is to calculate and return the maximum possible sum of the slices Ninja can collect.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 1000",
                    "1 <= ARR[i] <= 10^6"
                ],
                "testcases": [
                    {
                        "input": "n = 6, arr=[4, 3, 11, 12, 2, 4]",
                        "output": "16",
                        "explanation": "Ninja picks 12 (friends pick 11 and 2), then Ninja picks 4 (friends pick 4 and 3). Ninja's sum: 12 + 4 = 16."
                    },
                    {
                        "input": "n = 6, arr=[1, 2, 3, 4, 5, 6]",
                        "output": "10",
                        "explanation": "Ninja picks 6 (friends pick 5 and 1), then Ninja picks 4 (friends pick 3 and 2). Ninja's sum: 6 + 4 = 10."
                    },
                    {
                        "input": "n = 9, arr=[6, 5, 8, 4, 9, 2, 3, 1, 9]",
                        "output": "26",
                        "explanation": "One optimal solution is Ninja picking 8, then 9, then 9 resulting in a sum of 26."
                    },
                    {
                        "input": "n = 6, arr=[6, 9, 7, 2, 10, 5]",
                        "output": "19",
                        "explanation": "Ninja picks 9 (friends pick 6 and 10), then Ninja picks 2 (friends pick 7 and 5). Ninja's sum: 9 + 10 = 19."
                    },
                    {
                        "input": "n = 3, arr=[1,2,3]",
                        "output": "3",
                        "explanation": "Ninja picks 3. Ninja's sum: 3."
                    },
                    {
                        "input": "n = 3, arr=[5,1,1]",
                        "output": "5",
                        "explanation": "Ninja picks 5. Ninja's sum: 5."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Break the problem into smaller subproblems.</p>",
            "<p>Find the answer for subproblems and store the answers for further reference</p>",
            "<p>Think of an iterative algorithm.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}