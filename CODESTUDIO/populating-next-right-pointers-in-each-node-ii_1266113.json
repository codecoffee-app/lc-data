{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10856,
            "title": "Populating Next Right Pointers in Each Node II",
            "titleSlug": "populating-next-right-pointers-in-each-node-ii_1266113",
            "content": "<h4 id=\"you-are-given-a-binary-tree-of-n-nodes-the-nodes-are-numbered-1-to-n\">You are given a binary tree of \u2018N\u2019 nodes. The nodes are numbered 1 to \u2018N\u2019.</h4>\n\n<h4 id=\"your-task-is-to-find-the-next-node-that-is-immediately-right-in-the-level-order-form-for-each-node-in-the-given-tree\">Your task is to find the \u2018next\u2019 node that is immediately right in the level order form for each node in the given tree.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>1. Node \u2018U\u2019 is said to be the next node of \u2018V\u2019 if and only if  \u2018U\u2019 is just next to \u2018V\u2019 in tree representation.\n2. If there is no next right node, then the next pointer has to be \u2018NULL\u2019. Particularly root node and rightmost nodes have \u2018next\u2019 node equal to \u2018NULL\u2019. \n3. Each node of the binary tree has three-pointers, \u2018left\u2019, \u2018right\u2019, and \u2018next\u2019. Here \u2018left\u2019 and \u2018right\u2019 are the children of a node, and \u2018next\u2019 is one extra pointer that we need to update.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains an integer &#39;T&#39; which denotes the number of test cases to be run.\n\nThe first line of each test case contains elements of the tree in the level order form. The line consists of values of nodes separated by a single space. In case a node is null, we take -1 in its place.\n\nFor example, the input for the tree is depicted in the below image.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/populatingnextii_ex-8467.png\" alt=\"altImage\"></p>\n\n<pre><code>For example, the input for the tree depicted in the above image would be :\n\n1\n2 3\n4 -1 5 6\n-1 -1 -1 -1 -1 -1\n</code></pre>\n\n<h4 id=\"explanation\">Explanation :</h4>\n\n<pre><code>Level 1 :\nThe root node of the tree is 1\n\nLevel 2 :\nLeft child of 1 = 2\nRight child of 1 = 3\n\nLevel 3 :\nLeft child of 2 = 4\nRight child of 2 = null (-1)\nLeft child of 3 = 5\nRight child of 3 =  6\n\nLevel 4 :\nLeft child of 4 = null (-1)\nRight child of 4 = null (-1)\nLeft child of 5 = null (-1)\nRight child of 5 = null (-1)\nLeft child of 6 = null (-1)\nRight child of 6 = null (-1)\n</code></pre>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>The above format was just to provide clarity on how the input is formed for a given tree. \nThe sequence will be put together in a single line separated by a single space. Hence, for the above-depicted tree, the input will be given as:\n1 2 3 4 -1 5 6 -1 -1 -1 -1 -1 -1\n</code></pre>\n\n<h4 id=\"output-format\">Output Format :</h4>\n\n<pre><code>For each test case, print the tree\u2019s level order traversal after updating the \u2018next\u2019 for each node where  \u2018-1\u2019   denoting the null node.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints :</h4>\n\n<pre><code>1 &lt;= T &lt;= 5\n0 &lt;= N &lt;= 3000\n1 &lt;= data &lt;= 3000\n\nWhere \u2018data\u2019 is the value of the node of the binary tree.\n\nTime Limit : 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>1\n1 2 3 4 -1 5 6 -1 -1 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>1 -1 2 3 -1 4 5 6 -1\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1 :</h5>\n\n<pre><code>The tree will be\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/populatingnextii_tc1-8469.png\" alt=\"altImage\"></p>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>1\n1 2 3 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>1 -1 2 3 -1\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation For Sample Input 2 :</h5>\n\n<pre><code>The tree will be:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/populatingnextii_tc2-8468.png\" alt=\"altImage\"></p>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -4,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a binary tree of 'N' nodes (numbered 1 to 'N'), the task is to populate the 'next' pointer for each node. The 'next' pointer should point to the node immediately to the right of the current node in a level-order traversal. If a node is the rightmost node in its level, its 'next' pointer should be set to NULL. Each node in the binary tree has 'left', 'right', and 'next' pointers.",
                "constraints": [
                    "1 <= T <= 5",
                    "0 <= N <= 3000",
                    "1 <= data <= 3000, where \u2018data\u2019 is the value of the node of the binary tree.",
                    "Time Limit : 1 sec"
                ],
                "testcases": [
                    {
                        "input": "1 2 3 4 -1 5 6 -1 -1 -1 -1 -1 -1",
                        "output": "1 -1 2 3 -1 4 5 6 -1",
                        "explanation": "The tree has the structure where 1's next is NULL, 2's next is 3, 3's next is NULL, 4's next is 5, 5's next is 6, and 6's next is NULL. The -1 represent null node."
                    },
                    {
                        "input": "1 2 3 -1 -1 -1 -1",
                        "output": "1 -1 2 3 -1",
                        "explanation": "The tree has the structure where 1's next is NULL, 2's next is 3 and 3's next is NULL. The -1 represent null node."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><i>Try to find out the level order traversal of the given tree.</i></p>",
            "<p><i>Try to use constant space, do we actually need to extract the levels of tree?</i></p>"
        ],
        "relatedTopics": [
            {
                "name": "Binary Trees",
                "slug": "binary-trees"
            },
            {
                "name": "Breadth-first Search",
                "slug": "breadth-first-search"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}