{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12587,
            "title": "Possible Numbers",
            "titleSlug": "possible-numbers_1466965",
            "content": "<h4 id=\"proram-is-given-an-array-of-distinct-digits-sorted-in-ascending-order-proram-wants-to-know-how-many-possible-numbers-can-be-formed-from-a-digits-array-such-that-it-is-less-than-or-equal-to-the-given-integer-n-proram-can-use-the-digits-from-the-digits-array-as-many-times-as-he-wants-for-example-digits-1-2-3-the-possible-numbers-are-11-1-2-3-22-221-321-123-etc\">ProRam is given an array of distinct \u2018DIGITS\u2019 sorted in ascending order. ProRam wants to know how many possible numbers can be formed from a \u2018DIGITS\u2019 array such that it is less than or equal to the given integer \u2018N.&#39; ProRam can use the digits from the \u2018DIGITS\u2019 array as many times as he wants. For Example:-  \u2018DIGITS\u2019 = [1, 2, 3] . The possible numbers are 11, 1, 2, 3, 22, 221, 321, 123 etc.</h4>\n\n<h4 id=\"proram-is-busy-with-some-work-can-you-solve-this-for-proram-to-find-the-number-of-possible-numbers-formed-from-digit-array-which-are-less-than-or-equal-to-n\">ProRam is busy with some work. Can you solve this for ProRam to find the number of possible numbers formed from digit array which are less than or equal to \u2018N\u2019?</h4>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains \u2018T,\u2019 denoting the number of test cases.\n\nThe first line of the test case contains two integers, \u2018M\u2019 and \u2018N,\u2019 denoting the size of the \u2018DIGITS\u2019 array and given number.\n\nThe second line contains \u2018M\u2019 space-separated distinct integers denoting the elements of \u2018DIGITS.\u2019\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, a single line should contain an integer that denotes the total possible numbers which are less than or equal to \u2018N.\u2019\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, and it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= \u2019T\u2019  &lt;= 10\n1 &lt;= \u2018M\u2019 &lt;= 9\n1 &lt;= \u2018N\u2019 &lt;= 10^9\n1 &lt;= \u2018DIGITS[i]\u2019 &lt;= 9\n\nWhere \u2018DIGITS\u2019 is sorted in ascending order, and values in the \u2018DIGITS\u2019 array are unique.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n3 45\n1 4 5\n3 11\n1 2 3\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>9\n4\n</code></pre>\n\n<h5 id=\"sample-output-explanation\">Sample Output Explanation:</h5>\n\n<pre><code>First Test case:-\nPossible Numbers less than 45 which can be formed from [1 ,4 ,5] are 1, 4, 5, 11, 14, 15, 41, 44, 45.\nHence answer for the first test case is 9.\n\nSecond Test case:-\nPossible Numbers less than 11 which can be formed from [1, 2, 3] are 1, 2, 3, 11.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n3 88\n1 4 6 \n2 89\n2 3 \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>12\n6\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 2,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a sorted array of distinct digits and an integer N, determine the count of numbers that can be formed using the digits array (with repetition allowed) such that the formed numbers are less than or equal to N.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= M <= 9",
                    "1 <= N <= 10^9",
                    "1 <= DIGITS[i] <= 9"
                ],
                "testcases": [
                    {
                        "input": "n = 45, m = 3, digits = [1, 4, 5]",
                        "output": "9",
                        "explanation": "The numbers that can be formed using [1, 4, 5] and are less than or equal to 45 are: 1, 4, 5, 11, 14, 15, 41, 44, 45.  Total count is 9."
                    },
                    {
                        "input": "n = 11, m = 3, digits = [1, 2, 3]",
                        "output": "4",
                        "explanation": "The numbers that can be formed using [1, 2, 3] and are less than or equal to 11 are: 1, 2, 3, 11. Total count is 4."
                    },
                    {
                        "input": "n = 88, m = 3, digits = [1, 4, 6]",
                        "output": "12",
                        "explanation": "The numbers that can be formed using [1, 4, 6] and are less than or equal to 88 are: 1, 4, 6, 11, 14, 16, 41, 44, 46, 61, 64, 66. Total count is 12."
                    },
                    {
                        "input": "n = 89, m = 2, digits = [2, 3]",
                        "output": "6",
                        "explanation": "The numbers that can be formed using [2, 3] and are less than or equal to 89 are: 2, 3, 22, 23, 32, 33. Total count is 6."
                    },
                    {
                        "input": "n = 7, m = 1, digits = [7]",
                        "output": "1",
                        "explanation": "The numbers that can be formed using [7] and are less than or equal to 7 are: 7. Total count is 1."
                    },
                    {
                        "input": "n = 100, m = 2, digits = [1, 2]",
                        "output": "8",
                        "explanation": "The numbers that can be formed using [1, 2] and are less than or equal to 100 are: 1, 2, 11, 12, 21, 22. total is 6. We missed single digit numbers. So 1,2,11,12,21,22,111 is over N, 11 is ok, same with 12,21,22, let's consider three digits with 1,2 and they are under 100. None. So the ones we listed at first are all under 100 or equal to 100. Let's count.1,2,11,12,21,22,1, 2. Thus total possible such numbers are 1,2,11,12,21,22. Now including 100, none possible. So total are 6"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Generate all possible numbers of 1 digit to \u2018D\u2019 digits where \u2018D\u2019 is the total number of digits in \u2018N\u2019.</p>",
            "<p>Use the principle of counting and permutations to find the possible numbers.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}