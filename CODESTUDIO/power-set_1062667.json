{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9575,
            "title": "Power Set",
            "titleSlug": "power-set_1062667",
            "content": "<h4 id=\"you-are-given-a-sorted-array-of-n-integers-you-have-to-generate-the-power-set-for-this-array-where-each-subset-of-this-power-set-is-individually-sorted\">You are given a sorted array of &#39;N&#39; integers. You have to generate the power set for this array where each subset of this power set is individually sorted.</h4>\n\n<h4 id=\"a-set-is-a-well-defined-collection-of-distinct-elements-power-set-p-arr-of-a-set-arr-is-defined-as-a-set-of-all-possible-subsets-of-arr\">A set is a well-defined collection of distinct elements. Power set P(ARR) of a set &#39;ARR&#39; is defined as a set of all possible subsets of &#39;ARR&#39;.</h4>\n\n<h4 id=\"you-have-to-return-the-array-of-subsets-the-elements-in-the-subset-should-be-sorted-in-ascending-order-the-order-of-subsets-in-the-array-does-not-matter-hence-there-can-be-more-than-1-possible-solution-for-a-given-array\">You have to return the array of subsets. The elements in the subset should be sorted in ascending order. The order of subsets in the array does not matter. Hence there can be more than 1 possible solution for a given array.</h4>\n\n<h5 id=\"for-example\">For example :</h5>\n\n<pre><code>If we are given an array ARR=[1,2,3] then the power set P(ARR) of the set ARR is: [ [], [1], [2], [1,2], [3], [1,3], [2,3], [1,2,3] ]\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>For every subset &#39;X&#39; present in power set P(ARR) of set ARR, X must be sorted i.e. in the example above:\nP1(ARR) =  [ [], [1], [2], [1,2], [3], [1,3], [2,3], [1,2,3] ]\nP2(ARR) =  [ [], [1], [1,2,3], [2], [1,2], [3], [1,3], [2,3] ]\nP3(ARR) =  [ [], [1], [2], [1,2], [3], [1,3], [2,3], [2,3,1] ]\nP1(ARR) and P2(ARR) will be considered correct power sets but P3(ARR) will not be considered correct because there the last subset [2, 3, 1] is not sorted.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains a number &#39;N&#39; denoting the size of the array.\nThe second line contains &#39;N&#39; space-separated distinct integer denoting the elements of the array.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code> For each given &#39;N&#39; print 2^N separate lines each denoting a subset.\n For each subset, print its element separated by space.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don\u2019t have to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= N &lt;= 15\n1 &lt;= ARR[i] &lt;= 50    \nTime limit : 1 second\n</code></pre>\n<h5 id=\"sample-input-1\">Sample input 1 :</h5>\n\n<pre><code>3\n1 2 3    \n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample output 1 :</h5>\n\n<pre><code>1\n2\n3\n1 2\n1 3\n2 3\n\n1 2 3 \n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of sample input 1 :</h5>\n\n<pre><code>The power set P(ARR) of set ARR = [1, 2, 3] is [ [], [1], [2], [1, 2], [3], [1, 3], [2, 3], [1, 2, 3] ].\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample input 2 :</h5>\n\n<pre><code>3\n5 7 8    \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample output 2 :</h5>\n\n<pre><code>8\n7\n\n5\n5 8\n5 7\n5 7 8\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 52,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a sorted array of distinct integers, generate its power set. The power set is the set of all possible subsets, including the empty set. Each subset within the power set must also be sorted in ascending order. Return the power set as a vector of vectors of integers.",
                "constraints": [
                    "1 <= N <= 15",
                    "1 <= ARR[i] <= 50",
                    "The input array contains distinct integers"
                ],
                "testcases": [
                    {
                        "input": "v=[1,2,3]",
                        "output": "[],[1],[2],[3],[1,2],[1,3],[2,3],[1,2,3]",
                        "explanation": "The power set of [1, 2, 3] includes the empty set and all possible combinations of the elements, each sorted in ascending order."
                    },
                    {
                        "input": "v=[5,7,8]",
                        "output": "[],[5],[7],[8],[5,7],[5,8],[7,8],[5,7,8]",
                        "explanation": "The power set of [5, 7, 8] includes the empty set and all possible combinations of the elements, each sorted in ascending order."
                    },
                    {
                        "input": "v=[1,2,3,4]",
                        "output": "[],[1],[2],[3],[4],[1,2],[1,3],[1,4],[2,3],[2,4],[3,4],[1,2,3],[1,2,4],[1,3,4],[2,3,4],[1,2,3,4]",
                        "explanation": "The power set of [1, 2, 3, 4] demonstrates the exponential growth of subsets as the input size increases."
                    },
                    {
                        "input": "v=[1]",
                        "output": "[],[1]",
                        "explanation": "A simple case with a single element. The power set includes the empty set and the set containing the element itself."
                    },
                    {
                        "input": "v=[2,4,6,8,10]",
                        "output": "[],[2],[4],[6],[8],[10],[2,4],[2,6],[2,8],[2,10],[4,6],[4,8],[4,10],[6,8],[6,10],[8,10],[2,4,6],[2,4,8],[2,4,10],[2,6,8],[2,6,10],[2,8,10],[4,6,8],[4,6,10],[4,8,10],[6,8,10],[2,4,6,8],[2,4,6,10],[2,4,8,10],[2,6,8,10],[4,6,8,10],[2,4,6,8,10]",
                        "explanation": "Tests with a larger input size to ensure the algorithm handles more combinations correctly."
                    },
                    {
                        "input": "v=[]",
                        "output": "[]",
                        "explanation": "Tests the edge case where the input array is empty, returning the empty set."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Think about adding an element to all the previous subsets in each iteration.</p>",
            "<p>For each element, we have two choices either we add this element to the current subset or not.</p>",
            "<p>Think about bit representation of all numbers from 0 to 2^N.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}