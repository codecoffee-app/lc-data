{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8887,
            "title": "Predecessor and Successor",
            "titleSlug": "predecessor-and-successor_920476",
            "content": "<h4 id=\"given-a-binary-search-tree-of-integers-containing-n-nodes-you-have-also-been-given-an-integer-x\">Given a binary search tree of integers containing &#39;N&#39; nodes. You have also been given an integer X.</h4>\n\n<h4 id=\"your-task-is-to-find-the-inorder-successor-and-predecessor-of-the-given-x-formally-print-an-array-list-containing-the-inorder-predecessor-and-successor-in-the-same-order\">Your task is to find the inorder successor and predecessor of the given X. Formally, print an array/list containing the inorder predecessor and successor in the same order.</h4>\n\n<h5 id=\"for-example\">For Example:</h5>\n\n<pre><code>For the BST given below:\n</code></pre>\n\n<p><img src=\"https://ninjasfiles.s3.amazonaws.com/0000000000000742.PNG\" alt=\"alttext\"></p>\n\n<pre><code>The inorder predecessor of 6 is 4.\nThe inorder successor of 6 is 7.\nThe inorder predecessor of 10 is 8.\nThe inorder successor of 10 is 13.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>If there is no inorder predecessor or successor of &#39;X&#39;, then add -1 to the answer vector in its place.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains a single integer &#39;T&#39;, representing the number of test cases or queries to be run. \n\nThen the &#39;T&#39; test cases follow:\n\nThe first line of each test case contains elements in the level order form. \nThe line consists of values of nodes separated by a single space. In case a node is null, we take -1 in its place. Refer example given below for more clarity.\n\nThe second line of each test case contains a single integer &#39;X&#39;.\n</code></pre>\n\n<h4 id=\"example\">Example:</h4>\n\n<pre><code>The input for the tree depicted in the below image will be:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/0000000000004189.png\" alt=\"alt text\"></p>\n\n<pre><code>1\n2 3\n4 -1 5 6\n-1 7 -1 -1 -1 -1\n-1 -1\n</code></pre>\n\n<h4 id=\"explanation\">Explanation :</h4>\n\n<pre><code>Level 1 :\nThe root node of the tree is 1\n\nLevel 2 :\nLeft child of 1 = 2\nRight child of 1 = 3\n\nLevel 3 :\nLeft child of 2 = 4\nRight child of 2 = null (-1)\nLeft child of 3 = 5\nRight child of 3 = 6\n\nLevel 4 :\nLeft child of 4 = null (-1)\nRight child of 4 = 7\nLeft child of 5 = null (-1)\nRight child of 5 = null (-1)\nLeft child of 6 = null (-1)\nRight child of 6 = null (-1)\n\nLevel 5 :\nLeft child of 7 = null (-1)\nRight child of 7 = null (-1)\n\nThe first not-null node(of the previous level) is treated as the parent of the first two nodes of the current level. The second not-null node (of the previous level) is treated as the parent node for the next two nodes of the current level and so on.\nThe input ends when all nodes at the last level are null(-1).\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>The above format was just to provide clarity on how the input is formed for a given tree. \nThe sequence will be put together in a single line separated by a single space. Hence, for the above-depicted tree, the input will be given as:\n\n1 2 3 4 -1 5 6 -1 7 -1 -1 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>Print a single line containing the inorder predecessor and successor of &#39;X&#39; separated by a single space.\n\nThe output of each test case is printed in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= N &lt;= 5000\n0 &lt;= DATA &lt;= 10^9\n0 &lt;= X &lt;= 10^9\n\nWhere &#39;DATA&#39; is the value of any node in the BST.\n\nTime Limit: 1sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1\n8 5 10 2 6 -1 -1 -1 -1 -1 7 -1 -1\n5\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>2 6\n</code></pre>\n\n<h4 id=\"explanation-of-the-sample-input-1\">Explanation of the Sample Input 1:</h4>\n\n<pre><code>For the given \u2018X\u2019 = 5, according to the inorder view, 2 is the parent of the left subtree and 6 is the parent of the right subtree, hence 2 and 6 are inorder predecessors and successor respectively.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n8 5 10 2 6 -1 -1 -1 -1 -1 7 -1 -1\n6\n8 5 10 2 6 -1 -1 -1 -1 -1 7 -1 -1\n2\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>5 7\n-1 5\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 24,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a binary search tree (BST) of integers with 'N' nodes and an integer X, find the inorder predecessor and successor of X in the BST.  The inorder predecessor is the node with the largest value less than X, and the inorder successor is the node with the smallest value greater than X.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= N <= 5000",
                    "0 <= DATA <= 10^9 (where DATA is the value of any node in the BST)",
                    "0 <= X <= 10^9",
                    "Time Limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "8 5 10 2 6 -1 -1 -1 -1 -1 7 -1 -1\n5",
                        "output": "2 6",
                        "explanation": "In the given BST, the inorder predecessor of 5 is 2, and the inorder successor is 6."
                    },
                    {
                        "input": "8 5 10 2 6 -1 -1 -1 -1 -1 7 -1 -1\n6",
                        "output": "5 7",
                        "explanation": "In the given BST, the inorder predecessor of 6 is 5, and the inorder successor is 7."
                    },
                    {
                        "input": "8 5 10 2 6 -1 -1 -1 -1 -1 7 -1 -1\n2",
                        "output": "-1 5",
                        "explanation": "In the given BST, the inorder predecessor of 2 does not exist, so it's -1. The inorder successor of 2 is 5."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Binary Search Trees",
                "slug": "binary-search-trees"
            },
            {
                "name": "Trees",
                "slug": "trees"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}