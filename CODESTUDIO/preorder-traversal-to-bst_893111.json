{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8614,
            "title": "Preorder traversal to BST",
            "titleSlug": "preorder-traversal-to-bst_893111",
            "content": "<h4 id=\"you-have-been-given-an-array-list-preorder-representing-the-preorder-traversal-of-a-bst-with-n-nodes-all-the-elements-in-the-given-array-have-distinct-values\">You have been given an array/list &#39;PREORDER&#39; representing the preorder traversal of a BST with &#39;N&#39; nodes. All the elements in the given array have distinct values.</h4>\n\n<h4 id=\"your-task-is-to-construct-a-binary-search-tree-that-matches-the-given-preorder-traversal\">Your task is to construct a binary search tree that matches the given preorder traversal.</h4>\n\n<h4 id=\"a-binary-search-tree-bst-is-a-binary-tree-data-structure-that-has-the-following-properties\">A binary search tree (BST) is a binary tree data structure that has the following properties:</h4>\n\n<pre><code>\u2022 The left subtree of a node contains only nodes with data less than the node\u2019s data.\n\u2022 The right subtree of a node contains only nodes with data greater than the node\u2019s data.\n\u2022 Both the left and right subtrees must also be binary search trees.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>It is guaranteed that a BST can be always constructed from the given preorder traversal. Hence, the answer will always exist.\n</code></pre>\n\n<h5 id=\"example\">Example:</h5>\n\n<pre><code>From PREORDER = [20, 10, 5, 15, 13, 35, 30, 42] , the following BST can be constructed:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/first-5644.png\" alt=\"example\"></p>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains an integer &#39;T&#39; which denotes the number of test cases or queries to be run. Then the test cases follow.\n\nThe first line of each test case contains a single integer &#39;N&#39; denoting the number of nodes in BST.\n\nThe second line of each test case contains &#39;N&#39; single space-separated integers representing the preorder traversal of BST.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>Print the inorder traversal of the constructed BST where all nodes are printed in a single-space separated manner.\n\nOutput for every test case will be printed in a separate line.\n\nNote:\nYou don&#39;t need to print anything. It has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= N &lt;= 5000\n0 &lt;= data &lt;= 10^5\n\nWhere &#39;data&#39; denotes data contained in the nodes of the binary search tree.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1\n6\n10 4 3 7 40 55 \n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>3 5 7 10 40 50\n</code></pre>\n\n<h5 id=\"explanation-for-sample-output1\">Explanation For Sample Output1:</h5>\n\n<pre><code>From the given preorder traversal, the following BST can be constructed:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/graph-20-10655.png\" alt=\"\">   </p>\n\n<pre><code>The inorder traversal of the given BST is [1, 4, 7, 10, 40, 55].\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n7\n15 10 7 13 21 20 25 \n3\n1 2 4\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>7 10 13 15 20 21 25\n1 2 4\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 50,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array 'PREORDER' representing the preorder traversal of a Binary Search Tree (BST) with 'N' nodes, construct the BST. All elements in 'PREORDER' are distinct.  Return the inorder traversal of the constructed BST.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= N <= 5000",
                    "0 <= data <= 10^5",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "6\n10 4 3 7 40 55",
                        "output": "3 4 7 10 40 55",
                        "explanation": "The preorder traversal [10, 4, 3, 7, 40, 55] corresponds to a BST. Constructing the BST and performing an inorder traversal yields [3, 4, 7, 10, 40, 55]."
                    },
                    {
                        "input": "7\n15 10 7 13 21 20 25",
                        "output": "7 10 13 15 20 21 25",
                        "explanation": null
                    },
                    {
                        "input": "3\n1 2 4",
                        "output": "1 2 4",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you identify the left and the right subtree from the given traversal?</p>",
            "<p>Can you think of a way to find nodes belonging to the left and the right subtrees without searching the PREORDER array?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}