{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9338,
            "title": "Prerequisite Task",
            "titleSlug": "prerequisite-task_982936",
            "content": "<h4 id=\"you-are-given-a-positive-integer-n-denoting-the-number-of-tasks-you-need-to-finish-you-can-directly-start-performing-any-task-but-some-tasks-have-some-prerequisites-i-e-to-perform-some-task-you-may-first-need-to-complete-some-other-tasks\">You are given a positive integer \u2018N\u2019 denoting the number of tasks you need to finish. You can directly start performing any task, but some tasks have some prerequisites, i.e. to perform some task you may first need to complete some other tasks.</h4>\n\n<h4 id=\"you-are-given-a-list-of-pairs-of-dependencies-in-the-form-of-u-v-which-means-to-perform-task-u-you-first-need-to-finish-the-task-v-you-need-to-report-whether-it-is-possible-to-complete-all-the-tasks-or-not-return-true-if-it-is-possible-to-finish-all-the-tasks-else-return-false\">You are given a list of pairs of dependencies in the form of ( U, V ) which means to perform task \u2018U\u2019 you first need to finish the task \u2018V\u2019. You need to report whether it is possible to complete all the tasks or not. Return true if it is possible to finish all the tasks else return false.</h4>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of the input contains an integer \u2018T\u2019 denoting the number of test cases.\n\nThe first line of each test case contains two space-separated integers \u2018N\u2019 and \u2018M\u2019 denoting the number of the tasks and dependencies respectively.\n\nThe next \u2018M\u2019 lines of each test case contain two space-separated positive integers in the form of ( U, V ) denoting that to perform a task \u2018U\u2019 you first need to finish the task \u2018V\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>The only line of output of each test case should contain  \u201cYes\u201d (without quotes) if it is possible to finish all the tasks else \u201cNo\u201d (without quotes).\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= N, M &lt;= 10^4\n1 &lt;= U, V &lt;= N \n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n3 3\n1 2\n3 2\n1 3\n2 2\n1 2\n2 1   \n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>Yes\nNo\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for sample input 1:</h5>\n\n<pre><code>Test case 1:\nIn the first case to perform task 1, we need to do task 2 and 3. And to finish task 3 we need to complete task 2 as well, so we order should be  2-&gt;3-&gt;1 which is possible   \n\nTest case 2:\nIn the second test, case task 1 is depending upon task 2, and task 2 is also depending upon task 1 so we there is a cyclic dependency, and we can\u2019t finish the task in this case.  \n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n3 2\n1 2\n2 3\n4 3\n1 4\n2 3\n3 2\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code> Yes\n No\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 1,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a positive integer 'N' representing the number of tasks and a list of dependencies, determine if it is possible to complete all tasks.  A dependency (U, V) indicates that task 'U' requires task 'V' to be completed first.  Return true if all tasks can be completed, and false otherwise.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= N, M <= 10^4",
                    "1 <= U, V <= N"
                ],
                "testcases": [
                    {
                        "input": "dependency = [[1,2],[3,2],[1,3]], n = 3, m = 3",
                        "output": "true",
                        "explanation": "To perform task 1, we need to do task 2 and 3. And to finish task 3 we need to complete task 2 as well, so we order should be  2->3->1 which is possible"
                    },
                    {
                        "input": "dependency = [[1,2],[2,1]], n = 2, m = 2",
                        "output": "false",
                        "explanation": "Task 1 depends on Task 2 and Task 2 depends on Task 1. There is a cyclic dependency, so we cannot complete all tasks."
                    },
                    {
                        "input": "dependency = [[1,2],[2,3]], n = 3, m = 2",
                        "output": "true",
                        "explanation": "Task 1 depends on Task 2, and Task 2 depends on Task 3. So we can complete the tasks in the order 3->2->1."
                    },
                    {
                        "input": "dependency = [[1,4],[2,3],[3,2]], n = 4, m = 3",
                        "output": "false",
                        "explanation": "Task 2 depends on Task 3 and Task 3 depends on Task 2. There is a cyclic dependency, so we cannot complete all tasks."
                    },
                    {
                        "input": "dependency = [[1,2],[2,3]], n = 3, m = 2",
                        "output": "true",
                        "explanation": "Task 1 depends on Task 2, and Task 2 depends on Task 3. So we can complete the tasks in the order 3->2->1."
                    },
                    {
                        "input": "dependency = [[1,2],[2,3],[3,1]], n = 3, m = 3",
                        "output": "false",
                        "explanation": "Task 1 depends on Task 2, Task 2 depends on Task 3, and Task 3 depends on Task 1. There is a cycle, so it's impossible to complete all tasks."
                    },
                    {
                        "input": "dependency = [], n = 5, m = 0",
                        "output": "true",
                        "explanation": "There are no dependencies, so all tasks can be completed in any order."
                    },
                    {
                        "input": "dependency = [[4,3],[1,4],[2,3],[3,2]], n = 4, m = 4",
                        "output": "false",
                        "explanation": "Tasks 2 and 3 depend on each other, creating a cycle and making it impossible to complete all tasks."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Detect the cycle in the directed graph</p>",
            "<p>Check whether it is possible to apply topological sorting in the graph.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Depth-first Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-first Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}