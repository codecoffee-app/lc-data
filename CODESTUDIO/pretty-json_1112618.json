{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9957,
            "title": "PRETTY JSON",
            "titleSlug": "pretty-json_1112618",
            "content": "<h4 id=\"you-are-given-a-string-str-representing-json-object-return-an-array-of-strings-denoting-json-objects-with-proper-indentation\">You are given a string &#39;STR&#39; representing JSON object. Return an array of strings denoting JSON objects with proper indentation.</h4>\n\n<h5 id=\"rules-for-proper-indentation\">Rules for proper indentation:</h5>\n\n<pre><code>1. Every inner brace should increase one indentation to the following lines.\n2. Every close brace should decrease one indentation to the same line and the following lines.\n3. Every \u2018,\u2019 will mean a separate line.\n4. The indents can be increased with an additional 4 spaces or \u2018/t\u2019.\n</code></pre>\n\n<h5 id=\"example\">Example:</h5>\n\n<pre><code>Let the input be: &quot;{A:&quot;B&quot;,C:{D:&quot;E&quot;,F:{G:&quot;H&quot;,I:&quot;J&quot;}}}&quot;\n\nThen we return the following array of strings: \n{ \n    A:&quot;B&quot;,\n    C: \n    { \n        D:&quot;E&quot;,\n        F: \n        { \n            G:&quot;H&quot;,\n            I:&quot;J&quot;\n        } \n    } \n}\n\nNote that for every new brace we are putting an additional 4 spaces or \\t.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>1. [] and {} are only acceptable braces in this case.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases to run. Then the test cases follow.\n\nThe first line of each test case contains the string \u2018STR\u2019.        \n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, return an array of strings containing the indented JSON file.\n\nOutput for each test case will be printed in a new line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= N &lt;= 2*10^3\n\nWhere &#39;N&#39; denotes the length of the string.\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n[&quot;foo&quot;, {&quot;bar&quot;:[&quot;baz&quot;,null,1.0,2]}]\n[{&quot;EmployeeID&quot;:1,&quot;Name&quot;:&quot;Abhishek&quot;,&quot;Designation&quot;:&quot;SoftwareEngineer&quot;}]\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>[\n    &quot;foo&quot;,\n\n    {\n        &quot;bar&quot;:\n        [\n            &quot;baz&quot;,\n            null,\n            1.0,\n            2\n        ]\n    }\n]\n[\n    {\n        &quot;Employee ID&quot;:1,\n        &quot;Name&quot;:&quot;Abhishek&quot;,\n        &quot;Designation&quot;:&quot;SoftwareEngineer&quot;\n    }\n]\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of sample input 1 :</h5>\n\n<pre><code>Test Case 1:\n\nIn the first test case,\nWe can see that we have 3 braces so we print when we encounter \u2018[\u2018 we indent by leaving 4 spaces and then put \u201cfoo\u201d in the string. \nThen we indent 4 more spaces and put \u201cbar\u201d.\nFinally, we indent 4 more spaces for the last opening brace and then print baz.\nSince we have \u2018,\u2019 after \u2018bazz\u2019 we make a new line for null and the numbers. \nFinally, we close the brackets taking care of the proper indentation.\n\n\nIn the second test case,\n\nWe have 2 braces only. After the first \u2018[\u2018 we leave 4 spaces and put \u2018{\u2018 in the string.\nThen we put the string data taking care to change the line after every \u2018,\u2019  and de-indent for every closing brace.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\n{&quot;EmployeeID&quot;:2,&quot;Name&quot;:&quot;Garima&quot;,&quot;Designation&quot;:&quot;EmailMarketing Specialist&quot;}\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>{\n    &quot;Employee ID&quot;:2,\n    &quot;Name&quot;:&quot;Garima&quot;,\n    &quot;Designation&quot;:&quot;EmailMarketing Specialist&quot;\n}\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 20,
            "dislikes": "NA",
            "rephrased": {
                "body": "You are given a string 'STR' representing a JSON object. Your task is to return an array of strings where each string represents a line of the JSON object with proper indentation applied according to the following rules:\n\n1.  Each opening brace (`{` or `[`) increases the indentation level for subsequent lines.\n2.  Each closing brace (`}` or `]`) decreases the indentation level for the current line and subsequent lines.\n3.  Each comma (`,`) indicates the end of a line, and the next element should be on a new line.\n4.  Indentation should be achieved using 4 spaces or a single tab character ('\\t') for each level.\n\nFor example, the input `\"{A:\\\"B\\\",C:{D:\\\"E\\\",F:{G:\\\"H\\\",I:\\\"J\\\"}}}\"` should produce the following output:\n\n\n{\n    A:\"B\",\n    C:\n    {\n        D:\"E\",\n        F:\n        {\n            G:\"H\",\n            I:\"J\"\n        }\n    }\n}\n\n\nNote that only square brackets (`[]`) and curly braces (`{}`) are considered valid braces in this problem.",
                "constraints": [
                    "1 <= T <= 100 (Number of test cases)",
                    "1 <= N <= 2*10^3 (Length of the input string)",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "[\\\"foo\\\", {\\\"bar\\\":[\\\"baz\\\",null,1.0,2]}]",
                        "output": "[\n    \\\"foo\\\",\n\n    {\n        \\\"bar\\\":\n        [\n            \\\"baz\\\",\n            null,\n            1.0,\n            2\n        ]\n    }\n]",
                        "explanation": "The input JSON contains a list with a string and a nested object. The object contains a list itself. The output is the properly indented version."
                    },
                    {
                        "input": "[{\\\"EmployeeID\\\":1,\\\"Name\\\":\\\"Abhishek\\\",\\\"Designation\\\":\\\"SoftwareEngineer\\\"}]",
                        "output": "[\n    {\n        \\\"EmployeeID\\\":1,\n        \\\"Name\\\":\\\"Abhishek\\\",\n        \\\"Designation\\\":\\\"SoftwareEngineer\\\"\n    }\n]",
                        "explanation": "The input JSON is a list containing a single object. The output is the properly indented version."
                    },
                    {
                        "input": "{\\\"EmployeeID\\\":2,\\\"Name\\\":\\\"Garima\\\",\\\"Designation\\\":\\\"EmailMarketing Specialist\\\"}",
                        "output": "{\n    \\\"EmployeeID\\\":2,\n    \\\"Name\\\":\\\"Garima\\\",\n    \\\"Designation\\\":\\\"EmailMarketing Specialist\\\"\n}",
                        "explanation": "The input JSON is a simple object. The output is the properly indented version."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><strong>Just find the braces and put appropriate spaces.</strong></p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}