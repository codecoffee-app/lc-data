{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 16420,
            "title": "Pretty Strings Workshop",
            "titleSlug": "pretty-strings-workshop_3149703",
            "content": "<h4 id=\"ninja-runs-a-workshop-where-he-converts-a-string-to-a-pretty-string-a-pretty-string-is-a-string-that-does-not-contain-a-substring-of-length-at-least-2-which-is-a-palindrome-the-cost-of-a-string-is-the-minimum-number-of-operations-required-to-convert-the-string-into-a-pretty-string-in-one-operation-the-ninja-can-change-any-character-of-the-string-to-one-of-the-first-three-letters-of-the-english-alphabet-as-ninja-is-good-at-string-processing-but-incompetent-at-math-so-can-you-help-ninja-in-calculating-the-cost-of-the-strings\">Ninja runs a workshop where he converts a string to a pretty string. A pretty string is a string that does not contain a substring of length at least 2, which is a palindrome. The cost of a string is the minimum number of operations required to convert the string into a pretty string. In one operation, the ninja can change any character of the string to one of the first three letters of the English alphabet. As ninja is good at string processing but incompetent at math. So, can you help ninja in calculating the cost of the strings?</h4>\n\n<h4 id=\"you-are-given-a-string-str-containing-only-the-first-three-letters-of-the-english-alphabet-and-m-queries-in-each-query-you-have-to-find-the-cost-of-the-substring-of-the-str-from-index-l-to-r\">You are given a string \u2018STR\u2019 containing only the first three letters of the English alphabet and \u2018M\u2019 queries. In each query, you have to find the cost of the substring of the \u2018STR\u2019 from index \u2018L\u2019 to \u2018R\u2019.</h4>\n\n<h5 id=\"for-example\">For example:</h5>\n\n<pre><code>You are given \u2018STR\u2019 = \u201caabac\u201d and \u2018QUERIES\u2019 = [[1, 3], [2, 5]].\nThen the answer of the first query will be 1 as we can convert the substring \u201caab\u201d to \u201cacb\u201d by converting \u2018a\u2019 at index 2 to \u2018c\u2019 to get a pretty string. \nThe answer for the second query will be 1 as we can convert the substring \u201cabac\u201d to \u201ccbac\u201d by converting \u2018a\u2019 at index 2 to \u2018c\u2019. \n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains an integer &#39;T&#39; which denotes the number of test cases.\n\nThe first line contains two space-separated integers, \u2018N\u2019 and \u2018M\u2019, denoting the length of the input string and the number of queries, respectively.\n\nThe second line of each test case contains a string denoting the input string.\n\nThe following \u2018M\u2019 lines contain two space-separated integers, \u2018L\u2019 and \u2018R\u2019, denoting the start and end index(1-indexed) of the substring of the string, respectively.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each query, print the cost of the substring to the string from index \u2018L\u2019 to \u2018R\u2019. \n\nThe output for each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10 \n1 &lt;= N &lt;= 2000\n\u2018STR\u2019 contains only \u2018a\u2019, \u2018b\u2019 or \u2018c\u2019.\n1 &lt;= M &lt;= 2000\n1 &lt;= L &lt;= N  \nL &lt;= R &lt;= N\n\nTime limit: 1 sec\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to input or print anything, as it has already been taken care of. Just implement the given function.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n5 2\naabac\n1 3\n2 5\n3 1\nabb\n1 3\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>1\n1\n1\n</code></pre>\n\n<h5 id=\"explanation\">Explanation:</h5>\n\n<pre><code>For the first test case, the answer of the first query will be 1 as we can convert the substring \u201caab\u201d to \u201cacb\u201d by converting \u2018a\u2019 at index 2 to \u2018c\u2019 to get a pretty string. \nThe answer for the second query will be 1 as we can convert the substring \u201cabac\u201d to \u201ccbac\u201d by converting \u2018a\u2019 at index 2 to \u2018c\u2019. \nFor the second test case, the answer of the first query will be 1 as we can convert the substring \u201cabb\u201d to \u201cabc\u201d by converting \u2018b\u2019 at index 3 to \u2018c\u2019 to get a pretty string. \n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n4 2\nabcb\n1 2\n2 4\n3 1\naaa\n1 3\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>0\n1\n2\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": -4,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string 'STR' consisting of characters 'a', 'b', and 'c', and 'M' queries, determine the minimum number of character changes required to transform each substring specified by the queries into a 'pretty' string. A 'pretty' string is defined as a string that does not contain any palindromic substrings of length 2 or greater. In a single operation, any character in the string can be replaced with 'a', 'b', or 'c'. For each query, you are given a start index 'L' and an end index 'R' (1-indexed) defining the substring. Calculate the minimum cost (number of changes) to make the substring pretty.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 2000",
                    "'STR' contains only 'a', 'b' or 'c'.",
                    "1 <= M <= 2000",
                    "1 <= L <= N",
                    "L <= R <= N",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "5 2\naabac\n1 3\n2 5",
                        "output": "1\n1",
                        "explanation": "For the first query (substring \"aab\"), changing the second 'a' to 'c' results in \"acb\", which is a pretty string, requiring 1 change.\nFor the second query (substring \"abac\"), changing the second 'a' to 'c' results in \"cbac\", which is a pretty string, requiring 1 change."
                    },
                    {
                        "input": "3 1\nabb\n1 3",
                        "output": "1",
                        "explanation": "For the query (substring \"abb\"), changing the second 'b' to 'c' results in \"abc\", which is a pretty string, requiring 1 change."
                    },
                    {
                        "input": "4 2\nabcb\n1 2\n2 4",
                        "output": "0\n1",
                        "explanation": "For the first query (substring \"ab\"), the substring is already a pretty string so no changes are required.\nFor the second query (substring \"bcb\"), changing the first 'b' to 'a' results in \"aca\", which is a pretty string, requiring 1 change."
                    },
                    {
                        "input": "3 1\naaa\n1 3",
                        "output": "2",
                        "explanation": "For the query (substring \"aaa\"), changing the first and second or second and third character to different values like b and c resulting \"abc\" or \"bac\" is sufficient to obtain a pretty string, requiring 2 changes."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Find all the possible pretty strings.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}