{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9881,
            "title": "Prim's MST",
            "titleSlug": "prim-s-mst_1095633",
            "content": "<h4 id=\"you-are-given-an-undirected-connected-weighted-graph-having-n-nodes-numbered-from-1-to-n-a-matrix-e-of-size-m-x-2-is-given-which-represents-the-m-edges-such-that-there-is-an-edge-directed-from-node-e-i-0-to-node-e-i-1-you-are-supposed-to-return-the-minimum-spanning-tree-where-you-need-to-return-weight-for-each-edge-in-the-mst\">You are given an undirected connected weighted graph having \u2018N\u2019 nodes numbered from 1 to &#39;N&#39;. A matrix \u2018E\u2019 of size M x 2 is given which represents the \u2018M\u2019 edges such that there is an edge directed from node E[i][0] to node E[i][1]. You are supposed to return the minimum spanning tree where you need to return weight for each edge in the MST.</h4>\n\n<h5 id=\"for-example\">For example :</h5>\n\n<p><img src=\"https://files.codingninjas.in/prims-mst1-7466.png\" alt=\"alt text\"></p>\n\n<pre><code>The MST (Minimum Spanning Tree) for the above graph is:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/prims-mst2-7467.png\" alt=\"alt text\"></p>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of input contains an integer &#39;T&#39; representing the number of the test case. Then the test cases are as follows.\n\nThe first line of each test case argument given is an integer \u2018N\u2019 representing the number of nodes in the graph.\n\nThe second line of each test case contains a given integer \u2018M\u2019 representing the number of edges. \n\nThe next \u2018M\u2019 lines in each test case contain a matrix \u2018E\u2019 of size M x 2 which represents the \u2018M\u2019 edges such that there is an edge directed from node E[i][0] to node E[i][1].\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print the minimum spanning tree in the form of edges and their weights which are included in the MST.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You do not need to print anything; It has already been taken care of. \n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 \u2264 T \u2264 5\n2 &lt;= N &lt;= 100\n1 &lt;= M &lt;= min(1000, N(N - 1) / 2)\n1 &lt;= E[i][0], E[i][1] &lt;= N\n\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>1\n5 14\n1 2 2\n1 4 6\n2 1 2\n2 3 3\n2 4 8\n2 5 5\n3 2 3\n3 5 7\n4 1 6\n4 2 8\n4 5 9\n5 2 5\n5 3 7\n5 4 9\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>1 2 2\n1 4 6\n2 3 3\n2 5 5\n</code></pre>\n\n<h5 id=\"explanation-of-input-1\">Explanation of Input 1 :</h5>\n\n<pre><code>The Minimum spanning tree for the given graph will contain the edges: (1,2) with weight 2, (1,4) with weight 6, (2,3) with weight 3 and (2,5) with weight 5.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>1\n5 15\n1 2 21\n1 4 16\n2 1 12\n2 3 13\n2 4 18\n2 5 15\n3 2 13\n3 5 17\n4 1 16\n4 2 18\n4 5 19\n5 1 18\n5 2 15\n5 3 17\n5 4 19\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>1 2 12\n1 4 16\n2 3 13\n2 5 15\n</code></pre>\n\n<h5 id=\"explanation-of-input-2\">Explanation of Input 2 :</h5>\n\n<pre><code>The Minimum spanning tree for the given graph will contain the edges: (1,2) with weight 12, (1,4) with weight 16, (2,3) with weight 13 and (2,5) with weight 15.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 81,
            "dislikes": "NA",
            "rephrased": {
                "body": "You are given an undirected connected weighted graph with 'N' nodes, numbered from 1 to 'N'. You are also given a matrix 'E' of size M x 3, where each row represents an edge. E[i][0] and E[i][1] represent the two nodes connected by the edge, and E[i][2] represents the weight of that edge. Your task is to find the Minimum Spanning Tree (MST) of the graph and return the edges and their corresponding weights that are included in the MST.",
                "constraints": [
                    "1 \u2264 T \u2264 5",
                    "2 <= N <= 100",
                    "1 <= M <= min(1000, N(N - 1) / 2)",
                    "1 <= E[i][0], E[i][1] <= N",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "5 14\n1 2 2\n1 4 6\n2 1 2\n2 3 3\n2 4 8\n2 5 5\n3 2 3\n3 5 7\n4 1 6\n4 2 8\n4 5 9\n5 2 5\n5 3 7\n5 4 9",
                        "output": "1 2 2\n1 4 6\n2 3 3\n2 5 5",
                        "explanation": "The Minimum Spanning Tree for the given graph includes the edges (1,2) with weight 2, (1,4) with weight 6, (2,3) with weight 3, and (2,5) with weight 5."
                    },
                    {
                        "input": "5 15\n1 2 21\n1 4 16\n2 1 12\n2 3 13\n2 4 18\n2 5 15\n3 2 13\n3 5 17\n4 1 16\n4 2 18\n4 5 19\n5 1 18\n5 2 15\n5 3 17\n5 4 19",
                        "output": "1 2 12\n1 4 16\n2 3 13\n2 5 15",
                        "explanation": "The Minimum Spanning Tree for the given graph includes the edges (1,2) with weight 12, (1,4) with weight 16, (2,3) with weight 13, and (2,5) with weight 15."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Think of implementing Prim\u2019s algorithm to create Minimum Spanning Tree(MST).</p>",
            "<p>Think of using a heap.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Matrices (2D Arrays)",
                "slug": "matrices-(2d-arrays)"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}