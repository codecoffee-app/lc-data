{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 23739,
            "title": "Prime?",
            "titleSlug": "prime_7064963",
            "content": "<h4 id=\"let-us-call-a-number-prime-if-it-has-exactly-two-distinct-prime-divisors-for-example-numbers-6-18-24-are-prime-while-4-8-9-42-are-not-find-the-number-of-prime-numbers-which-are-between-1-and-n-inclusive\">Let us call a number prime? if it has exactly two distinct prime divisors. For example, numbers 6, 18, 24 are prime?, while 4, 8, 9, 42 are not. Find the number of prime? numbers which are between 1 and \u2018N\u2019, inclusive.</h4>\n\n<h5 id=\"example\">Example :</h5>\n\n<pre><code>\u2018N\u2019 = 7\n 6 is the only prime? number in 1-7. So, the answer is 1.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 denoting the number of test cases, then the test case follows.\n\nThe first line of each test case contains a single integer, \u2018N\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, return a single integer, the number of prime? numbers between 1 and \u2018N\u2019 (inclusive).\n\nOutput for each test case will be printed on a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You are not required to print anything; it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 \u2264 T \u2264 10\n1 \u2264 N \u2264 500\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n10\n5\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>2\n0\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1 :</h5>\n\n<pre><code>For the first test case, 6 and 10 are the prime? Numbers. 6 = 3x2 and 10 = 5x2\n\nFor the second test case, there are no prime? Numbers till 5.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n12\n20\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>3\n7\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 4,
            "dislikes": "NA",
            "rephrased": {
                "body": "A number is considered \"prime?\" if it has exactly two distinct prime divisors. For instance, 6, 18, and 24 are \"prime?\" numbers, while 4, 8, 9, and 42 are not. The task is to determine the count of \"prime?\" numbers within the range of 1 to N, inclusive.",
                "constraints": [
                    "1 \u2264 T \u2264 10",
                    "1 \u2264 N \u2264 500",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "10",
                        "output": "2",
                        "explanation": "The \"prime?\" numbers between 1 and 10 are 6 and 10.  6 = 2 x 3 and 10 = 2 x 5"
                    },
                    {
                        "input": "5",
                        "output": "0",
                        "explanation": "There are no \"prime?\" numbers between 1 and 5."
                    },
                    {
                        "input": "12",
                        "output": "3",
                        "explanation": null
                    },
                    {
                        "input": "20",
                        "output": "7",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Since the constraints on \u2018N\u2019 are quite small, can we do something like a brute-force?</p>",
            "<p>Since the constraints are small, can we just prime factorise each number?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}