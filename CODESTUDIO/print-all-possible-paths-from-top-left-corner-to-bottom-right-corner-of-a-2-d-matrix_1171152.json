{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10189,
            "title": "Print all possible paths from top left corner to bottom right corner of a 2-D matrix",
            "titleSlug": "print-all-possible-paths-from-top-left-corner-to-bottom-right-corner-of-a-2-d-matrix_1171152",
            "content": "<h4 id=\"you-are-given-an-m-n-matrix-you-need-to-print-all-possible-paths-from-its-top-left-corner-to-the-bottom-right-corner-if-given-that-you-can-either-move-right-i-e-from-i-j-to-i-j-1-or-down-i-e-from-i-j-to-i-1-j\">You are given an \u2018M*N\u2019  Matrix, You need to print all possible paths from its top left corner to the bottom right corner if given that you can either move right i.e from (i,j) to (i,j+1) or down i.e from (i, j) to (i+1, j).</h4>\n\n<h5 id=\"for-example\">For Example :</h5>\n\n<pre><code>1 2 3\n4 5 6\n\nFor the above 2*3 matrix , possible paths are (1 2 3 6) , (1 2 5 6) , (1 4 5 6).\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You can return the paths in any order.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains two space-separated integers, \u2018M\u2019 and \u2018N\u2019 denoting the number of rows and columns of the given matrix.\n\nEach of the following \u2018M\u2019 lines contains N space-separated numbers.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>Print all the paths in a new line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= M, N &lt;= 10\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2 2\n1 2 \n3 4\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>1 3 4\n1 2 4\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1 :</h5>\n\n<pre><code>All the possible paths on moving right and down are (1 3 4) and (1 2 4).\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>3 2\n5 10 \n15 20\n25 30\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>5 15 25 30\n5 15 20 30\n5 10 20 30\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 5,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a matrix of integers represented as a 2D vector, find all possible paths from the top-left corner (0, 0) to the bottom-right corner (m-1, n-1). You are only allowed to move either down (increment the row index) or right (increment the column index) at each step.  Return a vector of vectors, where each inner vector represents a path from the top-left to the bottom-right, containing the elements encountered along that path.",
                "constraints": [
                    "1 <= M, N <= 10",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "m = 2, n = 2, mat = [[1, 2], [3, 4]]",
                        "output": "[[1, 3, 4], [1, 2, 4]]",
                        "explanation": "All the possible paths on moving right and down are (1 3 4) and (1 2 4)."
                    },
                    {
                        "input": "m = 3, n = 2, mat = [[5, 10], [15, 20], [25, 30]]",
                        "output": "[[5, 15, 25, 30], [5, 15, 20, 30], [5, 10, 20, 30]]",
                        "explanation": "All possible paths from top-left to bottom-right are:\n5 -> 15 -> 25 -> 30\n5 -> 15 -> 20 -> 30\n5 -> 10 -> 20 -> 30"
                    },
                    {
                        "input": "m = 1, n = 3, mat = [[1, 2, 3]]",
                        "output": "[[1, 2, 3]]",
                        "explanation": "Only one possible path: 1 -> 2 -> 3"
                    },
                    {
                        "input": "m = 3, n = 1, mat = [[1], [2], [3]]",
                        "output": "[[1, 2, 3]]",
                        "explanation": "Only one possible path: 1 -> 2 -> 3"
                    },
                    {
                        "input": "m = 2, n = 3, mat = [[1, 2, 3], [4, 5, 6]]",
                        "output": "[[1, 2, 3, 6], [1, 2, 5, 6], [1, 4, 5, 6]]",
                        "explanation": "Three possible paths are: (1 2 3 6) , (1 2 5 6) , (1 4 5 6)."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>&nbsp;Can we use recursion to generate all the paths?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Matrices (2D Arrays)",
                "slug": "matrices-(2d-arrays)"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}