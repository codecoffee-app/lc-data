{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9231,
            "title": "Print all the nodes at distance from the target node",
            "titleSlug": "print-all-the-nodes-at-distance-from-the-target-node_981259",
            "content": "<h4 id=\"given-a-binary-tree-a-target-node-in-the-binary-tree-and-an-integer-k-you-need-to-find-all-the-nodes-that-are-at-a-distance-k-from-the-given-target-node\">Given a binary tree, a target node in the binary tree, and an integer \u2018K\u2019. You need to find all the nodes that are at a distance \u2018K\u2019 from the given target node.</h4>\n\n<h4 id=\"no-parent-node-pointer-is-available\">No parent node pointer is available.</h4>\n\n<h4 id=\"example\">Example -</h4>\n\n<pre><code>In the below binary tree, suppose the given target node value is 2 and \u2018K\u2019 is 2.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/screenshot-109-_li-6627.jpg\" alt=\"alt text\"></p>\n\n<pre><code>There  are 3 node\u2019s that are at distance \u20182\u2019 from node value \u20182\u2019:\n2-&gt; 5 -&gt; 7  node( 7 )\n2-&gt; 5 -&gt; 8  node( 8 )\n2-&gt; 1 -&gt; 3  node( 3 )\n\nHence we return an array of all three node\u2019s value that are at distance \u20182\u2019 from the given target node\u2019s value \u20182\u2019 = \u2018{ 7, 8, 3 }\u2019.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>1)  You can return the list/vector in any order of the node\u2019s value.\n\n2) If there is no node that is at distance \u2018K\u2019 from the given target node then return an empty list/vector.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases.\nThe next \u20182*T\u2019 lines represent the \u2018T\u2019 test cases.\n\nThe first line of input contains two space-separated integers, the first denotes the given target node\u2019s value and the second denotes the \u2018K\u2019.\n\nThe second line of input contains the elements of the tree in the level order form separated by a single space.\nIf any node does not have a left or right child, take -1 in its place. Refer to the example below.\n\nExample:\n\nElements are in the level order form. The input consists of values of nodes separated by a single space in a single line. In case a node is null, we take -1 in its place.\n\nFor example, the input for the tree depicted in the below image would be :\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/0000000000004189.png\" alt=\"alt text\"></p>\n\n<pre><code> 1\n 2 3\n 4 -1 5 6\n-1 7 -1 -1 -1 -1\n-1 -1\n\nExplanation :\nLevel 1 :\nThe root node of the tree is 1\n\nLevel 2 :\nLeft child of 1 = 2\nRight child of 1 = 3\n\nLevel 3 :\nLeft child of 2 = 4\nRight child of 2 = null (-1)\nLeft child of 3 = 5\nRight child of 3 = 6\n\nLevel 4 :\nLeft child of 4 = null (-1)\nRight child of 4 = 7\nLeft child of 5 = null (-1)\nRight child of 5 = null (-1)\nLeft child of 6 = null (-1)\nRight child of 6 = null (-1)\n\nLevel 5 :\nLeft child of 7 = null (-1)\nRight child of 7 = null (-1)\n\nThe first not-null node (of the previous level) is treated as the \nparent of the first two nodes of the current level. The second not- \nnull node (of the previous level) is treated as the parent node for \nthe next two nodes of the current level and so on.\n\nThe input ends when all nodes at the last level are null (-1).\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>The above format was just to provide clarity on how the input is \nformed for a given tree. \n\nThe sequence will be put together in a single line separated by a \nsingle space. Hence, for the above-depicted tree, the input will be \ngiven as:\n\n1 2 3 4 -1 5 6 -1 7 -1 -1 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For every test case, return a list/vector of the node\u2019s value that \nare at distance \u2018K\u2019 from the given target node\u2019s value.\n</code></pre>\n\n<h5 id=\"note\">Note</h5>\n\n<pre><code>You are not required to print anything; it has already been taken care of. Just implement the function and return the answer.\n</code></pre>\n\n<h5 id=\"constraint\">Constraint :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10^2\n1 &lt;= N &lt;= 3*10^3\n1 &lt;= K &lt;= 12\n-10^9 &lt;= data &lt;= 10^9\n\nWhere \u2018T\u2019 represents the number of test cases, \u2018N\u2019 is the number of nodes in the tree, \u2018K\u2019 is an integer that denotes the distance of the node from the target node and \u2018data\u2019 denotes data contained in the node of a binary tree.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n4 3\n1 2 3 4 5 -1 -1 -1 -1 6 -1 -1 -1\n3 1\n1 2 3 -1 -1 4 5 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample output 1:</h5>\n\n<pre><code>3 6\n1 4 5 \n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1:</h5>\n\n<pre><code>Test case 1:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/screenshot-111-6628.png\" alt=\"alt text\"></p>\n\n<pre><code>Given the target node\u2019s value is \u20184\u2019.\nAll the nodes that are at distance \u20183\u2019 from the given target node ( \u20184\u2019 ):\n\n4-&gt; 2-&gt; 5-&gt; 6 node ( \u20186\u2019 )\n4-&gt; 2-&gt; 1-&gt; 3 node ( \u20183\u2019)\nHence there are \u20182\u2019 nodes that are at distance \u20183\u2019 from the node ( \u20184\u2019). Return a list/vector \u2018{ 6, 3 }\u2019\n\n\nTest case 2:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/screenshot-113-6629.png\" alt=\"alt text\"></p>\n\n<pre><code>Given the target node\u2019s value is \u20183\u2019.\nAll the nodes that are at distance \u20181\u2019 from the given target node ( \u20183\u2019 ):\n\n3-&gt; 4 node ( \u20184\u2019 )\n3-&gt; 5 node ( \u20185\u2019 )\n3-&gt; 1 node ( \u20181\u2019 )\nHence there are \u20183\u2019 nodes that are at distance \u20181\u2019  from the node ( \u20183\u2019 ). Return a list/vector \u2018{ 4, 5, 1 }\u2019.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n2 2\n1 2 3 -1 -1 -1 -1\n6 3\n1 2 3 4 5 -1 -1 6 -1 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample output 2:</h5>\n\n<pre><code>3\n1 5\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 8,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a binary tree, a target node within the tree, and an integer K, find all nodes that are at a distance K from the target node. A parent node pointer is not available for traversal.",
                "constraints": [
                    "1 <= T <= 10^2 (T represents the number of test cases)",
                    "1 <= N <= 3*10^3 (N is the number of nodes in the tree)",
                    "1 <= K <= 12 (K denotes the distance from the target node)",
                    "-10^9 <= data <= 10^9 (data denotes the value contained in a node)",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "4 3\n1 2 3 4 5 -1 -1 -1 -1 6 -1 -1 -1",
                        "output": "3 6",
                        "explanation": "Target node is 4 and K = 3. Nodes at distance 3 from 4 are 3 (4 -> 2 -> 1 -> 3) and 6 (4 -> 2 -> 5 -> 6)."
                    },
                    {
                        "input": "3 1\n1 2 3 -1 -1 4 5 -1 -1 -1 -1",
                        "output": "1 4 5",
                        "explanation": "Target node is 3 and K = 1. Nodes at distance 1 from 3 are 1, 4 and 5."
                    },
                    {
                        "input": "2 2\n1 2 3 -1 -1 -1 -1",
                        "output": "3",
                        "explanation": "Target node is 2 and K = 2. Node at distance 2 from 2 is 3 (2 -> 1 -> 3)."
                    },
                    {
                        "input": "6 3\n1 2 3 4 5 -1 -1 6 -1 -1 -1 -1 -1",
                        "output": "1 5",
                        "explanation": "Target node is 6 and K = 3. Nodes at distance 3 from 6 are 1 and 5."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to use recursion</p>",
            "<p>Try to track the parent node.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Binary Trees",
                "slug": "binary-trees"
            },
            {
                "name": "Depth-first Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Breadth-first Search",
                "slug": "breadth-first-search"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}