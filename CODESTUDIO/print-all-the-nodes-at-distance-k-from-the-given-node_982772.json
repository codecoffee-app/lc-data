{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9305,
            "title": "Print all the nodes at distance k from the given node",
            "titleSlug": "print-all-the-nodes-at-distance-k-from-the-given-node_982772",
            "content": "<h4 id=\"you-have-been-given-a-binary-tree-of-distinct-integers-and-two-integers-target-and-k-you-are-supposed-to-return-the-list-of-values-of-all-the-nodes-which-are-situated-at-k-distance-from-the-target-node\">You have been given a Binary Tree of distinct integers and two integers \u201ctarget\u201d and \u2018K\u2019. You are supposed to return the list of values of all the nodes which are situated at \u2018K\u2019 distance from the target node.</h4>\n\n<h4 id=\"distance-between-two-nodes-u-and-v-is-defined-as-the-number-of-edges-in-the-shortest-path-from-u-to-v\">Distance between two nodes \u2018u\u2019 and \u2018v\u2019 is defined as the number of edges in the shortest path from \u2018u\u2019 to \u2018v\u2019.</h4>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You may assume that the given target node definitely exists in the given binary tree.\n</code></pre>\n\n<h5 id=\"for-example\">For example :</h5>\n\n<pre><code>For the given binary tree\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/printall-6732.png\" alt=\"Example\"></p>\n\n<pre><code>Nodes in the above binary tree that has K = 2 distance from the target node are highlighted in yellow colour.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains an integer &#39;T&#39; which denotes the number of test cases or queries to be run. Then the test cases are as follows.\n\nThe first line of each test case contains elements of the tree in the level order form. The line consists of values of nodes separated by a single space. In case a node is null, we take -1 in its place.\n\nThe second line of each test case contains two integers \u201ctarget\u201d and \u2018K\u2019 which are described above.\n\nFor example, the input for the tree depicted in the below image would be :\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/btree-5038.png\" alt=\"Example\"></p>\n\n<pre><code>1\n2 3\n4 -1 5 6\n-1 7 -1 -1 -1 -1\n-1 -1\n</code></pre>\n\n<h4 id=\"explanation\">Explanation :</h4>\n\n<pre><code>Level 1 :\nThe root node of the tree is 1\n\nLevel 2 :\nLeft child of 1 = 2\nRight child of 1 = 3\n\nLevel 3 :\nLeft child of 2 = 4\nRight child of 2 = null (-1)\nLeft child of 3 = 5\nRight child of 3 = 6\n\nLevel 4 :\nLeft child of 4 = null (-1)\nRight child of 4 = 7\nLeft child of 5 = null (-1)\nRight child of 5 = null (-1)\nLeft child of 6 = null (-1)\nRight child of 6 = null (-1)\n\nLevel 5 :\nLeft child of 7 = null (-1)\nRight child of 7 = null (-1)\n\nThe first not-null node(of the previous level) is treated as the parent of the first two nodes of the current level. The second not-null node (of the previous level) is treated as the parent node for the next two nodes of the current level and so on.\nThe input ends when all nodes at the last level are null(-1).\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>The above format was just to provide clarity on how the input is formed for a given tree. \nThe sequence will be put together in a single line separated by a single space. Hence, for the above-depicted tree, the input will be given as:\n\n1 2 3 4 -1 5 6 -1 7 -1 -1 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>Print a list of space-separated integers that denote the values of nodes that are at \u2018K\u2019 distance from the \u201ctarget\u201d node.\n\nFor each test case, print the output in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n0 &lt;= N &lt;= 3000\n0 &lt;= data &lt;= 10^4\n0 &lt;= target &lt;= 1o^4\n1 &lt;= K &lt;= 3000\n\nWhere \u2018N\u2019 is the total number of nodes in the binary tree, and \u201cdata\u201d is the value of the binary tree node.\n\nTime Limit: 1sec\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1 :</h4>\n\n<pre><code>4 5 -1 6 7 -1 -1 -1 -1 -1 -1 -1\n2 2\n1 2 3 -1 -1 -1 -1\n1 1\n4 3 -1 -1 -1\n3 1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>3 7\n2 3\n4\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1 :</h5>\n\n<pre><code>The tree of the first test case is shown below.    \n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/printall-6732.png\" alt=\"Example\"></p>\n\n<pre><code>For the first test case, there are two nodes {3, 7} which are at \u2018K\u2019 = 2 distance from the target node.\n\nFor the second test case, there are two nodes {2, 3} which are at \u2018K\u2019 = 1 distance from the target node.\n\nFor the third test case, 4 is the only node that is at \u2018K\u2019 = 1 distance from the target node.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n2 4 -1 5 -1 -1 -1\n2 2\n1 4 2 -1 -1 -1 3 -1 -1\n4 3\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>5\n3\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-2\">Explanation of Sample Input 2 :</h5>\n\n<pre><code>For the first test case, 5 is the only node that is at \u2018K\u2019 = 2  distance from the target node.\n\nFor the second test case, 3 is the only node that is at \u2018K\u2019 = 3 distance from the target node.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 2,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a binary tree represented by its root node, a target node value, and an integer K, find all nodes in the tree that are exactly K edges away from the target node. Return a list of the values of these nodes. You are guaranteed that the target node exists in the tree. The tree consists of nodes with distinct integer values.",
                "constraints": [
                    "1 <= T <= 100",
                    "0 <= N <= 3000",
                    "0 <= data <= 10^4",
                    "0 <= target <= 10^4",
                    "1 <= K <= 3000"
                ],
                "testcases": [
                    {
                        "input": "root = [4, 5, -1, 6, 7, -1, -1, -1, -1, -1, -1], target = 2, k = 2",
                        "output": "3 7",
                        "explanation": "The tree is shown below:\n\n      4\n     / \\\n    5   -\n   / \\\n  6   7\n\nTarget node value is 2, and no node has value 2. The example input in the problem description is incorrect and should have included 2 as the target node's value.  Assuming that '5' is actually '2', Nodes 3 and 7 are at a distance of 2 from node 2."
                    },
                    {
                        "input": "root = [1, 2, 3, -1, -1, -1, -1], target = 1, k = 1",
                        "output": "2 3",
                        "explanation": "The tree is:\n\n    1\n   / \\\n  2   3\n\nNodes 2 and 3 are at a distance of 1 from node 1."
                    },
                    {
                        "input": "root = [4, 3, -1, -1, -1], target = 3, k = 1",
                        "output": "4",
                        "explanation": "The tree is:\n\n    4\n   /\n  3\n\nNode 4 is at a distance of 1 from node 3."
                    },
                    {
                        "input": "root = [2, 4, -1, 5, -1, -1, -1], target = 2, k = 2",
                        "output": "5",
                        "explanation": "The tree is:\n\n    2\n   /\n  4\n /\n5\n\nNode 5 is at a distance of 2 from node 2."
                    },
                    {
                        "input": "root = [1, 4, 2, -1, -1, -1, 3, -1, -1], target = 4, k = 3",
                        "output": "3",
                        "explanation": "The tree is:\n\n    1\n   / \\\n  4   2\n      \\\n       3\n\nNode 3 is at a distance of 3 from node 4."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you think of breaking down the problem into the sub-problems?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Trees",
                "slug": "trees"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}