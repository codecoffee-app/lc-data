{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9251,
            "title": "Print matrix elements in sorted order",
            "titleSlug": "print-matrix-elements-in-sorted-order_981282",
            "content": "<h4 id=\"you-have-been-given-a-matrix-of-n-rows-and-m-columns-filled-up-with-integers-where-every-row-is-sorted-in-non-decreasing-order-your-task-is-to-return-all-the-elements-of-the-given-matrix-in-non-decreasing-order\">You have been given a matrix of \u2018N\u2019 rows and \u2018M\u2019 columns filled up with integers where every row is sorted in non-decreasing order. Your task is to return all the elements of the given matrix in non-decreasing order.</h4>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 representing the number of test cases. \n\nThe first line of each test case will contain two integers \u2018N\u2019 and \u2018M\u2019 denoting the number of rows and columns, respectively.\n\nNext \u2018N\u2019 lines contain \u2018M\u2019 space-separated integers each denoting the elements in the matrix.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print N*M space-separated integers which denote the elements of the given matrix in non-decreasing order.\n\nOutput for every test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don\u2019t need to print anything; It has already been taken care of.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 50\n1 &lt;= N , M &lt;= 10^2\n0 &lt;= matrix[i][j] &lt;= 10^5\n\nWhere \u2018T\u2019 is the number of test cases.\nWhere &#39;N&#39; is the number of rows in the given matrix, and &#39;M&#39; is the number of columns in the given matrix.\nAnd, matrix[i][j] denotes the value at (i, j)th cell in the matrix.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n1 3\n1 2 3\n2 3\n2 6 9\n1 5 11\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>1 2 3\n1 2 5 6 9 11\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1 :</h5>\n\n<pre><code>In the first test case, the list of the elements of the given matrix in a non-decreasing order is [1, 2, 3].\n\nIn the second test case, the list of the elements of the given matrix in a non-decreasing order is [1, 2, 5, 6, 9, 11].\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n3 3\n2 6 8\n1 4 7\n6 8 9\n2 2\n4 6\n1 2\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>1 2 4 6 6 7 8 8 9\n1 2 4 6\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation For Sample Input 2 :</h5>\n\n<pre><code>In the first test case, the list of the elements of the given matrix in a non-decreasing order is [1, 2, 4, 6, 6, 7, 8, 8, 9].\n\nIn the second test case, the list of the elements of the given matrix in a non-decreasing order is [1, 2, 4, 6].\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": -7,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a matrix of N rows and M columns, where each row is sorted in non-decreasing order, return all the elements of the matrix in non-decreasing order.",
                "constraints": [
                    "1 <= T <= 50",
                    "1 <= N, M <= 100",
                    "0 <= matrix[i][j] <= 100000"
                ],
                "testcases": [
                    {
                        "input": "1\n1 3\n1 2 3",
                        "output": "1 2 3",
                        "explanation": "The input matrix is [[1, 2, 3]]. Sorting all elements gives [1, 2, 3]."
                    },
                    {
                        "input": "1\n2 3\n2 6 9\n1 5 11",
                        "output": "1 2 5 6 9 11",
                        "explanation": "The input matrix is [[2, 6, 9], [1, 5, 11]]. Sorting all elements gives [1, 2, 5, 6, 9, 11]."
                    },
                    {
                        "input": "2\n3 3\n2 6 8\n1 4 7\n6 8 9",
                        "output": "1 2 4 6 6 7 8 8 9",
                        "explanation": "The input matrix is [[2, 6, 8], [1, 4, 7], [6, 8, 9]]. Sorting all elements gives [1, 2, 4, 6, 6, 7, 8, 8, 9]."
                    },
                    {
                        "input": "2\n2 2\n4 6\n1 2",
                        "output": "1 2 4 6",
                        "explanation": "The input matrix is [[4, 6], [1, 2]]. Sorting all elements gives [1, 2, 4, 6]."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you think of sorting the whole matrix?</p>",
            "<p>Can you think of using a divide-and-conquer strategy?</p>",
            "<p>Can you utilize the property of min-heap to solve this problem?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Heap",
                "slug": "heap"
            },
            {
                "name": "Matrices (2D Arrays)",
                "slug": "matrices-(2d-arrays)"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}