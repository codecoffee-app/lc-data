{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9293,
            "title": "Print Parentheses",
            "titleSlug": "print-parentheses_982760",
            "content": "<h4 id=\"given-n-pairs-of-parentheses-write-a-function-to-generate-and-print-all-combinations-of-well-formed-parentheses-that-is-you-need-to-generate-all-possible-valid-sets-of-parentheses-that-can-be-formed-with-a-given-number-of-pairs\">Given N pairs of parentheses, write a function to generate and print all combinations of well-formed parentheses. That is, you need to generate all possible valid sets of parentheses that can be formed with a given number of pairs.</h4>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The only line of input contains an integer \u2018N\u2019 representing the given number of parentheses.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>The output contains all possible valid parentheses printed in different lines.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>The order in which different combinations of well-formed parentheses are printed doesn&#39;t matter.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= N &lt;= 10\n\nTime Limit: 1sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>3\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>{{{}}}\n{{}{}}\n{{}}{}\n{}{{}}\n{}{}{}\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1:</h5>\n\n<pre><code>These are the only five sequences of balanced parentheses formed using 3 pairs of balanced parentheses.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>{{}}\n{}{}\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 8,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an integer 'N' representing the number of pairs of parentheses, generate and print all possible combinations of well-formed (valid) parentheses sequences.",
                "constraints": [
                    "1 <= N <= 10",
                    "Time Limit: 1sec",
                    "The order in which different combinations of well-formed parentheses are printed doesn't matter."
                ],
                "testcases": [
                    {
                        "input": "n = 3",
                        "output": "{{{}}}\n{{}{}}\n{{}}{}\n{}{{}}\n{}{}{}",
                        "explanation": "These are the only five sequences of balanced parentheses formed using 3 pairs of balanced parentheses."
                    },
                    {
                        "input": "n = 2",
                        "output": "{{}}\n{}{}",
                        "explanation": ""
                    },
                    {
                        "input": "n = 1",
                        "output": "{}",
                        "explanation": ""
                    },
                    {
                        "input": "n = 4",
                        "output": "{{{{}}}}\n{{{}{}}}\n{{}{{}}}\n{{}}{}{}\n{{}}{}}\n{}{{{}}}\n{}{{}{}}\n{}{}{{}}\n{}{}{}{}\n{}{}{}",
                        "explanation": "All well formed parantheses for n = 4"
                    },
                    {
                        "input": "n = 5",
                        "output": "{{{{{{}}}}}}\n{{{{{}}{}}}}\n{{{{{}}{}{}}}}\n{{{{{}}{}}}}\n{{{{{}}}}}{}\n{{{{{}}}}{}{}}\n{{{{{}}}}}{}{}\n{{{{}}}}{}{{}}\n{{{{}}}}{}}{}{}\n{{{{}}}}{{}}{}{}\n{{{{}}}}{{}}}{}\n{{{{}}}}{{}}{}{}\n{{{{}}}}{{}{}}\n{{{{}}}}{{{}}}\n{{{{}}}}{{}{}}\n{{{{}}}}{}{{}}\n{{{{}}}}{}{}{}{}\n{{{{}}}}{}{}{}\n{{{{}}}{{{}}}}\n{{{{}}}{{}{}}}}\n{{{{}}}{}{{}}}}\n{{{{}}}{}}{}{}{}\n{{{{}}}{}}{}{}}\n{{{{}}}{}}{}}}}\n{{{{}}}}{}}{{}}\n{{{{}}}}{}}{}{}\n{{{{}}}}{}}{{}}\n{{{{}}}}{}}}}{}\n{{{{}}}}{}}}}\n{{{{}}{}{}}}}{}\n{{{{}}{}{}{}}}}\n{{{{}}{}{}}}{}{}\n{{{{}}{}{}}}{}\n{{{{}}{}{}}}{}{}\n{{{{}}{}{}}}}{}{}\n{{{{}}{}{}}}{}\n{{{{}}{}}}{{}}\n{{{{}}{}}}{}{}{}\n{{{{}}{}}}{}{}\n{{{{}}{}}}{}{{}}\n{{{{}}}{}}{{{}}}}\n{{{{}}{}}}{{}{}}}}\n{{{{}}{}}}{}{{}}}}\n{{{{}}}{}}{}}{}{}{}\n{{{{}}{}}}{}}{}{}\n{{{{}}{}}}{}}{}{}\n{{{{}}{}}}{}{}}}}\n{{{{}}{}}{}{}}}}\n{{{{}}}{}}}{{{}}}\n{{{{}}{}}}{{}{}}}}\n{{{{}}{}}}{}{{}}}}\n{{{{}}{}}}{}}{}{}{}\n{{{{}}{}}}{}}{}{}\n{{{{}}{}}}{}}{}{}\n{{{{}}{}}}{}}{}}}}\n{{{{}}{}}}{}{}}}}\n{}{{{{{}}}}}\n{}{{{{}{}}}}\n{}{{{}{{}}}}\n{}{{{{}}{}}}}\n{}{{{{}}{}{}}}}\n{}{{{{}}}}{}\n{}{{{}}}{{}}\n{}{{{}}}{}{}}\n{}{{{}{}}}{}\n{}{{{}{}}{}}\n{}{{{}{}}}}\n{}{{}{{{}}}}\n{}{{}{{}{}}}}\n{}{{}{}{{}}}}\n{}{{}{}}{}{}\n{}{{}{}}{}\n{}{{}{}}}}\n{}{{}{}{{{}}}}\n{}{{}{}{{}{}}}}\n{}{{}{}{}{{}}}}\n{}{{}{}{}}{}{}{}\n{}{{}{}{}}{}{}\n{}{{}{}{}}}}\n{}{{}{}}{{{}}}}\n{}{{}{}}{{}{}}}}\n{}{{}{}}{}{{}}}}\n{}{{}{}}{}}{}{}{}\n{}{{}{}}{}}{}{}\n{}{{}{}}{}}{}\n{}{{}{}}{}}}}\n{}{{}{}}{}}}}\n{}{{}{}}}{{{}}}}\n{}{{}{}}}{{}{}}}}\n{}{{}{}}}{}{{}}}}\n{}{{}{}}}{}}{}{}{}\n{}{{}{}}}{}}{}{}\n{}{{}{}}}{}}{}\n{}{{}{}}}{}}}}\n{}{{}{}}{}}}}\n{}{}{{{{}}}}\n{}{}{{{{}}{}}}}\n{}{}{{{{}}{}{}}}}\n{}{}{{{{}}}}{}\n{}{}{{{}}}{{}}\n{}{}{{{}}}{}{}}\n{}{}{{{}{}}}{}\n{}{}{{{}{}}{}}\n{}{}{{{}{}}}}\n{}{}{{}{{{}}}}\n{}{}{{}{{}{}}}}\n{}{}{{}{}{{}}}}\n{}{}{{}{}}{}{}{}\n{}{}{{}{}}{}{}\n{}{}{{}{}}}}\n{}{}{{}{{{}}}}\n{}{}{{}{{}{}}}}\n{}{}{{}{}{{}}}}\n{}{}{{}{}}{}{}{}\n{}{}{{}{}}{}{}\n{}{}{{}{}}}}\n{}{}{}}}{{{}}}}\n{}{}{}}}{{}{}}}}\n{}{}{}}}{}{{}}}}\n{}{}{}}}{}}{}{}{}\n{}{}{}}}{}}{}{}\n{}{}{}}}{}}{}\n{}{}{}}}{}}}}\n{}{}{}}}{}}}}\n",
                        "explanation": "All well formed parantheses for n = 5"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Use recursion to print each valid sequence of brackets.</p>",
            "<p>Use backtracking to print each valid sequence of brackets.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}