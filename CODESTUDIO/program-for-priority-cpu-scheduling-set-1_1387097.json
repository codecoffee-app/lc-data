{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 11838,
            "title": "Program for Priority CPU Scheduling | Set 1",
            "titleSlug": "program-for-priority-cpu-scheduling-set-1_1387097",
            "content": "<h4 id=\"you-are-given-the-n-processes-with-their-burst-times-and-the-arrival-time-for-all-processes-is-0-you-are-also-given-the-priority-of-each-process\">You are given the \u2018N\u2019 processes with their \u201cburst times\u201d, and the \u201carrival time\u201d for all processes is \u20180\u2019. You are also given the \u2018priority\u2019 of each process.</h4>\n\n<h4 id=\"your-task-is-to-find-the-waiting-time-and-the-turn-around-time-of-each-process-using-the-priority-cpu-scheduling-algorithm\">Your task is to find the \u201cwaiting time\u201d and the \u201cturn-around time\u201d of each process using the \u2018Priority CPU Scheduling\u2019 algorithm.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>1. The highest priority process will be scheduled first, followed by the next highest priority, and so on.\n\n2. If the two processes have the same priority, then you have to run the process with the lowest number (id) first.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains an integer \u2018T\u2019, which denotes the number of test cases to be run. Then, the &#39;T&#39; test cases follow. \n\nThe first line of each test case contains a single positive integer, \u2018N\u2019, denoting the number of Processes.\n\nThe second line of each test case contains \u2018N\u2019 space-separated non-negative integer denoting the \u2018burst\u2019 time of each process.\n\nThe last line of each test case contains \u2018N\u2019 space-separated non-negative integers denoting the \u2018priority\u2019 of each process.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, return an array of arrays, where the 1st array will represent the \u2018waiting time, and the 2nd array will denote the \u2018turn-around time\u2019 of each process.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 10^4\n1 &lt;= BURST[i],PRIORITY[i] &lt;= 10^4\n\nTime Limit: 1sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1\n5\n2 1 3 2 1\n3 4 1 2 5\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>2 1 6 4 0\n4 2 9 6 1\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for sample input 1:</h5>\n\n<p><img src=\"https://files.codingninjas.in/priority_cpu_tc1-8874.png\" alt=\"altImage\"></p>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\n1\n3\n1      \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>0\n3\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation for sample input 2:</h5>\n\n<pre><code>We have only one process, so it starts at time 0 and ends at time 3.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 4,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given 'N' processes with their burst times and priorities, where the arrival time for all processes is 0, determine the waiting time and turnaround time for each process using the Priority CPU Scheduling algorithm.  Processes are scheduled based on priority, with higher priority processes executed first. In cases of equal priority, the process with the lower ID is executed first.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10^4",
                    "1 <= BURST[i], PRIORITY[i] <= 10^4"
                ],
                "testcases": [
                    {
                        "input": "n = 5, burstTime = [2, 1, 3, 2, 1], priority = [3, 4, 1, 2, 5]",
                        "output": "[2, 1, 6, 4, 0]\n[4, 2, 9, 6, 1]",
                        "explanation": "The processes are scheduled in the order: P3 (priority 1), P4 (priority 2), P1 (priority 3), P2 (priority 4), P5 (priority 5).\n\nWaiting Times:\nP3: 0\nP4: 3\nP1: 3 + 2 = 5 => Incorrect calculation in original prompt. Should be 2\nP2: 2 + 1 + 3 = 6\nP5: 2+1+3+2 = 8=> Incorrect calculation in original prompt. Should be 4\nP5: 0\n\nTurnaround Times:\nP3: 3\nP4: 3 + 2 = 5 => Incorrect calculation in original prompt. Should be 2\nP1: 2+2=4\nP2: 6+1=7=> Incorrect calculation in original prompt. Should be 9\nP4: 6\nP5: 0+1=1"
                    },
                    {
                        "input": "n = 1, burstTime = [3], priority = [1]",
                        "output": "[0]\n[3]",
                        "explanation": "With only one process, its waiting time is 0 and its turnaround time is equal to its burst time."
                    },
                    {
                        "input": "n = 3, burstTime = [1, 2, 3], priority = [2, 2, 1]",
                        "output": "[3, 1, 0]\n[4, 3, 3]",
                        "explanation": "Process 3 has the highest priority (1) and executes first. Then Process 1 and Process 2 are of same priority so P1 executes since it has lowest id.\n\nWaiting Times:\nP3: 0\nP1: 3\nP2: 1\n\nTurnaround Times:\nP3: 3\nP1: 4\nP2: 3"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><i>Sort according to the priority.</i></p>"
        ],
        "relatedTopics": [
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}