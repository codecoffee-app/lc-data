{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10752,
            "title": "Query And Matrix",
            "titleSlug": "query-and-matrix_1263845",
            "content": "<h4 id=\"you-are-given-a-binary-matrix-with-m-rows-and-n-columns-initially-consisting-of-all-0s-q-queries-follow-the-queries-can-be-of-4-types\">You are given a binary matrix with \u2018M\u2019 rows and \u2018N\u2019 columns initially consisting of all 0s. &#39;Q&#39; queries follow. The queries can be of 4 types:</h4>\n\n<pre><code>Query 1: 1 R index\nQuery 2: 1 C index \nQuery 3: 2 R index\nQuery 4: 2 C index\n\nIn each query, the first input is the type of the query, the second input is whether we have to consider the row (&#39;R&#39;) or the column (&#39;C&#39;) and the third input is the index of the row/column. \n\nFor each type 1 query, we need to flip the elements of the row/column having the given index. \n\nFor each type 2 query, we have to output the number of zeros present in the row/column having the given index. \n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>Note that the matrix is a binary matrix, meaning that it only contains either 0 or 1.\n</code></pre>\n\n<h5 id=\"example\">Example :</h5>\n\n<pre><code>Given M = 3, N = 3, \nQueries : 1R1, 1R2, 2C1\n\nSo, in the above example the change in the matrix would look like this:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/i1-11509.png\" alt=\"Example\"></p>\n\n<pre><code>Next query 2C1 will return the count of the number of zeroes in the 1st column: 1\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains an integer \u2018T\u2019 which denotes the number of test cases.\n\nThe first line of each test case contains two space-separated integers \u2018M\u2019 and \u2018N\u2019, denoting the dimensions of the matrix.\n\nThe next line contains a single integer \u2018Q\u2019 denoting the number of queries.\n\nThe next \u2018Q\u2019 lines of each test contain the queries.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, return a single integer denoting the number of zeroes according to the given query of type 2.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You don\u2019t need to print anything; It has already been taken care of. Juts implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= M, N  &lt;= 100\n1 &lt;= Q &lt;= 1000\n1 &lt;= R &lt;= M\n1 &lt;= C &lt;= N\ntype = 1, 2\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n3 3\n3\n1R1\n1R2\n2C1\n2 2\n1\n2R1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>1\n2\n</code></pre>\n\n<h5 id=\"explanation-of-sample-output-1\">Explanation of Sample Output 1:</h5>\n\n<pre><code>In test case 1, Next query 2C1 will return the count of the number of zeroes in the 1st column: 1\n\nThe change in the matrix after the first and second queries would look like this:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/i1-11509.png\" alt=\"Example\"></p>\n\n<pre><code>In test case 2, all the matrix elements are zero and hence the count of zeroes will be 2 for the first row.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n3 3\n4\n2C1\n1R1\n1R1\n2R1\n2 2\n5\n2C1\n1R1\n1R1\n1R1\n2R1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>3 3\n2 0\n</code></pre>\n\n<h5 id=\"explanation-of-sample-output-2\">Explanation of Sample Output 2:</h5>\n\n<pre><code>In test case 1, \n\nFirst query 2C1 will return the count of the number of zeroes in the 1st column: 3\n\nNext query 2R1 will return the count of the number of zeroes in the 1st column: 3\n\nThe change in the matrix after the second and third queries would look like this:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/i2-11510.png\" alt=\"Example\"></p>\n\n<pre><code>In test case 2,\n\nFirst query 2C1 will return the count of the number of zeroes in the 1st column: 2\n\nNext query 2R1 will return the count of the number of zeroes in the 1st column: 0\n\nThe change in the matrix after the second and third queries would look like this:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/i3-11511.png\" alt=\"Example\"></p>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 1,
            "dislikes": "NA",
            "rephrased": {
                "body": "You are given a binary matrix of size M x N, initialized with all 0s. You need to process a series of Q queries on this matrix. There are two types of queries:\n\nType 1: Flip all the elements in a given row or column (0 becomes 1, and 1 becomes 0).\nType 2: Count the number of 0s present in a given row or column.\n\nGiven the dimensions of the matrix (M, N) and a list of queries, implement a function that processes the queries and returns the results of the type 2 queries.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= M, N <= 100",
                    "1 <= Q <= 1000"
                ],
                "testcases": [
                    {
                        "input": "mat = [[0,0,0],[0,0,0],[0,0,0]], m = 3, n = 3, q = [\"1R1\", \"1R2\", \"2C1\"]",
                        "output": "1",
                        "explanation": "Initial matrix:\n[[0, 0, 0],\n [0, 0, 0],\n [0, 0, 0]]\n\nQuery 1R1: Flip row 1.\n[[1, 1, 1],\n [0, 0, 0],\n [0, 0, 0]]\n\nQuery 1R2: Flip row 2.\n[[1, 1, 1],\n [1, 1, 1],\n [0, 0, 0]]\n\nQuery 2C1: Count 0s in column 1.  Only the last row has a 0 in the first column, so the count is 1."
                    },
                    {
                        "input": "mat = [[0,0],[0,0]], m = 2, n = 2, q = [\"2R1\"]",
                        "output": "2",
                        "explanation": "Initial matrix:\n[[0, 0],\n [0, 0]]\n\nQuery 2R1: Count 0s in row 1.  Row 1 has two 0s, so the count is 2."
                    },
                    {
                        "input": "mat = [[0,0,0],[0,0,0],[0,0,0]], m = 3, n = 3, q = [\"2C1\", \"1R1\", \"1R1\", \"2R1\"]",
                        "output": "3, 3",
                        "explanation": "Initial matrix:\n[[0, 0, 0],\n [0, 0, 0],\n [0, 0, 0]]\n\nQuery 2C1: Count 0s in column 1. The count is 3.\nQuery 1R1: Flip row 1.\n[[1, 1, 1],\n [0, 0, 0],\n [0, 0, 0]]\nQuery 1R1: Flip row 1 again.  This reverses the flip from the previous query.\n[[0, 0, 0],\n [0, 0, 0],\n [0, 0, 0]]\nQuery 2R1: Count 0s in row 1. The count is 3."
                    },
                    {
                        "input": "mat = [[0,0],[0,0]], m = 2, n = 2, q = [\"2C1\", \"1R1\", \"1R1\", \"1R1\", \"2R1\"]",
                        "output": "2, 0",
                        "explanation": "Initial matrix:\n[[0, 0],\n [0, 0]]\n\nQuery 2C1: Count 0s in column 1. The count is 2.\nQuery 1R1: Flip row 1.\n[[1, 1],\n [0, 0]]\nQuery 1R1: Flip row 1 again.\n[[0, 0],\n [0, 0]]\nQuery 1R1: Flip row 1 again.\n[[1, 1],\n [0, 0]]\nQuery 2R1: Count 0s in row 1. The count is 0."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you think of traversing the given row or column?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Matrices (2D Arrays)",
                "slug": "matrices-(2d-arrays)"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}