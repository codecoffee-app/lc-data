{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 17818,
            "title": "Raju and his string",
            "titleSlug": "raju-and-his-string_3959297",
            "content": "<h4 id=\"raju-is-playing-with-his-string-s-of-length-n-consisting-of-lowercase-letters-only-he-wonders-if-his-string-is-a-good-string-print-1-if-s-is-a-good-string-else-print-0\">Raju is playing with his string &#39;S&#39; of length &#39;N&#39; consisting of lowercase letters only. He wonders if his string is a good string. Print 1 if &#39;S&#39; is a good string else print 0.</h4>\n\n<h4 id=\"a-string-is-a-good-string-if-the-parity-of-the-number-of-unique-characters-in-the-string-is-equal-to-the-parity-of-its-length\">A string is a good string if the parity of the number of unique characters in the string is equal to the parity of its length.</h4>\n\n<h4 id=\"parity-is-the-property-of-an-integer-of-whether-it-is-even-or-odd\">Parity is the property of an integer of whether it is even or odd.</h4>\n\n<h5 id=\"example\">Example :</h5>\n\n<pre><code>&#39;N&#39; = 5, &#39;S&#39; = &quot;abacd&quot;.\n\nThe number of unique characters in &#39;S&#39; is 4.\n\nThe parity of 4 and parity of &#39;N&#39;( which is 5) is not the same. So, the string &#39;S&#39; is not a good string. We will print 0.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains an integer &#39;T&#39;, which denotes the number of test cases to be run. Then the test cases follow.\n\nThe first line of each test case contains an integer &#39;N&#39;, denoting the size of the string &#39;S&#39;.\n\nThe next line contains a string of size &#39;N&#39;.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case, print 1 if the parity of the number of unique characters is same as the parity of size of the string.\n\nPrint the output of each test case in a new line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don\u2019t need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 10^5\n\nThe string &#39;S&#39; consists of lowercase letters only.\n\nThe Sum of &#39;N&#39; over all test cases is &lt;= 10 ^ 5.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n4\nbake\n3\neez\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>1\n0\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1 :</h5>\n\n<pre><code>For test  case 1:\nNumber of unique characters = 4\nThe parity of 4 is same as &#39;N&#39;(which is 4).\n\nFor test case 2:\nNumber of unique characters = 2\nThe parity of 2 is not same as &#39;N&#39;(which is 3).\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n5\npizza\n6\ncheese\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>0\n1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 10,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string 'S' of length 'N' consisting of lowercase letters, determine if it's a 'good string'. A string is considered 'good' if the parity (evenness or oddness) of the number of unique characters in the string is the same as the parity of the string's length 'N'. Print 1 if 'S' is a good string, otherwise print 0.",
                "constraints": [
                    "1 <= T <= 10 (Number of test cases)",
                    "1 <= N <= 10^5 (Length of the string)",
                    "The string 'S' consists of lowercase letters only.",
                    "The sum of 'N' over all test cases is <= 10^5.",
                    "Time Limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "4\nbake\n3\neez",
                        "output": "1\n0",
                        "explanation": "Test Case 1: The string 'bake' has 4 unique characters. The length of the string is 4. Both have the same parity (even), so the output is 1.\nTest Case 2: The string 'eez' has 2 unique characters ('e' and 'z'). The length of the string is 3. The parities are different (even vs. odd), so the output is 0."
                    },
                    {
                        "input": "5\npizza\n6\ncheese",
                        "output": "0\n1",
                        "explanation": "Test Case 1: The string 'pizza' has 4 unique characters ('p', 'i', 'z', 'a'). The length of the string is 5. The parities are different (even vs. odd), so the output is 0.\nTest Case 2: The string 'cheese' has 5 unique characters ('c', 'h', 'e', 's', 'e'). The length of the string is 6. The parities are same (odd vs. even), so the output is 1."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>How will you calculate the number of unique characters?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}