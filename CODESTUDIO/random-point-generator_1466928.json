{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12558,
            "title": "Random point generator.",
            "titleSlug": "random-point-generator_1466928",
            "content": "<h4 id=\"mr-schrodinger-recently-developed-a-new-hypothesis-for-testing-his-hypothesis-he-needs-some-points-inside-a-particular-circle-for-good-testing-points-should-be-uniformly-distributed-i-e-evenly-distributed-inside-the-circle-so-you-as-an-assistant-are-asked-to-implement-a-random-point-generator-function-that-will-do-the-task\">Mr. Schrodinger recently developed a new hypothesis. For testing his hypothesis he needs some points inside a particular circle. For good testing, points should be uniformly distributed, i.e. evenly distributed inside the circle. So you as an assistant are asked to implement a random point generator function that will do the task.</h4>\n\n<h4 id=\"more-formally-you-need-to-implement-a-function-that-will-generate-uniformly-distributed-random-points-inside-the-given-circle\">More formally, you need to implement a function that will generate uniformly distributed random points inside the given circle.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>A point on the circumference of a circle is considered an inner point.\n</code></pre>\n\n<h4 id=\"input-format\">Input Format:</h4>\n\n<pre><code>The first line contains an integer &#39;T&#39; which denotes the number of test cases or queries to be run.\n\nThe first line of each test case contains three space-separated integers \u2018X\u2019, \u2018Y\u2019, \u2018R\u2019 denoting x-coordinate, y-coordinate of the center of the circle and \u2018R\u2019 denoting the radius of the circle.\n</code></pre>\n\n<h4 id=\"output-format\">Output Format:</h4>\n\n<pre><code>For each test case, the output will be 1, if you generated correct uniformly distributed points as described in the problem, else 0.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You do not need to input or print anything, and it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints:</h4>\n\n<pre><code>1 &lt;= T &lt;= 5\n-10 ^ 9 &lt;= X, Y &lt;= 10 ^ 9\n1 &lt;= R &lt;= 10 ^ 9\n\nTime Limit: 1sec\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1:</h4>\n\n<pre><code>2\n0 0 1\n1 1 1\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1:</h4>\n\n<pre><code>1\n1\n</code></pre>\n\n<h4 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1:</h4>\n\n<pre><code>Test case 1:\nRandom function must generate any random point inside the circle with center at (0, 0) and radius 1. For example 3 generated points can be [(0.2, 0.05), (-0.7, 0.32), (-0.11, -0.23)]. \n\nTest case 2:\nRandomly generated 3 points can be [(1.3, 1.07), (1, 0), (0, 1)].\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2:</h4>\n\n<pre><code>1\n0 0 10   \n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2:</h4>\n\n<pre><code>1\n</code></pre>\n\n<h4 id=\"explanation-of-sample-input-2\">Explanation of Sample Input 2:</h4>\n\n<pre><code>Test case 1:\nRandomly generated 3 points can be [(9.3, 0.002), (1.4, -2.0), (-1.99, 3.33 )].\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 9,
            "dislikes": "NA",
            "rephrased": {
                "body": "Implement a function `randomPoint` that generates uniformly distributed random points inside a circle with a given center (xc, yc) and radius. The function should return a vector of two doubles representing the x and y coordinates of a randomly generated point within the circle.",
                "constraints": [
                    "1 <= T <= 5",
                    "-10^9 <= X, Y <= 10^9",
                    "1 <= R <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "radius = 1, xc = 0, yc = 0",
                        "output": "1",
                        "explanation": "The function should return a random point within the circle centered at (0, 0) with radius 1. For example, a possible point is (0.2, 0.05)."
                    },
                    {
                        "input": "radius = 1, xc = 1, yc = 1",
                        "output": "1",
                        "explanation": "The function should return a random point within the circle centered at (1, 1) with radius 1. For example, a possible point is (1.3, 1.07)."
                    },
                    {
                        "input": "radius = 10, xc = 0, yc = 0",
                        "output": "1",
                        "explanation": "The function should return a random point within the circle centered at (0, 0) with radius 10. For example, a possible point is (9.3, 0.002)."
                    },
                    {
                        "input": "radius = 5, xc = 2, yc = -3",
                        "output": "1",
                        "explanation": "The function should return a random point within the circle centered at (2, -3) with radius 5. Example: (3.5,-1.2)"
                    },
                    {
                        "input": "radius = 2, xc = -1, yc = -1",
                        "output": "1",
                        "explanation": "The function should return a random point within the circle centered at (-1, -1) with radius 2. Example: (-0.5,-0.3)"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Generate a random point and check if it is inside the circle or not.</p>",
            "<p>Generate<a href=\"https://en.wikipedia.org/wiki/Polar_coordinate_system\"> polar coordinates</a>.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Computational Geometry",
                "slug": "computational-geometry"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}