{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10342,
            "title": "Rank from Stream",
            "titleSlug": "rank-from-stream_1214652",
            "content": "<h4 id=\"you-are-given-an-array-of-n-integers-say-arr-and-provided-with-other-integer-say-k-now-you-have-to-find-the-rank-of-arr-k\">You are given an array of \u2018N\u2019 integers say \u2018ARR\u2019 and provided with other integer say \u2018K\u2019. Now you have to find the Rank of \u2018ARR[K]\u2019.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>The rank of any element in \u2018ARR\u2019 is equal to the number of smaller elements than \u2018ARR[K]\u2019 on its left side.\n</code></pre>\n\n<h4 id=\"for-example\">For example :</h4>\n\n<pre><code>Input :\nLet \u2018ARR\u2019\u2019 = [6, 2, 9, 7] and \u2018X\u2019 = 3.\nWe can see there are two smaller elements than \u2018ARR[3]\u2019 = 7 on its left side\nOutput: 2\n</code></pre>\n\n<h4 id=\"follow-up\">Follow Up :</h4>\n\n<pre><code>Try to find rank in less time complexity than O(N), you may use some data structure to implement this.\n</code></pre>\n\n<h4 id=\"input-format\">Input Format:</h4>\n\n<pre><code>The first line of input contains a single integer T\u2019, representing the number of test cases.\nThen the \u2018T\u2019 test cases follow.\n\nThe first line of each test case contains two single space-separated numbers, \u2018N\u2019 and \u2018K\u2019, denoting the size of \u2018ARR\u2019, and the position of integer for which we have to find rank respectively.\n\nThe second line contains \u2018N\u2019 space-separated distinct integers denoting the array elements.\n</code></pre>\n\n<h4 id=\"output-format\">Output format:</h4>\n\n<pre><code>For each test case, return a single integer representing the rank of \u2018ARR[K]\u2019.\n</code></pre>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>You don\u2019t have to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints</h4>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= N &lt;= 10^4\n1 &lt;= K &lt;= N\n0 &lt;=  ARR[i] &lt;= 10^5\n\nTime limit: 1 sec\n</code></pre>\n<h4 id=\"sample-input-1\">Sample input 1:</h4>\n\n<pre><code>2\n4 1\n4 8 2 10\n6 2\n6 8 5 1 9 9\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample output 1:</h4>\n\n<pre><code>1\n0\n</code></pre>\n\n<h4 id=\"explanation-for-sample-input-1\">Explanation for sample input 1:</h4>\n\n<pre><code>For test case 1:\nThere is only one smaller element than 8 on its left side.\nFor test case 2:\nThere is only no smaller element than 5 on its left side.\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample input 2:</h4>\n\n<pre><code>2\n5 3\n1 4 3 4 5\n6 5\n6 4 3 2 1 7 \n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample output 2:</h4>\n\n<pre><code>2\n5\n</code></pre>\n\n<h4 id=\"explanation-for-sample-input-2\">Explanation for sample input 2:</h4>\n\n<pre><code>For test case 1:\nThere there are 2 smaller elements than 8 on its left side.\nFor test case 2:\nAll the elements on the left side of 7 are smaller, return 5.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 6,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array 'ARR' of 'N' integers and an index 'K', find the rank of ARR[K]. The rank is defined as the number of elements in 'ARR' that are smaller than ARR[K] and located to its left.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= N <= 10^4",
                    "1 <= K <= N",
                    "0 <= ARR[i] <= 10^5",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "4 1\n4 8 2 10",
                        "output": "1",
                        "explanation": "ARR[1] is 8. The elements to the left of 8 are [4]. Only 4 is smaller than 8. Therefore, the rank is 1."
                    },
                    {
                        "input": "6 2\n6 8 5 1 9 9",
                        "output": "0",
                        "explanation": "ARR[2] is 5. The elements to the left of 5 are [6, 8]. No elements are smaller than 5. Therefore, the rank is 0."
                    },
                    {
                        "input": "5 3\n1 4 3 4 5",
                        "output": "2",
                        "explanation": "ARR[3] is 4. The elements to the left of 4 are [1, 4, 3]. The elements smaller than 4 are [1, 3]. Therefore, the rank is 2."
                    },
                    {
                        "input": "6 5\n6 4 3 2 1 7",
                        "output": "5",
                        "explanation": "ARR[5] is 7. The elements to the left of 7 are [6, 4, 3, 2, 1]. All the elements are smaller than 7. Therefore, the rank is 5."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to think of a Data structure that inserts and sorts the data in logN time.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Binary Search Trees",
                "slug": "binary-search-trees"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}