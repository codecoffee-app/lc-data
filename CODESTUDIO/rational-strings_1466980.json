{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12590,
            "title": "Rational Strings",
            "titleSlug": "rational-strings_1466980",
            "content": "<h4 id=\"in-ninja-land-a-rational-number-is-represented-as-a-string-in-the-below-format\">In ninja land, a rational number is represented as a string in the below format</h4>\n\n<pre><code>&lt;IntegerPart&gt; &lt; \u2018.\u2019 &gt; &lt;Non-ReaptingPart&gt; &lt; \u2018(\u2018 &gt; &lt;ReaptingPart&gt; &lt; \u2018)\u2019 &gt;.\n</code></pre>\n\n<h4 id=\"for-example\">For example,</h4>\n\n<pre><code>5 / 1 as \u20185\u2019\n12 / 100 as \u20180.12\u2019  \n11 / 6 as \u20181.8(3)\u2019\n1 / 3 as  0.(3).\n</code></pre>\n\n<h4 id=\"there-is-one-flaw-in-this-representation-system-that-a-rational-number-can-be-represented-in-more-than-one-string-for-example-0-33-3-and-0-3-3-both-strings-are-different-but-represent-the-same-rational-number-1-3\">There is one flaw in this representation system that a rational number can be represented in more than one string. For example, \u20180.33(3)\u2019 and \u20180.3(3)\u2019 both strings are different but represent the same rational number 1 / 3.</h4>\n\n<h4 id=\"you-need-to-implement-a-function-that-verifies-if-given-two-strings-s-and-t-of-rational-numbers-represent-the-same-number-or-not\">You need to implement a function that verifies if given two strings \u2018S\u2019 and \u2018T\u2019 of rational numbers represent the same number or not.</h4>\n\n<h4 id=\"input-format\">Input Format:</h4>\n\n<pre><code>The first line contains an integer &#39;T&#39; which denotes the number of test cases or queries to be run.\n\nThe first line of each test case contains two space-separated strings \u2018S\u2019 and \u2018T\u2019 denoting the given two strings.\n</code></pre>\n\n<h4 id=\"output-format\">Output Format:</h4>\n\n<pre><code>For each test case, print 1 if both strings represent the same number else print 0.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You do not need to input or print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints:</h4>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;=  length of &lt;IntegerPart&gt; &lt;= 4\n0 &lt;=  length of &lt;Non-ReaptingPart&gt;, &lt;RepeatingPart&gt;  &lt;= 4\n\n&lt;IntegerPart&gt; doesn\u2019t contain leading zeros, except for 0 itself.\n\nWhere &lt;IntegerPart&gt;, &lt;Non-ReaptingPart&gt;, and &lt;ReaptingPart&gt; are the part of the given string \u2018S\u2019 and \u2018T\u2019 according to the format in the problem.\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1:</h4>\n\n<pre><code>2\n1.3(3) 1.(3)\n45.89 45.87\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1:</h4>\n\n<pre><code>1\n0\n</code></pre>\n\n<h4 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1:</h4>\n\n<pre><code>Test case 1:\nBoth given strings represent the same rational number that is equal to 1.3333\u2026 or 4 / 3.\n\nTest case 2:\nString \u201845.89\u2019 and \u201845.87\u2019 do not represent the same rational number.\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2:</h4>\n\n<pre><code>1\n0.(9) 1.0\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2:</h4>\n\n<pre><code>1\n</code></pre>\n\n<h4 id=\"explanation-of-sample-input-2\">Explanation of Sample Input 2:</h4>\n\n<pre><code>Test case 1:\nBoth the strings represent the same rational no. i.e.1 / 1.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": -6,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two strings 'S' and 'T', each representing a rational number in the format `<IntegerPart>.<NonRepeatingPart>(<RepeatingPart>)`, determine if they represent the same rational number.  The rational number representation has the following components:\n\n*   **IntegerPart:** An integer without leading zeros (except for '0' itself).\n*   **NonRepeatingPart:** A sequence of digits after the decimal point that doesn't repeat.\n*   **RepeatingPart:** A sequence of digits enclosed in parentheses that repeats indefinitely.\n\nFor example, '5', '0.12', '1.8(3)', and '0.(3)' are valid representations of rational numbers.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= length of <IntegerPart> <= 4",
                    "0 <= length of <NonRepeatingPart>, <RepeatingPart> <= 4",
                    "<IntegerPart> doesn\u2019t contain leading zeros, except for 0 itself."
                ],
                "testcases": [
                    {
                        "input": "1.3(3) 1.(3)",
                        "output": "1",
                        "explanation": "Both strings represent the rational number 4/3 or 1.3333..."
                    },
                    {
                        "input": "45.89 45.87",
                        "output": "0",
                        "explanation": "The strings represent different rational numbers."
                    },
                    {
                        "input": "0.(9) 1.0",
                        "output": "1",
                        "explanation": "Both strings represent the rational number 1."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Expand the given strings.</p>",
            "<p>Find the corresponding fractional parts of given strings and compare them.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}