{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 22590,
            "title": "Ravi and Coins",
            "titleSlug": "ravi-and-coins_5815826",
            "content": "<h4 id=\"ravi-is-fond-of-collecting-coins-he-has-n-boxes-with-him-numbered-from-0-to-n-1-initially-all-the-boxes-are-empty\">Ravi is fond of collecting coins. He has \u2018N\u2019 boxes with him numbered from \u20180\u2019 to \u2018N-1\u2019, initially, all the boxes are empty.</h4>\n\n<h4 id=\"now-for-the-next-m-days-ravi-adds-one-coin-to-each-box-from-l-r-it-is-denoted-by-the-2d-array-arr-the-range-l-to-r-may-or-may-not-be-the-same-for-each-of-the-m-days\">Now for the next \u2018M\u2019 days, Ravi adds one coin to each box from \u2018[L, R]\u2019, it is denoted by the 2d-array \u2018ARR\u2019. (The range \u2018L\u2019 to \u2018R\u2019 may or may not be the same for each of the \u2018M\u2019 days).</h4>\n\n<h4 id=\"now-deep-was-very-good-at-maths-and-being-a-friend-of-ravi-he-challenged-him-to-answer-q-questions-denoted-by-the-array-queries-after-the-m-days-have-passed\">Now Deep was very good at maths and being a friend of Ravi he challenged him to answer \u2018Q\u2019 questions, denoted by the array \u2018QUERIES\u2019 after the \u2018M\u2019 days have passed.</h4>\n\n<h4 id=\"each-question-will-have-a-number-x-and-ravi-has-to-find-the-number-of-boxes-having-at-least-x-coins-in-it-i-e-number-of-boxes-having-more-than-or-equal-to-x-coins\">Each question will have a number \u2018X\u2019 and Ravi has to find the number of boxes having at least \u2018X\u2019 coins in it. (i.e. number of boxes having more than or equal to \u2018X\u2019 coins).</h4>\n\n<h4 id=\"now-ravi-has-found-the-answers-to-the-questions-but-is-not-sure-if-they-are-completely-correct-so-he-has-asked-you-to-calculate-the-answers-to-these-questions-can-you-help-him\">Now Ravi has found the answers to the questions but is not sure if they are completely correct, So he has asked you to calculate the answers to these questions. Can you help him?.</h4>\n\n<h5 id=\"example\">EXAMPLE :</h5>\n\n<pre><code>Input: \u2018N\u2019 = 3, \u2018M&#39; = 2, \u2018Q\u2019 = 1, \u2018ARR\u2019 = [[0, 1], [0, 2]], \u2018QUERIES\u2019 = [2]\n\nOutput: 2\nIn this case,\nAfter Day 1 number of coins in the boxes will be: [1, 1, 0]\nAfter Day 2 number of coins in the boxes will be: [2, 2, 1]\nHence the boxes having at least \u20182\u2019 coins are Box 0 and Box 1.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line will contain the integer \u2018T\u2019, the number of test cases.\n\nEach test case consists of two lines.\n\nThe first line of input contains three integers, \u2018N\u2019, \u2018M\u2019, and \u2018Q\u2019 separated by spaces.\n\nFollowed by \u2018M\u2019 lines, each line contains two integers, \u2018L\u2019 and \u2018R\u2019.\n\nFollowed by \u2018Q\u2019 lines, each line contains one integer, \u2018X\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case, print \u2018Q\u2019 space separated integers denoting the answers to the \u2018Q\u2019 questions asked by Deep.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don&#39;t need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= \u2018T\u2019 &lt;= 10\n1 &lt;= \u2018N\u2019 &lt;= 10^5\n1 &lt;= \u2018M\u2019 &lt;= 10^5\n1 &lt;= \u2018Q\u2019 &lt;= 10^5\n0 &lt;= \u2018L\u2019 &lt;= \u2018R\u2019 &lt;= \u2018N-1\u2019\n0 &lt;= \u2018X\u2019 &lt;= 10^5\nIt is guaranteed that sum of \u2018N\u2019 over all test cases is &lt;= 10^5\nIt is guaranteed that sum of \u2018M\u2019 over all test cases is &lt;= 10^5\nIt is guaranteed that sum of \u2018Q\u2019 over all test cases is &lt;= 10^5\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n5 1 1\n1 4\n1\n7 3 2\n0 3\n2 6\n4 6\n0\n2\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>4\n7 5\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1 :</h5>\n\n<pre><code>For the first test case, \nAfter Day 1 number of coins in the boxes will be: [0, 1, 1, 1, 1]\nHence the boxes having at least \u20181\u2019 coin are Box 1, 2, 3, and 4.\n\nHence, the output will be: 4\n\nFor the second test case,\nAfter Day 1 number of coins in the boxes will be: [1, 1, 1, 1, 0, 0, 0]\nAfter Day 2 number of coins in the boxes will be: [1, 1, 2, 2, 1, 1, 1]\nAfter Day 3 number of coins in the boxes will be: [1, 1, 2, 2, 2, 2, 2]\nAll the boxes have at least a \u20181\u2019 coin, hence the answer to the \u20181\u2019st question is \u20187\u2019.\nThe boxes having at least \u20182\u2019 coins are Box 2, 3, 4, 5, and 6.\n\nHence, the output will be: 7 5\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n10 3 3\n5 9\n3 7\n2 6\n3\n0\n0\n8 4 5\n0 0\n5 5\n4 4\n7 7\n2\n0\n4\n3\n0\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>2 10 10 \n0 8 0 0 8\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 9,
            "dislikes": "NA",
            "rephrased": {
                "body": "Ravi loves collecting coins and has 'N' boxes numbered from 0 to N-1, initially empty. Over 'M' days, he adds one coin to each box within the range [L, R] (inclusive), defined by the 2D array 'ARR'. Deep challenges Ravi to answer 'Q' queries. For each query 'X', Ravi must determine the number of boxes with at least 'X' coins after all 'M' days.",
                "constraints": [
                    "1 <= \u2018T\u2019 <= 10",
                    "1 <= \u2018N\u2019 <= 10^5",
                    "1 <= \u2018M\u2019 <= 10^5",
                    "1 <= \u2018Q\u2019 <= 10^5",
                    "0 <= \u2018L\u2019 <= \u2018R\u2019 <= \u2018N-1\u2019",
                    "0 <= \u2018X\u2019 <= 10^5",
                    "It is guaranteed that sum of \u2018N\u2019 over all test cases is <= 10^5",
                    "It is guaranteed that sum of \u2018M\u2019 over all test cases is <= 10^5",
                    "It is guaranteed that sum of \u2018Q\u2019 over all test cases is <= 10^5",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "n = 3, m = 2, q = 1, arr = [[0, 1], [0, 2]], queries = [2]",
                        "output": "[2]",
                        "explanation": "After day 1: [1, 1, 0]. After day 2: [2, 2, 1]. Boxes with at least 2 coins are box 0 and box 1. Therefore, the answer is 2."
                    },
                    {
                        "input": "n = 5, m = 1, q = 1, arr = [[1, 4]], queries = [1]",
                        "output": "[4]",
                        "explanation": "After day 1: [0, 1, 1, 1, 1]. The boxes with at least 1 coin are box 1, 2, 3, and 4. Therefore the answer is 4."
                    },
                    {
                        "input": "n = 7, m = 3, q = 2, arr = [[0, 3], [2, 6], [4, 6]], queries = [0, 2]",
                        "output": "[7, 5]",
                        "explanation": "After day 1: [1, 1, 1, 1, 0, 0, 0]. After day 2: [1, 1, 2, 2, 1, 1, 1]. After day 3: [1, 1, 2, 2, 2, 2, 2]. All boxes have at least 0 coins (count: 7). Boxes with at least 2 coins: boxes 2, 3, 4, 5, and 6 (count: 5)."
                    },
                    {
                        "input": "n = 10, m = 3, q = 3, arr = [[5, 9], [3, 7], [2, 6]], queries = [3, 0, 0]",
                        "output": "[2, 10, 10]",
                        "explanation": "After day 1: [0, 0, 0, 0, 0, 1, 1, 1, 1, 1]. After day 2: [0, 0, 0, 1, 1, 2, 2, 2, 1, 1]. After day 3: [0, 0, 1, 2, 2, 3, 3, 3, 2, 2]. Boxes with at least 3: [5, 6, 7] -> count 3.  All boxes have at least 0. Hence count = 10 for the second query."
                    },
                    {
                        "input": "n = 8, m = 4, q = 5, arr = [[0, 0], [5, 5], [4, 4], [7, 7]], queries = [2, 0, 4, 3, 0]",
                        "output": "[0, 8, 0, 0, 8]",
                        "explanation": "After Day 1: [1, 0, 0, 0, 0, 0, 0, 0]. After Day 2: [1, 0, 0, 0, 0, 1, 0, 0]. After Day 3: [1, 0, 0, 0, 1, 1, 0, 0]. After Day 4: [1, 0, 0, 0, 1, 1, 0, 1]. boxes = [1, 0, 0, 0, 1, 1, 0, 1].  Query 1: at least 2 coins -> none. Query 2, 5: at least 0 coins -> all 8. Query 3, 4: at least 4 coins -> none."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><strong>Add the coins naively and answer the questions by finding the boxes having greater than or equal to \u2018X\u2019 coins.</strong></p>",
            "<p><strong>Can we somehow find the contributions to each box when we add a coin to the range of boxes \u2018L\u2019 to \u2018R\u2019 and then preprocess this information to answer questions?</strong></p>"
        ],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}