{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9474,
            "title": "Reach the destination",
            "titleSlug": "reach-the-destination_992853",
            "content": "<h4 id=\"given-a-source-point-sx-sy-and-a-destination-point-dx-dy-the-task-is-to-check-if-it-is-possible-to-reach-the-destination-point-using-the-following-valid-moves\">Given a source point (sx, sy) and a destination point (dx, dy), the task is to check if it is possible to reach the destination point using the following valid moves:</h4>\n\n<pre><code>(a, b) -&gt; (a + b, b)\n(a, b) -&gt; (a, a + b)\n</code></pre>\n\n<h4 id=\"your-task-is-to-find-if-it-is-possible-to-reach-the-destination-point-using-only-the-desired-moves-or-not\">Your task is to find if it is possible to reach the destination point using only the desired moves or not.</h4>\n\n<h5 id=\"for-example\">For example:</h5>\n\n<pre><code>For the coordinates, source point = (1, 1) and destination point = (3, 5)\nThe output will be true as the destination point can be reached using the following sequence of moves:\n(1, 1) -&gt; (1, 2) -&gt; (3, 2) -&gt; (3, 5)\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 representing the number of test cases. Then the test cases follow.\n\nThe only line of each test case contains four space-separated integers sx, sy, dx, and dy where sx, sy represents the coordinates of the source point and dx, dy represents the coordinates of the destination point.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, return the boolean true if the destination point can be reached from the source point using only the desired moves, else return false.\n\nThe output for each test case is to be printed on a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= x, y &lt;= 3000\n\nWhere \u2018T\u2019 is the number of test cases and \u2018x\u2019, \u2018y\u2019 are the coordinates of the given points.\n\nTime Limit: 1sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n1 1 3 5\n1 1 1 4\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>True\nTrue\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1:</h5>\n\n<pre><code>For the first test case\nThe output will be true as destination point can be reached using the following sequence of moves:\n(1, 1) -&gt; (1, 2) -&gt; (3, 2) -&gt; (3, 5)\n\nFor the second test case\nThe output will be true as destination point can be reached using the following sequence of moves:\n(1, 1) -&gt; (1, 2) -&gt; (1, 3) -&gt; (1, 4)\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n1 1 2 2\n1 1 1 1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>False\nTrue\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 60,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a starting point (sx, sy) and a destination point (dx, dy), determine if it's possible to reach the destination from the source using only the following moves:\n\n*   (a, b) -> (a + b, b)\n*   (a, b) -> (a, a + b)\n\nDetermine if the destination point can be reached from the source point using only the given moves. Return true if possible, false otherwise.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= x, y <= 3000",
                    "Where \u2018T\u2019 is the number of test cases and \u2018x\u2019, \u2018y\u2019 are the coordinates of the given points.",
                    "Time Limit: 1sec"
                ],
                "testcases": [
                    {
                        "input": "1 1 3 5",
                        "output": "True",
                        "explanation": "The destination (3, 5) can be reached from (1, 1) using the moves: (1, 1) -> (1, 2) -> (3, 2) -> (3, 5)."
                    },
                    {
                        "input": "1 1 1 4",
                        "output": "True",
                        "explanation": "The destination (1, 4) can be reached from (1, 1) using the moves: (1, 1) -> (1, 2) -> (1, 3) -> (1, 4)."
                    },
                    {
                        "input": "1 1 2 2",
                        "output": "False",
                        "explanation": "The destination (2, 2) cannot be reached from (1, 1) using the allowed moves."
                    },
                    {
                        "input": "1 1 1 1",
                        "output": "True",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Consider all the possible paths from the source cell to the destination cell with the help of recursion.</p>",
            "<p>Consider all the possible paths from the source cell to the destination cell with the help of backtracking.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}