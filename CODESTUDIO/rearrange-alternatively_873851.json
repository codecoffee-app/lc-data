{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8422,
            "title": "Rearrange Alternatively",
            "titleSlug": "rearrange-alternatively_873851",
            "content": "<h4 id=\"given-an-array-arr-of-size-n-containing-positive-and-negative-integers-arrange-the-array-alternatively-such-that-every-non-negative-integer-is-followed-by-a-negative-integer-and-vice-versa\">Given an array arr of size N containing positive and negative integers. Arrange the array alternatively such that every non-negative integer is followed by a negative integer and vice-versa.</h4>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>The number of positive integers and negative integers may not be equal. In such cases, add the extra integers at the end.\n</code></pre>\n\n<h5 id=\"for-example\">For Example:</h5>\n\n<pre><code>For array {4, -9, -2, 6, -8}, the output will be {-9, 4, -2, 6, -8}\n\nFor array {1, 2, 3, -5}, the output will be {-5, 1, 2, 3}   \n</code></pre>\n\n<h5 id=\"input-format\">Input format:</h5>\n\n<pre><code>The first line contains an integer &#39;T&#39; which denotes the number of test cases or queries to be run. Then, the T test cases follow.\n\nThe first line of each test case or query contains an integer &#39;N&#39; representing the size of the array (arr).\n\nThe second line contains &#39;N&#39; single space-separated integers, representing the elements in the array.\n</code></pre>\n\n<h5 id=\"output-format\">Output format:</h5>\n\n<pre><code>For each test case, the output is \u201cValid\u201d if the rearrangement is valid otherwise, \u201cInvalid\u201d, without quotes.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n\nFor a single array, multiple solutions may be possible, just rearrange the array in any one possible way.  \n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10 \n1 &lt;= N &lt;= 10^5\nSum of N over all test cases does not exceeds 10^5. \n-(10^9) &lt;= arr[i] &lt;= (10^9) \n\nTime limit: 1 second\n</code></pre>\n<h5 id=\"sample-input-1\">Sample input 1:</h5>\n\n<pre><code>1\n4\n-1 2 2 -5 \n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample output 1:</h5>\n\n<pre><code>-1 2 -5 2 \n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample input 2:</h5>\n\n<pre><code>2\n5\n-2 -3 -3 -6 -2\n3\n1 -1 -1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample output 2:</h5>\n\n<pre><code>-2 -3 -3 -6 -2\n-1 1 -1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 47,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of integers, rearrange it such that positive and negative numbers alternate. If there are more positive or negative numbers, append the remaining numbers to the end of the rearranged array. Function signature `void rearrange(vector<int> &arr)` is provided.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10^5",
                    "-(10^9) <= arr[i] <= (10^9)"
                ],
                "testcases": [
                    {
                        "input": "n = 5, nums = [4, -9, -2, 6, -8]",
                        "output": "-9 4 -2 6 -8",
                        "explanation": "The array is rearranged such that positive and negative integers alternate."
                    },
                    {
                        "input": "n = 4, nums = [1, 2, 3, -5]",
                        "output": "-5 1 2 3",
                        "explanation": "The array is rearranged such that positive and negative integers alternate."
                    },
                    {
                        "input": "n = 4, nums = [-1, 2, 2, -5]",
                        "output": "-1 2 -5 2",
                        "explanation": "The array is rearranged with negative numbers first."
                    },
                    {
                        "input": "n = 5, nums = [-2, -3, -3, -6, -2]",
                        "output": "-2 -3 -3 -6 -2",
                        "explanation": "The array contains only negative integers, so it remains unchanged."
                    },
                    {
                        "input": "n = 3, nums = [1, -1, -1]",
                        "output": "-1 1 -1",
                        "explanation": "Alternating negative and positive.  Remaining negatives are placed at the end."
                    },
                    {
                        "input": "n = 6, nums = [1, 2, -3, -4, 5, -6]",
                        "output": "-3 1 -4 2 -6 5",
                        "explanation": "Example with mixed positive and negative and even array length."
                    },
                    {
                        "input": "n = 1, nums = [5]",
                        "output": "5",
                        "explanation": "Single element array."
                    },
                    {
                        "input": "n = 1, nums = [-5]",
                        "output": "-5",
                        "explanation": "Single element array - negative."
                    },
                    {
                        "input": "n = 2, nums = [5,6]",
                        "output": "5 6",
                        "explanation": "Two positive numbers, No change"
                    },
                    {
                        "input": "n = 2, nums = [-5,-6]",
                        "output": "-5 -6",
                        "explanation": "Two negative numbers, No change"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Though the question focuses on positives and negatives, we can make our own <strong>index condition </strong>i.e. let\u2019s say, negatives at even indices and positives at odd indices. Now, we need to find a way to process the array linearly and maintain the <strong>index condition,</strong> where not satisfied.&nbsp;&nbsp;</p>",
            "<p>First off, observe that the question focuses on negatives and positives. Thus, all we need to do is keep a record of all the negative and positive integers and arrange them accordingly.&nbsp;</p>",
            "<p>You may recall that here, once we bifurcate the positive integers and negative integers in the array, our task will become simple. All we need to think is an optimal way of bifurcating the elements. &nbsp;&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}