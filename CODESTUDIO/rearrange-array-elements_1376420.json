{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 11009,
            "title": "Rearrange array elements.",
            "titleSlug": "rearrange-array-elements_1376420",
            "content": "<h4 id=\"given-an-array-a-having-n-integers-and-an-integer-m-you-need-to-rearrange-the-array-elements-such-that-after-re-arrangement-difference-of-array-elements-with-m-should-be-in-a-sorted-fashion\">Given an array \u2018A\u2019 having \u2018N\u2019 integers and an integer \u2018m\u2019. You need to rearrange the array elements such that after re-arrangement difference of array elements with \u2018m\u2019 should be in a sorted fashion.</h4>\n\n<h4 id=\"if-the-difference-between-any-two-array-elements-and-m-is-the-same-then-the-element-which-comes-first-in-the-given-array-will-be-placed-first-in-the-re-arranged-array\">If the difference between any two array elements and \u2018m\u2019 is the same, then the element which comes first in the given array will be placed first in the re-arranged array.</h4>\n\n<h5 id=\"for-example\">For Example</h5>\n\n<pre><code>If we have A =  [3, 5, 7, 9, 2, 6]  and m = 5.\nDifference of array elements with m : [2, 0, 2, 4, 3, 1].\nArray after rearrangement : [5, 6, 3, 7, 2, 9].\n</code></pre>\n\n<h5 id=\"input-format\">Input Format</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 denoting the number of test cases.\nThe first line of each test contains two integers, \u2018N\u2019 - number of elements in the array and \u2018m\u2019\nThe second line of each test case contains \u2018N\u2019 space-separated integers that make up \u2018A\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format</h5>\n\n<pre><code>For each test case, you need to print space-separated integers denoting the elements of the re-arranged array.\n\nPrint the output of each test case in a separated line.\n</code></pre>\n\n<h5 id=\"note\">Note</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 10^5\n1 &lt;= m &lt;= 10^5\n\nWhere \u2018T\u2019 is the number of test cases, \u2018N\u2019 is the length of array \u2018A\u2019, and \u2018m\u2019 is the value given as described in the problem statement.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1</h5>\n\n<pre><code>2\n4 6\n3 8 1 4\n2 12\n5 5\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1</h5>\n\n<pre><code>8 4 3 1\n5 5\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1</h5>\n\n<pre><code>Test Case 1: The array given in this case is [ 3, 8, 1, 4 ] and m = 6.\nThe difference of array elements with \u20186\u2019 is [ 3, 2, 5, 2 ]. \nSorted order of difference is 2-&gt;2-&gt;3-&gt;5\nBoth \u20188\u2019 and \u20182\u2019 have a difference of \u20182\u2019 and \u20188\u2019 comes before \u20186\u2019.So in the rearranged array, \u20188\u2019 will be placed before \u20186\u2019.\nTherefore rearranged array will look like 8, 4, 3, 1.\n\nTest Case 2: The difference between the array elements and m, i.e., 12, is the same.\nSo rearranged array is 5 5.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2</h5>\n\n<pre><code>2\n5 9\n12 4 2 19 5\n3 3\n1 2 3\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2</h5>\n\n<pre><code>12 5 4 2 19\n3 2 1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 20,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array 'A' of 'N' integers and an integer 'm', rearrange the elements of 'A' such that the absolute difference between each element and 'm' is in ascending order. If two elements have the same absolute difference with 'm', maintain their original order in 'A'.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10^5",
                    "1 <= m <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "N = 6, A = [3, 5, 7, 9, 2, 6], m = 5",
                        "output": "[5, 6, 3, 7, 2, 9]",
                        "explanation": "Difference of array elements with m : [2, 0, 2, 4, 3, 1]. Array after rearrangement : [5, 6, 3, 7, 2, 9]."
                    },
                    {
                        "input": "N = 4, A = [3, 8, 1, 4], m = 6",
                        "output": "[8, 4, 3, 1]",
                        "explanation": "The difference of array elements with \u20186\u2019 is [ 3, 2, 5, 2 ]. Sorted order of difference is 2->2->3->5. Both \u20188\u2019 and \u20184\u2019 have a difference of \u20182\u2019 and \u20188\u2019 comes before \u20184\u2019. So in the rearranged array, \u20188\u2019 will be placed before \u20184\u2019. Therefore rearranged array will look like 8, 4, 3, 1."
                    },
                    {
                        "input": "N = 2, A = [5, 5], m = 12",
                        "output": "[5, 5]",
                        "explanation": "The difference between the array elements and m, i.e., 12, is the same. So rearranged array is 5 5."
                    },
                    {
                        "input": "N = 5, A = [12, 4, 2, 19, 5], m = 9",
                        "output": "[12, 5, 4, 2, 19]",
                        "explanation": "Difference of array elements with m: [3, 5, 7, 10, 4]. After rearranging based on sorted difference, we get: [12, 5, 4, 2, 19]"
                    },
                    {
                        "input": "N = 3, A = [1, 2, 3], m = 3",
                        "output": "[3, 2, 1]",
                        "explanation": "Difference of array elements with m: [2, 1, 0]. After rearranging based on sorted difference, we get: [3, 2, 1]"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Think of using another array.</p>",
            "<p>Can you think of using a multimap?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}