{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8829,
            "title": "Rearrange Odd and Even Places",
            "titleSlug": "rearrange-odd-and-even-places_920379",
            "content": "<h4 id=\"you-are-given-the-head-of-a-singly-linked-list-your-task-is-to-group-all-the-nodes-with-odd-indices-together-followed-by-the-nodes-with-even-indices-and-return-the-reordered-list-s-head\">You are given the <em><strong>&#39;head&#39;</strong></em> of a singly linked list. Your task is to group all the nodes with odd indices together followed by the nodes with even indices, and return the reordered list\u2019s head.</h4>\n\n<p><br></p>\n\n<h4 id=\"the-first-node-is-considered-odd-and-the-second-node-is-even-and-so-on\">The first node is considered odd, and the second node is even, and so on.</h4>\n\n<p><br></p>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>Keep in mind that reordering is to be done according to the indexes and not the node values.\nAlso, ensure that the relative order inside both the even and odd groups should remain as it was in the input.\n</code></pre>\n\n<p><br></p>\n\n<h5 id=\"example\">Example:</h5>\n\n<pre><code>Input: &#39;head&#39; -&gt; 1 -&gt; 3 -&gt; 5 -&gt; 7\n\nOutput: &#39;head&#39; -&gt; 1 -&gt; 5 -&gt; 3 -&gt; 7\n\nExplanation:\nThe nodes with odd indices (1, 5) are grouped together, followed by the nodes with even indices (3, 7).\n</code></pre>\n\n<p><br></p>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains an integer &#39;n&#39; - the size of the linked list.\nThe second line contains &#39;n&#39; space-separated integers, denoting the nodes of the linked list.\n</code></pre>\n\n<p><br></p>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>Return the &#39;head&#39; of the reordered linked list.\n</code></pre>\n\n<p><br></p>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You are not required to print the expected output; it has already been taken care of. Just implement the function.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>5\n2 4 6 8 10\n</code></pre>\n\n<p><br></p>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>2 6 10 4 8\n</code></pre>\n\n<p><br></p>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1 :</h5>\n\n<pre><code>The reordered list groups nodes with odd indices (2, 6, and 10) followed by nodes with even indices (4 and 8). So, the reordered list will look like: 2 -&gt; 6 -&gt; 10 -&gt; 4 -&gt; 8.\n</code></pre>\n\n<p><br></p>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>6\n21 33 45 57 69 81\n</code></pre>\n\n<p><br></p>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>21 45 69 33 57 81 \n</code></pre>\n\n<p><br></p>\n\n<h5 id=\"explanation-of-sample-input-2\">Explanation Of Sample Input 2 :</h5>\n\n<pre><code>The reordered list groups nodes with odd indices (21, 45, and 69) followed by nodes with even indices (33, 57, and 81). Thus, the reordered list will appear as: 21 -&gt; 45 -&gt; 69 -&gt; 33 -&gt; 57 -&gt; 81.\n</code></pre>\n\n<p><br></p>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= &#39;n&#39; &lt;= 5000\n0 &lt;= &#39;data&#39; &lt;= 10^4\n\nTime Limit: 1 sec\n</code></pre>\n\n<p><br></p>\n\n<h5 id=\"expected-complexity\">Expected Complexity :</h5>\n\n<pre><code>Time Complexity : O(n)\nSpace Complexity : O(1)\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 48,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given the head of a singly linked list, reorder the list such that all nodes with odd indices are grouped together, followed by the nodes with even indices. The first node is considered odd, the second node is even, and so on.  The relative order within both the even and odd groups should remain the same as in the original list. Return the head of the reordered list.",
                "constraints": [
                    "1 <= 'n' <= 5000",
                    "0 <= 'data' <= 10^4",
                    "Time Limit: 1 sec",
                    "Time Complexity : O(n)",
                    "Space Complexity : O(1)"
                ],
                "testcases": [
                    {
                        "input": "5\n2 4 6 8 10",
                        "output": "2 6 10 4 8",
                        "explanation": "The list is reordered to group odd-indexed nodes (2, 6, 10) followed by even-indexed nodes (4, 8)."
                    },
                    {
                        "input": "6\n21 33 45 57 69 81",
                        "output": "21 45 69 33 57 81",
                        "explanation": "The reordered list consists of odd-indexed nodes (21, 45, 69) and even-indexed nodes (33, 57, 81) in their original order."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can we make two pointers and then merge them?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}