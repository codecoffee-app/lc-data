{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9543,
            "title": "Rearrange Sentences",
            "titleSlug": "rearrange-sentences_1062623",
            "content": "<h4 id=\"you-are-given-an-array-of-n-sentences-each-sentence-is-a-space-delimited-string-of-words-the-first-word-in-each-sentence-is-an-alphanumeric-identifier-then-at-least-one-of-the-following-conditions-will-hold-true\">You are given an array of \u2018N\u2019 sentences. Each sentence is a space-delimited string of words. The first word in each sentence is an alphanumeric identifier. Then, at least one  of the following conditions will hold true:</h4>\n\n<pre><code>1. After identifier, each word will consist only of lowercase English letters\n2. After the identifier, each word will consist only of numbers.\n</code></pre>\n\n<h4 id=\"we-will-call-these-two-types-of-sentences-letter-sentence-and-number-sentence-it-is-guaranteed-that-each-sentence-has-at-least-one-word-after-its-identifier-your-task-is-to-sort-these-sentences-such-that-the-following-two-conditions-will-hold\">We will call these two types of sentences, letter \u2013 sentence and number\u2013 sentence. It is guaranteed that each sentence has at least one word after its identifier. Your task is to sort these sentences such that the following two conditions will hold.</h4>\n\n<pre><code>1. All letter - sentences must come before number- sentences.\n2. The letter - sentences must be ordered lexicographically ignoring identifiers. The identifier will be used in case of ties.\n3. The number\u2013 sentence must be put in their original order of occurrence. \n</code></pre>\n\n<h5 id=\"input-format\">Input format :</h5>\n\n<pre><code>The first line of input contains a single integer &#39;T&#39;, representing the number of test cases or queries to be run. \nThen the &#39;T&#39; test cases follow. \nThe first line of each test case contains an integer &#39;N&#39;.    \nThen &#39;N&#39; lines follow.\nEach line contains a single string, representing the sentence of the array.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case, print &#39;N&#39; lines.    \nThen &#39;N&#39; lines follow.\nEach line will contain a single string, representing a sentence of the array in sorted order as mentioned in the description.\n\nPrint the output of each test case in a separate line\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n0 &lt;= N &lt;= 1000  \n3 &lt;= |S| &lt;= 100 \n\nWhere &#39;T&#39; denotes the number of test cases, &#39;N&#39; denotes the number of sentences, and |S| denotes the length of sentence, S.\n\nTime Limit: 1 sec\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n3\nd1 2 3\nlove8 coding world\na1 coding ninjas \n3 \nrating1 2143 1706\ng1 raone \navengers1 assemble\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>a1 coding ninjas\nlove8 coding world\nd1 2 3\navengers1 assemble\ng1 raone\nrating1 2143 1706\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input1\">Explanation for sample input1:</h5>\n\n<pre><code>For the first test case, \nLetter sentences are [\u201clove8 coding world\u201d,   \u201ca1 coding ninjas\u201d], and number sentences are [\u201cd1 2 3\u201d]\nSorted order of letter sentences = [\u201ca1 coding ninjas\u201d, \u201clove8 coding world\u201d]\nThe original order of number sentences =[\u201cd1 2 3\u201d]\nSo the answer is [\u201ca1 coding ninjas\u201d, \u201clove8 coding world\u201d, \u201cd1 2 3\u201d].\n\nFor the second test case:\nLetter sentences are [\u201cg1 raone\u201d,  \u201cavengers1 assemble\u201d], and number sentences are [\u201crating1 2143 1706\u201d]\nSorted order of letter sentences = [\u201cavengers1 assemble\u201d, \u201cg1 raone\u201d].\nOriginal order of number sentences = [ \u201crating1 2143 1706\u201d]\nSo the answer is [\u201cavengers1 assemble\u201d , \u201cg1 raone\u201d , \u201crating1 2143 1706\u201d]\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>1\n4\nwait8 opportunity is coming\ncoding24 7 365\ncoding1 2 3 4 5\ngoodluck2 you my friend\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>wait8 opportunity is coming\ngoodluck2 you my friend\ncoding24 7 365 \ncoding1 2 3 4 5\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input2\">Explanation for sample input2:</h5>\n\n<pre><code>For the first test case:\nLetter sentences are [\u201cwait8 opportunity is coming\u201d,  \u201cgoodluck2 you my friend\u201d], and number sentences are [  \u201ccoding24 7 365\u201d, \u201ccoding1 2 3 4 5\u201d].\nSorted order of letter sentences = [\u201cwait8 opportunity is coming\u201d, \u201cgoodluck2 you my friend\u201d].\nOriginal order of number sentences =[\u201ccoding24 7 365\u201d, \u201ccoding1 2 3 4 5\u201d].\nSo the answer is [\u201cwait8 opportunity is coming\u201d, \u201cgoodluck2 you my friend\u201d, \u201ccoding24 7 365\u201d, \u201ccoding1 2 3 4 5\u201d].\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 12,
            "dislikes": "NA",
            "rephrased": {
                "body": "You are given an array of 'N' sentences. Each sentence begins with an alphanumeric identifier, followed by space-delimited words. Sentences are categorized as either 'letter-sentences' (words after the identifier consist only of lowercase English letters) or 'number-sentences' (words after the identifier consist only of numbers). Your task is to sort the sentences according to these rules:\n\n1.  Letter-sentences must precede number-sentences.\n2.  Letter-sentences must be sorted lexicographically, ignoring the identifier (use the identifier for ties).\n3.  Number-sentences must maintain their original order of occurrence.\n",
                "constraints": [
                    "1 <= T <= 10",
                    "0 <= N <= 1000",
                    "3 <= |S| <= 100",
                    "'T' denotes the number of test cases.",
                    "'N' denotes the number of sentences.",
                    "|S| denotes the length of sentence, S.",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "3\nd1 2 3\nlove8 coding world\na1 coding ninjas",
                        "output": "a1 coding ninjas\nlove8 coding world\nd1 2 3",
                        "explanation": "Letter sentences are [\"love8 coding world\", \u201ca1 coding ninjas\u201d], and number sentences are [\u201cd1 2 3\u201d]. Sorted letter sentences: [\u201ca1 coding ninjas\u201d, \u201clove8 coding world\u201d]. Original number sentences: [\u201cd1 2 3\u201d]. Combined and sorted: [\u201ca1 coding ninjas\u201d, \u201clove8 coding world\u201d, \u201cd1 2 3\u201d]."
                    },
                    {
                        "input": "3\nrating1 2143 1706\ng1 raone\navengers1 assemble",
                        "output": "avengers1 assemble\ng1 raone\nrating1 2143 1706",
                        "explanation": "Letter sentences are [\u201cg1 raone\u201d, \u201cavengers1 assemble\u201d], and number sentences are [\u201crating1 2143 1706\u201d]. Sorted letter sentences: [\u201cavengers1 assemble\u201d, \u201cg1 raone\u201d]. Original number sentences: [\u201crating1 2143 1706\u201d]. Combined and sorted: [\u201cavengers1 assemble\u201d, \u201cg1 raone\u201d, \u201crating1 2143 1706\u201d]."
                    },
                    {
                        "input": "4\nwait8 opportunity is coming\ncoding24 7 365\ncoding1 2 3 4 5\ngoodluck2 you my friend",
                        "output": "wait8 opportunity is coming\ngoodluck2 you my friend\ncoding24 7 365\ncoding1 2 3 4 5",
                        "explanation": "Letter sentences are [\u201cwait8 opportunity is coming\u201d, \u201cgoodluck2 you my friend\u201d], and number sentences are [\u201ccoding24 7 365\u201d, \u201ccoding1 2 3 4 5\u201d]. Sorted letter sentences: [\u201cwait8 opportunity is coming\u201d, \u201cgoodluck2 you my friend\u201d]. Original number sentences: [\u201ccoding24 7 365\u201d, \u201ccoding1 2 3 4 5\u201d]. Combined and sorted: [\u201cwait8 opportunity is coming\u201d, \u201cgoodluck2 you my friend\u201d, \u201ccoding24 7 365\u201d, \u201ccoding1 2 3 4 5\u201d]."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Think of a solution using brute force.</p>",
            "<p>Think of a solution using custom comparator based sorting.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}