{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10803,
            "title": "Rearrange the positions by height.",
            "titleSlug": "rearrange-the-positions-by-height_1264990",
            "content": "<h4 id=\"you-are-given-an-n-x-2-matrix-attributes-of-some-people-standing-in-random-order-where-attributes-i-0-denotes-the-height-of-the-i-th-person-and-attributes-i-1-denotes-the-number-of-people-that-are-in-front-of-the-i-th-person-having-a-height-equal-to-or-more-than-the-height-of-the-i-th-person-i-e-attributes-i-0\">You are given an &#39;N&#39; x 2 matrix \u2018ATTRIBUTES\u2019 of some people standing in random order where \u2018ATTRIBUTES[ i ][ 0 ]\u2019  denotes the height of the \u2018 i-th \u2018 person and \u2018ATTRIBUTES[ i ][ 1 ]\u2019  denotes the number of people that are in front of the \u2018 i-th\u2019 person having a height equal to or more than the height of the i-th person, i.e. \u2018ATTRIBUTES[ i ][ 0 ]\u2019 .</h4>\n\n<h4 id=\"you-need-to-rearrange-the-list-such-that-every-person-is-in-its-correct-position-i-e-exactly-attributes-i-1-number-of-people-should-be-in-front-of-i-th-person-with-height-more-than-attributes-i-0\">You need to rearrange the list such that every person is in its correct position, i.e., exactly ATTRIBUTES[ i ][ 1 ] number of people should be in front of \u2018 i-th\u2019 person with height more than ATTRIBUTES[ i ][ 0 ].</h4>\n\n<h5 id=\"for-example\">For Example:</h5>\n\n<pre><code>If the given list is [ [ 4, 2], [ 6, 1 ], [ 10, 0 ], [ 1, 1] ].\nThe correct order should be [ [ 10, 0 ], [ 1, 1 ],  [ \n</code></pre>\n\n<p>6, 1 ], [ 4, 2 ] ].</p>\n\n<pre><code>A person with a height of \u201810\u2019 has \u20180\u2019 persons in front with a height more than \u201810\u2019. So this person should be in the first place.\nA person with a height of \u20181\u2019 has \u20181\u2019 person with a height of more than 1, so it is placed after [10,0].\nA person with a height of \u20186\u2019 has \u20181\u2019 person in front with a height more than \u2018 6 \u2019.So this should be at the third position as 10 &gt; 6.\nA person with a height of \u2018 4 \u2019 has \u20182\u2019 persons in front with a height more than \u2018 4 \u2018.So this should be at the last position as 10 &gt; 4 and 6 &gt; 4.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains \u2018T\u2019, denoting the number of test cases to be performed.\n\nThe first line of each test case contains an integer \u2018N\u2019 indicating the number of persons.\n\nThen &#39;N&#39; lines follow. Each line represents the elements of the &#39;N&#39; x 2 matrix where each row denotes the two attributes value.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, return the rearranged &#39;N&#39; x 2 matrices having all the persons at their correct position.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You don\u2019t need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 10^3\n1 &lt;= ATTRIBUTES[ i ][ 0 ] &lt;= 10^5\n1 &lt;= ATTRIBUTES[ i ][ 1 ]  &lt;= N\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n4\n24 1\n13 2\n12 1\n25 0   \n2\n8 0\n4 0\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>25 0\n12 1\n24 1\n13 2\n4 0\n8 0\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1:</h5>\n\n<pre><code>Test Case 1: The correct order of this case is [ [ 25, 0], [ 12, 1 ], [ 24, 1 ], [ 13, 2 ] ].\nA person with a height \u201825\u2019 has 0 number of people in front with more height, So it is placed at the first position.\nA person with a height of 12 has exactly 1 person in front with more height. As 25 &gt; 12 So it is placed at the second position.\nA person with a height of 24 also has only 1 person in front with greater height. As 25 &gt; 24 and 12 &lt; 24. \nThe last person has a height of \u201813\u2019, which is less than 24 and 25. Therefore this person has 2 people in front with more height.\n\nTest Case 2: There are two people, and no one has persons in front with more height.Therefore correct positions will be [ [ 4, 0 ], [ 8, 0 ] ].\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n1\n7 0\n3\n16 1\n21 0\n11 2\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>7 0\n21 0\n16 1\n11 2\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -8,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an N x 2 matrix 'ATTRIBUTES' representing people in random order. Each row 'ATTRIBUTES[i][0]' denotes the height of the i-th person, and 'ATTRIBUTES[i][1]' denotes the number of people in front of the i-th person with a height greater than or equal to their own.\n\nRearrange the matrix such that each person is in their correct position. That is, for the i-th person, there should be exactly 'ATTRIBUTES[i][1]' people in front of them with a height greater than or equal to 'ATTRIBUTES[i][0]'.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10^3",
                    "1 <= ATTRIBUTES[ i ][ 0 ] <= 10^5",
                    "1 <= ATTRIBUTES[ i ][ 1 ] <= N",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "4\n24 1\n13 2\n12 1\n25 0\n2\n8 0\n4 0",
                        "output": "25 0\n12 1\n24 1\n13 2\n4 0\n8 0",
                        "explanation": "Test Case 1: The correct order is [[25, 0], [12, 1], [24, 1], [13, 2]]. 25 has 0 taller people in front. 12 has 1 (25) taller person in front. 24 has 1 (25) taller person in front. 13 has 2 (25 and 24) taller people in front.\n\nTest Case 2: The correct order is [[4, 0], [8, 0]]. 4 has 0 taller people and 8 has zero taller people in front of it."
                    },
                    {
                        "input": "1\n7 0\n3\n16 1\n21 0\n11 2",
                        "output": "7 0\n21 0\n16 1\n11 2",
                        "explanation": "Test Case 1: One person with height 7 and 0 taller people in front.\nTest Case 2: The correct order is [[21, 0], [16, 1], [11, 2]]. 21 has 0 taller in front, 16 has 1 (21) taller person and 11 has 2 (21,16) taller person in front."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to fix the position of the shortest person.</p>",
            "<p>Try to use Binary Index Tree to store the ans for different interval range.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}