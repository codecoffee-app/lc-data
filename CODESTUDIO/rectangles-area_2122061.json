{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 14412,
            "title": "Rectangles Area",
            "titleSlug": "rectangles-area_2122061",
            "content": "<pre><code>Table: Points\n\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| id            | int     |\n| x_value       | int     |\n| y_value       | int     |\n+---------------+---------+\nid is the primary key for this table.\nEach point is represented as a 2D coordinate (x_value, y_value).\n\n\nWrite an SQL query to report all possible axis-aligned rectangles with non-zero area that can be formed by any two points in the Points table.\n\nEach row in the result should contain three columns (p1, p2, area) where:\n\np1 and p2 are the id&#39;s of the two points that determine the opposite corners of a rectangle.\narea is the area of the rectangle and must be non-zero.\nReport the query in descending order by area first, then in ascending order by p1&#39;s id if there is a tie, then in ascending order by p2&#39;s id if there is another tie.\n\nThe query result format is in the following table:\n\n\n\nPoints table:\n+----------+-------------+-------------+\n| id       | x_value     | y_value     |\n+----------+-------------+-------------+\n| 1        | 2           | 7           |\n| 2        | 4           | 8           |\n| 3        | 2           | 10          |\n+----------+-------------+-------------+\n\nResult table:\n+----------+-------------+-------------+\n| p1       | p2          | area        |\n+----------+-------------+-------------+\n| 2        | 3           | 4           |\n| 1        | 2           | 2           |\n+----------+-------------+-------------+\n\n\nThe rectangle formed by p1 = 2 and p2 = 3 has an area equal to |4-2| * |8-10| = 4.\nThe rectangle formed by p1 = 1 and p2 = 2 has an area equal to |2-4| * |7-8| = 2.\nNote that the rectangle formed by p1 = 1 and p2 = 3 is invalid because the area is 0.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Ninja",
            "likes": 7,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a table `Points` representing 2D coordinates, write an SQL query to report all possible axis-aligned rectangles with non-zero area that can be formed by any two points in the table.\n\nThe result should contain three columns: `p1`, `p2`, and `area`, where:\n\n*   `p1` and `p2` are the IDs of the two points that determine the opposite corners of a rectangle.\n*   `area` is the area of the rectangle and must be non-zero.\n\nOrder the results in descending order by area first, then in ascending order by `p1`'s ID if there is a tie, and finally in ascending order by `p2`'s ID if there is another tie.",
                "constraints": [],
                "testcases": [
                    {
                        "input": "Table: Points\n+----------+-------------+-------------+\n| id       | x_value     | y_value     |\n+----------+-------------+-------------+\n| 1        | 2           | 7           |\n| 2        | 4           | 8           |\n| 3        | 2           | 10          |\n+----------+-------------+-------------+",
                        "output": "Result table:\n+----------+-------------+-------------+\n| p1       | p2          | area        |\n+----------+-------------+-------------+\n| 2        | 3           | 4           |\n| 1        | 2           | 2           |\n+----------+-------------+-------------+",
                        "explanation": "The rectangle formed by p1 = 2 and p2 = 3 has an area equal to |4-2| * |8-10| = 4.\nThe rectangle formed by p1 = 1 and p2 = 2 has an area equal to |2-4| * |7-8| = 2.\nNote that the rectangle formed by p1 = 1 and p2 = 3 is invalid because the area is 0."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "SQL",
                "slug": "sql"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}