{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 14515,
            "title": " Recyclable and Low Fat Products",
            "titleSlug": "recyclable-and-low-fat-products_2181186",
            "content": "<pre><code>Table: Products\n\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| product_id  | int     |\n| low_fats    | enum    |\n| recyclable  | enum    |\n+-------------+---------+\nproduct_id is the primary key for this table.\nlow_fats is an ENUM of type (&#39;Y&#39;, &#39;N&#39;) where &#39;Y&#39; means this product is low fat and &#39;N&#39; means it is not.\nrecyclable is an ENUM of types (&#39;Y&#39;, &#39;N&#39;) where &#39;Y&#39; means this product is recyclable and &#39;N&#39; means it is not.\n\n\nWrite an SQL query to find the ids of products that are both low fat and recyclable.\n\nReturn the result table in any order.\n\nThe query result format is in the following example:\n\n\n\nProducts table:\n+-------------+----------+------------+\n| product_id  | low_fats | recyclable |\n+-------------+----------+------------+\n| 0           | Y        | N          |\n| 1           | Y        | Y          |\n| 2           | N        | Y          |\n| 3           | Y        | Y          |\n| 4           | N        | N          |\n+-------------+----------+------------+\nResult table:\n+-------------+\n| product_id  |\n+-------------+\n| 1           |\n| 3           |\n+-------------+\nOnly products 1 and 3 are both low fat and recyclable.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 1,
            "dislikes": "NA",
            "rephrased": {
                "body": "Find the product IDs from the `Products` table where the `low_fats` attribute is 'Y' and the `recyclable` attribute is also 'Y'.",
                "constraints": [
                    "product_id is the primary key.",
                    "low_fats is an ENUM of type ('Y', 'N').",
                    "recyclable is an ENUM of types ('Y', 'N')."
                ],
                "testcases": [
                    {
                        "input": "products=[(0, 'Y', 'N'), (1, 'Y', 'Y'), (2, 'N', 'Y'), (3, 'Y', 'Y'), (4, 'N', 'N')]",
                        "output": "[1, 3]",
                        "explanation": "Products 1 and 3 have both low_fats and recyclable attributes set to 'Y'."
                    },
                    {
                        "input": "products=[(10, 'Y', 'Y'), (20, 'Y', 'N'), (30, 'N', 'Y'), (40, 'N', 'N'), (50, 'Y', 'Y')]",
                        "output": "[10, 50]",
                        "explanation": "Products 10 and 50 are the only ones that are both low fat and recyclable."
                    },
                    {
                        "input": "products=[(1, 'N', 'N'), (2, 'N', 'N'), (3, 'N', 'N')]",
                        "output": "[]",
                        "explanation": "No products are both low fat and recyclable."
                    },
                    {
                        "input": "products=[(1, 'Y', 'Y')]",
                        "output": "[1]",
                        "explanation": "Product 1 is the only product and it is both low fat and recyclable."
                    },
                    {
                        "input": "products=[]",
                        "output": "[]",
                        "explanation": "The table is empty, so there are no products that are both low fat and recyclable."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "SQL",
                "slug": "sql"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}