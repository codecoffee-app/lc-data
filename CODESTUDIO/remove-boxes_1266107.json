{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10851,
            "title": "Remove Boxes",
            "titleSlug": "remove-boxes_1266107",
            "content": "<h4 id=\"you-are-given-several-boxes-with-different-colours-represented-by-different-positive-numbers-for-moving-the-boxes-you-can-remove-them-in-multiple-iterations-until-there-are-no-boxes-left-now-every-time-you-can-choose-some-continuous-boxes-with-the-same-color-i-e-composed-of-k-boxes-k-1-remove-them-and-get-k-k-points-for-removing-them\">You are given several boxes with different colours represented by different positive numbers. For moving the boxes you can remove them in multiple iterations until there are no boxes left. Now, every time you can choose some continuous boxes with the same color (i.e., composed of &#39;k&#39; boxes, &#39;k&#39; &gt;= 1), remove them and get &#39;k&#39; * &#39;k&#39; points for removing them.</h4>\n\n<h4 id=\"your-task-for-the-problem-is-to-find-and-return-the-maximum-points-you-can-get-by-removing-those-boxes\">Your task for the problem is to find and return the maximum points you can get by removing those boxes.</h4>\n\n<h5 id=\"for-example\">For Example:</h5>\n\n<pre><code>Input: boxes = [1, 3, 2, 2, 2, 3, 4, 3, 1]\nOutput: 23\nExplanation:\n[1, 3, 2, 2, 2, 3, 4, 3, 1] \n----&gt; [1, 3, 3, 4, 3, 1] (Remove 3 boxes with number 2, 3*3=9 points) \n----&gt; [1, 3, 3, 3, 1] (Remove one box with number 4, 1*1=1 points) \n----&gt; [1, 1] (Remove 3 boxes with number 3, 3*3=9 points) \n----&gt; [] (2*2=4 points)\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains a single integer \u2018T\u2019 denoting the number of test cases that would be there.\n\nThe first line of each test case contains a single integer \u2018N\u2019 denoting the number of boxes that would be given.\n\nAnd the next line contains \u2018N\u2019 space-separated integers which are the colors of the boxes represented as integers.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print the maximum points that could be collected by removing the boxes of the same color from the list.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= boxes.length &lt;= 50\n1 &lt;= boxes[i] &lt;= 100\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n7\n1 2 3 3 2 1 1\n9\n1 3 2 2 2 3 4 3 1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>17\n23\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1:</h5>\n\n<pre><code>Test Case 1:\n[1, 2, 3, 3, 2, 1, 1] \nRemove 33 ----&gt; [1, 2, 2, 1, 1] (2 * 2 = 4 points) \nRemove 22 ----&gt; [1, 1, 1] (2 * 2 = 4 points) \nRemove 111 ----&gt; [] (3 * 3 = 9 points) \nThus, total points are 17.\n\nTest Case 2:\n[1, 3, 2, 2, 2, 3, 4, 3, 1] \nRemove 222 ----&gt; [1, 3, 3, 4, 3, 1] (3 * 3 = 9 points) \nRemove 4 ----&gt; [1, 3, 3, 3, 1] (1 * 1 = 1 points) \nRemove 333 ----&gt; [1, 1] (3 * 3 = 9 points) \nRemove 22 ----&gt; [] (2 * 2 = 4 points)\nThus, total points are 23.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>1\n3\n1 1 1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>9\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-2\">Explanation Of Sample Input 2:</h5>\n\n<pre><code>Test Case 1:\n[1, 1, 1]\nRemove 111 ----&gt; [] (3 * 3 = 9 points) \nThus, total points are 9.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 6,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a sequence of boxes, each with a color represented by a positive integer, determine the maximum points achievable by repeatedly removing continuous segments of boxes with the same color. Removing a segment of 'k' boxes yields k * k points. The goal is to find the optimal sequence of removals to maximize the total points obtained until all boxes are removed.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= boxes.length <= 50",
                    "1 <= boxes[i] <= 100"
                ],
                "testcases": [
                    {
                        "input": "n = 7, boxes = [1, 2, 3, 3, 2, 1, 1]",
                        "output": "17",
                        "explanation": "[1, 2, 3, 3, 2, 1, 1] -> Remove [3,3] (2*2 = 4) -> [1, 2, 2, 1, 1] -> Remove [2,2] (2*2 = 4) -> [1, 1, 1] -> Remove [1,1,1] (3*3 = 9) -> [] Total points: 4 + 4 + 9 = 17"
                    },
                    {
                        "input": "n = 9, boxes = [1, 3, 2, 2, 2, 3, 4, 3, 1]",
                        "output": "23",
                        "explanation": "[1, 3, 2, 2, 2, 3, 4, 3, 1] -> Remove [2,2,2] (3*3 = 9) -> [1, 3, 3, 4, 3, 1] -> Remove [4] (1*1 = 1) -> [1, 3, 3, 3, 1] -> Remove [3,3,3] (3*3 = 9) -> [1, 1] -> Remove [1,1] (2*2=4) -> [] Total points: 9+1+9+4 = 23"
                    },
                    {
                        "input": "n = 3, boxes = [1, 1, 1]",
                        "output": "9",
                        "explanation": "[1, 1, 1] -> Remove [1,1,1] (3*3 = 9) -> [] Total points: 9"
                    },
                    {
                        "input": "n = 4, boxes = [3, 8, 2, 2]",
                        "output": "5",
                        "explanation": "[3, 8, 2, 2] -> Remove [2,2] (2*2 = 4) -> [3, 8] -> Remove [8](1*1 = 1) -> [3] -> Remove [3](1*1=1) -> [] Total points: 4+1+1 = 6"
                    },
                    {
                        "input": "n = 2, boxes = [1, 2]",
                        "output": "2",
                        "explanation": "[1, 2] -> Remove [1](1*1=1) -> [2] -> Remove [2](1*1 = 1) -> [] Total points: 1+1 = 2"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to recursively maximize the points by checking which box removals are the most profitable out of all the different possible removals.</p>",
            "<p>Use a memoization technique to optimise the solution to solve the problem.</p>",
            "<p>Use a dynamic programming technique to optimise the solution to solve the problem by building up a lookup table comprising of the respective maximised profits that we can obtain by selecting specific sets of boxes from the given list.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}