{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 7241,
            "title": "Remove Consecutive Duplicates from String",
            "titleSlug": "remove-consecutive-duplicates-from-string_630473",
            "content": "<h4 id=\"you-are-given-a-string-str-consisting-of-lower-and-upper-case-characters-you-need-to-remove-the-consecutive-duplicates-characters-and-return-the-new-string\">You are given a string &#39;STR&#39; consisting of lower and upper case characters. You need to remove the consecutive duplicates characters, and return the new string.</h4>\n\n<p><br></p>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don&#39;t have to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first and the only line of input contains a string &#39;STR&#39; with no space in between the characters.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>Print the final string after removing all the consecutive duplicates.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= |S| &lt;= 10^5\n\nWhere |S| represents the length of the string.\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>aabccba\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>abcba\n</code></pre>\n\n<h5 id=\"explanation-of-sample-output-1\">Explanation of Sample Output 1 :</h5>\n\n<pre><code>The string basically is a concatenation of [aa][b][cc][b][a] without considering the brackets. From each segment we need to choose only 1 character as all the characters are duplicates, therefore the final answer is [a][b][c][b][a] = abcba\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>xxxyyyzwwzzz\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>xyzwz\n</code></pre>\n\n<h5 id=\"explanation-of-sample-output-2\">Explanation of Sample Output 2 :</h5>\n\n<pre><code>The string basically is a concatenation of [xxx][yyy][z][ww][zzz]. After choosing 1 character from each segment our final answer is [x][y][z][w][z] = xyzwz\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 22,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string 'STR' consisting of lower and upper case characters, remove consecutive duplicate characters and return the resulting string.",
                "constraints": [
                    "1 <= |S| <= 10^5, where |S| is the length of the string.",
                    "Time limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "aabccba",
                        "output": "abcba",
                        "explanation": "The input string has consecutive duplicates.  Removing them results in the string 'abcba'."
                    },
                    {
                        "input": "xxxyyyzwwzzz",
                        "output": "xyzwz",
                        "explanation": "The input string has consecutive duplicates. Removing the xxx, yyy, ww and zzz groupings to their single representation x, y, w, and z will form xyzwz"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Traverse the string from the right and store the characters in a stack.</p>",
            "<p>Can you think of maintaining two pointers to build the final string from the original string?</p>",
            "<p>Can you think of maintaining two pointers to build the final string from the original string by doing changes in the same string?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Stacks & Queues",
                "slug": "stacks-&-queues"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}