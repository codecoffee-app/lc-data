{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8638,
            "title": "Remove Consecutive Duplicates ",
            "titleSlug": "remove-consecutive-duplicates_893195",
            "content": "<h4 id=\"you-are-given-a-string-str-of-size-n-your-task-is-to-remove-consecutive-duplicates-from-this-string-recursively\">You are given a string \u2018str\u2019 of size \u2018N\u2019. Your task is to remove consecutive duplicates from this string recursively.</h4>\n\n<h4 id=\"for-example\">For example:</h4>\n\n<pre><code>If the input string is \u2018str\u2019 = \u201daazbbby\u201d, then your output will be \u201cazby\u201d.\nNote that we are just removing adjacent duplicates.\n</code></pre>\n\n<h4 id=\"input-format\">Input Format:</h4>\n\n<pre><code>The first line of input contains an integer &#39;T&#39; representing the number of test cases.\n\nThe first line of each test case contains a single integer \u2018N\u2019 denoting the size of the given string.\n\nThe second line of each test case contains a string of size \u2018N\u2019.\n</code></pre>\n\n<h4 id=\"output-format\">Output Format:</h4>\n\n<pre><code>For each test case, print the new string that doesn\u2019t have consecutive duplicates.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints:</h4>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= N &lt;= 1000\n\nWhere \u2018T\u2019 is the number of test cases, \u2018N\u2019  is the length of the given string, and the given string contains only lowercase English letters.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1:</h4>\n\n<pre><code>2\n7\naazbbby\n6\naabbcb\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1:</h4>\n\n<pre><code>azby\nabcb\n</code></pre>\n\n<h4 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1:</h4>\n\n<pre><code>Test Case 1:\n\nGiven \u2018str&#39; = \u201daazbbby\u201d\nAfter removing adjacent duplicates string will be \u201cazby\u201d\n\nTest Case 2:\n\nGiven \u2018str\u2019 = \u201caabbcb\u201d\nAfter removing adjacent duplicates string will be \u201cabcb\u201d\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2:</h4>\n\n<pre><code>2\n5\nabcde\n5\naaaaa\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2:</h4>\n\n<pre><code>abcde\na\n</code></pre>\n\n<h4 id=\"explanation-of-sample-input-2\">Explanation of Sample Input 2:</h4>\n\n<pre><code>Test Case 1:\n\nGiven \u2018str&#39; = \u201dabcde\u201d\nThere are no duplicates in the input string so the final string will be \u201cabcde\u201d \n\nTest Case 2:\n\nGiven \u2018str\u2019 = \u201caaaaa\u201d\nAfter removing adjacent duplicates string will be \u201ca\u201d\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 79,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string 's', remove all consecutive duplicate characters from it recursively. Return the resulting string without any adjacent duplicate characters.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= N <= 1000",
                    "The given string contains only lowercase English letters."
                ],
                "testcases": [
                    {
                        "input": "N = 7, s = \"aazbbby\"",
                        "output": "azby",
                        "explanation": "The string \"aazbbby\" has consecutive duplicates 'aa' and 'bbb'. Removing them results in \"azby\"."
                    },
                    {
                        "input": "N = 6, s = \"aabbcb\"",
                        "output": "abcb",
                        "explanation": "The string \"aabbcb\" has consecutive duplicates 'aa' and 'bb'. Removing them results in \"abcb\"."
                    },
                    {
                        "input": "N = 5, s = \"abcde\"",
                        "output": "abcde",
                        "explanation": "The string \"abcde\" does not have any consecutive duplicates, so the result is the same as the input."
                    },
                    {
                        "input": "N = 5, s = \"aaaaa\"",
                        "output": "a",
                        "explanation": "The string \"aaaaa\" has consecutive duplicates 'aaaa'. Removing them results in \"a\"."
                    },
                    {
                        "input": "N = 4, s = \"abba\"",
                        "output": "ba",
                        "explanation": "The string \"abba\" has consecutive duplicates 'bb'. Removing them results in \"aba\", then 'aa' so the final answer is 'ba'."
                    },
                    {
                        "input": "N = 9, s = \"mississippi\"",
                        "output": "misisipi",
                        "explanation": "The string \"mississippi\" has consecutive duplicates 'ss' and 'ss'. Removing them results in \"misisipi\"."
                    },
                    {
                        "input": "N = 3, s = \"abb\"",
                        "output": "ab",
                        "explanation": "The string \"abb\" has consecutive duplicates 'bb'. Removing them results in \"ab\"."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Either we remove a character or it will remain in the final string.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}