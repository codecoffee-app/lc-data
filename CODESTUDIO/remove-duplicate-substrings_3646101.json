{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 16794,
            "title": "Remove Duplicate Substrings",
            "titleSlug": "remove-duplicate-substrings_3646101",
            "content": "<h4 id=\"ninja-has-an-n-character-long-string-he-observed-that-the-string-consists-of-the-same-adjacent-letters-so-he-thought-to-remove-some-characters-from-the-string-using-this-operation\">Ninja has an \u2018N\u2019 character long string. He observed that the string consists of the same adjacent letters. So, he thought to remove some characters from the string using this operation.</h4>\n\n<h4 id=\"in-one-operation-we-can-delete-a-substring-having-k-same-adjacent-characters-causing-the-left-and-the-right-side-of-the-deleted-substring-to-concatenate-together\">In one operation, we can delete a substring having \u2018K\u2019 same adjacent characters. causing the left and the right side of the deleted substring to concatenate together.</h4>\n\n<h4 id=\"ninja-applied-this-operation-as-many-times-as-possible\">Ninja applied this operation as many times as possible.</h4>\n\n<h4 id=\"your-task-is-to-find-the-resultant-string-after-all-operations\">Your task is to find the resultant string after all operations.</h4>\n\n<h4 id=\"you-are-given-a-string-s-having-n-lowercase-letters-and-an-integer-k-find-the-resultant-string-after-all-the-operations-are-done\">You are given a string \u2018S\u2019 having \u2018N\u2019 lowercase letters and an integer \u2018K\u2019. Find the resultant string after all the operations are done.</h4>\n\n<h5 id=\"for-example\">For Example</h5>\n\n<pre><code>If the given string S = \u201cabcbaacd\u201d and k = 2. In the first operation, we will remove \u2018aa\u2019 from the string. After that, we will concatenate the left and right strings as the resultant string will be \u201cabcb\u201d + \u201ccd\u201d = \u201cabcbcd\u201d.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of the input contains an integer, &#39;T,\u2019 denoting the number of test cases.\n\nThe first line of each test case contains two integers, \u2018N\u2019 denoting the number of characters present in string S and \u2018K\u2019.\n</code></pre>\n\n<p>The following line contains the string \u2018S\u2019.</p>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print \u2018an integer corresponding to the minimum number of swaps required.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 10^4.\n1 &lt;= K &lt;= 1000.\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n10 2\nabcbacaacd\n8 3\nababbbbc\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>abcbad\nababc\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of sample input 1:</h5>\n\n<pre><code>For the first test case,\n\nIn the first operation, we will remove \u2018aa\u2019 from the string. The resultant string will be \u201cabcbaccd\u201d.In the second operation, we will remove \u2018cc\u2019 from the string. The resultant string will be \u201cabcbad\u201d.Now, we can\u2019t apply any operation on the string. Hence, the resultant string is \u201cabcbad\u201d.\n\n\nFor the second test case:\n\nIn the first operation, we will remove \u2018bbb\u2019 from the string. The resultant string will be \u201cababc\u201d.Now, we can\u2019t apply any operation on the string. Hence, the resultant string is \u201cababc\u201d.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n8 3\naaaallli\n8 2\njjjjwwnh\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>ai\nnh\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 0,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string 'S' of length 'N' consisting of lowercase letters and an integer 'K', repeatedly remove substrings of 'S' that consist of exactly 'K' consecutive identical characters. Apply this operation as many times as possible until no such substrings exist. Return the resulting string after all operations.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10^4",
                    "1 <= K <= 1000"
                ],
                "testcases": [
                    {
                        "input": "n = 10, k = 2, s = \"abcbacaacd\"",
                        "output": "abcbad",
                        "explanation": "First, remove 'aa', resulting in \"abcbaccd\". Then, remove 'cc', resulting in \"abcbad\"."
                    },
                    {
                        "input": "n = 8, k = 3, s = \"ababbbbc\"",
                        "output": "ababc",
                        "explanation": "Remove 'bbb', resulting in \"ababc\"."
                    },
                    {
                        "input": "n = 8, k = 3, s = \"aaaallli\"",
                        "output": "ai",
                        "explanation": "Remove 'aaa', resulting in \"allli\". Then, remove 'lll', resulting in \"ai\"."
                    },
                    {
                        "input": "n = 8, k = 2, s = \"jjjjwwnh\"",
                        "output": "nh",
                        "explanation": "Remove 'jj', resulting in \"jjwwnh\". Remove 'jj', resulting in \"wwnh\".  Remove 'ww', resulting in \"nh\"."
                    },
                    {
                        "input": "n = 5, k = 1, s = \"abcde\"",
                        "output": "",
                        "explanation": "Remove a, remove b, remove c, remove d, remove e, results in empty string."
                    },
                    {
                        "input": "n = 5, k = 2, s = \"aaaaa\"",
                        "output": "a",
                        "explanation": "Remove aa, resulting in aaa. Remove aa resulting in a."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Check for each substring and apply the operations.</p>",
            "<p>Think of an iterative algorithm.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Stacks & Queues",
                "slug": "stacks-&-queues"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}