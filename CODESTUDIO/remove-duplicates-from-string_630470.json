{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 7238,
            "title": "Remove Duplicates from String",
            "titleSlug": "remove-duplicates-from-string_630470",
            "content": "<h4 id=\"you-are-given-a-string-str-of-length-n-consisting-of-only-the-lower-case-english-alphabet\">You are given a string (STR) of length N, consisting of only the lower case English alphabet.</h4>\n\n<h4 id=\"your-task-is-to-remove-all-the-duplicate-occurrences-of-characters-in-the-string\">Your task is to remove all the duplicate occurrences of characters in the string.</h4>\n\n<h5 id=\"for-example\">For Example:</h5>\n\n<pre><code>If the given string is:\nabcadeecfb\n\nThen after deleting all duplicate occurrences, the string looks like this:\nabcdef\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The only input line contains a string (STR).\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>Print the string after removing all the duplicate occurrences.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= N &lt;= 4*10^5\n\nTime Limit: 1sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>abcadeecfb\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>abcdef\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>zzzzzxx\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>zx\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 25,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string `STR` of length `N` consisting of lowercase English alphabet characters, remove all duplicate occurrences of characters in the string. The goal is to construct a new string containing only the first occurrence of each unique character from the original string, preserving their original order.",
                "constraints": [
                    "1 <= N <= 4 * 10^5",
                    "Time Limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "abcadeecfb",
                        "output": "abcdef",
                        "explanation": "The input string 'abcadeecfb' contains duplicate characters. The first occurrences of 'a', 'b', 'c', 'd', 'e', and 'f' are extracted in that order, resulting in the output 'abcdef'."
                    },
                    {
                        "input": "zzzzzxx",
                        "output": "zx",
                        "explanation": "The input string 'zzzzzxx' contains repeated 'z' and 'x'. Only the first occurrences of 'z' and 'x' are retained, producing the output 'zx'."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Think of the easiest method to check whether a character has previously occurred in the string.</p>",
            "<p>Instead of traversing the string again and again, can we instead store previously encountered characters in a data structure?</p>",
            "<p>Think of a better data structure to store these previously encountered characters. Make use of the fact that the string only contains lower case characters.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Binary Search Trees",
                "slug": "binary-search-trees"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}