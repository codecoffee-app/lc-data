{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8818,
            "title": "Remove Duplicates",
            "titleSlug": "remove-duplicates_920325",
            "content": "<h4 id=\"ninja-is-playing-with-numbers-but-hates-when-he-gets-duplicate-numbers-ninja-is-provided-an-array-and-he-wants-to-remove-all-duplicate-elements-and-return-the-array-but-he-has-to-maintain-the-order-in-which-the-elements-were-supplied-to-him\">Ninja is playing with numbers but hates when he gets duplicate numbers. Ninja is provided an array, and he wants to remove all duplicate elements and return the array, but he has to maintain the order in which the elements were supplied to him.</h4>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains a single integer T representing the number of test cases. \n\nThe first line of each test case will contain the integer N.\n\nThe second and last line contains N space-separated integers that denote the elements of the given array.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, return the new array that does not contain any duplicates of the input array.\n\nThe output of each test case should be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the given function. \n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 5*10^3\n-10^5 &lt;= arr[i] &lt;= 10^5\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n5\n1 2 2 3 4\n5\n10 11 23 23 23 \n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code> 1 2 3 4\n 10 11 23\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1:</h5>\n\n<pre><code>In the first test case, \u20182\u2019 is a duplicate element, and there are two occurrences of \u20182\u2019, so one \u20182\u2019 is removed, and the resultant array becomes [1 2 3 4].\n\nIn the second test case, \u201823\u2019 is a duplicate element, and there are three occurrences of \u201823\u2019, so two occurrences of \u201823\u2019 must be removed, and the resultant array becomes [10 11 23].\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code> 2\n 10\n 1 3 3 3 3 3 4 9 23 35\n 5\n 10 10 10 10 10 \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code> 1 3 4 9 23 35\n 10 \n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 16,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of integers, remove all duplicate elements while preserving the original order of the elements. Return the resulting array containing only unique elements in their original sequence.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 5*10^3",
                    "-10^5 <= arr[i] <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "n = 5, arr=[1, 2, 2, 3, 4]",
                        "output": "1 2 3 4",
                        "explanation": "The input array contains a duplicate '2'.  The output array removes the duplicate, resulting in [1, 2, 3, 4]."
                    },
                    {
                        "input": "n = 5, arr=[10, 11, 23, 23, 23]",
                        "output": "10 11 23",
                        "explanation": "The input array contains multiple occurrences of '23'. The output array removes the duplicates, leaving only one instance of '23', resulting in [10, 11, 23]."
                    },
                    {
                        "input": "n = 10, arr=[1, 3, 3, 3, 3, 3, 4, 9, 23, 35]",
                        "output": "1 3 4 9 23 35",
                        "explanation": "The input array contains multiple duplicates of '3'.  The output array removes all duplicate '3's resulting in [1, 3, 4, 9, 23, 35]."
                    },
                    {
                        "input": "n = 5, arr=[10, 10, 10, 10, 10]",
                        "output": "10",
                        "explanation": "The input array contains only duplicates of '10'.  The output array removes all duplicates, leaving only one '10', resulting in [10]."
                    },
                    {
                        "input": "n = 3, arr=[1, 2, 3]",
                        "output": "1 2 3",
                        "explanation": "The input array contains no duplicates. The output array is the same as the input array: [1, 2, 3]."
                    },
                    {
                        "input": "n = 1, arr=[5]",
                        "output": "5",
                        "explanation": "The input array contains only one element. The output array is the same: [5]."
                    },
                    {
                        "input": "n = 6, arr=[1, 2, 3, 1, 2, 3]",
                        "output": "1 2 3",
                        "explanation": "The input array contains repeating elements, The output array removes duplicates [1, 2, 3]."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you traverse the whole array sequentially?&nbsp;</p>",
            "<p><strong>&nbsp;</strong>Can you find the frequency of each element?&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}