{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 14620,
            "title": "Report Contiguous Dates",
            "titleSlug": "report-contiguous-dates_2196168",
            "content": "<pre><code>Table: Failed\n\n+--------------+---------+\n| Column Name  | Type    |\n+--------------+---------+\n| fail_date    | date    |\n+--------------+---------+\nPrimary key for this table is fail_date.\nFailed table contains the days of failed tasks.\nTable: Succeeded\n\n+--------------+---------+\n| Column Name  | Type    |\n+--------------+---------+\n| success_date | date    |\n+--------------+---------+\nPrimary key for this table is success_date.\nSucceeded table contains the days of succeeded tasks.\n\n\nA system is running one task every day. Every task is independent of the previous tasks. The tasks can fail or succeed.\n\nWrite an SQL query to generate a report of period_state for each continuous interval of days in the period from 2019-01-01 to 2019-12-31.\n\nperiod_state is &#39;failed&#39; if tasks in this interval failed or &#39;succeeded&#39; if tasks in this interval succeeded. Interval of days are retrieved as start_date and end_date.\n\nOrder result by start_date.\n\nThe query result format is in the following example:\n\nFailed table:\n+-------------------+\n| fail_date         |\n+-------------------+\n| 2018-12-28        |\n| 2018-12-29        |\n| 2019-01-04        |\n| 2019-01-05        |\n+-------------------+\n\nSucceeded table:\n+-------------------+\n| success_date      |\n+-------------------+\n| 2018-12-30        |\n| 2018-12-31        |\n| 2019-01-01        |\n| 2019-01-02        |\n| 2019-01-03        |\n| 2019-01-06        |\n+-------------------+\n\n\nResult table:\n+--------------+--------------+--------------+\n| period_state | start_date   | end_date     |\n+--------------+--------------+--------------+\n| succeeded    | 2019-01-01   | 2019-01-03   |\n| failed       | 2019-01-04   | 2019-01-05   |\n| succeeded    | 2019-01-06   | 2019-01-06   |\n+--------------+--------------+--------------+\n\nThe report ignored the system state in 2018 as we care about the system in the period 2019-01-01 to 2019-12-31.\nFrom 2019-01-01 to 2019-01-03 all tasks succeeded and the system state was &quot;succeeded&quot;.\nFrom 2019-01-04 to 2019-01-05 all tasks failed and system state was &quot;failed&quot;.\nFrom 2019-01-06 to 2019-01-06 all tasks succeeded and system state was &quot;succeeded&quot;.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Ninja",
            "likes": 2,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two tables, `Failed` and `Succeeded`, representing the dates on which tasks failed or succeeded respectively, generate a report detailing the period state for each continuous interval of days within the year 2019 (from 2019-01-01 to 2019-12-31).  The `period_state` should be 'failed' if all tasks within an interval failed, and 'succeeded' if all tasks within the interval succeeded. The report should include the `start_date` and `end_date` for each interval. Order the results by `start_date`.",
                "constraints": [
                    "The date range for consideration is from 2019-01-01 to 2019-12-31.",
                    "The tables `Failed` and `Succeeded` contain dates only.",
                    "Each task is independent of previous tasks."
                ],
                "testcases": [
                    {
                        "input": "failed_dates=['2018-12-28','2018-12-29','2019-01-04','2019-01-05'], succeeded_dates=['2018-12-30','2018-12-31','2019-01-01','2019-01-02','2019-01-03','2019-01-06']",
                        "output": "[{'period_state': 'succeeded', 'start_date': '2019-01-01', 'end_date': '2019-01-03'}, {'period_state': 'failed', 'start_date': '2019-01-04', 'end_date': '2019-01-05'}, {'period_state': 'succeeded', 'start_date': '2019-01-06', 'end_date': '2019-01-06'}]",
                        "explanation": "The dates 2019-01-01, 2019-01-02, and 2019-01-03 are in the Succeeded table, forming a continuous 'succeeded' interval. Dates 2019-01-04 and 2019-01-05 are in the Failed table, forming a 'failed' interval.  2019-01-06 is a single day succeeded interval."
                    },
                    {
                        "input": "failed_dates=[], succeeded_dates=['2019-01-01','2019-01-02','2019-01-03', '2019-01-04', '2019-01-05']",
                        "output": "[{'period_state': 'succeeded', 'start_date': '2019-01-01', 'end_date': '2019-01-05'}]",
                        "explanation": "All dates from 2019-01-01 to 2019-01-05 are in the Succeeded table and thus form a single 'succeeded' interval."
                    },
                    {
                        "input": "failed_dates=['2019-01-01','2019-01-02','2019-01-03', '2019-01-04', '2019-01-05'], succeeded_dates=[]",
                        "output": "[{'period_state': 'failed', 'start_date': '2019-01-01', 'end_date': '2019-01-05'}]",
                        "explanation": "All dates from 2019-01-01 to 2019-01-05 are in the Failed table and thus form a single 'failed' interval."
                    },
                    {
                        "input": "failed_dates=['2019-01-01', '2019-01-03', '2019-01-05'], succeeded_dates=['2019-01-02', '2019-01-04', '2019-01-06']",
                        "output": "[{'period_state': 'failed', 'start_date': '2019-01-01', 'end_date': '2019-01-01'}, {'period_state': 'succeeded', 'start_date': '2019-01-02', 'end_date': '2019-01-02'}, {'period_state': 'failed', 'start_date': '2019-01-03', 'end_date': '2019-01-03'}, {'period_state': 'succeeded', 'start_date': '2019-01-04', 'end_date': '2019-01-04'}, {'period_state': 'failed', 'start_date': '2019-01-05', 'end_date': '2019-01-05'}, {'period_state': 'succeeded', 'start_date': '2019-01-06', 'end_date': '2019-01-06'}]",
                        "explanation": "Each date is either succeeded or failed, resulting in single-day intervals."
                    },
                    {
                        "input": "failed_dates=['2019-01-02'], succeeded_dates=['2019-01-01', '2019-01-03']",
                        "output": "[{'period_state': 'succeeded', 'start_date': '2019-01-01', 'end_date': '2019-01-01'}, {'period_state': 'failed', 'start_date': '2019-01-02', 'end_date': '2019-01-02'}, {'period_state': 'succeeded', 'start_date': '2019-01-03', 'end_date': '2019-01-03'}]",
                        "explanation": "Each day belongs to either the succeeded or failed table and forms its own interval."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "SQL",
                "slug": "sql"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}