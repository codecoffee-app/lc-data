{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8982,
            "title": "Reset in Range",
            "titleSlug": "reset-in-range_972998",
            "content": "<h4 id=\"you-are-given-a-number-you-need-to-reset-the-bits-from-lth-position-to-rth-position-lsb-is-at-first-position-r-1\">You are given a number. You need to reset the bits from Lth position to Rth position. LSB is at first position (R = 1).</h4>\n\n<h4 id=\"example-given-number-is-94-1011110-l-5-and-r-2-if-we-reset-bits-from-l-to-r-in-the-number-then-the-resultant-number-would-be-64-1000000\">Example: Given number is 94 (1011110), L = 5 and R = 2. If we reset bits from L to R in the number, then the resultant number would be 64 (1000000).</h4>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 representing the number of test cases. \n\nThe first line of each test case will contain a single integer \u2018N\u2019 which denotes the input number whose \u2018L\u2019th to \u2018R\u2019th bit needs to be reset.\n\nThe second line of each test case will contain two space separated integers \u2018L\u2019 and \u2018R\u2019, where \u2018L\u2019 denotes the left bound of the range of bits to be reset and \u2018R\u2019 denotes the right bound of the range of bits to be reset. \n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print the number after resetting the Lth to Rth bit in the number.\n\nOutput for every test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You don\u2019t need to print anything; It has already been taken care of.\n</code></pre>\n\n<h5 id=\"follow-up\">Follow up:</h5>\n\n<pre><code>Can you solve it in O(1) time and space complexity?\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 10^9\n1 &lt;= R &lt;= L &lt;= 31\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n10\n2 1\n15    \n3 2\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>8\n9\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1:</h5>\n\n<pre><code>In the first test case, the given number is 10 (1010) , \u2018L\u2019=2 and \u2018R\u2019=1. After reset of 2nd to 1st bit, we get the resultant value as 8 (1000).\n\nIn the second test case, the given number is 15 (1111), \u2018L\u2019=3, and \u2018R\u2019=2. After reset of 3rd to 2nd, we get the resultant value as 9 (1001).\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n23 \n4 2\n31   \n3 1   \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>17\n24\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation For Sample Input 2:</h5>\n\n<pre><code>In the first test case, the given number is 23 (10111) , \u2018L\u2019=4 and \u2018R\u2019=2. After reset of 4th to 2nd, we get the resultant value as 17 (10001).\n\nIn the second test case, the given number is 31 (11111), \u2018L\u2019=3, and \u2018R\u2019=1. After reset of 3rd to 1st, we get the resultant value as 24 (11000).\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 4,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a number, reset the bits from the Lth position to the Rth position (LSB is at the first position, R = 1). For example, if the number is 94 (1011110), L = 5, and R = 2, resetting bits from L to R results in 64 (1000000).",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10^9",
                    "1 <= R <= L <= 31",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "10\n2 1",
                        "output": "8",
                        "explanation": "The given number is 10 (1010), L=2 and R=1. Resetting bits from the 2nd to the 1st position results in 8 (1000)."
                    },
                    {
                        "input": "15\n3 2",
                        "output": "9",
                        "explanation": "The given number is 15 (1111), L=3, and R=2. Resetting bits from the 3rd to the 2nd position results in 9 (1001)."
                    },
                    {
                        "input": "23\n4 2",
                        "output": "17",
                        "explanation": "The given number is 23 (10111), L=4 and R=2. Resetting bits from the 4th to the 2nd position results in 17 (10001)."
                    },
                    {
                        "input": "31\n3 1",
                        "output": "24",
                        "explanation": "The given number is 31 (11111), L=3, and R=1. Resetting bits from the 3rd to the 1st position results in 24 (11000)."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you think of it by iterating the required bits?</p>",
            "<p>Can you think about a one step solution by using only \u2018L\u2019 the and \u2018R\u2019th bit?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}