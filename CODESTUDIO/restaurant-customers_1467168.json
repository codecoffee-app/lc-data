{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12627,
            "title": "Restaurant Customers",
            "titleSlug": "restaurant-customers_1467168",
            "content": "<h4 id=\"ninja-is-the-manager-of-a-restaurant-there-were-n-customers-who-visit-the-restaurant-ninja-is-interested-in-calculating-what-was-the-maximum-number-of-customers-in-the-restaurant-at-a-time-he-finds-this-problem-is-tough-for-him-so-he-wants-your-help\">Ninja is the manager of a restaurant. There were \u2018N\u2019 customers who visit the restaurant. Ninja is interested in calculating what was the maximum number of customers in the restaurant at a time. He finds this problem is tough for him, so he wants your help.</h4>\n\n<h4 id=\"you-are-given-the-arrival-and-leaving-time-of-n-customers-in-the-form-of-arrays-named-arrival-and-leaving-your-task-is-to-find-the-maximum-number-of-customers-at-any-point-in-time\">You are given the arrival and leaving time of \u2018N\u2019 customers in the form of arrays named \u2018ARRIVAL\u2019 and \u2018LEAVING\u2019. Your task is to find the maximum number of customers at any point in time.</h4>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>All arrival and leaving times are distinct.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains an integer \u2018T\u2019, which denotes the number of test cases to be run. Then, the T test cases follow. \n\nThe first line of each test case contains a positive integer, \u2018N\u2019,  denoting the total number of customers.\n\nThe next \u2018N\u2019 lines of each test case contain 2 integers, \u2018x\u2019, and \u2018y\u2019, denoting the arrival and leaving time of a customer.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print the \u201cmaximum number of customers\u201d in the restaurant at a time, as described in the problem statement.\n\nOutput for each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= \u2018T\u2019 &lt;= 10\n1 &lt;= \u2018N\u2019 &lt;= 10^4\n1 &lt;= \u2018x\u2019 &lt; \u2018y\u2019 &lt;= 10^6\n\nTime Limit: 1 second\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>1\n2\n1 3\n4 5\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>1\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1 :</h5>\n\n<pre><code>Customer 1 arrives at \u20181\u2019 and leaves at \u20183\u2019. So, the maximum number of customers at that time is only \u20181\u2019. Now the 2nd customer arrives at \u20184\u2019 and leaves at \u20185\u2019. So, the maximum number of customers remains \u20181\u2019 only.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>1\n2\n2 5\n1 3\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>2\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 6,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given the arrival and leaving times of 'N' customers at a restaurant, determine the maximum number of customers present in the restaurant at any single point in time. You are provided with two arrays, 'arrival' and 'leaving', representing the arrival and departure times of each customer, respectively. Your task is to implement a function that efficiently calculates the maximum number of concurrent customers.",
                "constraints": [
                    "1 <= \u2018T\u2019 <= 10",
                    "1 <= \u2018N\u2019 <= 10^4",
                    "1 <= \u2018x\u2019 < \u2018y\u2019 <= 10^6"
                ],
                "testcases": [
                    {
                        "input": "arrival=[1, 4], leaving=[3, 5]",
                        "output": "1",
                        "explanation": "Customer 1 arrives at 1 and leaves at 3.  The maximum number of customers is 1. Customer 2 arrives at 4 and leaves at 5.  The maximum number of customers remains 1."
                    },
                    {
                        "input": "arrival=[2, 1], leaving=[5, 3]",
                        "output": "2",
                        "explanation": "Customer 2 arrives at 1 and leaves at 3. Then customer 1 arrives at 2. Hence number of customers is 2."
                    },
                    {
                        "input": "arrival=[1, 2, 3], leaving=[4, 5, 6]",
                        "output": "3",
                        "explanation": "Customers arrive in succession, so at time 3, all three are in the restaurant."
                    },
                    {
                        "input": "arrival=[1, 3, 5], leaving=[2, 4, 6]",
                        "output": "1",
                        "explanation": "Each customer arrives and leaves before the next arrives.  Therefore, the maximum number of customers at any one time is 1."
                    },
                    {
                        "input": "arrival=[1, 2, 3, 4, 5], leaving=[6, 7, 8, 9, 10]",
                        "output": "5",
                        "explanation": "All 5 customers are present in the restaurant simultaneously for a certain period."
                    },
                    {
                        "input": "arrival=[1, 2, 3, 4, 5], leaving=[2, 3, 4, 5, 6]",
                        "output": "5",
                        "explanation": "Before any customer leaves, all customers are present. So the maximum is 5"
                    },
                    {
                        "input": "arrival=[100, 200, 300], leaving=[101, 201, 301]",
                        "output": "3",
                        "explanation": "The arrival and leaving times are clustered but the logic remains the same.  At arrival time 300, all three customers are present."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><i>Try to find for each time individually.</i></p>",
            "<p><i>Think of sorting.</i></p>"
        ],
        "relatedTopics": [
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}