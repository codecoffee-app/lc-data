{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8668,
            "title": "Return in Row wave form",
            "titleSlug": "return-in-row-wave-form_893285",
            "content": "<h4 id=\"you-are-given-a-2d-array-with-dimensions-n-m-you-need-to-read-the-array-elements-row-wise-and-return-a-linear-array-that-stores-the-elements-like-a-wave-i-e-the-1st-row-elements-are-stored-from-left-to-right-2nd-row-elements-are-stored-from-right-to-left-and-so-on\">You are given a 2D array with dimensions \u2018N*M\u2019. You need to read the array elements row-wise and return a linear array that stores the elements like a wave i.e the 1st-row elements are stored from left to right, 2nd-row elements are stored from right to left, and so on.</h4>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer &#39;T&#39; representing the number of the test cases. Then \u2018T&#39; test cases follow.\n\nThe first line of each test case contains two space-separated integers, &#39;N&#39;, &#39;M&#39;, the dimensions of the 2D array. \n\nThe next \u2018N\u2019 lines consist of \u2018M\u2019 space-separated integers denoting the array elements.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, return a 1D array storing the input array elements like a wave.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= \u2018T\u2019 &lt;= 10\n1 &lt;= &#39;N&#39;, \u2018M\u2019 &lt;= 10^3\n1 &lt;= \u2018ARR[i][j]\u2019 &lt;= 10^5\n\nWhere ARR[i][j] is the array element in the ith row of the jth column.\n\nTime limit: 1 second\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n2 2 \n1 2\n0 5\n2 3\n5 1 2\n7 0 1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>1 2 5 0\n5 1 2 1 0 7\n</code></pre>\n\n<h5 id=\"explanation-of-input-1\">Explanation of Input 1:</h5>\n\n<pre><code>For test case 1, the array is traversed as:\nThe first row is traversed from left to right. -&gt; [1, 2]\nThe second row is traversed from right to left. -&gt; [5, 0]\nTherefore the final answer is [1, 2, 5, 0].\n\nFor test case 2, the array is traversed as:\nFirst row is traversed from left to right. -&gt; [5, 1, 2]\nSecond row is traversed from right to left. -&gt; [1, 0, 7]\nTherefore the final answer is [5, 1, 2, 1, 0, 7]\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\n3 3\n0 1 1\n8 0 9\n5 4 1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2</h5>\n\n<pre><code>0 1 1 9 0 8 5 4 1\n</code></pre>\n\n<h5 id=\"explanation-of-input-1\">Explanation of Input 1:</h5>\n\n<pre><code>For test case 1, the array is traversed as:\nThe first row is traversed from left to right. -&gt; [0, 1, 1]\nThe second row is traversed from right to left. -&gt; [9, 0, 8]\nThe third row is traversed from left to right -&gt; [5, 4, 1]\nTherefore the final answer is [0, 1, 1, 9, 0, 8, 5, 4, 1]\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 25,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a 2D array (matrix) of dimensions N x M, traverse the matrix row by row and store the elements into a 1D array in a wave-like fashion. This means the first row is traversed from left to right, the second row from right to left, the third row from left to right, and so on. Return the resulting 1D array.",
                "constraints": [
                    "1 <= \u2018T\u2019 <= 10 (Number of test cases)",
                    "1 <= 'N', \u2018M\u2019 <= 10^3 (Dimensions of the matrix)",
                    "1 <= \u2018ARR[i][j]\u2019 <= 10^5 (Value of each element in the matrix)"
                ],
                "testcases": [
                    {
                        "input": "mat=[[1, 2],[0, 5]]",
                        "output": "[1, 2, 5, 0]",
                        "explanation": "First row (1, 2) is traversed left to right. Second row (0, 5) is traversed right to left. Resulting array is [1, 2, 5, 0]."
                    },
                    {
                        "input": "mat=[[5, 1, 2],[7, 0, 1]]",
                        "output": "[5, 1, 2, 1, 0, 7]",
                        "explanation": "First row (5, 1, 2) is traversed left to right. Second row (7, 0, 1) is traversed right to left. Resulting array is [5, 1, 2, 1, 0, 7]."
                    },
                    {
                        "input": "mat=[[0, 1, 1],[8, 0, 9],[5, 4, 1]]",
                        "output": "[0, 1, 1, 9, 0, 8, 5, 4, 1]",
                        "explanation": "First row (0, 1, 1) is traversed left to right. Second row (8, 0, 9) is traversed right to left. Third row (5, 4, 1) is traversed left to right. Resulting array is [0, 1, 1, 9, 0, 8, 5, 4, 1]."
                    },
                    {
                        "input": "mat=[[1, 2, 3, 4]]",
                        "output": "[1, 2, 3, 4]",
                        "explanation": "Single row matrix traversed left to right yields [1, 2, 3, 4]."
                    },
                    {
                        "input": "mat=[[1],[2],[3],[4]]",
                        "output": "[1, 2, 3, 4]",
                        "explanation": "Single column matrix. Rows alternate direction [1], [2], [3], [4]."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to find a brute force approach.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Matrices (2D Arrays)",
                "slug": "matrices-(2d-arrays)"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}