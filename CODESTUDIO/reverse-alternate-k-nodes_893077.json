{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8584,
            "title": "Reverse Alternate K nodes",
            "titleSlug": "reverse-alternate-k-nodes_893077",
            "content": "<h4 id=\"you-are-given-a-singly-linked-list-of-integers-and-a-positive-integer-k-modify-the-linked-list-by-reversing-every-alternate-k-nodes-of-the-linked-list\">You are given a Singly Linked List of integers and a positive integer &#39;K&#39;. Modify the linked list by reversing every alternate &#39;K&#39; nodes of the linked list.</h4>\n\n<pre><code>A singly linked list is a type of linked list that is unidirectional, that is, it can be traversed in only one direction from head to the last node (tail).\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>If the number of nodes in the list or in the last group is less than &#39;K&#39;, just reverse the remaining nodes. \n</code></pre>\n\n<h5 id=\"example\">Example:</h5>\n\n<pre><code>Linked list: 5 6 7 8 9 10 11 12\nK: 3 \n\nOutput: 7 6 5 8 9 10 12 11\n\nWe reverse the first &#39;K&#39; (3) nodes and then skip the next &#39;K&#39;(3) nodes. Now, since the number of nodes remaining in the list (2) is less than &#39;K&#39;, we just reverse the remaining nodes (11 and 12). \n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You need to reverse the first &#39;K&#39; nodes and then skip the &#39;K&#39; nodes and so on. 5 6 7 10 9 8 11 12 is not the correct answer for the given linked list. \n</code></pre>\n\n<h5 id=\"input-format\">Input Format</h5>\n\n<pre><code>The first line of input contains an integer &#39;T&#39;, the number of test cases.\n\nThe first line of every test case contains the elements of the singly linked list separated by a single space and terminated by -1. Hence, -1 would never be a list element.\n\nThe second line of every test case contains the positive integer \u2018K\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For every test case, return the modified linked list. The elements of the modified list should be single-space separated, terminated by -1.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 5 * 10^4\n1 &lt;= K &lt;= N\n-10^3 &lt;= data &lt;= 10^3 and data != -1\n\nTime Limit: 1 sec    \n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1 \n1 2 3 4 5 6 7 -1\n2  \n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>2 1 3 4 6 5 7 -1\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of sample input 1:</h5>\n\n<pre><code>In the given linked list, we have to reverse the first two nodes, then skip two nodes, and so on\u2026 until all the nodes are processed in the same way.\nThe modified linked list after the above process is 2 1 3 4 6 5 7 -1\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n5 10 -6 4 7 -1 \n3 \n10 20 30 40 50 -1\n1 \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>-6 10 5 4 7 -1\n10 20 30 40 50 -1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 4,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a singly linked list of integers and a positive integer K, modify the linked list by reversing every alternate K nodes. A singly linked list can only be traversed in one direction from head to tail. If the number of nodes in the list or the last group is less than K, reverse the remaining nodes. Reverse the first K nodes, then skip the next K nodes, and so on.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 5 * 10^4",
                    "1 <= K <= N",
                    "-10^3 <= data <= 10^3 and data != -1",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "1\n1 2 3 4 5 6 7 -1\n2",
                        "output": "2 1 3 4 6 5 7 -1",
                        "explanation": "Reverse the first two nodes, then skip two nodes, and so on until all nodes are processed."
                    },
                    {
                        "input": "2\n5 10 -6 4 7 -1\n3\n10 20 30 40 50 -1\n1",
                        "output": "-6 10 5 4 7 -1\n10 20 30 40 50 -1",
                        "explanation": null
                    },
                    {
                        "input": "5 6 7 8 9 10 11 12\n3",
                        "output": "7 6 5 8 9 10 12 11",
                        "explanation": "Reverse the first 'K' (3) nodes and then skip the next 'K'(3) nodes. Now, since the number of nodes remaining in the list (2) is less than 'K', we just reverse the remaining nodes (11 and 12)."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can we use recursion to solve this problem?</p>",
            "<p>Is it possible to solve this problem iteratively?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}