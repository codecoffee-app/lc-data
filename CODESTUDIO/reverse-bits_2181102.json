{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 14490,
            "title": "Reverse Bits",
            "titleSlug": "reverse-bits_2181102",
            "content": "<h4 id=\"there-is-a-song-concert-going-to-happen-in-the-city-the-price-of-each-ticket-is-equal-to-the-number-obtained-after-reversing-the-bits-of-a-given-32-bits-unsigned-integer-n\">There is a song concert going to happen in the city. The price of each ticket is equal to the number obtained after reversing the bits of a given 32 bits unsigned integer <em><strong>\u2018n\u2019</strong></em>.</h4>\n\n<p><br></p>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019, denoting the number of test cases. \n\nThe first line of each test case contains a single unsigned integer \u2018N\u2019 whose bits are to be reversed.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print the number obtained after reversing the bits.\n\nPrint the output for each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n0\n12\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code> 0\n 805306368\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1 :</h5>\n\n<pre><code>For the first test case :\nSince the given number N = 0 is represented as 00000000000000000000000000000000 in its binary representation. So after reversing the bits, it will become 00000000000000000000000000000000 which is equal to 0 only. So the output is 0.     \n\n\n\nFor the second test case :\nSince the given number N = 12 is represented as 00000000000000000000000000001100 in its binary representation. So after reversing the bits, it will become 0110000000000000000000000000000, which is equal to 805306368 only. So the output is 805306368.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n6\n4\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code> 1610612736\n 536870912\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1 :</h5>\n\n<pre><code>For the first test case :\nSince the given number N = 6 is represented as 00000000000000000000000000000110 in its binary representation. So after reversing the bits, it will become 01100000000000000000000000000000, which is equal to 1610612736.\n\n\nFor the second test case :\nSince the given number N = 4 is represented as 00000000000000000000000000000100 in its binary representation. So after reversing the bits, it will become 0010000000000000000000000000000, which is equal to 536870912 only.\n</code></pre>\n\n<h5 id=\"expected-time-complexity\">Expected time complexity:</h5>\n\n<pre><code>The expected time complexity is O(log(n)).\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n0 &lt;= N &lt;= 2^32\n\nTime Limit: 1 sec\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 381,
            "dislikes": "NA",
            "rephrased": {
                "body": "A song concert is being held in the city. The price of each ticket is determined by reversing the bits of a given 32-bit unsigned integer 'n'. Your task is to calculate the ticket price for various input values of 'n'.",
                "constraints": [
                    "1 <= T <= 10",
                    "0 <= N <= 2^32",
                    "Time Limit: 1 sec",
                    "Expected Time Complexity: O(log(n))"
                ],
                "testcases": [
                    {
                        "input": "0",
                        "output": "0",
                        "explanation": "The binary representation of 0 is all zeros. Reversing it results in all zeros, which is still 0."
                    },
                    {
                        "input": "12",
                        "output": "805306368",
                        "explanation": "The binary representation of 12 is ...00001100. Reversing it gives ...01100000, which equals 805306368."
                    },
                    {
                        "input": "6",
                        "output": "1610612736",
                        "explanation": "The binary representation of 6 is ...00000110. Reversing it gives ...01100000000000000000000000000000, which equals 1610612736."
                    },
                    {
                        "input": "4",
                        "output": "536870912",
                        "explanation": "The binary representation of 4 is ...00000100. Reversing it gives ...00100000000000000000000000000000, which equals 536870912."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Swap the leftmost and the rightmost bits of the given number.</p>",
            "<p>Iterate over all the bits one by one.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "cpp",
                "full_func": "/*\r\n    Time Complexity: O(1)\r\n    Space Complexity: O(1)\r\n*/\r\n\r\nlong reverseBits(long n){\r\n    // 'ans' will store the value of reversed bits representation.\r\n    long ans = 0;\r\n\r\n    for(int i=0;i<32;i++){\r\n        // 'k' is the i'th bit.\r\n        int k = n & (1<<i);\r\n\r\n        // If the i'th bit from right is Set.\r\n        if (k>0){\r\n            // Increase the value of ans by value of i'th bit from left.  \r\n            ans += (long)1<<(31-i);\r\n        }\r\n    }  \r\n    return ans;\r\n}",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "java",
                "full_func": "\n/*\n\tTime Complexity: O(1)\n\tSpace Complexity: O(1)\n*/\npublic class Solution {\n\n\tpublic static long reverseBits(long n) {\n\t\t\n\t\t// 'ans' will store the value of reversed bits representation.\n\t\tlong ans = 0;\n\n\t\tfor (int i = 0; i < 32; i++) {\n\t\t\t// 'k' is the i'th bit.\n\t\t\tint k = (int) (n & (1 << i));\n\n\t\t\t// If the i'th bit from right is Set.\n\t\t\tif (k > 0) {\n\t\t\n\t\t\t\t// Increase the value of ans by value of i'th bit from left.\n\t\t\t\tans += (long) 1 << (31 - i);\n\t\t\t}\n\t\t}\n\t\treturn ans;\n\t}\n\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "python",
                "full_func": "\"\"\"\r\n    Time Complexity: O(1)\r\n    Space Complexity: O(1)\r\n\"\"\"\r\n\r\ndef reverseBits(n):\r\n    # 'ans' will store the value of reversed bits representation.\r\n    ans = 0\r\n\r\n    for i in range(32):\r\n        # 'k' is the i'th bit.\r\n        k = n & (1<<i)\r\n\r\n        # If the i'th bit from right is Set.\r\n        if k>0:\r\n            # Increase the value of ans by value of i'th bit from left.  \r\n            ans += (1<<(31-i))\r\n        \r\n    return ans\r\n",
                "lang_text": "py"
            }
        },
        "platform": "CODESTUDIO"
    }
}