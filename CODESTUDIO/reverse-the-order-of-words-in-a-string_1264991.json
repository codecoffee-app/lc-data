{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10804,
            "title": "Reverse the order of words in a string",
            "titleSlug": "reverse-the-order-of-words-in-a-string_1264991",
            "content": "<h4 id=\"you-are-given-a-string-str-containing-space-separated-words-a-word-is-a-sequence-of-non-space-characters-your-task-is-to-reverse-the-order-of-words-in-str\">You are given a string \u2018STR\u2019 containing space-separated words. A word is a sequence of non-space characters. Your task is to reverse the order of words in \u2018STR\u2019.</h4>\n\n<h4 id=\"note-try-to-do-it-in-place-without-allocating-extra-space\">Note: Try to do it in-place without allocating extra space.</h4>\n\n<h5 id=\"example\">Example:</h5>\n\n<pre><code>\u2018STR\u2019 = \u201cwhen in doubt use brute force\u201d\nThe reverse order of words in \u2018STR\u2019 is: \u201cforce brute use doubt in when\u201d.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>1. \u2018STR\u2019 does not contain any leading or trailing spaces.\n2. The words are always separated by a single whitespace character.\n</code></pre>\n\n<h5 id=\"input-format\">Input format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 which denotes the number of test cases. Then, the \u2018T\u2019 test cases follow.\n\nThe first line and only line of each test case contain a single string \u2018STR\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output format:</h5>\n\n<pre><code>For every test case, return a string with the reverse orders of words as \u2018STR\u2019.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= Length of \u2018STR\u2019 &lt;= 10^3\nThe string \u2018STR\u2019 contains only \u2018a-z\u2019 and whitespace characters.\n\nTime limit: 1 second\n</code></pre>\n<h4 id=\"sample-input-1\">Sample input 1:</h4>\n\n<pre><code>2\nwhen all else fails reboot\njava is to javascript what a car is to carpet\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample output 1:</h4>\n\n<pre><code>reboot fails else all when\ncarpet to is car a what javascript to is java\n</code></pre>\n\n<h4 id=\"explanation-of-sample-input-1\">Explanation of sample input 1:</h4>\n\n<pre><code>Test Case 1:\n\u2018STR\u2019 = \u201cwhen all else fails reboot\u201d\nThe reverse order of words in \u2018STR\u2019 is: \u201creboot fails else all when\u201d.\n\nTest Case 2:\n\u2018STR\u2019 = \u201cjava is to javascript what a car is to carpet\u201d\nThe reverse order of words in \u2018STR\u2019 is: \u201ccarpet to is car a what javascript to is java\u201d.\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample input 2:</h4>\n\n<pre><code>2\nno code has zero defects\nwhitespace is never white\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample output 2:</h4>\n\n<pre><code>defects zero has code no\nwhite never is whitespace\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 9,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string 'STR' consisting of space-separated words, reverse the order of the words in the string. A word is defined as a sequence of non-space characters.  The solution should aim for in-place reversal without significant extra space allocation.",
                "constraints": [
                    "1 <= T <= 100 (Number of test cases)",
                    "1 <= Length of \u2018STR\u2019 <= 10^3",
                    "The string \u2018STR\u2019 contains only lowercase letters ('a-z') and whitespace characters.",
                    "The words in 'STR' are separated by a single whitespace character.",
                    "The string 'STR' does not contain any leading or trailing spaces."
                ],
                "testcases": [
                    {
                        "input": "when all else fails reboot",
                        "output": "reboot fails else all when",
                        "explanation": "The input string is \"when all else fails reboot\". Reversing the order of the words yields \"reboot fails else all when\"."
                    },
                    {
                        "input": "java is to javascript what a car is to carpet",
                        "output": "carpet to is car a what javascript to is java",
                        "explanation": "The input string is \"java is to javascript what a car is to carpet\". Reversing the order of the words yields \"carpet to is car a what javascript to is java\"."
                    },
                    {
                        "input": "no code has zero defects",
                        "output": "defects zero has code no",
                        "explanation": "The input string is \"no code has zero defects\". Reversing the order of the words yields \"defects zero has code no\"."
                    },
                    {
                        "input": "whitespace is never white",
                        "output": "white never is whitespace",
                        "explanation": "The input string is \"whitespace is never white\". Reversing the order of the words yields \"white never is whitespace\"."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to convert \u2018STR\u2019 into an array of words</p>",
            "<p>Try to find the final answer from the reverse of \u2018STR\u2019.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}