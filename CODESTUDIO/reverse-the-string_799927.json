{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8051,
            "title": "Reverse the String",
            "titleSlug": "reverse-the-string_799927",
            "content": "<h4 id=\"you-are-given-a-string-str-the-string-contains-a-z-a-z-0-9-special-characters-you-have-to-find-the-reverse-of-the-string\">You are given a string &#39;STR&#39;. The string contains [a-z] [A-Z] [0-9] [special characters]. You have to find the reverse of the string.</h4>\n\n<h4 id=\"for-example\">For example:</h4>\n\n<pre><code> If the given string is: STR = &quot;abcde&quot;. You have to print the string &quot;edcba&quot;.\n</code></pre>\n\n<h5 id=\"follow-up\">follow up:</h5>\n\n<pre><code>Try to solve the problem in O(1) space complexity. \n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains a single integer &#39;T&#39;, representing the number of test cases or queries to be run. \n\nThen the &#39;T&#39; test cases follow.\n\nThe first and only line of each test case contains a string &#39;STR&#39;.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print a single line containing a single string denoting the reverse of the given string &#39;STR&#39;.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You are not required to print the expected output, it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 \u2264 T \u2264 10\n1 \u2264 |STR| \u2264 10 ^ 5 \n\nWhere |STR| is the length of the string STR.\n\nTime limit: 1 sec.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>3\nabcde\ncoding\nhello1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>edcba\ngnidoc\n1olleh\n</code></pre>\n\n<h5 id=\"explanation-of-the-sample-input-1\">Explanation of the Sample Input 1:</h5>\n\n<pre><code>For the first test case, STR = &quot;abcde&quot;. We need to reverse the string, that is the first element becomes the last element and the last element becomes the first element, the second element becomes the second last element and the second last element becomes the second element and so on. So we get, &quot;edcba&quot;.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>3\na\n1det@Z\n$1xYuP\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2</h5>\n\n<pre><code>a\nZ@ted1\nPuYx1$\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 122,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string 'STR' containing alphanumeric characters and special symbols, reverse the string and return the reversed string.",
                "constraints": [
                    "1 \u2264 T \u2264 10",
                    "1 \u2264 |STR| \u2264 10 ^ 5",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "str = \"abcde\"",
                        "output": "edcba",
                        "explanation": "Reversing the string \"abcde\" results in \"edcba\"."
                    },
                    {
                        "input": "str = \"coding\"",
                        "output": "gnidoc",
                        "explanation": "Reversing the string \"coding\" results in \"gnidoc\"."
                    },
                    {
                        "input": "str = \"hello1\"",
                        "output": "1olleh",
                        "explanation": "Reversing the string \"hello1\" results in \"1olleh\"."
                    },
                    {
                        "input": "str = \"a\"",
                        "output": "a",
                        "explanation": "Reversing the string \"a\" results in \"a\"."
                    },
                    {
                        "input": "str = \"1det@Z\"",
                        "output": "Z@ted1",
                        "explanation": "Reversing the string \"1det@Z\" results in \"Z@ted1\"."
                    },
                    {
                        "input": "str = \"$1xYuP\"",
                        "output": "PuYx1$",
                        "explanation": "Reversing the string \"$1xYuP\" results in \"PuYx1$\"."
                    },
                    {
                        "input": "str = \"\"",
                        "output": "",
                        "explanation": "Reversing an empty string results in an empty string."
                    },
                    {
                        "input": "str = \"madam\"",
                        "output": "madam",
                        "explanation": "Reversing the palindrome string \"madam\" results in \"madam\"."
                    },
                    {
                        "input": "str = \"racecar\"",
                        "output": "racecar",
                        "explanation": "Reversing the palindrome string \"racecar\" results in \"racecar\"."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Swap the first and last, second and second last characters and so on.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "cpp",
                "full_func": "/*\r\n\tTime Complexity: O(N)\r\n\tSpace Complexiy: O(1)\r\n\t\r\n\twhere 'N' is the length of the string.\r\n*/\r\n\r\nstring reverseString(string str)\r\n{\r\n\tint n = str.size();\r\n\r\n\tfor (int i = 0; i < n / 2; ++i)\r\n\t{\r\n\t\t// Swap characters.\r\n\t\tswap(str[i], str[n - i - 1]);\r\n\t}\r\n\t\r\n\treturn str;\r\n}",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "java",
                "full_func": "/*\r\n\tTime Complexity: O(N)\r\n\tSpace Complexity: O(1)\r\n\t\r\n\twhere 'N' is the length of the string.\r\n*/\r\n\r\npublic class Solution {\r\n\tpublic static String reverseString(String str) {\r\n\t\t\r\n\t\tint n = str.length();\r\n\t\t\r\n\t\t// Since strings are immutable in java, we are using a char array.\r\n\t\tchar [] charArray = str.toCharArray();\r\n\t\t\r\n\t\tfor (int i = 0; i < n / 2; ++i){\r\n\t\t\t// Swap characters.\r\n\t\t\tchar ch = charArray[i];\r\n\t\t\tcharArray[i] = charArray[n - i - 1];\r\n\t\t\tcharArray[n - i - 1] = ch;\r\n\t\t}\r\n\t\t\r\n\t\treturn String.valueOf(charArray);\r\n\t}\r\n\r\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "python",
                "full_func": "'''\r\n    Time Complexity: O(N)\r\n    Space Complexity: O(1)\r\n    \r\n    where 'N' is the length of the string. \r\n'''\r\n\r\nimport sys\r\n\r\ndef reverseString(string):\r\n\r\n    n = len(string)\r\n    \r\n    # Since strings are immutable in python, we are using a char list.\r\n    char = list(string)\r\n    \r\n    for i in range(len(char) // 2):\r\n        # Swap characters.\r\n        char[i], char[n - i - 1] = char[n - i - 1], char[i]\r\n        \r\n    return char\r\n\r\nt = int(sys.stdin.readline().strip())\r\n\r\nfor i in range(t):\r\n    \r\n    string = str(sys.stdin.readline().strip())\r\n    \r\n    for i in (reverseString(string)):\r\n        print(i, end = '')\r\n        \r\n    print()\r\n        \r\n\r\n",
                "lang_text": "py"
            }
        },
        "platform": "CODESTUDIO"
    }
}