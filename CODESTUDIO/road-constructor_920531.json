{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8926,
            "title": "Road Constructor ",
            "titleSlug": "road-constructor_920531",
            "content": "<h4 id=\"you-are-given-an-undirected-graph-with-n-nodes-and-m-edges-your-task-is-to-find-out-if-it-is-possible-to-turn-the-graph-into-a-directed-graph-such-that-all-the-vertices-have-positive-in-degree\">You are given an undirected graph with \u2018N\u2019 nodes and \u2018M\u2019 edges. Your task is to find out if it is possible to turn the graph into a directed graph such that all the vertices have positive in-degree.</h4>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>In-Degree of a vertex is the number of edges coming towards the node.\n</code></pre>\n\n<h5 id=\"for-example\">For example:</h5>\n\n<p><img src=\"https://ninjasfiles.s3.amazonaws.com/asset_0000000000000469_1625831368_UndirectedToDirected-Page-1.png\" alt=\"undirected\"></p>\n\n<pre><code>In the above graph, we can give direction to the first edge (0, 1), from vertex 0 to vertex 1 and the second edge (1, 2) from vertex 1 to vertex 2, and finally, the last edge (0, 2) from vertex 2 to vertex 0. So all nodes in-degree is 1. Hence the answer is \u201cYes\u201d.\n</code></pre>\n\n<p><img src=\"https://ninjasfiles.s3.amazonaws.com/asset_0000000000000468_1625831359_UndirectedToDirected-Page-2.png\" alt=\"undirected\"></p>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains a single integer \u2018T\u2019, denoting the number of test cases.\n\nThe first line of each input contains two space-separated integers, \u2018N\u2019 and \u2018M\u2019, denoting the number of vertices and the number of edges, respectively.\n\nThe following \u2018M\u2019 lines of input contain two space-separated integers, \u2018A\u2019 and \u2018B\u2019, denoting a bidirectional edge between vertices \u2018A\u2019 and \u2018B\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, If it is possible to make all vertices in-degree positive, then print \u201cYes\u201d. Otherwise, print \u201cNo\u201d.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 5\n2 &lt;= N &lt;= 10^5\nN - 1 &lt;= M &lt;= 10^5\n0 &lt;= A, B &lt; N\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n3 3\n0 1\n1 2\n2 0\n3 2\n0 1\n1 2\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>Yes\nNo\n</code></pre>\n\n<h5 id=\"explanation\">Explanation:</h5>\n\n<p><img src=\"https://ninjasfiles.s3.amazonaws.com/asset_0000000000000469_1625831368_UndirectedToDirected-Page-1.png\" alt=\"undirected\"></p>\n\n<pre><code>For the first test case, we can give direction to the first edge (0, 1), from vertex 0 to vertex 1, and the second edge (1, 2) from vertex 1 to vertex 2, and the last edge (0, 2) from vertex 2 to vertex 0. So all nodes in-degree is 1. Hence the answer is \u201cYes\u201d.\n</code></pre>\n\n<p><img src=\"https://ninjasfiles.s3.amazonaws.com/asset_0000000000000468_1625831359_UndirectedToDirected-Page-2.png\" alt=\"undirected\"></p>\n\n<pre><code>For the second test case, we can\u2019t make all the vertices in degree positive. Hence the answer is \u201cNo\u201d.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n4 3\n0 1\n2 1\n2 3\n4 4\n0 1\n1 2\n2 0\n2 1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code> No\n Yes\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -2,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an undirected graph with N nodes and M edges, determine if it's possible to direct the edges such that every vertex has a positive in-degree.",
                "constraints": [
                    "1 <= T <= 5",
                    "2 <= N <= 10^5",
                    "N - 1 <= M <= 10^5",
                    "0 <= A, B < N",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "3 3\n0 1\n1 2\n2 0",
                        "output": "Yes",
                        "explanation": "The graph can be directed such that 0 -> 1, 1 -> 2, and 2 -> 0.  This results in each node having an in-degree of 1."
                    },
                    {
                        "input": "3 2\n0 1\n1 2",
                        "output": "No",
                        "explanation": "It's impossible to direct the edges such that all vertices have a positive in-degree. Node 0 or node 2 will inevitably have an in-degree of 0."
                    },
                    {
                        "input": "4 3\n0 1\n2 1\n2 3",
                        "output": "No",
                        "explanation": "It is impossible to make all the vertices in degree positive."
                    },
                    {
                        "input": "4 4\n0 1\n1 2\n2 0\n2 1",
                        "output": "Yes",
                        "explanation": "The graph can be directed such that every node has an in-degree of at least one."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>At which condition all nodes have positive in-degree.</p>",
            "<p>Try applying breadth-first search.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Breadth-first Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Depth-first Search",
                "slug": "depth-first-search"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}