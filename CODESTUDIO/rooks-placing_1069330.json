{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9618,
            "title": "Rooks Placing",
            "titleSlug": "rooks-placing_1069330",
            "content": "<h4 id=\"you-are-given-an-n-n-chessboard-rows-and-columns-of-the-board-are-numbered-from-0-to-n-1-cell-r-c-lies-at-the-intersection-of-row-number-r-and-column-number-c\">You are given an n\u00d7n chessboard. Rows and columns of the board are numbered from 0 to \u2018n\u2019-1. Cell (r,c) lies at the intersection of row number &#39;r&#39; and column number \u2018c\u2019.</h4>\n\n<h4 id=\"rook-is-a-chess-piece-that-can-in-one-turn-move-any-number-of-cells-vertically-or-horizontally-there-are-m-rooks-m-n-placed-on-the-chessboard-in-such-a-way-that-no-pair-of-rooks-attack-each-other-i-e-there-are-no-pairs-of-rooks-that-share-a-common-row-or-a-column\">Rook is a chess piece that can in one turn move any number of cells vertically or horizontally. There are \u2018m\u2019 rooks (m&lt;=n) placed on the chessboard in such a way that no pair of rooks attack each other. I.e. there are no pairs of rooks that share a common row or a column.</h4>\n\n<h4 id=\"you-are-given-the-position-of-the-m-rooks-that-are-already-placed-on-the-chessboard-your-task-is-to-find-the-maximum-number-of-additional-rooks-with-their-positions-that-can-be-placed-on-the-given-chessboard-such-that-no-rook-attacks-some-other-rook-print-the-positions-cells-of-these-additional-rooks-in-lexicographical-order-if-there-are-multiple-ways-of-placing-the-maximum-number-of-additional-rooks-you-should-find-one-that-gives-the-lexicographically-smallest-sequence-of-cells-after-arranging-their-cells-in-lexicographical-order\">You are given the position of the \u2018m\u2019 rooks that are already placed on the chessboard. Your task is to find the maximum number of additional rooks with their positions that can be placed on the given chessboard such that no rook attacks some other rook. Print the positions (cells) of these additional rooks in lexicographical order.  If there are multiple ways of placing the maximum number of additional rooks, you should find one that gives the lexicographically smallest sequence of cells after arranging their cells in lexicographical order.</h4>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>In lexicographical order, cell (a, b) comes before cell (c, d), if either a &lt; c  or (a = c and b &lt; d).\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases. The description of  \u2018T\u2019 test cases follows.\n\nThe first line of each test case contains two space-separated integers \u2018n\u2019 and \u2018m\u2019 representing dimensions of the chessboard and the number of rooks that are already present in the chessboard respectively.\n\nThen \u2018m\u2019 line follows, each containing 2 space-separated integers \u2018r\u2019, \u2018c\u2019 representing that there is a rook at cell (r, c).\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print in one line an integer \u2018k\u2019 representing the maximum number of additional rooks that can be placed on the chessboard and then print \u2018k\u2019 lines each of which contains 2 space-separated integers \u2018r\u2019 and \u2018c\u2019 representing that a rook is placed at cell (r, c). You need to print these cells in lexicographical order.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 50\n1 &lt;= n &lt;= 10^4\n0 &lt;= m &lt;= n\n0 &lt;= r, c &lt; n\n\nWhere \u2018T\u2019 is the number of test cases and \u2018n\u2019 is the dimensions of the chessboard, \u2018m\u2019 is the number of rooks that are already present on the chessboard, and (r, c) represents the cell of the chessboard.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n4 2\n0 3\n1 1\n2 2\n0 0\n1 1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>2\n2 0\n3 2\n0\n</code></pre>\n\n<h5 id=\"explanation-of-the-sample-input1\">Explanation of the Sample Input1 :</h5>\n\n<pre><code>Test case 1 :\nThere is 4*4 chessboard with 2 rooks placed at cell (0, 3) and (1, 1).\nHere you can place at most two additional rooks. If you try to place more than two additional rooks then there definitely exist an attacking pair of rooks.\nThere are two possible ways to place these additional 2 rooks, The lexicographical order of cells of these possible ways are following-:\n1. (2, 0), (3, 2)\n2. (2, 2), (3, 0)\n(2, 0), (3, 2) is the lexicographically smallest of them. So it will be the answer.\n\nTest case 2 :\nYou cannot place any additional rooks here. No matter where you place the rook it will attack at least one other rook.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n1 0\n3 2\n0 1\n1 2\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>1\n0 0\n1\n2 0\n</code></pre>\n\n<h5 id=\"explanation-of-the-sample-input-2\">Explanation of the Sample Input 2 :</h5>\n\n<pre><code>Test case 1 :\nThere is only one cell in the chessboard, so you can place one rook at that cell.\n\nTest case 2 :\nYou can place one additional rook at cell (2, 0). If you try to place a rook at any other position then there definitely exist an attacking pair of rooks.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -8,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an n x n chessboard with rows and columns numbered from 0 to n-1. 'm' rooks (m <= n) are placed on the board such that no two rooks attack each other (i.e., no two rooks share the same row or column). Determine the maximum number of additional rooks that can be placed on the board without any rooks attacking each other. Print the positions (row, column) of these additional rooks in lexicographical order. If multiple solutions exist, choose the lexicographically smallest sequence of cells.",
                "constraints": [
                    "1 <= T <= 50",
                    "1 <= n <= 10^4",
                    "0 <= m <= n",
                    "0 <= r, c < n",
                    "T is the number of test cases",
                    "n is the dimensions of the chessboard",
                    "m is the number of rooks already present on the chessboard",
                    "(r, c) represents the cell of the chessboard",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "4 2\n0 3\n1 1",
                        "output": "2\n2 0\n3 2",
                        "explanation": "Given a 4x4 board with rooks at (0, 3) and (1, 1), the maximum number of additional rooks is 2.  The lexicographically smallest placement is at (2, 0) and (3, 2). Placing rooks at other positions would result in rooks attacking each other, or a lexicographically larger placement."
                    },
                    {
                        "input": "2 2\n0 0\n1 1",
                        "output": "0",
                        "explanation": "On a 2x2 board with rooks placed at (0,0) and (1,1), no additional rooks can be placed without resulting in an attack. Hence, the answer is 0."
                    },
                    {
                        "input": "1 0",
                        "output": "1\n0 0",
                        "explanation": "With a 1x1 chessboard and no initial rooks, one additional rook can be placed at (0, 0)."
                    },
                    {
                        "input": "3 2\n0 1\n1 2",
                        "output": "1\n2 0",
                        "explanation": "Given a 3x3 board with rooks placed at (0,1) and (1,2), the maximum number of additional rooks is 1. The lexicographically smallest placement is at (2, 0)."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>One by one try to place a rook at each empty cell.</p>",
            "<p>Can you check whether the row or column already has a rook without traversing the entire row or column?</p>",
            "<p>Can you find the maximum number of additional rooks that should be placed without checking for each cell separately?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Matrices (2D Arrays)",
                "slug": "matrices-(2d-arrays)"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}