{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10405,
            "title": "Rooms",
            "titleSlug": "rooms_1214959",
            "content": "<h4 id=\"you-are-given-some-information-about-the-rooms-of-a-military-camp-the-rooms-are-numbered-from-0-to-n-1-each-room-contains-keys-to-some-other-rooms-you-can-visit-a-room-only-if-you-have-a-key-to-that-room-your-task-is-to-determine-whether-each-room-can-be-visited-or-not\">You are given some information about the rooms of a military camp. The rooms are numbered from 0 to &#39;N-1&#39;.  Each room contains keys to some other rooms. You can visit a room only if you have a key to that room. Your task is to determine whether each room can be visited or not.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>1. Room 0 is the only room that is initially unlocked and doesn\u2019t require any key to enter.\n\n2. Any other room can be visited only if you have the key to that room.\n\n3. More than one room can have keys to the same room.\n\n4. You are allowed to visit rooms in any order.\n\n5. You can visit any room multiple times.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains an integer &#39;T&#39;, which denotes the total number of test cases or queries to be run. Then, the &#39;T&#39; test cases follow. \n\nThe first line of every test case contains an integer &#39;N&#39;, denoting the number of rooms. Then &#39;N&#39; lines follow.\n\nEach line consists of &#39;M+1&#39; space-separated integers. The first integer denotes the total number of keys present in this room. The next M integers denote the numbers of the corresponding rooms whose keys are present in this room.\n\nNote that the i-th line denotes information about the keys present in the i-th room.\n\nFor more clarity, please refer to the sample inputs.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, return \u201cTrue\u201d if it is possible to visit each and every room, otherwise return \u201cFalse\u201d if it\u2019s not possible.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= N &lt;= 5000\n1 &lt;= M &lt;= 50\n0 &lt;= keys[i] &lt; N\n\nTime Limit: 1sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1\n5\n2 1 2\n1 0\n2 1 0\n1 4\n1 3\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>False\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for sample input 1:</h5>\n\n<pre><code>In the given example, room 0 has keys to room 1 and room 2. So we can go to room 1 and room 2 using these keys. But none of these two rooms has the keys to room 3 and room 4, so we can\u2019t visit room 3 and room 4. Hence, the answer is False.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\n5\n2 1 2\n1 3\n2 1 0\n1 4\n1 2\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>True\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation for sample input 2:</h5>\n\n<pre><code>In the given example, room 0 has keys to room 1 and room 2. Room 1 has the key to room 3, and room 3 has the key to room 4. So we can visit each and every room. Hence, the answer is True.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -6,
            "dislikes": "NA",
            "rephrased": {
                "body": "You are given information about a military camp's rooms, numbered from 0 to N-1. Each room contains keys to other rooms. You can only enter a room if you possess its key. Determine if it's possible to visit every room in the camp, starting from room 0 which is initially unlocked.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= N <= 5000",
                    "1 <= M <= 50",
                    "0 <= keys[i] < N",
                    "Time Limit: 1sec"
                ],
                "testcases": [
                    {
                        "input": "5\n2 1 2\n1 0\n2 1 0\n1 4\n1 3",
                        "output": "False",
                        "explanation": "Room 0 has keys to rooms 1 and 2. While these rooms can be visited, neither possesses keys to rooms 3 and 4, preventing a complete exploration of all rooms."
                    },
                    {
                        "input": "5\n2 1 2\n1 3\n2 1 0\n1 4\n1 2",
                        "output": "True",
                        "explanation": "Room 0 provides keys to rooms 1 and 2.  Room 1 has a key to room 3, which in turn has a key to room 4. Thus, by following the chain of keys, all rooms become accessible."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Think of a Depth First Search solution.</p>",
            "<p>Think of a solution using breadth-first search.</p>",
            "<p><i>Use Stack for DFS and keep a count of the number of visited rooms.</i></p>"
        ],
        "relatedTopics": [
            {
                "name": "Depth-first Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-first Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}