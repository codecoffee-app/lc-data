{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 16415,
            "title": "Root The String",
            "titleSlug": "root-the-string_3146851",
            "content": "<h4 id=\"lets-say-a-string-t-to-be-the-xth-root-of-a-string-s-if-you-can-concatenate-a-string-t-a-total-of-x-times-and-get-the-string-s-as-a-result\">Let&#39;s say a string \u2018T\u2019 to be the \u2018Xth\u2019 root of a string \u2018S\u2019 if you can concatenate a string \u2018T\u2019 a total of \u2018X\u2019 times and get the string \u2018S\u2019 as a result.</h4>\n\n<h4 id=\"you-have-a-string-s-of-length-n-consisting-only-of-lowercase-english-alphabets-you-have-to-find-the-maximum-value-of-x-such-that-the-xth-root-of-the-string-exists\">You have a string \u2018S\u2019 of length \u2018N\u2019 consisting only of lowercase English alphabets. You have to find the maximum value of \u2018X\u2019, such that the \u2018Xth\u2019 root of the string exists.</h4>\n\n<h4 id=\"for-example-if-s-abcabc-then-for-x-1-the-string-t-will-be-abcabc-and-for-x-2-the-string-t-will-be-abc\">For example: If S = \u201cabcabc\u201d, then for \u2018X\u2019 = 1, the string \u2018T\u2019 will be \u201cabcabc\u201d, and for \u2018X\u2019 = 2, the string \u2018T\u2019 will be \u201cabc\u201d.</h4>\n\n<h5 id=\"input-format\">Input Format-</h5>\n\n<pre><code>First-line contains \u2018T\u2019, denoting the number of Test cases.\nFor each Test case:\nThe first line contains an integer, \u2018N\u2019, denoting the length of the input string S.\nThe following line contains the string \u2018S\u2019 of length \u2018N\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format-</h5>\n\n<pre><code>For each test case, you have to print an integer denoting the minimum number of operations required to form the given string \u2018S\u2019.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don\u2019t need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints -</h5>\n\n<pre><code>1 &lt;= \u2018T\u2019 &lt;= 10\n1 &lt;= \u2018N\u2019 &lt;= 10^5 \nNote- Sum of \u2018N\u2019 over all test cases does not exceed 10^5.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input-1</h5>\n\n<pre><code>2\n3\naba\n4\naaaa\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output-1</h5>\n\n<pre><code>1\n4\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1:</h5>\n\n<pre><code>For test case 1:\n    The given string does not have any root greater than 1. Hence the answer is 1.\nFor test case 2:\n    We can take \u2018N\u2019 = 4 and get \u2018T\u2019 = \u2018a\u2019. There is no other value of \u2018N\u2019, which is greater than 4. Hence the answer is 4.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input -2</h5>\n\n<pre><code>2\n6\nabcabc\n2\nzz\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output -2</h5>\n\n<pre><code>2\n2\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 8,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string \u2018S\u2019 of length \u2018N\u2019 consisting only of lowercase English alphabets, determine the maximum value of \u2018X\u2019 such that the \u2018Xth\u2019 root of the string exists. The \u2018Xth\u2019 root of a string \u2018S\u2019 is defined as a string \u2018T\u2019 which, when concatenated \u2018X\u2019 times, results in \u2018S\u2019.",
                "constraints": [
                    "1 <= \u2018T\u2019 <= 10",
                    "1 <= \u2018N\u2019 <= 10^5",
                    "Sum of \u2018N\u2019 over all test cases does not exceed 10^5"
                ],
                "testcases": [
                    {
                        "input": "S = \"aba\"",
                        "output": "1",
                        "explanation": "The string \"aba\" does not have any root with a repetition factor greater than 1. Hence, the maximum repetition factor (X) is 1."
                    },
                    {
                        "input": "S = \"aaaa\"",
                        "output": "4",
                        "explanation": "The string \"aaaa\" can be formed by repeating \"a\" four times (X=4). It can also be formed by repeating \"aa\" twice (X=2), or the whole string once (X=1). The maximum value of X is 4."
                    },
                    {
                        "input": "S = \"abcabc\"",
                        "output": "2",
                        "explanation": "The string \"abcabc\" can be formed by repeating \"abc\" twice (X=2).  It can also be formed by the whole string once (X=1). The maximum value of X is 2."
                    },
                    {
                        "input": "S = \"zz\"",
                        "output": "2",
                        "explanation": "The string \"zz\" can be formed by repeating \"z\" twice (X=2).  It can also be formed by the whole string once (X=1). The maximum value of X is 2."
                    },
                    {
                        "input": "S = \"ababab\"",
                        "output": "3",
                        "explanation": "The string \"ababab\" can be formed by repeating \"ab\" three times (X=3).  It can also be formed by repeating \"ababab\" once (X=1). The maximum value of X is 3."
                    },
                    {
                        "input": "S = \"abcd\"",
                        "output": "1",
                        "explanation": "The string \"abcd\" can only be formed by repeating itself once (X=1)."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Which numbers are the candidate for the answer?</p>",
            "<p>How can we check if the prefix of length \u2018i\u2019 can be the answer or not in O(1)?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}