{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 14204,
            "title": "Root to Leaf Path",
            "titleSlug": "root-to-leaf-path_2042001",
            "content": "<h4 id=\"ninja-is-having-a-good-time-in-solving-new-questions-of-binary-trees-from-code-studio-he-is-now-encountered-with-a-question-having-statement-as-you-are-given-a-binary-tree-consisting-of-n-nodes-numbered-from-1-to-n-your-task-is-to-print-all-the-root-to-leaf-paths-of-the-binary-tree\">Ninja is having a good time in solving new questions of Binary Trees from Code Studio. He is now encountered with a question having statement as &quot;You are given a binary tree consisting of &#39;N&#39; nodes numbered from 1 to &#39;N&#39;. Your task is to print all the root to leaf paths of the binary tree&quot;.</h4>\n\n<h4 id=\"ninja-is-stuck-into-this-problem-and-could-not-able-to-find-the-logic-help-ninja-in-solving-the-problem\">Ninja is stuck into this problem and could not able to find the logic. Help Ninja in solving the problem.</h4>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>A leaf of a Binary Tree is the node which does not have a left child and a right child.\n</code></pre>\n\n<h5 id=\"for-example\">For Example :</h5>\n\n<pre><code>Given a binary tree :\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/screenshot-from-2020-11-06-15-04-33-5639.png\" alt=\"alt txt\"></p>\n\n<pre><code>All the root to leaf paths are :\n1 2 4\n1 2 5 \n1 3\n</code></pre>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>1. Two nodes may have the same value associated with it.\n2. The root node will be fixed and will be provided in the function.\n3. Note that the nodes in a path will appear in a fixed order. For example, 1 2 3 is not the same as 2 1 3.\n4. Each path should be returned as a string consisting of nodes in order and separated by a space.\n5. The path length may be as small as \u20181\u2019.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of the input contains a single integer &#39;T&#39;, representing the number of test cases.\n\nThe first line of each test case contains an integer &#39;N&#39;, which denotes the number of nodes in the tree.\n\nThe second line of each test case will contain the values of the nodes of the tree in the level order form ( -1 for &#39;NULL&#39; node) Refer to the example for further clarification.\n</code></pre>\n\n<h5 id=\"example\">Example :</h5>\n\n<pre><code>Consider the binary tree\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/screenshot-from-2020-10-09-12-55-45-5134.png\" alt=\"altImage\"></p>\n\n<pre><code>The input of the tree depicted in the image above will be like : \n\n1\n2 3\n4 -1 5 6\n-1 7 -1 -1 -1 -1\n-1 -1\n\nExplanation :\nLevel 1 :\nThe root node of the tree is 1\n\nLevel 2 :\nLeft child of 1 = 2\nRight child of 1 = 3\n\nLevel 3 :\nLeft child of 2 = 4\nRight child of 2 = null (-1)\nLeft child of 3 = 5\nRight child of 3 = 6\n\nLevel 4 :\nLeft child of 4 = null (-1)\nRight child of 4 = 7\nLeft child of 5 = null (-1)\nRight child of 5 = null (-1)\nLeft child of 6 = null (-1)\nRight child of 6 = null (-1)\n\nLevel 5 :\nLeft child of 7 = null (-1)\nRight child of 7 = null (-1)\n\nThe first not-null node (of the previous level) is treated as the parent of the first two nodes of the current level. The second not-null node (of the previous level) is treated as the parent node for the next two nodes of the current level and so on.\n\nThe input ends when all nodes at the last level are null (-1).\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print all the root to leaf path nodes.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10^2\n1 &lt;= N &lt;= 3*10^3\n\nTime Limit : 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n9\n3 5 1 6 2 0 8 -1 -1 7 4 -1 -1 -1 -1 -1 -1 -1 -1\n5\n1 2 3 4 5 -1 -1 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>3 5 6\n3 1 0\n3 1 8\n3 5 2 7\n3 5 2 4\n1 3\n1 2 4\n1 2 5\n</code></pre>\n\n<h4 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1:</h4>\n\n<pre><code>Test Case 1:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/tree1-11798.png\"></p>\n\n<pre><code>Here root is 3 and 6, 7, 4, 0, 8 are leaf nodes\nPath from 3 to 6 is 3 5 6\nPath from 3 to 7 is 3 5 2 7\nPath from 3 to 4 is 3 5 2 4\nPath from 3 to 0 is 3 1 0\nPath from 3 to 8 is 3 1 8\n\nTest Case 2:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/screenshot-12-11823.png\"></p>\n\n<pre><code>Here root is 1 and 4, 5 are leaf nodes\nPath from 1 to 4 is 1 2 4\nPath from 1 to 5 is 1 2 5    \n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>1\n7\n1 2 3 4 -1 5 6 -1 7 -1 -1 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>1 3 5\n1 3 6\n1 2 4 7\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -5,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a binary tree consisting of 'N' nodes numbered from 1 to 'N', your task is to print all the root-to-leaf paths of the binary tree. A leaf node is defined as a node that has no left or right child. Each path should be returned as a string consisting of nodes in order, separated by a space. The root node will be provided as input.",
                "constraints": [
                    "1 <= T <= 10^2",
                    "1 <= N <= 3*10^3",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "9\n3 5 1 6 2 0 8 -1 -1 7 4 -1 -1 -1 -1 -1 -1 -1 -1",
                        "output": "3 5 6\n3 1 0\n3 1 8\n3 5 2 7\n3 5 2 4",
                        "explanation": "The root is 3. The leaf nodes are 6, 0, 8, 7 and 4. The corresponding paths are:\n- 3 -> 5 -> 6\n- 3 -> 1 -> 0\n- 3 -> 1 -> 8\n- 3 -> 5 -> 2 -> 7\n- 3 -> 5 -> 2 -> 4"
                    },
                    {
                        "input": "5\n1 2 3 4 5 -1 -1 -1 -1 -1 -1",
                        "output": "1 2 4\n1 2 5",
                        "explanation": "The root is 1. The leaf nodes are 4 and 5. The corresponding paths are:\n- 1 -> 2 -> 4\n- 1 -> 2 -> 5"
                    },
                    {
                        "input": "7\n1 2 3 4 -1 5 6 -1 7 -1 -1 -1 -1 -1 -1",
                        "output": "1 2 4 7\n1 3 5\n1 3 6",
                        "explanation": "The root is 1. The leaf nodes are 7, 5 and 6. The corresponding paths are:\n- 1 -> 2 -> 4 -> 7\n- 1 -> 3 -> 5\n- 1 -> 3 -> 6"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Depth-first Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Trees",
                "slug": "binary-trees"
            },
            {
                "name": "Breadth-first Search",
                "slug": "breadth-first-search"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}