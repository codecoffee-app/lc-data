{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10503,
            "title": "Rotate array",
            "titleSlug": "rotate-array_1230543",
            "content": "<h4 id=\"given-an-array-arr-with-n-elements-the-task-is-to-rotate-the-array-to-the-left-by-k-steps-where-k-is-non-negative\">Given an array <em><strong>&#39;arr&#39;</strong></em> with <em><strong>&#39;n&#39;</strong></em>  elements, the task is to rotate the array to the left by <em><strong>&#39;k&#39;</strong></em> steps, where &#39;k&#39; is non-negative.</h4>\n\n<p><br></p>\n\n<h5 id=\"example\">Example:</h5>\n\n<pre><code>&#39;arr &#39;= [1,2,3,4,5]\n&#39;k&#39; = 1  rotated array = [2,3,4,5,1]\n&#39;k&#39; = 2  rotated array = [3,4,5,1,2]\n&#39;k&#39; = 3  rotated array = [4,5,1,2,3] and so on.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains an integer &#39;n&#39; representing the size of the array.\n\nThe second line contains &#39;n&#39; space-separated integers representing the elements of the array.\n\nThe last line contains an integer &#39;k&#39; representing the number of times the array has to be rotated in the left direction. \n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>The output contains &#39;n&#39; space-separated integers representing the Rotated array elements.\n</code></pre>\n\n<h5 id=\"note\">Note:-</h5>\n\n<pre><code>You don\u2019t need to print anything. Just implement the given function.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>8\n7 5 2 11 2 43 1 1\n2\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>2 11 2 43 1 1 7 5\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1:</h5>\n\n<pre><code>Rotate 1 steps to the left: 5 2 11 2 43 1 1 7\nRotate 2 steps to the left: 2 11 2 43 1 1 7 5\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>4\n5 6 7 8\n3\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>8 5 6 7\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-2\">Explanation of Sample Input 2:</h5>\n\n<pre><code>Rotate 1 steps to the left: 6 7 8 5\nRotate 2 steps to the left: 7 8 5 6\nRotate 2 steps to the left: 8 5 6 7\n</code></pre>\n\n<h5 id=\"expected-time-complexity\">Expected Time Complexity:</h5>\n\n<pre><code>O(n), where \u2018n\u2019 is the size of the array \u2018arr\u2019 and \u2018k\u2019 is the number of rotations.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= &#39;n&#39; &lt;= 10^3\n1 &lt;= &#39;arr&#39;[i] &lt;= 10^9\n1 &lt;= &#39;k&#39; &lt; &#39;n&#39;\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"hints\">Hints:</h5>\n\n<pre><code>1. For an index \u2018i\u2019, find where it lands after k swaps.\n2. When performing rotation once observe how the positions of all elements change.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 858,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array 'arr' of 'n' elements, rotate the array to the left by 'k' steps. 'k' is a non-negative integer.",
                "constraints": [
                    "1 <= 'n' <= 10^3",
                    "1 <= 'arr'[i] <= 10^9",
                    "1 <= 'k' < 'n'"
                ],
                "testcases": [
                    {
                        "input": "8\n7 5 2 11 2 43 1 1\n2",
                        "output": "2 11 2 43 1 1 7 5",
                        "explanation": "The array [7, 5, 2, 11, 2, 43, 1, 1] rotated left by 2 steps results in [2, 11, 2, 43, 1, 1, 7, 5].  Rotating once yields [5, 2, 11, 2, 43, 1, 1, 7], and rotating a second time yields [2, 11, 2, 43, 1, 1, 7, 5]."
                    },
                    {
                        "input": "4\n5 6 7 8\n3",
                        "output": "8 5 6 7",
                        "explanation": "The array [5, 6, 7, 8] rotated left by 3 steps results in [8, 5, 6, 7]. Rotating once yields [6, 7, 8, 5], rotating twice yields [7, 8, 5, 6], and rotating a third time yields [8, 5, 6, 7]."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": [
            {
                "lang": "cpp",
                "full_func": "/*\r\n    Time complexity: O(n)\r\n    Space complexity: O(n)\r\n    where 'n' is the size of array.\r\n*/\r\n\r\nvector<int> rotateArray(vector<int> &arr, int k) {\r\n\r\n    int n = arr.size();\r\n\r\n    // Create a 'rotatedArr' of size 'n'.\r\n    vector<int> rotatedArr(n);\r\n\r\n    // Now store ith value (0 <= i <= n-1) of 'arr' at ((i - k + n)%n)th position in 'rotatedArr'.\r\n    for (int i = 0; i < n; i++) {\r\n        rotatedArr[(i - k + n)%n] = arr[i];\r\n    }\r\n    // Return the rotatedArr.\r\n    return rotatedArr;\r\n}",
                "lang_text": "cpp"
            },
            {
                "lang": "python",
                "full_func": "'''\r\n    Time complexity: O(n)\r\n    Space complexity: O(n)\r\n    where 'n' is the size of array.\r\n'''\r\n\r\ndef rotateArray(arr: list, k: int) -> list:\r\n    \r\n    n = len(arr)\r\n\r\n    # Create a 'rotatedArr' of size 'n'.\r\n    rotatedArr = [0] * n\r\n\r\n    # Now store ith value (0 <= i <= n-1) of 'arr' at ((i - k + n)%n)th position in 'rotatedArr'.\r\n    for i in range(n):\r\n        rotatedArr[(i - k + n)%n] = arr[i]\r\n    \r\n    # Return the rotatedArr.\r\n    return rotatedArr\r\n        ",
                "lang_text": "python"
            },
            {
                "lang": "java",
                "full_func": "/*\r\n    Time Complexity: O(n)\r\n    Space Complexity: O(n)\r\n    where n is the size of the input array.\r\n*/\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class Solution \r\n{\r\n    public static ArrayList<Integer> rotateArray(ArrayList<Integer> arr, int k) \r\n    {\r\n        int n = arr.size();\r\n        \r\n        // Create a 'rotatedArr' of size 'n'.\r\n        ArrayList<Integer> rotatedArr = new ArrayList<>(arr);\r\n        \r\n        // Now store ith value (0 <= i <= n-1) of 'arr' at ((i - k + n)%n)th position in 'rotatedArr'.\r\n        for (int i = 0; i < n; i++) {\r\n            rotatedArr.set((i - k + n)%n, arr.get(i));\r\n        }\r\n        \r\n        // Return the rotatedArr.\r\n        return rotatedArr;\r\n    }\r\n}",
                "lang_text": "java"
            }
        ],
        "platform": "CODESTUDIO"
    }
}