{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10025,
            "title": "Rotate DLL",
            "titleSlug": "rotate-dll_1115782",
            "content": "<h4 id=\"you-are-given-a-doubly-linked-list-with-n-nodes-rotate-the-linked-list-counter-clockwise-by-k-nodes-k-is-a-positive-integer-and-is-smaller-than-the-number-of-nodes-in-the-linked-list-that-is-n\">You are given a doubly-linked list with &#39;N&#39; nodes, rotate the linked list counter-clockwise by &#39;K&#39; nodes. &#39;K&#39; is a positive integer and is smaller than the number of nodes in the linked list, that is &#39;N&#39;.</h4>\n\n<h4 id=\"a-doubly-linked-list-dll-contains-an-extra-pointer-called-the-previous-pointer-together-with-the-next-pointer-and-data-which-are-there-in-the-singly-linked-list-such-that-both-forward-and-backward-navigation-is-possible\">A doubly linked List (DLL) contains an extra pointer, called the previous pointer, together with the next pointer and data which are there in the singly linked list such that both forward and backward navigation is possible.</h4>\n\n<h5 id=\"for-example\">For example</h5>\n\n<pre><code>The given linked list is - \n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/image1-7816.png\" alt=\"\"></p>\n\n<pre><code>If K = 3, then the list after rotating it by K nodes is:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/image2-7817.png\" alt=\"\"></p>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>1. The value of any node in the linked list will not be equal to -1.\n</code></pre>\n\n<h5 id=\"input-format\">Input format :</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases.\n\nThe first line of each test case contains &#39;N&#39; space-separated integers representing the value of each node. -1 at the end denotes NULL pointer.\nThe second line of each test case contains a single positive integer &#39;K&#39;.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case, in a separate line, print the final rotated linked list. \n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You don\u2019t have to print anything; it has already been taken care of. Just implement the given function. \n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= N &lt;= 3000\n1 &lt;= K &lt; N\n-10 ^ 7 &lt;= data &lt;= 10 ^ 7\n\n where \u2018T\u2019 is the total number of test cases, &#39;N&#39; is the total number of nodes in the linked list and \u2018data\u2019 is the value of any node of the linked list.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n4 3 9 1 7 8 -1\n4\n1 2 3 4 5 -1\n2\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>7 8 4 3 9 1 \n3 4 5 1 2\n</code></pre>\n\n<h5 id=\"explanation-of-the-sample-input-1\">Explanation of The Sample Input 1:</h5>\n\n<pre><code>For the first test case:\nThe given linked list is :\n4 &lt;-&gt; 3 &lt;-&gt;  9 &lt;-&gt;  1 &lt;-&gt; 7 &lt;-&gt; 8 &lt;-&gt; NULL\n\nAnd K = 4 therefore we have to rotate the linked list by 4 nodes. So after the rotation, list will become  \n7 &lt;-&gt; 8 &lt;-&gt;  4 &lt;-&gt; 3 &lt;-&gt; 9 &lt;-&gt; 1 &lt;-&gt; NULL\n\nFor the second test case:\nThe given linked list is \n1 &lt;-&gt; 2 &lt;-&gt;  3 &lt;-&gt;  4 &lt;-&gt; 5  &lt;-&gt; NULL                                                          \nAnd K = 2 therefore we have to rotate the linked list by 2 nodes. So after the rotation, list will become  \n3 &lt;-&gt; 4 &lt;-&gt;  5 &lt;-&gt; 1 &lt;-&gt; 2 &lt;-&gt; NULL\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n6 2 4 2 1 4 -1\n2\n12 33 55 11 22 -1\n3\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>4 2 1 4 6 2\n11 22 12 33 55\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 10,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a doubly linked list and an integer 'k', rotate the list counter-clockwise by 'k' nodes. The value of 'k' is always a positive integer and is strictly less than the number of nodes in the list.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= N <= 3000",
                    "1 <= K < N",
                    "-10 ^ 7 <= data <= 10 ^ 7"
                ],
                "testcases": [
                    {
                        "input": "n = 6, nums = [4, 3, 9, 1, 7, 8], k = 4",
                        "output": "7 <-> 8 <-> 4 <-> 3 <-> 9 <-> 1",
                        "explanation": "The given linked list is 4 <-> 3 <-> 9 <-> 1 <-> 7 <-> 8 <-> NULL. Rotating it by 4 nodes results in 7 <-> 8 <-> 4 <-> 3 <-> 9 <-> 1 <-> NULL."
                    },
                    {
                        "input": "n = 5, nums = [1, 2, 3, 4, 5], k = 2",
                        "output": "3 <-> 4 <-> 5 <-> 1 <-> 2",
                        "explanation": "The given linked list is 1 <-> 2 <-> 3 <-> 4 <-> 5 <-> NULL. Rotating it by 2 nodes results in 3 <-> 4 <-> 5 <-> 1 <-> 2 <-> NULL."
                    },
                    {
                        "input": "n = 6, nums = [6, 2, 4, 2, 1, 4], k = 2",
                        "output": "4 <-> 2 <-> 1 <-> 4 <-> 6 <-> 2",
                        "explanation": "The given linked list is 6 <-> 2 <-> 4 <-> 2 <-> 1 <-> 4 <-> NULL. Rotating it by 2 nodes results in 4 <-> 2 <-> 1 <-> 4 <-> 6 <-> 2 <-> NULL."
                    },
                    {
                        "input": "n = 5, nums = [12, 33, 55, 11, 22], k = 3",
                        "output": "11 <-> 22 <-> 12 <-> 33 <-> 55",
                        "explanation": "The given linked list is 12 <-> 33 <-> 55 <-> 11 <-> 22 <-> NULL. Rotating it by 3 nodes results in 11 <-> 22 <-> 12 <-> 33 <-> 55 <-> NULL."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you use a new list to rotate?</p>",
            "<p>Can you solve it without using extra space? Try to think about how you can arrange pointers.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}