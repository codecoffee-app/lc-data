{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10758,
            "title": "Rotate Function",
            "titleSlug": "rotate-function_1264290",
            "content": "<h4 id=\"given-an-array-of-integers-arr-let-ck-be-defined-as-an-array-obtained-after-cyclically-shifting-k-elements-towards-the-right\">Given an array of integers \u2018ARR\u2019. Let Ck be defined as an array obtained after cyclically shifting &#39;K&#39; elements towards the right.</h4>\n\n<h4 id=\"the-power-of-an-array-is-defined-as-follows\">The power of an array is defined as follows.</h4>\n\n<h4 id=\"power-k-0-ck-0-1-ck-1-n-1-ck-n-1\">Power(k) = 0 * Ck[0] + 1 * Ck[1] + ... + (n - 1) * Ck[n - 1].</h4>\n\n<h4 id=\"you-have-to-find-the-maximum-value-among-power-0-power-1-power-2-power-n-1\">You have to find the maximum value among Power(0), Power(1), Power(2), \u2026\u2026., Power(n - 1).</h4>\n\n<h5 id=\"input-format\">Input Format</h5>\n\n<pre><code>The first line of input contains an integer &#39;T&#39; representing the number of test cases.\n\nThe first line of each test case contains one integer \u2018N\u2019 denoting the number of elements in the array.\n\nThe second line of each test case contains &#39;N&#39; space-separated integers denoting the elements of the array &#39;ARR&#39;.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print a single line containing a single integer denoting the maximum power that can be obtained.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 50\n1 &lt;= N &lt;= 10 ^ 4\n0 &lt;= ARR[i] &lt;= 10 ^ 3\n\nWhere \u2018T\u2019 is the number of test cases, \u2018N\u2019  is the size of the given array, and \u2018ARR[i]\u2019 denotes the ith element of the array.\n\nTime limit: 1 sec.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n4 \n4 3 2 6\n2\n9 1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>26\n9\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1:</h5>\n\n<pre><code>For the first test case, \nPower(0) = (0 * 4) + (1 * 3) + (2 * 2) + (3 * 6) = 0 + 3 + 4 + 18 = 25 \nPower(1) = (0 * 6) + (1 * 4) + (2 * 3) + (3 * 2) = 0 + 4 + 6 + 6 = 16 \nPower(2) = (0 * 2) + (1 * 6) + (2 * 4) + (3 * 3) = 0 + 6 + 8 + 9 = 23 \nPower(3) = (0 * 3) + (1 * 2) + (2 * 6) + (3 * 4) = 0 + 2 + 12 + 12 = 26\nSo, the maximum power is 26.\n\nFor the second test case, \nPower(0) = (0 * 9) + (1 * 1) = 1\nPower(1) = (0 * 1) + (1 * 9) = 9\nSo, the maximum power is 9.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n7\n9 2 3 5 0 7 2\n1\n5\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>105\n0\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 5,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of integers, determine the maximum power that can be obtained by cyclically rotating the array. The power of a rotated array is calculated as the sum of each element multiplied by its index. Find the maximum power among all possible rotations.",
                "constraints": [
                    "1 <= T <= 50",
                    "1 <= N <= 10 ^ 4",
                    "0 <= ARR[i] <= 10 ^ 3"
                ],
                "testcases": [
                    {
                        "input": "n = 4, arr = [4, 3, 2, 6]",
                        "output": "26",
                        "explanation": "Power(0) = (0 * 4) + (1 * 3) + (2 * 2) + (3 * 6) = 25\nPower(1) = (0 * 6) + (1 * 4) + (2 * 3) + (3 * 2) = 16\nPower(2) = (0 * 2) + (1 * 6) + (2 * 4) + (3 * 3) = 23\nPower(3) = (0 * 3) + (1 * 2) + (2 * 6) + (3 * 4) = 26\nMaximum power is 26."
                    },
                    {
                        "input": "n = 2, arr = [9, 1]",
                        "output": "9",
                        "explanation": "Power(0) = (0 * 9) + (1 * 1) = 1\nPower(1) = (0 * 1) + (1 * 9) = 9\nMaximum power is 9."
                    },
                    {
                        "input": "n = 7, arr = [9, 2, 3, 5, 0, 7, 2]",
                        "output": "105",
                        "explanation": "The maximum power achievable after cyclic rotations is 105."
                    },
                    {
                        "input": "n = 1, arr = [5]",
                        "output": "0",
                        "explanation": "With only one element, the power will always be 0."
                    },
                    {
                        "input": "n = 5, arr = [1, 2, 3, 4, 5]",
                        "output": "40",
                        "explanation": "Power(0) = (0 * 1) + (1 * 2) + (2 * 3) + (3 * 4) + (4 * 5) = 0 + 2 + 6 + 12 + 20 = 40.\nOther rotations will result in smaller power values."
                    },
                    {
                        "input": "n = 3, arr = [1000, 0, 0]",
                        "output": "0",
                        "explanation": "Power(0) = (0 * 1000) + (1 * 0) + (2 * 0) = 0.\nPower(1) = (0 * 0) + (1 * 1000) + (2 * 0) = 1000.\nPower(2) = (0 * 0) + (1 * 0) + (2 * 1000) = 0. \nIncorrect previous answer.The maximum power is 1000"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to calculate the power of the array for each cyclic rotation from 1 to N?</p>",
            "<p>Can you calculate Power(k) using previous values of Power()?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}