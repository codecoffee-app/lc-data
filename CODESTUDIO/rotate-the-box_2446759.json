{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 15397,
            "title": "Rotate the Box",
            "titleSlug": "rotate-the-box_2446759",
            "content": "<h4 id=\"you-are-given-a-box-of-height-n-and-width-m-each-cell-of-the-box-may-contain\">You are given a box of height \u2018N\u2019 and width \u2018M\u2019. Each cell of the box may contain:</h4>\n\n<pre><code>1) A fixed obstacle denoted by \u2018 * \u2019\n2) A stone denotes by \u2018 # \u2019\n3) Empty space denoted by \u2018 . \u2019\n</code></pre>\n\n<h4 id=\"initially-the-box-is-placed-on-the-ground-and-due-to-gravity-all-the-stones-lie-either-on-the-lowest-cells-in-their-column-or-a-stone-may-be-supported-by-another-stone-or-by-the-fixed-obstacle-beneath-it\">Initially the box is placed on the ground and due to gravity all the stones lie either on the lowest cells in their column, or a stone may be supported by another stone or by the fixed obstacle beneath it.</h4>\n\n<h4 id=\"you-now-rotate-the-box-90-degrees-clockwise-so-its-height-becomes-m-and-its-width-becomes-n-re-aligning-all-of-the-stones-but-as-stated-previously-the-obstacles-are-fixed-and-won-t-change-their-relative-positions-you-have-to-find-the-new-alignment-of-the-box-after-the-rotation\">You now rotate the box 90 degrees clockwise, so its height becomes \u2018M\u2019 and its width becomes \u2018N\u2019, re-aligning all of the stones. But as stated previously, the obstacles are fixed and won\u2019t change their relative positions. You have to find the new alignment of the box after the rotation.</h4>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You may consider the stones to be heavy and rotational force has no effect on them. That is: the stones do not re-align themselves during the rotation. \n</code></pre>\n\n<h5 id=\"for-example\">For Example :</h5>\n\n<pre><code>If N = 1 and M = 6 and box is:\n\n\u2018#\u2019 , \u2018.\u2019 , \u2018.\u2019 , \u2018*\u2019 , \u2018#\u2019 , \u2018.\u2019 \n\nThe box after rotation becomes:\n \u2018.\u2019\n \u2018.\u2019  \n \u2018#\u2019\n \u2018*\u2019\n \u2018.\u2019 \n \u2018#\u2019 \n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 denoting the number of test cases, then each test case follows:\n\nThe first line of each test case contains two integers \u2018N\u2019 and \u2018M\u2019 denoting the dimensions of the box initially.\n\nThe next \u2018N\u2019 lines each contain \u2018M\u2019 characters denoting the cell of the box.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print the box after re-aligning, the new box is of dimensions M*N.\n\nOutput for each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You are not required to print anything; it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 \u2264 T \u2264 10      \n1 \u2264 N, M \u2264 250\nBox[i][j] = { \u2018 * \u2019 , \u2018 # \u2018 , \u2018 . \u2018 }\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n1 6\n# . . * # .\n2 3\n# . .\n# # .\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>.\n.\n#\n*\n.\n#\n. .\n# .\n# #\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1 :</h5>\n\n<pre><code>For test case 1 : \nAfter rotation of the box by 90 degrees, the 1*6 box will now be 6*1, and the stone at (0, 0) will fall down to (2, 0) to now be supported by the fixed obstacle beneath it at (3, 0). And the stone at (4, 0) will fall down to (5, 0) to now be supported by the ground.\n\n\nFor test case 2 : \nAfter rotation of the box by 90 degrees, the 2*3 box will now be 3*2, and as there is no obstacle so all the stones will now fall towards the ground.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n1 1 \n#\n3 1\n#\n*\n.\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>#\n. * #\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 9,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a box represented as a 2D array of characters, where '*' denotes a fixed obstacle, '#' denotes a stone, and '.' denotes empty space. The box is initially oriented such that stones rest on the bottom or are supported by other stones or obstacles. Rotate the box 90 degrees clockwise and realign the stones according to gravity. Return the new box after rotation and stone realignment.",
                "constraints": [
                    "1 \u2264 T \u2264 10",
                    "1 \u2264 N, M \u2264 250",
                    "Box[i][j] = { \u2018 * \u2019 , \u2018 # \u2018 , \u2018 . \u2018 }"
                ],
                "testcases": [
                    {
                        "input": "n = 1, m = 6, box = [['#', '.', '.', '*', '#', '.']]",
                        "output": " [['.', '.'], ['.', '.'], ['#', '.'], ['*', '.'], ['.', '#'], ['#', '.']]",
                        "explanation": "After rotation of the box by 90 degrees, the 1x6 box will now be 6x1, and the stone at (0, 0) will fall down to (2, 0) to now be supported by the fixed obstacle beneath it at (3, 0). And the stone at (4, 0) will fall down to (5, 0) to now be supported by the ground."
                    },
                    {
                        "input": "n = 2, m = 3, box = [['#', '.', '.'], ['#', '#', '.']]",
                        "output": "[['.', '.'], ['.', '#'], ['#', '#']]",
                        "explanation": "After rotation of the box by 90 degrees, the 2x3 box will now be 3x2, and as there is no obstacle so all the stones will now fall towards the ground."
                    },
                    {
                        "input": "n = 1, m = 1, box = [['#']]",
                        "output": "[['#']]",
                        "explanation": "A single stone remains in place after rotation."
                    },
                    {
                        "input": "n = 3, m = 1, box = [['#'], ['*'], ['.']]",
                        "output": "[['.', '*', '#']]",
                        "explanation": "After rotating, the stone is above obstacle."
                    },
                    {
                        "input": "n = 4, m = 3, box = [['#','.','.'],['#','*','.'],['.','.','#'],['.','#','.']]",
                        "output": "[['.','.','#','.'],['.','.','*','#'],['#','#','.','.']]",
                        "explanation": "Complex example with multiple stones and obstacles requiring proper realignment after rotation."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Assume that gravity is applied from the right side instead of from the bottom.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Matrices (2D Arrays)",
                "slug": "matrices-(2d-arrays)"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}