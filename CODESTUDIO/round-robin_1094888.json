{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9832,
            "title": "Round Robin",
            "titleSlug": "round-robin_1094888",
            "content": "<h4 id=\"round-robin-is-a-cpu-scheduling-algorithm-where-each-process-is-assigned-a-fixed-time-slice-quantum-in-a-cyclic-manner\"><a href=\"https://en.wikipedia.org/wiki/Round-robin_scheduling\">Round Robin</a> is a CPU Scheduling algorithm where each process is assigned a fixed time slice / quantum in a cyclic manner.</h4>\n\n<h4 id=\"you-should-be-aware-of-the-following-terms-before-proceeding\">You should be aware of the following terms before proceeding:</h4>\n\n<pre><code>Arrival time: Time at which the process arrives.\n\nBurst time: The time the process takes for its execution. \n\nCompletion time: Time at which the process completes its execution.\n\nTurn Around time: Time difference between the Completion time and the Arrival time.\n\nWaiting time: Time difference between the Turn Around time and the Burst time.\n</code></pre>\n\n<h4 id=\"you-are-given-time-slice-quantum-and-a-list-of-processes-where-process-i-denotes-the-burst-time-of-the-process-i-your-task-is-to-perform-round-robin-scheduling-and-print-a-list-of-waiting-time-where-i-th-index-of-your-list-denotes-the-waiting-time-for-process-i\">You are given time slice / quantum and a list of processes where &#39;PROCESS[ i ]&#39; denotes the Burst time of the process &#39;i&#39;. Your task is to perform Round Robin scheduling and print a list of Waiting time where (i)th index of your list denotes the waiting time for &#39;PROCESS[ i ]&#39;.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You can consider Arrival time for every process to be 0. \n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains a single integer &#39;T&#39; representing the number of test cases.     \nThe &#39;T&#39; test cases are as follows:\n\nThe first line contains two integers &#39;N&#39; and &#39;S&#39; denoting the number of processes and time slice / quantum for performing round-robin scheduling respectively. \n\nThe second line contains &#39;N&#39; space-separated integers, where the ith element denotes the Burst time for process &#39;i&#39;. \n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, return the list that contains &#39;N&#39; integers where ith element denotes the Waiting time for process &#39;i&#39;.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 10^2\n1 &lt;= Time slice &lt;= 10^2\n1 &lt;= Burst time &lt;= 10^3\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1\n4 2\n5 3 4 2\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample output 1:</h5>\n\n<pre><code>9 8 9 6\n</code></pre>\n\n<h5 id=\"explanation-of-sample-output-1\">Explanation of Sample output 1:</h5>\n\n<pre><code>The pictorial representation for the scheduling will be as follows:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/screenshot-96-7351.png\" alt=\"alt\"></p>\n\n<pre><code>Waiting time for P1: 14 - 5 i.e. 9.\nWaiting time for P2: 11 - 3 i.e. 8.\nWaiting time for P3: 13 - 4 i.e. 9.\nWaiting time for P4: 8 - 2 i.e. 6.\n\nThus, the output will be [ 9, 8, 9, 6 ].\n</code></pre>\n\n<h5 id=\"sample-input2\">Sample Input2:</h5>\n\n<pre><code>1 \n3 2\n5 4 3 \n</code></pre>\n\n<h5 id=\"sample-output2\">Sample Output2:</h5>\n\n<pre><code>7 6 8\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 50,
            "dislikes": "NA",
            "rephrased": {
                "body": "Implement a Round Robin CPU scheduling algorithm. Given the burst times of 'N' processes and a time slice 'quantum', calculate the waiting time for each process, assuming all processes arrive at time 0. Return a list containing the waiting times for each process.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10^2",
                    "1 <= Time slice <= 10^2",
                    "1 <= Burst time <= 10^3"
                ],
                "testcases": [
                    {
                        "input": "n = 4, process=[5, 3, 4, 2], quantum = 2",
                        "output": "[9, 8, 9, 6]",
                        "explanation": "The pictorial representation for the scheduling will be as follows:\n\n[Image of Round Robin Gantt chart, as provided in the prompt, should be here].\n\nWaiting time for P1: 14 - 5 = 9.\nWaiting time for P2: 11 - 3 = 8.\nWaiting time for P3: 13 - 4 = 9.\nWaiting time for P4: 8 - 2 = 6.\n\nThus, the output will be [ 9, 8, 9, 6 ]."
                    },
                    {
                        "input": "n = 3, process=[5, 4, 3], quantum = 2",
                        "output": "[7, 6, 8]",
                        "explanation": "P1 runs for 2, remaining burst time 3. Waiting time 0.\nP2 runs for 2, remaining burst time 2. Waiting time 0.\nP3 runs for 2, remaining burst time 1. Waiting time 0.\nP1 runs for 2, remaining burst time 1. Waiting time 2.\nP2 runs for 2, remaining burst time 0. Waiting time 2.\nP3 runs for 1, remaining burst time 0. Waiting time 2.\nP1 runs for 1, remaining burst time 0. Waiting time 4.\n\nP1 Waiting Time: 0 + 2 + 4 = 6. Turnaround Time: 11. Waiting Time = 11 -5=6\nP2 Waiting Time: 0+2=2 Turnaround Time:6 Waiting Time = 6-4=2\nP3 Waiting Time: 0+2 =4 Turnaround Time 9 Waiting Time=9-3=6\n\n This is wrong Explanation\nWaiting Time for P1 is 7\nWaiting Time for P2 is 6\nWaiting Time for P3 is 8"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you do this iteratively? Try to solve the problem by minimising the time required for the execution of the whole process.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}