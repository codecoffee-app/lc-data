{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9975,
            "title": "Row with Maximum 1's",
            "titleSlug": "row-with-maximum-1-s_1112656",
            "content": "<h4 id=\"you-have-been-given-a-non-empty-grid-mat-with-n-rows-and-m-columns-consisting-of-only-0s-and-1s-all-the-rows-are-sorted-in-ascending-order\">You have been given a non-empty grid <em><strong>\u2018mat\u2019</strong></em> with <em><strong>&#39;n&#39;</strong></em> rows and <em><strong>&#39;m&#39;</strong></em> columns consisting of only 0s and 1s. All the rows are sorted in ascending order.</h4>\n\n<h4 id=\"your-task-is-to-find-the-index-of-the-row-with-the-maximum-number-of-ones\">Your task is to find the index of the row with the maximum number of ones.</h4>\n\n<h4 id=\"note-if-two-rows-have-the-same-number-of-ones-consider-the-one-with-a-smaller-index-if-theres-no-row-with-at-least-1-zero-return-1\">Note:  If two rows have the same number of ones, consider the one with a smaller index. If there&#39;s no row with at least 1 zero, return -1.</h4>\n\n<p><br/></p>\n\n<h4 id=\"example\">Example:</h4>\n\n<pre><code>Input: &#39;n&#39; = 3, &#39;m&#39; = 3, &#39;mat&#39; = [[1, 1, 1], [0, 0, 1], [0, 0, 0]]\n\nOutput: 0\n\nExplanation: The row with the maximum number of ones is 0 (0 - indexed).\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first input line contains two space-separated integers, \u2018n\u2019 and \u2018m\u2019 representing the number of rows and columns of the grid, respectively.\n\nFrom the second line, the next \u2018n\u2019 lines represent the rows of the grid. Every row contains \u2018m\u2019 single space-separated integers.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print the index of the row with the maximum number of ones.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h4 id=\"note-you-are-not-required-to-print-the-expected-output-it-has-already-been-taken-care-of-just-implement-the-function\">Note: You are not required to print the expected output; it has already been taken care of. Just implement the function.</h4>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= n &lt;= 50\n1 &lt;= m &lt;= 50\n0 &lt;= mat[i][j] &lt;= 1\n\nWhere \u2018n\u2019 is the number of rows and \u2018m\u2019 is the number of columns.\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>3 3\n1 1 1\n0 0 1\n0 0 0\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>0\n</code></pre>\n\n<h5 id=\"explanation-of-the-sample-input-1\">Explanation of the Sample Input 1:</h5>\n\n<pre><code>The row with the maximum number of ones is 0 (0 - indexed).\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2 2\n1 1\n1 1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>0\n</code></pre>\n\n<h5 id=\"explanation-of-the-sample-input-2\">Explanation of the Sample Input 2:</h5>\n\n<pre><code>Both rows have the same number of ones. Therefore, we will pick the row with smaller index.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 42,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a non-empty grid 'mat' with 'n' rows and 'm' columns consisting of only 0s and 1s, where all rows are sorted in ascending order, find the index of the row with the maximum number of ones. If two rows have the same number of ones, return the row with the smaller index. If there's no row with at least one zero, return -1.",
                "constraints": [
                    "1 <= n <= 50 (number of rows)",
                    "1 <= m <= 50 (number of columns)",
                    "0 <= mat[i][j] <= 1"
                ],
                "testcases": [
                    {
                        "input": "3 3\n1 1 1\n0 0 1\n0 0 0",
                        "output": "0",
                        "explanation": "The row at index 0 has the maximum number of ones (3)."
                    },
                    {
                        "input": "2 2\n1 1\n1 1",
                        "output": "0",
                        "explanation": "Both rows have the same number of ones. Therefore, the row with the smaller index (0) is returned."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Naively find the number of ones in each row.</p>",
            "<p>Try to apply binary search to reduce the time complexity.</p>",
            "<p>Try to optimize using the count of ones of the previous row.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Matrices (2D Arrays)",
                "slug": "matrices-(2d-arrays)"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}