{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9849,
            "title": "Russian Doll Envelopes",
            "titleSlug": "russian-doll-envelopes_1094905",
            "content": "<h4 id=\"you-are-given-a-set-of-n-rectangular-envelopes-the-height-and-width-of-each-envelope-are-given-by-arrays-height-and-width-respectively-each-consisting-of-n-positive-integers-the-height-width-of-the-ith-envelope-is-given-by-height-i-and-width-i-respectively\">You are given a set of \u2018N\u2019 rectangular envelopes. The height and width of each envelope are given by arrays, \u2018height\u2019 and  \u2018width\u2019 respectively, each consisting of \u2018N\u2019 positive integers. The height, width of the ith envelope is given by \u2018height[i]\u2019 and \u2018width[i]\u2019 respectively.</h4>\n\n<h4 id=\"you-can-put-one-envelope-inside-another-envelope-if-and-only-if-both-the-height-and-width-of-one-envelope-is-strictly-greater-than-the-height-and-width-of-the-other-envelope\">You can put one envelope inside another envelope if and only if both the height and width of one envelope is strictly greater than the height and width of the other envelope.</h4>\n\n<h4 id=\"what-is-the-maximum-number-of-envelopes-you-can-russian-doll-put-one-inside-other\">What is the maximum number of envelopes you can Russian doll? (put one inside other)</h4>\n\n<h5 id=\"note\">Note</h5>\n\n<pre><code>Rotation of envelope is not allowed, that is, height and width can\u2019t be exchanged\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases.\n\nThe next 3*T lines represent the \u2018T\u2019 test cases.\n\nThe first line of each test case contains an integer \u2018N\u2019, representing the number of envelopes.\n\nThe second line of the test case contains \u2018N\u2019 space-separated integers representing elements of the array \u2018height\u2019.\n\nThe third line of the test case contains \u2018N\u2019 space-separated integers representing elements of the array \u2018width\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print, in a separate line, the maximum number of envelopes you can Russian doll.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 50\n1 &lt;= n &lt;= 10^4\n1 &lt;= height[i] &lt;= 10^9\n1 &lt;= width[i] &lt;= 10^9\n\nTime Limit: 2 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n4\n5 6 6 2\n4 4 7 3\n2\n2 1 \n2 1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>3 \n2\n</code></pre>\n\n<h5 id=\"explanation-for-sample-output-1\">Explanation For Sample Output 1:</h5>\n\n<pre><code>Test Case 1:\nThe number envelopes, \u2018N\u2019 = 4 \n\u2018height\u2019 = {5, 6, 6, 2}\n\u2018width\u2019= {4, 4, 7, 3}\nLet denote dimensions of the envelope in (Height, Width) manner then, one way of Russian Doll envelopes in outermost to the innermost manner is as follow:\n\nSelect the third envelope, i.e., envelope with dimensions (6, 7) as the outermost envelope.\n\nPlace the first envelope i.e envelope with dimensions (5, 4) inside the outermost envelope. You can do this because both the height and width of this envelope is strictly less than the outermost envelope.\n\nPlace the fourth envelope i.e envelope with dimensions (2, 3) inside the previous envelope.\n\nIn this way, we can Russian Doll 3 envelopes. \n\nNo other way can Russian Doll more than 3 envelopes.\n\nTest Case 2:\nYou can put the second envelope inside the first envelope because both the height and width of the second envelope are strictly less than the first envelope.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code> 2\n 1\n 2\n 3\n 3\n 1 1 1\n 1 1 1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code> 1\n 1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 10,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a set of 'N' rectangular envelopes, where the height and width of the i-th envelope are represented by height[i] and width[i] respectively. Determine the maximum number of envelopes that can be nested inside each other, following the rule that one envelope can be placed inside another only if both its height and width are strictly smaller than the outer envelope's height and width. Note that rotation of envelopes is not allowed.",
                "constraints": [
                    "1 <= T <= 50",
                    "1 <= n <= 10^4",
                    "1 <= height[i] <= 10^9",
                    "1 <= width[i] <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "n = 4, height=[5, 6, 6, 2], width=[4, 4, 7, 3]",
                        "output": "3",
                        "explanation": "The envelopes are (5, 4), (6, 4), (6, 7), and (2, 3). The longest chain is (6, 7) -> (5, 4) -> (2, 3), giving a maximum of 3 nested envelopes."
                    },
                    {
                        "input": "n = 2, height=[2, 1], width=[2, 1]",
                        "output": "2",
                        "explanation": "The envelopes are (2, 2) and (1, 1).  (2, 2) can contain (1, 1), therefore the answer is 2."
                    },
                    {
                        "input": "n = 1, height=[2], width=[3]",
                        "output": "1",
                        "explanation": "Only one envelope is present, so the maximum nesting is 1."
                    },
                    {
                        "input": "n = 3, height=[1, 1, 1], width=[1, 1, 1]",
                        "output": "1",
                        "explanation": "All envelopes have the same dimensions, so no envelope can contain another. The maximum is 1."
                    },
                    {
                        "input": "n = 5, height=[1, 2, 3, 4, 5], width=[5, 4, 3, 2, 1]",
                        "output": "1",
                        "explanation": "Since the heights are increasing while the widths are decreasing, no envelope can be fully contained within another."
                    },
                    {
                        "input": "n = 6, height=[5, 4, 3, 2, 1, 6], width=[6, 5, 4, 3, 2, 1]",
                        "output": "6",
                        "explanation": "The envelopes can be nested by sorting them in decreasing order: (6, 1),(5,2),(4,3),(3,4),(2,5),(1,6). However, the optimal solution after sorting should be the otherway around and is given by sorting in descending of height and for duplicates, sort in ascending order of the width."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try out all the possible ways to Rusian Doll envelopes.</p>",
            "<p>Does sorting envelopes according to their dimensions make this problem similar to finding the Longest Increasing Subsequence?</p>",
            "<p>Can you efficiently find the length of the Longest Increasing Subsequence using Binary Search?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}