{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 15803,
            "title": "Same Frequency After One Removal",
            "titleSlug": "same-frequency-after-one-removal_2824781",
            "content": "<h4 id=\"you-are-given-a-string-str-containing-only-lowercase-english-characters-your-task-is-to-check-whether-it-is-possible-to-make-the-frequency-of-each-distinct-character-the-same-by-removing-at-most-one-character-from-str\">You are given a string \u2018STR\u2019 containing only lowercase English characters. Your task is to check whether it is possible to make the frequency of each distinct character the same by removing at most one character from \u2018STR\u2019.</h4>\n\n<h5 id=\"for-example\">For example:</h5>\n\n<pre><code>You are given \u2018STR\u2019 = \u201caabc\u201d. The answer will be \u201cYes\u201d because if we remove one \u2018a\u2019 from \u2018STR,\u2019 the frequency of each distinct character will be the same. \n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains an integer &#39;T&#39; which denotes the number of test cases.\n\nThe first line of each test case contains a string denoting the given string.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print \u201cYes\u201d if it is possible to make the frequency of each distinct character the same by removing at most one character from \u2018STR\u2019, otherwise \u201cNo\u201d.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10 \n1 &lt;= STR.LENGTH  &lt;= 5000\n\nTime limit: 1 sec\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to input or print anything, as it has already been taken care of. Just implement the given function.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\naabc\naabbc\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code> \u201cYes\u201d\n \u201cYes\u201d\n</code></pre>\n\n<h5 id=\"explanation\">Explanation:</h5>\n\n<pre><code>For the first test case, the answer will be \u201cYes\u201d because if we remove one \u2018a\u2019 from \u2018STR\u2019, the frequency of each distinct character will be the same. \n\nFor the second test case, the answer will be \u201cYes\u201d because if we remove \u2018c\u2019 from \u2018STR\u2019, the frequency of each distinct character will be the same. \n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\nabc\naabccc\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>\u201cYes\u201d\n\u201cNo\u201d\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -8,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string 'STR' containing only lowercase English characters, determine if it's possible to make the frequency of each distinct character the same by removing at most one character from 'STR'.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= STR.LENGTH <= 5000",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "aabc",
                        "output": "Yes",
                        "explanation": "Removing one 'a' results in the string 'abc', where each character has a frequency of 1."
                    },
                    {
                        "input": "aabbc",
                        "output": "Yes",
                        "explanation": "Removing 'c' results in the string 'aabb', where 'a' and 'b' both have a frequency of 2."
                    },
                    {
                        "input": "abc",
                        "output": "Yes",
                        "explanation": "The frequency of each distinct character ('a','b','c') is already the same (frequency=1)."
                    },
                    {
                        "input": "aabccc",
                        "output": "No",
                        "explanation": "Removing at most one character cannot result in equal frequencies for all distinct characters.  Removing 'a' gives 'abccc' (frequencies: b=1, c=3).  Removing 'b' gives 'aaccc' (frequencies: a=2, c=3). Removing 'c' gives 'aabcc' (frequencies: a=2, b=1, c=2). None of these have equal frequencies for all distinct characters."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to store the frequency of each character.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}