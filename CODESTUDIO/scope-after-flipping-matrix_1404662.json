{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12268,
            "title": "Scope After Flipping Matrix",
            "titleSlug": "scope-after-flipping-matrix_1404662",
            "content": "<h4 id=\"you-are-given-a-2-d-matrix-mat-which-consists-of-only-0s-and-1s-every-row-of-the-matrix-is-interpreted-as-a-binary-number-and-the-sum-of-all-these-binary-number-interpreted-rows-is-defined-as-the-score-of-the-matrix-mat\">You are given a 2 - D matrix, \u2018MAT\u2019, which consists of only 0s and 1s. Every row of the matrix is interpreted as a binary number, and the sum of all these \u201cbinary number interpreted rows\u201d is defined as the score of the matrix, \u2018MAT\u2019.</h4>\n\n<h4 id=\"you-have-to-maximize-the-score-by-making-any-number-of-passes-where-a-pass-consists-of-choosing-any-row-or-column-and-toggling-each-value-in-that-row-or-column-i-e-changing-all-0s-to-1s-and-all-1s-to-0s-your-task-is-to-return-the-highest-possible-score-of-the-matrix-mat\">You have to maximize the score by making any number of passes where a pass consists of choosing any row or column, and toggling each value in that row or column, i.e., changing all 0s to 1s, and all 1s to 0s. Your task is to return the highest possible score of the matrix, \u2018MAT\u2019.</h4>\n\n<h4 id=\"input-format\">Input Format:</h4>\n\n<pre><code>The first line of input contains an integer &#39;T&#39; representing the number of test cases.\n\nThe first line of each test case contains two space-separated integers, \u2018M\u2019 and \u2018N\u2019, representing the number of rows and columns of the matrix, \u2018MAT\u2019, respectively.\n\nThe next \u2018M\u2019 lines of each test case contain \u2018N\u2019 space-separated integers representing the elements of the matrix, \u2018MAT\u2019.\n</code></pre>\n\n<h4 id=\"output-format\">Output Format:</h4>\n\n<pre><code>For each test case, return the highest possible score of the matrix, \u2018MAT\u2019.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints:</h4>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;=  M, N &lt;= 25\nMAT[ i ][ j ] \u2208 {0, 1}\n\nTime limit: 1 second\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1:</h4>\n\n<pre><code>2\n4 4\n1 0 0 1\n1 0 1 1\n0 1 0 0\n0 0 1 1\n4 6\n1 1 1 1 0 0\n0 1 0 1 0 1\n1 0 0 0 1 1\n0 1 1 1 0 0\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1:</h4>\n\n<pre><code>51\n212\n</code></pre>\n\n<h4 id=\"explanation-of-sample-output-1\">Explanation of Sample Output 1:</h4>\n\n<pre><code>Test Case 1 :  \nThe given \u2018MAT\u2019 is:\n1 0 0 1\n1 0 1 1\n0 1 0 0\n0 0 1 1\n\nFor the highest possible score, the \u2018MAT\u2019 can be toggled to be modified as:\n1 1 1 1\n1 1 0 1\n1 1 0 1\n1 0 1 0\n\nThe decimal value of the binary interpretation of the first row = 15.\nThe decimal value of the binary interpretation of the second row = 13.\nThe decimal value of the binary interpretation of the third row = 13.\nThe decimal value of the binary interpretation of the fourth row = 10.\nTherefore, the highest possible score of the matrix = 15 + 13 + 13 + 10 = 51.\n\nTest Case 2 : \nThe given \u2018MAT\u2019 is:\n1 1 1 1 0 0\n0 1 0 1 0 1\n1 0 0 0 1 1\n0 1 1 1 0 0\n\nFor the highest possible score, the \u2018MAT\u2019 can be toggled to be modified as:\n1 0 0 0 0 1\n1 1 0 1 1 1\n1 1 1 1 1 0\n1 1 1 1 1 0\n\nThe decimal value of the binary interpretation of the first row = 33.\nThe decimal value of the binary interpretation of the second row = 55.\nThe decimal value of the binary interpretation of the third row = 62.\nThe decimal value of the binary interpretation of the fourth row = 62.\nTherefore, the highest possible score of the matrix = 33 + 55 + 62 + 62 = 212.\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2:</h4>\n\n<pre><code>1\n5 5\n0 1 0 0 1\n1 1 0 0 1\n1 1 0 1 1\n0 1 0 1 0\n0 0 1 1 0\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2:</h4>\n\n<pre><code>126\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 7,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a 2D binary matrix 'MAT' of size M x N, where each row represents a binary number. The score of the matrix is the sum of the decimal equivalents of each row. You can perform any number of operations where an operation involves toggling all bits (0 becomes 1 and 1 becomes 0) of a row or a column. The task is to determine the maximum possible score of the matrix that can be achieved by performing these operations.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= M, N <= 25",
                    "MAT[ i ][ j ] \u2208 {0, 1}"
                ],
                "testcases": [
                    {
                        "input": "m = 4, n = 4, mat = [[1, 0, 0, 1], [1, 0, 1, 1], [0, 1, 0, 0], [0, 0, 1, 1]]",
                        "output": "51",
                        "explanation": "By toggling rows and columns, the matrix can be transformed to [[1, 1, 1, 1], [1, 1, 0, 1], [1, 1, 0, 1], [1, 0, 1, 0]].  The sum of decimal values is 15 + 13 + 13 + 10 = 51."
                    },
                    {
                        "input": "m = 4, n = 6, mat = [[1, 1, 1, 1, 0, 0], [0, 1, 0, 1, 0, 1], [1, 0, 0, 0, 1, 1], [0, 1, 1, 1, 0, 0]]",
                        "output": "212",
                        "explanation": "The matrix can be transformed to [[1, 0, 0, 0, 0, 1], [1, 1, 0, 1, 1, 1], [1, 1, 1, 1, 1, 0], [1, 1, 1, 1, 1, 0]].  The sum of decimal values is 33 + 55 + 62 + 62 = 212."
                    },
                    {
                        "input": "m = 5, n = 5, mat = [[0, 1, 0, 0, 1], [1, 1, 0, 0, 1], [1, 1, 0, 1, 1], [0, 1, 0, 1, 0], [0, 0, 1, 1, 0]]",
                        "output": "126",
                        "explanation": "Optimal toggling leads to a maximum score of 126."
                    },
                    {
                        "input": "m = 2, n = 2, mat = [[0, 0], [0, 0]]",
                        "output": "0",
                        "explanation": "No matter how you toggle the matrix, if the first column stays all 0, it will stay 0. Thus the largest achievable score is 0."
                    },
                    {
                        "input": "m = 1, n = 3, mat = [[0, 0, 0]]",
                        "output": "7",
                        "explanation": "Toggling the first row changes the matrix to [[1,1,1]]. The score is 7."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>A binary number can be maximized by maximizing the number of 1s, which are as left as possible in the number.</p>",
            "<p>Using Hint 1, can you implement the solution greedily without modifying the original matrix, \u2018MAT\u2019?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Matrices (2D Arrays)",
                "slug": "matrices-(2d-arrays)"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}