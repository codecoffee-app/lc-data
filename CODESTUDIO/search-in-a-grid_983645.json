{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9380,
            "title": "Search in a Grid",
            "titleSlug": "search-in-a-grid_983645",
            "content": "<h4 id=\"you-are-given-a-grid-mat-of-n-rows-and-m-columns-with-positive-integers-written-in-each-cell\">You are given a grid \u2018MAT\u2019 of \u2018N\u2019 rows and \u2018M\u2019 columns with positive integers written in each cell.</h4>\n\n<h4 id=\"the-grid-has-the-following-properties\">The grid has the following properties-</h4>\n\n<pre><code>\u2022 Integers in each row are sorted in ascending order from left to right.\n\u2022 Integers in each column are sorted in ascending order from top to bottom.\n</code></pre>\n\n<h4 id=\"you-are-also-given-a-positive-integer-target-your-task-is-to-find-whether-target-is-present-inside-the-grid-or-not\">You are also given a positive integer \u2018target\u2019. Your task is to find whether \u2018target\u2019 is present inside the grid or not.</h4>\n\n<h5 id=\"input-format\">Input Format</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases to run. Then the test case follows.\n\nThe first line of each test case contains three space separated integers  \u2018N\u2019 \u2018M\u2019 and \u2018target\u2019 denoting the number of rows and columns in the matrix and the target integer respectively.\n\nThe next \u2018N\u2019 lines of each test case contain \u2018M\u2019 space-separated integers each representing the rows of \u2018MAT\u2019\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print &quot;True&quot; if \u2018target\u2019 is present inside the grid, else print &quot;False&quot;.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 50\n1 &lt;= N, M &lt;= 500\n1 &lt;= MAT[i][j] &lt;= 10^5\n\nWhere &#39;MAT[i][j]&#39; is the element present at &#39;i&#39;th row and &#39;j&#39;th column of &#39;MAT&#39;.\n\nTime Limit: 1sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n2 2 4\n1 2 \n3 4\n1 1 5\n1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>True\nFalse\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for sample input 1:</h5>\n\n<pre><code>For test case 1,\nThe element 4 is present at index (1,1) (0 based indexing).\nFor test case 2,\nThe element 4 is not present in grid.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>1\n3 3 6\n2 4 6\n7 8 9\n10 11 12\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>True\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 7,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a grid 'MAT' of 'N' rows and 'M' columns, where each cell contains a positive integer. The integers in each row are sorted in ascending order from left to right, and the integers in each column are sorted in ascending order from top to bottom. Determine whether a given positive integer 'target' is present within the grid.",
                "constraints": [
                    "1 <= T <= 50",
                    "1 <= N, M <= 500",
                    "1 <= MAT[i][j] <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "n = 2, m = 2, target = 4, mat = [[1, 2], [3, 4]]",
                        "output": "True",
                        "explanation": "The element 4 is present at index (1,1) (0 based indexing)."
                    },
                    {
                        "input": "n = 1, m = 1, target = 5, mat = [[1]]",
                        "output": "False",
                        "explanation": "The element 5 is not present in the grid."
                    },
                    {
                        "input": "n = 3, m = 3, target = 6, mat = [[2, 4, 6], [7, 8, 9], [10, 11, 12]]",
                        "output": "True",
                        "explanation": "The element 6 is present at index (0,2) (0 based indexing)."
                    },
                    {
                        "input": "n = 3, m = 3, target = 5, mat = [[2, 4, 6], [7, 8, 9], [10, 11, 12]]",
                        "output": "False",
                        "explanation": "The element 5 is not present in the grid."
                    },
                    {
                        "input": "n = 4, m = 5, target = 15, mat = [[1, 2, 3, 4, 5], [6, 7, 8, 9, 10], [11, 12, 13, 14, 15], [16, 17, 18, 19, 20]]",
                        "output": "True",
                        "explanation": "The target 15 is present in the grid."
                    },
                    {
                        "input": "n = 1, m = 5, target = 3, mat = [[1, 2, 3, 4, 5]]",
                        "output": "True",
                        "explanation": "Target 3 is present in the only row."
                    },
                    {
                        "input": "n = 5, m = 1, target = 4, mat = [[1], [2], [3], [4], [5]]",
                        "output": "True",
                        "explanation": "Target 4 is present in the only column."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Check every cell of the grid.</p>",
            "<p>Can we use binary search for this problem?</p>",
            "<p>Can we optimize our approach with the help of some observations?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Matrices (2D Arrays)",
                "slug": "matrices-(2d-arrays)"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}