{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8206,
            "title": "Search in a row wise and column wise sorted matrix",
            "titleSlug": "search-in-a-row-wise-and-column-wise-sorted-matrix_839811",
            "content": "<h4 id=\"you-are-given-an-n-n-matrix-of-integers-where-each-row-and-each-column-is-sorted-in-increasing-order-you-are-given-a-target-integer-x\">You are given an <strong><em>&#39;N * N&#39;</strong></em> matrix of integers where each row and each column is sorted in increasing order. You are given a target integer <strong><em>&#39;X&#39;</strong></em>.</h4>\n\n<p><br></p>\n\n<h4 id=\"find-the-position-of-x-in-the-matrix-if-it-exists-then-return-the-pair-i-j-where-i-represents-the-row-and-j-represents-the-column-of-the-array-otherwise-return-1-1\">Find the position of &#39;X&#39; in the matrix. If it exists then return the pair {i, j} where &#39;i&#39; represents the row and &#39;j&#39; represents the column of the array, otherwise return {-1,-1}</h4>\n\n<p><br></p>\n\n<h5 id=\"for-example\">For example:</h5>\n\n<pre><code>If the given matrix is:\n[ [1, 2, 5],\n  [3, 4, 9],\n  [6, 7, 10]] \nWe have to find the position of 4. We will return {1,1} since A[1][1] = 4.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains a single integer &#39;T&#39;, representing the number of test cases or queries to be run. \nThen the &#39;T&#39; test cases follow.\nThe first line of each test case contains two space-separated integers &#39;N&#39; and &#39;X&#39;, representing the size of the matrix and the target element respectively.\nEach of the next &#39;N&#39; lines contains &#39;N&#39; space-separated integers representing the elements of the matrix.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print the position of &#39;X&#39;, if it exists, otherwise print \u201c-1 -1\u201d.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>It is guaranteed that the matrix contains distinct elements.\nYou are not required to print the expected output, it has already been taken care of. Just implement the function.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n3 4\n1 2 5\n3 4 9\n6 7 10\n2 5\n4 5\n8 6\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>1 1\n0 1\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 \u2264 T \u2264 10\n1 \u2264 N \u2264 10^3\n1 \u2264 X \u2264 10^6\n1 \u2264 Aij \u2264 10^6\n\nwhere &#39;T&#39; is the number of test cases, &#39;N&#39; is the number of rows and columns, &#39;X&#39; is the target value, and Aij is the elements of the matrix.\nTime Limit : 1 sec \n</code></pre>\n\n<h5 id=\"explanation-of-input-1\">Explanation of Input 1:</h5>\n\n<pre><code>The first test case is already explained in the problem statement.\nThe second test case,  the given matrix is:\n[[4, 5],\n [5, 6]] \nWe have to find the position of 5. So we return {0,1}.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n3 16\n2 4 8\n3 6 9\n4 7 16\n1 10\n4\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2</h5>\n\n<pre><code>2 2\n-1 -1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 64,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a square matrix of integers, `matrix`, where each row and each column is sorted in ascending order, and a target integer, `x`, find the row and column indices of `x` in the matrix. If `x` exists in the matrix, return the pair `{i, j}` representing the row `i` and column `j` where `matrix[i][j] == x`.  If `x` is not found in the matrix, return `{-1, -1}`.",
                "constraints": [
                    "1 \u2264 T \u2264 10 (Number of test cases)",
                    "1 \u2264 N \u2264 10^3 (Size of the matrix)",
                    "1 \u2264 X \u2264 10^6 (Target value)",
                    "1 \u2264 Aij \u2264 10^6 (Elements of the matrix)",
                    "Matrix elements are distinct"
                ],
                "testcases": [
                    {
                        "input": "matrix = [[1, 2, 5], [3, 4, 9], [6, 7, 10]], x = 4",
                        "output": "1 1",
                        "explanation": "The element 4 is found at matrix[1][1]."
                    },
                    {
                        "input": "matrix = [[4, 5], [8, 6]], x = 5",
                        "output": "0 1",
                        "explanation": "The element 5 is found at matrix[0][1]."
                    },
                    {
                        "input": "matrix = [[2, 4, 8], [3, 6, 9], [4, 7, 16]], x = 16",
                        "output": "2 2",
                        "explanation": "The element 16 is found at matrix[2][2]."
                    },
                    {
                        "input": "matrix = [[4]], x = 10",
                        "output": "-1 -1",
                        "explanation": "The element 10 is not found in the matrix."
                    },
                    {
                        "input": "matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]], x = 9",
                        "output": "2 2",
                        "explanation": "The element 9 is located at index matrix[2][2]"
                    },
                    {
                        "input": "matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]], x = 0",
                        "output": "-1 -1",
                        "explanation": "The element 0 does not appear in the matrix, thus we return -1 -1"
                    },
                    {
                        "input": "matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]], x = 5",
                        "output": "1 1",
                        "explanation": "The element 5 does appear at index matrix[1][1]"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can we check each element to find a match?</p>",
            "<p>Can we use the fact that the given matrix is sorted in each row?</p>",
            "<p>Can you use the fact that all rows and all columns are sorted?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Matrices (2D Arrays)",
                "slug": "matrices-(2d-arrays)"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}