{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 13834,
            "title": "Search The Element",
            "titleSlug": "search-the-element_1806887",
            "content": "<h4 id=\"sam-always-likes-to-challenge-ninja-with-some-problems-today-he-has-come-to-ninja-for-another-challenge-sam-took-a-sorted-array-and-rotated-it-clockwise-by-an-unknown-amount\">Sam always likes to challenge Ninja with some problems. Today, he has come to Ninja for another challenge. Sam took a sorted array and rotated it clockwise by an unknown amount.</h4>\n\n<h5 id=\"for-example-he-took-a-sorted-array-1-2-3-4-5-and-if-he-rotates-it-by-2-then-the-array-becomes-4-5-1-2-3\">For example, he took a sorted array = [1, 2, 3, 4, 5] and if he rotates it by 2, then the array becomes: [4, 5, 1, 2, 3].</h5>\n\n<h4 id=\"after-rotating-the-sorted-array-he-asked-ninja-q-queries-for-each-query-ninja-has-to-search-whether-the-number-asked-in-that-query-is-present-in-the-rotated-array-or-not-if-the-number-is-present-then-ninja-needs-to-tell-sam-the-index-of-the-number-otherwise-he-needs-to-tell-sam-1\">After rotating the sorted array, he asked Ninja Q queries, for each query Ninja has to search whether the number asked in that query is present in the rotated array or not, if the number is present then Ninja needs to tell Sam the index of the number, otherwise, he needs to tell Sam -1.</h4>\n\n<h4 id=\"since-ninja-does-not-want-to-lose-the-challenge-he-asked-you-to-help-him-for-the-same-your-task-is-to-find-the-index-of-the-number-asked-in-the-query-if-it-exists\">Since Ninja does not want to lose the challenge, he asked you to help him for the same. Your task is to find the index of the number asked in the query if it exists.</h4>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains the size of the array: N\n\nThe second line contains N single space-separated integers: A[i].\n\nThe third line of input contains the number of queries: Q\n\nThe next Q lines of input contain: the number which Sam wants Ninja to search: Q[i]\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print the index of the number if found, otherwise -1.\n\nOutput for every test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You are not required to explicitly print the expected output, just return it and printing has already been taken care of.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= N &lt;= 10^6\n-10^9 &lt;= A[i] &lt;= 10^9\n1 &lt;= Q &lt;= 500\n-10^9 &lt;= Q[i] &lt;= 10^9\n\nTime Limit: 1sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>5\n4 5 1 2 3\n3\n5\n7\n4\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>1\n-1\n0\n</code></pre>\n\n<h5 id=\"explanation-for-sample-1\">Explanation For Sample 1:</h5>\n\n<pre><code>In the 1st test case, 5 is found at the index of 1\n\nIn the 2nd test case, 3 is not found in the array, hence return -1.\n\nIn the 3rd test case, 4 is found at the index of 0.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>7\n14 25 36 47 51 62 3\n4\n3\n25\n52\n51\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>6\n1\n-1\n4\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -9,
            "dislikes": "NA",
            "rephrased": {
                "body": "You are given a clockwise rotated sorted array of integers. Given a number of queries, determine if the query number exists in the array. If it does, return its index. Otherwise, return -1.",
                "constraints": [
                    "1 <= N <= 10^6",
                    "-10^9 <= A[i] <= 10^9",
                    "1 <= Q <= 500",
                    "-10^9 <= Q[i] <= 10^9",
                    "Time Limit: 1sec"
                ],
                "testcases": [
                    {
                        "input": "5\n4 5 1 2 3\n3\n5\n7\n4",
                        "output": "1\n-1\n0",
                        "explanation": "Query 5 is found at index 1. Query 7 is not found. Query 4 is found at index 0."
                    },
                    {
                        "input": "7\n14 25 36 47 51 62 3\n4\n3\n25\n52\n51",
                        "output": "6\n1\n-1\n4",
                        "explanation": "Query 3 is found at index 6. Query 25 is found at index 1. Query 52 is not found. Query 51 is found at index 4."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Since the array is rotated and sorted, shall we consider the binary search approach in a modified way?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}