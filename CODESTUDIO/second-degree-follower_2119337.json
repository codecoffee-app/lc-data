{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 14390,
            "title": "Second Degree Follower",
            "titleSlug": "second-degree-follower_2119337",
            "content": "<pre><code>In facebook, there is a follow table with two columns: followee, follower.\n\nPlease write a sql query to get the amount of each follower\u2019s follower if he/she has one.\n\nFor example:\n\n+-------------+------------+\n| followee    | follower   |\n+-------------+------------+\n|     A       |     B      |\n|     B       |     C      |\n|     B       |     D      |\n|     D       |     E      |\n+-------------+------------+\nShould output:\n+-------------+------------+\n| follower    | num        |\n+-------------+------------+\n|     B       |  2         |\n|     D       |  1         |\n+-------------+------------+\nExplanation:\nBoth B and D exist in the follower list, when as a followee, B&#39;s follower is C and D, and D&#39;s follower is E. A does not exist in follower list.\nNote:\nFollowee would not follow himself/herself in all cases.\nPlease display the result in follower&#39;s alphabet order.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": -5,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a `follow` table in Facebook with columns `followee` and `follower`, write a SQL query to determine the number of followers each follower has, but only include followers who are themselves followed by others. The result should be ordered alphabetically by the follower.",
                "constraints": [
                    "Followee would not follow himself/herself in all cases."
                ],
                "testcases": [
                    {
                        "input": "follow table:\n+-------------+------------+\n| followee    | follower   |\n+-------------+------------+\n|     A       |     B      |\n|     B       |     C      |\n|     B       |     D      |\n|     D       |     E      |\n+-------------+------------+",
                        "output": "+-------------+------------+\n| follower    | num        |\n+-------------+------------+\n|     B       |  2         |\n|     D       |  1         |\n+-------------+------------+",
                        "explanation": "B is a follower and is followed by C and D, thus having 2 followers. D is a follower and is followed by E, thus having 1 follower. A is a followee but not a follower, and C and E are followers but not followees. The result is ordered alphabetically by the follower (B then D)."
                    },
                    {
                        "input": "follow table:\n+-------------+------------+\n| followee    | follower   |\n+-------------+------------+\n|     A       |     B      |\n+-------------+------------+",
                        "output": "+-------------+------------+\n| follower    | num        |\n+-------------+------------+\n+-------------+------------+",
                        "explanation": "B is a follower of A, but B isn't followed by anyone. Therefore no result is returned. Equivalent to returning an empty set."
                    },
                    {
                        "input": "follow table:\n+-------------+------------+\n| followee    | follower   |\n+-------------+------------+\n|     A       |     B      |\n|     A       |     C      |\n|     B       |     D      |\n|     C       |     E      |\n|     C       |     F      |\n+-------------+------------+",
                        "output": "+-------------+------------+\n| follower    | num        |\n+-------------+------------+\n|     C       |  2         |\n+-------------+------------+",
                        "explanation": "C is a follower of A and is followed by E and F. B is a follower of A and is followed by D.  The result is ordered alphabetically by the follower (C)."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "SQL",
                "slug": "sql"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}