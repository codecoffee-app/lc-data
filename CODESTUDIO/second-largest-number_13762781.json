{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 23260,
            "title": "Second Largest Number",
            "titleSlug": "second-largest-number_13762781",
            "content": "<h4 id=\"you-have-been-given-an-array-a-of-n-unique-non-negative-integers\">You have been given an array <em><strong>\u2018a\u2019</strong></em> of <em><strong>\u2018n\u2019</strong></em> unique non-negative integers.</h4>\n\n<p><Br></p>\n\n<h4 id=\"find-the-second-largest-and-second-smallest-element-from-the-array\">Find the second largest and second smallest element from the array.</h4>\n\n<p><Br></p>\n\n<h4 id=\"return-the-two-elements-second-largest-and-second-smallest-as-another-array-of-size-2\">Return the two elements (second largest and second smallest) as another array of size 2.</h4>\n\n<p><Br></p>\n\n<h5 id=\"example\">Example :</h5>\n\n<pre><code>Input: \u2018n\u2019 = 5, \u2018a\u2019 = [1, 2, 3, 4, 5]\nOutput: [4, 2]\n\nThe second largest element after 5 is 4, and the second smallest element after 1 is 2.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line will contain the integer \u2018n\u2019, the number of elements in the array \u2018a\u2019, and the next line will contain the \u2018n\u2019 spaced integers in the array elements. \n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>Print two elements, the second largest and the second smallest element, from the array.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You are not required to print anything; it has already been taken care of. Just implement the function.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>4\n3 4 5 2\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>4 3\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1 :</h5>\n\n<pre><code>The second largest element after 5 is 4 only, and the second smallest element after 2 is 3.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>5\n4 5 3 6 7\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>6 4\n</code></pre>\n\n<h5 id=\"expected-time-complexity\">Expected Time Complexity:</h5>\n\n<pre><code>O(n), Where \u2018n\u2019 is the size of an input array \u2018a\u2019.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>2 \u2264 &#39;n&#39; \u2264 10^5\n0 \u2264 &#39;a&#39;[i] \u2264 10^9\n\nTime limit: 1 sec\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"hints\">Hints:</h5>\n\n<pre><code>1. Sort the array.\n2. More efficiently, can you use the largest and smallest elements to find the required elements?\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 759,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array 'a' of 'n' unique non-negative integers, find the second largest and second smallest elements in the array. Return these two elements as an array of size 2, where the first element is the second largest and the second element is the second smallest.",
                "constraints": [
                    "2 \u2264 n \u2264 10^5",
                    "0 \u2264 a[i] \u2264 10^9",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "4\n3 4 5 2",
                        "output": "4 3",
                        "explanation": "The second largest element after 5 is 4, and the second smallest element after 2 is 3."
                    },
                    {
                        "input": "5\n4 5 3 6 7",
                        "output": "6 4",
                        "explanation": "The second largest element after 7 is 6, and the second smallest element after 3 is 4."
                    },
                    {
                        "input": "5\n1 2 3 4 5",
                        "output": "4 2",
                        "explanation": "The second largest element after 5 is 4, and the second smallest element after 1 is 2."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "cpp",
                "full_func": "/*\r\n    Time complexity: O(N)\r\n    Space complexity: O(1)\r\n\r\n    Where 'N' is the input array 'A'.\r\n*/\r\n\r\nvector<int> getSecondOrderElements(int n, vector<int> a) {\r\n    // Initializing the driver variables.\r\n    int small = INT_MAX, secondSmall = INT_MAX;\r\n    int large = INT_MIN, secondLarge = INT_MIN;\r\n\r\n    // Iterating over an array and calculating the smaller and larger numbers.\r\n    for (int i = 0; i < n; i++) {\r\n        small = min(small, a[i]);\r\n        large = max(large, a[i]);\r\n    }\r\n\r\n    // Iterating again and updating the second order numbers.\r\n    for (int i = 0; i < n; i++) {\r\n        if (a[i] < secondSmall && a[i] != small) {\r\n            secondSmall = a[i];\r\n        }\r\n        if (a[i] > secondLarge && a[i] != large) {\r\n            secondLarge = a[i];\r\n        }\r\n    }\r\n\r\n    return {secondLarge, secondSmall};\r\n}\r\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "java",
                "full_func": "/*\r\n    Time complexity: O(N)\r\n    Space complexity: O(1)\r\n\r\n    Where 'N' is the input array 'A'.\r\n*/\r\nimport java.util.*;\r\npublic class Solution {\r\n    public static int[] getSecondOrderElements(int n, int []a) {\r\n        // Initializing the driver variables.\r\n        int small = Integer.MAX_VALUE, secondSmall = Integer.MAX_VALUE;\r\n        int large = Integer.MIN_VALUE, secondLarge = Integer.MIN_VALUE;\r\n\r\n        // Iterating over an array and calculating the smaller and larger numbers.\r\n        for (int i = 0; i < n; i++) {\r\n            small = Math.min(small, a[i]);\r\n            large = Math.max(large, a[i]);\r\n        }\r\n\r\n        // Iterating again and updating the second order numbers.\r\n        for (int i = 0; i < n; i++) {\r\n            if (a[i] < secondSmall && a[i] != small) {\r\n                secondSmall = a[i];\r\n            }\r\n            if (a[i] > secondLarge && a[i] != large) {\r\n                secondLarge = a[i];\r\n            }\r\n        }\r\n\r\n        return new int[]{secondLarge, secondSmall};\r\n    }\r\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "python",
                "full_func": "'''\r\n    Time complexity: O(N)\r\n    Space complexity: O(1)\r\n\r\n    Where 'N' is the input array 'A'.\r\n'''\r\n\r\n\r\ndef getSecondOrderElements(n: int,  a: [int]) -> [int]:\r\n    # Initializing the driver variables.\r\n    small = int(1e9)\r\n    secondSmall = int(1e9)\r\n    large = int(-1e9)\r\n    secondLarge = int(-1e9)\r\n\r\n    # Iterating over an array and calculating the smaller and larger numbers.\r\n    for i in range(n):\r\n        small = min(small, a[i])\r\n        large = max(large, a[i])\r\n\r\n    # Iterating again and updating the second order numbers.\r\n    for i in range(n):\r\n        if (a[i] < secondSmall and a[i] != small):\r\n            secondSmall = a[i]\r\n        if (a[i] > secondLarge and a[i] != large):\r\n            secondLarge = a[i]\r\n\r\n    return [secondLarge, secondSmall]\r\n",
                "lang_text": "py"
            }
        },
        "platform": "CODESTUDIO"
    }
}