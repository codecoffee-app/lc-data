{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8919,
            "title": "Segregate Odd-Even",
            "titleSlug": "segregate-odd-even_920524",
            "content": "<h4 id=\"there-is-a-wedding-ceremony-at-ninjaland-the-bride-and-groom-want-everybody-to-play-a-game-and-thus-they-have-blindfolded-the-attendees-the-people-from-the-bride-s-side-are-holding-odd-numbers-and-people-from-the-groom-s-side-are-holding-the-even-numbers-for-the-game-to-start-quickly-all-the-bride-s-side-people-should-come-first-followed-by-the-groom-s-side-people-in-the-same-order\">There is a wedding ceremony at NinjaLand. The bride and groom want everybody to play a game and thus, they have blindfolded the attendees. The people from the bride\u2019s side are holding odd numbers and people from the groom\u2019s side are holding the even numbers. For the game to start quickly, all the bride\u2019s side people should come first, followed by the groom\u2019s side people in the same order.</h4>\n\n<h4 id=\"the-attendees-of-the-wedding-with-their-numbers-are-given-in-the-form-of-a-singly-linked-list-arranged-randomly\">The attendees of the wedding with their numbers are given in the form of a Singly Linked List, arranged randomly.</h4>\n\n<h4 id=\"a-singly-linked-list-is-a-type-of-linked-list-that-is-unidirectional-that-is-it-can-be-traversed-in-only-one-direction-from-head-to-the-last-node-tail\">A singly linked list is a type of linked list that is unidirectional; that is, it can be traversed in only one direction from head to the last node (tail).</h4>\n\n<h5 id=\"example\">Example:</h5>\n\n<pre><code>The attendees holding numbers from 1, 4, 3 are shown: \n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/oddeven-6399.png\" alt=\"\"></p>\n\n<h4 id=\"as-the-organizers-are-busy-you-have-to-arrange-all-the-people-by-arranging-the-bride-s-side-people-first-followed-by-the-groom-s-side-people-sequentially\">As the organizers are busy, you have to arrange all the people by arranging the bride\u2019s side people first followed by the groom\u2019s side people sequentially.</h4>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>For the above example 1 -&gt; 4 -&gt; 3, 1 -&gt; 3 -&gt; 4 is the only correct answer, i.e nodes should be grouped sequentially. Hence, 3 -&gt; 1 -&gt; 4 is the wrong answer as we have to preserve the same order.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format</h5>\n\n<pre><code>The first line of input contains an integer T, the number of test cases. Then each test case follows.\n\nThe first and the only line of every test case contains the elements of the singly linked list separated by a single space and terminated by -1.\nHence, -1 would never be a list element.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For every test case, print the bride\u2019s side attendees followed by the groom\u2019s side attendees.\nThe attendees/elements should be single-space separated, terminated by -1.\n\nThe output of each test case is printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don&#39;t need to print the output, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 5 * 10^4\n0 &lt;= data &lt;= 10^4 and data != -1\n\nWhere &#39;N&#39; denotes the number of elements in the Singly Linked List and &#39;data&#39; represents the value of those elements.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n6 10 7 8 5 -1\n5 10 6 4 7 -1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>7 5 6 10 8 -1 \n5 7 10 6 4 -1\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of sample input 1:</h5>\n\n<pre><code>For the first test case:\nThe bride\u2019s side attendees are 7, 5. \nThe groom\u2019s side attendees are 6, 10, 8. \nThe final arrangement of the attendees, arranging the groom\u2019s side after the bride\u2019s side, is 7 5 6 10 8 -1. Note that -1 is not a person. \n\n\nFor the second test case:\nThe bride\u2019s side attendees are 5, 7. \nThe groom\u2019s side attendees are 10, 6, 4.\nThe final arrangement of the attendees, arranging the groom\u2019s side after the bride\u2019s side, is 5 7 10 6 4 -1. Note that -1 is not a person.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n11 21 31 41 51 -1\n2 4 6 8 10 -1 \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>11 21 31 41 51 -1\n2 4 6 8 10 -1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 5,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a singly linked list of wedding attendees represented by numbers. The bride's side holds odd numbers and the groom's side holds even numbers. Rearrange the linked list such that all attendees from the bride's side come first, followed by attendees from the groom's side, maintaining the original order within each group. The linked list is terminated by -1.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 5 * 10^4",
                    "0 <= data <= 10^4 and data != -1",
                    "Where 'N' denotes the number of elements in the Singly Linked List and 'data' represents the value of those elements.",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "6 10 7 8 5 -1",
                        "output": "7 5 6 10 8 -1",
                        "explanation": "Bride's side: 7, 5. Groom's side: 6, 10, 8. Arranged list: 7 5 6 10 8 -1"
                    },
                    {
                        "input": "5 10 6 4 7 -1",
                        "output": "5 7 10 6 4 -1",
                        "explanation": "Bride's side: 5, 7. Groom's side: 10, 6, 4. Arranged list: 5 7 10 6 4 -1"
                    },
                    {
                        "input": "11 21 31 41 51 -1",
                        "output": "11 21 31 41 51 -1",
                        "explanation": "All attendees are from the bride's side (odd numbers). No rearrangement needed."
                    },
                    {
                        "input": "2 4 6 8 10 -1",
                        "output": "2 4 6 8 10 -1",
                        "explanation": "All attendees are from the groom's side (even numbers). No rearrangement needed."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can we solve this problem by moving all the even nodes to the end of the linked list?&nbsp;</p>",
            "<p>Try to link all the odd nodes together and all the even nodes together.&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}