{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 181,
            "title": "Selection Sort",
            "titleSlug": "selection-sort_624469",
            "content": "<h4 id=\"sort-the-given-unsorted-array-arr-of-size-n-in-non-decreasing-order-using-the-selection-sort-algorithm\">Sort the given unsorted array <em><strong>&#39;arr&#39;</strong></em> of size <em><strong>&#39;N&#39;</strong></em> in non-decreasing order using the selection sort algorithm.</h4>\n\n<p><br></p>\n\n<h5 id=\"note\">\u00a0Note:</h5>\n\n<pre><code>Change in the input array/list itself. \n</code></pre>\n\n<p><br></p>\n\n<h5 id=\"example\">Example:</h5>\n\n<pre><code>Input:\nN = 5\narr = {8, 6, 2, 5, 1}\n\nOutput:\n1 2 5 6 8 \n</code></pre>\n\n<p>Explanation:\n<img src=\"https://files.codingninjas.in/untitled-22-28681.jpg\" alt=\"add-image\"></p>\n\n<h5 id=\"input-format\">Input format :</h5>\n\n<pre><code>First line contains an integer &#39;N&#39; representing the size of the array/list.\n\nSecond line contains &#39;N&#39; single space separated integers representing the elements in the array/list.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>The output contains the integers of the sorted array, separated by a single space.\n</code></pre>\n\n<h5 id=\"note\">Note:-</h5>\n\n<pre><code>You don\u2019t need to print anything. Just implement the given function.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>6\n2 13 4 1 3 6 \n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>1 2 3 4 6 13 \n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1:</h5>\n\n<pre><code> Select 1 and swap with element at index 0. arr= {1,13,4,2,3,6}\n\n Select 2 and swap with element at index 1. arr= {1,2,4,13,3,6}\n\n Select 3 and swap with element at index 2. arr= {1,2,3,13,4,6}\n\n Select 4 and swap with element at index 3. arr= {1,2,3,4,13,6}\n\n Select 6 and swap with element at index 4. arr= {1,2,3,4,6,13}\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>5\n9 3 6 2 0\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>0 2 3 6 9\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= N &lt;= 10^3\n0 &lt;= arr[i] &lt;= 10^5\nTime Limit: 1 sec\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 189,
            "dislikes": "NA",
            "rephrased": {
                "body": "Sort the given unsorted array 'arr' of size 'N' in non-decreasing order using the Selection Sort algorithm. Modify the input array in-place.",
                "constraints": [
                    "1 <= N <= 10^3",
                    "0 <= arr[i] <= 10^5",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "6\n2 13 4 1 3 6",
                        "output": "1 2 3 4 6 13",
                        "explanation": "The algorithm iteratively finds the minimum element and swaps it with the element at the current index. In the first iteration, 1 is selected and swapped with 2. In the second, 2 is selected and swapped with 13.  This process continues until the entire array is sorted in non-decreasing order."
                    },
                    {
                        "input": "5\n9 3 6 2 0",
                        "output": "0 2 3 6 9",
                        "explanation": "The Selection Sort algorithm works by repeatedly finding the minimum element from the unsorted portion of the array and placing it at the beginning. In this case, the array is sorted from smallest to largest using the selection sort technique."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Repeatedly find the minimum element in the unsorted part of the array and swap it with the first element of the unsorted part.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "cpp",
                "full_func": "/*\r\n    Time Complexity: O(N*N)\r\n    Space Complexity: O(1)\r\n\r\n    Where 'N' is the length of an array.\r\n*/\r\n\r\nvoid selectionSort(vector<int>&arr)\r\n{\r\n    int n= arr.size();\r\n    \r\n\tfor (int i = 0; i < n; i++)\r\n\t{\r\n\r\n\t\tint mini = arr[i];\r\n\t\tint minIndex = i;\r\n\r\n\t\tfor (int j = i; j < n; j++)\r\n\t\t{\r\n\t\t\t// Update the minimum element and its index if a smaller element is found\r\n\t\t\tif (mini > arr[j])\r\n\t\t\t{\r\n\t\t\t\t\tmini = arr[j];\r\n\t\t\t\t\tminIndex = j;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Swap the minimum element with the first element of the unsorted part\r\n\t\tint tmp = arr[i];\r\n\t\tarr[i] = arr[minIndex];\r\n\t\tarr[minIndex] = tmp;\r\n    }\r\n}",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "java",
                "full_func": "/*\r\n    Time Complexity: O(N*N)\r\n    Space Complexity: O(1)\r\n\r\n    Where 'N' is the length of an array.\r\n*/\r\npublic class Solution {\r\n    public static void selectionSort(int[] arr) {\r\n        int n = arr.length;\r\n\r\n        for (int i = 0; i < n; i++)\r\n        {\r\n\r\n            int mini = arr[i];\r\n            int minIndex = i;\r\n\r\n            for (int j = i; j < n; j++)\r\n            {\r\n                // Update the minimum element and its index if a smaller element is found\r\n                if (mini > arr[j])\r\n                {\r\n                    mini = arr[j];\r\n                    minIndex = j;\r\n                }\r\n            }\r\n\r\n            // Swap the minimum element with the first element of the unsorted part\r\n            int tmp = arr[i];\r\n            arr[i] = arr[minIndex];\r\n            arr[minIndex] = tmp;\r\n        }\r\n    }\r\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "python",
                "full_func": "'''\n    Time Complexity: O(N*N)\n    Space Complexity: O(1)\n\n    Where 'N' is the length of an array.\n'''\n\nfrom typing import List\n\ndef selectionSort(arr: List[int]) -> None: \n    n = len(arr)\n    \n    for i in range(n):\n        mini = arr[i]\n        minIndex = i\n        \n        for j in range(i, n):\n            # Update the minimum element and its index if a smaller element is found.\n            if mini > arr[j]:\n                mini = arr[j]\n                minIndex = j\n        \n        # Swap the minimum element with the first element of the unsorted part.\n        arr[i], arr[minIndex] = arr[minIndex], arr[i]",
                "lang_text": "py"
            }
        },
        "platform": "CODESTUDIO"
    }
}