{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9198,
            "title": "Selection Sort",
            "titleSlug": "selection-sort_981162",
            "content": "<h4 id=\"selection-sort-is-one-of-the-sorting-algorithms-that-works-by-repeatedly-finding-the-minimum-element-from-the-unsorted-part-of-the-array-and-putting-it-at-the-beginning-of-the-unsorted-region-of-the-array\">Selection sort is one of the sorting algorithms that works by repeatedly finding the minimum element from the unsorted part of the array and putting it at the beginning of the unsorted region of the array.</h4>\n\n<h4 id=\"you-are-given-an-unsorted-array-consisting-of-n-non-negative-integers-your-task-is-to-sort-the-array-in-non-decreasing-order-using-the-selection-sort-algorithm\">You are given an unsorted array consisting of N non-negative integers. Your task is to sort the array in non-decreasing order using the Selection Sort algorithm.</h4>\n\n<h5 id=\"for-example\">For Example:</h5>\n\n<pre><code>Selection Sort implementation for the given array:  {29,72,98,13,87,66,52,51,36} is shown below :-\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/capture2-6720.JPG\" alt=\"Alt text\"></p>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer &#39;T&#39; representing the number of test cases. Then the test case follows.\n\nThe first line of each test case contains integer &#39;N&#39; denoting the size of the array.\n\nThe second line of each test case contains &#39;N&#39; single space-separated integers representing the array elements.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>The only line of output of each test case should contain the given array sorted in non-decreasing order.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, and it has already been taken care of. Just implement the given function. Also, you need to update the given array in place only.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= N &lt;= 100\n1 &lt;= Arr[i] &lt;= 1000\n\nWhere &#39;T&#39; represents the number of test cases, &#39;N&#39; represents the size of the array, and &#39;Arr[i]&#39; represents the elements of the array.\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1\n5\n6 2 8 4 10\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>2 4 6 8 10\n</code></pre>\n\n<h5 id=\"explanation\">Explanation :</h5>\n\n<pre><code>In the first step, the minimum element is 2. Thus it is swapped with the starting element of the unsorted region.\nIn the second step, 4 is the minimum element. Now, it is swapped with the starting element of the unsorted region.\nSimilarly, in the third step, the minimum element is 6, which is swapped accordingly.\nIn the final step, all elements are arranged as per the non-decreasing order. Thus the array is sorted. \n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n2\n1 2\n4\n4 3 2 1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>1 2\n1 2 3 4\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 205,
            "dislikes": "NA",
            "rephrased": {
                "body": "You are given an unsorted array of N non-negative integers. Your task is to sort the array in non-decreasing order using the Selection Sort algorithm. Selection sort works by repeatedly finding the minimum element from the unsorted portion of the array and placing it at the beginning of the unsorted region.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= N <= 100",
                    "1 <= Arr[i] <= 1000",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "5\n6 2 8 4 10",
                        "output": "2 4 6 8 10",
                        "explanation": "The Selection Sort algorithm iteratively finds the minimum element in the unsorted portion of the array and swaps it with the element at the beginning of that unsorted portion.  In the first step, 2 is the minimum and swapped with 6.  In the second step, 4 is the minimum and swapped with 6. This process continues until the entire array is sorted in non-decreasing order."
                    },
                    {
                        "input": "2\n1 2",
                        "output": "1 2",
                        "explanation": null
                    },
                    {
                        "input": "4\n4 3 2 1",
                        "output": "1 2 3 4",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Use the Selection Sort Algorithm.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": [
            {
                "lang": "cpp",
                "full_func": "/*\n    Time Complexity : O(N^2)\n    Space Complexity : O(1)\n    \n    Where 'N' is the length of the given array.\n*/\n\n// This function is used to swap two elements of the array.\nvoid swap(int *first, int *second)\n{\n    int temp = *first;\n    *first = *second;\n    *second = temp;\n}\n\nvoid selectionSort(vector<int>& arr, int n)\n{\n    int minVal;\n\n    // This is used to iterate over all elements of array.\n    for (int i = 0; i < n - 1; i++)\n    {\n        // This is used to store the minimum value index.\n        minVal = i;\n        for (int j = i + 1; j < n; j++)\n            if (arr[j] < arr[minVal]) {\n                minVal = j;\n            }\n\n        // Swapping the minimum element with the first element.\n        swap(&arr[minVal], &arr[i]);\n    }\n}\n",
                "lang_text": "cpp"
            },
            {
                "lang": "python",
                "full_func": "'''\n    Time Complexity : O(N^2)\n    Space Complexity : O(1)\n\n    Where 'N' is the length of the given array.\n'''\n\ndef selectionSort(arr, n):\n    \n    for i in range(n - 1):\n        minVal = i\n        for j in range(i + 1, n):\n            if arr[j] < arr[minVal]:\n                minVal = j\n\n        arr[i], arr[minVal] = arr[minVal], arr[i]\n\n    return\n",
                "lang_text": "py"
            },
            {
                "lang": "java",
                "full_func": "/*\n    Time Complexity : O(N^2)\n    Space Complexity : O(1)\n\n    Where 'N' is the length of the given array.\n */\n\npublic class Solution {\n\t// This function is used to swap two elements of the array.\n\n\tpublic static void selectionSort(int arr[], int n) {\n\t\tint minVal;\n\n\t\t// This is used to iterate over all elements of array.\n\t\tfor (int i = 0; i < n - 1; i++) {\n\t\t\t// This is used to store the minimum value index.\n\t\t\tminVal = i;\n\t\t\tfor (int j = i + 1; j < n; j++)\n\t\t\t\tif (arr[j] < arr[minVal]) {\n\t\t\t\t\tminVal = j;\n\t\t\t\t}\n\n\t\t\t// Swapping the minimum element with the first element.\n\t\t\tint temp = arr[minVal];\n\t\t\tarr[minVal] = arr[i];\n\t\t\tarr[i] = temp;\n\t\t}\n\t}\n}",
                "lang_text": "java"
            }
        ],
        "platform": "CODESTUDIO"
    }
}