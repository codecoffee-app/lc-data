{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12504,
            "title": "Self Dividing Numbers",
            "titleSlug": "self-dividing-numbers_1462445",
            "content": "<h4 id=\"a-ninja-wants-to-collect-all-possible-self-dividing-numbers-from-a-given-range-of-numbers\">A Ninja wants to collect all possible self-dividing numbers from a given range of numbers.</h4>\n\n<h4 id=\"a-self-dividing-number-is-a-number-that-is-divisible-by-every-digit-it-contains\">A self-dividing number is a number that is divisible by every digit it contains.</h4>\n\n<h5 id=\"for-example\">For example:</h5>\n\n<pre><code>128 is a self-dividing number because 128 % 1 == 0, 128 % 2 == 0, and 128 % 8 == 0.\n</code></pre>\n\n<h4 id=\"given-a-lower-and-upper-number-bound-your-task-is-to-find-all-possible-self-diving-numbers-in-the-range-of-lower-to-upper\">Given a \u2018LOWER\u2019 and \u2018UPPER\u2019 number bound, your task is to find all possible self-diving numbers in the range of \u2018LOWER\u2019 to \u2018UPPER\u2019.</h4>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>A self-dividing number is not allowed to contain the digit zero.\n\nYou do not need to print anything; it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"example\">Example:</h5>\n\n<pre><code>\u2018LOWER&#39; = 1\u2019  and, \u2018UPPER&#39; = 22\u2019.\n\nOutput: [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22 ]. Since all the numbers obtained in the output in the range of &#39;LOWER&#39; to &#39;UPPER&#39; are self-dividing numbers.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format</h5>\n\n<pre><code>The first line of input contains a single integer \u2018T\u2019 denoting the number of test cases given. Then next \u2018T\u2019 lines follow:\n\nThe first line of each test case input contains two single space-separated integers \u2018LOWER\u2019 and \u2018UPPER\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For every test case, return a list/array of every possible self dividing number, including the bounds (means \u2018LOWER\u2019 and \u2018UPPER\u2019 both are inclusive).\n</code></pre>\n\n<h5 id=\"constraint\">Constraint :</h5>\n\n<pre><code>1 &lt;= \u2018T\u2019 &lt;= 10\n1 &lt;= \u2018LOWER\u2019 &lt;= \u2018UPPER\u2019 &lt;= 1000\n\n\u2018T\u2019 is the number of test cases given for the problem with \u2018LOWER\u2019 being the lower bound from where we start looking for the self-dividing integers until we reach \u2018UPPER\u2019, which is the upper bound. \n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n10 30\n15 45\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample output 1:</h5>\n\n<pre><code>11 12 15 22 24\n15 22 24 33 36 44\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1:</h5>\n\n<pre><code>Test Case 1:\n\nFor the first test case, the output [11, 12, 15, 22, 24] is the required list of self-dividing numbers containing only those numbers that have all the digits that can divide the number and do not contain the digit \u20180\u2019 in it.\n\nTest Case 2:\n\nFor the first test case, The output [15, 22, 24, 33, 36, 44] is the required list of self-dividing numbers containing only those set of numbers that have all the digits which can divide the number and that do not contain the digit \u20180\u2019 in it.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n1 22\n100 150\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample output 2:</h5>\n\n<pre><code>1 2 3 4 5 6 7 8 9 11 12 15 22\n111 112 115 122 124 126 128 132 135 144\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 18,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a range of integers from 'LOWER' to 'UPPER', identify and return all self-dividing numbers within that range. A self-dividing number is one that is divisible by each of its digits (and does not contain the digit 0). Implement a function that takes 'LOWER' and 'UPPER' as input and returns a list of self-dividing numbers.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= LOWER <= UPPER <= 1000",
                    "A self-dividing number is not allowed to contain the digit zero."
                ],
                "testcases": [
                    {
                        "input": "lower = 10, upper = 30",
                        "output": "[11, 12, 15, 22, 24]",
                        "explanation": "The self-dividing numbers between 10 and 30 (inclusive) are 11, 12, 15, 22, and 24."
                    },
                    {
                        "input": "lower = 15, upper = 45",
                        "output": "[15, 22, 24, 33, 36, 44]",
                        "explanation": "The self-dividing numbers between 15 and 45 (inclusive) are 15, 22, 24, 33, 36, and 44."
                    },
                    {
                        "input": "lower = 1, upper = 22",
                        "output": "[1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]",
                        "explanation": "The self-dividing numbers between 1 and 22 (inclusive) are 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, and 22."
                    },
                    {
                        "input": "lower = 100, upper = 150",
                        "output": "[111, 112, 115, 122, 124, 126, 128, 132, 135, 144]",
                        "explanation": "The self-dividing numbers between 100 and 150 (inclusive) are 111, 112, 115, 122, 124, 126, 128, 132, 135, and 144."
                    },
                    {
                        "input": "lower = 1, upper = 9",
                        "output": "[1, 2, 3, 4, 5, 6, 7, 8, 9]",
                        "explanation": "All single digit numbers (excluding 0) are self-dividing."
                    },
                    {
                        "input": "lower = 200, upper = 200",
                        "output": "[]",
                        "explanation": "There are no self dividing numbers between 200 and 200 as it contains zero."
                    },
                    {
                        "input": "lower = 201, upper = 201",
                        "output": "[]",
                        "explanation": "There are no self dividing numbers between 201 and 201 as it contains zero."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try for each number in the given range, to directly test if that number is self-dividing.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}