{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12292,
            "title": "Sell Diminishing Bricks",
            "titleSlug": "sell-diminishing-bricks_1459124",
            "content": "<h4 id=\"ninja-has-started-a-new-business-of-selling-bricks-there-are-n-types-of-bricks-of-distinct-types-present-in-his-shop-and-each-brick-s-cost-is-the-number-of-bricks-of-that-type-currently-present-in-his-shop-the-total-number-of-each-type-of-brick-in-the-shop-is-given-in-an-array-arr-ninja-has-received-an-order-of-l-bricks-in-his-shop-your-task-is-to-find-the-maximum-profit-ninja-can-attain-by-this-order\">Ninja has started a new business of selling bricks. There are \u2018N\u2019 types of bricks of distinct types present in his shop, and each brick\u2019s cost is the number of bricks of that type currently present in his shop. The total number of each type of brick in the shop is given in an array &#39;ARR&#39;. Ninja has received an order of \u2018L\u2019 bricks in his shop. Your task is to find the maximum profit Ninja can attain by this order.</h4>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of the input contains an integer, &#39;T,\u2019 denoting the number of test cases.\n\nThe first line of each test case contains two space-separated integers, &#39;N&#39; and &#39;L&#39;, denoting the number of elements in the array &#39;ARR&#39;, and the number of bricks ordered by the customer respectively.\n\nThe second line of each test case contains &#39;N&#39; space-separated integers denoting the elements of the array &#39;ARR&#39;.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print a single integer - the maximum profit Ninja can attain by the order.    \n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;=  T  &lt;= 100\n1 &lt;=  N &lt;= 10^3\n1 &lt;= ARR[i] &lt;= 10^3\n1 &lt;=  L  &lt;= min(SUM(ARR, 10^6))\n\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n3 2 \n1 3 5 \n3 3\n1 3 5 \n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>9\n12\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1 :</h5>\n\n<pre><code>For the first test case, \nIf Ninja sells the brick having cost 5 two times. After the transaction of the first brick, there are only 4 bricks left of that type due to which the cost of the following brick is 4 then the total profit will be 5 + 4 = 9, which is the maximum profit possible. Hence, the answer is 9 in this case.  \n\nFor the second test case,\nIf Ninja sells the brick having cost 5 two times. After the transaction of the two bricks, There are only 3 bricks left of that type. Now, there are 2 distinct bricks having cost 3. If Ninja sells any brick from them to the customer, then the total profit will be 5+4+3=12, which is the maximum profit possible. Hence, the answer is 12 in this case.  \n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n3 4\n1 7 8 \n4 4 \n5 5 5 5\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>28\n20\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 1,
            "dislikes": "NA",
            "rephrased": {
                "body": "A brick shop owner, Ninja, has 'N' different types of bricks. The cost of each brick type is equal to the number of bricks of that type currently in the shop. Given an array 'ARR' representing the number of bricks of each type and an order for 'L' bricks, determine the maximum profit Ninja can make by fulfilling the order.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= N <= 10^3",
                    "1 <= ARR[i] <= 10^3",
                    "1 <= L <= min(SUM(ARR, 10^6))"
                ],
                "testcases": [
                    {
                        "input": "arr=[1, 3, 5], l=2",
                        "output": "9",
                        "explanation": "Selling two bricks from the type with 5 bricks each yields the maximum profit: 5 + 4 = 9."
                    },
                    {
                        "input": "arr=[1, 3, 5], l=3",
                        "output": "12",
                        "explanation": "Selling two bricks from the type with 5 bricks and one from the type with 3 bricks yields the maximum profit: 5 + 4 + 3 = 12."
                    },
                    {
                        "input": "arr=[1, 7, 8], l=4",
                        "output": "28",
                        "explanation": "Selling 4 bricks from type with 8 results in maximum profit 8 + 7 + 6 + 5 = 26. Selling 3 from 8 and 1 from 7 gives 8 + 7 + 6 + 7 = 28."
                    },
                    {
                        "input": "arr=[5, 5, 5, 5], l=4",
                        "output": "20",
                        "explanation": "Selling one brick from each type yields the maximum profit: 5 + 5 + 5 + 5 = 20."
                    },
                    {
                        "input": "arr=[2, 4, 6, 8, 10], l=5",
                        "output": "40",
                        "explanation": "Selling 10 + 9 + 8 + 7 + 6 = 40."
                    },
                    {
                        "input": "arr=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10], l=10",
                        "output": "55",
                        "explanation": "Selling one brick from each type yields the maximum profit: 1+2+3+4+5+6+7+8+9+10 = 55."
                    },
                    {
                        "input": "arr=[2,2,2], l=4",
                        "output": "7",
                        "explanation": "Selling two of the bricks 2 and 2 yields max profit 2+1+2+1=6, or we can make the first brick type and second brick type as 2 bricks, giving 2+1+2+1 = 6.  However selling 2 from first type yields 2+1 and 2 from second type yields 2+1 hence the max would be 2+1+2+1=6. Selling bricks from 2 different types would give the highest."
                    },
                    {
                        "input": "arr=[3,3,3], l=6",
                        "output": "15",
                        "explanation": "3+2+1+3+2+1"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to sell the brick with the maximum cost for each of L transactions to the customer.</p>",
            "<p>Try to think of an approach using a Heap.</p>",
            "<p>Try to think of a greedy approach by trying to sort the array in descending order.</p>",
            "<p>Try to think of an approach using binary search to find the minimum value where all the bricks having cost more than that value are sold to the customer.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Heap",
                "slug": "heap"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}