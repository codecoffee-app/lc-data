{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 17010,
            "title": "Sentence Sort",
            "titleSlug": "sentence-sort_3744739",
            "content": "<h4 id=\"you-are-given-a-sentence-in-the-form-of-a-string-str-containing-no-more-than-9-words-each-word-in-the-sentence-is-suffixed-by-a-unique-number-ranging-from-1-to-n-where-n-is-the-number-of-words-in-the-sentence-your-task-is-to-reorder-the-words-in-str-according-to-the-suffix-number-of-each-word-and-return-it-as-the-string\">You are given a sentence in the form of a string \u2018str\u2019 containing no more than 9 words, each word in the sentence is suffixed by a unique number ranging from 1 to N, where N is the number of words in the sentence. Your task is to reorder the words in \u2018str\u2019 according to the suffix number of each word and return it as the string.</h4>\n\n<h5 id=\"for-example\">For Example:</h5>\n\n<pre><code>You are given \u2018str\u2019 = \u2018A1 person3 good2\u2019, in this we can see the ordering of the words like \u2018A\u2019,  \u2018good\u2019 \u2018person\u2019 according to the suffix number. Hence the answer string is \u2018A good person\u2019.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains a single integer \u2018T\u2019, representing the number of test cases.\n\nThe first line of each test case contains a string \u2018str\u2019 representing the given string.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print a single string representing the sorted string.\n\nPrint a separate line for each test case.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;=  10\n1 &lt;= |str| &lt;= 10^6\n\n\u2018str\u2019 will contain upper and lower case characters of the English alphabet.\n\u2018str\u2019 will not contain more than 9 words.\n\nTime Limit: 1 sec.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function. \n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\nA1 person3 good2\nworld2 hello1\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>A good person\nhello world\n</code></pre>\n\n<h5 id=\"explanation-for-input-1\">Explanation for input 1:</h5>\n\n<pre><code>For the first test case, \u2018str\u2019 = \u2018A1 person3 good2\u2019, in this we can see the ordering of the words like \u2018A\u2019,  \u2018good\u2019 \u2018person\u2019 according to the suffix number. Hence the answer string is \u2018A good person\u2019.\n\nFor the second test case, \u2018str\u2019 = \u2018world2 hello1\u2019, in this we can see the ordering of the words like \u2018 hello\u2019, and \u2018world\u2019, according to the suffix number Hence the answer string is \u2018hello world\u2019.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\nCode1 studio2 coding3 ninjas4\nhi1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>Code studio coding ninjas\nhi \n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 1,
            "dislikes": "NA",
            "rephrased": {
                "body": "You are given a string 'str' containing no more than 9 words. Each word is suffixed by a unique number from 1 to N, where N is the number of words in the string. Reorder the words in 'str' according to their suffix numbers and return the reordered string.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= |str| <= 10^6",
                    "'str' will contain upper and lower case characters of the English alphabet.",
                    "'str' will not contain more than 9 words.",
                    "Time Limit: 1 sec."
                ],
                "testcases": [
                    {
                        "input": "A1 person3 good2",
                        "output": "A good person",
                        "explanation": "The input string 'A1 person3 good2' contains three words. 'A' is suffixed by 1, 'good' is suffixed by 2, and 'person' is suffixed by 3. Reordering them based on the suffix gives us 'A good person'."
                    },
                    {
                        "input": "world2 hello1",
                        "output": "hello world",
                        "explanation": "The input string 'world2 hello1' contains two words. 'hello' is suffixed by 1, and 'world' is suffixed by 2. Reordering them based on the suffix gives us 'hello world'."
                    },
                    {
                        "input": "Code1 studio2 coding3 ninjas4",
                        "output": "Code studio coding ninjas",
                        "explanation": "The input string 'Code1 studio2 coding3 ninjas4' contains four words, each suffixed with a number from 1 to 4. Reordering them according to their suffix gives us 'Code studio coding ninjas'."
                    },
                    {
                        "input": "hi1",
                        "output": "hi",
                        "explanation": "The input string 'hi1' contains only the word 'hi' suffixed with 1. Thus, the output is simply 'hi'."
                    },
                    {
                        "input": "A good person",
                        "output": null,
                        "explanation": "The problem description states the words will be suffixed by a unique number. Since the input 'A good person' does not have this format, this can be treated as an invalid testcase. Since there is no specified action the program will return null"
                    },
                    {
                        "input": "hello world",
                        "output": null,
                        "explanation": "The problem description states the words will be suffixed by a unique number. Since the input 'hello world' does not have this format, this can be treated as an invalid testcase. Since there is no specified action the program will return null"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to separate the words and sort them according to the index</p>"
        ],
        "relatedTopics": [
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}