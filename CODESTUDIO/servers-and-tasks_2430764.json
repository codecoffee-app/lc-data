{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 15254,
            "title": "Servers And Tasks",
            "titleSlug": "servers-and-tasks_2430764",
            "content": "<h4 id=\"you-are-given-n-servers-and-m-tasks-you-are-also-given-two-arrays-servers-and-tasks-where-server-i-represents-the-memory-limit-of-i-th-server-and-task-i-represents-the-memory-required-to-schedule-the-i-th-task-a-server-can-be-assigned-multiple-tasks-as-long-as-the-limit-is-not-exceeded-your-task-is-to-check-whether-all-the-tasks-can-be-scheduled-or-not\">You are given \u2018N\u2019 servers and \u2018M\u2019 tasks. You are also given two arrays, \u2018servers\u2019 and \u2018tasks\u2019, where \u2018server[i]\u2019 represents the memory limit of i-th server, and \u2018task[i]\u2019 represents the memory required to schedule the i-th task. A server can be assigned multiple tasks as long as the limit is not exceeded. Your task is to check whether all the tasks can be scheduled or not.</h4>\n\n<h5 id=\"for-example\">For example:</h5>\n\n<pre><code>You are given N = \u20183\u2019, M = \u20185\u2019.\nservers = { 8, 8, 32 }\ntasks = { 4, 4, 8, 12, 16 }\nThe answers will be true because :\nTask 1 and task 2 can be assigned to server 1.\nTask 3 can be assigned to server 2.\nTask 4 and task 5 can be assigned to server 3.\nIn this way, we can schedule all the given tasks.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains an integer &#39;T&#39; which denotes the number of test cases.\n\nThe first line of each test case contains two space-separated integers, \u2018N\u2019 and \u2018M\u2019, representing the number of servers and tasks, respectively.\n\nThe second line of each test case contains \u2018N\u2019 space-separated integers denoting the memory limit of each server.\n\nThe third line of each test case contains \u2018M\u2019 space-separated integers denoting the memory required to assign each task.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print \u201ctrue\u201d if all the tasks can be scheduled. Otherwise, print \u201cfalse\u201d.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10 \n1 &lt;= N, M  &lt;= 8\n1 &lt;= servers[i] &lt;= 10^9\n1 &lt;= tasks[i] &lt;= 10^9\n\nTime limit: 1 sec\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to input or print anything, as it has already been taken care of. Just implement the given function.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n3 5\n8 8 32\n4 4 8 12 16\n2 1\n2 5 \n8\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>true\nfalse\n</code></pre>\n\n<h5 id=\"explanation\">Explanation:</h5>\n\n<pre><code>For the first test case, The answers will be true because :\nTask 1 and task 2 can be assigned to server 1.\nTask 3 can be assigned to server 2.\nTask 4 and task 5 can be assigned to server 3.\nIn this way, we can schedule all the given tasks.\n\nFor the second test case, the answer will be false because we can not assign task 1 to any server.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n2 4\n8 8\n4 4 4 4\n1 2\n16 \n8 12\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>true\nfalse\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 8,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a set of servers with memory capacities and a set of tasks with memory requirements, determine if all tasks can be successfully scheduled onto the servers. A server can handle multiple tasks as long as its memory limit is not exceeded.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N, M  <= 8",
                    "1 <= servers[i] <= 10^9",
                    "1 <= tasks[i] <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "n = 3, m = 5, servers = [8, 8, 32], tasks = [4, 4, 8, 12, 16]",
                        "output": "true",
                        "explanation": "Task 1 and task 2 can be assigned to server 1 (8 >= 4 + 4). Task 3 can be assigned to server 2 (8 >= 8). Task 4 and task 5 can be assigned to server 3 (32 >= 12 + 16). All tasks are scheduled."
                    },
                    {
                        "input": "n = 2, m = 1, servers = [2, 5], tasks = [8]",
                        "output": "false",
                        "explanation": "Task 1 requires 8 memory units, but neither server has enough memory to accommodate it. Therefore, the task cannot be scheduled."
                    },
                    {
                        "input": "n = 2, m = 4, servers = [8, 8], tasks = [4, 4, 4, 4]",
                        "output": "true",
                        "explanation": "Task 1 and Task 2 can be scheduled on server 1. Task 3 and Task 4 can be scheduled on server 2."
                    },
                    {
                        "input": "n = 1, m = 2, servers = [16], tasks = [8, 12]",
                        "output": "false",
                        "explanation": "Task 1 can be scheduled on server 1 (16 >= 8). However, task 2 cannot be scheduled because even though there is space on server 1 after scheduling task 1(16 - 8 = 8) task 2 still require more memory (12 > 8) than the remaining memory on server 1."
                    },
                    {
                        "input": "n = 1, m = 2, servers = [1000], tasks = [500, 500]",
                        "output": "true",
                        "explanation": "Both tasks can be scheduled on the single server because 1000 >= 500 + 500."
                    },
                    {
                        "input": "n = 3, m = 4, servers = [10, 5, 20], tasks = [5, 3, 2, 10]",
                        "output": "true",
                        "explanation": "Task 1 can be assigned to server 1 (10 >= 5). Task 2 can be assigned to server 2 (5 >= 3). Task 3 can be assigned to server 2 (5 - 3 = 2, 2 >= 2). Task 4 can be assigned to server 3 (20 >= 10). All tasks are scheduled"
                    },
                    {
                        "input": "n = 2, m = 3, servers = [1, 1], tasks = [1, 1, 1]",
                        "output": "false",
                        "explanation": "Task 1 can be assigned to server 1. Task 2 can be assigned to server 2. But task 3 cannot be assigned to either server 1, or server 2, since they both have no capacity left. Hence all tasks can not be assigned"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try every possible combination.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Depth-first Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}