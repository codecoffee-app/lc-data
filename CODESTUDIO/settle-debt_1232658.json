{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10556,
            "title": "Settle Debt",
            "titleSlug": "settle-debt_1232658",
            "content": "<h4 id=\"a-group-of-friends-went-on-a-trip-and-sometimes-lent-each-other-money-each-transaction-among-them-is-represented-by-the-tuple-x-y-z-which-means-person-x-gave-person-y-z-given-a-list-of-n-transactions-between-a-group-of-friends-return-the-minimum-number-of-transactions-required-to-settle-the-debt\">A group of friends went on a trip and sometimes lent each other money. Each transaction among them is represented by the tuple (X, Y, Z) which means person \u2018X\u2019 gave person \u2018Y\u2019 $Z. Given a list of \u2018N\u2019 transactions between a group of friends, return the minimum number of transactions required to settle the debt.</h4>\n\n<h4 id=\"example\">Example:</h4>\n\n<pre><code>Alice paid for Bill&#39;s lunch for $10. Then later Chris gave Alice $5 for a taxi ride. Assuming   Alice, Bill, and Chris are person 0, 1, and 2 respectively (0, 1, 2 are the person&#39;s ID), the transaction can be represented as [[0, 1, 10], [2, 0, 5]].So here the minimum number of transactions to settle the debt is 2.\n</code></pre>\n\n<h5 id=\"input-format\">Input format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases. \n\nThe first line of every test case contains one integer \u2018N\u2019 where \u2018N\u2019 denotes the number of transactions between a group of friends.\n\nThen N lines contain three space-separated integers \u2018X\u2019, \u2018Y\u2019 and \u2018Z\u2019 which denotes person X gave person Y $Z in the form of N x 3 \u2018ARR\u2019 matrix where the first column represents lender, the second column represents receiver and the last column represents the money given.\n</code></pre>\n\n<h5 id=\"output-format\">Output format:</h5>\n\n<pre><code>For each test case, print a single line containing a single integer denoting the minimum number of transactions required to settle the debt.\n\nThe output for each test case will be printed on a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n\nA transaction will be given as a tuple (x, y, z). Note that x \u2260 y and z &gt; 0. Person&#39;s IDs may not be linear, e.g. we could have the persons 0, 1, 2, or we could also have the persons 0, 2, 6.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 9\n\nWhere \u2018T\u2019 represents the number of test cases, and \u2018N\u2019 represents the number of transactions among the friends.\n\nTime Limit: 1 sec.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1\n2\n0 1 10\n2 0 5\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>2\n</code></pre>\n\n<h5 id=\"explanation-1\">Explanation 1:</h5>\n\n<pre><code>For the first test case, \nPerson-0 gave person-1 $10.\nPerson-2 gave person-0 $5.\n\nTherefore, Two transactions are needed. One way to settle the debt is person-1 pays person-0 and person-2 $5 each.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\n4\n0 1 10\n1 0 1\n1 2 5\n2 0 5\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>1\n</code></pre>\n\n<h5 id=\"explanation-2\">Explanation 2:</h5>\n\n<pre><code>For the first test case, \nPerson-0 gave person-1 $10.\nPerson-1 gave person-0 $1.\nPerson-1 gave person-2 $5.\nPerson-2 gave person-0 $5.\n\nTherefore, only 1 transaction is needed. Person-1 only needs to give person-0 $4, and all debt is settled. \n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"hints\">Hints:</h5>\n\n<pre><code>Think of a recursive solution.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 5,
            "dislikes": "NA",
            "rephrased": {
                "body": "A group of friends took a trip and lent each other money. Each transaction is represented as (X, Y, Z), meaning person X gave person Y $Z. Given a list of N transactions, find the minimum number of transactions needed to settle all debts.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 9",
                    "1 <= X, Y <= num of friends",
                    "X != Y",
                    "Z > 0"
                ],
                "testcases": [
                    {
                        "input": "1\n2\n0 1 10\n2 0 5",
                        "output": "2",
                        "explanation": "Person 0 gave person 1 $10, and person 2 gave person 0 $5.  A minimal solution involves two transactions: person 1 pays person 0 $5, and person 1 pays person 2 $5."
                    },
                    {
                        "input": "1\n4\n0 1 10\n1 0 1\n1 2 5\n2 0 5",
                        "output": "1",
                        "explanation": "Person 0 gave person 1 $10. Person 1 gave person 0 $1, person 2 $5. Person 2 gave person 0 $5. The debt can be settled with just one transaction: Person 1 gives Person 0 $4."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}