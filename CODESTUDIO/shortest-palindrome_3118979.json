{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 16301,
            "title": "Shortest Palindrome",
            "titleSlug": "shortest-palindrome_3118979",
            "content": "<h4 id=\"you-are-given-a-string-str-your-task-is-to-find-the-shortest-palindrome-that-can-be-formed-by-adding-characters-in-front-of-str\">You are given a string \u2018STR\u2019. Your task is to find the shortest palindrome that can be formed by adding characters in front of \u2018STR\u2019.</h4>\n\n<h5 id=\"for-example\">For example:</h5>\n\n<pre><code>You are given \u2018STR\u2019 = \u201caabcd\u201d. Then our answer will be \u201cdcbaabcd\u201d. We can form a palindrome by adding \u2018d\u2019, \u2018c\u2019, and \u2018b\u2019 in front of \u2018STR\u2019.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains an integer &#39;T&#39; which denotes the number of test cases.\n\nThe first line of each test case contains a string denoting the input string.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print the shortest palindrome that can be formed by adding characters in front of \u2018STR\u2019.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10 \n1 &lt;= STR.LENGTH  &lt;= 5000\n\u2018STR\u2019 contains only lowercase English letters.\n\nTime limit: 1 sec\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to input or print anything, as it has already been taken care of. Just implement the given function.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\naabcd\nabad\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>dcbaabcd\ndabad\n</code></pre>\n\n<h5 id=\"explanation\">Explanation:</h5>\n\n<pre><code>For the first test case, you are given \u2018STR\u2019 = \u201caabcd\u201d. Then our answer will be \u201cdcbaabcd\u201d. We can form a palindrome by adding \u2018d\u2019, \u2018c\u2019, and \u2018b\u2019 in front of \u2018STR\u2019.\n\nFor the second test case, you are given \u2018STR\u2019 = \u201cabad\u201d. Then our answer will be \u201cdabad\u201d. We can form a palindrome by adding \u2018d\u2019 in front of \u2018STR\u2019.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\nabda\nacbbca\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>adbabda\nacbbca\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -3,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string `STR`, find the shortest palindrome that can be formed by adding characters to the beginning of `STR`. For example, if `STR` is \"aabcd\", the shortest palindrome is \"dcbaabcd\".",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= STR.LENGTH <= 5000",
                    "`STR` contains only lowercase English letters.",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "aabcd",
                        "output": "dcbaabcd",
                        "explanation": "By adding 'd', 'c', and 'b' to the beginning of 'aabcd', we form the palindrome 'dcbaabcd'."
                    },
                    {
                        "input": "abad",
                        "output": "dabad",
                        "explanation": "By adding 'd' to the beginning of 'abad', we form the palindrome 'dabad'."
                    },
                    {
                        "input": "abda",
                        "output": "adbabda",
                        "explanation": "By adding 'adbab' to the beginning of 'abda', we form the palindrome 'adbabda'."
                    },
                    {
                        "input": "acbbca",
                        "output": "acbbca",
                        "explanation": "The given string 'acbbca' is already a palindrome."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Find the palindromic substring of the input string.</p>",
            "<p>Try to reduce the size of the string to search for the largest palindromic substring.</p>",
            "<p>Try to use an efficient string matching algorithm.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}