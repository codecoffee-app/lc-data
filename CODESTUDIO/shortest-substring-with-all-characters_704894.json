{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 7600,
            "title": "Shortest substring with all characters",
            "titleSlug": "shortest-substring-with-all-characters_704894",
            "content": "<h4 id=\"you-have-been-given-a-string-s-which-only-consists-of-lowercase-english-alphabet-letters\">You have been given a string &#39;S&#39; which only consists of lowercase English-Alphabet letters.</h4>\n\n<h4 id=\"your-task-is-to-find-the-shortest-minimum-length-substring-of-s-which-contains-all-the-characters-of-s-at-least-once-if-there-are-many-substrings-with-the-shortest-length-then-find-one-which-appears-earlier-in-the-string-i-e-substring-whose-starting-index-is-lowest\">Your task is to find the shortest(minimum length) substring of &#39;S&#39; which contains all the characters of &#39;S&#39; at least once. If there are many substrings with the shortest length, then find one which appears earlier in the string i.e. substring whose starting index is lowest.</h4>\n\n<h5 id=\"for-example\">For example-</h5>\n\n<pre><code>If the given string is S = &quot;abcba&quot;, then the possible substrings are &quot;abc&quot; and &quot;cba&quot;. As &quot;abc&quot; starts with a lower index (i.e. 0, &quot;cba&quot; start with index 2), we will print &quot;abc&quot; as our shortest substring that contains all characters of &#39;S&#39;.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The only line of input contains a string &#39;S&#39; i.e. the given string.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>The only line of output contains a string i.e. the shortest substring of &#39;S&#39; which contains all the characters of &#39;S&#39; at least once.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You are not required to print the expected output, it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= N &lt;= 10^5\n&#39;S&#39; only contains lowercase English-Alphabet letters.\n\nWhere &#39;S&#39; is the given string and \u2018N\u2019 is the length of \u2018S\u2019.\n\nTime Limit: 1 sec \n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>aabcabb\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>abc\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1:</h5>\n\n<pre><code>Some of the possible substrings are &quot;aabcabb&quot;, &quot;aabc&quot;, &quot;abcab&quot;, &quot;abc&quot;, etc. Out of all these substrings, we will have &quot;abc&quot;, &quot;bca&quot; and &quot;cab&quot; with the shortest length. As &quot;abc&quot; appear earliest in the string, we will print &quot;abc&quot; in the output.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>cddeyys\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>cddeyys\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 18,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string 'S' consisting of lowercase English alphabet letters, find the shortest substring of 'S' that contains all unique characters of 'S' at least once. If multiple substrings have the same shortest length, return the one that appears earliest in 'S'.",
                "constraints": [
                    "1 <= N <= 10^5, where N is the length of the string 'S'.",
                    "'S' only contains lowercase English alphabet letters.",
                    "Time Limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "aabcabb",
                        "output": "abc",
                        "explanation": "The unique characters in 'aabcabb' are 'a', 'b', and 'c'. Possible substrings containing all these characters are 'aabcabb', 'aabc', 'abcab', 'abc', 'bca', 'cab', etc. 'abc', 'bca', and 'cab' are the shortest such substrings. 'abc' appears earliest in the string, so it is the correct output."
                    },
                    {
                        "input": "cddeyys",
                        "output": "cddeyys",
                        "explanation": "The unique characters in 'cddeyys' are 'c', 'd', 'e', 'y', and 's'. The shortest substring containing all these characters is the entire string 'cddeyys'."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Count distinct characters in the string and check all possible substrings naively.</p>",
            "<p>Try two pointers with the sliding window technique.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}