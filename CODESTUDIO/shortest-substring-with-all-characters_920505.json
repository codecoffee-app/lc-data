{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8903,
            "title": "Shortest Substring with all characters",
            "titleSlug": "shortest-substring-with-all-characters_920505",
            "content": "<h4 id=\"you-have-been-given-a-string-s-which-only-consists-of-lowercase-english-alphabet-letters-your-task-is-to-find-the-shortest-minimum-length-substring-from-s-which-contains-all-the-characters-of-s-at-least-once\">You have been given a string &#39;S&#39; which only consists of lowercase English-Alphabet letters. Your task is to find the shortest (minimum length) substring from &#39;S&#39; which contains all the characters of &#39;S&#39; at least once.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>If there are more than one substring with the shortest length, then find one which appears earlier in the string \u2018S\u2019 i.e. substring whose starting index is lowest.\n</code></pre>\n\n<h5 id=\"for-example\">For example:</h5>\n\n<pre><code>If the given string \u2018S\u2019 = &quot;abcba&quot;, then the possible substrings having all the characters of \u2018S\u2019 at least once and of minimum length are &quot;abc&quot; and &quot;cba&quot;. \n\nAs &quot;abc&quot; starts with a lower index (i.e. 0, &quot;cba&quot; starts with index 2), we will return the string &quot;abc&quot; as our shortest substring that contains all characters of &#39;S&#39;.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of input contains an integer &#39;T&#39; which denotes the number of test cases or queries to be run. Then each test case follows.\n\nThe first and the only line of each test case contains a single string &#39;S&#39;.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print a single line containing a string i.e. the shortest substring of &#39;S&#39; which contains all the characters of &#39;S&#39; at least once.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You don\u2019t need to print the output, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints:</h4>\n\n<pre><code>1 &lt;= T &lt;= 10 ^ 2\n1 &lt;= N &lt;= 5 * (10 ^ 3)\nS[i] = [a - z]\n\nWhere &#39;T&#39; denotes the number of test cases and \u2018N\u2019 is the length of the given string \u2018S\u2019.\nThe given string &#39;S&#39; consists of only English lowercase alphabets.\n\nTime Limit: 1 sec \n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\naabcabb\nabcdcda\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>abc\nabcd\n</code></pre>\n\n<h5 id=\"explanation-for-sample-output-1\">Explanation for Sample Output 1:</h5>\n\n<pre><code>Test Case 1 :\n\nSome of the possible substrings are &quot;aabcabb&quot;, &quot;aabc&quot;, &quot;abcab&quot;, &quot;abc&quot; having all the different characters of \u2018S\u2019 at least once. Out of all these substrings, we will have &quot;abc&quot;, &quot;bca&quot; and &quot;cab&quot; with the shortest length. \n\nAs &quot;abc&quot; appears earliest in the string, we will return &quot;abc&quot; in the output.\n\nTest Case 2 :\n\nSome of the possible substrings are \u201cabcd\u201d, \u201cbcdcda\u201d having all the different characters of string \u2018S\u2019 at least once. \u201cabcd\u201d is the only substring with the shortest length. \n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\ncddeyys\nbbbb\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>cddeyys\nb\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 12,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string 'S' consisting of lowercase English alphabet letters, find the shortest substring of 'S' that contains all unique characters of 'S' at least once. If multiple substrings have the same shortest length, return the substring that appears earliest in 'S'.",
                "constraints": [
                    "1 <= T <= 10^2",
                    "1 <= N <= 5 * 10^3",
                    "S[i] is a lowercase English alphabet letter"
                ],
                "testcases": [
                    {
                        "input": "s = \"aabcabb\"",
                        "output": "abc",
                        "explanation": "The unique characters in 'aabcabb' are 'a', 'b', and 'c'.  Possible substrings containing all unique characters are \"aabcabb\", \"aabc\", \"abcab\", \"abc\", \"bca\", and \"cab\". The shortest substrings are \"abc\", \"bca\", and \"cab\". \"abc\" appears earliest."
                    },
                    {
                        "input": "s = \"abcdcda\"",
                        "output": "abcd",
                        "explanation": "The unique characters in 'abcdcda' are 'a', 'b', 'c', and 'd'. The shortest substring containing all these characters is \"abcd\"."
                    },
                    {
                        "input": "s = \"cddeyys\"",
                        "output": "cddeyys",
                        "explanation": "The unique characters are 'c', 'd', 'e', 'y', and 's'. The only substring containing these characters is the string itself \"cddeyys\"."
                    },
                    {
                        "input": "s = \"bbbb\"",
                        "output": "b",
                        "explanation": "The only unique character is 'b'. The shortest substring containing it is \"b\"."
                    },
                    {
                        "input": "s = \"abcdefg\"",
                        "output": "abcdefg",
                        "explanation": "All characters are unique, so the entire string is the shortest substring."
                    },
                    {
                        "input": "s = \"aaaaaaaaa\"",
                        "output": "a",
                        "explanation": "The only unique character is 'a'. The shortest substring containing it is \"a\"."
                    },
                    {
                        "input": "s = \"zyxwvutsrqponmlkjihgfedcba\"",
                        "output": "zyxwvutsrqponmlkjihgfedcba",
                        "explanation": "All 26 lowercase letters are unique, so the entire string must be returned."
                    },
                    {
                        "input": "s = \"bacbacbac\"",
                        "output": "bac",
                        "explanation": "The unique characters are a, b, and c. The shortest substring is bac"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Count distinct characters in the string and check all possible substrings.</p>",
            "<p>Try to think of using two-pointers with the sliding window technique.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}