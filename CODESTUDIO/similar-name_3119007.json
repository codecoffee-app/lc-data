{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 16305,
            "title": "Similar Name",
            "titleSlug": "similar-name_3119007",
            "content": "<h4 id=\"being-a-class-monitor-you-have-a-list-of-names-of-your-class-students-your-task-is-to-find-the-first-name-from-the-list-which-is-similar-to-any-other-name-occurring-before-it-in-the-list\">Being a class monitor, you have a list of names of your class students. Your task is to find the first name from the list, which is similar to any other name occurring before it in the list.</h4>\n\n<h4 id=\"two-names-name1-and-name2-are-similar-if-at-least-one-of-the-following-conditions-holds\">Two names, name1 and name2, are similar if at least one of the following conditions holds.</h4>\n\n<pre><code>Both names are identical.\nname1 is a prefix of name2.\nname2 is a prefix of name1.\n</code></pre>\n\n<h4 id=\"print-the-first-name-from-the-list-which-is-similar-to-any-other-name-present-in-the-prefix-part-of-the-list-if-no-such-name-is-found-print-not-found\">Print the first name from the list, which is similar to any other name present in the prefix part of the list. If no such name is found, print \u201cnot found\u201d.</h4>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains &#39;T&#39;, denoting the number of tests.\nFor each Test :\n    The first line contains one integer &#39;N&#39;, denoting the number of names in the list.\n    Next &#39;N&#39; lines contain one string each, denoting the names in the list.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test, print one string, denoting the first name in the list, similar to another name in the prefix part of the list. If no such name is found, print \u201cnot found\u201d.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You are not required to print the expected output. It has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints -</h5>\n\n<pre><code>1 &lt;= &#39;T&#39; &lt;= 5\n1 &lt;= &#39;N&#39; &lt;= 10^5\n1 &lt;= the length of name[i] &lt;= 60   i \u2208  (1,N)\nAll letters in name[i] are lowercase english letters, in the range &#39;a&#39; to &#39;j&#39; inclusive.\nNote - Sum of &#39;N&#39; over all test cases does not exceed 10^5.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n4\naab\naac\naacgh\naabgh\n3\nabc\naba\nbaa\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>aacgh\nnot found\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1 :</h5>\n\n<pre><code>For case 1:\n    Start checking from the first name to the last.\n    For &quot;aab&quot;, a similar name is &quot;aabgh&quot;, but that&#39;s not present in the prefix list.\n    For &quot;aac&quot;, a similar name is &quot;aacgh&quot;, but that\u2019s also not present in the prefix of list.\n    For &quot;aacgh&quot;, similar name is &quot;aac&quot; which is present in prefix of list. Hence our answer is &quot;aacgh&quot;.\n\nFor Case 2:\n    No name in the list is similar to any other name. Hence print &quot;not found&quot;.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n3\nab\nabb\nabbb\n2\ndc\nd\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>abb\nd\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 9,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a list of student names, identify the first name that is similar to any name appearing before it in the list. Two names are considered similar if they are identical, or if one is a prefix of the other. If no such name is found, return 'not found'.",
                "constraints": [
                    "1 <= 'T' <= 5",
                    "1 <= 'N' <= 10^5",
                    "1 <= the length of name[i] <= 60   i \u2208  (1,N)",
                    "All letters in name[i] are lowercase english letters, in the range 'a' to 'j' inclusive.",
                    "Sum of 'N' over all test cases does not exceed 10^5."
                ],
                "testcases": [
                    {
                        "input": "N = 4, A = [\"aab\", \"aac\", \"aacgh\", \"aabgh\"]",
                        "output": "aacgh",
                        "explanation": "The name 'aacgh' is similar to 'aac' which appears earlier in the list."
                    },
                    {
                        "input": "N = 3, A = [\"abc\", \"aba\", \"baa\"]",
                        "output": "not found",
                        "explanation": "No name in the list is similar to any name preceding it."
                    },
                    {
                        "input": "N = 3, A = [\"ab\", \"abb\", \"abbb\"]",
                        "output": "abb",
                        "explanation": "'abb' is similar to 'ab' because 'ab' is a prefix of 'abb'."
                    },
                    {
                        "input": "N = 2, A = [\"dc\", \"d\"]",
                        "output": "d",
                        "explanation": "'d' is similar to 'dc' because 'd' is a prefix of 'dc'."
                    },
                    {
                        "input": "N = 5, A = [\"apple\", \"app\", \"application\", \"banana\", \"app\"]",
                        "output": "app",
                        "explanation": "The name 'app' is similar to 'apple' as 'app' is a prefix of 'apple'."
                    },
                    {
                        "input": "N = 1, A = [\"xyz\"]",
                        "output": "not found",
                        "explanation": "Since there are no preceding names, no similarity can be established."
                    },
                    {
                        "input": "N = 3, A = [\"aa\", \"aa\", \"aa\"]",
                        "output": "aa",
                        "explanation": "The second 'aa' is same as the first 'aa'."
                    },
                    {
                        "input": "N = 5, A = [\"test\", \"testing\", \"testify\", \"test\", \"tester\"]",
                        "output": "test",
                        "explanation": "The second 'test' is identical to the first 'test'."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you check for each pair of names?</p>",
            "<p>Can you optimize the prefix string searching using a suitable data structure?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Tries",
                "slug": "tries"
            },
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}