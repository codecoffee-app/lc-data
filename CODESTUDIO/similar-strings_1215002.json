{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10422,
            "title": "similar Strings",
            "titleSlug": "similar-strings_1215002",
            "content": "<h4 id=\"you-are-given-two-strings-a-and-b-each-of-length-n-your-task-is-to-print-1-if-a-is-similar-to-b\">You are given two strings, \u2018A\u2019 and \u2018B\u2019 each of length \u2018N\u2019. Your task is to print 1 if \u2018A\u2019 is similar to \u2018B\u2019.</h4>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>String \u2018A\u2019 is said to be similar to string \u2018B\u2019 if and only if \n1. \u2018A\u2019 is equal to \u2018B\u2019.\n2. Divide both \u2018A\u2019 and \u2018B\u2019 into two \u2013 two strings \u2018A1\u2019, \u2018A2\u2019 , \u2018B1\u2019 and \u2018B2\u2019 such that both of them(&#39;A1&#39; and &#39;A2&#39;) have same size. Then at least one of the following must hold true:\n   a. \u2018A1\u2019 is similar to \u2018B1\u2019 and \u2018A2\u2019 is similar to \u2018B2\u2019.\n   b. \u2018A1\u2019 is similar to \u2018B2\u2019 and \u2018A2\u2019 is similar to \u2018B1\u2019.\n</code></pre>\n\n<h4 id=\"input-format\">Input Format :</h4>\n\n<pre><code>The first line of input contains an integer &#39;T&#39; representing the number of test cases.\n\nThe first line of each test case contains two space-separated strings \u2018A\u2019 and \u2018B\u2019.\n</code></pre>\n\n<h4 id=\"output-format\">Output Format :</h4>\n\n<pre><code>For each test case, print 1 if \u2018A\u2019 is similar to \u2018B\u2019, else print 0.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints :</h4>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;=  |A| = |B| = 3000\nBoth A, B contain only lowercase English letters.\n\nWhere |A| and |B| are the length of strings.\n\nTime Limit: 1 sec\n</code></pre>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code> You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1 :</h4>\n\n<pre><code>2\naa aa\nab ba\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1 :</h4>\n\n<pre><code>1\n1\n</code></pre>\n\n<h4 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1 :</h4>\n\n<pre><code>Test Case 1 :  \nGiven A = \u201caa\u201d and B = \u201caa\u201d \nHere A and B are equal. So A is similar to B.\n\nTest Case 2 : \nGiven A = \u201cab\u201d = \u201ca\u201d + \u201cb\u201d = A1 + A2\nAnd    B = \u201cba\u201d = \u201cb\u201d + \u201ca\u201d = B1 + B2\nHere A1 is similar to B2 and A2 is similar to B1\nSo, A is similar to B.\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2 :</h4>\n\n<pre><code>2\nab cd \naaca acaa\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2 :</h4>\n\n<pre><code>0\n1\n</code></pre>\n\n<h4 id=\"explanation-of-sample-input-2\">Explanation Of Sample Input 2 :</h4>\n\n<pre><code>Test Case 1 :  \nGiven A = \u201cab\u201d and B = \u201ccd\u201d. \nWe can see that A and B are not similar. \n\nTest Case 2 : \nGiven A = \u201caaca\u201d and B = \u201cacaa\u201d. \nA = \u201caa\u201d + \u201cca\u201d  A1 = \u201caa\u201d and A2 = \u201cca\u201d \nB = \u201cac\u201d + \u201caa\u201d  B1 = \u201cac\u201d and B2 = \u201cca\u201d\nHere A1 = B2 So, A1 is similar to B2. \nNow consider A2 = \u201cca\u201d and B1 =\u201dac\u201d \nDivide both them into equal size A2 = \u201cc\u201d + \u201ca\u201d and B1 = \u201ca\u201d + \u201cc\u201d. \nWe can easily see that A2 and B1 are similar. \nSo, we have A1 is similar to B2 and A2 is similar to B1. \nHence A and B are similar to each other.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": -7,
            "dislikes": "NA",
            "rephrased": {
                "body": "You are given two strings, 'A' and 'B', both of length 'N'. Determine if string 'A' is similar to string 'B' according to the following definition:\n\nString 'A' is considered similar to string 'B' if:\n\n1.  'A' is exactly equal to 'B', OR\n2.  It's possible to divide both 'A' and 'B' into two equal-sized substrings, 'A1', 'A2', 'B1', and 'B2', such that at least one of the following conditions is true:\n    *   'A1' is similar to 'B1' AND 'A2' is similar to 'B2'\n    *   'A1' is similar to 'B2' AND 'A2' is similar to 'B1'\n\nImplement a function that returns 1 if 'A' is similar to 'B', and 0 otherwise.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= |A| = |B| <= 3000",
                    "Both A and B contain only lowercase English letters."
                ],
                "testcases": [
                    {
                        "input": "aa aa",
                        "output": "1",
                        "explanation": "A = 'aa' and B = 'aa'. Since A and B are equal, A is similar to B."
                    },
                    {
                        "input": "ab ba",
                        "output": "1",
                        "explanation": "A = 'ab' and B = 'ba'.  A1 = 'a', A2 = 'b', B1 = 'b', B2 = 'a'. A1 is similar to B2 and A2 is similar to B1. Thus, A is similar to B."
                    },
                    {
                        "input": "ab cd",
                        "output": "0",
                        "explanation": "A = 'ab' and B = 'cd'.  A and B are not similar by any means, hence the output is 0."
                    },
                    {
                        "input": "aaca acaa",
                        "output": "1",
                        "explanation": "A = 'aaca' and B = 'acaa'.  A1 = 'aa', A2 = 'ca', B1 = 'ac', B2 = 'aa'. A1 is similar to B2. A2 = 'ca', B1 = 'ac', so A21='c', A22='a', B11='a', B12='c'. Thus A21 is similar to B12 and A22 is similar to B11 which proves that A2 is similar to B1. Thus A is similar to B."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Think of a solution similar to generate all possible combinations.</p>",
            "<p>Optimize the previous approach by comparing only the lexicographically smallest arrangement of both given strings.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}