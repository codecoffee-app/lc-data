{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 15844,
            "title": "Simple paths",
            "titleSlug": "simple-paths_2825011",
            "content": "<h4 id=\"you-are-given-a-directed-graph-containing-n-nodes-and-m-edges-where-each-edge-is-associated-with-some-cost-each-node-in-the-graph-can-have-at-most-one-incoming-edge-and-at-most-one-outgoing-edge-a-node-is-called-a-source-node-if-it-has-an-outgoing-edge-but-no-incoming-edge-and-a-node-is-called-a-destination-node-if-it-has-an-incoming-edge-but-no-outgoing-edge\">You are given a directed graph containing \u2018N\u2019 nodes and \u2018M\u2019 edges, where each edge is associated with some cost. Each node in the graph can have at most one incoming edge and at most one outgoing edge. A node is called a \u2018source\u2019 node if it has an outgoing edge but no incoming edge. And a node is called a \u2018destination\u2019 node if it has an incoming edge but no outgoing edge.</h4>\n\n<h4 id=\"a-simple-path-in-this-graph-is-a-path-that-starts-from-a-source-node-and-ends-at-a-destination-node-the-cost-of-such-a-path-is-the-minimum-cost-among-all-edges-traversed-on-this-path\">A simple path in this graph is a path that starts from a \u2018source\u2019 node and ends at a \u2018destination\u2019 node. The cost of such a path is the minimum cost among all edges traversed on this path.</h4>\n\n<h4 id=\"your-task-is-to-find-all-simple-paths-along-with-their-costs-for-the-given-graph\">Your task is to find all simple paths along with their costs for the given graph.</h4>\n\n<h4 id=\"note\">Note :-</h4>\n\n<pre><code>Given graph may be not connected.\nNodes are numbered from [1, 2 \u2026.. N] in input data.\nOutput data must be sorted by \u2018source\u2019 nodes.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains &#39;T&#39;, denoting the number of tests.\nFor each Test :\nThe first line contains two space-separated integers, &#39;N&#39; and &#39;M&#39;, denoting the number of nodes and number of edges, respectively.\nNext &#39;M&#39; lines contain three integers &#39;x[i]&#39;, &#39;y[i]&#39;, &#39;w[i]&#39; denoting there is a directed edge from node &#39;x[i]&#39; to node &#39;y[i]&#39;, and having cost &#39;w[i]&#39;.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each Test :\nThe first line contains an integer &#39;P&#39;, denoting the number of simple paths.\nNext &#39;P&#39; lines contain three integers &#39;a[i]&#39;, &#39;b[i]&#39;, &#39;c[i]&#39; denoting there is a path starting from node &#39;a[i]&#39;, ending at node &#39;b[i]&#39; and having cost &#39;c[i]&#39;.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You are not required to print the expected output. It has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints -</h5>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= N, M &lt;= 10^5\n1 &lt;= x[i], y[i] &lt;= N  i \u2208  (1, M)\n0 &lt;= w[i] &lt;= 10^9  i \u2208  (1, M)\nNote - Sum of N and sum of M over all test cases does not exceed 10^5.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>1\n9 6\n3 1 10\n2 8 13\n4 6 19\n7 4 8\n5 9 21\n9 7 11\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>3\n2 8 13\n3 1 10\n5 6 8\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1:</h5>\n\n<pre><code>There are 3 simple paths in given graph, which are :-\nPath (3 -&gt; 1) with cost 10.\nPath (2 -&gt; 8) with cost 13.\nPath (5 -&gt; 9 -&gt; 7 -&gt; 4 -&gt; 6) with cost 8, as minimum(21, 11, 8, 19) = 8.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n4 2\n1 2 19\n3 4 12\n3 3\n1 2 12\n2 3 9\n3 1 8\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>2\n1 2 19\n3 4 12\n0\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": -8,
            "dislikes": "NA",
            "rephrased": {
                "body": "You are given a directed graph with N nodes and M edges. Each node has at most one incoming and one outgoing edge. A 'source' node has only an outgoing edge, while a 'destination' node has only an incoming edge. A simple path starts at a source node and ends at a destination node. The cost of a path is the minimum edge cost along that path. Find all simple paths and their costs, sorting the results by the source node.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= N, M <= 10^5",
                    "1 <= x[i], y[i] <= N for all i in (1, M)",
                    "0 <= w[i] <= 10^9 for all i in (1, M)",
                    "Sum of N and sum of M over all test cases does not exceed 10^5.",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "9 6\n3 1 10\n2 8 13\n4 6 19\n7 4 8\n5 9 21\n9 7 11",
                        "output": "3\n2 8 13\n3 1 10\n5 6 8",
                        "explanation": "The graph contains three simple paths:\n- Path from node 2 to 8 with cost 13.\n- Path from node 3 to 1 with cost 10.\n- Path from node 5 to 6. The path is 5 -> 9 -> 7 -> 4 -> 6.  The edge weights are 21, 11, 8, 19. The minimum weight is 8."
                    },
                    {
                        "input": "4 2\n1 2 19\n3 4 12",
                        "output": "2\n1 2 19\n3 4 12",
                        "explanation": null
                    },
                    {
                        "input": "3 3\n1 2 12\n2 3 9\n3 1 8",
                        "output": "0",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Does each \u2018source\u2019 node necessarily have its distinct \u2018destination\u2019 node?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Depth-first Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}