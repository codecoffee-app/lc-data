{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9177,
            "title": "Sliding Window Maximum",
            "titleSlug": "sliding-window-maximum_980226",
            "content": "<h4 id=\"given-an-array-list-of-integers-of-length-n-there-is-a-sliding-window-of-size-k-which-moves-from-the-beginning-of-the-array-to-the-very-end-you-can-only-see-the-k-numbers-in-a-particular-window-at-a-time-for-each-of-the-n-k-1-different-windows-thus-formed-you-are-supposed-to-return-the-maximum-element-in-each-of-them-from-the-given-array-list\">Given an array/list of integers of length \u2018N\u2019, there is a sliding window of size \u2018K\u2019 which moves from the beginning of the array, to the very end. You can only see the \u2018K\u2019 numbers in a particular window at a time. For each of the &#39;N&#39;-&#39;K&#39;+1 different windows thus formed, you are supposed to return the maximum element in each of them, from the given array/list.</h4>\n\n<h5 id=\"input-format\">Input format :</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 denoting the number of test cases. The &#39;T&#39; test cases follow.\n\nThe first line of each test case contains two single space-separated integers \u2018N\u2019 and \u2018K\u2019 denoting the number of elements in the array/list and the size of the window size respectively.\n\nThe second line contains \u2018N\u2019 single space-separated integers denoting the elements of the array/list.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case, print the output array/list which contains the sliding window maximum in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 50\n1 &lt;= N &lt;= 10^4\n1 &lt;= K &lt;= N\n0 &lt;= ARR[i] &lt;= 10^5\n\nWhere, ARR[i] denotes the i-th element in the array/list.\n\nTime Limit: 1 sec.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n3 1\n1 2 2\n5 2\n4 2 1 4 4\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>1 2 2\n4 2 4 4\n</code></pre>\n\n<h5 id=\"explanation-to-sample-input-1\">Explanation to Sample Input 1 :</h5>\n\n<pre><code>In the first test case, \nThe maximum of window {1} is 1.\nThe maximum of window {2} is 2.\nThe maximum of window {2} is 2.\nSo the output will be {1, 2, 2}.\n\nIn the second test case, \nThe maximum of window {4,2} is 4.\nThe maximum of window {2,1} is 2.\nThe maximum of window {1,4} is 4.\nThe maximum of window {4,4} is 4.\nSo the output will be {4, 2, 4, 4}.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n5 3\n2 2 2 3 3\n7 4\n2 3 1 4 5 1 5\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>2 3 3\n4 5 5 5\n</code></pre>\n\n<h5 id=\"explanation-to-sample-input-2\">Explanation to Sample Input 2 :</h5>\n\n<pre><code>In the first test case, \nThe maximum of window {2,2,2} is 2.\nThe maximum of window {2,2,3} is 3.\nThe maximum of window {2,3,3} is 3.\nSo the output will be {2, 3, 3}.\n\nIn the second test case, \nThe maximum of window {2,3,1,4} is 4.\nThe maximum of window {3,1,4,5} is 5.\nThe maximum of window {1,4,5,1} is 5.\nThe maximum of window {4,5,1,5} is 5.\nSo the output will be {4, 5, 5, 5}.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 52,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of integers of size N, find the maximum element in each sliding window of size K as it moves from the beginning to the end of the array. For each window, return the maximum element.",
                "constraints": [
                    "1 <= T <= 50",
                    "1 <= N <= 10^4",
                    "1 <= K <= N",
                    "0 <= ARR[i] <= 10^5",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "3 1\n1 2 2",
                        "output": "1 2 2",
                        "explanation": "Window 1: {1}, Maximum = 1\nWindow 2: {2}, Maximum = 2\nWindow 3: {2}, Maximum = 2"
                    },
                    {
                        "input": "5 2\n4 2 1 4 4",
                        "output": "4 2 4 4",
                        "explanation": "Window 1: {4, 2}, Maximum = 4\nWindow 2: {2, 1}, Maximum = 2\nWindow 3: {1, 4}, Maximum = 4\nWindow 4: {4, 4}, Maximum = 4"
                    },
                    {
                        "input": "5 3\n2 2 2 3 3",
                        "output": "2 3 3",
                        "explanation": "Window 1: {2, 2, 2}, Maximum = 2\nWindow 2: {2, 2, 3}, Maximum = 3\nWindow 3: {2, 3, 3}, Maximum = 3"
                    },
                    {
                        "input": "7 4\n2 3 1 4 5 1 5",
                        "output": "4 5 5 5",
                        "explanation": "Window 1: {2, 3, 1, 4}, Maximum = 4\nWindow 2: {3, 1, 4, 5}, Maximum = 5\nWindow 3: {1, 4, 5, 1}, Maximum = 5\nWindow 4: {4, 5, 1, 5}, Maximum = 5"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Keep on moving the sliding window of size \u2018K\u2019 from the start of the array/list till the end.</p>",
            "<p>Can you think of optimising the step where we were finding the maximum in the window?</p>",
            "<p>Can you think of using a deque?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}