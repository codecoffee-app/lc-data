{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12572,
            "title": "Smallest String After Ordered Operations",
            "titleSlug": "smallest-string-after-ordered-operations_1466950",
            "content": "<h4 id=\"you-are-given-a-string-s-of-length-n-and-a-positive-integer-k-you-can-perform-the-following-operation-any-number-of-times-on-s\">You are given a string \u2018S\u2019 of length \u2018N\u2019 and a positive integer \u2018K\u2019. You can perform the following operation any number of times on \u2019S\u2019.</h4>\n\n<h4 id=\"in-each-operation-you-can-delete-one-of-the-first-k-characters-of-s-and-append-it-at-the-end-of-the-s\">In each operation, you can delete one of the first \u2018K\u2019 characters of \u2018S\u2019 and append it at the end of the \u2018S\u2019.</h4>\n\n<h4 id=\"you-have-to-find-the-lexicographically-smallest-string-you-can-obtain-by-performing-any-number-of-operations\">You have to find the lexicographically smallest string you can obtain by performing any number of operations.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>String \u2018p\u2019 is lexicographically smaller than string \u2018q\u2019, if \u2018p\u2019 is a prefix of \u2018q\u2019, is not equal to \u2018q\u2019 or there exists \u2018i\u2019, such that \u2018p[i]\u2019  &lt; \u2009\u2019q[i]\u2019 and for all \u2018j\u2019 \u2009&lt;\u2009 \u2019i\u2019 it is satisfied that \u2018p[j]\u2019  = \u2009\u2019q[j]\u2019.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 representing the number of test cases. \n\nThe first line of each test case will contain two space-separated integers  \u2018N\u2019 and \u2018K\u2019 which denotes the length of \u2018S\u2019 and integer \u2018K\u2019. \n\nThe second line of each test case will contain a single string \u2018S\u2019.  \n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, return the lexicographically smallest string obtained by performing any number of operations on \u2018S\u2019.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You don\u2019t need to print anything; it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 10^3\n1&lt;= K &lt;= N\nS[ i ] belongs to {a to z}\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n5 1\nacbaa\n3 2\nonm\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>aaacb\nmno\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of sample input 1:</h5>\n\n<pre><code>In the first test case, \nIn the first move we will delete \u2018a\u2019 from the beginning and put it at the end, \u2018S\u2019 = \u201ccbaaa\u201d.\nIn the second move we will delete \u2018c\u2019 from the beginning and put it at the end, \u2018S\u2019 = \u201cbaaac\u201d.\nIn the third move we will delete \u2018b\u2019 from the beginning and put it at the end, \u2018S\u2019 = \u2018aaacb\u2019.\n\nFor the second test case, \nIn the first move we will delete \u2018n\u2019 and put it at the end, \u2018S\u2019 = \u201comn\u201d.\nIn the second move we will delete \u2018o\u2019 from the beginning and put it at the end, \u2018S\u2019 = \u201cmno\u201d.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n1 1      \nt\n12 12\ncodingninjas\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>t\nacdgiijnnnos\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 4,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string 'S' of length 'N' and a positive integer 'K', you can perform the following operation any number of times: delete one of the first 'K' characters of 'S' and append it to the end of 'S'. Find the lexicographically smallest string obtainable by performing any number of operations.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10^3",
                    "1 <= K <= N",
                    "S[i] belongs to {a to z}",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "5 1\nacbaa",
                        "output": "aaacb",
                        "explanation": "By performing the following operations:\n1. Delete 'a' from the beginning and append it to the end: 'S' = \"cbaaa\".\n2. Delete 'c' from the beginning and append it to the end: 'S' = \"baaac\".\n3. Delete 'b' from the beginning and append it to the end: 'S' = \"aaacb\".\n\n'aaacb' is the lexicographically smallest string achievable."
                    },
                    {
                        "input": "3 2\nonm",
                        "output": "mno",
                        "explanation": "By performing the following operations:\n1. Delete 'n' and append it to the end: 'S' = \"omn\".\n2. Delete 'o' from the beginning and append it to the end: 'S' = \"mno\".\n\n'mno' is the lexicographically smallest string achievable."
                    },
                    {
                        "input": "1 1\nt",
                        "output": "t",
                        "explanation": null
                    },
                    {
                        "input": "12 12\ncodingninjas",
                        "output": "acdgiijnnnos",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can we obtain all the possible permutations?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}