{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9768,
            "title": "Smart Intervals",
            "titleSlug": "smart-intervals_1089635",
            "content": "<h4 id=\"you-are-given-an-array-of-intervals-where-intervals-i-start-i-end-i-and-each-start-i-is-unique\">You are given an array of intervals, where intervals[i] = [start(i), end(i)] and each start(i) is unique.</h4>\n\n<pre><code>The smart interval for an interval \u2018i\u2019 is an interval \u2018j\u2019 such that start(j) is greater than or equal to end(i) and start(j) should be minimum.\n</code></pre>\n\n<h4 id=\"your-task-is-to-return-an-array-of-smart-interval-indices-for-each-interval-if-no-smart-interval-exists-for-an-interval-i-then-place-1-at-index-i-in-the-output-array\">Your task is to return an array of smart interval indices for each interval. If no smart interval exists for an interval \u2018i\u2019, then place -1 at index \u2018i\u2019 in the output array.</h4>\n\n<h4 id=\"input-format\">Input Format:</h4>\n\n<pre><code>The first line contains a single integer T representing the number of test cases.\n\nThe first line of the test case contains an integer \u2018N\u2019 denoting the number of intervals.\n\nEach of the following \u2018N\u2019 lines contains 2 space-separated integers denoting the start and end of an interval. \n</code></pre>\n\n<h4 id=\"output-format\">Output Format :</h4>\n\n<pre><code>The first and only line of output contains \u2018N\u2019 space-separated integers as described above.\n\nThe output of every test case is printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints:</h4>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 10^4\n1 &lt;= start, end &lt;= 10^4\n\nTime Limit : 1sec\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1:</h4>\n\n<pre><code>1\n3\n1 2\n2 3\n3 4\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample output 1:</h4>\n\n<pre><code>1 2 -1\n</code></pre>\n\n<h4 id=\"explanation-of-sample-output-1\">Explanation of Sample output 1:</h4>\n\n<pre><code>Smart interval for the interval [1, 2] is [2, 3] because the start point of [2, 3] is equal to the end point of [1, 2]. The index of [2, 3] is 1.\nSmart interval for the interval [2, 3] is [3, 4] because the start point of [3, 4] is equal to the end point of [2, 3]. The index of [3, 4] is 2.\nSmart interval for the interval [3, 4] does not exist. Hence, -1.\nTherefore, the final answer is [1, 2, -1]. \n</code></pre>\n\n<h4 id=\"sample-input2\">Sample Input2:</h4>\n\n<pre><code>2\n2\n3 2\n2 3\n1 \n1 1\n</code></pre>\n\n<h4 id=\"sample-output2\">Sample Output2:</h4>\n\n<pre><code>1 0\n0\n</code></pre>\n\n<h4 id=\"explanation-of-sample-output-2\">Explanation of Sample output 2</h4>\n\n<pre><code>Test Case 1:\nSmart interval for the interval [3, 2] is [2, 3]. The index of [2, 3] is 1.\nSmart interval for the interval [2, 3] is [3, 2]. The index of [3, 2] is 2. \nHence, the answer is [1, 0]. \n\nTest Case 2: \nDo you really need an explanation? \n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 1,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of intervals where `intervals[i] = [start(i), end(i)]` and each `start(i)` is unique, find the smart interval for each interval `i`. A smart interval `j` for interval `i` is defined as an interval where `start(j)` is greater than or equal to `end(i)`, and `start(j)` is the minimum among all such intervals.  Return an array of smart interval indices. If no smart interval exists for interval `i`, place -1 at index `i` in the output array.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10^4",
                    "1 <= start, end <= 10^4"
                ],
                "testcases": [
                    {
                        "input": "n = 3, intervals=[[1,2],[2,3],[3,4]]",
                        "output": "1 2 -1",
                        "explanation": "Smart interval for [1, 2] is [2, 3] (index 1). Smart interval for [2, 3] is [3, 4] (index 2). No smart interval exists for [3, 4], hence -1."
                    },
                    {
                        "input": "n = 2, intervals=[[3,2],[2,3]]",
                        "output": "1 0",
                        "explanation": "Smart interval for [3, 2] is [2, 3] (index 1). Smart interval for [2, 3] is [3, 2] (index 0)."
                    },
                    {
                        "input": "n = 1, intervals=[[1,1]]",
                        "output": "0",
                        "explanation": "Smart interval for [1, 1] is [1, 1] (index 0)."
                    },
                    {
                        "input": "n = 4, intervals=[[1,5],[6,10],[11,15],[16,20]]",
                        "output": "1 2 3 -1",
                        "explanation": "Smart interval for [1,5] is [6,10] (index 1). Smart interval for [6,10] is [11,15] (index 2). Smart interval for [11,15] is [16,20] (index 3). No smart interval exists for [16, 20], hence -1."
                    },
                    {
                        "input": "n = 5, intervals=[[5,8],[3,5],[1,3],[9,12],[13,15]]",
                        "output": "3 0 1 4 -1",
                        "explanation": "Smart interval for [5,8] is [9,12] (index 3). Smart interval for [3,5] is [5,8] (index 0). Smart interval for [1,3] is [3,5] (index 1). Smart interval for [9,12] is [13,15] (index 4). No smart interval exists for [13,15], hence -1."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Check for all the possibilities using brute force.</p>",
            "<p>How can we optimise the previous approach? Can we apply binary search to get the smart interval?&nbsp;</p>",
            "<p>Can you think of eliminating the use of binary search?&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}