{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9736,
            "title": "Social Networking Graph",
            "titleSlug": "social-networking-graph_1082557",
            "content": "<h4 id=\"you-are-given-a-graph-with-n-nodes-numbered-1-to-n-and-e-edges-and-you-have-to-solve-m-queries-each-query-consists-of-two-integers-s-and-t-your-task-is-to-find-the-count-of-nodes-that-are-at-a-distance-of-t-from-the-node-s\">You are given a graph with &#39;N&#39; nodes numbered 1 to &#39;N&#39;, and &#39;E&#39; edges, and you have to solve &#39;M&#39; queries. Each query consists of two integers &#39;S&#39; and &#39;T&#39;. Your task is to find the count of nodes that are at a distance of &#39;T&#39; from the node &#39;S&#39;.</h4>\n\n<h4 id=\"two-nodes-that-are-directly-connected-with-each-other-are-considered-to-be-at-a-distance-of-1-unit-while-two-nodes-having-a-common-contact-without-having-direct-connectivity-are-considered-to-be-at-a-distance-of-2-units-in-a-similar-manner-we-can-calculate-distances-between-nodes\">Two nodes that are directly connected with each other are considered to be at a distance of 1 unit. While two nodes having a common contact without having direct connectivity, are considered to be at a distance of  2 units. In a similar manner, we can calculate distances between nodes.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>The graph may contain cycles.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of each test case contains two space-separated integers &#39;N&#39; and &#39;E&#39;, the number of nodes and edges in the graph respectively.\n\nThe following &#39;E&#39; lines contain two space-separated integers &#39;U&#39; and &#39;V&#39;, denoting an undirected edge between the nodes &#39;U&#39; and &#39;V&#39;.\n\nThe next line contains an integer, &#39;M&#39;, denoting the number of queries.\n\nThen &#39;M&#39; lines follow:\n\nEach line consists of two integers &#39;S&#39; and &#39;T&#39;, where &#39;S&#39; denotes the source node, and &#39;T&#39; denotes the connectivity distance to be processed.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each query, print a single line containing a single integer denoting the count of nodes as asked in the problem statement.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function. \n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= N &lt;= 3 * 10 ^ 3\n1 &lt;= E &lt;= 10 ^ 4\n1 &lt;= U, V &lt;= N\n1 &lt;= M &lt;= 100\n1 &lt;= S &lt;= N\n1 &lt;= T &lt;= 2500\n\nTime Limit: 1 sec.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>4 3\n1 2\n2 3\n3 4\n2\n3 1\n3 2\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>2\n1\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1:</h5>\n\n<p><img src=\"https://files.codingninjas.in/121-7138.jpg\" alt=\"alt text\"></p>\n\n<pre><code>The first query asks us to find the number of nodes at a distance of 1 from node 3. Clearly, node 2 and node 4 are at a distance of 1 from node 3. Hence we get 2 as our answer. \n\nThe second query asks us to find the number of nodes at a distance of 2 from node 3. Clearly, only node, i.e node 1 is at a distance of 2 from node 3. Hence we get 1 as our answer. \n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>5 6\n1 2\n1 3\n1 5\n2 4\n3 5\n4 5\n2\n4 2\n5 1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>2\n3\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-2\">Explanation of Sample Input 2:</h5>\n\n<p><img src=\"https://files.codingninjas.in/122-7139.jpg\" alt=\"alt text\"></p>\n\n<pre><code>The first query asks us to find the number of nodes at a distance of 2 from node 4. Clearly, node 1 and node 4 are at a distance 2 from node 4. Hence we get 2 as our answer. \n\nThe second query asks us to find the number of nodes at a distance of 1 from node 5. Clearly, node 3, node 1, and node 4 are at a distance of 1 from node 5. Hence we get 3 as our answer. \n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 5,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an undirected graph with 'N' nodes (numbered 1 to 'N') and 'E' edges, determine the number of nodes at a specified distance 'T' from a given source node 'S' for 'M' queries. The distance between two directly connected nodes is considered 1.  Nodes connected through a common neighbor have a distance of 2, and so on.  The graph may contain cycles.",
                "constraints": [
                    "1 <= N <= 3 * 10 ^ 3",
                    "1 <= E <= 10 ^ 4",
                    "1 <= U, V <= N",
                    "1 <= M <= 100",
                    "1 <= S <= N",
                    "1 <= T <= 2500"
                ],
                "testcases": [
                    {
                        "input": "n = 4, e = 3, m = 2, edges = [(1, 2), (2, 3), (3, 4)], queries = [(3, 1), (3, 2)]",
                        "output": "[2, 1]",
                        "explanation": "For the first query (3, 1), nodes 2 and 4 are at a distance of 1 from node 3. For the second query (3, 2), only node 1 is at a distance of 2 from node 3."
                    },
                    {
                        "input": "n = 5, e = 6, m = 2, edges = [(1, 2), (1, 3), (1, 5), (2, 4), (3, 5), (4, 5)], queries = [(4, 2), (5, 1)]",
                        "output": "[2, 3]",
                        "explanation": "For the first query (4, 2), nodes 1 and 3 are at a distance of 2 from node 4. For the second query (5, 1), nodes 1, 3, and 4 are at a distance of 1 from node 5."
                    },
                    {
                        "input": "n = 6, e = 5, m = 1, edges = [(1, 2), (2, 3), (3, 4), (4, 5), (5,6)], queries = [(1, 5)]",
                        "output": "[1]",
                        "explanation": "For the query (1, 5), only node 6 is at a distance of 5 from node 1."
                    },
                    {
                        "input": "n = 3, e = 3, m = 1, edges = [(1, 2), (2, 3), (3, 1)], queries = [(1, 2)]",
                        "output": "[1]",
                        "explanation": "For the query (1, 2), only node 3 is at a distance of 2 from node 1."
                    },
                    {
                        "input": "n = 5, e = 4, m = 1, edges = [(1, 2), (2, 3), (3, 4), (4, 5)], queries = [(1, 4)]",
                        "output": "[1]",
                        "explanation": "For the query (1, 4), only node 5 is at a distance of 4 from node 1."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Think how will you traverse the graph.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Breadth-first Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}