{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8505,
            "title": "Sort An Array of 0s, 1s and 2s",
            "titleSlug": "sort-an-array-of-0s-1s-and-2s_892977",
            "content": "<h4 id=\"you-have-been-given-an-array-list-arr-consisting-of-n-elements\">You have been given an array/list <em><strong>&#39;arr&#39;</strong></em> consisting of <em><strong>&#39;n&#39;</strong></em> elements.</h4>\n\n<p><br/></p>\n\n<h4 id=\"each-element-in-the-array-is-either-0-1-or-2\">Each element in the array is either 0, 1 or 2.</h4>\n\n<p><br/></p>\n\n<h4 id=\"sort-this-array-list-in-increasing-order\">Sort this array/list in increasing order.</h4>\n\n<p><br/></p>\n\n<h4 id=\"do-not-make-a-new-array-list-make-changes-in-the-given-array-list\">Do not make a new array/list. Make changes in the given array/list.</h4>\n\n<p><br/></p>\n\n<h5 id=\"example\">Example :</h5>\n\n<pre><code>Input: &#39;arr&#39; = [2, 2, 2, 2, 0, 0, 1, 0]\n\nOutput: Final &#39;arr&#39; = [0, 0, 0, 1, 2, 2, 2, 2]\n\nExplanation: The array is sorted in increasing order.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains a positive integer \u2018n\u2019, which represents the length of the array/list.\n\nThe second line of each test case contains \u2018n\u2019 single space-separated integers representing the elements of the array/list.\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>The output will print \u2018n\u2019 single space-separated integers of the sorted array/list.\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the given function.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>8\n2 2 2 2 0 0 1 0\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>0 0 0 1 2 2 2 2\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of sample input 1 :</h5>\n\n<pre><code>The initial array &#39;arr&#39; is [2, 2, 2, 2, 0, 0, 1, 0].\n\nAfter sorting the array in increasing order, &#39;arr&#39; is equal to:\n[0, 0, 0, 1, 2, 2, 2, 2]\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>5\n1 1 1 1 1\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>1 1 1 1 1\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"expected-time-complexity\">Expected time complexity :</h5>\n\n<pre><code>The expected time complexity is O(n).\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= &#39;n&#39; &lt;= 10 ^ 4\n0 &lt;= &#39;arr[i]&#39; &lt;= 2\n\nTime limit: 1 second\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 174,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array `arr` of size `n` containing only the integers 0, 1, and 2, sort the array in-place in increasing order (0, 1, 2).",
                "constraints": [
                    "1 <= n <= 10 ^ 4",
                    "0 <= arr[i] <= 2",
                    "Time limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "n = 8, arr = [2, 2, 2, 2, 0, 0, 1, 0]",
                        "output": "0 0 0 1 2 2 2 2",
                        "explanation": "The initial array [2, 2, 2, 2, 0, 0, 1, 0] is sorted to [0, 0, 0, 1, 2, 2, 2, 2]."
                    },
                    {
                        "input": "n = 5, arr = [1, 1, 1, 1, 1]",
                        "output": "1 1 1 1 1",
                        "explanation": "The array is already sorted and contains only 1s."
                    },
                    {
                        "input": "n = 7, arr = [0, 1, 2, 0, 1, 2, 0]",
                        "output": "0 0 0 1 1 2 2",
                        "explanation": "The array is sorted with 0s first, then 1s, and finally 2s."
                    },
                    {
                        "input": "n = 4, arr = [2, 1, 0, 2]",
                        "output": "0 1 2 2",
                        "explanation": "A simple test case to verify the sorting logic."
                    },
                    {
                        "input": "n = 1, arr = [2]",
                        "output": "2",
                        "explanation": "A single element array which remains unchanged after the operation."
                    },
                    {
                        "input": "n = 6, arr = [0, 0, 0, 1, 1, 1]",
                        "output": "0 0 0 1 1 1",
                        "explanation": "Array already sorted."
                    },
                    {
                        "input": "n = 6, arr = [2, 2, 2, 1, 1, 1]",
                        "output": "1 1 1 2 2 2",
                        "explanation": "Array with 1's followed by 2's. "
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to sort the array.</p>",
            "<p>Count the number of 0s, 1s and 2s in the array/list.</p>",
            "<p>Try to use three-pointers(each for each type of element) to sort the array.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "cpp",
                "full_func": "/*\r\n    Time Complexity : O(N)\r\n    Space Complexity : O(1)\r\n\r\n    where N is the length of the array/list.\r\n*/\r\n\r\nvoid sortArray(vector<int>& arr, int n)\r\n{\r\n    int zeroPos = 0;\r\n    int onePos = 0;\r\n    int twoPos = n-1;\r\n\r\n    while (onePos <= twoPos)\r\n    {\r\n        if (arr[onePos] == 1)\r\n        {\r\n            onePos++;\r\n        }\r\n        else if (arr[onePos] == 0)\r\n        {\r\n            swap(arr[zeroPos], arr[onePos]);\r\n            zeroPos++;\r\n            onePos++;\r\n        }\r\n        else\r\n        {\r\n            swap(arr[onePos], arr[twoPos]);\r\n            twoPos--;\r\n        }\r\n    }\r\n}\r\n\r\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "java",
                "full_func": "/*\r\n    Time Complexity : O(N)\r\n    Space Complexity : O(1)\r\n\r\n    where N is the length of the array/list.\r\n*/\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\n\r\npublic class Solution {\r\n    public static void sortArray(ArrayList<Integer> arr, int n) {\r\n        int zeroPos = 0;\r\n        int onePos = 0;\r\n        int twoPos = n - 1;\r\n\r\n        while (onePos <= twoPos) {\r\n            if (arr.get(onePos) == 1) {\r\n                onePos++;\r\n            } else if (arr.get(onePos) == 0) {\r\n                Collections.swap(arr, zeroPos, onePos);\r\n                zeroPos++;\r\n                onePos++;\r\n            } else {\r\n                Collections.swap(arr, twoPos, onePos);\r\n                twoPos--;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}\r\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "python",
                "full_func": "'''\r\n    Time Complexity : O(N)\r\n    Space Complexity : O(1)\r\n\r\n    where N is the length of the array/list.\r\n'''\r\n\r\n\r\ndef sortArray(arr, n):\r\n    \r\n    zeroPos = 0\r\n    onePos = 0\r\n    twoPos = n - 1\r\n\r\n    while onePos <= twoPos:\r\n        if arr[onePos] == 1:\r\n            onePos += 1\r\n\r\n        elif arr[onePos] == 0:\r\n            arr[zeroPos], arr[onePos] = arr[onePos], arr[zeroPos]\r\n            \r\n            zeroPos += 1\r\n            onePos += 1\r\n\r\n        else:\r\n            arr[onePos], arr[twoPos] = arr[twoPos], arr[onePos]\r\n            \r\n            twoPos -= 1",
                "lang_text": "py"
            }
        },
        "platform": "CODESTUDIO"
    }
}