{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10917,
            "title": "Sort elements by frequency",
            "titleSlug": "sort-elements-by-frequency_1280138",
            "content": "<h4 id=\"you-are-given-a-list-of-a-repeated-set-of-integers-your-task-for-the-problem-is-to-return-a-list-of-the-given-elements-in-decreasing-sorted-order-of-their-frequency-of-repetition-in-the-given-list-with-the-element-with-the-highest-frequency-of-repetition-first-and-so-on\">You are given a list of a repeated set of integers. Your task for the problem is to return a list of the given elements in decreasing sorted order of their frequency of repetition in the given list with the element with the highest frequency of repetition first and so on.</h4>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>If two numbers have the same frequency then keep the one that was present before the other in the original given list (array) first.\n</code></pre>\n\n<h5 id=\"for-example\">For Example :</h5>\n\n<pre><code>Input:  arr[] = {2, 5, 2, 8, 5, 6, 8, 8}\nOutput: arr[] = {8, 8, 8, 2, 2, 5, 5, 6}\n\nExplanation :\nWhen you sort the array based on the decreasing order of the frequency of repetition of integers in the original array, \nyou\u2019ll find that the element \u20188\u2019 is the integer with the most repeated values therefore it would be arranged first after which since both 2 and 5 have the same number of repeated \nvalues in the original array but since the 2 arrived first so we will first arrange 2 and then 5 in our resultant array, while would be the last element after sorting here.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of input contains a single integer \u2018T\u2019 denoting the number of test cases that would be there.\n\nThe first line of each test case contains a single integer \u2018N\u2019 denoting the number of integers that would be given.\n\nAnd the next line contains \u2018N\u2019 space-separated integers which are the elements of the list.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print the sorted list of elements by the decreasing order of their frequency of repetition in the list.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 3000\n1 &lt;= NUMS[i] &lt;= 10^6\n\nWhere &#39;NUMS[i]&#39; denotes the &#39;ith&#39; element of the given array.\n\nTime Limit: 1sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n7\n1 2 3 3 2 1 1\n9\n1 3 2 2 2 3 4 3 1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>1 1 1 2 2 3 3\n3 3 3 2 2 2 1 1 4\n</code></pre>\n\n<h4 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1 :</h4>\n\n<pre><code>When you sort the array based on the decreasing order of the frequency of repetition of integers in the original array, \nyou\u2019ll find that all different elements \u20181\u2019, \u20182\u2019 and \u20183\u2019 have the same frequency of repetition in the given list of integers but since the order of their arrival in the original array is different \ntherefore, we arrange them according to that. Hence, the resultant sorted list will become 1 1 2 2 3 3.\n\n\nWhen you sort the array based on the decreasing order of the frequency of repetition of integers in the original array, \nyou\u2019ll find that both elements \u20182\u2019 and \u20183\u2019 have the same frequency of repetition in the given list of integers but since the order of \ntheir arrival in the original array is different therefore we arrange them according to that. While the remaining elements \u20181\u2019 and \u20184\u2019 have different frequencies in the decreasing order of which they can be easily arranged. \nTherefore the resultant sorted list will become 3 3 3 2 2 2 1 1 4.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code> 1\n 9\n 2 5 2 6 9999999 5 8 8 8\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>8 8 8 2 2 5 5 6 9999999\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 9,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a list of integers, sort the list in decreasing order of the frequency of each element. If two numbers have the same frequency, maintain their original order in the input list.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 3000",
                    "1 <= NUMS[i] <= 10^6",
                    "Time Limit: 1sec"
                ],
                "testcases": [
                    {
                        "input": "7\n1 2 3 3 2 1 1",
                        "output": "1 1 1 2 2 3 3",
                        "explanation": "The numbers 1, 2, and 3 all appear twice.  Since 1 appears first in the input, followed by 2 and then 3, the output should maintain that order amongst the elements with the same frequency, resulting in: 1 1 1 2 2 3 3."
                    },
                    {
                        "input": "9\n1 3 2 2 2 3 4 3 1",
                        "output": "3 3 3 2 2 2 1 1 4",
                        "explanation": "The number 3 appears three times, 2 appears three times, 1 appears twice, and 4 appears once. Since 3 appears before 2 in the input list, the sorted list will be: 3 3 3 2 2 2 1 1 4."
                    },
                    {
                        "input": "9\n2 5 2 6 9999999 5 8 8 8",
                        "output": "8 8 8 2 2 5 5 6 9999999",
                        "explanation": "The number 8 appears three times, the numbers 2 and 5 both appear twice, and the numbers 6 and 9999999 both appear once.  Thus, the sorted list is: 8 8 8 2 2 5 5 6 9999999."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to sort the array based on the decreasing order of their frequency counts and increasing order of their index values.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}