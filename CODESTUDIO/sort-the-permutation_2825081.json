{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 15914,
            "title": "Sort the Permutation",
            "titleSlug": "sort-the-permutation_2825081",
            "content": "<h4 id=\"you-are-the-class-teacher-and-you-have-a-boring-duty-to-get-the-class-arranged-according-to-roll-numbers\">You are the class teacher and you have a boring duty to get the class arranged according to roll numbers.</h4>\n\n<h4 id=\"there-are-n-students-in-your-class-each-student-has-a-roll-number-between-1-and-n-you-are-also-given-an-array-arr-indicating-the-initial-arrangement-of-the-students-and-you-need-to-rearrange-them-so-they-are-sorted-by-roll-number\">There are &#39;N&#39; students in your class, each student has a roll number between 1 and N. You are also given an array &#39;ARR&#39; indicating the initial arrangement of the students, and you need to rearrange them so they are sorted by roll number.</h4>\n\n<h4 id=\"in-order-to-make-this-process-more-interesting-you-come-up-with-an-idea-to-rearrange-the-students-you-can-select-any-student-and-place-him-either-at-the-beginning-or-at-the-end-and-do-this-until-all-the-students-are-sorted-in-increasing-order-of-their-roll-numbers-you-need-to-find-the-minimum-such-steps-you-need-to-perform-to-rearrange-the-students-in-increasing-order-of-their-roll-numbers\">In order to make this process more interesting, you come up with an idea! To rearrange the students you can select any student and place him either at the beginning or at the end, and do this until all the students are sorted in increasing order of their roll numbers. You need to find the minimum such steps you need to perform to rearrange the students in increasing order of their roll numbers.</h4>\n\n<h5 id=\"for-example\">For Example :</h5>\n\n<pre><code>If \u2018N\u2019 = 5, \u2018ARR\u2019 = {1, 2, 4, 5, 3}\n\nYou can sort the given arrangement in two steps. \n\nIn the first step select the student with roll number 4 (ARR[2]) and place him at the end, the arrangement now becomes: {1, 2, 3, 5, 3, 4}. In the second step select the student with roll number 5 (ARR[3]) and place him at the end, resulting in the arrangement: {1, 2, 3, 4, 5} which is in sorted order.\n\nIt is not possible to sort the given arrangement in less than two steps, therefore we will print 2.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 denoting the number of test cases, then each test case follows:\n\nThe first line of each test case contains a single integer \u2018N\u2019, denoting the number of students in the class.\n\nThe second line of each test case contains N integers \u2018ARR\u2019, denoting the initial arrangement of the students, each array element denotes the roll number of one of the students.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print the minimum steps required to rearrange the students.\n\nOutput for each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You are not required to print anything; it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 \u2264 T \u2264 10      \n1 \u2264 N \u2264 20000\n1 \u2264 ARR[i] \u2264 N\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n5\n1 2 4 5 3\n4\n1 2 3 4\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>2\n0\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1 :</h5>\n\n<pre><code>For test case 1 :\nWe will print 2 because:\nIn the first step, we can select the student with roll number 4 (ARR[2]) and place him at the end, the arrangement now becomes: {1, 2, 3, 5, 3, 4}. In the second step select the student with roll number 5 (ARR[3]) and place him at the end, resulting in the arrangement: {1, 2, 3, 4, 5} which is in sorted order. Therefore we need at least two steps to rearrange the students.\n\nFor test case 2 : \nWe will print 0 because:\nThe given arrangement is already sorted and no rearrangements are needed.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n3\n2 1 3\n6\n6 5 4 3 2 1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>1\n5\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 9,
            "dislikes": "NA",
            "rephrased": {
                "body": "You are a class teacher tasked with arranging students according to their roll numbers. Given an initial arrangement of students in an array 'ARR' of size 'N', where each element represents a student's roll number (from 1 to N), determine the minimum number of steps required to sort the students in ascending order. In each step, you can select any student and place them either at the beginning or at the end of the arrangement.",
                "constraints": [
                    "1 \u2264 T \u2264 10",
                    "1 \u2264 N \u2264 20000",
                    "1 \u2264 ARR[i] \u2264 N",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "5\n1 2 4 5 3",
                        "output": "2",
                        "explanation": "We can sort the given arrangement in two steps.  In the first step, select student with roll number 4 and place him at the end: {1, 2, 3, 5, 4}. In the second step select the student with roll number 5 and place him at the end, resulting in the arrangement: {1, 2, 3, 4, 5} which is in sorted order."
                    },
                    {
                        "input": "4\n1 2 3 4",
                        "output": "0",
                        "explanation": "The given arrangement is already sorted."
                    },
                    {
                        "input": "3\n2 1 3",
                        "output": "1",
                        "explanation": null
                    },
                    {
                        "input": "6\n6 5 4 3 2 1",
                        "output": "5",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>You need to find the longest subsequence in which each term is one greater than the previous term.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}