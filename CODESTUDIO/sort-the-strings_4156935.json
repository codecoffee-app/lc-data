{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 18108,
            "title": "Sort The Strings",
            "titleSlug": "sort-the-strings_4156935",
            "content": "<h4 id=\"ninja-has-an-array-s-of-n-words-each-word-consisting-of-lowercase-english-letters-an-array-of-words-is-good-if-they-are-in-lexicographical-order-ninja-would-like-to-make-the-array-s-good-however-the-only-move-ninja-can-perform-is-to-reverse-any-number-of-them-as-many-times-as-he-wants\">Ninja has an array, \u2018S\u2019, of \u2018N\u2019 words, each word consisting of lowercase English letters. An array of words is good if they are in lexicographical order. Ninja would like to make the array \u2018S\u2019 good. However, the only move Ninja can perform is to reverse any number of them as many times as he wants.</h4>\n\n<p></br></p>\n\n<h4 id=\"let-a-i-be-the-cost-to-reverse-the-word-s-i-let-c-be-the-minimum-total-cost-to-make-the-array-s-good-calculate-the-value-of-c-if-it-s-impossible-to-make-the-array-good-return-the-integer-1\">Let \u2018A[i]\u2019 be the cost to reverse the word \u2018S[i]\u2019. Let \u2018C\u2019 be the minimum total cost to make the array \u2018S\u2019 good. Calculate the value of \u2018C\u2019. If it\u2019s impossible to make the array good, return the integer  \u2018-1\u2019.</h4>\n\n<p></br></p>\n\n<h5 id=\"example\">Example :</h5>\n\n<pre><code>N = 3, A = [ 4, 8, 6 ], S = [ \u201ctb\u201d, \u201cay\u201d, \u201cyb\u201d ]\nFor each string, we have 2 choices, whether to reverse it or not.\nFor [ \u201ctb\u201d, \u201cay\u201d, \u201cyb\u201d], not sorted in lexicographical order.\nFor [ \u201ctb\u201d, \u201cay\u201d, \u201cby\u201d], not sorted in lexicographical order.\nFor [ \u201ctb\u201d, \u201cya\u201d, \u201cyb\u201d], sorted in lexicographical order and the cost is 0 + 8 + 0 = 8.\nFor [ \u201ctb\u201d, \u201cya\u201d, \u201cby\u201d], not sorted in lexicographical order.\nFor [ \u201cbt\u201d, \u201cay\u201d, \u201cyb\u201d], not sorted in lexicographical order.\nFor [ \u201cbt\u201d, \u201cay\u201d, \u201cby\u201d], not sorted in lexicographical order.\nFor [ \u201cbt\u201d, \u201cya\u201d, \u201cyb\u201d], sorted in lexicographical order and the cost is 4 + 8 + 0 = 12.\nFor [ \u201cbt\u201d, \u201cya\u201d, \u201cby\u201d], not sorted in lexicographical order.\nHence, the answer is 8.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 denoting the number of test cases, then the test case follows.\n\nThe first line of each test case contains a single integer, \u2018N\u2019, denoting the number of strings.\n\nThe second line contains \u2018N\u2019 space-separated integers denoting the elements of the cost array \u2018A\u2019.\n\nThe next \u2018N\u2019 lines contain the array \u2018S\u2019 elements, a single string containing lowercase English letters per line.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, calculate the minimum total cost to make the array \u2018S\u2019 good. Return the integer \u2018-1\u2019 if it\u2019s impossible.\n\nOutput for each test case will be printed on a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You are not required to print anything; it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 \u2264 T \u2264 10\n1 \u2264 N \u2264 10^5\n0 \u2264 A[i] \u2264 10^4\n1 \u2264 \u2211 len(S[i]) \u2264 10^6\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n4\n4 1 1 5\ntxmt\ngyzw\nrsvp\ndhyj\n6\n5 4 4 2 3 5\nsla\nbrog\nhqt\nqsp\nlqhw\nmay\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>-1\n13\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1 :</h5>\n\n<pre><code>For test case 1:\nWe will print -1 because there is no way to make the array good.\n\nFor test case 2:\nOne possible arrangement is [ \u201cals\u201d, \u201cbrog\u201d, \u201chqt\u201d, \u201cqsp\u201d, \u201cwhql\u201d, \u201cyam\u201d ], i.e., reverse the string numbers 1, 5, and 6th, then the cost is 5 + 3 + 5 = 13, which is the minimum cost possible.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n4\n5 1 5 2\nwivig\nlq\nxjp\nep\n5\n3 5 5 3 5\nazyjd\nfm\npm\nvnwwl\nhryx\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>-1\n5\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation For Sample Input 2 :</h5>\n\n<pre><code>For test case 1:\nWe will print -1 because there is no way to make the array good.\n\nFor test case 2:\nWe can reverse the last string with a cost of 5. It can be proved that this is the minimum possible cost. Hence, we will print 5.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 61,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array 'S' of 'N' words, where each word consists of lowercase English letters, determine the minimum cost to make the array lexicographically sorted. You can reverse any word 'S[i]' at a cost 'A[i]'. Calculate the minimum total cost 'C' required to achieve a sorted array. If it's impossible to sort the array, return -1.",
                "constraints": [
                    "1 \u2264 T \u2264 10",
                    "1 \u2264 N \u2264 10^5",
                    "0 \u2264 A[i] \u2264 10^4",
                    "1 \u2264 \u2211 len(S[i]) \u2264 10^6",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "4\n4 1 1 5\ntxmt\ngyzw\nrsvp\ndhyj",
                        "output": "-1",
                        "explanation": "It is not possible to make the array lexicographically sorted through any combination of reversals."
                    },
                    {
                        "input": "6\n5 4 4 2 3 5\nsla\nbrog\nhqt\nqsp\nlqhw\nmay",
                        "output": "13",
                        "explanation": "Reversing strings at indices 1, 5, and 6 results in [\u201cals\u201d, \u201cbrog\u201d, \u201chqt\u201d, \u201cqsp\u201d, \u201cwhql\u201d, \u201cyam\u201d], which is lexicographically sorted. The total cost is 5 + 3 + 5 = 13, which is the minimum cost."
                    },
                    {
                        "input": "4\n5 1 5 2\nwivig\nlq\nxjp\nep",
                        "output": "-1",
                        "explanation": "It is not possible to make the array lexicographically sorted through any combination of reversals."
                    },
                    {
                        "input": "5\n3 5 5 3 5\nazyjd\nfm\npm\nvnwwl\nhryx",
                        "output": "5",
                        "explanation": "Reversing the last string 'hryx' to 'xyrh' results in a sorted array [azyjd, fm, pm, vnwwl, xyrh]. The cost is 5."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>For the i-th string, it only needs to be checked with \u2018i-1\u2019-th string assuming the strings are sorted till \u2018i-1\u2019-th string.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}