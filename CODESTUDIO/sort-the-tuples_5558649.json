{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 22179,
            "title": "Sort The Tuples",
            "titleSlug": "sort-the-tuples_5558649",
            "content": "<h4 id=\"you-are-given-an-array-of-tuples-arr-of-length-n-all-the-tuples-are-of-length-l-sort-the-tuples-in-non-decreasing-order-by-the-last-element-of-tuples-if-the-last-element-of-two-tuples-are-equal-then-the-tuple-with-the-smallest-index-should-be-placed-first\">You are given an array of tuples \u2018ARR\u2019 of length \u2018N\u2019. All the tuples are of length \u2018L\u2019. Sort the tuples in non-decreasing order by the last element of tuples. If the last element of two tuples are equal then the tuple with the smallest index should be placed first.</h4>\n\n<h4 id=\"note-the-length-of-all-the-tuples-will-be-the-same\">Note: The length of all the tuples will be the same.</h4>\n\n<h5 id=\"example\">Example:</h5>\n\n<pre><code>Input: \u2018N\u2019 = 3, \u2018L\u2019 = 2,  \u2018ARR\u2019 = [(1, 1), (5, 3), (8, 2)]. \n\nOutput: [(1, 1), (8, 2), (5, 3)].\n\nThe last values of each type are (1, 3, 2). Sorting them in non-decreasing order we get (1, 2, 3). Hence the final result is [(1, 1), (8, 2), (5, 3)].\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line will contain the integer &#39;T&#39;, denoting the number of test cases.\n\nThe first line of each test case contains two integers \u2018N\u2019 and \u2018L\u2019  where \u2018N\u2019 denotes the length of the array \u2018NUMS\u2019 and \u2018L\u2019 denotes the length of the tuples.\n\nThe next \u2018N\u2019 lines of each test case contain \u2018N\u2019 tuples of integers.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case, you don\u2019t need to return anything just return the resultant array.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don&#39;t need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 10^5\nSum of total number of integers &lt;= 10^5\n1 &lt;= ARR[i].length &lt;= 1000\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n4 2\n1 2\n1 1\n3 5\n2 3\n4 3\n1 2 3\n3 2 1\n4 5 6\n3 1 2\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>1 1 \n1 2 \n2 3 \n3 5 \n3 2 1 \n3 1 2 \n1 2 3 \n4 5 6 \n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1 :</h5>\n\n<pre><code>For the first case:\nThe last elements of the tuples are [2, 1, 5, 3]. Sorting them in non-decreasing order we get [1, 2, 3, 5]. So, the final output is [ (1, 1), (1, 2), (2, 3), (3, 5) ].\n\nFor the second case:\nThe last elements of the tuples are [3, 1, 6, 2]. Sorting them in non-decreasing order we get [1, 2, 3, 6]. So, the final output is [ (3, 2, 1), (3, 1, 2), (1, 2, 3), (4, 5, 6) ].\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n1 4\n1 4 5 7\n3 4\n7 81 2 10\n1 2 4 1\n90 28 2 19\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>1 4 5 7\n1 2 4 1\n7 81 2 10\n90 28 2 19\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 1,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of tuples, sort the tuples in non-decreasing order based on the last element of each tuple. If two tuples have the same last element, maintain their original order (i.e., the tuple with the smaller index should come first).",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10^5",
                    "Sum of total number of integers <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "arr = [[1, 2], [1, 1], [3, 5], [2, 3]]",
                        "output": "[[1, 1], [1, 2], [2, 3], [3, 5]]",
                        "explanation": "The last elements are [2, 1, 5, 3]. After sorting based on the last element, the tuples are arranged as [[1, 1], [1, 2], [2, 3], [3, 5]]."
                    },
                    {
                        "input": "arr = [[1, 2, 3], [3, 2, 1], [4, 5, 6], [3, 1, 2]]",
                        "output": "[[3, 2, 1], [3, 1, 2], [1, 2, 3], [4, 5, 6]]",
                        "explanation": "The last elements are [3, 1, 6, 2]. Sorting according to the last element gives [[3, 2, 1], [3, 1, 2], [1, 2, 3], [4, 5, 6]]."
                    },
                    {
                        "input": "arr = [[1, 4, 5, 7]]",
                        "output": "[[1, 4, 5, 7]]",
                        "explanation": "Single tuple, so no sorting required."
                    },
                    {
                        "input": "arr = [[7, 81, 2, 10], [1, 2, 4, 1], [90, 28, 2, 19]]",
                        "output": "[[1, 2, 4, 1], [7, 81, 2, 10], [90, 28, 2, 19]]",
                        "explanation": "Last elements are [10, 1, 19]. After sorting based on the last element, the tuples are arranged as [[1, 2, 4, 1], [7, 81, 2, 10], [90, 28, 2, 19]]."
                    },
                    {
                        "input": "arr = [[1,1],[2,1],[3,1]]",
                        "output": "[[1,1],[2,1],[3,1]]",
                        "explanation": "All last elements are equal, the order is based on index, the tuples should remain as they were initially."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you think of any way to sort the array using swap operations?</p>",
            "<p>Can you think of any way to modify the already existing sort function?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}