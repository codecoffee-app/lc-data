{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 7648,
            "title": "Sorted Matrix",
            "titleSlug": "sorted-matrix_758931",
            "content": "<h4 id=\"you-are-given-an-n-x-n-matrix-mat-of-positive-integers-where-every-row-and-column-is-sorted-in-non-decreasing-order\">You are given an N x N matrix &#39;MAT&#39; of positive integers, where every row and column is sorted in non-decreasing order.</h4>\n\n<h4 id=\"your-task-is-to-return-a-list-containing-all-elements-of-the-matrix-in-sorted-order\">Your task is to return a list containing all elements of the matrix in sorted order.</h4>\n\n<h4 id=\"for-example\">For example :</h4>\n\n<pre><code>If the matrix is:\n\n10 20 30 40\n15 20 35 42\n27 29 37 46\n32 33 38 49\n\nThe output will be the elements of matrix in sorted order:\n10 15 20 20 27 29 30 32 33 35 37 38 40 42 46 49\n</code></pre>\n\n<h4 id=\"follow-up\">Follow Up:</h4>\n\n<pre><code>Can you solve this in O((N ^ 2) * log(N)) time and O(N) space complexity?\n</code></pre>\n\n<h5 id=\"input-format\">Input format :</h5>\n\n<pre><code>The first line of input contains a single integer T, representing the number of test cases or queries to be run. \nThen the T test cases follow.\n\nThe first line of each test case contains a positive integer N, which represents the number of rows and columns in the matrix.\n\nThe next &#39;N&#39; lines, each contains &#39;N&#39; single space-separated positive integers representing the elements in a row of the matrix.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print a single line containing the elements of the matrix in sorted order.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraint\">Constraint :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 100\n1 &lt;= MAT[i][j] &lt;= 10^5\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>1\n4\n10 20 30 40\n15 20 35 42\n27 29 37 46\n32 33 38 49\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>10 15 20 20 27 29 30 32 33 35 37 38 40 42 46 49\n</code></pre>\n\n<h5 id=\"explanation-for-input-1\">Explanation for Input 1:</h5>\n\n<pre><code>After sorting all the elements of the matrix in increasing order, we will get 10 15 20 20 27 29 30 32 33 35 37 38 40 42 46 49.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>1\n2\n1 2 \n5 6\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>1 2 5 6\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 34,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an N x N matrix 'MAT' where each row and column is sorted in non-decreasing order, the task is to return a list containing all elements of the matrix in sorted order. Implement the function `sortedMatrix` to achieve this.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 100",
                    "1 <= MAT[i][j] <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "n = 4, mat = [[10, 20, 30, 40], [15, 20, 35, 42], [27, 29, 37, 46], [32, 33, 38, 49]]",
                        "output": "10 15 20 20 27 29 30 32 33 35 37 38 40 42 46 49",
                        "explanation": "After sorting all the elements of the matrix in increasing order, we obtain the sorted list: 10 15 20 20 27 29 30 32 33 35 37 38 40 42 46 49."
                    },
                    {
                        "input": "n = 2, mat = [[1, 2], [5, 6]]",
                        "output": "1 2 5 6",
                        "explanation": "The matrix elements sorted in ascending order are: 1 2 5 6."
                    },
                    {
                        "input": "n = 3, mat = [[1, 4, 7], [2, 5, 8], [3, 6, 9]]",
                        "output": "1 2 3 4 5 6 7 8 9",
                        "explanation": "Sorting the matrix elements results in: 1 2 3 4 5 6 7 8 9"
                    },
                    {
                        "input": "n = 1, mat = [[100]]",
                        "output": "100",
                        "explanation": "The only element in the matrix is 100, so the sorted result is just 100."
                    },
                    {
                        "input": "n = 3, mat = [[1, 1, 1], [1, 1, 1], [1, 1, 1]]",
                        "output": "1 1 1 1 1 1 1 1 1",
                        "explanation": "All the elements are 1, therefore the sorted list is nine 1s."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Think of storing all the elements in the list and sort them.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Heap",
                "slug": "heap"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Matrices (2D Arrays)",
                "slug": "matrices-(2d-arrays)"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}