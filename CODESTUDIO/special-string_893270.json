{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8653,
            "title": "Special String",
            "titleSlug": "special-string_893270",
            "content": "<h4 id=\"a-string-s-is-said-to-be-special-if-each-of-its-characters-is-one-of-the-first-p-letters-of-the-english-alphabet-and-s-doesnt-contain-any-palindrome-contiguous-substring-of-length-2-or-more-you-will-be-given-a-special-string-s-of-length-n-find-the-lexicographically-next-special-string-of-the-same-length-or-else-state-that-such-string-does-not-exist-print-the-output-string-if-it-exists-otherwise-print-no-without-quotes\">A string \u2018S\u2019 is said to be special if each of its characters is one of the first \u2018P\u2019 letters of the English alphabet and \u2018S\u2019 doesn&#39;t contain any palindrome contiguous substring of length 2 or more. You will be given a special string \u2018S\u2019 of length \u2018N\u2019, find the lexicographically next special string of the same length, or else state that such string does not exist. Print the output string if it exists, otherwise, print &quot;NO&quot; (without quotes).</h4>\n\n<h4 id=\"a-string-s1-is-a-substring-of-another-string-s2-if-s2-contains-the-same-characters-as-in-s1-in-the-same-order-and-in-a-continuous-fashion-also\">A string \u201cs1\u201d is a substring of another string \u201cs2\u201d if \u201cs2\u201d contains the same characters as in \u201cs1\u201d, in the same order and in a continuous fashion also.</h4>\n\n<h4 id=\"example-given-a-string-cba-and-p-equals-3-so-the-next-strings-which-are-lexicographically-bigger-than-string-s-are-cbb-cbc-cca-ccb-and-ccc-of-size-3-but-all-of-them-have-a-palindrome-substring-of-the-size-at-least-2-so-we-will-return-no-as-output-if-the-given-string-is-cbd-and-p-equals-4-then-the-next-string-will-be-cda-and-it-is-special-so-we-can-return-an-output-here\">Example: Given a string \u201ccba\u201d and \u2018P\u2019 equals 3. So, the next strings which are lexicographically bigger than string \u2018S\u2019 are \u201ccbb\u201d, \u201ccbc\u201d, \u201ccca\u201d, \u201cccb\u201d and \u201cccc\u201d of size 3. But all of them have a palindrome substring of the size at least 2. So, we will return \u201cNO\u201d as output. If the given string is \u201ccbd\u201d and \u2018P\u2019 equals 4 then the next string will be \u201ccda\u201d and it is special. So, we can return an output here.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>It is guaranteed that the input string is special.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 representing the number of test cases. \n\nThe first line of each test case will contain two integers \u2018N\u2019 and \u2018P\u2019 that denote the size of the string \u2018S\u2019 and the first letters of English alphabets used.\n\nThe second line of each test case will contain the string \u2018S\u2019 and String \u2018S\u2019 contains only lowercase letters i.e [a-z].\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, you have to return a string if there is any string that is lexicographically larger than \u2018S\u2019 and also it must be special. If there is no such string of length \u2018N\u2019 then return \u201cNO\u201d.\n\nOutput for every test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You don\u2019t need to print anything; It has already been taken care of.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10^2\n1 &lt;= N &lt;= 10^3\n1 &lt;= P &lt;= 26\n1 &lt;= |S| &lt;= 10^3\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n4 4\nabcd\n4 4\ndcbd\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>abda\nNO\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1:</h5>\n\n<pre><code>In the first test case, the next string which is lexicographically larger than \u201cabcd\u201d is \u201cabda\u201d and it is special. Thus, we will return it.\n\nIn the second test case, the strings which are lexicographically larger than \u201cdcbd\u201d of length 4 are \u201cdcca\u201d, \u201cdccb\u201d, \u201cdccc\u201d, \u201cdccd\u201d, \u201cdcda\u201d, \u201cdcdb\u201d, \u201cdcdc\u201d, \u201cdcdd\u201d,  \u201cddaa\u201d, \u201cddab\u201d, \u201cddac\u201d, \u201cddad\u201d, \u201cddba\u201d, \u201cddbb\u201d, \u201cddbc\u201d, \u201cddbd\u201d, \u201cddca\u201d, \u201cddcb\u201d, \u201cddcc\u201d, \u201cddcd\u201d, \u201cddda\u201d, \u201cdddb\u201d, \u201cdddc\u201d and \u201cdddd\u201d which are all not special. Thus, we will return \u201cNO\u201d.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n4 3\nabca\n2 4\nad\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>acba\nba\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation For Sample Input 2:</h5>\n\n<pre><code>In the first test case, the next string which is lexicographically larger than \u201cabca\u201d and also special is \u201cacba\u201d and it is special. Thus, we will return it.\n\nIn the second test case, the next string which is lexicographically larger than \u201cad\u201d is \u201cba\u201d and it is special. Thus, we will return it.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 4,
            "dislikes": "NA",
            "rephrased": {
                "body": "A string 'S' is considered 'special' if it meets two criteria: 1) Each character in 'S' is one of the first 'P' letters of the English alphabet (a, b, c, ..., up to the Pth letter). 2) 'S' does not contain any contiguous substring of length 2 or more that is a palindrome (reads the same forwards and backward). Given a special string 'S' of length 'N', the task is to find the lexicographically next special string of the same length. If such a string exists, output it. Otherwise, output \"NO\".",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= N <= 1000",
                    "1 <= P <= 26",
                    "1 <= |S| <= 1000",
                    "Time Limit: 1 sec",
                    "The input string is guaranteed to be special."
                ],
                "testcases": [
                    {
                        "input": "4 4\nabcd",
                        "output": "abda",
                        "explanation": "The input string is 'abcd' and P is 4. The next lexicographically larger special string is 'abda'.  Strings like 'abce', 'abcf' etc. are larger but use alphabet outside the limit.  Strings like 'abca' are lexicographically smaller. Strings like 'abba', 'abcc' are not special since they contain palindromic substrings."
                    },
                    {
                        "input": "4 4\ndcbd",
                        "output": "NO",
                        "explanation": "The input string is 'dcbd' and P is 4. There is no lexicographically larger string than 'dcbd' of length 4 that is special. All strings larger than 'dcbd' contain either palindromes or have alphabets outside the defined range [a,d]."
                    },
                    {
                        "input": "4 3\nabca",
                        "output": "acba",
                        "explanation": "The input string is 'abca' and P is 3. The next lexicographically larger special string is 'acba'."
                    },
                    {
                        "input": "2 4\nad",
                        "output": "ba",
                        "explanation": "The input string is 'ad' and P is 4. The next lexicographically larger special string is 'ba'."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you think from the input given, that it is a special string?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}