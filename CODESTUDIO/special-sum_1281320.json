{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10979,
            "title": "Special Sum",
            "titleSlug": "special-sum_1281320",
            "content": "<h4 id=\"you-are-given-an-array-arr-of-length-n-there-are-two-operations-first_sum-and-last_sum-for-every-index-i-1-i-n-in-the-array\">You are given an array \u2018ARR\u2019 of length \u2018N\u2019. There are two operations, \u2018FIRST_SUM\u2019 and \u2018LAST_SUM\u2019 for every index \u2018i\u2019 (1 &lt;= i &lt;= N) in the array,</h4>\n\n<h4 id=\"i-first_sum-i-calculates-the-sum-of-first-i-numbers\">i) FIRST_SUM(i) calculates the sum of first i numbers.</h4>\n\n<h4 id=\"ii-last_sum-i-calculates-the-sum-of-last-n-i-1-numbers\">ii) LAST_SUM(i) calculates the sum of last N-i+1 numbers.</h4>\n\n<h4 id=\"also-for-every-i-special_sum-i-can-be-calculated-as\">Also for every \u2018i\u2019, SPECIAL_SUM(i) can be calculated as:</h4>\n\n<h4 id=\"special_sum-i-first_sum-i-last_sum-i\">SPECIAL_SUM(i) = FIRST_SUM(i) + LAST_SUM(i)</h4>\n\n<h4 id=\"your-task-is-to-return-the-minimum-special_sum-for-0-i-n-1\">Your task is to return the minimum SPECIAL_SUM for 0 &lt;= i &lt;= N - 1.</h4>\n\n<h4 id=\"for-example\">For example:</h4>\n\n<pre><code>Given \u2018N\u2019 = 4 and \u2018ARR\u2019 = [1, 2, 3, 4].\nThen the minimum special sum will be 5 for i = 0 (0-based indexing), which is (1 + 4) = 5.Sum of 1 integer from beginning and end.\nFor i = 1 it will be (1 + 2) + (3 + 4) = 10\nFor i = 2 it will be (1 + 2 + 3) + (2 + 3 + 4) = 15\nFor i = 3 it will be (1 + 2 + 3 + 4) + (1 + 2 + 3 + 4) = 20\nAll of which are greater than 5.  \n</code></pre>\n\n<h4 id=\"input-format\">Input format:</h4>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases.\n\nThe first line of each test case contains a single integer N, where \u2018N\u2019 is the number of elements of the array.\n\nThe second line of each test case contains \u2018N\u2019 space-separated integers, denoting the array elements.\n</code></pre>\n\n<h4 id=\"output-format\">Output format:</h4>\n\n<pre><code>For each test case, return the minimum SPECIAL_SUM for \u2018i\u2019 in the range [ 0, N-1 ].\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You don\u2019t need to print anything. You just need to implement the given function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints:</h4>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;=  N &lt;= 5 *10^3\n-5 *10^2 &lt;= ARR[i] &lt; 5 *10^2\n\nTime limit: 1 sec\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1:</h4>\n\n<pre><code>2\n4\n1 2 3 4\n4\n1 -2 -3 4\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1:</h4>\n\n<pre><code>5\n-5\n</code></pre>\n\n<h4 id=\"explanation-of-the-sample-input-1\">Explanation of the Sample Input 1:</h4>\n\n<pre><code>For the first test case:\nThe  minimum special sum will be 5 for i = 0 (0-based indexing), which is (1 + 4) = 5.\nFor i = 1 it will be (1 + 2) + (3 + 4) = 10\nFor i = 2 it will be (1 + 2 + 3) + (2 + 3 + 4) = 15\nFor i = 3 it will be (1 + 2 + 3 + 4) + (1 + 2 + 3 + 4) = 20\nAll of which are greater than 5.  \n\nFor the second test case:\nThe  minimum special sum will be -5 for i = 2 (0-based indexing), which is (1 + (-2) + (-3)) +  (-2 + (-3) + (4)) = -5.\nFor i = 0 it will be (1) + (4) = 5\nFor i = 1 it will be (1 + (-2) ) + ( (-3) + 4) = 0 \nFor i = 3 it will be (1 + (-2) + (-3) + 4)  + (1 + (-2) + (-3) + 4) = 0.\nAll of which are less than -5.\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2:</h4>\n\n<pre><code>2\n5\n1 2 -5 3 1\n5 \n1 1 1 1 1\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2:</h4>\n\n<pre><code>-3\n2\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 7,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array 'ARR' of length 'N', we define two operations:\n\n*   **FIRST_SUM(i):**  Calculates the sum of the first 'i' elements of 'ARR' (1 <= i <= N).\n*   **LAST_SUM(i):** Calculates the sum of the last 'N-i+1' elements of 'ARR' (1 <= i <= N).\n\nFor each index 'i', the SPECIAL_SUM(i) is computed as:\n\nSPECIAL_SUM(i) = FIRST_SUM(i) + LAST_SUM(i)\n\nYour task is to find the minimum SPECIAL_SUM across all possible values of 'i' from 1 to N.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= N <= 5 * 10^3",
                    "-5 * 10^2 <= ARR[i] <= 5 * 10^2",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "4\n1 2 3 4",
                        "output": "5",
                        "explanation": "N = 4, ARR = [1, 2, 3, 4].\n\n*   i = 0: FIRST_SUM(1) = 1, LAST_SUM(4) = 4, SPECIAL_SUM = 1 + 4 = 5\n*   i = 1: FIRST_SUM(2) = 1 + 2 = 3, LAST_SUM(3) = 3 + 4 = 7, SPECIAL_SUM = 3 + 7 = 10\n*   i = 2: FIRST_SUM(3) = 1 + 2 + 3 = 6, LAST_SUM(2) = 2 + 3 + 4 = 9, SPECIAL_SUM = 6 + 9 = 15\n*   i = 3: FIRST_SUM(4) = 1 + 2 + 3 + 4 = 10, LAST_SUM(1) = 1 + 2 + 3 + 4 = 10, SPECIAL_SUM = 10 + 10 = 20\n\nThe minimum SPECIAL_SUM is 5."
                    },
                    {
                        "input": "4\n1 -2 -3 4",
                        "output": "-5",
                        "explanation": "N = 4, ARR = [1, -2, -3, 4]\n\n* i = 0: FIRST_SUM(1) = 1, LAST_SUM(4) = 4, SPECIAL_SUM = 1 + 4 = 5\n* i = 1: FIRST_SUM(2) = -1, LAST_SUM(3) = -2, SPECIAL_SUM = -3\n* i = 2: FIRST_SUM(3) = -4, LAST_SUM(2) = 1, SPECIAL_SUM = -3\n* i = 3: FIRST_SUM(4) = 0, LAST_SUM(1) = 0, SPECIAL_SUM = 0\n\nThe minimum SPECIAL_SUM is -5 for i=2 (0-based indexing), SPECIAL_SUM(3) = FIRST_SUM(3) + LAST_SUM(3) = (1 + (-2) + (-3)) + (-2 + (-3) + 4) = -4 + (-1) = -5"
                    },
                    {
                        "input": "5\n1 2 -5 3 1",
                        "output": "-3",
                        "explanation": null
                    },
                    {
                        "input": "5\n1 1 1 1 1",
                        "output": "2",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>&nbsp;Do we need to calculate firstSum and lastSum for every i?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}