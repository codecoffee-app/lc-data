{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12445,
            "title": " Split Array into Fibonacci Sequence",
            "titleSlug": "split-array-into-fibonacci-sequence_1461335",
            "content": "<h4 id=\"in-this-problem-you-are-given-a-string-s-of-digits-such-as-s-123456579-we-can-split-it-into-a-fibonacci-like-sequence-123-456-579-formally-a-fibonacci-like-sequence-is-a-list-f-of-non-negative-integers-such-that\">In this problem, You are given a string S of digits, such as S = &quot;123456579&quot;, we can split it into a Fibonacci-like sequence [123, 456, 579]. Formally, a Fibonacci-like sequence is a list F of non-negative integers such that:</h4>\n\n<pre><code>1: 0 &lt;= F[i] &lt;= 2^31 - 1, (that is, each integer fits a 32-bit signed integer type);\n\n2: F.length &gt;= 3;\n\n3: and F[i] + F[i+1] = F[i+2] for all 0 &lt;= i &lt; F.length - 2.\n</code></pre>\n\n<h4 id=\"also-note-that-when-splitting-the-string-into-pieces-each-piece-must-not-have-extra-leading-zeroes-except-if-the-piece-is-the-number-0-itself\">Also, note that when splitting the string into pieces, each piece must not have extra leading zeroes, except if the piece is the number 0 itself.</h4>\n\n<h4 id=\"return-any-fibonacci-like-sequence-split-from-s-or-return-if-it-cannot-be-done\">Return any Fibonacci-like sequence split from S, or return [] if it cannot be done.</h4>\n\n<h5 id=\"example\">Example :</h5>\n\n<pre><code>Input: &quot;123456579&quot;\nOutput: [123, 456, 579]\n\nExplanation:\nSince 123 + 456 = 579, therefore the given string can be broken into fibonacci sequence\n</code></pre>\n\n<h5 id=\"input-format\">Input Format</h5>\n\n<pre><code>The first line of input contains a single integer \u2018T\u2019 denoting the number of test cases given.\n\nThe first line of each test case input contains a string that is required to be broken into different Fibonacci sequences.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For every test case, Return the first Fibonacci-like sequence list (array) which can be formed by splitting from S, or return [] if it cannot be done.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraint\">Constraint :</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= S.length &lt;= 200\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>3\n1101111\n112358130\n0123\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>YES\nNO\nNO\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1:</h5>\n\n<pre><code>For the first test case, The output [11, 0, 11, 11] is the required Fibonacci sequence here. So since there is one such sequence available, therefore, the output is \u201cYES\u201d here.\n\n\nFor the second test case, The task of splitting the string into a Fibonacci sequence is not Possible. Therefore you output an empty list (array). The result here would be \u201cNO\u201d.\n\n\nFor the third test case, Since there are  Leading zeroes, which are not allowed, so &quot;01&quot;, &quot;2&quot;, &quot;3&quot; is not a valid Fibonacci sequence. Hence the result \u201cNO\u201d.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n123456579\n11235813\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample output 2:</h5>\n\n<pre><code>YES\nYES\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -6,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string S of digits, determine if it can be split into a Fibonacci-like sequence. A Fibonacci-like sequence is a list F of non-negative integers such that:\n\n1. 0 <= F[i] <= 2^31 - 1 (each integer fits a 32-bit signed integer type).\n2. F.length >= 3.\n3. F[i] + F[i+1] = F[i+2] for all 0 <= i < F.length - 2.\n\nWhen splitting the string, each piece must not have leading zeroes, except if the piece is the number 0 itself.\n\nReturn \"YES\" if any such fibonacci like sequence can be constructed from the given input or return \"NO\" if it cannot be done.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= S.length <= 200",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "1101111",
                        "output": "YES",
                        "explanation": "The sequence [11, 0, 11, 11] is a valid Fibonacci-like sequence that can be formed from the input string."
                    },
                    {
                        "input": "112358130",
                        "output": "NO",
                        "explanation": "It's not possible to split the input string into a valid Fibonacci-like sequence."
                    },
                    {
                        "input": "0123",
                        "output": "NO",
                        "explanation": "Leading zeroes are not allowed (except for the number 0 itself). Therefore, the input string cannot be split into a Fibonacci-like sequence."
                    },
                    {
                        "input": "123456579",
                        "output": "YES",
                        "explanation": "The sequence [123, 456, 579] is a valid Fibonacci-like sequence since 123 + 456 = 579."
                    },
                    {
                        "input": "11235813",
                        "output": "YES",
                        "explanation": "The sequence [1, 1, 2, 3, 5, 8, 13] is a valid Fibonacci-like sequence."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to notice the fact that the first two elements of the array can be uniquely used to determine the rest of the sequence.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Number Theory",
                "slug": "number-theory"
            },
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}