{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 11788,
            "title": "Split Array",
            "titleSlug": "split-array_1386534",
            "content": "<h4 id=\"you-are-given-an-integer-array-list-arr-of-size-n-that-is-sorted-in-ascending-order-your-task-is-to-return-1-if-and-only-if-you-can-split-it-into-one-or-more-increasing-subsequences-such-that-each-subsequence-consists-of-consecutive-integers-and-has-a-length-of-at-least-3-else-return-0\">You are given an integer array/list \u2018ARR\u2019  of size &#39;N&#39; that is sorted in ascending order. Your task is to return &#39;1&#39; if and only if you can split it into one or more increasing subsequences such that each subsequence consists of consecutive integers and has a length of at least 3. Else, return &#39;0&#39;.</h4>\n\n<h4 id=\"note-an-increasing-sequence-is-a-sequence-where-the-difference-between-ith-and-i-1th-number-is-1-exactly-for-example-1-2-3-4-or-3-4-5-or-1-0-1-are-all-increasing-subsequences\">Note: An increasing sequence is a sequence where the difference between ith and i + 1th number is 1 exactly. For example : 1, 2, 3, 4 or 3, 4, 5 or -1, 0, 1 are all increasing subsequences.</h4>\n\n<h4 id=\"for-example\">For example:</h4>\n\n<pre><code>Given \u2018N\u2019 = 4 and \u2018ARR\u2019[] = 1, 2, 3, 4.\nThe answer will be \u20181\u2019 because an increasing subsequence of [1, 2, 3, 4]  having length greater than 3 can be made.\n</code></pre>\n\n<h4 id=\"input-format\">Input format:</h4>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases.\n\nThe first line of each test case contains a single integer &#39;N&#39;, where \u2018N\u2019 is the number of elements of the array/list &#39;ARR&#39;.\n\nThe second line of each test case contains \u2018N\u2019 single space-separated integers, denoting the &#39;ARR&#39; elements.\n</code></pre>\n\n<h4 id=\"output-format\">Output format:</h4>\n\n<pre><code>For each test case, print a single line containing &#39;1&#39; if you can split &#39;ARR&#39; into one or more subsequences such that each subsequence consists of consecutive integers and has a length of at least 3. Else, print &#39;0&#39;.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints:</h4>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;=  N &lt;= 5000\n-1250 &lt;= ARR[ i ] &lt;= 1250\n\nWhere \u2018T\u2019 is the total number of test cases, and &#39;N\u2019 is the length of &#39;ARR&#39; and \u2018ARR[i]\u2019 is the array element at index \u2018i\u2019.\n\nTime limit: 1 second\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1:</h4>\n\n<pre><code>2\n4\n1 2 3 4\n3\n1 2 2\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1:</h4>\n\n<pre><code>1\n0\n</code></pre>\n\n<h4 id=\"explanation-of-the-sample-input-1\">Explanation of the Sample Input 1:</h4>\n\n<pre><code>For the first test case:\nThe answer will be 1 (true) because an increasing subsequence of [1, 2, 3, 4] can be made.\n\nFor the second test case:\nThe answer will be 0 (false) and this is because no valid increasing subsequence of length greater than 3 can be formed.    \n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2:</h4>\n\n<pre><code>2\n4\n-1 0 1 2\n6\n-2 -1 0 7 8 9\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2:</h4>\n\n<pre><code>1\n1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 8,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a sorted integer array 'ARR' of size 'N', determine if it can be split into one or more increasing subsequences, each having a length of at least 3 and consisting of consecutive integers. Return 1 if possible, otherwise return 0.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= N <= 5000",
                    "-1250 <= ARR[ i ] <= 1250",
                    "Time limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "4\n1 2 3 4",
                        "output": "1",
                        "explanation": "The increasing subsequence [1, 2, 3, 4] satisfies the conditions, having a length of 4 (>=3) and consisting of consecutive integers."
                    },
                    {
                        "input": "3\n1 2 2",
                        "output": "0",
                        "explanation": "No valid increasing subsequence of length greater than or equal to 3 can be formed."
                    },
                    {
                        "input": "4\n-1 0 1 2",
                        "output": "1",
                        "explanation": "The increasing subsequence [-1, 0, 1, 2] satisfies the conditions."
                    },
                    {
                        "input": "6\n-2 -1 0 7 8 9",
                        "output": "1",
                        "explanation": "Two valid increasing subsequence can be formed which are [-2, -1, 0] and [7, 8, 9]"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can we keep track of the next element we need in a subsequence?</p>",
            "<p>Can we check greedily check when the numbers cannot form subsequences?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}