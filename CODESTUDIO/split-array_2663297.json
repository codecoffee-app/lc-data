{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 15651,
            "title": "Split Array",
            "titleSlug": "split-array_2663297",
            "content": "<h4 id=\"you-are-given-an-array-arr-of-size-n-and-an-integer-m-you-have-to-split-the-array-into-m-non-overlapping-non-empty-subarrays-such-that-the-maximum-of-all-the-subarray-s-sum-is-the-minimum-possible-your-task-is-to-return-the-minimum-of-the-maximum-of-all-the-subarray-s-sum\">You are given an array \u2018ARR\u2019 of size \u2018N\u2019 and an integer \u2018M\u2019. You have to split the array into \u2018M\u2019 non-overlapping, non-empty subarrays such that the maximum of all the subarray\u2019s sum is the minimum possible. Your task is to return the minimum of the maximum of all the subarray\u2019s sum.</h4>\n\n<h5 id=\"for-example\">For example:</h5>\n\n<pre><code>You are given \u2018ARR\u2019 = [7, 2, 6, 10, 8] and \u2018M\u2019 = 2. We split the array as [ 7, 2, 6] and [10, 8], the maximum of 7 + 2 + 6  and 10 + 8 is 18, which is the minimum possible.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains a single integer \u2018T\u2019 representing the number of test cases.\n\nThe first line of each test case contains two space-separated integers, \u2018N\u2019 and \u2018M\u2019, representing the size of \u2018ARR\u2019 and the given integer.\n\nThe second line of each test case contains \u2018N\u2019 space-separated integers representing the elements of the array.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print a single integer representing the minimum of the maximum of all the subarray\u2019s sum.\n\nPrint a separate line for each test case.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 10^5\n1 &lt;= M &lt;= 100\n0 &lt;= ARR[i] &lt;= 10^9\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n5 2\n7 2 6 10 8\n3 3\n1 4 4\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>18\n4\n</code></pre>\n\n<h5 id=\"explanation\">Explanation:</h5>\n\n<pre><code>For the first test case, \u2018ARR\u2019= [7, 2, 6, 10,8] and M=\u20192\u2019 when we split the array as [ 7, 2, 6] and [10, 8], the maximum of 7 + 2 + 6  and 10 + 8, is 18, which is the minimum possible.\n\nFor the first test case, \u2018ARR\u2019= [1, 4, 4] and M = 3 when we split the array as [1], [4], and [4], the maximum of 1, 4  and 4, is 4, which is the minimum possible.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n5 2\n1 2 3 4 5\n2 2\n1 2\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code> 9\n 2\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 5,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array 'ARR' of size 'N' and an integer 'M', the task is to split 'ARR' into 'M' non-overlapping, non-empty subarrays. The goal is to minimize the maximum sum among all subarrays. Find and return this minimum possible value of the maximum subarray sum.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10^5",
                    "1 <= M <= 100",
                    "0 <= ARR[i] <= 10^9",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "5 2\n7 2 6 10 8",
                        "output": "18",
                        "explanation": "Given ARR = [7, 2, 6, 10, 8] and M = 2, one possible split is [7, 2, 6] and [10, 8]. The sums are 15 and 18, respectively. The maximum of these sums is 18, which is the minimum possible maximum subarray sum."
                    },
                    {
                        "input": "3 3\n1 4 4",
                        "output": "4",
                        "explanation": "Given ARR = [1, 4, 4] and M = 3, the split is [1], [4], and [4]. The sums are 1, 4, and 4, respectively. The maximum of these sums is 4, which is the minimum possible maximum subarray sum."
                    },
                    {
                        "input": "5 2\n1 2 3 4 5",
                        "output": "9",
                        "explanation": "Given ARR = [1, 2, 3, 4, 5] and M = 2, one possible split is [1, 2, 3, 4] and [5]. The sums are 10 and 5 respectively. The maximum of these sums is 10. However a better split is [1,2,3] and [4,5] the sums are 6 and 9 respectively and max is 9 which the minimal possible."
                    },
                    {
                        "input": "2 2\n1 2",
                        "output": "2",
                        "explanation": "Given ARR = [1, 2] and M = 2, the split is [1] and [2]. The sums are 1 and 2, respectively. The maximum of these sums is 2, which is the minimum possible maximum subarray sum."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try the recursive approach.</p>",
            "<p>Try to memoise the solutions of the previous approach.</p>",
            "<p>Try to use the binary search approach to find the answer.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}