{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10008,
            "title": "SPLIT BINARY STRING",
            "titleSlug": "split-binary-string_1115684",
            "content": "<h4 id=\"chintu-has-a-long-binary-string-str-a-binary-string-is-a-string-that-contains-only-0-and-1-he-considers-a-string-beautiful-if-and-only-if-the-number-of-0s-and-1s-in-the-string-are-equal\">Chintu has a long binary string \u2018str\u2019. A binary string is a string that contains only 0 and 1. He considers a string \u2018beautiful\u2019 if and only if the number of 0&#39;s and 1&#39;s in the string are equal.</h4>\n\n<h4 id=\"for-example\">For example :</h4>\n\n<pre><code>0011 , 1100 , 101010 etc are beautiful strings whereas 1110, 0001,10101 etc are not beautiful strings.\n</code></pre>\n\n<h4 id=\"now-chintu-wants-to-split-the-string-into-substrings-such-that-each-substring-is-beautiful-can-you-help-chintu-to-find-the-maximum-number-of-beautiful-strings-he-can-split-the-string-into-if-it-is-not-possible-to-split-the-string-in-such-a-way-that-all-strings-are-beautiful-return-1\">Now Chintu wants to split the string into substrings such that each substring is beautiful. Can you help Chintu to find the maximum number of beautiful strings he can split the string into? If it is not possible to split the string in such a way that all strings are beautiful, return -1.</h4>\n\n<h4 id=\"for-example\">For example :</h4>\n\n<pre><code>Let the given string be \u201c101001\u201d\nWe will return 3 as we can divide the string into 3 beautiful strings \u201c10\u201d \u201c10\u201d and \u201c01\u2019.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of input contains an integer &#39;T\u2019 denoting the number of test cases to run. Then the test cases follow.\n\nThe first line of each test case contains the string \u2018str\u2019.        \n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, return the maximum number of substrings, \u2018str\u2019 can be split into such that each substring is beautiful.\n\nIf there are none, return -1.\n\nOutput for each test case will be printed in a new line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= N &lt;= 5000\n\nTime limit: 1 second\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n10101100\n11111111\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>3\n-1\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of sample input 1 :</h5>\n\n<pre><code>In the first test case,\nWe can split the given string into 3 beautiful substrings \u201810\u2019, \u201810\u2019, and \u20181100\u2019. Hence we return 3.\n\nIn the second test case,\nWe cannot split the given string into any beautiful string hence we return -1.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n1110001100\n0000111\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>2\n-1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": -3,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a binary string 'str' (containing only '0' and '1'), determine the maximum number of beautiful substrings it can be split into. A substring is considered 'beautiful' if it contains an equal number of '0's and '1's. If it's impossible to split the string into beautiful substrings, return -1.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= N <= 5000",
                    "Time limit: 1 second, where N is the length of the input string."
                ],
                "testcases": [
                    {
                        "input": "10101100",
                        "output": "3",
                        "explanation": "The string can be split into '10', '10', and '1100', each having an equal number of 0s and 1s."
                    },
                    {
                        "input": "11111111",
                        "output": "-1",
                        "explanation": "It's not possible to split the string into any beautiful substrings as there are no 0s."
                    },
                    {
                        "input": "1110001100",
                        "output": "2",
                        "explanation": "The string can be split into '111000' and '1100' each substring consists of equal numbers of 0s and 1s"
                    },
                    {
                        "input": "0000111",
                        "output": "-1",
                        "explanation": "It's not possible to split the string into any beautiful substrings"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><strong>Iterate through the given string and check the beautiful condition.</strong></p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}