{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10975,
            "title": "Split First N Squares",
            "titleSlug": "split-first-n-squares_1281313",
            "content": "<h4 id=\"you-are-given-an-integer-n-your-task-is-to-split-the-set-of-first-n-squares-into-two-sets-such-that-the-difference-of-their-sum-is-minimized-it-is-guaranteed-that-n-is-always-a-multiple-of-eight\">You are given an integer &#39;N&#39;. Your task is to split the set of first &#39;N&#39; squares into two sets such that the difference of their sum is minimized. It is guaranteed that &#39;N&#39; is always a multiple of eight.</h4>\n\n<h4 id=\"each-square-must-belong-to-one-and-exactly-one-set-return-a-binary-string-of-length-n-if-the-i-th-character-of-the-string-is-0-then-i-i-is-in-set1-else-in-set2\">Each square must belong to one and exactly one set. Return a binary string of length &#39;N&#39;,  if the \u2018i\u2019th character of the string is \u20180\u2019 then \u2018i\u2019 * \u2018i\u2019 is in Set1 else in Set2.</h4>\n\n<h5 id=\"for-example\">For example:</h5>\n\n<pre><code>N = 8, Set of first 8 squares = [1, 4, 9, 16, 25, 36, 49, 64]\n\nSet1 = [1, 16, 36, 49], Set2 = [64, 25, 9, 4]\n\nHere difference is (64 + 25 + 9 + 4) - (1 + 16 + 36 + 49 ) = 0 and = &quot;01101001&quot;\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer &#39;T&#39; denoting the number of test cases to run. Then the test case follows.\n\nThe first line of each test case contains an integer &#39;N&#39;. \n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case return a binary string of length &#39;N&#39;,   if the \u2018i\u2019th character of the string is \u20180\u2019 then \u2018i\u2019 * \u2018i\u2019 is in Set1 else in Set2. \n\nOutput for each test case is printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You don\u2019t need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 5000   \n\nN is always a multiple of 8. \n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n8 \n16\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>10010110\n0101001111111000\n</code></pre>\n\n<h5 id=\"explanation-for-sample-output-1\">Explanation For Sample Output 1:</h5>\n\n<pre><code>for the first test case, Set1 = [1, 16, 36, 49], Set2 = [64, 25, 9, 4]\n10010110 and 01101001 both are valid. \n\nFor the second test case, the minimum difference is 0. \n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n24\n32\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>101011111111111111100000\n10010110100101101001011010010110\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 7,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an integer 'N' that is a multiple of 8, divide the set of the first 'N' perfect squares (1, 4, 9, ..., N*N) into two distinct sets (Set1 and Set2).  Each square must belong to exactly one set. The goal is to minimize the absolute difference between the sums of the squares in Set1 and Set2. Return a binary string of length 'N' representing the sets. If the i-th character of the string is '0', then i*i belongs to Set1; otherwise (if the character is '1'), i*i belongs to Set2.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 5000",
                    "N is always a multiple of 8"
                ],
                "testcases": [
                    {
                        "input": "n = 8",
                        "output": "10010110",
                        "explanation": "One possible solution is Set1 = [1, 16, 36, 49], Set2 = [4, 9, 25, 64]. The absolute difference between the sums of the two sets is minimized (in this case, 0)."
                    },
                    {
                        "input": "n = 16",
                        "output": "0101001111111000",
                        "explanation": "One possible solution for N=16 that minimizes the difference between sums of squares in Set1 and Set2."
                    },
                    {
                        "input": "n = 24",
                        "output": "101011111111111111100000",
                        "explanation": "One possible solution for N=24 that minimizes the difference between sums of squares in Set1 and Set2."
                    },
                    {
                        "input": "n = 32",
                        "output": "10010110100101101001011010010110",
                        "explanation": "One possible solution for N=32 that minimizes the difference between sums of squares in Set1 and Set2."
                    },
                    {
                        "input": "n = 40",
                        "output": "1001011010010110100101101001011010010110",
                        "explanation": "N=40"
                    },
                    {
                        "input": "n = 48",
                        "output": "100101101001011010010110100101101001011010010110",
                        "explanation": "N=48"
                    },
                    {
                        "input": "n = 56",
                        "output": "1001011010010110100101101001011010010110100101101001011010010110",
                        "explanation": "N=56"
                    },
                    {
                        "input": "n = 64",
                        "output": "10010110100101101001011010010110100101101001011010010110100101101001011010010110",
                        "explanation": "N=64"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>We can always split 8 consecutive squares into two groups such that the difference of their sum is 0.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}