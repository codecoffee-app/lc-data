{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 14873,
            "title": "Split the String",
            "titleSlug": "split-the-string_2280377",
            "content": "<h4 id=\"you-are-given-a-string-s-consisting-of-lower-case-english-alphabets-find-the-number-of-good-splits\">You are given a string \u2018S\u2019 consisting of lower-case English alphabets, find the number of good splits.</h4>\n\n<h4 id=\"splitting-a-string-s-into-two-non-empty-strings-x-and-y-is-called-good-if-the-number-of-unique-characters-in-strings-x-and-y-is-equal\">Splitting a string \u2018S\u2019 into two <bold>non-empty</bold> strings \u2018X\u2019 and \u2018Y\u2019 is called good if the number of unique characters in strings \u2018X\u2019 and \u2018Y\u2019 is equal.</h4>\n\n<h5 id=\"for-example\">For Example :</h5>\n\n<pre><code>If string S is equal to \u201cabadaa\u201d.\n\nThen S can be split in the following ways:\nX = \u201ca\u201d and Y = \u201cbadaa\u201d, string X has 1 unique character and Y has 3 unique characters.\nX = \u201cab\u201d and Y = \u201cadaa\u201d, string X has 2 unique characters and Y has 2 unique characters.[GOOD SPLIT]\nX = \u201caba\u201d and Y = \u201cdaa\u201d, string X has 2 unique characters and Y has 2 unique characters.[GOOD SPLIT]\nX = \u201cabad\u201d and Y = \u201caa\u201d, string X has 3 unique characters and Y has 1 unique character.\nX = \u201cabada\u201d and Y = \u201ca\u201d, string X has 3 unique characters and Y has 1 unique character.\nTherefore we will return value 2 as we are able to find 2 good splits.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 denoting the number of test cases, then each test case follows:\n\nThe first line of each test case contains a string \u2018S\u2019 denoting the input string.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print a single integer denoting the number of good splits.\n\nOutput for each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You are not required to print anything; it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10      \n1 &lt;= S.length &lt;= 200\nS contains only lower-case English alphabets\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\nabadaa\nabcde\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>2\n0 \n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1 :</h5>\n\n<pre><code>For test case 1 : \nWe will return 2, because only 2 good splits are possible as shown below:\nX = \u201ca\u201d and Y = \u201cbadaa\u201d, string X has 1 unique character and Y has 3 unique characters.\nX = \u201cab\u201d and Y = \u201cadaa\u201d, string X has 2 unique characters and Y has 2 unique characters.[GOOD SPLIT]\nX = \u201caba\u201d and Y = \u201cdaa\u201d, string X has 2 unique characters and Y has 2 unique characters.[GOOD SPLIT]\nX = \u201cabad\u201d and Y = \u201caa\u201d, string X has 3 unique characters and Y has 1 unique character.\nX = \u201cabada\u201d and Y = \u201ca\u201d, string X has 3 unique characters and Y has 1 unique character.\n\nFor test case 2 : \nWe will return 0, because no good split is possible. All possible splits are shown:\nX = \u201ca\u201d and Y = \u201cbcde\u201d, string X has 1 unique character and Y has 4 unique characters.\nX = \u201cab\u201d and Y = \u201ccde\u201d, string X has 2 unique characters and Y has 3 unique characters. \nX = \u201cabc\u201d and Y = \u201cde\u201d, string X has 3 unique characters and Y has 2 unique characters.\nX = \u201cabcd\u201d and Y = \u201ce\u201d, string X has 4 unique characters and Y has 1 unique character.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\ncodingninjas\ncodestudio\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>0\n1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -2,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string 'S' consisting of lowercase English alphabets, determine the number of 'good splits'. A split of 'S' into two non-empty strings 'X' and 'Y' is considered 'good' if the number of unique characters in 'X' is equal to the number of unique characters in 'Y'.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= S.length <= 200",
                    "S contains only lower-case English alphabets",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "abadaa",
                        "output": "2",
                        "explanation": "There are two good splits: 'ab' and 'adaa' (2 unique chars each), and 'aba' and 'daa' (2 unique chars each)."
                    },
                    {
                        "input": "abcde",
                        "output": "0",
                        "explanation": "No good splits are possible for the string 'abcde'."
                    },
                    {
                        "input": "codingninjas",
                        "output": "0",
                        "explanation": null
                    },
                    {
                        "input": "codestudio",
                        "output": "1",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you take advantage of the small constraints?</p>",
            "<p>Can you precompute the number of distinct characters in a sub-substring that starts from the beginning? Is storing this prefix information enough? Or do we also need to precompute the suffix also?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}