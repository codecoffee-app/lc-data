{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 14763,
            "title": "Spotify Sessions",
            "titleSlug": "spotify-sessions_2246918",
            "content": "<pre><code>Table: Playback\n\n+-------------+------+\n| Column Name | Type |\n+-------------+------+\n| session_id  | int  |\n| customer_id | int  |\n| start_time  | int  |\n| end_time    | int  |\n+-------------+------+\nsession_id is the primary key for this table.\ncustomer_id is the ID of the customer watching this session.\nThe session runs during the inclusive interval between start_time and end_time.\nIt is guaranteed that start_time &lt;= end_time and that two sessions for the same customer do not intersect.\n\n\nTable: Ads\n\n +-------------+------+\n | Column Name | Type |\n +-------------+------+\n | ad_id       | int  |\n | customer_id | int  |\n | timestamp   | int  |\n +-------------+------+\nad_id is the primary key for this table.\nCustomer_id is the ID of the customer viewing this ad.\nTimestamp is the moment of time at which the ad was shown.\n\n\nWrite an SQL query to report all the sessions that did not get shown any ads.\n\nReturn the result table in any order.\n\nThe query result format is in the following example:\n\n\n\nPlayback table:\n\n+------------+-------------+------------+----------+\n| session_id | customer_id | start_time | end_time |\n+------------+-------------+------------+----------+\n| 1          | 1           | 1          | 5        |\n| 2          | 1           | 15         | 23       |\n| 3          | 2           | 10         | 12       |\n| 4          | 2           | 17         | 28       |\n| 5          | 2           | 2          | 8        |\n+------------+-------------+------------+----------+\n\nAds table:\n\n+-------+-------------+-----------+\n| ad_id | customer_id | timestamp |\n+-------+-------------+-----------+\n| 1     | 1           | 5         |\n| 2     | 2           | 17        |\n| 3     | 2           | 20        |\n+-------+-------------+-----------+\n\nResult table:\n\n+------------+\n| session_id |\n+------------+\n| 2          |\n| 3          |\n| 5          |\n+------------+\n\nThe ad with ID 1 was shown to user 1 at time 5 while they were in session 1.\nThe ad with ID 2 was shown to user 2 at time 17 while they were in session 4.\nThe ad with ID 3 was shown to user 2 at time 20 while they were in session 4. \nWe can see that sessions 1 and 4 had at least one ad. Sessions 2, 3, and 5 did not have any ads, so we return them.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 24,
            "dislikes": "NA",
            "rephrased": {
                "body": "Write an SQL query to identify all sessions from the `Playback` table during which no ads were shown to the customer. Return the `session_id` for each of these sessions. The result table should contain only the `session_id` column.",
                "constraints": [],
                "testcases": [
                    {
                        "input": "Playback table:\n+------------+-------------+------------+----------+\n| session_id | customer_id | start_time | end_time |\n+------------+-------------+------------+----------+\n| 1          | 1           | 1          | 5        |\n| 2          | 1           | 15         | 23       |\n| 3          | 2           | 10         | 12       |\n| 4          | 2           | 17         | 28       |\n| 5          | 2           | 2          | 8        |\n+------------+-------------+------------+----------+\n\nAds table:\n+-------+-------------+-----------+\n| ad_id | customer_id | timestamp |\n+-------+-------------+-----------+\n| 1     | 1           | 5         |\n| 2     | 2           | 17        |\n| 3     | 2           | 20        |\n+-------+-------------+-----------+",
                        "output": "+------------+\n| session_id |\n+------------+\n| 2          |\n| 3          |\n| 5          |\n+------------+",
                        "explanation": "Session 1 had an ad shown to customer 1 at time 5 (within the session's time frame). Session 4 had ads shown to customer 2 at times 17 and 20. Sessions 2, 3, and 5 had no ads shown during their respective timeframes."
                    },
                    {
                        "input": "Playback table:\n+------------+-------------+------------+----------+\n| session_id | customer_id | start_time | end_time |\n+------------+-------------+------------+----------+\n| 1          | 1           | 1          | 5        |\n| 2          | 1           | 6          | 10       |\n+------------+-------------+------------+----------+\n\nAds table:\n+-------+-------------+-----------+\n| ad_id | customer_id | timestamp |\n+-------+-------------+-----------+\n| 1     | 1           | 3         |\n| 2     | 1           | 8         |\n+-------+-------------+-----------+",
                        "output": "+------------+\n| session_id |\n+------------+\n|            |\n+------------+",
                        "explanation": "Both sessions 1 and 2 had ads shown during their playback. Ad 1 was shown during session 1, and ad 2 was shown during session 2.  Therefore, no sessions are returned."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "SQL",
                "slug": "sql"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}