{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 11524,
            "title": "Spreading Smoke",
            "titleSlug": "spreading-smoke_1381967",
            "content": "<h4 id=\"you-are-given-a-room-as-a-grid-of-1-s-and-0-s-1-indicating-blocked-cell-and-0-indicating-a-free-cell-there-is-a-bomb-in-the-xth-row-from-the-top-and-y-th-column-from-the-left-the-bomb-went-off-and-smoke-was-starting-to-spread-in-one-sec-smoke-can-spread-to-an-adjacent-cell-if-the-adjacent-cell-has-0-in-it-the-bomb-is-always-at-the-free-cell\">You are given a room as a grid of 1\u2019s and 0\u2019s. 1 indicating blocked cell and 0 indicating a free cell. There is a bomb in the X&#39;th row from the top and Y\u2019th column from the left. The bomb went off and smoke was starting to spread. In one sec smoke can spread to an adjacent cell if the adjacent cell has 0 in it. The bomb is always at the free cell.</h4>\n\n<h4 id=\"find-the-minimum-time-for-the-smoke-to-spread-across-all-the-reachable-cells-a-cell-is-reachable-from-another-cell-if-you-can-travel-from-one-cell-to-another-via-cells-containing-0-s\">Find the minimum time for the smoke to spread across all the reachable cells. A cell is reachable from another cell if you can travel from one cell to another via cells containing 0\u2019s.</h4>\n\n<h4 id=\"cells-are-adjacent-if-they-share-a-common-edge\">Cells are adjacent if they share a common edge.</h4>\n\n<h4 id=\"for-example\">For example:</h4>\n\n<pre><code> GRID=[[1,1,0,1],\n       [1,0,0,0],\n       [1,1,0,1]]\nX,Y= (2, 3)\nANS = 2\nIn 1\u2019st sec smoke will spread to (1, 3), (3, 3), (2, 2), (2, 4) \nIn 2\u2019nd sec smoke will spread to (2, 1) \n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of input contains an integer T\u2019 denoting the number of test cases to run. Then the test case follows.\n\nThe first line of each test case contains four space-separated integers \u2018N\u2019, \u2018M\u2019, \u2018X\u2019, \u2018Y\u2019, dimensions of the room and the co-ordinate of the bomb.\n\nThe next N lines of each test cases contain M space-separated integers denoting the elements of the grid.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case print the minimum amount of time taken by the room to spread across all the reachable cells.\n\nOutput for each test case is printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don\u2019t need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= N, M &lt;= 500\n1 &lt;= X &lt;= N\n1 &lt;= Y &lt;=M\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n2 2 1 1\n0 0\n1 0\n1 7 1 6\n0 0 0 0 0 0 0 \n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>2\n5\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1 :</h5>\n\n<pre><code>Lets denote a cell by S if it have smoke \nFor the first test , \nAt time 0\nGRID=[[S, 0],\n      [1, 0]]\n\nAt time 1\nGRID=[[S, S],\n      [1, 0]]\nAt time 2\nGRID=[[S, S],\n      [1, S]]\n\nFor the second test case, it will take 5 sec for the smoke to travel from (1,6) to (0,0)\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2 \n5 5 5 5 \n0 0 0 0 0\n1 1 1 1 0\n0 0 0 0 0\n0 1 1 1 1\n0 0 0 0 0\n5 5 3 3\n0 0 0 0 0\n1 1 1 1 0\n0 0 0 1 0\n0 1 1 1 0\n0 0 0 0 0\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>16\n16\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 8,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a grid representing a room where '1' indicates a blocked cell and '0' indicates a free cell, and a bomb's location (x, y) within the grid (always a free cell), determine the minimum time required for smoke to spread to all reachable free cells. Smoke spreads to adjacent (horizontally or vertically) free cells in one unit of time.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= N, M <= 500",
                    "1 <= X <= N",
                    "1 <= Y <= M"
                ],
                "testcases": [
                    {
                        "input": "grid=[[1,1,0,1],[1,0,0,0],[1,1,0,1]], x=2, y=3",
                        "output": "2",
                        "explanation": "In 1\u2019st sec smoke will spread to (1, 3), (3, 3), (2, 2), (2, 4). In 2\u2019nd sec smoke will spread to (2, 1)."
                    },
                    {
                        "input": "grid=[[0,0],[1,0]], x=1, y=1",
                        "output": "2",
                        "explanation": "At time 0: GRID=[[S, 0],[1, 0]]. At time 1: GRID=[[S, S],[1, 0]]. At time 2: GRID=[[S, S],[1, S]]."
                    },
                    {
                        "input": "grid=[[0,0,0,0,0,0,0]], x=1, y=6",
                        "output": "5",
                        "explanation": "It will take 5 sec for the smoke to travel from (1,6) to (1,0)."
                    },
                    {
                        "input": "grid=[[0,0,0,0,0],[1,1,1,1,0],[0,0,0,0,0],[0,1,1,1,1],[0,0,0,0,0]], x=5, y=5",
                        "output": "16",
                        "explanation": "The smoke needs to navigate around the block of 1's. It takes longer to reach some of the corners."
                    },
                    {
                        "input": "grid=[[0,0,0,0,0],[1,1,1,1,0],[0,0,0,1,0],[0,1,1,1,0],[0,0,0,0,0]], x=3, y=3",
                        "output": "16",
                        "explanation": "The smoke needs to navigate around the block of 1's. It takes longer to reach some of the corners."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can we use a breadth-first search to find the Minimum time for the smoke to spread ??</p>"
        ],
        "relatedTopics": [
            {
                "name": "Breadth-first Search",
                "slug": "breadth-first-search"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}