{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 11114,
            "title": "Stones falling ",
            "titleSlug": "stones-falling_1377939",
            "content": "<h4 id=\"this-time-ninja-has-a-grid-of-size-n-x-m-of-binary-values-0s-and-1s-the-1s-in-a-cell-represent-the-stones-a-stone-will-not-fall-when-that-satisfies-2-conditions\">This time Ninja has a &#39;GRID&#39; of size &#39;N&#39; x &#39;M&#39; of binary values (0s and 1s) the 1s in a cell represent the stones. A stone will not fall when that satisfies 2 conditions:</h4>\n\n<h4 id=\"1-it-is-directly-connected-to-the-top-of-the-grid\">1) It is directly connected to the top of the grid</h4>\n\n<h4 id=\"2-at-least-one-of-its-adjacent-top-bottom-left-right-stones-will-not-fall\">2) At least one of its adjacent (top,bottom,left, right) stones will not fall.</h4>\n\n<h4 id=\"ninja-has-r-sequence-of-locations-of-stones-given-in-a-matrix-rem-of-size-r-x-2-in-each-case-he-wants-to-remove-the-stone-placed-at-i-j-place-but-due-to-this-action-some-other-stones-will-also-fall-so-he-needs-your-help-to-find-the-number-of-stones-that-fall-after-each-removal-in-sequence\">Ninja has &#39;R&#39; sequence of locations of stones (given in a matrix &#39;REM&#39; of size &#39;R&#39; X 2). In each case, he wants to remove the stone placed at (i, j) place but due to this action, some other stones will also fall. So he needs your help to find the number of stones that fall after each removal in sequence.</h4>\n\n<h4 id=\"return-an-array-of-size-r-denoting-the-number-of-stones-that-fall-after-each-removal-of-a-stone\">Return an array of size &#39;R&#39; denoting the number of stones that fall after each removal of a stone.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>Sometimes a removal may refer to a location with no stone, in that case, no stone fall.\n</code></pre>\n\n<h4 id=\"input-format\">Input Format:</h4>\n\n<pre><code>The first line of input contains an integer &#39;T&#39; representing the number of test cases.\n\nThe first line of each test case contains three space-separated integers, &#39;N&#39;, &#39;M&#39; and \u2018R\u2019, denoting the number of rows and columns in the matrix &#39;GRID\u2019&#39;, respectively and \u2018R\u2019, denoting the number of the location he has to remove.\n\nEach of the next &#39;N&#39; lines contains &#39;M&#39; space-separated integers(0s or 1s) denoting the matrix \u2018GRID&#39; elements.\n\nNext \u2018R\u2019 lines contain 2 integers denoting the removal of stone placed at ( i, j ) position in the &#39;GRID&#39;.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print a single line containing space-separated integers denoting the number of stones that fall after each removal of a stone.\n\nThe output for each test case is printed in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= N, M &lt;= 200\n1 &lt;= R &lt;= N * M   \n\nWhere \u2018T\u2019 is the number of test cases, \u2018N\u2019 and \u2018M\u2019 is the number of rows and columns respectively and \u2018R\u2019 is the number of removal operations.\n\nTime limit: 1 sec.\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1:</h4>\n\n<pre><code>2\n3 3 1\n1 1 0 \n1 0 0\n1 1 1\n1 0\n2 3 2\n1 1 1\n1 0 1\n0 0\n1 2\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1:</h4>\n\n<pre><code>3\n1 0    \n</code></pre>\n\n<h4 id=\"explanation-of-sample-output-1\">Explanation of Sample Output 1:</h4>\n\n<pre><code>Test Case 1 : On removing stone at (1, 0) all the stones below it i.e. (2, 0), (2, 1), (2, 2) will fall.\nHence, the answer is 3 \n\nTest Case 2:  Here we have two locations to remove.\nFirst is (0, 0), on removing this, stone present at (1, 0) will fall so the answer for this location is 1.\nIn the second location, there is no stone available so we return 0. \n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2:</h4>\n\n<pre><code>1\n3 3 2\n1 0 1\n0 1 1\n0 1 0\n1 2\n1 1\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2:</h4>\n\n<pre><code>2 0  \n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 4,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a grid of binary values representing stones, determine the number of stones that will fall after removing a stone at a given location. A stone falls if it is not directly connected to the top of the grid and none of its adjacent stones (top, bottom, left, right) are stable (i.e., do not fall).  Given a sequence of removal locations, calculate the number of stones that fall after each removal.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= N, M <= 200",
                    "1 <= R <= N * M"
                ],
                "testcases": [
                    {
                        "input": "n = 3, m = 3, r = 1, grid = [[1, 1, 0], [1, 0, 0], [1, 1, 1]], rem = [[1, 0]]",
                        "output": "3",
                        "explanation": "On removing the stone at (1, 0), the stones at (2, 0), (2, 1), and (2, 2) will fall because they lose their support."
                    },
                    {
                        "input": "n = 2, m = 3, r = 2, grid = [[1, 1, 1], [1, 0, 1]], rem = [[0, 0], [1, 2]]",
                        "output": "1 0",
                        "explanation": "Removing the stone at (0, 0) causes the stone at (1, 0) to fall. Removing the stone at (1, 2) results in 0 stones falling, because there are no stones below (1,2) and the 0 is replaced on the grid, hence other stones are supported by it."
                    },
                    {
                        "input": "n = 3, m = 3, r = 2, grid = [[1, 0, 1], [0, 1, 1], [0, 1, 0]], rem = [[1, 2], [1, 1]]",
                        "output": "2 0",
                        "explanation": "Removing the stone at (1, 2) will cause the stones at (1,1) and (2,1) to fall. Removing the stone at (1, 1) will not causes any other stone to fall."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to think in the reverse direction using DSU(disjoint set union).&nbsp;</p>"
        ],
        "relatedTopics": [],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}