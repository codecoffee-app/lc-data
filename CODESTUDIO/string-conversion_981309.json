{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9275,
            "title": "String Conversion",
            "titleSlug": "string-conversion_981309",
            "content": "<h4 id=\"you-have-given-two-strings-a-and-b-of-length-n-each-which-only-consists-of-lowercase-english-letters-you-have-also-given-an-integer-k\">You have given two strings &#39;A&#39; and \u2018B\u2019 of length \u2018N\u2019 each which only consists of lowercase English letters. You have also given an integer \u2018K\u2019.</h4>\n\n<h4 id=\"your-task-is-to-determine-if-it-is-possible-to-convert-string-a-into-b-after-performing-two-types-of-operations-on-it\">Your task is to determine if it is possible to convert string \u2018A\u2019 into \u2018B\u2019 after performing two types of operations on it:</h4>\n\n<pre><code>1. Choose an index i (1 &lt;= i &lt;= N - 1) and swap A[i] and A[i+1].\n2. Choose an index i (1 &lt;= i &lt;= N - K + 1) and if A[i], A[i+1],. . . . , A[i+K-1] all are equal to some character x (x != \u2018z\u2019), then you can replace each one with the next character (x + 1) , i.e. \u2018a\u2019 is replaced by \u2018b\u2019, \u2018b\u2019 is replaced by \u2018c\u2019 and so on.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You are allowed to perform any operation any number of times(possibly zero) only on string &#39;A&#39;.\n</code></pre>\n\n<h5 id=\"for-example\">For example-</h5>\n\n<pre><code>If the given strings are A = \u2018xbbx\u2019 and B = \u2018xddx\u2019 and K is given as 2. Then it is possible to convert string A into B by applying the second operation two times on index 2 (1 based indexing).\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains an integer &#39;T&#39; which denotes the number of test cases or queries to be run. Then the test cases follow.\n\nThe first line of each test case contains two space-separated integers \u2018N\u2019 and \u2018K\u2019, respectively.\n\nThe second line of each test case contains the string \u2018A&#39;.\n\nThe third line of each test case contains the string \u2018B&#39;.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>The only line of output contains a string \u201cYes\u201d if it is possible to convert string A into B, else \u201cNo\u201d.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= N &lt;= 5000\n1 &lt;= K &lt;= N\n\nTime Limit: 1 sec \n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1\n6 2\ncccffc \neeeegg\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample output 1:</h5>\n\n<pre><code>Yes\n</code></pre>\n\n<h5 id=\"explanation-of-sample-output-1\">Explanation of Sample output 1:</h5>\n\n<pre><code>It is possible to convert the string \u2018cccffc\u2019 into \u2018eeeegg\u2019. Firstly, apply operation 1 on index 5 (\u2018cccfcf\u2019). Then operation 1 on index 4 (\u2018ccccff\u2019). Finally, apply operation 2 on index 5 (\u2018ccccgg\u2019). \n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n4 3\naaaa\naaaa\n3 3\nabc\nbcd\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample output 2:</h5>\n\n<pre><code>Yes\nNo\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 1,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two strings 'A' and 'B' of length 'N', consisting of lowercase English letters, and an integer 'K', determine if it's possible to transform string 'A' into 'B'. You can perform two operations on string 'A' any number of times:\n\n1. Swap adjacent characters: Choose an index i (1 <= i <= N - 1) and swap A[i] and A[i+1].\n2. Increment K consecutive characters: Choose an index i (1 <= i <= N - K + 1). If A[i], A[i+1], ..., A[i+K-1] are all equal to some character x (x != 'z'), replace each with the next character (x + 1) in the alphabet (e.g., 'a' becomes 'b', 'b' becomes 'c').",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= N <= 5000",
                    "1 <= K <= N"
                ],
                "testcases": [
                    {
                        "input": "n = 6, k = 2, a = \"cccffc\", b = \"eeeegg\"",
                        "output": "Yes",
                        "explanation": "It is possible to convert the string \u2018cccffc\u2019 into \u2018eeeegg\u2019. Firstly, apply operation 1 on index 5 (\u2018cccfcf\u2019). Then operation 1 on index 4 (\u2018ccccff\u2019). Finally, apply operation 2 on index 5 (\u2018ccccgg\u2019)."
                    },
                    {
                        "input": "n = 4, k = 3, a = \"aaaa\", b = \"aaaa\"",
                        "output": "Yes",
                        "explanation": "The strings are already equal, so no operations are needed."
                    },
                    {
                        "input": "n = 3, k = 3, a = \"abc\", b = \"bcd\"",
                        "output": "No",
                        "explanation": "It's impossible to transform 'abc' into 'bcd' using the given operations."
                    },
                    {
                        "input": "n = 4, k = 2, a = \"xbbx\", b = \"xddx\"",
                        "output": "Yes",
                        "explanation": "Apply operation 2 twice on index 2 (1-based indexing) of 'xbbx'."
                    },
                    {
                        "input": "n = 5, k = 1, a = \"aaaaa\", b = \"eeeee\"",
                        "output": "Yes",
                        "explanation": "Increment each character of string A, 4 times."
                    },
                    {
                        "input": "n = 5, k = 2, a = \"abcde\", b = \"abcdf\"",
                        "output": "No",
                        "explanation": "It is impossible to make the final element of 'a' equal to the final element of 'b'."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try a greedy approach to solve the problem.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}