{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 14733,
            "title": "String Reformat",
            "titleSlug": "string-reformat_2242799",
            "content": "<h4 id=\"you-are-given-a-string-s-consisting-of-alphanumeric-characters-the-string-divided-into-groups-by-a-your-task-is-to-reformat-the-string-that-all-the-groups-contain-exactly-k-characters-all-the-lowercase-characters-should-be-converted-to-uppercase\">You are given a string \u2018S\u2019 consisting of alphanumeric characters, the string divided into groups by a \u2018-\u2019. Your task is to reformat the string that all the groups contain exactly \u2018K\u2019 characters. All the lowercase characters should be converted to uppercase.</h4>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>The first group may have fewer characters than \u2018K\u2019.\n</code></pre>\n\n<h5 id=\"for-example\">For example:</h5>\n\n<pre><code>You are given \u2018S\u2019 =\u2019A1-ijklmno-pqr\u2019 and k = \u20183\u2019, then the string contains 3 parts, [\u201cA1\u201d, \u201cijklmno\u201d, \u201cpqr\u201d], then you can form the string in groups [&quot;A1I\u201d, \u201cJKL\u201d, \u201cMNO\u201d, \u201cPQR&quot;] of uppercase characters. Hence the answer is &quot;A1I-JKL-MNO-PQR&quot;\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code> The first line of input contains the integer \u2018T\u2019 representing the number of test cases.\n\nThe first line of each test case contains one integer \u2018K\u2019, representing the size of the group the string is to be divided.\n\nThe second line of each test case contains the string \u2018S\u2019 representing the given string.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print a single string consisting of alphanumeric characters divided into groups of size \u2018K\u2019 separated by \u2018-\u2019.\n\nPrint a separate line for each test case.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= K &lt;= 10^8\n1 &lt;= |S| &lt;= 10^8\n\nAll characters in \u2018S\u2019 are alphanumeric and \u2018-\u2019.\n\nTime Limit: 1 sec\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the function.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n3\nAb-ijklmno-pqr\n4\nIsa-dkj\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>ABI-JKL-MNO-PQR\nIS-ADKJ\n</code></pre>\n\n<h5 id=\"explanation\">Explanation:</h5>\n\n<pre><code>For the first test case \u2018S\u2019 = \u2019Ab-ijklmno-pqr\u2019 and \u2018K\u2019 = \u20183\u2019, then the string contains 3 groups, [\u201cAb\u201d, \u201cijklmno\u201d, \u201cpqr\u201d], then you can form the string in groups [&quot;ABI\u201d, \u201cJKL\u201d, \u201cMNO\u201d, \u201cPQR&quot;] of uppercase characters. Hence the answer is &quot;ABI-JKL-MNO-PQR&quot;.\n\nFor the second test case \u2018S\u2019 = \u201cIsa-dkj\u201d and \u2018K\u2019 = \u20184\u2019, then the string contains 2 groups, [\u201cIsa\u201d, \u201cdkj\u201d], then you can form the string in groups [&quot;IS\u201d, \u201cADKJ\u201d] of uppercase characters. Hence the answer is &quot;IS-ADKJ&quot;.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n2\na-b-1\n1\nabcdef\n</code></pre>\n\n<h6 id=\"sample-output-2\">Sample Output 2:</h6>\n\n<pre><code>A-B1\nA-B-C-D-E-F\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 7,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string 'S' consisting of alphanumeric characters, where groups of characters are separated by hyphens ('-'), reformat the string such that each group contains exactly 'K' characters. Convert all lowercase characters to uppercase. The first group may contain fewer than 'K' characters.",
                "constraints": [
                    "1 <= T <= 10 (Number of test cases)",
                    "1 <= K <= 10^8 (Group size)",
                    "1 <= |S| <= 10^8 (Length of the string S)",
                    "All characters in \u2018S\u2019 are alphanumeric and \u2018-\u2019."
                ],
                "testcases": [
                    {
                        "input": "3\nAb-ijklmno-pqr\n4\nIsa-dkj",
                        "output": "ABI-JKL-MNO-PQR\nIS-ADKJ",
                        "explanation": "Test Case 1: 'Ab-ijklmno-pqr' with K=3. The string is processed to 'ABI-JKL-MNO-PQR'.\nTest Case 2: 'Isa-dkj' with K=4. The string is processed to 'IS-ADKJ'."
                    },
                    {
                        "input": "2\na-b-1\n1\nabcdef",
                        "output": "A-B1\nA-B-C-D-E-F",
                        "explanation": "Test Case 1: 'a-b-1' with K=2. The string is processed to 'A-B1'.\nTest Case 2: 'abcdef' with K=1. The string is processed to 'A-B-C-D-E-F'."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to remove the separator from the string.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}