{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 18374,
            "title": "String Sort",
            "titleSlug": "string-sort_4168971",
            "content": "<h4 id=\"you-are-given-n-strings-and-you-would-like-to-sort-them-in-lexicographical-order-a-string-s-is-lexicographically-ordered-before-t-if-s-occurs-before-t-in-the-english-dictionary-i-e-alphabetical-ordering\">You are given \u2018N\u2019 strings, and you would like to sort them in lexicographical order (A string &#39;S&#39; is lexicographically ordered before &#39;T&#39; if &#39;S&#39; occurs before &#39;T&#39; in the English dictionary i.e alphabetical ordering).</h4>\n\n<h4 id=\"however-you-cannot-swap-or-change-the-positions-of-any-strings-the-only-operation-you-can-do-is-reverse-some-of-the-strings-each-string-has-a-cost-associated-with-it-and-reversing-a-string-str-i-costs-cost-i-rupees\">However, you cannot swap or change the positions of any strings. The only operation you can do is reverse some of the strings. Each string has a cost associated with it, and reversing a string \u2018Str[i]\u2019 costs \u2018Cost[i]\u2019 rupees.</h4>\n\n<h4 id=\"calculate-the-minimum-cost-required-to-make-all-the-strings-lexicographically-ordered-or-report-that-it-is-impossible-by-printing-1\">Calculate the minimum cost required to make all the strings lexicographically ordered, or report that it is impossible by printing -1.</h4>\n\n<h4 id=\"for-example\">For example :</h4>\n\n<pre><code> If the strings are [\u2018ba\u2019, \u2018ac\u2019] and the cost array is [3,2], reversing the second string costs \u20182\u2019 rupees and sorts the strings. It can be proved that this is the least possible cost that can be achieved. \n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains &#39;T&#39;, denoting the number of test cases.\n\nFor each Test :\n\nThe first line contains an integer \u2018N\u2019, the size of the array.\nThe second line contains \u2018N\u2019 space-separated integers, denoting the \u2018Cost\u2019 array.\nThe next \u2018N\u2019 lines each contain a string, Str[i].\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print the minimum cost required to sort the strings or \u2018-1\u2019 if it is impossible to sort them. Print the answer for each case on a new line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You are not required to print the expected output. It has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n2 &lt;= N &lt;= 10^5\n0 &lt;= Cost[i] &lt;= 10^4\n1 &lt;= Size(Str[i]) &lt;= 10^5\n\nNote: It is guaranteed that the sum of N across all test cases will be at most 10^5, and the sum of sizes of the strings across all cases is also 10^5. All strings only contain lowercase English alphabets.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>1\n3\n2 3 1\nba\nac\nzzz\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>2\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1 :</h5>\n\n<pre><code>For test case 1 :\n    Reversing the first string costs 2, and makes the strings sorted.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>1\n2\n3 4\nb\na\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>-1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -3,
            "dislikes": "NA",
            "rephrased": {
                "body": "You are given 'N' strings. Your goal is to sort them in lexicographical order (alphabetical order). You can only reverse strings, and each string has a cost associated with reversing it.  Calculate the minimum cost required to make the strings lexicographically ordered. You cannot change the positions of the strings. If it's impossible to sort them, report -1.",
                "constraints": [
                    "1 <= T <= 10",
                    "2 <= N <= 10^5",
                    "0 <= Cost[i] <= 10^4",
                    "1 <= Size(Str[i]) <= 10^5",
                    "The sum of N across all test cases will be at most 10^5.",
                    "The sum of sizes of the strings across all cases is also 10^5.",
                    "All strings only contain lowercase English alphabets.",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "1\n3\n2 3 1\nba\nac\nzzz",
                        "output": "2",
                        "explanation": "Reversing the first string costs 2, which results in the strings being sorted in lexicographical order ['ab', 'ac', 'zzz']. This is the minimum cost to achieve the sorted order."
                    },
                    {
                        "input": "1\n2\n3 4\nb\na",
                        "output": "-1",
                        "explanation": "It is impossible to sort the strings lexicographically using reversals. Reversing 'b' would result in 'b', which is still lexicographically greater than 'a'. Reversing 'a' does not help. Reversing both results in 'b', 'a' which is still unsorted, thus the result is -1."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}