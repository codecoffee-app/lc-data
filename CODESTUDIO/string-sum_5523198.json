{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 22125,
            "title": "String Sum",
            "titleSlug": "string-sum_5523198",
            "content": "<h4 id=\"dhoni-is-the-security-administrator-of-the-company-you-are-working-and-you-are-junior-to-him-dhoni-s-job-is-to-come-up-with-new-and-innovative-encryption-algorithms-to-encrypt-the-data-while-sending-it-to-the-receiver\">Dhoni is the security administrator of the company you are working and you are junior to him. Dhoni\u2019s job is to come up with new and innovative encryption algorithms to encrypt the data while sending it to the receiver.</h4>\n\n<h4 id=\"he-came-up-with-a-new-encryption-algorithm-as-follows-let-s-suppose-there-is-a-string-str-of-length-n-which-consists-of-lowercase-english-letters-and-numbers-from-0-to-9\">He came up with a new encryption algorithm as follows: Let\u2019s suppose there is a string \u2018STR\u2019 of length \u2018N\u2019 which consists of lowercase English letters and numbers from \u20180\u2019 to \u20189\u2019.</h4>\n\n<h4 id=\"the-above-algorithm-will-first-find-the-total-of-all-the-digits-occurring-in-the-string-str-and-remove-them-from-the-string-then-will-sort-the-whole-string-in-alphabetical-order-and-push-all-digits-sum-at-the-end-of-the-above-generated-string-in-case-there-is-no-digit-present-in-the-given-string-we-dont-add-anything-at-the-end\">The above algorithm will first find the total of all the digits occurring in the string \u2018STR\u2019 and remove them from the string, then will sort the whole string in alphabetical order and push all digits sum at the end of the above-generated string. In case there is no digit present in the given string, we don&#39;t add anything at the end.</h4>\n\n<h4 id=\"he-is-analyzing-how-effective-this-algorithm-will-be-so-he-asked-you-to-automate-this-process-so-that-he-gets-the-results-quicker\">He is analyzing how effective this algorithm will be so he asked you to automate this process so that he gets the results quicker.</h4>\n\n<h4 id=\"so-can-you-help-hip-to-automate-this-process\">So can you help hip to automate this process?.</h4>\n\n<h4 id=\"note-the-sum-of-numbers-occurring-in-the-string-may-have-more-than-one-digit\">NOTE: The sum of numbers occurring in the string may have more than one digit.</h4>\n\n<h5 id=\"example\">EXAMPLE :</h5>\n\n<pre><code>Input: \u2018N\u2019 = 7, \u2018STR\u2019 = ac2bew3\n\nOutput: abcew5\nIn this case, the digit occurring in the \u2018STR\u2019 is \u20182\u2019 and \u20183\u2019. Their sum is \u20185\u2019. And when we sort the letters in alphabetical order we get \u201cabcew\u201d. Hence the concatenation of both is \u201cabcew5\u201d.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line will contain the integer &#39;T&#39;, the number of test cases.\n\nEach test case consists of two lines.\n\nThe first line of input contains one integer, \u2018N\u2019 the length of the string \u2018STR\u2019.\n\nFollowed by a line containing the string \u2018STR\u2019 of length \u2018N\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case, print the final string obtained after performing the mentioned steps.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don&#39;t need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= \u2018T\u2019 &lt;= 10\n1 &lt;= \u2018N\u2019 &lt;= 10^5\n\u2018STR\u2019 consists of lowercase letters or digits.\nIt is guaranteed that sum of \u2018N\u2019 over all test cases is &lt;= 10^5\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n4\nx3a8\n5\n36zab\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>ax11\nabz9\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1 :</h5>\n\n<pre><code>For the first test case, the digits in the given string are \u20183\u2019 and \u20188\u2019. Their sum is \u201811\u2019. And when we sort the letters in alphabetical order we get \u201cax\u201d. Hence the concatenation of both is \u201cax11\u201d.\n\nHence, the output will be: ax11\n\nFor the second test case, the digits in the given string are \u20183\u2019 and \u20186\u2019. Their sum is \u20189\u2019. And when we sort the letters in alphabetical order we get \u201cabz\u201d. Hence the concatenation of both is \u201cabz9\u201d.\n\nHence, the output will be: abz9\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n5\n78345\n5\nzycba\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>27\nabcyz\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 7,
            "dislikes": "NA",
            "rephrased": {
                "body": "Dhoni, the security administrator, has devised a new encryption algorithm. Given a string 'STR' of length 'N' containing lowercase English letters and digits, the algorithm involves two steps. First, compute the sum of all digits in 'STR' and remove them from the string. Second, sort the remaining letters in alphabetical order. Finally, append the digit sum to the sorted string. If 'STR' contains no digits, append nothing. Your task is to automate this encryption process.",
                "constraints": [
                    "1 <= \u2018T\u2019 <= 10",
                    "1 <= \u2018N\u2019 <= 10^5",
                    "\u2018STR\u2019 consists of lowercase letters or digits.",
                    "It is guaranteed that the sum of \u2018N\u2019 over all test cases is <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "n = 7, str = ac2bew3",
                        "output": "abcew5",
                        "explanation": "The digits in the input string are '2' and '3', their sum is 5.  Removing the digits and sorting the remaining letters 'acbew' results in 'abcew'. Appending the digit sum '5' gives 'abcew5'."
                    },
                    {
                        "input": "n = 4, str = x3a8",
                        "output": "ax11",
                        "explanation": "The digits in the input string are '3' and '8', their sum is 11.  Removing the digits and sorting the remaining letters 'xa' results in 'ax'. Appending the digit sum '11' gives 'ax11'."
                    },
                    {
                        "input": "n = 5, str = 36zab",
                        "output": "abz9",
                        "explanation": "The digits in the input string are '3' and '6', their sum is 9. Removing the digits and sorting the remaining letters 'zab' results in 'abz'. Appending the digit sum '9' gives 'abz9'."
                    },
                    {
                        "input": "n = 5, str = 78345",
                        "output": "27",
                        "explanation": "The digits in the input string are '7', '8', '3', '4', and '5', their sum is 27. Removing the digits leaves an empty string. Appending the digit sum '27' gives '27'."
                    },
                    {
                        "input": "n = 5, str = zycba",
                        "output": "abcyz",
                        "explanation": "The input string contains no digits, so the sum is 0. Sorting 'zycba' gives 'abcyz'. Since there's no digit sum, we just return 'abcyz'."
                    },
                    {
                        "input": "n = 8, str = abc1defg",
                        "output": "abcdefg1",
                        "explanation": "The digit in the input string is '1', their sum is 1. Removing the digit and sorting the remaining letters 'abcdefg' results in 'abcdefg'. Appending the digit sum '1' gives 'abcdefg1'."
                    },
                    {
                        "input": "n = 6, str = abcdef",
                        "output": "abcdef",
                        "explanation": "The input string contains no digits. Sorting the letters results in 'abcdef'. As the sum of digits is 0, we do not append anything."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><strong>Can we divide the problem into two parts?.</strong></p>",
            "<p><strong>Can we have better sorting time complexity?.</strong></p>"
        ],
        "relatedTopics": [
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}