{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12413,
            "title": " String without 000 or 111",
            "titleSlug": "string-without-000-or-111_1459384",
            "content": "<h4 id=\"you-have-to-create-any-binary-string-s-of-length-m-n-which-has-exactly-m-0-s-and-n-1-s-s-can-not-have-111-or-000-as-a-substring\">You have to create any binary string \u2018S\u2019 of length \u2018M+N\u2019 which has exactly \u2018M\u2019 0\u2019s and \u2018N\u2019 1\u2019s. S can not have \u2018111\u2019 or \u2018000\u2019 as a substring.</h4>\n\n<h4 id=\"given-m-and-n-it-is-guaranteed-that-there-exists-at-least-one-binary-string-s\">Given \u2018M\u2019 and \u2018N\u2019 it is guaranteed that there exists at least one binary string \u2018S\u2019.</h4>\n\n<h4 id=\"the-substring-of-a-string-is-obtained-by-deleting-characters-from-the-start-and-end-of-the-string\">The substring of a string is obtained by deleting characters from the start and end of the string.</h4>\n\n<h5 id=\"for-example\">For example:</h5>\n\n<pre><code>M = 6, N = 6\nANS = \u201c110011001100\u201d\n\nIn ans no three consecutive characters are same. \nANS=\u201d001100110011\u201d is also a valid answer.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer &#39;T\u2019 denoting the number of test cases to run. Then the test case follows.\n\nThe first line and the only line of each test case contain two space-separated integers \u2018M\u2019 and \u2018N\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case print any binary string \u2018S\u2019 satisfying all the conditions. \n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You don\u2019t need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= M+N &lt;= 5000 \n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n4 1\n4 2\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>00100\n001100\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1:</h5>\n\n<pre><code>For the first test case, there is only one correct binary string \u201800100\u2019 \n\nFor the second test case \u201c001100\u201d, \u201c010100\u201d, \u201c100100\u2018 etc all are valid.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n4 6\n7 5\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>1101101010\n001010101010\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 19,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two integers 'M' and 'N', construct a binary string 'S' of length 'M + N' containing exactly 'M' zeros and 'N' ones. The string 'S' must not contain the substrings '111' or '000'. It is guaranteed that at least one such string 'S' exists for the given 'M' and 'N'.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= M + N <= 5000",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "m = 4, n = 1",
                        "output": "00100",
                        "explanation": "The only valid string with 4 zeros and 1 one, without '000' or '111', is '00100'."
                    },
                    {
                        "input": "m = 4, n = 2",
                        "output": "001100",
                        "explanation": "One possible valid string with 4 zeros and 2 ones is '001100'. Other valid strings may exist as well."
                    },
                    {
                        "input": "m = 6, n = 6",
                        "output": "110011001100",
                        "explanation": "A valid string with 6 zeros and 6 ones is '110011001100', satisfying the constraint of no consecutive triple zeros or ones."
                    },
                    {
                        "input": "m = 4, n = 6",
                        "output": "1101101010",
                        "explanation": "A valid string with 4 zeros and 6 ones is '1101101010', satisfying the constraint of no consecutive triple zeros or ones."
                    },
                    {
                        "input": "m = 7, n = 5",
                        "output": "001010101010",
                        "explanation": "A valid string with 7 zeros and 5 ones is '001010101010', satisfying the constraint of no consecutive triple zeros or ones."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>If we create the string from left to right, For a new character It is always good to add the character which is more common and can be added. can we create \u2018S\u2019 using this strategy ??</p>"
        ],
        "relatedTopics": [
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}