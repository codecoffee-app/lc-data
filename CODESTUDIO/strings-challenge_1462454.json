{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12512,
            "title": "Strings Challenge",
            "titleSlug": "strings-challenge_1462454",
            "content": "<h4 id=\"sagar-and-naresh-are-friends-sagar-loves-to-play-with-strings-he-gave-a-challenge-to-naresh-sagar-gave-him-two-strings-str1-and-str2-and-asked-to-make-both-the-strings-equal-by-using-only-the-below-given-operations\">Sagar and Naresh are friends. Sagar loves to play with strings. He gave a challenge to Naresh. Sagar gave him two strings, \u2018STR1\u2019 and \u2018STR2\u2019, and asked to make both the strings equal by using only the below-given operations.</h4>\n\n<pre><code>1) He can swap any two characters of a string.\nFor example, \u201ccoding\u201d -&gt; \u201ccgdino\u201d i.e., swap \u2018o\u2019 with \u2018g\u2019.\n2) He can change every occurrence of two existing characters into each other.\nFor example, \u201caababcc\u201d -&gt; \u201cccbcbaa\u201d i.e., change all occurrences of \u2018a\u2019 into \u2018c\u2019 and \u2018c\u2019 into \u2018a\u2019.\n</code></pre>\n\n<h4 id=\"note-naresh-can-use-these-operations-on-either-of-the-string-and-any-number-of-times\">Note: Naresh can use these operations on either of the string and any number of times.</h4>\n\n<h4 id=\"can-you-help-naresh-to-do-this-task\">Can you help Naresh to do this task?.</h4>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 representing the number of test cases. \n\nThe first line of each test case will contain two single space-separated strings \u2018STR1\u2019 and \u2018STR2\u2019 as mentioned above.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print true if Naresh can make both the given strings equal. Otherwise, print false.\n\nOutput for every test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You don\u2019t need to print anything; It has already been taken care of.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 50\n1 &lt;= |\u2019STR1\u2019|, |\u2018STR2\u2019| &lt;= 100000\n\n\u2018STR1\u2019 and\u2018STR2\u2019 will only be composed of lowercase English alphabets.\n\nWhere \u2018T\u2019 is the number of test cases and |\u2019STR1\u2019| and |\u2018STR2\u2019| are the lengths of strings \u2018STR1\u2019 and \u2018STR2\u2019.\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\nabcd dcba \naaabbcc aabcccb  \n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>true\ntrue\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of sample input 1 :</h5>\n\n<pre><code>In the first test case,\nFirst, swap characters \u2018a\u2019 and \u2018d\u2019 of string \u2018STR1\u2019 after this \u2018STR1\u2019 is \u201cdbca\u201d.\nThen swap characters \u2018b\u2019 and \u2018c\u2019 of string \u2018STR1\u2019 after this \u2018STR1\u2019 is \u201cdcba\u201d.\nNow both the strings are equal.\n\nIn the second test case,\nFirst, change every occurrence of \u2018a\u2019 and \u2018c\u2019 of string \u2018STR1\u2019 into each other. After this \u2018STR1\u2019 is \u201ccccbbaa\u201d.\nThen swap characters present at index (0, 5) then (1, 6) then (2,3) After that \u2018STR1\u2019 is \n\u201caabcbcc\u201d. Now swap characters present at index (4, 6) after this \u2018STR1\u2019 is \u201caabcccb\u201d.\nNow both the strings are equal.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\nba baa\naabbbc aabbss\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>false\nfalse\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation for sample input 2 :</h5>\n\n<pre><code>In the first test case, the number of characters in both the strings is different hence we can not make these strings equal.\n\nIn the second test case, the character \u2018c\u2019 is present in \u2018STR1\u2019 but not present in \u2018STR2\u2019 hence we can not make these strings equal.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 1,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two strings, `str1` and `str2`, determine if it's possible to make them equal using the following operations any number of times on either string:\n\n1.  **Swap:** Swap any two characters within the string.\n2.  **Character Replacement:** Replace all occurrences of two distinct characters with each other (e.g., change all 'a's to 'c's and all 'c's to 'a's).\n\nReturn `true` if the strings can be made equal, and `false` otherwise.",
                "constraints": [
                    "1 <= T <= 50",
                    "1 <= |'STR1'|, |'STR2'| <= 100000",
                    "'STR1' and 'STR2' will only be composed of lowercase English alphabets."
                ],
                "testcases": [
                    {
                        "input": "str1 = \"abcd\", str2 = \"dcba\"",
                        "output": "true",
                        "explanation": "Swap 'a' and 'd' in str1 to get \"dbca\". Then swap 'b' and 'c' to get \"dcba\", which is equal to str2."
                    },
                    {
                        "input": "str1 = \"aaabbcc\", str2 = \"aabcccb\"",
                        "output": "true",
                        "explanation": "Change all 'a' to 'c' and all 'c' to 'a' in str1 to get \"cccbbaa\".  Then perform swaps to get str1 equal to \"aabcccb\""
                    },
                    {
                        "input": "str1 = \"ba\", str2 = \"baa\"",
                        "output": "false",
                        "explanation": "The strings have different lengths, so they cannot be made equal."
                    },
                    {
                        "input": "str1 = \"aabbbc\", str2 = \"aabbss\"",
                        "output": "false",
                        "explanation": "The character 'c' is present in str1 but not in str2, and 's' is present in str2 but not in str1. This prevents making them equal."
                    },
                    {
                        "input": "str1 = \"abc\", str2 = \"cab\"",
                        "output": "true",
                        "explanation": "str1 can be made to equal str2 by swapping 'a' with 'c'."
                    },
                    {
                        "input": "str1 = \"abcabc\", str2 = \"bcaabc\"",
                        "output": "true",
                        "explanation": "str1 can be converted to str2 by using several swaps."
                    },
                    {
                        "input": "str1 = \"ab\", str2 = \"ba\"",
                        "output": "true",
                        "explanation": "A single swap can make the strings equal."
                    },
                    {
                        "input": "str1 = \"hello\", str2 = \"olleh\"",
                        "output": "true",
                        "explanation": "Multiple swaps can make the strings equal."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you think of storing the frequency of characters of both the strings?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}