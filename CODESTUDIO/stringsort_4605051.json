{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 19906,
            "title": "StringSort",
            "titleSlug": "stringsort_4605051",
            "content": "<h4 id=\"you-are-given-a-string-s-consisting-of-lowercase-english-alphabets-from-a-to-z-you-have-to-print-the-string-in-sorted-order\">You are given a string \u2018S\u2019 consisting of lowercase English alphabets from \u2018a\u2019 to \u2018z\u2019. You have to print the string in sorted order.</h4>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of the input contains a single integer &#39;T&#39;, representing the number of test cases.\n\nThe first line of each test case contains a string \u2018S\u2019 denoting a string.\n</code></pre>\n\n<h5 id=\"example\">Example :</h5>\n\n<pre><code>S = \u2018bbccdefbbaa\u2019\n\nWe sort the string lexicographically or in dictionary order.\n\nOutput is: \u2018aabbbbccdef\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case, output the sorted string.\n\nPrint the output of each test case in a new line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don\u2019t need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10 \n1 &lt;= S.length &lt;= 10^5\n\u2018a\u2019 &lt;= S[i] &lt;= \u2018z\u2019\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\nkbfhh\njjkiia\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>bfhhk\naiijjk   \n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1 :</h5>\n\n<pre><code>For test case 1 we have, \n\nThe sorted string in lexicographical order is: bfhhk\n\nFor test case 2 we have,\n\nThe sorted string in lexicographical order is: aiijjk\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\ndbahff\nccbbj\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>abdffh\nbbccj \n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 5,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string 'S' consisting of lowercase English alphabets, rearrange the characters in 'S' to form a new string that is sorted in lexicographical order (dictionary order). Return the sorted string.",
                "constraints": [
                    "1 <= T <= 10 (Number of test cases)",
                    "1 <= S.length <= 10^5 (Length of the string S)",
                    "'a' <= S[i] <= 'z' (Characters in S are lowercase English alphabets)"
                ],
                "testcases": [
                    {
                        "input": "s = \"kbfhh\"",
                        "output": "bfhhk",
                        "explanation": "Sorting the characters in \"kbfhh\" alphabetically results in \"bfhhk\"."
                    },
                    {
                        "input": "s = \"jjkiia\"",
                        "output": "aiijjk",
                        "explanation": "Sorting the characters in \"jjkiia\" alphabetically results in \"aiijjk\"."
                    },
                    {
                        "input": "s = \"dbahff\"",
                        "output": "abdffh",
                        "explanation": "Sorting the characters in \"dbahff\" alphabetically results in \"abdffh\"."
                    },
                    {
                        "input": "s = \"ccbbj\"",
                        "output": "bbccj",
                        "explanation": "Sorting the characters in \"ccbbj\" alphabetically results in \"bbccj\"."
                    },
                    {
                        "input": "s = \"bbccdefbbaa\"",
                        "output": "aabbbbccdef",
                        "explanation": "Sorting the characters in \"bbccdefbbaa\" alphabetically results in \"aabbbbccdef\"."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}