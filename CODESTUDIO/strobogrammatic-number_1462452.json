{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12510,
            "title": "Strobogrammatic number",
            "titleSlug": "strobogrammatic-number_1462452",
            "content": "<h4 id=\"given-a-string-n-that-represents-a-number-you-need-to-check-if-the-given-number-is-a-strobogrammatic-number-or-not\">Given a string \u2018N\u2019 that represents a number, you need to check if the given number is a strobogrammatic number or not.</h4>\n\n<h4 id=\"a-strobogrammatic-number-is-a-number-that-looks-the-same-when-rotated-by-180\">A strobogrammatic number is a number that looks the same when rotated by 180.</h4>\n\n<h4 id=\"in-other-words-a-number-that-on-rotating-right-side-up-and-upside-down-appears-the-same-is-a-strobogrammatic-number\">In other words, a number that on rotating right side up and upside down appears the same is a strobogrammatic number.</h4>\n\n<h5 id=\"for-example\">For Example:</h5>\n\n<pre><code>\u2018986\u2019 is a strobogrammatic number because on rotating \u2018986\u2019 by 180, \u2018986\u2019 will be obtained.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/screenshot-from-2021-06-24-06-59-50-11268.png\" alt=\"\"></p>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains an integer \u2018T\u2019, denoting the number of test cases.\n\nThe first line of each test case contains a string denoting \u2018N\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, return \u201cTrue\u201d, if the given number is a strobogrammatic number, otherwise return \u201cFalse\u201d.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You don\u2019t need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 50\n0 &lt;= N &lt;= 10^5\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n191\n8008\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>False\nTrue\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1:</h5>\n\n<pre><code>Test Case 1: On rotating \u2018191\u2019 by 180, \u2018161\u2019 will be formed. So \u2018191\u2019 is not a strobogrammatic number.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/screenshot-from-2021-06-24-20-35-15-11307.png\" alt=\"\"></p>\n\n<pre><code>Test Case 2: On rotating \u20188008\u2019, \u20188008\u2019 will be obtained. So \u20188008\u2019 is a strobogrammatic number.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/screenshot-from-2021-06-24-20-33-23-11305.png\" alt=\"\"></p>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n8888\n543\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>True\nFalse\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 22,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string 'n' representing a number, determine if it is a strobogrammatic number. A strobogrammatic number looks the same when rotated 180 degrees (upside down).",
                "constraints": [
                    "1 <= T <= 50",
                    "0 <= N <= 10^5",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "n = \"191\"",
                        "output": "False",
                        "explanation": "Rotating '191' by 180 degrees results in '161', which is different. Therefore, '191' is not strobogrammatic."
                    },
                    {
                        "input": "n = \"8008\"",
                        "output": "True",
                        "explanation": "Rotating '8008' by 180 degrees results in '8008', which is the same. Therefore, '8008' is strobogrammatic."
                    },
                    {
                        "input": "n = \"8888\"",
                        "output": "True",
                        "explanation": "Rotating '8888' by 180 degrees results in '8888', which is the same. Therefore, '8888' is strobogrammatic."
                    },
                    {
                        "input": "n = \"543\"",
                        "output": "False",
                        "explanation": "Rotating '543' by 180 degrees does not result in the same number. Therefore, '543' is not strobogrammatic."
                    },
                    {
                        "input": "n = \"69\"",
                        "output": "True",
                        "explanation": "Rotating '69' by 180 degrees results in '96', which is the same if 6 and 9 are strobogrammatic of each other. Therefore, '69' is strobogrammatic."
                    },
                    {
                        "input": "n = \"1\"",
                        "output": "True",
                        "explanation": "Rotating '1' by 180 degrees results in '1', which is the same. Therefore, '1' is strobogrammatic."
                    },
                    {
                        "input": "n = \"0\"",
                        "output": "True",
                        "explanation": "Rotating '0' by 180 degrees results in '0', which is the same. Therefore, '0' is strobogrammatic."
                    },
                    {
                        "input": "n = \"101\"",
                        "output": "True",
                        "explanation": "Rotating '101' by 180 degrees results in '101', which is the same. Therefore, '101' is strobogrammatic."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to figure out the digits which on rotating upside down, generates a valid digit.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}