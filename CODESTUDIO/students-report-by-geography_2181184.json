{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 14513,
            "title": "Students Report By Geography",
            "titleSlug": "students-report-by-geography_2181184",
            "content": "<pre><code>A U.S graduate school has students from Asia, Europe and America. The students&#39; location information are stored in table student as below.\n\n\n| name   | continent |\n|--------|-----------|\n| Jack   | America   |\n| Pascal | Europe    |\n| Xi     | Asia      |\n| Jane   | America   |\n\n\nPivot the continent column in this table so that each name is sorted alphabetically and displayed underneath its corresponding continent. The output headers should be America, Asia and Europe respectively. It is guaranteed that the student number from America is no less than either Asia or Europe.\n\n\nFor the sample input, the output is:\n\n\n| America | Asia | Europe |\n|---------|------|--------|\n| Jack    | Xi   | Pascal |\n| Jane    |      |        |\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 5,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a table `student` with columns `name` and `continent`, pivot the table to create a new table where the continents (America, Asia, Europe) become columns.  The names of students from each continent should be listed alphabetically under their respective continent column.  The `America` column will have at least as many entries as the `Asia` or `Europe` columns. If a continent has fewer students than `America`, fill the remaining cells with `NULL` values (represented as empty strings in the output). The output columns should be named America, Asia, and Europe.",
                "constraints": [
                    "The 'continent' column can only contain 'America', 'Asia', or 'Europe'.",
                    "The student names should be alphabetically sorted under each continent.",
                    "The number of students from America is guaranteed to be greater than or equal to the number of students from Asia or Europe."
                ],
                "testcases": [
                    {
                        "input": "student=[(Jack, America), (Pascal, Europe), (Xi, Asia), (Jane, America)]",
                        "output": "| America | Asia | Europe |\n|---------|------|--------|\n| Jack    | Xi   | Pascal |\n| Jane    |      |        |",
                        "explanation": "The students from America (Jack, Jane) are listed alphabetically. The student from Asia (Xi) is listed. The student from Europe (Pascal) is listed. Since America has two students and Asia/Europe each has only one, the second row for Asia and Europe is filled with a blank space indicating null."
                    },
                    {
                        "input": "student=[(John, America), (Paul, Europe), (Lee, Asia), (Peter, America), (Mary, America), (Xi, Asia), (Hans, Europe)]",
                        "output": "| America | Asia | Europe |\n|---------|------|--------|\n| John    | Lee  | Hans   |\n| Mary    | Xi   | Paul   |\n| Peter   |      |        |",
                        "explanation": "Students are grouped by continent and alphabetically sorted. America has 3 students, Asia has 2, and Europe has 2. The extra row under America requires padding in the Asia and Europe columns."
                    },
                    {
                        "input": "student=[(Alex, America), (Ben, America), (Carlos, America), (David, America), (Eva, America), (A, Asia), (B, Europe)]",
                        "output": "| America | Asia | Europe |\n|---------|------|--------|\n| Alex    | A    | B      |\n| Ben     |      |        |\n| Carlos  |      |        |\n| David   |      |        |\n| Eva     |      |        |",
                        "explanation": "Demonstrates a case where America has significantly more students than Asia or Europe."
                    },
                    {
                        "input": "student=[(Alice, Asia), (Bob, Europe), (Charlie, America), (David, America), (Eve, America)]",
                        "output": "| America | Asia  | Europe |\n|---------|-------|--------|\n| Charlie | Alice | Bob    |\n| David   |       |        |\n| Eve     |       |        |",
                        "explanation": "Validates the ordering and padding with one student each from Asia and Europe, and three from America."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "SQL",
                "slug": "sql"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}