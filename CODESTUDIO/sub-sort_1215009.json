{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10429,
            "title": "Sub Sort",
            "titleSlug": "sub-sort_1215009",
            "content": "<h4 id=\"you-are-given-an-integer-array-arr-you-have-to-find-the-length-of-the-shortest-contiguous-subarray-such-that-if-you-sort-this-subarray-in-ascending-order-then-the-whole-array-will-be-sorted-in-ascending-order\">You are given an integer array \u2018ARR\u2019. You have to find the length of the shortest contiguous subarray such that, if you sort this subarray in ascending order, then the whole array will be sorted in ascending order.</h4>\n\n<h4 id=\"an-array-c-is-a-subarray-of-array-d-if-it-can-be-obtained-by-deletion-of-several-elements-possibly-zero-from-the-beginning-and-the-end-from-array-d\">An array &#39;C&#39; is a subarray of array &#39;D&#39; if it can be obtained by deletion of several elements(possibly zero) from the beginning and the end from array &#39;D&#39;.</h4>\n\n<h4 id=\"example\">Example:</h4>\n\n<pre><code>Let\u2019s say we have an array &#39;ARR&#39; {10, 12, 20, 30, 25, 40, 32, 31, 35, 50, 60}. Then we have to find the subarray {30 , 25 , 40 , 32 , 31 , 35} and print its length = 5 as our output. Because, when we sort this subarray the whole array will be sorted.\n</code></pre>\n\n<h5 id=\"input-format\">Input format:</h5>\n\n<pre><code>The very first line of input contains an integer \u2018T\u2019 denoting the number of test cases. \n\nThe first line of every test case contains one integer \u2018N\u2019 denoting the number of elements present in the array.\n\nThe second line of every test case contains \u2018N\u2019 space-separated integers denoting the elements present in the array.\n</code></pre>\n\n<h5 id=\"output-format\">Output format:</h5>\n\n<pre><code>For each test case, print the shortest length of the unsorted subarray. Output for each test case is printed on a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just return the length of the shortest subarray.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 5 * 10 ^ 4\n-10^5 &lt;= ARR[i] &lt;= 10^5\n\nWhere  \u2018T\u2019 represents the number of test cases, \u2018N\u2019 represents the number of elements present in the array, and \u2018ARR[i]\u2019 represents the array element. \n\nTime Limit: 1sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>3\n7\n2 6 4 8 10 9 15\n4\n1 2 3 4\n1\n1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>5\n0\n0\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1:</h5>\n\n<pre><code>For the first test case, you need to sort [6, 4, 8, 10, 9] in ascending order to make the whole array sorted in ascending order.\n\nFor the second test case, the array is already sorted. So the answer is 0.\n\nFor the third test case, it has one element so it is already sorted. Hence the answer is 0.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n11\n10 12 20 30 25 40 32 31 35 50 60\n9\n0 1 15 25 6 7 30 40 50\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code> 6\n 4\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation For Sample Input 2:</h5>\n\n<pre><code>For the first test case, you need to sort [30, 25, 40, 32, 31, 35] in ascending order to make the whole array sorted in ascending order.\n\nFor the second test case, you need to sort [15, 25, 6, 7] in ascending order to make the whole array sorted in ascending order.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -4,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an integer array, find the length of the shortest contiguous subarray that, when sorted in ascending order, will result in the entire array being sorted in ascending order.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 5 * 10^4",
                    "-10^5 <= ARR[i] <= 10^5",
                    "Where \u2018T\u2019 represents the number of test cases, \u2018N\u2019 represents the number of elements present in the array, and \u2018ARR[i]\u2019 represents the array element.",
                    "Time Limit: 1sec"
                ],
                "testcases": [
                    {
                        "input": "7\n2 6 4 8 10 9 15",
                        "output": "5",
                        "explanation": "Sorting the subarray [6, 4, 8, 10, 9] in ascending order will result in the entire array being sorted."
                    },
                    {
                        "input": "4\n1 2 3 4",
                        "output": "0",
                        "explanation": "The array is already sorted."
                    },
                    {
                        "input": "1\n1",
                        "output": "0",
                        "explanation": "The array contains only one element, hence it is already sorted."
                    },
                    {
                        "input": "11\n10 12 20 30 25 40 32 31 35 50 60",
                        "output": "6",
                        "explanation": "Sorting the subarray [30, 25, 40, 32, 31, 35] in ascending order will result in the entire array being sorted."
                    },
                    {
                        "input": "9\n0 1 15 25 6 7 30 40 50",
                        "output": "4",
                        "explanation": "Sorting the subarray [15, 25, 6, 7] in ascending order will result in the entire array being sorted."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you solve this problem by generating all the subarrays?</p>",
            "<p>Can you solve this problem by using any specific sorting algorithm?</p>",
            "<p>Can you solve this problem by finding the correct order of the given array?</p>",
            "<p>Can you solve this problem by using the fact that while traversing array from right to left it should follow this order : Arr[i] &gt; Arr[i-1] &gt; Arr[i-2] &gt; ... (array needs to be in ascending order) and traversing the array from left to right it should follow this order : Arr[i] &lt; Arr[i+1] &lt; Arr[i+2] &lt; ... (array needs to be in ascending order)</p>"
        ],
        "relatedTopics": [
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}