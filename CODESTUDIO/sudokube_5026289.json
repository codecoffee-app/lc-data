{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 20893,
            "title": "SudoKube",
            "titleSlug": "sudokube_5026289",
            "content": "<h4 id=\"john-a-research-scholar-professor-puzzle-solver-wants-your-help-in-publishing-his-work-on-sudokube-on-his-online-blog-for-his-followers-and-students\">John, a research scholar / Professor / Puzzle solver wants your help in publishing his work on SudoKube on his online blog for his followers and students.</h4>\n\n<h4 id=\"a-sudokube-is-a-mixture-of-rubics-cube-and-sudoku-a-sudokube-has-exactly-6-appearances-of-every-digit-from-1-to-9-across-the-cube-whereas-rubics-cube-has-6-different-colours\">A SudoKube is a mixture of Rubics cube and Sudoku. A SudoKube has exactly 6 appearances of every digit from 1 to 9 across the cube, whereas Rubics cube has 6 different colours.</h4>\n\n<h4 id=\"as-john-wants-to-publish-his-work-in-text-document-form-no-video-hes-concerned-about-how-he-would-depict-the-step-by-step-work-of-rotation-in-2d-form-following-are-the-notions-and-concepts-john-follows\">As John wants to publish his work in text /document form (no video) he&#39;s concerned about how he would depict the step-by-step work of rotation in 2D form. Following are the notions and concepts John follows:</h4>\n\n<h4 id=\"1-the-six-faces-of-the-cube-are-named-front-back-up-down-left-and-right-respectively\">1) The six faces of the cube are named FRONT, BACK, UP, DOWN, LEFT, and RIGHT respectively.</h4>\n\n<h4 id=\"2-just-like-a-rubics-cube-which-moves-in-90-and-180-degrees-in-both-clockwise-and-anti-clockwise-directions-so-can-the-sudokube\">2) Just like a Rubics cube which moves in 90 and 180 degrees in both clockwise and anti-clockwise directions, so can the SudoKube.</h4>\n\n<h4 id=\"3-any-given-face-of-the-cube-is-a-3x3-square-matrix-whose-indices-are-denoted-by-0-0-to-2-2-the-diagram-below-illustrates-the-same\">3) Any given face of the cube is a 3x3 square matrix whose indices are denoted by (0,0) to (2,2). The diagram below illustrates the same.</h4>\n\n<h4 id=\"4-an-elementary-move-is-denoted-in-the-following-fashion\">4) An elementary move is denoted in the following fashion:</h4>\n\n<h4 id=\"if-a-given-face-is-rotated-90-degrees-clockwise-about-the-axis-passing-from-the-center-of-the-face-to-the-center-of-the-cube-the-move-is-denoted-by-the-first-letter-of-the-name-of-the-face\">\u2022 If a given face is rotated 90 degrees clockwise about the axis passing from the center of the face to the center of the cube, the move is denoted by the first letter of the name of the face.</h4>\n\n<h4 id=\"if-the-rotation-is-anticlockwise-by-90-degrees-the-letter-is-followed-by-an-apostrophe\">\u2022 If the rotation is anticlockwise by 90 degrees, the letter is followed by an apostrophe (&#39;).</h4>\n\n<h4 id=\"if-the-rotation-is-by-180-degrees-the-letter-is-followed-by-a-2\">\u2022 If the rotation is by 180 degrees, the letter is followed by a 2.</h4>\n\n<p><img src=\"https://i.imgur.com/RxCPzlam.png\" alt=\"\"></p>\n\n<h4 id=\"the-above-image-displays-the-position-of-the-faces\">The above image displays the position of the faces</h4>\n\n<p><img src=\"https://i.imgur.com/RERBWSSl.png\" alt=\"\"></p>\n\n<h4 id=\"above-diagram-displays-the-indices-of-the-matrix-on-the-faces\">Above diagram displays the indices of the matrix on the faces</h4>\n\n<h4 id=\"john-wants-to-test-his-notations-on-you-he-has-given-you-the-initial-position-of-the-sudokube-and-he-has-given-you-a-set-of-operations-to-be-performed-on-the-sudokube-basis-of-his-notation-after-applying-all-the-operations-the-final-sudokube-state-should-be-the-same-as-what-john-expects-your-task-is-to-apply-the-operations-and-print-the-final-sudokube-state\">John wants to test his notations on you. He has given you the initial position of the SudoKube and he has given you a set of operations to be performed on the SudoKube basis of his notation. After applying all the operations, the final SudoKube state should be the same as what John expects. Your task is to apply the operations and print the final SudoKube state.</h4>\n\n<h5 id=\"example\">EXAMPLE :</h5>\n\n<pre><code>Refer to the Sample Input 1 explanation for a better understanding of the operations.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line will contain the integer &#39;T&#39;, the number of test cases.\n\nEach test case consists of twenty lines.\n\nThe first eighteen lines contain the values of the faces on SudoKube in the order given below\n\nD D D\nD D D\nD D D\nU U U\nU U U\nU U U\nL L L\nL L L\nL L L\nF F F\nF F F\nF F F\nR R R\nR R R\nR R R\nB B B\nB B B\nB B B\n\nwhere\nD for Down face\nU for upper face\nL for Left face\nF for Front face\nR for Right face\nB for Back face.\nThe input contains digits from 1 to 9 instead of letters; letters are displayed for a better understanding of the faces and the expected input format\n\nThe nineteenth line will contain \u2018Q\u2019, the number of operations to be performed.\n\nThe twentieth line contains a sequence of space-delimited moves that need to be performed on the SudoKube\n\nExample 1: D F2 R&#39; U - to understand this please refer to the second example from the Examples section below\n\nExample 2: L2 U B F&#39; D2 R - let&#39;s understand how to interpret this set of operations\n\nL2 means rotate the Left side by 180 degrees\n\nU means rotate the Up side by 90 degrees clockwise\n\nB means rotate the Back side by 90 degrees clockwise\n\nF&#39; means rotate the Front side by 90 degrees anticlockwise\n\nD2 means rotate the Down side by 180 degrees\n\nR means rotate the Right side by 90 degrees clockwise\n\nIn summary, the first eighteen lines denote the state of the SudoKube, the 19th line denotes the operation to be performed on that state.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case, Print six 3x3 matrices in D, U, L, F, R, B order representing the SudoKube, corresponding to the operations, when performed in the given order.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don&#39;t need to print anything. It has already been taken care of. Just implement the given function. You just have to return an 18x3 matrix after performing all the operations in the given order.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>\u2018T&#39; = 1\nValues in SudoKube will be between 1 and 9\n1 &lt;= Operations to be performed (\u2018Q\u2019) &lt;= 20\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>1\n4 7 1\n2 8 7\n6 3 5\n5 8 3\n3 1 6\n9 4 2\n5 2 4\n3 7 8\n5 1 9\n6 1 4\n9 4 8\n2 5 7\n7 9 1\n1 9 6\n6 2 8\n8 6 3\n7 2 5\n3 9 4\n1\nF\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>6 1 7\n2 8 7\n6 3 5\n5 8 3\n3 1 6\n9 8 4\n5 2 4\n3 7 7\n5 1 1\n2 9 6\n5 4 1\n7 8 4\n9 9 1\n4 9 6\n2 2 8\n8 6 3\n7 2 5\n3 9 4\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1 :</h5>\n\n<pre><code>The Upper Face\u2019s last row after rotation is copied to the first column of the Right Face\nThe Right Face\u2019s first column after rotation is copied to the first row of the Down Face\nThe Down Face\u2019s first row after rotation is copied to the last column of the Left Face\nThe Left Face\u2019s last column after rotation is copied to the last row of the Upper Face.\nSimilarly, the Front Face is rotated 90 degrees clockwise.\n</code></pre>\n\n<p><img src=\"https://i.imgur.com/SjVU9lWl.png\" alt=\"\"></p>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>1\n4 7 1\n2 8 7\n6 3 5\n5 8 3\n3 1 6\n9 4 2\n5 2 4\n3 7 8\n5 1 9\n6 1 4\n9 4 8\n2 5 7\n8 6 3\n7 2 5\n3 9 4\n7 9 1\n1 9 6\n6 2 8\n6\nF F F2 L L\u2019 B\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>4 7 1\n2 8 7\n5 3 5\n3 5 4\n3 1 6\n9 4 2\n3 2 4\n8 7 8\n5 1 9\n6 1 4\n9 4 8\n2 5 7\n8 6 5\n7 2 3\n3 9 6\n6 1 7\n2 9 9\n8 6 1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Ninja",
            "likes": -4,
            "dislikes": "NA",
            "rephrased": {
                "body": "Simulate the rotations of a SudoKube, a puzzle combining elements of Sudoku and Rubik's Cube. Given an initial state of the SudoKube (represented by the values on each face) and a series of rotation operations, apply these operations in the given order and output the final state of the SudoKube.\n\nThe SudoKube consists of six faces: FRONT, BACK, UP, DOWN, LEFT, and RIGHT. Each face is a 3x3 grid containing digits from 1 to 9, with the constraint that each digit appears exactly six times across the entire cube.\n\nRotation Notation:\n*   **F, B, U, D, L, R**: Rotate the corresponding face 90 degrees clockwise.\n*   **F', B', U', D', L', R'**: Rotate the corresponding face 90 degrees counter-clockwise.\n*   **F2, B2, U2, D2, L2, R2**: Rotate the corresponding face 180 degrees.\n\nYou will be given the initial state of the SudoKube as a series of 3x3 matrices for each face (DOWN, UP, LEFT, FRONT, RIGHT, BACK), followed by a sequence of rotation operations. Your task is to perform these rotations on the initial state and produce the final SudoKube configuration.",
                "constraints": [
                    "`T` = 1",
                    "Values in SudoKube will be between 1 and 9",
                    "1 <= Operations to be performed (\u2018Q\u2019) <= 20",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "1\n4 7 1\n2 8 7\n6 3 5\n5 8 3\n3 1 6\n9 4 2\n5 2 4\n3 7 8\n5 1 9\n6 1 4\n9 4 8\n2 5 7\n7 9 1\n1 9 6\n6 2 8\n8 6 3\n7 2 5\n3 9 4\n1\nF",
                        "output": "6 1 7\n2 8 7\n6 3 5\n5 8 3\n3 1 6\n9 8 4\n5 2 4\n3 7 7\n5 1 1\n2 9 6\n5 4 1\n7 8 4\n9 9 1\n4 9 6\n2 2 8\n8 6 3\n7 2 5\n3 9 4",
                        "explanation": "The 'F' operation rotates the front face 90 degrees clockwise. The values of other faces also get changed because of the cube rotation, refer to the provided diagram for understanding of the faces of the cube."
                    },
                    {
                        "input": "1\n4 7 1\n2 8 7\n6 3 5\n5 8 3\n3 1 6\n9 4 2\n5 2 4\n3 7 8\n5 1 9\n6 1 4\n9 4 8\n2 5 7\n8 6 3\n7 2 5\n3 9 4\n7 9 1\n1 9 6\n6 2 8\n6\nF F F2 L L\u2019 B",
                        "output": "4 7 1\n2 8 7\n5 3 5\n3 5 4\n3 1 6\n9 4 2\n3 2 4\n8 7 8\n5 1 9\n6 1 4\n9 4 8\n2 5 7\n8 6 5\n7 2 3\n3 9 6\n6 1 7\n2 9 9\n8 6 1",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><strong>What if the number of operations is one?</strong></p>"
        ],
        "relatedTopics": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Matrices (2D Arrays)",
                "slug": "matrices-(2d-arrays)"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}