{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 7230,
            "title": "Sum Between Zeroes",
            "titleSlug": "sum-between-zeroes_630463",
            "content": "<h4 id=\"you-are-given-a-singly-linked-list-which-contains-a-series-of-integers-separated-by-0\">You are given a Singly Linked List which contains a series of integers separated by \u20180\u2019.</h4>\n\n<h4 id=\"between-two-zeroes-you-have-to-merge-all-the-nodes-lying-between-them-into-a-single-node-which-contains-the-sum-of-all-the-merged-nodes-you-have-to-perform-this-in-place\">Between two zeroes, you have to merge all the nodes lying between them into a single node which contains the sum of all the merged nodes. You have to perform this in place.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>It is guaranteed that there will be no two consecutive zeroes, and there will always be a zero at the beginning and end of the linked list.\n</code></pre>\n\n<h4 id=\"input-format\">Input Format:</h4>\n\n<pre><code>The first line of input contains the elements of the singly linked list separated by a single space. The -1 indicates the end of the singly linked list and hence, would never be a list element.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>The first and the only output line contains the integers present in the linked list after all the merging operations have been performed.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints:</h4>\n\n<pre><code>3 &lt;= N &lt;= 10^5\n0 &lt;= VAL &lt;= 10^3\n\nWhere &#39;VAL&#39; represents the integers present in the list.\n\nTime limit: 1 sec\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1:</h4>\n\n<pre><code>0 1 2 3 0 4 5 0 6 0 -1\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1:</h4>\n\n<pre><code>6 9 6 -1\n</code></pre>\n\n<h4 id=\"explanation-of-sample-input1\">Explanation Of Sample Input1:</h4>\n\n<pre><code>The given linked list is:\n0 -&gt; 1 -&gt; 2 -&gt; 3 -&gt; 0 -&gt; 4 -&gt; 5 -&gt; 0 -&gt; 6 -&gt; 0 -&gt; null\nThen, the linked list is converted to:\n6 -&gt; 9 -&gt; 6 -&gt; null\nTaking 0s as the start and end in reference to a sequence, we can see that there are 3 sequences. They are:\n 1. 1 -&gt; 2 -&gt; 3, which sum to 6\n 2. 4 -&gt; 5, which sum to 9\n 3. 6, which sum to 6 only\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2:</h4>\n\n<pre><code>0 1 2 4 8 16 0 -1\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2:</h4>\n\n<pre><code>31 -1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 35,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a singly linked list of integers where sequences of numbers are separated by '0', modify the list in-place. Merge the nodes between each pair of consecutive '0's into a single node containing the sum of the merged values. The linked list will always begin and end with '0', and there will be no consecutive '0's.",
                "constraints": [
                    "3 <= N <= 10^5 (where N is the number of nodes in the linked list)",
                    "0 <= VAL <= 10^3 (where VAL represents the integer value of a node)"
                ],
                "testcases": [
                    {
                        "input": "0 1 2 3 0 4 5 0 6 0 -1",
                        "output": "6 9 6 -1",
                        "explanation": "The original list contains three sequences separated by zeroes: [1, 2, 3], [4, 5], and [6].  Their sums are 6, 9, and 6 respectively. The resulting linked list becomes 6 -> 9 -> 6 -> null."
                    },
                    {
                        "input": "0 1 2 4 8 16 0 -1",
                        "output": "31 -1",
                        "explanation": "The original list contains one sequence between the leading and trailing zeroes: [1, 2, 4, 8, 16]. The sum of this sequence is 31. The resulting linked list becomes 31 -> null."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Let\u2019s not think of merging nodes, but rather transferring their contents into a single node. Can you think of an approach to do this by maintaining two pointers?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}