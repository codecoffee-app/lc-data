{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8920,
            "title": "Sum of k smallest elements in BST",
            "titleSlug": "sum-of-k-smallest-elements-in-bst_920525",
            "content": "<h4 id=\"you-are-given-a-binary-search-tree-bst-of-integers-and-an-integer-k\">You are given a Binary search tree(BST) of integers and an integer \u2018K\u2019.</h4>\n\n<h4 id=\"your-task-is-to-find-and-return-the-sum-of-the-first-k-smallest-elements-of-the-bst\">Your task is to find and return the sum of the first \u2018K\u2019 smallest elements of the BST.</h4>\n\n<h5 id=\"example\">Example:</h5>\n\n<p><img src=\"https://ninjasfiles.s3.amazonaws.com/0000000000000742.PNG\" alt=\"alttext\"></p>\n\n<pre><code>For the given tree, \u2018K = 3\u2019.\nThe first \u20183\u2019 smallest elements are 1, 3, and 4.\n\nSum of three smallest nodes in the BST = 1 + 3 + 4 = 8.\nThus, you should return \u20188\u2019 as the answer.  \n</code></pre>\n\n<h5 id=\"input-format\">Input format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases. Then each test case follows.\n\nThe first line of input contains the elements of the tree in the level order form separated by a single space.\nIf any node does not have a left or right child, take -1 in its place. Refer to the example below.\n\nThe second line of each test case contains a single integer \u2018K\u2019.\n\n\nExample:\n\nElements are in the level order form. The input consists of values of nodes separated by a single space in a single line. In case a node is null, we take -1 in its place.\n\nFor example, the input for the tree (not a BST) depicted in the below image would be :\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/input-9867.bmp\" alt=\"input\"></p>\n\n<pre><code>1\n2 3\n4 -1 5 6\n-1 7 -1 -1 -1 -1\n-1 -1\n\nExplanation :\nLevel 1 :\nThe root node of the tree is 1\n\nLevel 2 :\nLeft child of 1 = 2\nRight child of 1 = 3\n\nLevel 3 :\nLeft child of 2 = 4\nRight child of 2 = null (-1)\nLeft child of 3 = 5\nRight child of 3 = 6\n\nLevel 4 :\nLeft child of 4 = null (-1)\nRight child of 4 = 7\nLeft child of 5 = null (-1)\nRight child of 5 = null (-1)\nLeft child of 6 = null (-1)\nRight child of 6 = null (-1)\n\nLevel 5 :\nLeft child of 7 = null (-1)\nRight child of 7 = null (-1)\n\nThe first not-null node (of the previous level) is treated as the parent of the first two nodes of the current level. The second not-null node (of the previous level) is treated as the parent node for the next two nodes of the current level and so on.\n\nThe input ends when all nodes at the last level are null (-1).\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, return the integer denoting the sum of the first \u2018K\u2019 smallest elements in the given BST.\n\nThe output of each test case is printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don&#39;t need to print the output, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10^2\n1 &lt;= K &lt;= 10^3\n1 &lt;= N &lt;= 10^3\n1 &lt;= Node.data &lt;= 10^9\n\nWhere &#39;N&#39; denotes the number of nodes in the BST and &#39;Node.data&#39; denotes the value of each node.\n\nTime limit: 1 second\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n8 4 12 1 6 -1 -1 -1 -1 -1 7 -1 -1\n4\n4 2 6 -1 -1 5 10 -1 -1 -1 -1\n3\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>18\n11\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1:</h5>\n\n<pre><code>For the first test case :\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/sample1-9913.png\" alt=\"sample1\"></p>\n\n<pre><code>For the given tree \u2018K = 4\u2019. \nThe first \u20184\u2019 smallest elements are 1, 4, 6, and 7.\n\nSum of three smallest nodes in the BST = 1 + 4 + 6 + 7 = 18.\nThus, you should return \u201818\u2019 as the answer. \n\nFor the second test case :\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/sample2-9914.png\" alt=\"sample2\"></p>\n\n<pre><code>For the given tree \u2018K = 3\u2019.\nThe first \u20183\u2019 smallest elements are 2, 4, and 5.\n\nSum of three smallest nodes in the BST = 2 + 4 + 5 = 11.\nThus, you should return \u201811\u2019 as the answer. \n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample input 2:</h4>\n\n<pre><code>2\n8 5 10 2 6 -1 -1 -1 -1 -1 7 -1 -1\n4\n8 7 10 2 -1 9 13 -1 -1 -1 -1 -1 -1\n2\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample output 2:</h4>\n\n<pre><code>20\n9\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 2,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a Binary Search Tree (BST) of integers and an integer 'K', determine the sum of the 'K' smallest elements in the BST.",
                "constraints": [
                    "1 <= T <= 10^2 (Number of test cases)",
                    "1 <= K <= 10^3",
                    "1 <= N <= 10^3 (Number of nodes in the BST)",
                    "1 <= Node.data <= 10^9 (Value of each node)",
                    "Time limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "8 4 12 1 6 -1 -1 -1 -1 -1 7 -1 -1\n4",
                        "output": "18",
                        "explanation": "The BST is constructed as follows: Root is 8, left child is 4, right child is 12, left child of 4 is 1, right child of 4 is 6, right child of 6 is 7. K is 4. The 4 smallest elements are 1, 4, 6, and 7. Their sum is 1 + 4 + 6 + 7 = 18."
                    },
                    {
                        "input": "4 2 6 -1 -1 5 10 -1 -1 -1 -1\n3",
                        "output": "11",
                        "explanation": "The BST is constructed as follows: Root is 4, left child is 2, right child is 6, left child of 6 is 5, right child of 6 is 10. K is 3. The 3 smallest elements are 2, 4, and 5. Their sum is 2 + 4 + 5 = 11."
                    },
                    {
                        "input": "8 5 10 2 6 -1 -1 -1 -1 -1 7 -1 -1\n4",
                        "output": "20",
                        "explanation": "The BST is constructed as follows: Root is 8, left child is 5, right child is 10, left child of 5 is 2, right child of 5 is 6, right child of 6 is 7. K is 4. The 4 smallest elements are 2, 5, 6, and 7. Their sum is 2 + 5 + 6 + 7 = 20."
                    },
                    {
                        "input": "8 7 10 2 -1 9 13 -1 -1 -1 -1 -1 -1\n2",
                        "output": "9",
                        "explanation": "The BST is constructed as follows: Root is 8, left child is 7, right child is 10, left child of 7 is 2, right child of 10 is 9, right child of 10 is 13. K is 2. The 2 smallest elements are 2 and 7. Their sum is 2 + 7 = 9."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Which tree traversal will give us the nodes in sorted order?</p>",
            "<p>While doing the tree traversal, use a variable to stop the recursion when we have visited the first \u2018K\u2019 nodes.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Binary Search Trees",
                "slug": "binary-search-trees"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}