{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12705,
            "title": "Sum of the minimum values in subarrays",
            "titleSlug": "sum-of-the-minimum-values-in-subarrays_1473824",
            "content": "<h4 id=\"you-are-given-an-array-arr-containing-n-integers-the-task-is-to-find-the-sum-of-the-minimum-value-in-sub-where-sub-ranges-over-every-contiguous-subarray-of-arr\">You are given an array \u2018ARR\u2019 containing \u2018N\u2019 integers\u2019. The task is to find the sum of the minimum value in \u2018SUB\u2019, where \u2018SUB\u2019 ranges over every contiguous subarray of \u2018ARR.</h4>\n\n<h5 id=\"example\">Example:</h5>\n\n<pre><code>\u2018ARR = [3, 2, 1, 3]\u2019, \u2018N = 4\u2019 \n\n1. Subarrays with \u20181\u2019 as their minimum value: [1], [2,1], [1,3], [3,2,1], [2,1,3], [3,2,1,3]. Sum = 1 + 1 + 1 + 1 + 1 + 1 = 6.\n2. Subarrays with \u20182\u2019 as their minimum value: [2], [3,2]. Sum = 2 + 2 = 4.\n3. Subarrays with \u20183\u2019 as their minimum value: [3], [3]. Sum = 3 + 3 = 6.\n\nThe sum over all subarrays is \u20186 + 4 + 6 = 16\u2019. Thus, you should return \u201816\u2019 as the answer.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>1. The answer may be huge, so return the answer modulo \u201810^9 + 7\u2019.\n2. You do not need to print anything; it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"input-format\">Input format :</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 which denotes the number of test cases. Then, the \u2018T\u2019 test cases follow.\n\nThe first line of each test case contains an integer \u2018N\u2019 denoting the size of the array \u2018ARR\u2019.\nThe second line of each test case contains \u2018N\u2019 integers representing the array \u2018ARR\u2019.\nFor more clarity, please refer to the sample inputs. \n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For every test case, you should return the sum of the minimum value in \u2018SUB\u2019, where \u2018SUB\u2019 ranges over every contiguous subarray of \u2018ARR.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= N &lt;= 1000\n1 &lt;= Value in each element of \u2018ARR\u2019 &lt;= 10^5\n\nWhere \u2018T\u2019 is the number of test cases, and \u2018N\u2019 is the size of the array \u2018ARR\u2019.\n\nTime limit: 1 second\n</code></pre>\n<h4 id=\"sample-input-1\">Sample input 1 :</h4>\n\n<pre><code>2\n4\n1 2 3 4\n4\n2 4 4 2 \n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample output 1 :</h4>\n\n<pre><code>20\n26\n</code></pre>\n\n<h4 id=\"explanation-of-sample-input-1\">Explanation of sample input 1 :</h4>\n\n<pre><code>Test Case 1 :\n\n1. Subarrays with \u20181\u2019 as their minimum value: [1], [1,2], [1,2,3], [1,2,3,4]. Sum = 1 + 1 + 1 + 1 = 4.\n2. Subarrays with \u20182\u2019 as their minimum value: [2], [2,3], [2,3,4]. Sum = 2 + 2 + 2 = 6.\n3. Subarrays with \u20183\u2019 as their minimum value: [3], [3,4]. Sum = 3 + 3 = 6.\n4. Subarrays with \u20184\u2019 as their minimum value: [4]. Sum = 4.\n\nThe sum over all subarrays is \u20184 + 6 + 6 + 4 = 20\u2019. Thus, you should return \u201820\u2019 as the answer.\n\nTest Case 2 :\n\n1. Subarrays with \u20182\u2019 as their minimum value: [2], [2], [2,4], [4,2], [2,4,4], [4,4,2], [2,4,4,2]. Sum = 2 + 2 + 2 + 2 + 2 + 2 + 2 = 14.\n2. Subarrays with \u20184\u2019 as their minimum value: [4], [4], [4,4]. Sum = 4 + 4 + 4 = 12.\n\nThe sum over all subarrays is \u201814 + 12 = 26\u2019. Thus, you should return \u201826\u2019 as the answer.\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample input 2 :</h4>\n\n<pre><code>2\n5\n1 3 2 4 2\n4\n2 1 3 2\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample output 2 :</h4>\n\n<pre><code>28\n15\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 4,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of integers, your task is to calculate the sum of the minimum values of all possible contiguous subarrays. Since the answer can be very large, return the result modulo 10^9 + 7.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= N <= 1000",
                    "1 <= Value in each element of \u2018ARR\u2019 <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "n = 4, nums=[3, 2, 1, 3]",
                        "output": "16",
                        "explanation": "1. Subarrays with \u20181\u2019 as their minimum value: [1], [2,1], [1,3], [3,2,1], [2,1,3], [3,2,1,3]. Sum = 1 + 1 + 1 + 1 + 1 + 1 = 6.\n2. Subarrays with \u20182\u2019 as their minimum value: [2], [3,2]. Sum = 2 + 2 = 4.\n3. Subarrays with \u20183\u2019 as their minimum value: [3], [3]. Sum = 3 + 3 = 6.\nThe sum over all subarrays is \u20186 + 4 + 6 = 16\u2019."
                    },
                    {
                        "input": "n = 4, nums=[1, 2, 3, 4]",
                        "output": "20",
                        "explanation": "1. Subarrays with \u20181\u2019 as their minimum value: [1], [1,2], [1,2,3], [1,2,3,4]. Sum = 1 + 1 + 1 + 1 = 4.\n2. Subarrays with \u20182\u2019 as their minimum value: [2], [2,3], [2,3,4]. Sum = 2 + 2 + 2 = 6.\n3. Subarrays with \u20183\u2019 as their minimum value: [3], [3,4]. Sum = 3 + 3 = 6.\n4. Subarrays with \u20184\u2019 as their minimum value: [4]. Sum = 4.\nThe sum over all subarrays is \u20184 + 6 + 6 + 4 = 20\u2019."
                    },
                    {
                        "input": "n = 4, nums=[2, 4, 4, 2]",
                        "output": "26",
                        "explanation": "1. Subarrays with \u20182\u2019 as their minimum value: [2], [2], [2,4], [4,2], [2,4,4], [4,4,2], [2,4,4,2]. Sum = 2 + 2 + 2 + 2 + 2 + 2 + 2 = 14.\n2. Subarrays with \u20184\u2019 as their minimum value: [4], [4], [4,4]. Sum = 4 + 4 + 4 = 12.\nThe sum over all subarrays is \u201814 + 12 = 26\u2019."
                    },
                    {
                        "input": "n = 5, nums=[1, 3, 2, 4, 2]",
                        "output": "28",
                        "explanation": "Minimums are: [1], [3], [2], [4], [2], [1,3], [3,2], [2,4], [4,2], [1,3,2], [3,2,4], [2,4,2], [1,3,2,4], [3,2,4,2], [1,3,2,4,2].  Their min values are 1, 3, 2, 4, 2, 1, 2, 2, 2, 1, 2, 2, 1, 2, 1. Sum = 1+3+2+4+2+1+2+2+2+1+2+2+1+2+1 = 28"
                    },
                    {
                        "input": "n = 4, nums=[2, 1, 3, 2]",
                        "output": "15",
                        "explanation": "Minimums are: [2], [1], [3], [2], [2,1], [1,3], [3,2], [2,1,3], [1,3,2], [2,1,3,2]. Their min values are 2, 1, 3, 2, 1, 1, 2, 1, 1, 1. Sum = 2+1+3+2+1+1+2+1+1+1 = 15"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to generate all possible subarrays.</p>",
            "<p>For every index \u2018i\u2019, try to find the number of subarrays in which <strong>\u2018ARR[i]\u2019</strong> is the minimum value.</p>",
            "<p>For every index \u2018i\u2019, try to find the number of subarrays in which \u2018ARR[i]\u2019 is the minimum value (do it in a single traversal of \u2018ARR\u2019).</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Stacks & Queues",
                "slug": "stacks-&-queues"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}