{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9284,
            "title": "Sum of Three Stacks",
            "titleSlug": "sum-of-three-stacks_981318",
            "content": "<h4 id=\"you-are-given-three-stacks-a-b-and-c-of-positive-integers-with-lengths-lena-lenb-and-lenc-respectively\">You are given three stacks A, B and C of positive integers with lengths &#39;lenA&#39;, &#39;lenB&#39; and &#39;lenC&#39; respectively.</h4>\n\n<h4 id=\"stacks-are-represented-as-an-array-in-the-input-and-the-first-index-of-the-array-represents-the-topmost-element-of-the-stack\">Stacks are represented as an array in the input, and the first index of the array represents the topmost element of the stack.</h4>\n\n<h4 id=\"you-can-remove-any-number-of-elements-possibly-zero-from-the-top-of-each-of-the-three-stacks-your-task-is-to-find-the-maximum-possible-equal-sum-of-the-elements-of-the-stack\">You can remove any number of elements(possibly zero) from the top of each of the three stacks. Your task is to find the maximum possible equal sum of the elements of the stack.</h4>\n\n<h4 id=\"for-example\">For example-</h4>\n\n<pre><code>Let the stacks be-\nA = [2 , 2, 1, 1]\nB = [1, 4]\nC = [4]\n\nWe can remove the topmost element from stack A and the topmost element from stack B.\n\nThe final stacks after removal of the elements are-\nA = [2, 1, 1]\nB = [4]\nC = [4]\nSum of elements of stack A = 4.\nSum of elements of stack B = 4.\nSum of elements of stack C = 4.\n\nThe maximum possible equal sum is equal to 4.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases to run. Then the test case follows.\n\nThen the first line of each test case contains three space separated positive integers \u2018len1\u2019, \u2018len2\u2019 and \u2018len3\u2019 denoting the length of the stacks.\n\nThe second line of each test case contains lenA space separated positive integers the elements of stack A.\n\nThe third line of each test case contains lenB space separated positive integers the elements of stack B.\n\nThe third line of each test case contains lenC space separated positive integers the elements of stack C.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, Print the maximum possible equal sum after the removal of some top elements from each of the stack.\n\nOutput for each test case will be printed in a new line. \n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= lenA, lenB, lenC &lt;= 5000\n1 &lt;= A[i], B[i], C[i] &lt;= 10^5\n\n Time Limit: 1sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n3 4 5\n1 1 1 \n1 1 1 2\n1 1 1 1 3\n3 1 1\n1 2 3\n3\n3\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>3\n3\n</code></pre>\n\n<h4 id=\"explanation-for-sample-1\">Explanation for Sample 1:</h4>\n\n<pre><code>For the first test case:\n\u2022 We can remove the topmost 2 elements from stack B and the topmost 4 elements from stack C to get the maximum equal sum as 3.  \n\nFor the second test case:\n\u2022 We can remove the topmost 2 elements from stack A to get the maximum equal sum as 3.  \n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\n1 1 1\n3\n4\n5\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>0\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": -2,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given three stacks, A, B, and C, containing positive integers, determine the maximum possible equal sum achievable by removing elements from the top of each stack. The stacks are represented as arrays, where the first element of each array is the top of the stack. You can remove any number of elements (including zero) from the top of each stack. The goal is to find the largest sum that is common to all three stacks after the removal of elements.",
                "constraints": [
                    "1 <= T <= 100 (Number of test cases)",
                    "1 <= lenA, lenB, lenC <= 5000 (Length of stacks A, B, and C)",
                    "1 <= A[i], B[i], C[i] <= 10^5 (Value of elements in the stacks)",
                    "Time Limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "3 4 5\n1 1 1\n1 1 1 2\n1 1 1 1 3",
                        "output": "3",
                        "explanation": "We can remove the topmost 2 elements from stack B and the topmost 4 elements from stack C to get the maximum equal sum as 3. Stacks would then be A = [1, 1, 1], B = [1], C = [3]."
                    },
                    {
                        "input": "3 1 1\n1 2 3\n3\n3",
                        "output": "3",
                        "explanation": "We can remove the topmost 2 elements from stack A to get the maximum equal sum as 3. Stacks would then be A = [3], B = [3], C = [3]."
                    },
                    {
                        "input": "1 1 1\n3\n4\n5",
                        "output": "0",
                        "explanation": "There is no way to obtain the same sum from each stack by removing elements, therefore the answer is 0."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can we use a greedy approach solution to solve this problem?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Stacks & Queues",
                "slug": "stacks-&-queues"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}