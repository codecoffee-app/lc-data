{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9270,
            "title": "Summed Matrix ",
            "titleSlug": "summed-matrix_981304",
            "content": "<h4 id=\"a-matrix-is-constructed-of-size-n-n-and-given-an-integer-q-the-value-at-every-cell-of-the-matrix-is-given-as-m-i-j-i-j-where-m-i-j-is-the-value-of-a-cell-i-is-the-row-number-and-j-is-the-column-number-return-the-number-of-cells-having-value-q\">A matrix is constructed of size n*n and given an integer \u2018q\u2019. The value at every cell of the matrix is given as, M(i,j) = i+j, where \u2018M(i,j)&#39; is the value of a cell, \u2018i\u2019 is the row number and \u2018j\u2019 is the column number. Return the number of cells having value \u2018q\u2019.</h4>\n\n<h4 id=\"assume-the-array-is-in-1-based-indexing\">Assume, the array is in 1-based indexing.</h4>\n\n<h5 id=\"input-format\">Input Format:-</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases.\nThe next \u2018T\u2019 lines represent the \u2018T\u2019 test cases.\n\nOne and only line of each test case contains two space-separated integers \u2018n\u2019 and \u2018q\u2019 where \u2018n\u2019 is the size of the matrix and \u2018q\u2019 the value we need to find in the matrix.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:-</h5>\n\n<pre><code>For each test case, print an integer denoting the number of cells having value &#39;q&#39; in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>Don\u2019t print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10^5\n1 &lt;= n &lt;= 10^18\n2 &lt;= q &lt;= (n+n)\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n4 2\n3 4\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>1\n3\n</code></pre>\n\n<h5 id=\"explanation-of-the-sample-input1\">Explanation of the Sample Input1:</h5>\n\n<pre><code>Test case 1:\n\nThe matrix we get after using M(i,j) = i+j is:\n\n2 3 4 5 \n3 4 5 6 \n4 5 6 7\n5 6 7 8\n\nOnly cell (1,1) is having the value 2. Hence the value of \u2018q\u2019 is 1 here.\n\nTest case 2:\n\n2 3 4\n3 4 5\n4 5 6\n\nHere the cells (1,3),(2,2),(3,1) are having the value 4 hence the value of &#39;q&#39; is 3.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n1 2\n2 3\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>1\n2\n</code></pre>\n\n<h5 id=\"explanation-of-the-sample-input-2\">Explanation of the Sample Input 2:</h5>\n\n<pre><code>Test case 1:\nHere only cell (1,1) is having the value 2. Hence the value of &#39;q&#39; is 1.\n\nTest case 2:\nBoth diagonal cells ((2,1)(1,2)) are having sum 3 hence the answer is 2.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 9,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an n x n matrix where each cell M(i, j) = i + j (1-based indexing), determine how many cells have a value equal to the given integer q.",
                "constraints": [
                    "1 <= T <= 10^5",
                    "1 <= n <= 10^18",
                    "2 <= q <= (n+n)"
                ],
                "testcases": [
                    {
                        "input": "n = 4, q = 2",
                        "output": "1",
                        "explanation": "The matrix is:\n2 3 4 5 \n3 4 5 6 \n4 5 6 7\n5 6 7 8\nOnly M(1,1) = 1 + 1 = 2."
                    },
                    {
                        "input": "n = 3, q = 4",
                        "output": "3",
                        "explanation": "The matrix is:\n2 3 4\n3 4 5\n4 5 6\nThe cells M(1,3) = 1 + 3 = 4, M(2,2) = 2 + 2 = 4, and M(3,1) = 3 + 1 = 4."
                    },
                    {
                        "input": "n = 1, q = 2",
                        "output": "1",
                        "explanation": "The matrix is:\n2\nOnly M(1,1) = 1+1 = 2."
                    },
                    {
                        "input": "n = 2, q = 3",
                        "output": "2",
                        "explanation": "The matrix is:\n2 3\n3 4\nThe cells M(1,2) = 1 + 2 = 3 and M(2,1) = 2 + 1 = 3."
                    },
                    {
                        "input": "n = 5, q = 10",
                        "output": "5",
                        "explanation": "The matrix is (partially shown):\n2 3 4 5 6\n3 4 5 6 7\n4 5 6 7 8\n5 6 7 8 9\n6 7 8 9 10\n...and so on.  The cells are (5,5), (6,4), (7,3), (8,2), (9,1) when i+j=10, but given we only have 5x5 matrix, the cells are (5,5), (4,6)... so M(i,j) == q in the positions such that i+j=10, the valid (i,j) pairs would be (5,5), (6,4),(4,6),(7,3),(3,7).... since n = 5 valid cells are where i,j <=5, thus valid pairs are (5,5), (4,6) not allowed...(3,7),(2,8),..(6,4) will exceed..."
                    },
                    {
                        "input": "n = 1000000000000000000, q = 2",
                        "output": "1",
                        "explanation": "With such a large matrix, only cell M(1, 1) has a value of 2."
                    },
                    {
                        "input": "n = 5, q = 6",
                        "output": "5",
                        "explanation": "Valid pairs include (1, 5), (2, 4), (3, 3), (4, 2), and (5, 1). Therefore, the answer is 5."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Make the matrix and see how many cells are having value q.</p>",
            "<p>If we draw the matrix we can say all values from 2 to 2*n appears in diagonal of 45 degree with the bottom.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Matrices (2D Arrays)",
                "slug": "matrices-(2d-arrays)"
            },
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}