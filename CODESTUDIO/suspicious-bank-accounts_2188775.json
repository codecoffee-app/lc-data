{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 14527,
            "title": "Suspicious Bank Accounts",
            "titleSlug": "suspicious-bank-accounts_2188775",
            "content": "<pre><code>Table: Accounts\n\n+----------------+------+\n| Column Name    | Type |\n+----------------+------+\n| account_id     | int  |\n| max_income     | int  |\n+----------------+------+\naccount_id is the primary key for this table.\nEach row contains information about the maximum monthly income for one bank account.\n\n\nTable: Transactions\n\n+----------------+----------+\n| Column Name    | Type     |\n+----------------+----------+\n| transaction_id | int      |\n| account_id     | int      |\n| type           | ENUM     |\n| amount         | int      |\n| day            | datetime |\n+----------------+----------+\ntransaction_id is the primary key for this table.\nEach row contains information about one transaction.\ntype is ENUM (&#39;Creditor&#39;,&#39;Debtor&#39;) where &#39;Creditor&#39; means the user deposited money into their account and &#39;Debtor&#39; means the user withdrew money from their account.\namount is the amount of money depositied/withdrawn during the transaction.\n\n\nWrite an SQL query to report the IDs of all suspicious bank accounts.\n\nA bank account is suspicious if the total income exceeds the max_income for this account for two or more consecutive months. The total income of an account in some month is the sum of all its deposits in that month (i.e., transactions of the type &#39;Creditor&#39;).\n\nReturn the result table in ascending order by transaction_id.\n\nThe query result format is in the following example:\n\n\n\nAccounts table:\n+------------+------------+\n| account_id | max_income |\n+------------+------------+\n| 3          | 21000      |\n| 4          | 10400      |\n+------------+------------+\n\nTransactions table:\n+----------------+------------+----------+--------+---------------------+\n| transaction_id | account_id | type     | amount | day                 |\n+----------------+------------+----------+--------+---------------------+\n| 2              | 3          | Creditor | 107100 | 2021-06-02 11:38:14 |\n| 4              | 4          | Creditor | 10400  | 2021-06-20 12:39:18 |\n| 11             | 4          | Debtor   | 58800  | 2021-07-23 12:41:55 |\n| 1              | 4          | Creditor | 49300  | 2021-05-03 16:11:04 |\n| 15             | 3          | Debtor   | 75500  | 2021-05-23 14:40:20 |\n| 10             | 3          | Creditor | 102100 | 2021-06-15 10:37:16 |\n| 14             | 4          | Creditor | 56300  | 2021-07-21 12:12:25 |\n| 19             | 4          | Debtor   | 101100 | 2021-05-09 15:21:49 |\n| 8              | 3          | Creditor | 64900  | 2021-07-26 15:09:56 |\n| 7              | 3          | Creditor | 90900  | 2021-06-14 11:23:07 |\n+----------------+------------+----------+--------+---------------------+\n\nResult table:\n+------------+\n| account_id |\n+------------+\n| 3          |\n+------------+\n\nFor account 3:\n- In 6-2021, the user had an income of 107100 + 102100 + 90900 = 300100.\n- In 7-2021, the user had an income of 64900.\nWe can see that the income exceeded the max income of 21000 for two consecutive months, so we include 3 in the result table.\n\nFor account 4:\n- In 5-2021, the user had an income of 49300.\n- In 6-2021, the user had an income of 10400.\n- In 7-2021, the user had an income of 56300.\nWe can see that the income exceeded the max income in May and July, but not in June. Since the account did not exceed the max income for two consecutive months, we do not include it in the result table.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Ninja",
            "likes": 8,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two tables, `Accounts` and `Transactions`, identify the `account_id` of all suspicious bank accounts. A bank account is considered suspicious if its total monthly income (sum of 'Creditor' transactions) exceeds its `max_income` (as defined in the `Accounts` table) for two or more consecutive months.  Return the `account_id`s in ascending order.",
                "constraints": [
                    "account_id is the primary key for the Accounts table.",
                    "transaction_id is the primary key for the Transactions table.",
                    "type in Transactions is ENUM ('Creditor','Debtor')."
                ],
                "testcases": [
                    {
                        "input": "Accounts=[(3, 21000), (4, 10400)], Transactions=[(2, 3, 'Creditor', 107100, '2021-06-02 11:38:14'), (4, 4, 'Creditor', 10400, '2021-06-20 12:39:18'), (11, 4, 'Debtor', 58800, '2021-07-23 12:41:55'), (1, 4, 'Creditor', 49300, '2021-05-03 16:11:04'), (15, 3, 'Debtor', 75500, '2021-05-23 14:40:20'), (10, 3, 'Creditor', 102100, '2021-06-15 10:37:16'), (14, 4, 'Creditor', 56300, '2021-07-21 12:12:25'), (19, 4, 'Debtor', 101100, '2021-05-09 15:21:49'), (8, 3, 'Creditor', 64900, '2021-07-26 15:09:56'), (7, 3, 'Creditor', 90900, '2021-06-14 11:23:07')]",
                        "output": "[3]",
                        "explanation": "Account 3's income exceeded its max_income for two consecutive months (June and July). Account 4 exceeded it in May and July but not June, so it doesn't satisfy the consecutive months condition."
                    },
                    {
                        "input": "Accounts=[(1, 50000), (2, 60000)], Transactions=[(1, 1, 'Creditor', 55000, '2023-01-15'), (2, 1, 'Creditor', 60000, '2023-02-20'), (3, 2, 'Creditor', 70000, '2023-01-10'), (4, 2, 'Debtor', 10000, '2023-02-05'), (5, 2, 'Creditor', 80000, '2023-02-15'), (6, 1, 'Debtor', 5000, '2023-03-25'), (7, 2, 'Creditor', 50000, '2023-03-10'), (8, 2, 'Creditor', 70000, '2023-04-01')]",
                        "output": "[1, 2]",
                        "explanation": "Account 1: January income = 55000 > 50000, February income = 60000 > 50000.  Two consecutive months. Account 2: January income = 70000 > 60000, February income = 80000 > 60000. Two consecutive months. March doesn't matter as the first two conditions are already satisfied. Account 2, March income = 50000, April income = 70000. While April exceeds the max_income, consecutive months are already met with Jan and Feb."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "SQL",
                "slug": "sql"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}