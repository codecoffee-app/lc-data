{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9204,
            "title": "Symmetric Tree",
            "titleSlug": "symmetric-tree_981177",
            "content": "<h4 id=\"you-have-been-given-a-binary-tree-having-n-nodes\">You have been given a Binary Tree having <em><strong>&#39;n&#39;</strong></em> nodes.</h4>\n\n<p><br/></p>\n\n<h4 id=\"a-symmetric-tree-is-a-binary-tree-whose-mirror-image-is-the-same-as-the-original-tree\">A Symmetric tree is a binary tree whose mirror image is the same as the original tree.</h4>\n\n<p><br/></p>\n\n<h4 id=\"find-out-whether-the-given-tree-is-symmetric-or-not\">Find out whether the given tree is symmetric or not.</h4>\n\n<p><br/></p>\n\n<h5 id=\"example\">Example :</h5>\n\n<pre><code>Input: Let the binary tree be:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/0000000000004229.png\" alt=\"sym_tree\"></p>\n\n<pre><code>Output: YES\n\nExplanation: As we can see in the image, the original tree is the same as the mirrored tree.\n</code></pre>\n\n<h5 id=\"input-format\">Input format :</h5>\n\n<pre><code>The first line of input contains elements in the level order form for the first binary tree. The line consists of values of nodes separated by a single space. In case a node is null, we take -1 in its place.\n</code></pre>\n\n<h5 id=\"input-format-explanation\">Input format explanation:</h5>\n\n<pre><code>The level order input for the tree depicted in the below image would be \n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/0000000000004189.png\" alt=\"alt text\"></p>\n\n<pre><code>1\n2 3\n4 -1 5 6\n-1 7 -1 -1 -1 -1\n-1 -1\n\nThe sequence will be put together in a single line separated by a single space. Hence, for the above-depicted tree, the input will be given as:\n\n1 2 3 4 -1 5 6 -1 7 -1 -1 -1 -1 -1 -1\n\nExplanation :\nLevel 1 :\nThe root node of the tree is 1\n\nLevel 2 :\nLeft child of 1 = 2\nRight child of 1 = 3\n\nLevel 3 :\nLeft child of 2 = 4\nRight child of 2 = null (-1)\nLeft child of 3 = 5\nRight child of 3 = 6\n\nLevel 4 :\nLeft child of 4 = null (-1)\nRight child of 4 = 7\nLeft child of 5 = null (-1)\nRight child of 5 = null (-1)\nLeft child of 6 = null (-1)\nRight child of 6 = null (-1)\n\nLevel 5 :\nLeft child of 7 = null (-1)\nRight child of 7 = null (-1)\n\nThe first not-null node (of the previous level) is treated as the parent of the first two nodes of the current level. The second not-null node (of the previous level) is treated as the parent node for the next two nodes of the current level, and so on.\nThe input ends when all nodes at the last level are null (-1).\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"output-format\">Output format:</h5>\n\n<pre><code>The output contains &quot;YES&quot; or &quot;NO&quot; depending on whether the tree is symmetric or not.\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the given function.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1 2 2 3 4 4 3 -1 -1 -1 -1 -1 -1 -1 -1\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>YES\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"explanation-for-sample-1\">Explanation for sample 1:</h5>\n\n<pre><code>As we can see in the image, the original tree is the same as the mirrored tree.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/0000000000004229.png\" alt=\"sym_tree\"></p>\n\n<p><br/></p>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1 2 3 4 -1 -1 -1 -1 -1\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"sample-output-2\">Sample output 2:</h5>\n\n<pre><code>NO\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation for sample input 2:</h5>\n\n<pre><code>As we can see in the image, the original tree is not the same as the mirrored tree.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/0000000000004470.png\" alt=\"sym_tree\"></p>\n\n<p><br/></p>\n\n<h5 id=\"expected-time-complexity\">Expected time complexity :</h5>\n\n<pre><code>The expected time complexity is O(n).\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>0 &lt;= &#39;n&#39; &lt;= 10000\n1 &lt;= Node data &lt;= 10 ^ 6\n\nTime Limit: 1 second\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 17,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a binary tree with 'n' nodes, determine if it is symmetric. A symmetric tree is one where its mirror image is identical to the original tree.",
                "constraints": [
                    "0 <= n <= 10000",
                    "1 <= Node data <= 10^6",
                    "Time Limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "1 2 2 3 4 4 3 -1 -1 -1 -1 -1 -1 -1 -1",
                        "output": "YES",
                        "explanation": "The tree is symmetric because its left and right subtrees are mirror images of each other."
                    },
                    {
                        "input": "1 2 3 4 -1 -1 -1 -1 -1",
                        "output": "NO",
                        "explanation": "The tree is not symmetric. The structure of the left and right subtrees differ."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Think of a recursive solution.</p>",
            "<p>Think of a solution using the Queue Data Structure to avoid recursion.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Binary Trees",
                "slug": "binary-trees"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}