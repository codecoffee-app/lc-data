{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 15713,
            "title": "Tanziro and his Boxes",
            "titleSlug": "tanziro-and-his-boxes_2675988",
            "content": "<h4 id=\"tanziro-has-n-boxes-numbered-from-0-to-n-1-initially-these-boxes-have-values-equal-to-zero-nezuko-wants-to-perform-k-operations-and-for-each-operation-she-wants-to-update-the-value-of-some-boxes-by-some-value-x-she-gave-tanziro-a-2d-array-value-of-size-k-3-where-the-first-element-of-the-ith-index-in-this-array-denotes-the-starting-index-of-the-box-the-second-element-denotes-the-ending-index-of-the-box-and-the-third-element-denotes-the-value-to-be-given-to-the-boxes-in-between-these-indexes-now-after-the-completion-of-all-the-k-operations-nezuko-wants-to-know-the-value-of-all-of-these-boxes-help-tanziro-in-calculating-the-final-values-all-the-indices-are-zero-based-indexes\">Tanziro has \u2018N\u2019 boxes numbered from 0 to \u2018N\u2019 - 1. Initially, these boxes have values equal to zero. Nezuko wants to perform K operations and for each operation, she wants to update the value of some boxes by some value \u2018X\u2019. She gave Tanziro a 2D array \u2018value\u2019 of size \u2018K\u2019 * 3, Where the first element of the ith index in this array denotes the starting index of the box, the second element denotes the ending index of the box and the third element denotes the value to be given to the boxes in between these indexes. Now after the completion of all the \u2018K\u2019 operations Nezuko wants to know the value of all of these boxes. Help Tanziro in calculating the final values. All the indices are zero-based indexes.</h4>\n\n<h5 id=\"for-example\">For Example :</h5>\n\n<pre><code>\u2018N\u2019 = 4, \u2018K\u2019 = 3, \u2018coins\u2019 = {0, 2, 3}, {1, 3, -5}, {0, 0, 7}.\n\nNow in this example, after the first operation, the value on the boxes will be {0, 0, 0, 0} -&gt; {3, 3, 3, 0}, after the second operation, the values will be {3, 3, 3, 0} -&gt; {3, -2, -2, -5} and after the last operation the values are {3, -2, -2, 5} -&gt; {10, -2, -2, 5}. Hence the answer is {10, -2, -2, 5}.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of input format contains \u2018T\u2019, denoting the number of test cases. Then each test case follows.\n\nThe first line of each test case contains two integers \u2018N\u2019 and \u2018K\u2019, denoting the number of boxes Tanziro has and the number of operations Nezuko wants to perform, respectively.\n\nThe next \u2018K\u2019 lines of the test case contain 3 integers, the starting index of the box, the ending index, and the value to be updated.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print an array denoting the final values on the boxes.\n\nOutput for every query will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You are not required to print anything explicitly. It has already been taken care of. Just implement the functions.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= \u2018N\u2019 &lt;= 5000\n1 &lt;= \u2018K\u2019 &lt;= 5000\n0 &lt;= \u2018value[i][0]\u2019, \u2018value[i][1]\u2019 &lt;= N - 1\n-5000 &lt;= \u2018value[i][2]\u2019 &lt;= 5000\n\nTime Limit: 1 second\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n2 1\n0 1 10\n5 3\n0 3 4\n2 4 4\n0 1 -7\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>10 10\n-3 -3 8 8 4\n</code></pre>\n\n<h5 id=\"explanation-for-sample-output-1\">Explanation For Sample Output 1 :</h5>\n\n<pre><code>For the first example, after the first operation, the value on the boxes will be {0, 0} -&gt; {10, 10}, Hence the answer is {10, 10}.\n\nFor the second example, after the first operation, the value on the boxes will be {0, 0, 0, 0, 0} -&gt; {4, 4, 4, 4, 0}, after the second operation, the values will be {4, 4, 4, 4, 0} -&gt; {4, 4, 8, 8, 4} and after the last operation the values are {4, 4, 8, 8, 4} -&gt; {-3, -3, 8, 8, 4}. Hence the answer is {-3, -3, 8, 8, 4}.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n3 2\n0 2 -4\n0 2 -8\n5 3\n1  3  2\n2  4  3\n0  2 -2\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>-12 -12 -12\n-2 0 3 5 3\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -10,
            "dislikes": "NA",
            "rephrased": {
                "body": "Tanziro has N boxes, numbered from 0 to N-1. Initially, all boxes have a value of 0. Nezuko wants to perform K operations. In each operation, she updates the values of a range of boxes by adding a value X to them. You are given a 2D array 'value' of size K x 3, where value[i][0] is the starting index, value[i][1] is the ending index, and value[i][2] is the value to be added to the boxes from the starting index to the ending index (inclusive). After performing all K operations, determine the final values of all the boxes.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 5000",
                    "1 <= K <= 5000",
                    "0 <= value[i][0], value[i][1] <= N - 1",
                    "-5000 <= value[i][2] <= 5000",
                    "Time Limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "2\n2 1\n0 1 10\n5 3\n0 3 4\n2 4 4\n0 1 -7",
                        "output": "10 10\n-3 -3 8 8 4",
                        "explanation": "For the first test case (N=2, K=1):\n- Initial state: [0, 0]\n- Operation 1: Add 10 to indices 0 to 1: [10, 10]\n\nFor the second test case (N=5, K=3):\n- Initial state: [0, 0, 0, 0, 0]\n- Operation 1: Add 4 to indices 0 to 3: [4, 4, 4, 4, 0]\n- Operation 2: Add 4 to indices 2 to 4: [4, 4, 8, 8, 4]\n- Operation 3: Add -7 to indices 0 to 1: [-3, -3, 8, 8, 4]"
                    },
                    {
                        "input": "2\n3 2\n0 2 -4\n0 2 -8\n5 3\n1  3  2\n2  4  3\n0  2 -2",
                        "output": "-12 -12 -12\n-2 0 3 5 3",
                        "explanation": "For the first test case (N=3, K=2):\n- Initial state: [0, 0, 0]\n- Operation 1: Add -4 to indices 0 to 2: [-4, -4, -4]\n- Operation 2: Add -8 to indices 0 to 2: [-12, -12, -12]\n\nFor the second test case (N=5, K=3):\n- Initial state: [0, 0, 0, 0, 0]\n- Operation 1: Add 2 to indices 1 to 3: [0, 2, 2, 2, 0]\n- Operation 2: Add 3 to indices 2 to 4: [0, 2, 5, 5, 3]\n- Operation 3: Add -2 to indices 0 to 2: [-2, 0, 3, 5, 3]"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Iterate through all the operations and Update the array for every index.</p>",
            "<p>Iterate through all the operations and Update the array for every index in O(1) time</p>"
        ],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}