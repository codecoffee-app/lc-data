{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 13354,
            "title": "Team Formation",
            "titleSlug": "team-formation_1558608",
            "content": "<h4 id=\"you-are-giving-an-interview-and-you-need-to-prove-your-intelligence-you-will-be-given-an-array-list-arr-of-n-positive-integers-which-are-the-runs-scored-by-n-best-players-in-the-world-in-their-last-innings-you-will-be-given-x-which-is-the-target-you-need-to-come-near-with-the-help-of-two-other-players-in-the-array-you-scored-only-30-runs-and-gave-rest-runs-to-your-other-two-friends-in-short-you-need-to-find-two-players-and-the-total-runs-scored-by-them-in-their-respective-last-innings-should-be-less-than-or-equal-to-x-30\">You are giving an interview, and you need to prove your intelligence. You will be given an array/list \u2018ARR\u2019 of \u2018N\u2019 positive integers, which are the runs scored by \u2018N\u2019 best players in the world in their last innings. You will be given \u2018X\u2019, which is the target you need to come near with the help of two other players in the array. You scored only 30 runs and gave rest runs to your other two friends. In short, you need to find two players, and the total runs scored by them in their respective last innings should be less than or equal to \u2018X - 30\u2019.</h4>\n\n<h4 id=\"example-given-an-arr-30-40-10-8-60-100-40-and-given-x-is-110-the-output-array-list-which-will-be-printed-is-40-40\">Example: Given an \u2018ARR\u2019: [ 30, 40, 10, 8, 60, 100, 40 ] and given \u2018X\u2019 is 110. The output array/list which will be printed is [ 40, 40 ].</h4>\n\n<h4 id=\"note-there-might-be-many-different-output-arrays-lists-possible-like-30-40-40-40-or-40-10-but-you-need-to-print-which-makes-the-highest-runs-amongst-them\">Note: There might be many different output arrays/lists possible like [ 30, 40 ], [ 40, 40 ], or [ 40, 10 ], but you need to print which makes the highest runs amongst them.</h4>\n\n<h4 id=\"note-there-always-exists-a-pair-in-arr-that-has-the-sum-less-than-or-equal-to-x-30-and-the-second-integer-must-be-larger-than-the-first-integer\">Note: There always exists a pair in \u2018ARR\u2019 that has the sum less than or equal to \u2018X - 30\u2019 and the second integer must be larger than the first integer.</h4>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 representing the number of test cases. \n\nThe first line of each test case will contain one integer \u2018N\u2019 and \u2018X\u2019, that denotes the size of the \u2018ARR\u2019 and runs you need to come close to with the help of your team.\n\nThe second line of each test case contains \u2018N\u2019 space-separated integers \u2018ARR[i]\u2019, which denoting the numbers present in our \u2018ARR\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, return a pair of integers denoting the closest pairs of values which have the highest runs combined.\n\nOutput for every test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You don\u2019t need to print anything; It has already been taken care of.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= N &lt;= 10^5\n0 &lt;= A[i], X &lt;= 10^9\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n6 140\n50 20 35 110 150 45\n5 150\n50 70 35 100 50\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>45 50\n50 70\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1:</h5>\n\n<pre><code>In the first test case, the possible pairs of answers are [ 50, 20], [ 50, 35], [ 50, 45],  [ 20, 35], [ 20, 45], and  [ 35, 45]. But the closest we can come to \u2018X\u2019 can be achieved by the pair [ 50, 45] as the sum of them is 95 while the rest are smaller than it.\n\nIn the second test case, the possible pairs of answers are [ 50, 70], [ 50, 35], [ 50, 50],  [ 70, 35], and  [ 35, 50]. But the closest we can come to \u2018X\u2019 can be achieved by the pair [ 50, 70] as the sum of them is 110 while the rest are smaller than it.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n2 140\n5 10\n5 130\n80 120 35 25 75\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>5 10\n25 75\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation For Sample Input 2:</h5>\n\n<pre><code>In the first test case, there is only one pair [5,10] which gives the sum less than or equal to 110.\nIn the second test case also there is only one pair [25,75] which gives the sum less than or equal to 100. So, we will return [25, 75].\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 8,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of integers `arr` representing the scores of players and a target value `x`, find two players from the array such that the sum of their scores is less than or equal to `x - 30`.  The goal is to find the pair with the largest possible sum, where the second score in the pair is greater than the first. You can assume there always exists such a pair.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= N <= 10^5",
                    "0 <= A[i], X <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "arr=[50, 20, 35, 110, 150, 45], x=140",
                        "output": "[45, 50]",
                        "explanation": "Possible pairs are [50, 20], [50, 35], [50, 45], [20, 35], [20, 45], [35, 45]. The target is 140, so we want pairs summing to at most 110. The sums are 70, 85, 95, 55, 65, 80 respectively. The largest sum is 95, achieved by [45, 50] or [50,45]. Since the problem description specifies that the second integer has to be greater than the first integer, the answer is [45, 50]."
                    },
                    {
                        "input": "arr=[50, 70, 35, 100, 50], x=150",
                        "output": "[50, 70]",
                        "explanation": "Possible pairs are [50, 70], [50, 35], [50, 50], [70, 35], [35, 50]. The target is 150, so we want pairs summing to at most 120. The sums are 120, 85, 100, 105, 85 respectively. The largest sum is 120, achieved by [50, 70]. If we switch the order, the sum is the same, so since 70>50, the answer is [50, 70]."
                    },
                    {
                        "input": "arr=[5, 10], x=140",
                        "output": "[5, 10]",
                        "explanation": "There is only one pair [5,10] which gives a sum of 15, which is less than or equal to 140-30 = 110. Therefore, the answer is [5, 10]."
                    },
                    {
                        "input": "arr=[80, 120, 35, 25, 75], x=130",
                        "output": "[25, 75]",
                        "explanation": "The target is 130-30=100.  Possible pairs are [80,120], [80,35], [80,25], [80,75], [120,35], [120,25], [120,75], [35,25], [25,35], [25,75], [35,75].  Their sums are 200, 115, 105, 155, 155, 145, 195, 60, 60, 100, 110.  We want sums <= 100, which are 60 and 100. 60 appears in [35,25], [25,35] and 100 appears in [25,75]. We want the largest sum so answer is [25,75]."
                    },
                    {
                        "input": "arr=[1,2,3,4,5], x=100",
                        "output": "[4, 5]",
                        "explanation": "x-30 = 70. Possible Pairs (where second int > first): [1,2], [1,3], [1,4], [1,5], [2,3], [2,4], [2,5], [3,4], [3,5], [4,5].  Sums are 3, 4, 5, 6, 5, 6, 7, 7, 8, 9. All <= 70. Max Sum = 9, therefore [4,5]"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you think of checking all the pairs one by one?</p>",
            "<p>Can you think of sorting all elements and trying to find a pair using two-pointers?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}