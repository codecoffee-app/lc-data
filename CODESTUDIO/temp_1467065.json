{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12594,
            "title": "temp",
            "titleSlug": "temp_1467065",
            "content": "<h4 id=\"there-is-a-street-of-length-x-with-x-slots-numbered-from-0-to-x-0-1-x-initially-there-are-no-traffic-lights-in-these-slots-later-n-sets-of-traffic-lights-are-added-to-the-street-one-after-another-the-pos-array-tells-the-position-of-the-i-th-light\">There is a street of length \u2018X\u2019 with &#39;X&#39; slots numbered from 0 to &#39;X&#39; (0,1,\u2026, \u2019X\u2019). Initially, there are no traffic lights in these slots. Later \u2018N\u2019 sets of traffic lights are added to the street one after another. The \u2018POS\u2019 array tells the position of the \u2018i\u2019th light.</h4>\n\n<h4 id=\"your-task-is-to-calculate-the-length-of-the-longest-passage-without-traffic-lights-after-each-addition\">Your task is to calculate the length of the longest passage without traffic lights after each addition.</h4>\n\n<h4 id=\"for-example\">For example:</h4>\n\n<pre><code>Given:- \u2018X\u2019 = 5 and \u2018N\u2019 = 2.\n\u2018POS\u2019[] = 3, 4\nThe output will be 3 and 3.\nInitially, there are no lights, and we install a light at position three; therefore, there is a segment between the 3 and 6. \nThen we install a light at position four; therefore, the largest gap becomes between 0 to 3.\n</code></pre>\n\n<h4 id=\"input-format\">Input format :</h4>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases.\n\nThe first line of each test case contains two space-separated integers, &#39;X&#39; and \u2018N\u2019, where \u2018X\u2019 is the length of the road and \u2018N\u2019 is the number of lights.\n\nThe next line contains \u2018N\u2019 space-separated integers denoting the position of the ith light.\n</code></pre>\n\n<h4 id=\"output-format\">Output format :</h4>\n\n<pre><code>For each test case, print a single line containing a single integer denoting the maximum gap for every light we install.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints:</h4>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 2000\n1 &lt;= X &lt;= 10 ^ 8\n1 &lt;= POS[i] &lt;= X \n\nWhere \u2018T\u2019 is the total number of test cases, \u2018N\u2019 is the number of lights we install, \u2018X\u2019 is the length of the road, and \u2018POS[i]\u2019 denotes the position of the &#39;i th&#39; light.\n\nTime limit: 1 sec.\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1 :</h4>\n\n<pre><code>2\n5 2\n3 4\n6 3\n4 5 1\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1 :</h4>\n\n<pre><code>3 3 \n4 4 3\n</code></pre>\n\n<h4 id=\"explanation-of-the-sample-input-1\">Explanation of the Sample Input 1:</h4>\n\n<pre><code>For the first test case :  \nThe output will be 3 3.\nInitially, there are no lights, and we install a light at position 3 therefore, there is a segment between the 3 and 6. \nThen we install a light at position 4; therefore, the largest gap becomes between 0 to 3.\n\nFor the second test case : \nThe output will be 4 4 3.\nInitially, there is no light. Then we install a light at position 4. Therefore the max gap becomes between 0 and 4.\nThen we install a light at position 5, and the largest gap is still 0 to 4.\nThen we install a light at position 1 then the largest gap is between 1 to 4, which is 3.      \n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2 :</h4>\n\n<pre><code>2\n6 3\n5 3 4\n7 4\n1 2 3 4\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2 :</h4>\n\n<pre><code>5 3 3 \n6 5 4 3\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 3,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a street of length 'X' with slots numbered from 0 to 'X'. Initially, there are no traffic lights. 'N' sets of traffic lights are added one after another. The 'POS' array indicates the position of the i-th light. For each addition of a traffic light, calculate and return the length of the longest passage without any traffic lights.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 2000",
                    "1 <= X <= 10 ^ 8",
                    "1 <= POS[i] <= X"
                ],
                "testcases": [
                    {
                        "input": "n = 2, x = 5, pos = [3, 4]",
                        "output": "[3, 3]",
                        "explanation": "Initially, there are no lights.  After placing a light at position 3, the longest gap is from 0 to 3 (length 3). After placing another light at position 4, the longest gap is from 0 to 3 (length 3)."
                    },
                    {
                        "input": "n = 3, x = 6, pos = [4, 5, 1]",
                        "output": "[4, 4, 3]",
                        "explanation": "Initially, there are no lights. After placing a light at position 4, the longest gap is from 0 to 4 (length 4). After placing another light at position 5, the longest gap remains from 0 to 4 (length 4). After placing a light at position 1, the longest gap is between 1 and 4 (length 3)."
                    },
                    {
                        "input": "n = 3, x = 6, pos = [5, 3, 4]",
                        "output": "[5, 3, 3]",
                        "explanation": "Initially, there are no lights. After placing a light at position 5, the longest gap is from 0 to 5 (length 5). After placing another light at position 3, the longest gap is from 0 to 3 (length 3). After placing a light at position 4, the longest gap remains from 0 to 3 (length 3)."
                    },
                    {
                        "input": "n = 4, x = 7, pos = [1, 2, 3, 4]",
                        "output": "[6, 5, 4, 3]",
                        "explanation": "Initially, there are no lights. After placing a light at position 1, the longest gap is from 1 to 7 (length 6). After placing another light at position 2, the longest gap is from 2 to 7 (length 5). After placing a light at position 3, the longest gap is from 3 to 7 (length 4). After placing another light at position 4, the longest gap is from 4 to 7 (length 3)."
                    },
                    {
                        "input": "n = 4, x = 7, pos = [1, 2, 3, 4]",
                        "output": "[6, 5, 4, 3]",
                        "explanation": "Initially, there are no lights. After placing a light at position 1, the longest gap is from 1 to 7 (length 6). After placing another light at position 2, the longest gap is from 2 to 7 (length 5). After placing a light at position 3, the longest gap is from 3 to 7 (length 4). After placing another light at position 4, the longest gap is from 4 to 7 (length 3)."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you use a multiset to keep track of the distances of the adjacent traffic lights?</p>",
            "<p>Can you use binary search to find the position of the adjacent traffic lights?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}