{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8940,
            "title": "Tetrahedron",
            "titleSlug": "tetrahedron_920546",
            "content": "<h4 id=\"you-are-given-a-tetrahedron-with-vertices-a-b-c-and-d-an-ant-is-standing-at-vertex-d-the-ant-wont-sit-idle-it-will-keep-on-moving-from-one-vertex-to-another-along-some-edge-of-the-tetrahedron-your-task-is-to-count-the-number-of-ways-in-which-the-ant-can-go-from-the-initial-vertex-d-to-itself-in-exactly-n-steps-in-other-words-you-are-asked-to-find-out-the-number-of-different-cyclic-paths-with-the-length-of-n-from-vertex-d-to-itself-as-the-number-can-be-quite-large-you-should-print-it-modulo-1000000007-10-9-7\">You are given a tetrahedron with vertices A, B, C, and D. An ant is standing at vertex D. The ant won&#39;t sit idle. It will keep on moving from one vertex to another along some edge of the tetrahedron. Your task is to count the number of ways in which the ant can go from the initial vertex D to itself in exactly n steps. In other words, you are asked to find out the number of different cyclic paths with the length of n from vertex D to itself. As the number can be quite large, you should print it modulo 1000000007 (10^9\u2009+\u20097).</h4>\n\n<h4 id=\"for-example\">For example:</h4>\n\n<p><img src=\"https://files.codingninjas.in/tetrahedron-11697.png\" alt=\"1\"></p>\n\n<pre><code>For n = 2, there are three cycle D -&gt; A -&gt; D, D -&gt; B -&gt; D and D -&gt; C -&gt; D \n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019, denoting the number of test cases. Then each test case follows.\n\nThe first line and the last line of each test case contain the integer \u2018N\u2019 denoting the required length of the cyclic path.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print the count the number of ways in which the ant can go from the initial vertex \u2018D\u2019 to itself in exactly \u2018n\u2019 steps modulo 1000000007 (10^9\u2009+\u20097).\n\nThe output of each test case will be printed on a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= N &lt;= 10 ^ 5\n\nTime Limit: 1 sec.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n2\n3\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>3\n6\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1:</h5>\n\n<pre><code>For test case 1, the ant can go from \nD -&gt; A -&gt; D\nD -&gt; B -&gt; D\nD -&gt; C -&gt; D\nSo, total 3 ways.\n\nFor test case 2,  the ant can go from\nD -&gt; B -&gt; C -&gt; D\nD -&gt; B -&gt; A -&gt; D\nD -&gt; C -&gt; B -&gt; D\nD -&gt; C -&gt; A -&gt; D\nD -&gt; A -&gt; B -&gt; D\nD -&gt; A -&gt; C -&gt; D\nSo, total 6 ways.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n4\n10\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>21\n14763\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 7,
            "dislikes": "NA",
            "rephrased": {
                "body": "You are given a tetrahedron with vertices A, B, C, and D. An ant starts at vertex D and moves along the edges to adjacent vertices.  Your task is to determine the number of distinct paths of length *n* that start and end at vertex D. Since the number of paths can be very large, compute the result modulo 1000000007 (10^9 + 7).",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= N <= 10 ^ 5",
                    "Time Limit: 1 sec."
                ],
                "testcases": [
                    {
                        "input": "2\n2\n3",
                        "output": "3\n6",
                        "explanation": "For n = 2, the possible paths are:\nD -> A -> D\nD -> B -> D\nD -> C -> D\nTotal paths: 3\n\nFor n = 3, the possible paths are:\nD -> B -> C -> D\nD -> B -> A -> D\nD -> C -> B -> D\nD -> C -> A -> D\nD -> A -> B -> D\nD -> A -> C -> D\nTotal paths: 6"
                    },
                    {
                        "input": "2\n4\n10",
                        "output": "21\n14763",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Hint: Can you find the number of ways you take the path from D to A , D to B and D to C in n - 1 steps?</p>",
            "<p>Can you find the number of ways you take the path from D to A , D to B and D to C in n - 1 steps? Can you avoid recomputation of&nbsp; repetitive subproblems?</p>",
            "<p>The current state is dependent on only the previous state. Can you save the extra space that we are using?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}