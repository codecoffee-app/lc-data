{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 22589,
            "title": "The Food Inspector",
            "titleSlug": "the-food-inspector_5815825",
            "content": "<h4 id=\"malay-is-the-food-inspector-of-the-surat-district-there-are-two-main-shops-in-the-district-of-surat-namely-shop-a-and-shop-b-having-n-and-m-number-of-food-products-denoted-by-array-arr1-and-arr2-respectively-he-has-been-assigned-the-task-to-find-the-number-of-edible-products-with-the-same-name-but-have-different-prices-in-those-two-main-shops-of-the-district-based-on-which-he-can-decide-the-inflation-rate-of-food-products-in-surat\">Malay is the food inspector of the Surat district. There are two main shops in the district of Surat namely shop \u2018A\u2019 and shop \u2018B\u2019, having \u2018N\u2019 and \u2018M\u2019 number of food products denoted by array \u2018ARR1\u2019 and \u2018ARR2\u2019 respectively. He has been assigned the task to find the number of edible products with the same name but have different prices in those two main shops of the district based on which he can decide the inflation rate of food products in Surat.</h4>\n\n<h4 id=\"but-because-there-is-another-big-food-industry-inspection-he-doesn-t-have-time-to-manually-check-the-prices-of-every-product-in-both-shops-so-being-his-friend-he-asked-you-to-help-him-find-the-count-of-products-with-the-same-name-but-different-prices-in-both-shops\">But because there is another big food industry inspection, he doesn\u2019t have time to manually check the prices of every product in both shops, so being his friend he asked you to help him find the count of products with the same name but different prices in both shops.</h4>\n\n<h5 id=\"example\">EXAMPLE :</h5>\n\n<pre><code>Input: \u2018N\u2019 = 2, \u2018M&#39; = 2, \u2018ARR1\u2019 = [{\u201cbread\u201d, 10}, {\u201crice\u201d, 20}], \u2018ARR2\u2019 = [{\u201cmilk\u201d, 25}, {\u201crice\u201d, 20}]\n\nOutput: 0\nIn this case, here the only same product in both shops is \u201crice\u201d and the price is the same in both shops (i.e. 20). Thus there is no product with the same name but at different prices.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line will contain the integer \u2018T\u2019, the number of test cases.\n\nThe first line of each test case contains two integers, \u2018N\u2019 and \u2018M\u2019 separated by spaces.\n\nFollowed by \u2018N\u2019 lines, each containing the name of the product \u2018foodItem\u2019 and the non-negative integer price of the products \u2018P\u2019, denoting the food products of the shop \u2018A\u2019.\n\nFollowed by \u2018M\u2019 lines, each containing the name of the product \u2018foodItem\u2019 and the non-negative integer price of the products \u2018P\u2019, denoting the food products of the shop \u2018B\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case, print the number of food products having the same name but having different prices in shop \u2018A\u2019 and shop \u2018B\u2019.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don&#39;t need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= \u2018T\u2019 &lt;= 10\n1 &lt;= \u2018N\u2019 &lt;= 10^4\n1 &lt;= \u2018M\u2019 &lt;= 10^4\nIt is guaranteed that \u2018foodItem\u2019 consists of only lower-case English letters.\nIt is guaranteed that the length of \u2018foodItem\u2019 is less than \u201810\u2019.\nIt is guaranteed that the name (i.e. \u2018foodItem\u2019) of every product in a single shop is distinct.\n0 &lt;= \u2018P\u2019 &lt;= 10^9\nIt is guaranteed that sum of the lengths of \u2018foodItem\u2019 is &lt;= 10^5.\nIt is guaranteed that sum of \u2018N\u2019 over all test cases is &lt;= 10^4\nIt is guaranteed that sum of \u2018M\u2019 over all test cases is &lt;= 10^4\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n3 2\nwheat 10\npotato 20\ntomato 17\nwheat 15\ntomato 17\n1 1\nonion 1\nonion 80000\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>1\n1\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1 :</h5>\n\n<pre><code>For the first test case, \u201cwheat\u201d has a price of \u201810\u2019 in shop \u2018A\u2019 and \u201815\u2019 in shop \u2018B\u2019, other products have the same price.\n\nHence, the output will be: 1\n\nFor the second test case, \u201conion\u201d has a price of \u20181\u2019 in shop \u2018A\u2019 and \u201880000\u2019 in shop \u2018B\u2019.\n\nHence, the output will be: 1\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n5 3\nabcd 3\nzyxw 7\ncorn 13\ncoffee 49\ntea 69\ndcba 8\nwxyz 4\nchilli 10\n2 2\nmilk 30\nchocolate 5\nmilk 30\nchocolate 5\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>0\n0\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": -9,
            "dislikes": "NA",
            "rephrased": {
                "body": "Malay, the food inspector of Surat, needs your help to determine the inflation rate of food products. He has data from two shops, 'A' and 'B', containing lists of food products and their prices. Your task is to find the number of food products that are present in both shops but have different prices.",
                "constraints": [
                    "1 <= \u2018T\u2019 <= 10 (Number of test cases)",
                    "1 <= \u2018N\u2019 <= 10^4 (Number of products in shop A)",
                    "1 <= \u2018M\u2019 <= 10^4 (Number of products in shop B)",
                    "\u2018foodItem\u2019 consists of only lower-case English letters.",
                    "The length of \u2018foodItem\u2019 is less than \u201810\u2019.",
                    "The name of every product in a single shop is distinct.",
                    "0 <= \u2018P\u2019 <= 10^9 (Price of the product)",
                    "The sum of the lengths of \u2018foodItem\u2019 is <= 10^5.",
                    "The sum of \u2018N\u2019 over all test cases is <= 10^4",
                    "The sum of \u2018M\u2019 over all test cases is <= 10^4",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "3 2\nwheat 10\npotato 20\ntomato 17\nwheat 15\ntomato 17\n1 1\nonion 1\nonion 80000",
                        "output": "1\n1",
                        "explanation": "In the first test case, 'wheat' has different prices in shop A (10) and shop B (15). 'tomato' has the same price (17) in both shops.  Therefore, the count is 1.\n\nIn the second test case, 'onion' has different prices in shop A (1) and shop B (80000).  Therefore, the count is 1."
                    },
                    {
                        "input": "5 3\nabcd 3\nzyxw 7\ncorn 13\ncoffee 49\ntea 69\ndcba 8\nwxyz 4\nchilli 10\n2 2\nmilk 30\nchocolate 5\nmilk 30\nchocolate 5",
                        "output": "0\n0",
                        "explanation": "In the first test case, no food products are common between both of the shops. Thus there is no product with the same name but at different prices.\n\nIn the second test case, 'milk' and 'chocolate' are common between both of the shops but their price is also the same. Thus there is no product with the same name but at different prices."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><strong>Can we try to match the prices of products with the same name?</strong></p>",
            "<p><strong>Can we preprocess the information of anyone shop and use it for matching prices when iterating on the products of another shop?</strong></p>"
        ],
        "relatedTopics": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}