{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12691,
            "title": "The hero test-1 ",
            "titleSlug": "the-hero-test-1_1472833",
            "content": "<h4 id=\"ninja-wants-the-hero-certificate-to-get-the-support-of-local-police-and-government-to-help-the-people-but-to-get-the-hero-certificate-he-needs-to-clear-an-exam\">Ninja wants the hero certificate to get the support of local police and government to help the people. But to get the hero certificate he needs to clear an exam.</h4>\n\n<h4 id=\"the-exam-consists-of-n-questions-from-1-to-n-to-clear-the-exam-ninja-needs-to-solve-in-a-particular-order-he-needs-to-leave-one-question-after-solving-one-question-assume-that-after-n-th-question-he-will-come-back-to-the-first-question-he-will-perform-this-action-till-all-questions-are-solved-help-ninja-in-exams-by-telling-him-the-order\">The exam consists of \u2018N\u2019 questions from \u20181\u2019 to \u2018N\u2019. To clear the exam Ninja needs to solve in a particular order. He needs to leave one question after solving one question(assume that after \u2018N\u2019th question he will come back to the first question). He will perform this action till all questions are solved. Help Ninja in exams by telling him the order.</h4>\n\n<h5 id=\"for-example\">For Example:</h5>\n\n<pre><code>If there are \u20185\u2019 questions then the order will be:\n\u201c 2 4 1 5 3 \u201d\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer &#39;T&#39; representing the number of test cases.\n\nThe first line of each test case contains a single integer \u2018N\u2019 denoting the number of questions.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, return the order of the questions separated by space.\n\nThe output for each test case is printed in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= N &lt;= 3000\n\nWhere \u2018T\u2019 is the number of test cases, \u2018N\u2019 is the number of questions.\n\nTime limit: 1 second.\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1:</h4>\n\n<pre><code>2\n6\n4      \n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1:</h4>\n\n<pre><code>2 4 6 3 1 5\n2 4 3 1\n</code></pre>\n\n<h4 id=\"explanation-of-sample-output-1\">Explanation of Sample Output 1:</h4>\n\n<pre><code>Test Case 1:  \nThere are 6 questions and the order is [2, 4, 6, 3, 1, 5]. Ninja will start solving the questions as shown in the image below:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/screenshot-from-2021-04-24-22-58-11-9462.png\" alt=\"\"></p>\n\n<pre><code>Test Case 2:\nThere are 6 questions and the order is [2, 4, 3, 1]. Ninja will start solving the questions as shown in image below: \n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/screenshot-from-2021-04-24-22-58-33-9463.png\" alt=\"\"></p>\n\n<h4 id=\"sample-input-2\">Sample Input 2:</h4>\n\n<pre><code>2\n10 \n7\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2:</h4>\n\n<pre><code>2 4 6 8 10 3 7 1 9 5 \n2 4 6 1 5 3 7 \n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 40,
            "dislikes": "NA",
            "rephrased": {
                "body": "Ninja needs to clear an exam to get a hero certificate. The exam has 'N' questions, numbered from 1 to 'N'. He must solve the questions in a specific order: solve one question, skip the next, and continue this pattern (wrapping around to the first question after the 'N'th) until all questions are solved. Given the number of questions 'N', determine the order in which Ninja should solve them.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= N <= 3000",
                    "Time limit: 1 second."
                ],
                "testcases": [
                    {
                        "input": "n = 6",
                        "output": "2 4 6 3 1 5",
                        "explanation": "There are 6 questions and the order is [2, 4, 6, 3, 1, 5]. Ninja will start solving the questions in this order, skipping one question after each solved question, wrapping around when needed."
                    },
                    {
                        "input": "n = 4",
                        "output": "2 4 3 1",
                        "explanation": "There are 4 questions and the order is [2, 4, 3, 1]. Ninja will start solving the questions in this order, skipping one question after each solved question, wrapping around when needed."
                    },
                    {
                        "input": "n = 10",
                        "output": "2 4 6 8 10 3 7 1 9 5",
                        "explanation": "There are 10 questions and the order is [2, 4, 6, 8, 10, 3, 7, 1, 9, 5]. Ninja will start solving the questions in this order, skipping one question after each solved question, wrapping around when needed."
                    },
                    {
                        "input": "n = 7",
                        "output": "2 4 6 1 5 3 7",
                        "explanation": "There are 7 questions and the order is [2, 4, 6, 1, 5, 3, 7]. Ninja will start solving the questions in this order, skipping one question after each solved question, wrapping around when needed."
                    },
                    {
                        "input": "n = 5",
                        "output": "2 4 1 5 3",
                        "explanation": "There are 5 questions and the order is [2, 4, 1, 5, 3]. Ninja will start solving the questions in this order, skipping one question after each solved question, wrapping around when needed."
                    },
                    {
                        "input": "n = 1",
                        "output": "1",
                        "explanation": "There is only one question, so Ninja solves it first."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to maintain an array which tells about already solved questions.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}