{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 7231,
            "title": "Tiling Problem",
            "titleSlug": "tiling-problem_630464",
            "content": "<h4 id=\"you-have-been-given-a-board-where-there-are-2-rows-and-n-columns-you-have-an-infinite-supply-of-2x1-tiles-and-you-can-place-a-tile-in-the-following-ways\">You have been given a board where there are &#39;2&#39; rows and &#39;N&#39; columns. You have an infinite supply of 2x1 tiles, and you can place a tile in the following ways:</h4>\n\n<pre><code>1. Horizontally as 1x2 tile\n2. Vertically as 2x1 tile\n</code></pre>\n\n<h4 id=\"count-the-number-of-ways-to-tile-the-given-board-using-the-available-tiles\">Count the number of ways to tile the given board using the available tiles.</h4>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>The number of ways might be large so output your answer modulo 10^9 + 7.\n</code></pre>\n\n<h4 id=\"here-an-example-of-tile-and-board-for-n-4\">Here an example of tile and board for &#39;N&#39; = 4 :</h4>\n\n<p><img src=\"https://files.codingninjas.in/0000000000004263.png\" alt=\"Tiling Example\"></p>\n\n<h5 id=\"input-format\">Input format :</h5>\n\n<pre><code>The first and only line of each test case contains an Integer &#39;N&#39; which denotes the size of the board, i.e. &#39;2&#39; rows and &#39;N&#39; columns.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case, print the number of ways to tile the board modulo 10^9 + 7.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You are not required to print the output explicitly, it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= N &lt;= 10^18\n\nWhere &#39;N&#39; is the number of columns in the board. \n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>3\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>3\n</code></pre>\n\n<h5 id=\"explanation-to-sample-input-1\">\u00a0Explanation to Sample Input 1 :</h5>\n\n<pre><code>For a 2*3 board, there are three ways:\n1. Place all 3 tiles vertically. \n2. Place first tile vertically and remaining 2 tiles horizontally.\n3. Place first 2 tiles horizontally and remaining tiles vertically.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>4\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>5\n</code></pre>\n\n<h5 id=\"explanation-to-sample-input-2\">\u00a0Explanation to Sample Input 2 :</h5>\n\n<pre><code>For a 2*4 board, there are five ways:\n1. All 4 vertical\n2. All 4 horizontal\n3. First 2 vertical, remaining 2 horizontal\n4. First 2 horizontal, remaining 2 vertical\n5. Corner 2 vertical, middle 2 horizontal\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 55,
            "dislikes": "NA",
            "rephrased": {
                "body": "You are given a board with 2 rows and N columns. You have an infinite supply of 2x1 tiles which can be placed horizontally (1x2) or vertically (2x1). Count the number of ways to completely tile the board using these tiles. The number of ways might be large, so return the answer modulo 10^9 + 7.",
                "constraints": [
                    "1 <= N <= 10^18",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "3",
                        "output": "3",
                        "explanation": "For a 2x3 board, the possible tilings are:\n1. Three vertical tiles.\n2. One vertical tile followed by two horizontal tiles.\n3. Two horizontal tiles followed by one vertical tile."
                    },
                    {
                        "input": "4",
                        "output": "5",
                        "explanation": "For a 2x4 board, the possible tilings are:\n1. Four vertical tiles.\n2. Two horizontal tiles followed by two horizontal tiles (all horizontal).\n3. Two vertical tiles followed by two horizontal tiles.\n4. Two horizontal tiles followed by two vertical tiles.\n5. One vertical tile, two horizontal tiles, then one vertical tile."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to explore the possibilities of placing tiles to get the number of ways from smaller sub-problems.</p>",
            "<p>Can you save some space using iterative Dynamic Programming Approach?</p>",
            "<p>Can you relate the recurrence relation of this problem to Fibonacci Numbers? Can you find the best complexity for finding \u2018N\u2019th Fibonacci Number?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}