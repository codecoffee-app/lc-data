{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 16465,
            "title": "Timing Sum",
            "titleSlug": "timing-sum_3161881",
            "content": "<h4 id=\"n-players-are-playing-an-online-game-and-you-are-given-the-time-in-seconds-each-one-requires-to-finish-the-game-in-the-form-of-an-array-a-now-the-game-requires-to-form-pairs-of-players-such-that-the-total-time-taken-is-divisible-by-60-seconds-more-formally-you-need-to-find-pairs-with-indices-i-j-such-that-i-j-and-a-i-a-j-is-divisible-by-60\">\u2018N\u2019 players are playing an online game and you are given the time in seconds each one requires to finish the game in the form of an array \u2018A\u2019. Now, the game requires to form pairs  of players such that the total time taken is divisible by 60 seconds.  More formally you need to find pairs with indices ( \u2018i\u2019 , \u2018j\u2019 ) such that \u2018i\u2019 &lt; \u2018j\u2019 and ( A[i] + A[j] ) is divisible by 60.</h4>\n\n<h4 id=\"output-the-total-number-of-valid-pairs\">Output the total number of valid pairs.</h4>\n\n<h4 id=\"note-that-a-single-player-can-be-a-part-of-multiple-pairs\">Note that a single player can be a part of multiple pairs.</h4>\n\n<h5 id=\"example\">Example :</h5>\n\n<pre><code>N = 5\nA = [ 30, 20, 30,40, 100 ]\n\nExplanation : \n\nThe valid pairs are : \n\n( 30, 30 ) as the sum is 60.\n( 20, 40 ) as the sum is 60.\n( 20, 100 ) as the sum is 120 which is divisible by 60.\n\nThus we output 3.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains an integer &#39;T&#39; which denotes the number of test cases to be run. Then the test cases follow.\n\nThe first line of each test case contains an integer \u2018N\u2019 denoting the number of piles of stones.\n\nThe next line contains \u2018N\u2019 integers representing the elements of array \u2018A\u2019. \u2018A[i]\u2019 denotes the time in seconds required by the \u2018ith\u2019 player to finish the game.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case, output an integer representing the total valid pairs.\n\nPrint the output of each test case in a new line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don\u2019t need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 10^5\n1 &lt;= A[i] &lt;= 10^9\n\nTime Limit : 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n3\n60 60 60\n4\n150 20 30 100 \n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>3\n2\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1 :</h5>\n\n<pre><code>For test case 1 we have,    \n\nThere are three pairs with indices ( 1, 2) , ( 1, 3) and ( 2, 3).\n\nSo, we output 3.\n\nFor test case 2 we have,    \n\nThe valid pairs are : \n\n( 150, 30 ) with sum 180 divisible by 60.\n( 20, 100 ) with sum 120 divisible by 60.\n\nSo, we output 2.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n2 \n40 20 \n5\n30 20 90 40 60 \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>1\n2\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 8,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of integers representing the time (in seconds) each player takes to finish an online game, determine the number of pairs of players such that the sum of their completion times is divisible by 60.  A player can be part of multiple pairs.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10^5",
                    "1 <= A[i] <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "n = 5, nums = [30, 20, 30, 40, 100]",
                        "output": "3",
                        "explanation": "The valid pairs are (30, 30), (20, 40), and (20, 100), with sums 60, 60, and 120 respectively."
                    },
                    {
                        "input": "n = 3, nums = [60, 60, 60]",
                        "output": "3",
                        "explanation": "There are three pairs: (60, 60), (60, 60), and (60, 60)."
                    },
                    {
                        "input": "n = 4, nums = [150, 20, 30, 100]",
                        "output": "2",
                        "explanation": "The valid pairs are (150, 30) and (20, 100), with sums 180 and 120 respectively."
                    },
                    {
                        "input": "n = 2, nums = [40, 20]",
                        "output": "1",
                        "explanation": "The valid pair is (40, 20), with a sum of 60."
                    },
                    {
                        "input": "n = 5, nums = [30, 20, 90, 40, 60]",
                        "output": "2",
                        "explanation": "The valid pairs are (30, 90) and (20, 40), with sums 120 and 60 respectively."
                    },
                    {
                        "input": "n = 1, nums = [60]",
                        "output": "0",
                        "explanation": "There are no pairs to form."
                    },
                    {
                        "input": "n=6, nums = [10, 50, 60, 120, 180, 300]",
                        "output": "15",
                        "explanation": "All possible pairs sum up to a multiple of 60."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Stimulate the problem statement.</p><p>&nbsp;</p>",
            "<p>Store each number as modulo with 60.</p><p>&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}