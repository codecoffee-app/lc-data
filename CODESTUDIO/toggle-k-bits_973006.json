{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8990,
            "title": "Toggle K bits",
            "titleSlug": "toggle-k-bits_973006",
            "content": "<h4 id=\"you-are-given-a-32-bit-integer-n-your-task-is-to-toggle-the-rightmost-k-bits-in-the-given-integer-and-return-the-new-integer\">You are given a 32-bit integer \u2018N\u2019. Your task is to toggle the rightmost \u2018K\u2019 bits in the given integer and return the new integer.</h4>\n\n<h5 id=\"for-example\">For Example :</h5>\n\n<pre><code>If \u2018N\u2019 = 12 and \u2018K\u2019 = 2:\nThe binary representation of 12 is \u20181100\u2019, after toggling rightmost 2 bits, it becomes \u20181111\u2019 i.e. 15. Hence, the answer is 15. \n</code></pre>\n\n<h5 id=\"input-format\">Input format :</h5>\n\n<pre><code>The first line contains a single integer T representing the number of test cases.\n\nThe first and only line of each test case contains two space-separated integers \u2018N\u2019 and \u2018K\u2019 that represent the given 32-bit integer and number of rightmost bits to toggle respectively.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each test case, return the new Integer after toggling the rightmost \u2018K\u2019 bits.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You don\u2019t need to print anything, it has already been taken care of. Just implement the given function\n</code></pre>\n\n<h5 id=\"follow-up\">Follow Up:</h5>\n\n<pre><code> Can you solve this using O(1) time complexity?  \n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 10^9\n1 &lt;= K &lt;= 31\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n21 3\n40 4\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>18\n39\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1:</h5>\n\n<pre><code>In example 1, the binary representation of 21 is &#39;10101&#39;. After toggling rightmost 3 bits, it becomes \u201810010\u2019 which is equal to 18.\nIn example 2, the binary representation of 40 is \u2018101000\u2019. After toggling rightmost 4 bits, it becomes \u2018100111\u2019 which is equal to 39.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2 \n20 2\n85 5\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>23\n74\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation For Sample Input 2:</h5>\n\n<pre><code>In example 1, the binary representation of 20 is &#39;10100&#39;. After toggling rightmost 2 bits, it becomes \u201810111\u2019 which is equal to 23.\nIn example 2, the binary representation of 85 is \u20181010101\u2019. After toggling rightmost 5 bits, it becomes \u20181001010\u2019 which is equal to 74.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 30,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a 32-bit integer 'N' and an integer 'K', toggle the rightmost 'K' bits of 'N'.  Return the resulting integer.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10^9",
                    "1 <= K <= 31"
                ],
                "testcases": [
                    {
                        "input": "n = 21, k = 3",
                        "output": "18",
                        "explanation": "The binary representation of 21 is '10101'. After toggling the rightmost 3 bits, it becomes '10010', which is equal to 18."
                    },
                    {
                        "input": "n = 40, k = 4",
                        "output": "39",
                        "explanation": "The binary representation of 40 is '101000'. After toggling the rightmost 4 bits, it becomes '100111', which is equal to 39."
                    },
                    {
                        "input": "n = 20, k = 2",
                        "output": "23",
                        "explanation": "The binary representation of 20 is '10100'. After toggling the rightmost 2 bits, it becomes '10111', which is equal to 23."
                    },
                    {
                        "input": "n = 85, k = 5",
                        "output": "74",
                        "explanation": "The binary representation of 85 is '1010101'. After toggling the rightmost 5 bits, it becomes '1001010', which is equal to 74."
                    },
                    {
                        "input": "n = 12, k = 2",
                        "output": "15",
                        "explanation": "The binary representation of 12 is '1100'.  Toggling the rightmost 2 bits gives '1111', which is 15."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you toggle all the rightmost \u2018K\u2019 bits one by one?</p>",
            "<p>Can you toggle all the rightmost \u2018K\u2019 bits all at once?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}