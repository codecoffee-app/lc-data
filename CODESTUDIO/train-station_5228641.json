{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 21539,
            "title": "Train Station",
            "titleSlug": "train-station_5228641",
            "content": "<h4 id=\"a-train-follows-a-route-in-which-it-visits-n-stations-and-the-train-keeps-moving-back-and-forth-on-the-track-the-train-moves-from-station-1-to-station-n-from-n-to-1-and-again-from-1-to-n-it-moves-on-forever-like-this\">A train follows a route in which it visits \u2018N\u2019 stations, and the train keeps moving back and forth on the track. The train moves from station 1 to station \u2018N\u2019, from \u2018N\u2019 to 1, and again from 1 to \u2018N\u2019. It moves on forever like this.</h4>\n\n<h4 id=\"train-stops-exactly-v-i-minutes-on-the-ith-platform-v-is-an-array-of-n-length-the-train-moves-very-fast-so-it-takes-no-time-to-travel-from-one-station-to-another\">Train stops exactly \u2018V[i]\u2019 minutes on the \u2018ith\u2019 platform. \u2018V\u2019 is an array of \u2018N\u2019 length. The train moves very fast, so it takes no time to travel from one station to another.</h4>\n\n<h4 id=\"you-are-given-q-queries-in-the-array-query-for-the-ith-query-you-need-to-find-the-station-on-which-the-train-is-standing-on-query-i-ith-minute-the-train-starts-its-journey-in-the-0th-minute\">You are given \u2018Q\u2019 queries in the array \u2018query\u2019. For the \u2018ith\u2019 query, you need to find the station on which the train is standing on \u2018query[i]ith\u2019 minute. The train starts its journey in the 0th minute.</h4>\n\n<h4 id=\"your-task-is-to-find-the-station-where-the-train-is-present-after-each-query\">Your task is to find the station where the train is present after each query.</h4>\n\n<h5 id=\"example\">Example :</h5>\n\n<pre><code>\u2018N\u2019 = 4, \u2018V\u2019 = [4,3,1,2], \u2018Q\u2019 = 3, \u2018query\u2019 = [5, 12, 3].\nTrain visits the station in the following manner:\nFor the period [0, 3], the train will be at station 1. (0th, 1st, 2nd, and 3rd) for 4 minutes on station 1.\nFor the period [4, 6], the train will be at station 2. \nFor the period [7, 7], the train will be at station 3.\nFor the period [8, 9], the train will be at station 4. \nFor the period [10, 11], the train will be at station 4.\nFor the period [12, 12], the train will be at station 3.\n\nFirst Query: In the 5th minute, the train will be at station number 2. Hence, 2 will be the answer.\nSecond query: In the 12th minute, the train will be at station number 3. Hence, 3 will be the answer.\nThird Query: In the 3rd minute, the train will be at station number 1. Hence, 1 will be the answer.\nThe final output will be: [2, 3, 1]\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 denoting the number of test cases, then the test case follows.\n\nThe first line of each test case contains an integer, denoting \u2018N&#39;, length of \u2018V\u2019.\nThe second line contains \u2018N\u2019 single space-separated integers denoting \u2018V\u2019.\nThe third line contains an integer, denoting \u2018Q\u2019.\nThe fourth line contains \u2018Q\u2019 single space-separated integers denoting \u2018query\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, return an array that contains answers to all queries.\n\nOutput for each test case will be printed on a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You are not required to print anything; it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 \u2264 T \u2264 10\n2 \u2264 N \u2264 10^5    \n1 \u2264 V[i] \u2264 10^3\n1 \u2264 Q \u2264 10^5\n0 \u2264 query[i] \u2264 10^9\nIt\u2019s guaranteed that sum of N and Q over all test cases does not exceed 10^5.\n\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n3\n1 2 3\n3\n5 2 11\n2\n1 7\n3\n1 0 10\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>3 2 1\n2 1 2\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1 :</h5>\n\n<pre><code>For test case 1: \nTrain will visit the stations in following order:\nStation 1:- [0,0].\nStation 2:- [1,2].\nStation 3:- [3,5].\nStation 3:- [6,8].\nStation 2:- [9,10].\nStation 1:- [11,11].\nSo, the 5th minute train will be at station 3.\nOn 2rd minute the train will be at station 2.\nIn the 11th minute the train will be at station 1.\nHence, the output will be [3, 2, 1].\n\n\nFor test case 2:\nThe train will visit the stations in the following order:\nStation 1:- [0,0].\nStation 2:- [1,7].\nStation 2:- [8,14].\nStation 1:- [15,15].\nOn, 1st-minute train will be on station 2.\nOn, the 0th-minute train will be on station 1.\nIn the 10th minute, the train will be at station 2.\nHence, the answer is [2, 1, 2].\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n5\n1 2 3 4 5\n1\n20\n2\n5 6\n2\n3 6\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>4\n1 2\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -10,
            "dislikes": "NA",
            "rephrased": {
                "body": "A train travels back and forth between N stations. It starts at station 1, goes to station N, then returns to station 1, and repeats this pattern indefinitely. The train spends V[i] minutes at the ith station. Given an array 'query' of Q minutes, determine the station the train is at for each query.",
                "constraints": [
                    "1 \u2264 T \u2264 10",
                    "2 \u2264 N \u2264 10^5",
                    "1 \u2264 V[i] \u2264 10^3",
                    "1 \u2264 Q \u2264 10^5",
                    "0 \u2264 query[i] \u2264 10^9",
                    "Sum of N and Q over all test cases does not exceed 10^5.",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "3\n4\n4 3 1 2\n3\n5 12 3\n2\n1 7\n3\n1 0 10",
                        "output": "2 3 1\n2 1 2",
                        "explanation": "Test Case 1:\nN = 4, V = [4, 3, 1, 2], Q = 3, query = [5, 12, 3].\n- At minute 5, the train is at station 2.\n- At minute 12, the train is at station 3.\n- At minute 3, the train is at station 1.\nOutput: [2, 3, 1]\n\nN = 2, V = [1, 7], Q = 3, query = [1, 0, 10]\n- At minute 1, the train is at station 2.\n- At minute 0, the train is at station 1.\n- At minute 10, the train is at station 2.\nOutput: [2, 1, 2]"
                    },
                    {
                        "input": "2\n5\n1 2 3 4 5\n1\n20\n2\n5 6\n2\n3 6",
                        "output": "4\n1 2",
                        "explanation": "Test Case 1:\nN = 5, V = [1, 2, 3, 4, 5], Q = 1, query = [20].\n- At minute 20, the train is at station 4.\nOutput: [4]\n\nTest Case 2:\nN = 2, V = [5, 6], Q = 2, query = [3, 6].\n- At minute 3, the train is at station 1.\n- At minute 6, the train is at station 2.\nOutput: [1, 2]"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>How can you calculate the number of times the train performs a complete journey (visit every station)?</p>",
            "<p>One complete journey is going from 1 to \u2018N\u2019 or from \u2018N\u2019 to 1. Can you use this information to solve the problem?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}