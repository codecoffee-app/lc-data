{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 14417,
            "title": "Transactions",
            "titleSlug": "transactions_2179113",
            "content": "<h4 id=\"alex-is-going-to-some-stores-where-he-will-carry-out-some-transactions-in-each-store-he-will-either-pay-some-money-or-he-will-receive-some-money-initially-alex-has-0-amount-with-him-so-he-currently-has-an-array-money-containing-the-transaction-amounts-both-positive-and-negative-in-the-same-order-he-did-at-stores-can-you-find-out-the-maximum-amount-that-he-will-have-with-him-after-any-possibly-0-number-of-transactions\">Alex is going to some stores where he will carry out some transactions. In each store, he will either pay some money, or he will receive some money. Initially, Alex has 0 amount with him. So he currently has an array &#39;money&#39; containing the transaction amounts (both positive and negative) in the same order he did at stores. Can you find out the maximum amount that he will have with him after any(possibly 0) number of transactions?</h4>\n\n<h4 id=\"note-that-at-some-point-the-amount-left-with-alex-can-become-negative-for-example-in-the-transactions-1-3-after-the-second-transaction-the-money-left-with-alex-is-2\">Note: that at some point, the amount left with Alex can become negative. For example, in the transactions [1, -3], after the second transaction, the money left with Alex is -2.</h4>\n\n<h4 id=\"example-let-the-transaction-amounts-be-1-2-5-here-we-can-see-that-the-amount-left-after-the-first-transaction-is-1-after-the-second-is-1-and-after-the-third-is-4-so-the-maximum-value-is-4\">Example: Let the transaction amounts be [1, -2, 5]. Here we can see that the amount left after the first transaction is 1 after the second is -1 and after the third is 4. So the maximum value is 4.</h4>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains \u2018T\u2019, denoting the number of test cases.\n\nThe first line of each test case contains one integer, \u2018N\u2019, denoting the number of stores.\n\nThe second line of each test case contains an array \u2018money\u2019 of \u2018N\u2019 space-separated integers, denoting the transaction amount carried out. If money[i] &lt; 0, it means that Alex will pay |money[i]|, and if money[i] &gt; 0, it means Alex will receive money[i] amount.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print an integer denoting the maximum amount that Alex can have at any point.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You are not required to print the expected output. It has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 10^4\n-10^5 &lt;= money[i] &lt;= 10^5\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n6\n1 -3 5 -6 4 -3\n1\n11\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>3\n11\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1:</h5>\n\n<pre><code>In the first test case, the transaction values are [1, -3, 5, -6, 4, -3]. We can see that after the first transaction, the money left with Alex is 1. After the second, it is -2, then 3, then -3, then 1, and finally -2. We can see that after the third transaction, the money left with Alex is 3, which is the maximum money that he can have.\nIn the second test case, there is only one transaction. He receives 11 in the first transaction, which is also the highest that he can have.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n5\n5 7 11 3 5\n3\n-20 -19 -21\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>31\n0\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": -4,
            "dislikes": "NA",
            "rephrased": {
                "body": "Alex is visiting several stores and making transactions. He starts with 0 money. He has a list of transaction amounts (positive for received, negative for paid) in the order he visited the stores.  Find the maximum amount of money Alex has at any point during these transactions, even if his balance temporarily becomes negative.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10^4",
                    "-10^5 <= money[i] <= 10^5",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "6\n1 -3 5 -6 4 -3\n1\n11",
                        "output": "3\n11",
                        "explanation": "In the first test case, the transactions are [1, -3, 5, -6, 4, -3]. The running totals are 1, -2, 3, -3, 1, -2. The maximum value is 3.\nIn the second test case, there's only one transaction. Alex receives 11, so the maximum he has is 11."
                    },
                    {
                        "input": "5\n5 7 11 3 5\n3\n-20 -19 -21",
                        "output": "31\n0",
                        "explanation": "In the first test case, the transactions are [5, 7, 11, 3, 5]. The running totals are 5, 12, 23, 26, 31. The maximum is 31.\nIn the second test case, the transactions are [-20, -19, -21]. The running totals are -20, -39, -60. Since Alex starts with 0, the maximum amount he has at any point is 0."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>After each transaction, can you find the money left?</p><p><br>&nbsp;</p>",
            "<p>Can we optimize the above approach with the observation that the sum is calculated many times?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}