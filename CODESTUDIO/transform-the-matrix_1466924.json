{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12554,
            "title": "Transform The Matrix",
            "titleSlug": "transform-the-matrix_1466924",
            "content": "<h4 id=\"you-are-given-an-n-n-binary-matrix-mat-you-can-do-two-operations-in-the-matrix\">You are given an N * N binary matrix &#39;MAT&#39;. You can do two operations in the matrix:</h4>\n\n<pre><code>i) Swap any two rows.\nii) Swap any two columns. \n</code></pre>\n\n<h4 id=\"your-task-is-to-find-the-minimum-number-of-operations-needed-to-convert-this-matrix-into-a-chessboard-matrix\">Your task is to find the minimum number of operations needed to convert this matrix into a chessboard matrix.</h4>\n\n<h4 id=\"if-the-task-is-impossible-print-1\">If the task is impossible print -1.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>A chessboard matrix is a binary matrix where there are no two 0\u2019s and no two 1\u2019s who are adjacent to each other.\n</code></pre>\n\n<h4 id=\"for-example\">For example:</h4>\n\n<pre><code>[ [1, 0], [0, 1] ] and [ [0, 1], [1, 0] ]  are chessboard matrix whereas [ [1,0], [1, 1] ] isn\u2019t.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of the input contains \u2018T\u2019, denoting the number of test cases.\n\nThe first line of each test case contains an integer, \u2018N\u2019 denoting dimensions of the matrix.\n\nNext \u2018N\u2019 lines contains, N space-separated integers MAT[i][j].\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print the minimum number of operations to convert the given matrix into a chessboard matrix.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>Don&#39;t print anything it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 3\n1 &lt;= N &lt;= 3000\n0 &lt;= MAT[i][j] &lt;= 1\n\nTime Limit: 1sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n4\n0 1 1 0\n0 1 1 0\n1 0 0 1\n1 0 0 1\n2\n1 0\n1 0\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>2\n-1\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1:</h5>\n\n<pre><code>In test case 1:\n\nSwap column 1 and column 2.\n\n| 0 1 1 0 |      | 1 0 1 0 |\n| 0 1 1 0 |  =   | 1 0 1 0 |\n| 1 0 0 1 |      | 0 1 0 1 |\n| 1 0 1 1 |      | 0 1 0 1 |\n\nSwap row 2 and row 3.\n\n| 1 0 1 0 |      | 1 0 1 0 |\n| 1 0 1 0 |  =   | 0 1 0 1 |\n| 0 1 0 1 |      | 1 0 1 0 |\n| 0 1 1 1 |      | 0 1 0 1 |\n\nMinimum 2 operations are required for the transformation.\n\nIn test case 2, It is impossible to convert the matrix into a chessboard matrix.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n6\n0 0 1 1 0 1 \n1 1 0 0 1 0 \n1 1 0 0 1 0 \n0 0 1 1 0 1 \n0 0 1 1 0 1 \n1 1 0 0 1 0 \n4\n1 0 1 0 \n0 1 0 1 \n1 0 1 0 \n0 1 0 1 \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>2\n0\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation for Sample Input 2:</h5>\n\n<pre><code>In the first test case, we need two operations to convert it into required chessboard matrix.\n\nIn the second test case, the given matrix is required matrix only.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 8,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an N * N binary matrix 'mat', determine the minimum number of swap operations (either rows or columns) required to transform it into a chessboard matrix. A chessboard matrix has alternating 0s and 1s, with no two adjacent cells having the same value. If the transformation is impossible, return -1.",
                "constraints": [
                    "1 <= N <= 3000",
                    "0 <= MAT[i][j] <= 1",
                    "1 <= T <= 3"
                ],
                "testcases": [
                    {
                        "input": "n = 4, mat = [[0, 1, 1, 0], [0, 1, 1, 0], [1, 0, 0, 1], [1, 0, 0, 1]]",
                        "output": "2",
                        "explanation": "Swap column 1 and column 2, then swap row 2 and row 3 to obtain a chessboard matrix."
                    },
                    {
                        "input": "n = 2, mat = [[1, 0], [1, 0]]",
                        "output": "-1",
                        "explanation": "It is impossible to convert the matrix into a chessboard matrix using row and column swaps."
                    },
                    {
                        "input": "n = 6, mat = [[0, 0, 1, 1, 0, 1], [1, 1, 0, 0, 1, 0], [1, 1, 0, 0, 1, 0], [0, 0, 1, 1, 0, 1], [0, 0, 1, 1, 0, 1], [1, 1, 0, 0, 1, 0]]",
                        "output": "2",
                        "explanation": "Two operations are needed to convert the matrix into a chessboard matrix."
                    },
                    {
                        "input": "n = 4, mat = [[1, 0, 1, 0], [0, 1, 0, 1], [1, 0, 1, 0], [0, 1, 0, 1]]",
                        "output": "0",
                        "explanation": "The given matrix is already a chessboard matrix."
                    },
                    {
                        "input": "n = 1, mat = [[1]]",
                        "output": "0",
                        "explanation": "A 1x1 matrix with a single element is considered a chessboard matrix."
                    },
                    {
                        "input": "n = 3, mat = [[0,1,0],[1,0,1],[0,1,0]]",
                        "output": "0",
                        "explanation": "Given matrix is already a chessboard matrix"
                    },
                    {
                        "input": "n = 3, mat = [[0, 0, 0],[0, 0, 0],[0, 0, 0]]",
                        "output": "-1",
                        "explanation": "It is impossible to make the matrix a chessboard."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>There are only two possible unique rows and columns, where one is an inversion of the other.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}