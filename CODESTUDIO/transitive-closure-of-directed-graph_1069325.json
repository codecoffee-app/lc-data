{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9613,
            "title": "Transitive Closure of Directed Graph",
            "titleSlug": "transitive-closure-of-directed-graph_1069325",
            "content": "<h4 id=\"you-are-given-a-directed-graph-consisting-of-v-vertices-and-e-edges-you-need-to-find-whether-a-vertex-i-is-reachable-from-all-other-vertices-j-for-all-pairs-of-vertices-i-j-a-vertex-j-is-said-to-be-reachable-from-vertex-i-if-and-only-if-there-exists-a-path-that-originates-from-vertex-i-and-terminates-at-the-vertex-j\">You are given a directed graph consisting of &#39;V&#39; vertices and &#39;E&#39; edges. You need to find whether a vertex i is reachable from all other vertices j for all pairs of vertices (i, j). A vertex &#39;j&#39; is said to be reachable from vertex &#39;i&#39; if and only if there exists a path that originates from vertex &#39;i&#39; and terminates at the vertex &#39;j&#39;.</h4>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>1. Since it is a directed graph, all the edges are one way.\n2. Every vertex is reachable to itself.\n3. There are no self-loops or multiple edges between the same pair of nodes.\n4. The graph may not be fully connected, there might be different disconnected components of the graph.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains an integer &#39;T&#39; which denotes the number of test cases.\nThe first line of each test case contains two space-separated integers &#39;V&#39;, &#39;E&#39; denoting the number of vertices and the number of edges respectively.\n\nFrom the second line onwards, the next &#39;E&#39; lines will denote the directed edge of the graphs.\n\nEvery edge is defined by two single space-separated integers &#39;a&#39; and &#39;b&#39;, which signifies a directed edge from vertex &#39;a&#39; to vertex &#39;b&#39;.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>The output will contain a V x V matrix, where each cell of the matrix will denote the reachability for the given pair of vertices. Refer sample input for further clarification.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function. Also in the function, the vertices are numbered from 0 to v - 1, where &#39;v&#39; is the total number of vertices.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 50\n1 &lt;= V &lt;= 1000\n0 &lt;= E &lt;= 1000\nTime Limit: 1sec\n\nwhere &#39;T&#39; is the number of test cases, &#39;V&#39; and &#39;E&#39; are the number of vertices and edges respectively.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>1\n4 3\n1 2\n2 3\n3 4\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>1 1 1 1\n0 1 1 1\n0 0 1 1\n0 0 0 1\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1 :</h5>\n\n<pre><code>From node 1 we can reach node 2, from node 2 we can reach node 3, and from node 3 we can reach node 4. So for each of the corresponding cells in the closure matrix, we put 1 and for all other nodes, we put 0.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -8,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a directed graph with 'V' vertices and 'E' edges, determine the reachability between all pairs of vertices. A vertex 'j' is reachable from vertex 'i' if there exists a directed path from 'i' to 'j'. Construct a V x V matrix representing the reachability, where matrix[i][j] = 1 if vertex 'j' is reachable from vertex 'i', and 0 otherwise. Note that every vertex is reachable from itself.",
                "constraints": [
                    "1 <= T <= 50 (Number of test cases)",
                    "1 <= V <= 1000 (Number of vertices)",
                    "0 <= E <= 1000 (Number of edges)",
                    "Time Limit: 1 second",
                    "The graph is directed.",
                    "Vertices are numbered from 0 to V-1.",
                    "There are no self-loops or multiple edges between the same pair of nodes.",
                    "The graph may not be fully connected."
                ],
                "testcases": [
                    {
                        "input": "4 3\n1 2\n2 3\n3 4",
                        "output": "1 1 1 1\n0 1 1 1\n0 0 1 1\n0 0 0 1",
                        "explanation": "From node 1, we can reach nodes 1, 2, 3, and 4. From node 2, we can reach nodes 2, 3, and 4. From node 3, we can reach nodes 3 and 4. From node 4, we can only reach node 4. The matrix represents these reachabilities."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to use the simplest possible approach.</p>",
            "<p>Try to optimise on time.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Depth-first Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}