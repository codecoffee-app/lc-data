{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 11850,
            "title": "Trapping Rain Water",
            "titleSlug": "trapping-rain-water_1387122",
            "content": "<h4 id=\"given-an-m-n-matrix-where-the-value-at-any-cell-denotes-the-height-of-that-cell-in-a-2-d-elevation-map-you-need-to-find-the-volume-of-water-that-can-be-trapped-within-it\">Given an M * N matrix, where the value at any cell denotes the height of that cell in a 2-D elevation map. You need to find the volume of water that can be trapped within it.</h4>\n\n<pre><code>For a matrix = \n[ 5, 5, 5 ]\n[ 5, 2, 3 ]\n[ 6, 9, 8 ]  \n\n2-D elevation map will look like this\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/whatsapp-image-2021-04-07-at-02-44-00-2-8881.jpeg\" alt=\"2-D map\"></p>\n\n<pre><code>After the rain, a total of 1 unit volume of water gets trapped, and this 2-D elevation map will look like this\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/whatsapp-image-2021-04-07-at-02-53-15-8880.jpeg\" alt=\"After rain\"></p>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 denoting the number of test cases.\n\nThe first line of each test case contains two space-separated integers \u2018M\u2019 and \u2018N\u2019 denoting the number of rows and columns in the matrix.\n\nThe next \u2018M\u2019 lines contain \u2018N\u2019 space-separated integers denoting the height of each cell.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print a single integer denoting the volume of water that can be trapped.\n\nPrint the output of each test case in a separated line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You don&#39;t need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= M,N &lt;= 100\n1 &lt;= matrix[i][j] &lt;= 10^3\n\nWhere \u2018T\u2019 is the number of test cases, \u2018M\u2019 and \u2018N\u2019 are the dimensions of the given matrix.\nMatrix[i][j] is the height of the cell at the \u2018i-th\u2019 row and \u2018j-th\u2019 column.\n\nTime Limit: 1 sec.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n3 3\n5 5 5\n5 2 3\n6 9 8\n5 4\n10 11 1 10\n11 2 11 10\n11 6 8 10\n10 11 10 10\n11 11 11 11\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>1\n14\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1:</h5>\n\n<pre><code>Test Case 1: Only 1 unit volume of water can be trapped between cells with height \u20183\u2019 and \u20182\u2019. \n\nTest Case 2: \u20182\u2019 unit of volume will be stored between matrix [ 2 ][ 2 ] and matrix[ 2 ][ 3 ].\n\u20184\u2019 unit of volume will be stored between matrix [ 2 ][ 1 ] and matrix[ 2 ][ 3 ].\n\u20188\u2019 units of volume will be stored between matrix [ 1 ][ 1 ] and matrix[ 2 ][ 3 ].\nTherefore a total of \u201814\u2019 unit volume will be trapped.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n2 4\n3 8 9 2\n2 5 7 1\n4 4\n4 12 8 6\n2 1 5 13\n2 1 12 7\n2 2 10 5\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>0\n2\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation For Sample Input 2:</h5>\n\n<pre><code>Test Case 1: They only have two sides. Thus, to accommodate any water it needs 4 edges. So, no units of water can be trapped between sides.\n\nTest Case 2: \u20181\u2019 unit of volume will be stored between matrix [ 2 ][ 1 ] and matrix[ 2 ][ 2 ].\n\u20182\u2019 unit of volume will be stored between matrix [ 3 ][ 1 ] and matrix[ 3 ][ 3 ].\nTherefore a total of \u20182\u2019 unit volume will be trapped.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 1,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a 2D elevation map represented by an M x N matrix, where each cell's value indicates its height, determine the total volume of water that can be trapped within the map after rainfall. Water can only be trapped if it is surrounded by higher elevations.",
                "constraints": [
                    "1 <= T <= 10, where T is the number of test cases.",
                    "1 <= M, N <= 100, where M and N are the dimensions of the matrix.",
                    "1 <= matrix[i][j] <= 10^3, where matrix[i][j] is the height of the cell at the i-th row and j-th column."
                ],
                "testcases": [
                    {
                        "input": "matrix = [[5, 5, 5], [5, 2, 3], [6, 9, 8]]",
                        "output": "1",
                        "explanation": "Only 1 unit volume of water can be trapped between cells with height \u20183\u2019 and \u20182\u2019."
                    },
                    {
                        "input": "matrix = [[10, 11, 1, 10], [11, 2, 11, 10], [11, 6, 8, 10], [10, 11, 10, 10], [11, 11, 11, 11]]",
                        "output": "14",
                        "explanation": "\u20182\u2019 unit of volume will be stored between matrix [ 2 ][ 2 ] and matrix[ 2 ][ 3 ].\n\u20184\u2019 unit of volume will be stored between matrix [ 2 ][ 1 ] and matrix[ 2 ][ 3 ].\n\u20188\u2019 units of volume will be stored between matrix [ 1 ][ 1 ] and matrix[ 2 ][ 3 ].\nTherefore a total of \u201814\u2019 unit volume will be trapped."
                    },
                    {
                        "input": "matrix = [[3, 8, 9, 2], [2, 5, 7, 1]]",
                        "output": "0",
                        "explanation": "The matrix only has two sides. Thus, to accommodate any water it needs 4 edges. So, no units of water can be trapped between sides."
                    },
                    {
                        "input": "matrix = [[4, 12, 8, 6], [2, 1, 5, 13], [2, 1, 12, 7], [2, 2, 10, 5]]",
                        "output": "2",
                        "explanation": "\u20181\u2019 unit of volume will be stored between matrix [ 2 ][ 1 ] and matrix[ 2 ][ 2 ].\n\u20181\u2019 unit of volume will be stored between matrix [ 3 ][ 1 ] and matrix[ 3 ][ 2 ]. Therefore a total of 2 unit volume will be trapped."
                    },
                    {
                        "input": "matrix = [[1, 4, 3, 1, 3, 2], [3, 2, 1, 3, 2, 1], [2, 1, 5, 2, 4, 3], [3, 2, 1, 5, 3, 2], [2, 4, 1, 4, 3, 1]]",
                        "output": "3",
                        "explanation": "There are several locations where water can get trapped. The total sum of trapped water is 3."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you think of solving it with using breath first search like algorithm?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Heap",
                "slug": "heap"
            },
            {
                "name": "Breadth-first Search",
                "slug": "breadth-first-search"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}