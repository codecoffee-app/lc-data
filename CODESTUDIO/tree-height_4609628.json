{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 20234,
            "title": "Tree Height",
            "titleSlug": "tree-height_4609628",
            "content": "<h4 id=\"the-height-of-a-tree-is-equal-to-the-number-of-nodes-on-the-longest-path-from-the-root-to-a-leaf\">The height of a tree is equal to the number of nodes on the longest path from the root to a leaf.</h4>\n\n<p><br/></p>\n\n<h4 id=\"you-are-given-an-arbitrary-binary-tree-consisting-of-n-nodes-where-each-node-is-associated-with-a-certain-value\">You are given an arbitrary binary tree consisting of <em><strong>&#39;n&#39;</strong></em> nodes where each node is associated with a certain value.</h4>\n\n<p><br/></p>\n\n<h4 id=\"find-out-the-height-of-the-tree\">Find out the height of the tree.</h4>\n\n<p><br/></p>\n\n<h5 id=\"example\">Example :</h5>\n\n<pre><code>Input: Let the binary tree be:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/screenshot-from-2021-02-06-12-22-51-7858.png\" alt=\"\"></p>\n\n<pre><code>Output: 2\n\nExplanation: The root node is 3, and the leaf nodes are 1 and 2.\n\nThere are two nodes visited when traversing from 3 to 1.\nThere are two nodes visited when traversing from 3 to 2.\n\nTherefore the height of the binary tree is 2.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first and only line contains the values of the tree\u2019s nodes in the level order form ( -1 for NULL node). Refer to the example for further clarification.\n\nConsider the binary tree:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/screenshot-from-2020-10-09-12-55-45-5134-17089-17095.png\" alt=\"altImage\"></p>\n\n<pre><code>The input of the tree depicted in the image above will be like: \n1\n2 3\n4 -1 5 6\n-1 7 -1 -1 -1 -1\n-1 -1\n\nExplanation :\nLevel 1 :\nThe root node of the tree is 1\n\nLevel 2 :\nLeft child of 1 = 2\nRight child of 1 = 3\n\nLevel 3 :\nLeft child of 2 = 4\nRight child of 2 = null (-1)\nLeft child of 3 = 5\nRight child of 3 = 6\n\nLevel 4 :\nLeft child of 4 = null (-1)\nRight child of 4 = 7\nLeft child of 5 = null (-1)\nRight child of 5 = null (-1)\nLeft child of 6 = null (-1)\nRight child of 6 = null (-1)\n\nLevel 5 :\nLeft child of 7 = null (-1)\nRight child of 7 = null (-1)\n\nThe first not-null node (of the previous level) is treated as the parent of the first two nodes of the current level, the second not-null node (of the previous level) is treated as the parent node for the next two nodes of the current level, and so on.\n\nThe input ends when all nodes at the last level are null (-1).\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>Print a single integer denoting the height of the given binary tree.\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the given function.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>3 1 2 -1 -1 -1 -1\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>2\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for sample input 1:</h5>\n\n<pre><code>The given tree is:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/screenshot-from-2021-02-06-12-22-51-7858.png\" alt=\"\"></p>\n\n<pre><code>The root node is 3, and the leaf nodes are 1 and 2.\n\nThere are two nodes visited when traversing from 3 to 1.\nThere are two nodes visited when traversing from 3 to 2.\n\nTherefore the height of the binary tree is 2.\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>3 -1 1 2 -1 -1 -1\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>3\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"explanation-of-sample-input-2\">Explanation of sample input 2 :</h5>\n\n<pre><code>The given tree is:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/screenshot-from-2021-02-06-12-24-30-7857.png\" alt=\"\"></p>\n\n<pre><code>The root node is 3, and there is only one leaf node, which is 2.\n\nAll three nodes are visited while traversing from 3 to 2.\n\nTherefore the height of the binary tree is 3.\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"sample-input-3\">Sample Input 3:</h5>\n\n<pre><code>2 -1 -1\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"sample-output-3\">Sample Output 3:</h5>\n\n<pre><code>1\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"expected-time-complexity\">Expected time complexity :</h5>\n\n<pre><code>The expected time complexity is O(n).\n</code></pre>\n\n<p><br/></p>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= &#39;n&#39; &lt;= 10000\n\nTime Limit: 1 second\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 40,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an arbitrary binary tree with 'n' nodes, where each node has a value, determine the height of the tree. The height of a tree is defined as the number of nodes on the longest path from the root to a leaf.",
                "constraints": [
                    "1 <= n <= 10000",
                    "Time Limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "3 1 2 -1 -1 -1 -1",
                        "output": "2",
                        "explanation": "The longest paths are 3 -> 1 and 3 -> 2, each containing two nodes. Therefore, the height is 2."
                    },
                    {
                        "input": "3 -1 1 2 -1 -1 -1",
                        "output": "3",
                        "explanation": "The longest path is 3 -> 1 -> 2, which contains three nodes. Thus, the height is 3."
                    },
                    {
                        "input": "2 -1 -1",
                        "output": "1",
                        "explanation": "The tree consists of only the root node 2. The path from the root to itself is considered to be the longest path with only one node. Therefore, the height is 1."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Tree/ Traversal Techniques( DFS )</p>",
            "<p>Tree/ Traversal Techniques ( BFS ).</p>"
        ],
        "relatedTopics": [
            {
                "name": "Depth-first Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Trees",
                "slug": "binary-trees"
            },
            {
                "name": "Trees",
                "slug": "trees"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}