{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10212,
            "title": "Tree Jumping",
            "titleSlug": "tree-jumping_1171186",
            "content": "<h4 id=\"there-is-a-tree-with-n-nodes-numbered-from-0-to-n-1-node-0-is-the-root-of-the-tree\">There is a tree with \u2018N\u2019 nodes, numbered from 0 to \u2018N-1\u2019.  Node 0 is the root of the tree.</h4>\n\n<h4 id=\"initially-you-are-at-the-root-node-and-start-jumping-on-the-tree-you-can-make-two-kinds-of-jumps-the-first-one-is-the-vertical-jump-and-the-second-one-is-the-horizontal-jump\">Initially, you are at the root node and start jumping on the tree. You can make two kinds of jumps. The first one is the Vertical jump and the second one is the Horizontal jump.</h4>\n\n<h4 id=\"in-vertical-jump-you-can-jump-from-a-node-to-any-of-its-child-nodes-i-e-the-node-that-is-directly-connected-to-the-current-node-by-an-edge-and-its-height-from-the-root-is-1-more-than-the-current-node\">In Vertical jump, you can jump from a node to any of its child nodes (i.e the node that is directly connected to the current node by an edge, and its height from the root is 1 more than the current node).</h4>\n\n<h4 id=\"in-horizontal-jump-you-can-jump-from-a-node-to-any-node-at-the-same-level-i-e-the-height-of-nodes-from-the-root-are-the-same-you-cannot-jump-from-node-to-itself\">In Horizontal jump, You can jump from a node to any node at the same level (i.e. the height of nodes from the root are the same). You cannot jump from node to itself.</h4>\n\n<h4 id=\"you-can-make-any-number-of-vertical-jumps-but-you-can-make-at-most-k-horizontal-jumps\">You can make any number of Vertical jumps, but you can make at most \u2018K\u2019 Horizontal jumps.</h4>\n\n<h4 id=\"some-nodes-in-this-tree-are-special-whenever-you-reach-a-special-node-your-score-increments-by-1-initial-your-score-is-0\">Some nodes in this tree are special, whenever you reach a special node your score increments by 1. Initial your score is 0.</h4>\n\n<h4 id=\"you-are-given-an-integer-array-special-of-size-n-where-special-i-is-1-if-the-ith-node-is-special-otherwise-special-i-is-0-you-are-also-given-an-array-edges-of-size-n-1-representing-edges-of-the-given-tree-find-out-the-maximum-score-you-can-achieve-if-you-start-from-the-root-and-can-make-at-most-k-horizontal-jumps-and-any-number-of-vertical-jumps-your-score-increments-by-1-as-soon-as-you-reach-the-special-node-your-journey-will-be-completed-when-you-can-t-make-any-further-jump-and-the-score-achieved-till-that-point-will-be-your-final-score\">You are given an integer array \u2018Special\u2019 of size \u2018N\u2019, where \u2018Special[i]\u2019 is 1 if the ith node is special, otherwise \u2018Special[i]\u2019 is 0. You are also given an array \u2018Edges\u2019 of size \u2018N-1\u2019 representing edges of the given tree. Find out the maximum score you can achieve if you start from the root and can make at most \u2018K\u2019 horizontal jumps and any number of vertical jumps. Your score increments by 1 as soon as you reach the special node. Your journey will be completed when you can\u2019t make any further jump and the score achieved till that point will be your final score.</h4>\n\n<h4 id=\"for-example-consider-the-following-tree-having-12-nodes-and-let-k-2-special-nodes-are-colored-red\">For example, consider the following tree having 12 nodes and let \u2018K\u2019 = 2.  Special nodes are colored red.</h4>\n\n<p><img src=\"https://files.codingninjas.in/treejump1-8038.png\" alt=\"alt text\"></p>\n\n<h4 id=\"the-maximum-number-of-fruits-you-can-collect-is-7-if-you-can-make-at-most-2-horizontal-jumps-one-such-way-of-climbing-this-tree-is-shown-in-the-figure-below-the-curved-line-denotes-jumps\">The maximum number of fruits you can collect is 7 if you can make at most 2 horizontal jumps. One such way of climbing this tree is shown in the figure below. The curved line denotes jumps.</h4>\n\n<p><img src=\"https://files.codingninjas.in/treejump2-8039.png\" alt=\"alt text\"></p>\n\n<h4 id=\"your-score-increases-by-1-when-you-reach-at-node-1-4-6-7-8-10-11-in-this-tree\">Your score increases by 1 when you reach at node 1, 4. 6, 7, 8, 10, 11  in this tree.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>1. You can visit the same node more than once and each time when you reach a special node your score will be increased by 1.\n2. You cannot make a jump from node to itself.\n</code></pre>\n\n<h4 id=\"input-format\">Input Format:</h4>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases. The description of \u2018T\u2019 test cases are as follows -: \n\nThe first line contains two space-separated integers \u2018N\u2019, \u2018K\u2019 representing the number of nodes and the maximum number of horizontal jumps respectively.\n\nThe second line contains \u2018N\u2019 space-separated integers 0 or 1, representing the elements of array \u2018special\u2019.\n\nEach of the next \u2018N\u2019-1 lines contains 2 space-separated integers \u2018U\u2019 and \u2018V\u2019, that represent there is an undirected edge between node \u2018U\u2019 and node \u2018V\u2019.\n</code></pre>\n\n<h4 id=\"output-format\">Output Format:</h4>\n\n<pre><code>For each test case, print the maximum score you can achieve if you start jumping on a tree from root and can make at most \u2018K\u2019 horizontal jumps and any possible number of vertical jumps.\n\nThe output of each test case will be printed in a new line.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints:</h4>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 100\n0 &lt;= K &lt;= 10\n0 &lt;= Special[i] &lt;= 1\n0 &lt;= U, V &lt; N\nIt is guaranteed that the given edges form a tree, also there will be no self loops and multiple edges.\n\nWhere \u2018T\u2019 is the number of test cases,  \u2018N\u2019, \u2018K\u2019 representing the number of nodes and the maximum number of horizontal jumps respectively, and \u2018Special[i]\u2019 represents whether the ith node is special or not.\n\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n1 1\n1\n4 0\n0 0 1 0\n0 1\n0 2\n0 3\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>1\n1\n</code></pre>\n\n<h5 id=\"explanation-of-the-sample-input1\">Explanation of the Sample Input1:</h5>\n\n<pre><code>Test case 1:\nThere is only one node in the tree, and this node (root node) is a special node. As in starting you are at the root node, so your score increment by \u20181\u2019. You cannot make any jump further.\n\nTest case 2:\nHere, k = 0, so you cannot make any horizontal jump. The best strategy is to make one vertical jump to node 2. This will increment your score by 1. You cannot make any further jump from here.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\n12 2\n0 1 0 1 1 0 1 1 1 0 1 1\n0 1\n0 2\n1 3\n1 4\n2 6\n6 5\n6 7\n4 8\n8 9\n8 10\n10 11\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>7\n</code></pre>\n\n<h5 id=\"explanation-of-the-sample-input-2\">Explanation of the Sample Input 2:</h5>\n\n<pre><code>Test case 1:\nSee the problem statement for an explanation.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 8,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a tree with 'N' nodes (numbered 0 to 'N-1', where node 0 is the root), you start at the root and jump through the tree. There are two types of jumps:\n\n*   **Vertical Jump:** Move from a node to any of its direct child nodes (nodes directly connected by an edge and one level deeper from the root).\n*   **Horizontal Jump:** Move from a node to any other node at the same level (same distance from the root), but not to itself.\n\nYou can make any number of vertical jumps but at most 'K' horizontal jumps. Some nodes are 'special'. Each time you visit a special node, your score increases by 1 (starting from 0). Given an array 'Special' indicating which nodes are special and an array 'Edges' representing the tree's edges, find the maximum score you can achieve.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 100",
                    "0 <= K <= 10",
                    "0 <= Special[i] <= 1",
                    "0 <= U, V < N",
                    "The given edges form a tree, and there are no self-loops or multiple edges.",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "2\n1 1\n1\n4 0\n0 0 1 0\n0 1\n0 2\n0 3",
                        "output": "1\n1",
                        "explanation": "Test case 1:\nSingle node tree with the root being special. Initial score is 1. No further jumps are possible.\n\nTest case 2:\nFour-node tree, K = 0 (no horizontal jumps allowed). The optimal path is to jump from the root (0) to node 2 (which is special). This yields a score of 1. No further jumps allowed since we are at a leaf node."
                    },
                    {
                        "input": "1\n12 2\n0 1 0 1 1 0 1 1 1 0 1 1\n0 1\n0 2\n1 3\n1 4\n2 6\n6 5\n6 7\n4 8\n8 9\n8 10\n10 11",
                        "output": "7",
                        "explanation": "The optimal path is explained in the problem statement, which leads to a score of 7 by visiting the nodes 1, 4, 6, 7, 8, 10, 11."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try out all possible ways to make jumps on the tree.</p>",
            "<p>Try to avoid recomputation of the same subproblems by storing (memoizing) the solutions to subproblems.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Trees",
                "slug": "trees"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}