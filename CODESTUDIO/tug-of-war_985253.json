{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9391,
            "title": "Tug of War",
            "titleSlug": "tug-of-war_985253",
            "content": "<h4 id=\"you-are-a-coach-of-a-group-consisting-of-n-students-the-ith-student-has-a-strength-arr-i-for-a-tug-of-war-game-you-want-to-divide-students-into-two-teams-of-equal-size-if-n-is-odd-then-size-of-one-team-should-be-n-1-2-and-size-of-other-team-should-be-n-1-2-you-want-a-game-that-is-fun-for-this-the-absolute-difference-between-the-team-s-strength-should-be-as-minimum-as-possible-a-teams-strength-is-the-sum-of-the-strengths-of-the-students-in-the-team\">You are a coach of a group consisting of &#39;N&#39; students. The ith student has a strength Arr[i]. For a Tug of War game, you want to divide students into two teams of equal size (If N is odd, then size of one team should be (N-1)/2 and size of other team should be (N+1)/2). You want a game that is fun, for this the absolute difference between the team\u2019s strength should be as minimum as possible. A team&#39;s strength is the sum of the strengths of the students in the team.</h4>\n\n<h5 id=\"input-format\">Input format :</h5>\n\n<pre><code>The first line of input contains a single integer &#39;T&#39;, representing the number of test cases or queries to be run. \n\nThen the &#39;T&#39; test cases follow.\n\nThe first line of each test case contains a positive integer &#39;N&#39;, which represents the number of students.\n\nThe next line contains &#39;N&#39; single space-separated integers representing the strength of the students.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print the minimum absolute difference between the team\u2019s strength.\n\nThe output of each test case is printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n2 &lt;= N &lt;= 20\n0 &lt; Arr[i] &lt;= 10^5\nWhere T is the number of test cases, N is the number of students and Arr[i] is the strength of ith student.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>3\n4\n1 2 3 4\n3\n4 2 1\n2\n6 8\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>0\n1\n2\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1:</h5>\n\n<pre><code>In the 1st test case, the first team contains students with strength {1, 4} and the second team contains students with strength {2, 3}, the absolute difference between the team\u2019s strength is (1+5)-(2+3)=0.\n\nIn the 2nd test case, the first team contains students with strength {1, 2} and the second team contains students with strength {4}, the absolute difference between the team\u2019s strength is (4)-(1+2)=1.\n\nIn the 3rd test case, the first team contains students with strength {6} and the second team contains students with strength {8}, the absolute difference between the team\u2019s strength is (8)-(6)=2.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n3\n10 10 10\n4\n10 1 2 5\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>10\n4\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 28,
            "dislikes": "NA",
            "rephrased": {
                "body": "You are a coach of a group of 'N' students. Each student has a strength represented by Arr[i]. Your task is to divide the students into two teams for a tug-of-war game. If 'N' is even, both teams should have N/2 students. If 'N' is odd, one team should have (N-1)/2 students and the other should have (N+1)/2 students. The goal is to minimize the absolute difference between the total strength of the two teams.  A team's strength is calculated as the sum of the strengths of its members.",
                "constraints": [
                    "1 <= T <= 10",
                    "2 <= N <= 20",
                    "0 <= Arr[i] <= 10^5",
                    "Where T is the number of test cases, N is the number of students and Arr[i] is the strength of ith student."
                ],
                "testcases": [
                    {
                        "input": "4\n1 2 3 4",
                        "output": "0",
                        "explanation": "One possible team division is {1, 4} and {2, 3}.  The absolute difference in their strengths is |(1+4) - (2+3)| = |5 - 5| = 0."
                    },
                    {
                        "input": "3\n4 2 1",
                        "output": "1",
                        "explanation": "One team has strength {4} and other team has strength {2, 1}. The absolute difference is |4 - (2+1)| = |4-3| = 1."
                    },
                    {
                        "input": "2\n6 8",
                        "output": "2",
                        "explanation": "One team contains {6} and the other contains {8}. The absolute difference is |8-6| = 2."
                    },
                    {
                        "input": "3\n10 10 10",
                        "output": "10",
                        "explanation": "One team consists of {10} and the other consists of {10, 10}. The absolute difference between strengths is |20 - 10| = 10."
                    },
                    {
                        "input": "4\n10 1 2 5",
                        "output": "4",
                        "explanation": "One possible team consists of {10, 1}. The second team consists of {2, 5}. The absolute difference between strengths is |(10+1) - (2+5)| = |11 - 7| = 4."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Check every possible subset of size N/2.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Backtracking",
                "slug": "backtracking"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}