{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 22887,
            "title": "Twirly Bird",
            "titleSlug": "twirly-bird_6194823",
            "content": "<h4 id=\"sam-is-a-gaming-enthusiast-he-loves-to-play-twirly-bird-a-lot-the-game-consists-of-n-energy-levels-he-can-choose-any-energy-level-to-start-the-game-also-he-can-quit-playing-anytime-he-wants\">Sam is a gaming enthusiast. He loves to play Twirly Bird a lot. The game consists of \u2018N\u2019 ENERGY levels. He can choose any ENERGY level to start the game, also he can quit playing anytime he wants.</h4>\n\n<h4 id=\"there-are-some-rules-he-needs-to-follow-while-playing-which-are-as-follows\">There are some rules he needs to follow while playing, which are as follows:</h4>\n\n<h4 id=\"he-can-jump-to-any-level-with-fewer-energy-points-and-a-lower-index-move-left-in-array-than-the-current-level-he-is-standing-the-overall-penalty-would-be-the-greatest-common-divisor-of-all-energy-points-of-the-levels-he-visited-but-sam-wants-to-minimize-his-penalty-so-he-decided-to-jump-only-on-those-energy-levels-such-that-the-overall-penalty-would-be-1\">He can jump to any level with fewer &#39;ENERGY&#39; points and a lower index (move left in array) than the current level he is standing. The overall penalty would be the Greatest Common Divisor of all ENERGY points of the levels he visited. But Sam wants to minimize his penalty so he decided to jump only on those ENERGY levels such that the overall penalty would be 1.</h4>\n\n<h4 id=\"there-could-be-many-ways-to-play-the-game-to-achieve-the-total-penalty-equal-to-1\">There could be many ways to play the game to achieve the total penalty equal to 1.</h4>\n\n<p>#### Help Sam to find out the total number of ways he can play the game. </p>\n\n<h4 id=\"as-the-answer-may-be-large-return-it-modulo-10-9-7\">As the answer may be large, return it Modulo 10^9 + 7.</h4>\n\n<h4 id=\"note-sam-can-only-move-to-the-left-in-the-array-from-any-position\">Note: Sam can only move to the left in the array from any position.</h4>\n\n<h5 id=\"example\">Example:</h5>\n\n<pre><code>Input: \u2018N\u2019 = 4 ,  &#39;ENERGY&#39; =  [1, 3, 2, 9]\n\nOutput: 7\nExplanation:\nArray elements represent the ENERGY points of ith level.\n\n9 =&gt; 2 \n9 =&gt; 2 =&gt; 1\n9 =&gt; 3 =&gt; 1\n9 =&gt; 1\n2 =&gt; 1\n3 =&gt; 1\n1 (Sam can start and end at 1)\n\nThus, The total number of ways to play the game =  7\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of the input contains an integer, &#39;N\u2019, denoting the size of the array (Number of ENERGY levels).\n\nThe second line of each test case contains \u2018N\u2019 space-separated integers denoting elements of the array (ENERGY Points of the levels).    \n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>Return an integer denoting the number of ways (Modulo 10^9 + 7).\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1  &lt;= T &lt;= 10\n1  &lt;= N &lt;= 500\n1 &lt;= ENERGY[i] &lt;= 100\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n5\n2 3 1 2 4\n4\n1 3 2 9\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>7\n7\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1 :</h5>\n\n<pre><code>Test 1:\nThe number of possible ways :\n4 =&gt; 2 =&gt; 1  (Here overall penalty = 1 , but in intermediate level it is greater than 1)\n4 =&gt; 1\n4 =&gt; 3\n4 =&gt; 3 =&gt; 2  (Jumping to the left level which has lesser ENERGY points)\n2 =&gt; 1\n1                 (Start and end at the same level)\n3 =&gt; 2\n\nNote that, the penalty can be greater than 1 at any intermediate level but the overall penalty should be 1.\n\ngcd(4, 2, 1) = gcd(4,1) = gcd(4, 3) = gcd(4, 3, 2) = gcd(2, 1) = gcd( 1 ) = gcd(3, 2) = 1.\n\nHence the number of ways is 7. \n\nTest 2:\n Array elements represent the ENERGY points of ith level.\n\n9 =&gt; 2 \n9 =&gt; 2 =&gt; 1\n9 =&gt; 3 =&gt; 1\n9 =&gt; 1\n2 =&gt; 1\n3 =&gt; 1\n1 (Sam can start and end at 1)\n\nThus, The total number of ways to play the game =  7\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n3\n2 3 4\n2\n2 4\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>3\n0\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 9,
            "dislikes": "NA",
            "rephrased": {
                "body": "Sam is playing a game called Twirly Bird with 'N' energy levels. He can start at any level and move to any level with a lower index and fewer energy points. The penalty for a path is the greatest common divisor (GCD) of the energy levels visited. Sam wants to find the number of paths with a penalty of 1.  He can only move to the left in the array. Determine the total number of ways Sam can play the game such that the GCD of all visited energy levels is 1. Return the result modulo 10^9 + 7.",
                "constraints": [
                    "1 <= N <= 500",
                    "1 <= ENERGY[i] <= 100",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "n = 4, energy = [1, 3, 2, 9]",
                        "output": "7",
                        "explanation": "Possible paths with GCD 1 are: 9 -> 2, 9 -> 2 -> 1, 9 -> 3 -> 1, 9 -> 1, 2 -> 1, 3 -> 1, 1.  Therefore, the total number of ways is 7."
                    },
                    {
                        "input": "n = 5, energy = [2, 3, 1, 2, 4]",
                        "output": "7",
                        "explanation": "Possible paths with GCD 1 are: 4 -> 2 -> 1, 4 -> 1, 4 -> 3, 4 -> 3 -> 2, 2 -> 1, 1, 3 -> 2. Hence the number of ways is 7."
                    },
                    {
                        "input": "n = 3, energy = [2, 3, 4]",
                        "output": "3",
                        "explanation": "Possible paths with GCD 1 are: 4 -> 3, 4 -> 3 -> 2, 3 -> 2. Thus, The total number of ways to play the game =  3"
                    },
                    {
                        "input": "n = 2, energy = [2, 4]",
                        "output": "0",
                        "explanation": "There are no possible ways to play the game with an overall GCD of 1."
                    },
                    {
                        "input": "n = 1, energy = [1]",
                        "output": "1",
                        "explanation": "The only possible path is starting and ending at 1.  The GCD is 1."
                    },
                    {
                        "input": "n = 6, energy = [2, 4, 6, 8, 10, 1]",
                        "output": "1",
                        "explanation": "The only possible path is 1 because it is the only number for the last index. Since it's GCD is 1, it can be considered as the only way."
                    },
                    {
                        "input": "n = 5, energy = [2,2,2,2,2]",
                        "output": "0",
                        "explanation": "There is no way since gcd would never be 1"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Check for all Subsequences using the pick and don\u2019t pick concept.&nbsp;</p>",
            "<p>Observe the possible range for gcd.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}