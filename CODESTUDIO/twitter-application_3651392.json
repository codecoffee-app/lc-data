{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 16811,
            "title": "Twitter Application",
            "titleSlug": "twitter-application_3651392",
            "content": "<h4 id=\"your-task-is-to-design-a-twitter-application-with-your-dsa-which-have-the-following-functions\">Your task is to design  a Twitter application with your DSA which have the following functions:</h4>\n\n<pre><code>\u2018POST\u2019(USERID, TWEETID) tells that a user having ID as USERID has posted a tweet having ID as TWEETID.\n\u2018GET_FEED\u2019( \u2018USERID\u2019 ) returns the list of 10 most recent tweet IDs in the user&#39;s news feed. Each item in the news feed must be posted by users who the user followed or by the user themself. Tweets must be ordered from most recent to least recent.\n\u2018FOLLOW(USERID, FOLLOWERID) tells that user is followed by the user having ID as \u2018FOLLOWERID\u2019.\n UNFOLLOW(USERID, FOLLOWERID) tells that the user \u2018FOLLOWERID\u2019 has unfollowed the user.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of the input contains an integer, &#39;T,\u2019 denoting the number of test cases.\n\nThe first line of each test case contains a single integer, &#39;N\u2019, denoting the number of function calls.\n\nNext \u2018N\u2019 lines of each test case contain an integer denoting the function type followed by the parameter list.\n   Type 1 denotes POST().\n   Type 2 denotes GET_FEED().\n   Type 3 denotes FOLLOW().\n   Type 4 denotes UNFOLLOW().   \n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, output the lists returned by the GET_FEED() function.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 10000.\n1 &lt;= \u2018USERID\u2019 &lt;= 500 . \nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n5\n1 1 100   \n1 2 200\n3 1 2\n2 2\n2 1\n3\n1 1 100\n1 1 110\n2 1 \n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>200 100\n100\n110 100\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of sample input 1:</h5>\n\n<pre><code>For the first test case,\nUser 1 posted a tweet with ID as 100.\nUser 2 posted a tweet with ID as 200.\nUser 2 followed user 1.\nNow, the get_Feed for user 2 will show his own posts and user 1\u2019s posts.So,the posts will be [200,100]. \nget_Feed for user 1 will show only his own posts as he didn\u2019t follow any other user. So, the posts will be [100]. \n\n\nFor the second test case:\n User 1 posted a tweet with ID as 100.\n User 1 posted a tweet with ID as 110.\n  get_Feed for user 1 will show only his own posts as he didn\u2019t follow any other user.So, the posts will be [110, 100]. \n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n8\n1 1 1\n3 1 2\n4 1 2\n2 1\n1 1 2\n1 1 3\n1 2 4\n2 1\n9\n1 1 1\n2 1\n1 3 2\n3 1 3\n4 1 3\n1 3 3\n1 1 4\n3 3 1\n2 1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>1 \n3 2 1 \n1 \n4 3 2 1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -8,
            "dislikes": "NA",
            "rephrased": {
                "body": "Design a Twitter application using appropriate Data Structures and Algorithms (DSA) with the following functionalities:\n\n*   **POST(USERID, TWEETID):**  Records that a user with ID `USERID` has posted a tweet with ID `TWEETID`.\n*   **GET_FEED(USERID):** Retrieves a list of the 10 most recent tweet IDs in the user's (`USERID`) news feed. The news feed should include tweets posted by the user themselves and by users they follow, ordered from most recent to least recent.\n*   **FOLLOW(USERID, FOLLOWERID):**  Indicates that the user with ID `FOLLOWERID` has started following the user with ID `USERID`.\n*   **UNFOLLOW(USERID, FOLLOWERID):** Indicates that the user with ID `FOLLOWERID` has unfollowed the user with ID `USERID`.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10000",
                    "1 <= USERID <= 500",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "5\n1 1 100\n1 2 200\n3 1 2\n2 2\n2 1",
                        "output": "200 100\n100",
                        "explanation": "User 1 posts tweet 100. User 2 posts tweet 200. User 2 follows User 1. GET_FEED(2) returns tweets from User 2 (200) and User 1 (100). GET_FEED(1) returns only User 1's tweet (100)."
                    },
                    {
                        "input": "3\n1 1 100\n1 1 110\n2 1",
                        "output": "110 100",
                        "explanation": "User 1 posts tweet 100. User 1 posts tweet 110. GET_FEED(1) returns User 1's recent tweets (110, 100)."
                    },
                    {
                        "input": "8\n1 1 1\n3 1 2\n4 1 2\n2 1\n1 1 2\n1 1 3\n1 2 4\n2 1",
                        "output": "1 \n3 2 1",
                        "explanation": "User 1 posts tweet 1. User 2 follows User 1. User 2 unfollows User 1. GET_FEED(1) returns User 1's tweet (1). User 1 posts tweet 2 and 3. User 2 posts tweet 4. GET_FEED(1) returns User 1's tweets (3, 2, 1) as User 2 is not following now"
                    },
                    {
                        "input": "9\n1 1 1\n2 1\n1 3 2\n3 1 3\n4 1 3\n1 3 3\n1 1 4\n3 3 1\n2 1",
                        "output": "1 \n4 3 2 1",
                        "explanation": "User 1 posts tweet 1. GET_FEED(1) returns tweet 1.User 3 posts tweet 2. User 3 follows User 1. User 3 unfollows User 1.User 3 posts tweet 3. User 1 posts tweet 4. User 3 follows User 1. GET_FEED(1) returns [4, 3, 2, 1] as User 3 now follows User 1."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to check all the tweets for the user feed.</p>",
            "<p>Try to store the tweets of each user effectively.</p>"
        ],
        "relatedTopics": [],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}