{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 7559,
            "title": "Two and Four Wheeler Roads ",
            "titleSlug": "two-and-four-wheeler-roads_699820",
            "content": "<h4 id=\"there-is-a-country-with-n-cities-and-m-bidirectional-roads-of-3-types\">There is a country with &#39;N&#39; cities and &#39;M&#39; bidirectional roads of 3 types.</h4>\n\n<pre><code>Type 1: Two Wheeler Road, It means only vehicles having two wheels can use this road.\nType 2: Four Wheeler Road, It means only vehicles having four wheels can use this road.\nType 3: Both two and four Wheeler Road, It means this road can be used by both type of vehicles.\n</code></pre>\n\n<h4 id=\"the-problem-is-to-find-the-maximum-number-of-roads-that-can-be-removed-such-that-a-path-exists-for-every-pair-of-cities-for-each-two-wheeler-and-four-wheeler-vehicle\">The problem is to find the maximum number of roads that can be removed such that a path exists for every pair of cities for each two-wheeler and four-wheeler vehicle.</h4>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>1. Roads may form a cycle.\n\n2. The cities do not have multiple same roads i.e all the roads are unique.\n\n3. If every city cannot be reached, then return -1.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains an Integer &#39;T&#39; which denotes the number of test cases.\n\nThe first line of each test case contains 2 space-separated integers: &#39;N&#39; and &#39;M&#39;, Where &#39;N&#39; denotes the number of cities and &#39;M&#39; denotes the number of roads as described below.\n\nEach of the following &#39;M&#39; lines contains 3 space-separated integers x,y, and z. It describes a bi-directional road of type z between the cities x and y.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print the maximum number of roads that can be removed such that a path exists for every pair of cities for each two-wheeler and four-wheeler vehicle.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You don&#39;t need to print the output, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;= N &lt;= 10^3\n1 &lt;= M &lt;= min(100000,(N*(N-1))/2)\n1 &lt;= x,y &lt;= N\n1 &lt;= z &lt;= 3\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n4 6\n3 4 2\n2 3 3\n1 2 3\n2 4 1\n1 2 1\n1 3 1\n10 1\n1 2 3\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>2\n-1 \n</code></pre>\n\n<h5 id=\"explanation-of-the-sample-output-1\">Explanation of the Sample Output 1:</h5>\n\n<pre><code>In test case 1, If we remove the road between cities 1 and 2 of type 1 and also the road between the cities 1 and 3 of type 1 still we can reach any city from any other city and this holds true for both type of vehicles.\n\nIn test case 2, There are 10 cities and there is only one road between cities 1 and 2 of type 3. So we can not reach every city from any other city.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n2 1\n1 2 3\n4 6\n1 2 1\n1 3 2\n1 4 3\n3 4 1\n2 3 1\n2 4 2\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>0\n1 \n</code></pre>\n\n<h5 id=\"explanation-of-the-sample-output-2\">Explanation of the Sample Output 2:</h5>\n\n<pre><code>In test case 1, There is only one road two wheeler road and one four wheeler road, and thus no road can be removed.\n\nIn test case 2, If we remove the road between city 2 and city 3 of type 1, still we can reach any city from any other city and this holds true for both type of vehicles.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 4,
            "dislikes": "NA",
            "rephrased": {
                "body": "A country has 'N' cities connected by 'M' bidirectional roads. Each road is of type 1 (two-wheeler), type 2 (four-wheeler), or type 3 (both). The goal is to determine the maximum number of roads that can be removed while ensuring that a path remains between every pair of cities for both two-wheeler and four-wheeler vehicles. Roads may form cycles, and there are no multiple roads between any two cities. If it's impossible to reach every city from any other city, return -1.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= N <= 10^3",
                    "1 <= M <= min(100000,(N*(N-1))/2)",
                    "1 <= x,y <= N",
                    "1 <= z <= 3",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "4 6\n3 4 2\n2 3 3\n1 2 3\n2 4 1\n1 2 1\n1 3 1",
                        "output": "2",
                        "explanation": "Removing the type 1 road between cities 1 and 2 and the type 1 road between cities 1 and 3 still allows all cities to be reachable from each other by both two-wheelers and four-wheelers."
                    },
                    {
                        "input": "10 1\n1 2 3",
                        "output": "-1",
                        "explanation": "With 10 cities and only one road, it's impossible to reach all cities from each other."
                    },
                    {
                        "input": "2 1\n1 2 3",
                        "output": "0",
                        "explanation": "There is only one road, and it's essential for connectivity. Removing it would disconnect the cities."
                    },
                    {
                        "input": "4 6\n1 2 1\n1 3 2\n1 4 3\n3 4 1\n2 3 1\n2 4 2",
                        "output": "1",
                        "explanation": "Removing the type 1 road between cities 2 and 3 maintains connectivity for both two-wheelers and four-wheelers."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Think greedily, that is type 3 is beneficial for us so use this as much as possible and then use type 1 and type 2 and remove the rest roads.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Matrices (2D Arrays)",
                "slug": "matrices-(2d-arrays)"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}