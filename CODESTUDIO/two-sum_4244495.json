{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 18796,
            "title": "Two Sum",
            "titleSlug": "two-sum_4244495",
            "content": "<h4 id=\"given-an-array-a-of-size-n-sorted-in-non-decreasing-order-return-the-pair-of-two-distinct-indices-whose-value-adds-up-to-the-given-target-the-given-array-is-0-indexed-so-returned-indices-are-in-the-range-0-n-1-both-inclusive-if-there-are-multiple-answers-you-can-return-any\">Given an array \u2018A\u2019 of size \u2018N\u2019, sorted in non-decreasing order. Return the pair of two distinct indices whose value adds up to the given \u2018target\u2019. The given array is 0 indexed. So returned indices are in the range [0, N-1], both inclusive. If there are multiple answers, you can return any.</h4>\n\n<h5 id=\"for-example\">For example:</h5>\n\n<pre><code>Suppose \u2018N\u2019 = 5, \u2018A\u2019 = [1,2,3,4,5], and target = 8\nAs target == A[2] + A[4] = 3 + 5 = 8.\nHence output will be 2 4.\n</code></pre>\n\n<h4 id=\"input-format\">Input Format:</h4>\n\n<pre><code>The first line of the input contains a single integer \u2018T\u2019 representing the no. of test cases.\n\nThe first line of each test case contains two space-separated integers, \u2018N\u2019 and \u2018Target\u2019, denoting the size of \u2018A\u2019 and the target sum value.\n\nThe second line of each test case contains \u2018N\u2019 space-separated integers representing the elements of \u2018A\u2019.\n</code></pre>\n\n<h4 id=\"output-format\">Output Format:</h4>\n\n<pre><code>For each test case, print two space-separated integers denoting the indices of elements of \u2018A\u2019, which add up to \u2018target\u2019.\n\nPrint a separate line for each test case.\n</code></pre>\n\n<h5 id=\"note\">Note</h5>\n\n<pre><code>You are not required to print anything; it has already been taken care of. Just implement the function and return the answer.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints -</h4>\n\n<pre><code>1 \u2264 T \u2264 1000\n1 \u2264 N \u2264 100000\n-1000 \u2264 A[i] \u2264 1000\n\u03a3N \u2264 300000\n\nTime limit: 1 Sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n5 8\n1 2 3 4 5\n4 4\n2 2 4 5\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>2 4\n0 1\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1 :</h5>\n\n<pre><code>For First Case - Same as explained in above example.\n\nFor the second case - \n\n\u2018N\u2019 = 4, \u2018A\u2019 = [2,2,4,5], and target = 4\nAs target == A[0] + A[1] = 2 + 2 = 4.\nHence output will be 0 1.   \n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>3 8\n1 7 8\n2 10\n1 9\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>1 0\n0 1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 3,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a non-decreasingly sorted array 'A' of size 'N', find two distinct indices within the array whose corresponding values sum up to a given 'target' value. The array is 0-indexed, so the indices should be in the range [0, N-1]. If multiple such pairs exist, return any one of them.",
                "constraints": [
                    "1 \u2264 T \u2264 1000",
                    "1 \u2264 N \u2264 100000",
                    "-1000 \u2264 A[i] \u2264 1000",
                    "\u03a3N \u2264 300000",
                    "Time limit: 1 Sec"
                ],
                "testcases": [
                    {
                        "input": "n = 5, nums=[1,2,3,4,5], target = 8",
                        "output": "2 4",
                        "explanation": "A[2] + A[4] = 3 + 5 = 8.  Indices 2 and 4 sum to the target."
                    },
                    {
                        "input": "n = 4, nums=[2,2,4,5], target = 4",
                        "output": "0 1",
                        "explanation": "A[0] + A[1] = 2 + 2 = 4. Indices 0 and 1 sum to the target."
                    },
                    {
                        "input": "n = 3, nums=[1,7,8], target = 8",
                        "output": "0 1",
                        "explanation": "A[0] + A[1] = 1 + 7 = 8. Indices 0 and 1 sum to the target."
                    },
                    {
                        "input": "n = 2, nums=[1,9], target = 10",
                        "output": "0 1",
                        "explanation": "A[0] + A[1] = 1 + 9 = 10. Indices 0 and 1 sum to the target."
                    },
                    {
                        "input": "n = 5, nums=[-2,-1,0,3,6], target = 1",
                        "output": "1 3",
                        "explanation": "A[1] + A[3] = -1 + 2 = 1. Indices 1 and 3 sum to the target."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>We can search for its complement with the target sum for each element. (Complement of i = target - A[i])</p>"
        ],
        "relatedTopics": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}