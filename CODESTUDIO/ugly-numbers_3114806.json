{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 16279,
            "title": "Ugly Numbers",
            "titleSlug": "ugly-numbers_3114806",
            "content": "<h4 id=\"ugly-numbers-are-those-numbers-whose-only-prime-factors-are-2-3-and-5-the-first-seven-ugly-numbers-are-1-2-3-4-5-6-8-where-1-is-an-exception-you-are-given-an-integer-n-print-the-nth-ugly-number-as-the-ugly-number-can-be-large-print-the-result-modulo-10-9-7\">Ugly numbers are those numbers whose only prime factors are 2, 3, and 5. The first seven ugly numbers are 1, 2, 3, 4, 5, 6, 8, where 1 is an exception. You are given an integer \u2018N\u2019, print the \u2018Nth\u2019 ugly number. As the ugly number can be large, print the result modulo 10^9 + 7.</h4>\n\n<h5 id=\"for-example\">For example:</h5>\n\n<pre><code>Let \u2018N\u2019 be: 10\nThe 10th ugly number is: 12\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of the input contains a single integer &#39;T&#39;, representing the number of test cases.\n\nThe first line of each test case contains a single integer \u2018N\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print a single integer representing the \u2018Nth\u2019 ugly number.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 10^4 \n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n10\n1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>12\n1\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1 :</h5>\n\n<pre><code>For the first test case :\nThe 10th ugly number is 12.\n\nFor the second test :\nThe 1st ugly number is 1.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n15\n150\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>24\n5832\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 3,
            "dislikes": "NA",
            "rephrased": {
                "body": "An ugly number is a positive integer whose prime factors are limited to 2, 3, and 5. Given an integer `n`, determine the `n`th ugly number. The sequence of ugly numbers starts with 1. Return the `n`th ugly number.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10^4",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "n = 10",
                        "output": "12",
                        "explanation": "The 10th ugly number is 12."
                    },
                    {
                        "input": "n = 1",
                        "output": "1",
                        "explanation": "The 1st ugly number is 1."
                    },
                    {
                        "input": "n = 15",
                        "output": "24",
                        "explanation": "The 15th ugly number is 24."
                    },
                    {
                        "input": "n = 150",
                        "output": "5832",
                        "explanation": "The 150th ugly number is 5832."
                    },
                    {
                        "input": "n = 7",
                        "output": "8",
                        "explanation": "The 7th ugly number is 8."
                    },
                    {
                        "input": "n = 2",
                        "output": "2",
                        "explanation": "The second ugly number is 2."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to find the count of ugly numbers less than a number.</p>",
            "<p>Try to store multiples of 2, 3, and 5.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}