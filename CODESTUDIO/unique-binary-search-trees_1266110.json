{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10853,
            "title": " Unique Binary Search Trees",
            "titleSlug": "unique-binary-search-trees_1266110",
            "content": "<h4 id=\"you-are-given-an-integer-n-your-task-is-to-return-the-number-of-structurally-unique-bsts-binary-search-trees-which-have-exactly-n-nodes-of-unique-values-from-1-to-n\">You are given an integer \u2018N\u2019, your task is to return the number of structurally unique BST&#39;s (binary search trees) which have exactly &#39;N&#39; nodes of unique values from 1 to &#39;N&#39;.</h4>\n\n<h4 id=\"for-example\">For example:</h4>\n\n<pre><code>Given  \u2018N\u2019 = 2, The total number of BST\u2019s is 2.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/2-8675.png\" alt=\"\"></p>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>1. A binary search tree is a rooted binary tree whose internal nodes each store a key greater than all the keys in the node&#39;s left subtree and less than those in its right subtree.\n\n2. A structurally unique binary search tree is a tree that has at least 1 node at a different position or with a different value compared to another binary search tree.\n</code></pre>\n\n<h4 id=\"input-format\">Input format:</h4>\n\n<pre><code>The first line of input contains an integer T denoting the number of test cases.\n\nThe first and the only line of each test case contains an integer &#39;N&#39;, the number of \u2018nodes\u2019.\n</code></pre>\n\n<h4 id=\"output-format\">Output format :</h4>\n\n<pre><code>For each test case, print a single line containing a single integer denoting the total number of BST\u2019s that can be formed. The output of each test case will be printed in a different line.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note :</h4>\n\n<pre><code>You don&#39;t have to print anything. It&#39;s been already taken care of. Just implement the given function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints:</h4>\n\n<pre><code>1 &lt;= T &lt;= 25\n1 &lt;= N &lt;= 30\n\nWhere \u2018T\u2019 is the total number of test cases, and N is the number of nodes.\n\nTime limit: 1 sec.\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1 :</h4>\n\n<pre><code>2\n3\n2\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1 :</h4>\n\n<pre><code>5\n2\n</code></pre>\n\n<h4 id=\"explanation-of-the-sample-input-1\">Explanation of the Sample Input 1:</h4>\n\n<pre><code>For the first test case:\nFor N = 3, below are the possible BST\u2019s that can be formed :\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/autodraw-3_23_2021-8674.png\" alt=\"\"></p>\n\n<pre><code>For the second test case: \nFor N = 2, below are the possible BST\u2019s that can be formed :\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/2-8675.png\" alt=\"\"></p>\n\n<h4 id=\"sample-input-2\">Sample Input 2 :</h4>\n\n<pre><code>2\n1\n4\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2 :</h4>\n\n<pre><code>1\n14\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 1,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an integer 'N', determine the number of structurally unique Binary Search Trees (BSTs) that can be formed using 'N' distinct nodes, where each node has a unique value from 1 to 'N'. A structurally unique BST is defined as a tree with a distinct arrangement of nodes compared to other BSTs, regardless of specific node values.",
                "constraints": [
                    "1 <= T <= 25, where T is the number of test cases.",
                    "1 <= N <= 30, where N is the number of nodes.",
                    "Time limit: 1 sec."
                ],
                "testcases": [
                    {
                        "input": "n = 3",
                        "output": "5",
                        "explanation": "For N = 3, there are 5 possible structurally unique BSTs."
                    },
                    {
                        "input": "n = 2",
                        "output": "2",
                        "explanation": "For N = 2, there are 2 possible structurally unique BSTs."
                    },
                    {
                        "input": "n = 1",
                        "output": "1",
                        "explanation": "For N = 1, there is only 1 possible BST."
                    },
                    {
                        "input": "n = 4",
                        "output": "14",
                        "explanation": "For N = 4, there are 14 possible structurally unique BSTs."
                    },
                    {
                        "input": "n = 5",
                        "output": "42",
                        "explanation": "For N = 5, there are 42 possible structurally unique BSTs."
                    },
                    {
                        "input": "n = 6",
                        "output": "132",
                        "explanation": "For N = 6, there are 132 possible structurally unique BSTs."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you do this by recursion?&nbsp;</p>",
            "<p>Do you know about Catalan numbers?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Trees",
                "slug": "trees"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}