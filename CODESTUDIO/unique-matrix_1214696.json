{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10380,
            "title": " Unique Matrix",
            "titleSlug": "unique-matrix_1214696",
            "content": "<h4 id=\"you-are-given-a-binary-matrix-matrix-of-n-rows-and-m-columns\">You are given a binary matrix &#39;MATRIX&#39; of &#39;N&#39; rows and &#39;M&#39; columns.</h4>\n\n<h4 id=\"your-task-is-to-return-all-the-unique-rows-in-the-order-they-appear-in-the-matrix\">Your task is to return all the unique rows in the order they appear in the matrix.</h4>\n\n<h4 id=\"for-example\">For example:</h4>\n\n<pre><code>Matrix = [ [1,0,1], [0,0,1 ], [1,0,1 ]] \nResult = [ [1,0,1], [0,0,1] ]. \nThe row [1,0,1] is before [0,0,1] as it appears before in matrix.\n</code></pre>\n\n<h4 id=\"note-in-the-binary-matrix-all-the-entries-are-either-0-or-1\">Note: In the binary matrix, all the entries are either 0 or 1.</h4>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer &#39;T\u2019 denoting the number of test cases to run. Then the test case follows.\n\nThe first line of each test case contains two single space-separated integers \u2018N\u2019, \u2018M\u2019, denoting the number of rows and number of columns in the matrix, respectively. \n\nThe next \u2018N\u2019 lines of each test case contain \u2018M\u2019 space-separated integers denoting the elements of the binary matrix.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print all the unique rows in the order they appear in the matrix.\n\nThe output for each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You don\u2019t need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10 \n1 &lt;= N &lt;= 3000\n1 &lt;= M &lt;= 40 \n\nwhere \u2018N\u2019 and \u2018M\u2019 are the number of rows and columns of the matrix, respectively.\n\nTime Limit: 1 sec.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n1 1\n1\n3 2\n1 0\n1 1\n0 0\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>1\n1 0\n1 1\n0 0\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1:</h5>\n\n<pre><code>For the first case, there is only one row in the matrix [ [1] ].\n\nFor the second test case, all the rows are unique, and they are printed in the order they appear in the matrix.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n2 5\n0 0 0 0 0\n1 0 0 0 0\n5 2\n0 1\n0 0\n0 0\n0 0\n0 0\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>0 0 0 0 0\n1 0 0 0 0\n0 1\n0 0\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -1,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a binary matrix 'MATRIX' of 'N' rows and 'M' columns, the task is to identify and return all the unique rows in the order they appear in the matrix. A row is considered unique if it hasn't appeared previously in the matrix. The binary matrix only contains 0s and 1s.",
                "constraints": [
                    "1 <= T <= 10 (Number of test cases)",
                    "1 <= N <= 3000 (Number of rows)",
                    "1 <= M <= 40 (Number of columns)",
                    "Time Limit: 1 sec."
                ],
                "testcases": [
                    {
                        "input": "1 1\n1",
                        "output": "1",
                        "explanation": "The matrix has only one row: [1]. Therefore, the unique row is [1]."
                    },
                    {
                        "input": "3 2\n1 0\n1 1\n0 0",
                        "output": "1 0\n1 1\n0 0",
                        "explanation": "All the rows are unique and are printed in the order they appear in the matrix."
                    },
                    {
                        "input": "2 5\n0 0 0 0 0\n1 0 0 0 0",
                        "output": "0 0 0 0 0\n1 0 0 0 0",
                        "explanation": null
                    },
                    {
                        "input": "5 2\n0 1\n0 0\n0 0\n0 0\n0 0",
                        "output": "0 1\n0 0",
                        "explanation": "The matrix contains duplicate rows. Only the first occurrences of each unique row are included in the output in their original order."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can we convert each row to an equivalent integer representation?</p>",
            "<p>All the entries in the matrix are 1 or 0. Can you think of an efficient data structure to store all the rows?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Tries",
                "slug": "tries"
            },
            {
                "name": "Matrices (2D Arrays)",
                "slug": "matrices-(2d-arrays)"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}