{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 7558,
            "title": "Unival Trees",
            "titleSlug": "unival-trees_697311",
            "content": "<h4 id=\"you-are-given-a-binary-tree-return-the-count-of-unival-sub-trees-in-the-given-binary-tree-in-unival-trees-all-the-nodes-below-the-root-node-have-the-same-value-as-the-data-of-the-root\">You are given a binary tree. Return the count of unival sub-trees in the given binary tree. In unival trees, all the nodes, below the root node, have the same value as the data of the root.</h4>\n\n<h4 id=\"for-example-for-the-binary-tree-given-in-the-following-diagram-the-number-of-unival-trees-is-5\">For example: for the binary tree, given in the following diagram, the number of unival trees is 5.</h4>\n\n<p><img src=\"https://files.codingninjas.in/unival-trees-4789.png\" alt=\"alt-text\"></p>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains an integer T, the number of test cases.\n\nThe next T lines, where each line contains elements in the level order form. The input consists of values of nodes separated by a single space in a single line. In case a node is null, we take -1 on its place.\n\nFor example, the input for the tree depicted in the below image would be :\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/0000000000004189.png\" alt=\"alt text\"></p>\n\n<pre><code>1\n2 3\n4 -1 5 6\n-1 7 -1 -1 -1 -1\n-1 -1\n</code></pre>\n\n<h4 id=\"explanation\">Explanation :</h4>\n\n<pre><code>Level 1 :\nThe root node of the tree is 1\n\nLevel 2 :\nLeft child of 1 = 2\nRight child of 1 = 3\n\nLevel 3 :\nLeft child of 2 = 4\nRight child of 2 = null (-1)\nLeft child of 3 = 5\nRight child of 3 = 6\n\nLevel 4 :\nLeft child of 4 = null (-1)\nRight child of 4 = 7\nLeft child of 5 = null (-1)\nRight child of 5 = null (-1)\nLeft child of 6 = null (-1)\nRight child of 6 = null (-1)\n\nLevel 5 :\nLeft child of 7 = null (-1)\nRight child of 7 = null (-1)\n\nThe first not-null node (of the previous level) is treated as the parent of the first two nodes of the current level. The second not-null node (of the previous level) is treated as the parent node for the next two nodes of the current level and so on.\nThe input ends when all nodes at the last level are null (-1).\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>The above format was just to provide clarity on how the input is formed for a given tree. \nThe sequence will be put together in a single line separated by a single space. Hence, for the above depicted tree, the input will be given as:\n\n1    \n1 2 3 4 -1 5 6 -1 7 -1 -1 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For every test case print single line containing an integer i.e the count of unival trees.\n</code></pre>\n\n<h4 id=\"note\">Note</h4>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n0 &lt;= N &lt;= 10^5\n0 &lt;= data &lt;= 10^4, where data is the value for a node.\n\nTime Limit: 1sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1 1 1 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>3\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1 2 3 2 -1 3 4 -1 -1 3 3 -1 -1 -1 -1 -1 -1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>6\n</code></pre>\n\n<h5 id=\"explanation-to-sample-input-2\">Explanation to Sample Input 2:</h5>\n\n<pre><code>The input binary tree will be represented as \n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/unival-trees-sample-case-4790.png\" alt=\"alt-text\"></p>\n\n<pre><code>In the above diagram, the orange marked nodes are the root nodes of the unival sub-trees for the given binary tree.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 82,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a binary tree represented by its root node, determine the number of unival subtrees present in the tree. A unival subtree is defined as a subtree where all nodes have the same value as the root node of that subtree.",
                "constraints": [
                    "1 <= T <= 10",
                    "0 <= N <= 10^5, where N is the number of nodes in the tree",
                    "0 <= data <= 10^4, where data is the value for a node."
                ],
                "testcases": [
                    {
                        "input": "root=1 1 1 -1 -1 -1 -1",
                        "output": "3",
                        "explanation": "The binary tree consists of three nodes, all with the value 1.  Each node forms a unival subtree. Hence the count is 3."
                    },
                    {
                        "input": "root=2 3 2 -1 3 4 -1 -1 3 3 -1 -1 -1 -1 -1 -1",
                        "output": "6",
                        "explanation": "The binary tree can be visualized as:\n\n      2\n     / \\\n    3   2\n   / \\ / \\\n  3   4 3  3\n\nThe unival subtrees are the leaf nodes (3, 4, 3, 3) and the nodes with values 3 at the bottom level and the node with value 3 at the higher level on left side. Thus the total count is 6."
                    },
                    {
                        "input": "root=5 4 5 4 4 5 -1 -1 -1 -1 -1",
                        "output": "5",
                        "explanation": "The binary tree can be visualized as:\n\n      5\n     / \\\n    4   5\n   / \\\n  4   4\n\nThe unival subtrees are the two 4 at the bottom level, the 5 at right, the 4 above the 4s and the 4 above the 4s. Thus the total count is 5."
                    },
                    {
                        "input": "root=-1",
                        "output": "0",
                        "explanation": "If the root is null, there are no nodes hence no unival subtrees."
                    },
                    {
                        "input": "root=1",
                        "output": "1",
                        "explanation": "A single node tree is always a unival tree."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Check for all possible subtrees whether they are unival trees or not.</p>",
            "<p>Keep track of the count of unival subtrees for each node.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Trees",
                "slug": "trees"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}