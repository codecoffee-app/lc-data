{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12841,
            "title": "Vaccination Drive",
            "titleSlug": "vaccination-drive_1496512",
            "content": "<h4 id=\"the-indian-government-recently-launched-the-worlds-largest-vaccination-drive-for-covid-19-dr-ritesh-has-been-appointed-as-a-nodal-officer-for-vaccinating-a-locality-there-are-n-houses-numbers-from-1-to-n-in-that-locality-dr-ritesh-will-visit-each-house-one-by-one-and-vaccinate-all-the-people-in-the-house-he-has-already-covered-k-number-of-houses-since-n-is-a-very-large-number-l-bits-are-required-to-represent-the-number-you-are-supposed-to-help-dr-ritesh-and-find-the-maximum-possible-number-of-houses-that-are-yet-to-be-covered-under-the-vaccination-drive\">The Indian government recently launched the world&#39;s largest vaccination drive for COVID-19. Dr Ritesh has been appointed as a nodal officer for vaccinating a locality. There are \u2018N\u2019 houses numbers from 1 to \u2018N\u2019 in that locality. Dr Ritesh will visit each house one by one and vaccinate all the people in the house. He has already covered \u2018K\u2019 number of houses. Since \u2018N\u2019 is a very large number, \u2018L\u2019 bits are required to represent the number. You are supposed to help Dr Ritesh and find the maximum possible number of houses that are yet to be covered under the vaccination drive.</h4>\n\n<h4 id=\"input-format\">Input Format :</h4>\n\n<pre><code>The first line contains an integer \u2018T\u2019 denoting the number of test cases. Then each test case follows.\n\nThe first input line of each test case contains two space-separated integers \u2018K\u2019 and \u2018L\u2019 as described in the problem.\n</code></pre>\n\n<h4 id=\"output-format\">Output Format :</h4>\n\n<pre><code>For each test case, print the maximum possible number of houses that are yet to be covered under the vaccination drive.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You are not required to print the expected output, it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints :</h4>\n\n<pre><code>1 &lt;= T &lt;= 50\n1 &lt;= \u2018K\u2019 &lt;= N\n1 &lt;= \u2018L\u2019 &lt;= 30\n\nWhere \u2018T\u2019 is the number of test cases, \u2018K\u2019, \u2018N\u2019 and \u2018L\u2019 are described in the problem statement.\n\nTime limit: 1 sec\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1 :</h4>\n\n<pre><code>2\n3 5\n5 3\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample output 1 :</h4>\n\n<pre><code>29\n3\n</code></pre>\n\n<h4 id=\"explanation-of-sample-output-1\">Explanation of Sample output 1  :</h4>\n\n<pre><code>For the first test case, since the number of bits required is 5, the maximum possible value for \u2018N\u2019 is 32. So the maximum possible number of remaining houses are 32 - 3 = 29.\n\nFor the second test case, since the number of bits required is 3, the maximum possible value for \u2018N\u2019 is 8. So the maximum possible number of remaining houses are 8 - 3 = 5.\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2 :</h4>\n\n<pre><code>2\n1 1\n2 3\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample output 2 :</h4>\n\n<pre><code>1\n6\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 18,
            "dislikes": "NA",
            "rephrased": {
                "body": "Dr. Ritesh is leading a COVID-19 vaccination drive in a locality with 'N' houses numbered from 1 to 'N'. He has already vaccinated 'K' houses. Given that 'L' bits are required to represent the total number of houses 'N', determine the maximum possible number of houses that are yet to be covered in the vaccination drive.",
                "constraints": [
                    "1 <= T <= 50",
                    "1 <= K <= N",
                    "1 <= L <= 30",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "3 5",
                        "output": "29",
                        "explanation": "With L = 5 bits, the maximum possible value for N is 2^5 = 32.  Since K = 3 houses have already been covered, the maximum possible number of remaining houses is 32 - 3 = 29."
                    },
                    {
                        "input": "5 3",
                        "output": "3",
                        "explanation": "With L = 3 bits, the maximum possible value for N is 2^3 = 8.  Since K = 5 houses have already been covered, the maximum possible number of remaining houses is 8 - 5 = 3."
                    },
                    {
                        "input": "1 1",
                        "output": "1",
                        "explanation": "With L = 1 bit, the maximum possible value for N is 2^1 = 2. Since K = 1 house has already been covered, the maximum possible number of remaining houses is 2 - 1 = 1."
                    },
                    {
                        "input": "2 3",
                        "output": "6",
                        "explanation": "With L = 3 bits, the maximum possible value for N is 2^3 = 8. Since K = 2 houses have already been covered, the maximum possible number of remaining houses is 8 - 2 = 6."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you think of using pow() function?</p>",
            "<p>Can you think of using bitwise operators?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}