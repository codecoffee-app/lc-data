{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12427,
            "title": "Valid Number",
            "titleSlug": "valid-number_1461274",
            "content": "<h4 id=\"you-are-given-a-string-s-you-have-to-tell-whether-this-string-is-a-valid-number-or-not-if-the-string-is-valid-print-valid-else-print-invalid-without-quotes\">You are given a string, \u2018S\u2019. You have to tell whether this string is a valid number or not. If the string is valid print \u201cValid\u201d else print \u201cInvalid\u201d without quotes.</h4>\n\n<h4 id=\"a-number-is-said-to-be-valid-if-it-can-be-split-in-the-following-two-components-i-a-decimal-number-or-an-integer-ii-optional-an-e-or-e-followed-by-an-integer\">A number is said to be valid if it can be split in the following two components: i) A decimal number or an integer ii) (Optional) An &#39;e&#39; or &#39;E&#39;, followed by an integer.</h4>\n\n<h4 id=\"a-decimal-number-can-be-split-up-into-these-components-in-order-i-optional-a-sign-character-either-or-ii-one-of-the-following-formats-at-least-one-digit-followed-by-a-dot-or-at-least-one-digit-followed-by-a-dot-followed-by-at-least-one-digit-or-a-dot-followed-by-at-least-one-digit\">A decimal number can be split up into these components (in order): i) (Optional) A sign character (either &#39;+&#39; or &#39;-&#39;) ii) One of the following formats: At least one digit, followed by a dot &#39;.&#39; or  At least one digit, followed by a dot &#39;.&#39;, followed by at least one digit. or A dot &#39;.&#39;, followed by at least one digit.</h4>\n\n<h4 id=\"an-integer-can-be-split-up-into-these-components-in-order-i-optional-a-sign-character-either-or-ii-at-least-one-digit\">An integer can be split up into these components (in order): i) (Optional) A sign character (either &#39;+&#39; or &#39;-&#39;) ii) At least one digit.</h4>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of the input contains \u2018T\u2019 denoting the number of test cases.\n\nThe first line of each test case contains a string \u2018S\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case return \u201cValid\u201d if the string is a Valid Number else return \u201cInvalid\u201d.\n\nNote: Don&#39;t print anything it has already been taken care of. Just implement the given function\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 5\n0 &lt;= |S| &lt;= 2000\n\nWhere \u2018T\u2019 denotes the number of test cases and |S| denotes the length of string S\n\nTime Limit: 1 second\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>3\n35\n.64\ne\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>Valid\nValid\nInvalid\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation for Sample Input 1 :</h5>\n\n<pre><code>In test case 1:\nThe string is an integer thus it is a valid number.\n\nIn test case 2:\nThe string a decimal where we have a dot (\u2018.\u2019) followed by at least an integer thus it is a valid number.\n\nIn test case 3:\nThe string is not a valid number as before \u2018e\u2019 we should have a decimal or an integer and after \u2018e\u2019 we should have an integer.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>3\n44-\n3.E830\n.631\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>Invalid\nValid\nValid\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 7,
            "dislikes": "NA",
            "rephrased": {
                "body": "You are given a string, S. Determine whether the string represents a valid number according to the following rules:\n\nA valid number can be split into two components:\n\n1.  A decimal number or an integer.\n2.  An optional 'e' or 'E', followed by an integer.\n\nA decimal number can be split up into these components:\n\n1.  (Optional) A sign character ('+' or '-').\n2.  One of the following formats:\n    *   At least one digit, followed by a dot ('.').\n    *   At least one digit, followed by a dot ('.') followed by at least one digit.\n    *   A dot ('.') followed by at least one digit.\n\nAn integer can be split up into these components:\n\n1.  (Optional) A sign character ('+' or '-').\n2.  At least one digit.\n\nReturn \"Valid\" if the string is a valid number; otherwise, return \"Invalid\".",
                "constraints": [
                    "1 <= T <= 5 (T denotes the number of test cases)",
                    "0 <= |S| <= 2000 (|S| denotes the length of string S)",
                    "Time Limit: 1 second"
                ],
                "testcases": [
                    {
                        "input": "35",
                        "output": "Valid",
                        "explanation": "The string '35' is an integer and therefore a valid number."
                    },
                    {
                        "input": ".64",
                        "output": "Valid",
                        "explanation": "The string '.64' is a decimal number with a dot followed by digits, making it valid."
                    },
                    {
                        "input": "e",
                        "output": "Invalid",
                        "explanation": "The string 'e' is invalid because it lacks a preceding number or decimal and a following integer."
                    },
                    {
                        "input": "44-",
                        "output": "Invalid",
                        "explanation": "The string '44-' is invalid as the minus sign is placed incorrectly after the digits."
                    },
                    {
                        "input": "3.E830",
                        "output": "Valid",
                        "explanation": "The string '3.E830' is valid. It has a decimal number '3.' followed by 'E' and an integer '830'."
                    },
                    {
                        "input": ".631",
                        "output": "Valid",
                        "explanation": "The string '.631' is valid as it represents a decimal number with a dot followed by digits."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>keep breaking the string into parts and solve recursively</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}