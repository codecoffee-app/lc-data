{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10989,
            "title": "Valid Pairing of Numbers",
            "titleSlug": "valid-pairing-of-numbers_1281412",
            "content": "<h4 id=\"you-are-provided-with-a-list-of-numbers-from-0-to-2-n-1-you-have-to-find-the-minimum-number-of-swaps-needed-to-make-every-even-number-e-present-in-the-list-adjacent-to-e-1\">You are provided with a list of numbers from \u20180\u2019 to (2 * \u2019N\u2019 - 1). You have to find the minimum number of swaps needed to make every even number \u2018E\u2019 (present in the list) adjacent to (\u2018E\u2019 + 1).</h4>\n\n<h5 id=\"for-example\">For Example:</h5>\n\n<pre><code>List = [3, 0, 2, 1]\n\nWe have to make \u20180\u2019 adjacent to \u20181\u2019 and \u20182\u2019 to \u20183\u2019. And, to achieve this we can swap \u20180\u2019 with \u20182\u2019.\n\nNew list = [3, 2, 0, 1].\n\nTherefore, the answer (minimum number of swaps) is equal to 1.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>There will be only distinct numbers present in the given list.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 representing the number of test cases. \n\nThe first line of each test case will contain a single integer \u2018N\u2019 such that the size of the list is 2 * \u2018N\u2019.\n\nThe second line of each test case will contain 2 * \u2018N\u2019 integers separated by a single space that represents the elements/numbers present in the list initially.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print the minimum number of swaps possible to make every even number \u2018E\u2019 adjacent to (\u2018E\u2019 + 1).\n\nOutput for every test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You don\u2019t need to print anything; It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 100\n0 &lt;= ARR[ i ] &lt; 2 * N\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1\n2\n3 0 2 1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>1\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of sample input 1:</h5>\n\n<pre><code>For the first test case, an explanation is given in the description.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n1\n1 0\n3\n1 0 2 3 5 4\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>0\n0\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation for sample input 2:</h5>\n\n<pre><code>In the first test case, the required pairing of all the even numbers is already done.\n\nIn the second test case, the required pairing of all the even numbers is already done.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 5,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a list of distinct numbers from 0 to 2N-1, determine the minimum number of swaps needed to arrange the list such that every even number 'E' is adjacent to 'E+1'.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 100",
                    "0 <= ARR[ i ] < 2 * N"
                ],
                "testcases": [
                    {
                        "input": "n = 2, arr = [3, 0, 2, 1]",
                        "output": "1",
                        "explanation": "We need to make '0' adjacent to '1' and '2' adjacent to '3'.  Swapping '0' and '2' achieves this: [3, 2, 0, 1]. Therefore, only 1 swap is needed."
                    },
                    {
                        "input": "n = 1, arr = [1, 0]",
                        "output": "0",
                        "explanation": "The even number '0' is already adjacent to '1'. No swaps are needed."
                    },
                    {
                        "input": "n = 3, arr = [1, 0, 2, 3, 5, 4]",
                        "output": "0",
                        "explanation": "The pairs (0, 1), (2, 3), and (4, 5) are already adjacent. No swaps are needed."
                    },
                    {
                        "input": "n = 2, arr = [0, 3, 2, 1]",
                        "output": "1",
                        "explanation": "The pair (0,1) and (2,3) needs to be together. Swap 3 with 1 : [0, 1, 2, 3], thus only 1 swap is needed"
                    },
                    {
                        "input": "n = 3, arr = [5, 4, 3, 2, 1, 0]",
                        "output": "3",
                        "explanation": "The pair (0,1) and (2,3) and (4,5) needs to be together. The optimal moves are [5,4,3,2,0,1] then [5,4,3,0,2,1] then [5,4,0,3,2,1] then [5,0,4,3,2,1] then [0,5,4,3,2,1] then [0,1,4,3,2,5] then [0,1,4,3,2,5] then [0,1,4,3,2,5] then [0,1,4,2,3,5] then [0,1,4,2,3,5] then [0,1,4,2,3,5] then [0,1,4,2,3,5] then [0,1,2,4,3,5] then [0,1,2,3,4,5] Swap 5 and 1, resulting in [5,4,3,2,1,0] -> [5,4,3,2,0,1] (1 swap), then Swap 3 and 0 giving [5,4,3,0,2,1] -> [5,4,0,3,2,1] (2 swap) then swap 5 and 0 resulting in [5,4,0,3,2,1] -> [0,4,5,3,2,1] (3 swap)"
                    },
                    {
                        "input": "n = 4, arr = [7, 6, 5, 4, 3, 2, 1, 0]",
                        "output": "4",
                        "explanation": "We want to pair 0 with 1, 2 with 3, 4 with 5, and 6 with 7.  This requires swapping 0 with 7, 2 with 5, 4 with 3, and 6 with 1. Total 4 swaps."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you think of a solution using union and find the concept of disjoint sets?</p>",
            "<p>Can you think of a solution that includes swapping numbers?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}