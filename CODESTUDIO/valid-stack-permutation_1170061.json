{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10141,
            "title": "Valid Stack Permutation",
            "titleSlug": "valid-stack-permutation_1170061",
            "content": "<h4 id=\"you-have-been-given-two-arrays-having-an-equal-number-of-elements-you-have-to-find-whether-one-array-is-the-valid-stack-permutation-of-the-other-an-array-is-said-to-be-a-valid-stack-permutation-of-the-other-if-and-only-if-after-applying-some-push-and-pop-operations-onto-the-sequence-of-elements-in-that-array-will-result-in-the-other-array\">You have been given two arrays having an equal number of elements. You have to find whether one array is the valid stack permutation of the other. An array is said to be a valid stack permutation of the other if and only if after applying some push and pop operations onto the sequence of elements in that array, will result in the other array.</h4>\n\n<h4 id=\"example\">Example:</h4>\n\n<pre><code>Consider array : 2 4 6.\nValid stack permutations are as follows:\n2 4 6\n    push \u20182\u2019\n    pop \u20182\u2019\n    push \u20184\u2019\n    pop \u20184\u2019\n    push \u20186\u2019\n    pop \u20186\u2019\n2 6 4\n    push \u20182\u2019\n    pop \u20182\u2019\n    push \u20184\u2019\n    pop \u20186\u2019\n    push \u20186\u2019\n    pop \u20184\u2019\n4 2 6\n    push \u20182\u2019 \n    pop \u20184\u2019 \n    push \u20184\u2019 \n    pop \u20182\u2019 \n    push \u20186\u2019 \n    pop \u20186\u2019 \n4 6 2\n    push \u20182\u2019 \n    pop \u20184\u2019 \n    push \u20184\u2019 \n    pop \u20186\u2019 \n    push \u20186\u2019 \n    pop \u20186\u2019 \n6 4 2\n    push \u20182\u2019 \n    pop \u20184\u2019 \n    push \u20186\u2019 \n    pop \u20186\u2019 \n    push \u20184\u2019 \n    pop \u20186\u2019 \n\nNow, If the other array is [2,4,6], [2,6,4], [4,2,6], [4,6,2], or [6,4,2] then the answer is \u201cYES\u201d otherwise \u201cNO\u201d.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>Please note that the arrays will only contain unique elements.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 representing the number of test cases. \n\nThe first line of each test case will contain an integer \u2018N\u2019 which represents the total number of elements in both arrays.\n\nThe second line of each test case contains the \u2018N\u2019 space-separated integers which represent the elements of the &#39;FIRST&#39; array.\n\nThe third line of each test case contains the \u2018N\u2019 space-separated integers which represent the elements of the &#39;OTHER&#39; array.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print \u201cYES\u201d if the first array is a valid stack permutation of the other. Otherwise, print \u201cNO\u201d.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You don\u2019t need to print anything; It has already been taken care of.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 10000\n0 &lt;= FIRST[i], OTHER[i] &lt;= 10^5\n\nWhere &#39;FIRST[i]&#39; and &#39;OTHER[i]&#39; denote the value of the i-th element of the input arrays.\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n3\n2 4 6\n4 6 2\n3\n2 4 6\n6 2 4\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>YES\nNO\n</code></pre>\n\n<h5 id=\"explanation-of-sample-output-1\">Explanation of Sample Output 1:</h5>\n\n<pre><code>In test case 1, The explanation is already given in the example.\n\nIn test case 2, The explanation is already given in the example.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n3\n2 4 6\n2 3 4\n1\n5\n5\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>NO\nYES\n</code></pre>\n\n<h5 id=\"explanation-for-sample-output-2\">Explanation for Sample Output 2:</h5>\n\n<pre><code>In test case 1, the &#39;FIRST&#39; array does not contain 3 but the &#39;OTHER&#39; array contains 3. So, the other is not the valid stack permutation.\n\nIn test case 2, the only array containing \u20185\u2019 as an element is the valid stack permutation of the array [5].\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 15,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two arrays, `first` and `other`, of equal length, determine if `other` is a valid stack permutation of `first`.  A valid stack permutation can be obtained by pushing elements from `first` onto a stack and popping them off in a sequence that matches `other`.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 10000",
                    "0 <= FIRST[i], OTHER[i] <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "n = 3, first = [2, 4, 6], other = [4, 6, 2]",
                        "output": "YES",
                        "explanation": "The array [4, 6, 2] is a valid stack permutation of [2, 4, 6] (push 2, push 4, pop 4, push 6, pop 6, pop 2)."
                    },
                    {
                        "input": "n = 3, first = [2, 4, 6], other = [6, 2, 4]",
                        "output": "NO",
                        "explanation": "The array [6, 2, 4] is not a valid stack permutation of [2, 4, 6]."
                    },
                    {
                        "input": "n = 3, first = [2, 4, 6], other = [2, 3, 4]",
                        "output": "NO",
                        "explanation": "The array [2, 4, 6] does not contain 3 while [2,3,4] does, therefore it cannot be a valid stack permutation."
                    },
                    {
                        "input": "n = 1, first = [5], other = [5]",
                        "output": "YES",
                        "explanation": "A single-element array is trivially a valid stack permutation of itself."
                    },
                    {
                        "input": "n = 5, first = [1, 2, 3, 4, 5], other = [5, 4, 3, 2, 1]",
                        "output": "YES",
                        "explanation": "All elements can be pushed onto the stack, then popped off in reverse order."
                    },
                    {
                        "input": "n = 4, first = [1, 2, 3, 4], other = [4, 3, 1, 2]",
                        "output": "NO",
                        "explanation": "It's impossible to get this ordering of push and pops from [1,2,3,4]"
                    },
                    {
                        "input": "n = 4, first=[1,2,3,4], other = [1,3,2,4]",
                        "output": "YES",
                        "explanation": "push 1, pop 1, push 2, push 3, pop 3, pop 2, push 4, pop 4"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Follow the order of elements in the first array by considering the push and pop operations.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Stacks & Queues",
                "slug": "stacks-&-queues"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}