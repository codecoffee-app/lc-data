{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 11196,
            "title": "Water Supply in a Village",
            "titleSlug": "water-supply-in-a-village_1380956",
            "content": "<h4 id=\"there-are-n-houses-in-a-village-ninja-wants-to-supply-water-for-all-the-houses-by-building-wells-and-laying-pipes\">There are \u2018N\u2019 houses in a village. Ninja wants to supply water for all the houses by building wells and laying pipes.</h4>\n\n<h4 id=\"for-each-house-i-we-can-either-build-a-well-inside-it-directly-with-cost-wells-i-or-pipe-in-water-from-another-well-to-it-the-total-cost-to-lay-pipes-between-houses-is-given-by-the-array-pipes-where-pipes-i-house1-house2-cost-and-the-cost-represent-the-total-cost-connect-house1-and-house2-together-using-a-pipe\">For each house \u2018i\u2019, we can either build a well inside it directly with cost \u2018WELLS[i]\u2019, or pipe in water from another well to it. The total cost to lay pipes between houses is given by the array \u2018PIPES\u2019, where \u2018PIPES[i]\u2019 = \u2018[HOUSE1, HOUSE2, COST]\u2019 and the \u2018COST\u2019 represent the total cost connect \u2018HOUSE1\u2019 and \u2018HOUSE2\u2019 together using a pipe.</h4>\n\n<h4 id=\"note-given-all-the-connections-are-bidirectional\">Note: Given all the connections are bidirectional.</h4>\n\n<h4 id=\"for-example\">For Example:</h4>\n\n<pre><code>For \u2018N\u2019 = 3, \u2018WELLS[]\u2019 = \u2018[1,2,2]\u2019, \u2018PIPES[]\u2019 = [ [1, 2, 1], [2 , 3, 1]]. The image shows the costs of connecting houses using pipes. The best strategy is to build a well in the first house with cost 1 and connect the other houses to it with cost 2 so the total cost is 3.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/example-8758.jpg\" alt=\"img\"></p>\n\n<h4 id=\"ninja-wants-to-find-out-the-minimum-total-cost-to-supply-water-to-all-houses-in-the-village-can-you-help-the-ninja-to-find-out-this-minimum-cost\">Ninja wants to find out the minimum total cost to supply water to all houses in the village. Can you help the Ninja to find out this minimum cost?</h4>\n\n<h5 id=\"input-format\">Input Format</h5>\n\n<pre><code>The first line of input contains an integer &#39;T&#39; representing the number of test cases. Then the test cases follow.\n\nThe first line of each test case contains two integers \u2018N\u2019 and \u2018K\u2019 representing the number of Houses in the village and the size of \u2018PIPES\u2019 respectively.\n\nThe next line contains \u2018N\u2019 single space-separated integers denoting \u2018WELLS[i]\u2019.\n\nThe next \u2018K\u2019 line contains 3 single space-separated integers denoting \u2018PIPES[i][0]\u2019, \u2018PIPES[i][1]\u2019 and \u2018PIPES[i][2]\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print the minimum cost to supply water to all the houses in the village. \n\nThe output for each test case is printed in a separate line.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= N &lt;= 10 ^ 2\n0 &lt;= WELLS[i] &lt;= 10^5\n1 &lt;= K &lt;= 10000\n1 &lt;= PIPES[i][0], PIPES[i][1] &lt;= N\n0 &lt;= PIPES[i][2] &lt;= 10^5\nPIPES[i][0] != PIPES[i][1]\n\nWhere \u2018T\u2019 is the number of test cases, \u2018N\u2019 is the number of houses in the village, WELL[i]\u2019 denotes the cost of inserting a well at house \u2018i\u2019 and \u2018PIPES[i][0]\u2019, \u2018PIPES[i][1]\u2019 and \u2018PIPES[2]\u2019 represents the cost to connect house \u2018PIPES[i][0]\u2019 to \u2018PIPES[i][1]\u2019.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n4 2\n1 4 4 4\n1 4 2\n1 2 1\n3 3\n5 5 5\n1 2 80\n1 3 20\n2 3 90\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>8\n15    \n</code></pre>\n\n<h4 id=\"explanation-for-sample-output-1\">Explanation for Sample Output 1:</h4>\n\n<pre><code>For the first test case :\nSee the picture below for the output reference:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/st1-9135.PNG\" alt=\"img\"></p>\n\n<pre><code>The efficient way to supply water to all houses is to connect 0 with 1 and 0 with 2 and build a well at house 0 and 3. So the total cost will be 1 (well at house 0) + 4 (well at house 3) + 2 (connect 0 and 1) + 1 (connect 0 and 2) which is 8.\n\nFor the second test case :\nSee the picture below for the output reference:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/st2-9136.PNG\" alt=\"img\"></p>\n\n<pre><code>The efficient way to supply water to all houses is to make well at all the houses. So the total cost will be 5 (well at house 0) + 5 (well at house 1) + 5 (well at house 2) which is 15.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n2 1\n8 2\n1 2 1\n2 1\n1 1\n1 2 1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>3\n2\n</code></pre>\n\n<h4 id=\"explanation-for-sample-output-2\">Explanation for Sample Output 2:</h4>\n\n<pre><code>For the first test case:\nThe efficient way to supply water to all houses is to connect 1 with 2 and build a well at house 1. So the total cost will be 2 (well at house 1) + 1 (connect 1 and 2) Which is equal to 3.\n\nFor the second test case :\nThe efficient way to supply water to all houses is to connect 1 with 2 or build well at both of the houses. The answer will be the same for either case. Which is equal to 2.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 55,
            "dislikes": "NA",
            "rephrased": {
                "body": "There are N houses in a village, and Ninja wants to supply water to all of them.  He can either build a well in each house i at a cost of WELLS[i], or lay pipes to connect houses. The cost to lay pipes between houses is given in the PIPES array, where PIPES[i] = [HOUSE1, HOUSE2, COST].  This COST represents the cost to connect HOUSE1 and HOUSE2. All connections are bidirectional. The goal is to find the minimum total cost to supply water to all houses.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= N <= 100",
                    "0 <= WELLS[i] <= 100000",
                    "1 <= K <= 10000",
                    "1 <= PIPES[i][0], PIPES[i][1] <= N",
                    "0 <= PIPES[i][2] <= 100000",
                    "PIPES[i][0] != PIPES[i][1]",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "4 2\n1 4 4 4\n1 4 2\n1 2 1",
                        "output": "8",
                        "explanation": "Build a well at house 1 with cost 1 and connect the houses 2, 3 and 4 to house 1 with costs 1 and 2 respectively.  Also build a well at house 4 with cost 4. The total cost is 1 + 4 + 2 + 1 = 8."
                    },
                    {
                        "input": "3 3\n5 5 5\n1 2 80\n1 3 20\n2 3 90",
                        "output": "15",
                        "explanation": "The efficient way to supply water to all houses is to build wells at all the houses. So the total cost will be 5 (well at house 1) + 5 (well at house 2) + 5 (well at house 3) which is 15."
                    },
                    {
                        "input": "2 1\n8 2\n1 2 1",
                        "output": "3",
                        "explanation": "The efficient way to supply water to all houses is to connect 1 with 2 and build a well at house 2. So the total cost will be 2 (well at house 2) + 1 (connect 1 and 2) Which is equal to 3."
                    },
                    {
                        "input": "2 1\n1 1\n1 2 1",
                        "output": "2",
                        "explanation": "The efficient way to supply water to all houses is to connect 1 with 2 or build well at both of the houses. The answer will be the same for either case. Which is equal to 2."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you think of a solution that uses a minimum cost algorithm?</p>",
            "<p>Think of an algorithm that visits all the nodes at minimum cost.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Graph",
                "slug": "graph"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}