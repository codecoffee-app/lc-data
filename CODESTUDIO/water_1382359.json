{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 11685,
            "title": "Water ",
            "titleSlug": "water_1382359",
            "content": "<h4 id=\"you-are-given-an-array-arr-of-positive-integers-each-of-which-represents-the-number-of-liters-of-water-in-that-particular-bucket-we-have-to-make-the-liters-of-water-in-every-bucket-equal\">You are given an array &#39;ARR&#39; of positive integers, each of which represents the number of liters of water in that particular bucket, we have to make the liters of water in every bucket equal.</h4>\n\n<h4 id=\"we-are-allowed-to-do-two-types-of-operations-any-number-of-times\">We are allowed to do two types of operations any number of times:</h4>\n\n<h4 id=\"1-we-can-altogether-remove-a-bucket-from-the-sequence\">1. We can altogether remove a bucket from the sequence</h4>\n\n<h4 id=\"2-we-can-draw-some-water-from-a-bucket\">2. We can draw some water from a bucket</h4>\n\n<h4 id=\"we-have-to-tell-the-minimum-number-of-liters-removed-to-make-all-buckets-have-the-same-amount-of-water\">We have to tell the minimum number of liters removed to make all buckets have the same amount of water.</h4>\n\n<h4 id=\"for-example\">For example:</h4>\n\n<pre><code>Given \u2018N\u2019 = 4 and \u2018ARR\u2019 = [1, 1, 2, 2].\nThe answer will be 2, i.e., if we chose that all buckets should have 1 unit of water, we will have to throw 1 unit of water from buckets 3 and 4. Hence 2.\n</code></pre>\n\n<h4 id=\"input-format\">Input format:</h4>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases.\n\nThe first line of each test case contains a single integer &#39;N&#39;, where \u2018N\u2019 is the number of elements of the array.\n\nThe second line of each test case contains \u2018N\u2019 space-separated integers, denoting the array elements.\n</code></pre>\n\n<h4 id=\"output-format\">Output format:</h4>\n\n<pre><code>For each test case, print a single line containing a single integer denoting the minimum water we will have to throw.\n\nThe output of each test case will be printed in a separate line.\n</code></pre>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>You do not need to print anything; it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h4 id=\"constraints\">Constraints:</h4>\n\n<pre><code>1 &lt;= T &lt;= 5\n1 &lt;=  N &lt;= 2000\n1 &lt;= ARR[i] &lt;= 100\n\nWhere \u2018T\u2019 is the total number of test cases, and &#39;N\u2019 is the length of the array and \u2018ARR[ i ]\u2019 is array element at index \u2018i\u2019.\n\nTime limit: 1 sec.\n</code></pre>\n<h4 id=\"sample-input-1\">Sample Input 1:</h4>\n\n<pre><code>2\n4\n1 1 2 2\n3\n1 2 3\n</code></pre>\n\n<h4 id=\"sample-output-1\">Sample Output 1:</h4>\n\n<pre><code>2\n2\n</code></pre>\n\n<h4 id=\"explanation-of-the-sample-input-1\">Explanation of the Sample Input 1:</h4>\n\n<pre><code>For the first test case:\nThe answer will be 2, i.e., if we chose that all buckets should have 1 unit of water, we will have to throw 1 unit of water from buckets 3 and 4. Hence 2.\n\n\nFor the second test case:\nThe answer will be 2, i.e., if we chose that all buckets should have 2 units of water, then we will have to throw 1 unit of water from bucket 3 and discard bucket 1.\n</code></pre>\n\n<h4 id=\"sample-input-2\">Sample Input 2:</h4>\n\n<pre><code>2\n4\n1 1 1 1 \n6\n1 1 2 3 3 4\n</code></pre>\n\n<h4 id=\"sample-output-2\">Sample Output 2:</h4>\n\n<pre><code>0\n5\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 2,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array 'arr' of positive integers representing the water in each bucket, determine the minimum amount of water that needs to be removed to make all buckets contain the same amount of water. You can either remove an entire bucket or reduce the amount of water in a bucket. Return the minimum liters removed.",
                "constraints": [
                    "1 <= T <= 5",
                    "1 <= N <= 2000",
                    "1 <= ARR[i] <= 100"
                ],
                "testcases": [
                    {
                        "input": "n = 4, arr=[1, 1, 2, 2]",
                        "output": "2",
                        "explanation": "If we choose to make all buckets have 1 unit of water, we remove 1 unit from each of the buckets containing 2. Total removed = 1 + 1 = 2."
                    },
                    {
                        "input": "n = 3, arr=[1, 2, 3]",
                        "output": "2",
                        "explanation": "If we choose to make all buckets have 2 units of water, we remove 1 unit from the bucket containing 3, and remove the entire bucket containing 1. Total removed = 1."
                    },
                    {
                        "input": "n = 4, arr=[1, 1, 1, 1]",
                        "output": "0",
                        "explanation": "All buckets already have the same amount of water (1), so no water needs to be removed."
                    },
                    {
                        "input": "n = 6, arr=[1, 1, 2, 3, 3, 4]",
                        "output": "5",
                        "explanation": "If we make all buckets have 1 unit, we remove 1 from bucket 3, 2 from bucket 4, 2 from bucket 5 and 3 from bucket 6. Therefore total removal is 1+2+2+3 = 8. If we make all buckets have 2 unit, we remove all elements less than 2, remove 1 from buckets greater than 2. 0 + 0 + 0 + 1+1+2 = 4. If we make all buckets have 3 unit, we remove all elements less than 3, remove 0 from buckets greater than 3. 2 + 2+1 = 5. If we make all buckets have 4 unit, we remove all elements less than 4, remove 0 from buckets greater than 4. 3+3+2 = 8"
                    },
                    {
                        "input": "n = 5, arr=[5, 5, 5, 5, 5]",
                        "output": "0",
                        "explanation": "All buckets already have the same amount of water, so we return 0."
                    },
                    {
                        "input": "n = 2, arr=[10, 20]",
                        "output": "10",
                        "explanation": "We can make each bucket have 10 units by removing 10 units from the second bucket. or we can make each bucket have 20 units and remove the whole first bucket with 10 units. So minimum is 10."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>&nbsp;Does sorting help?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}