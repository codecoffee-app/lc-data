{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8325,
            "title": "Ways to arrange balls",
            "titleSlug": "ways-to-arrange-balls_845177",
            "content": "<h4 id=\"given-a-balls-of-type-a-b-balls-of-type-b-and-c-balls-of-type-c-you-need-to-find-the-total-number-of-ways-to-arrange-the-balls-in-a-straight-line-such-that-adjacent-balls-are-of-different-types\">Given \u2018a\u2019 balls of type \u2018A\u2019, \u2018b\u2019 balls of type \u2018B\u2019 and \u2018c\u2019 balls of type \u2018C\u2019. You need to find the total number of ways to arrange the balls in a straight line such that adjacent balls are of different types.</h4>\n\n<h4 id=\"in-other-words-find-the-total-ways-to-arrange-the-given-balls-in-such-a-way-that-no-two-balls-of-the-same-type-are-adjacent\">In other words, find the total ways to arrange the given balls in such a way that no two balls of the same type are adjacent.</h4>\n\n<h5 id=\"for-example\">For Example :</h5>\n\n<pre><code>Suppose we have 2 balls of type \u2018A\u2019, 1 ball of type \u2018B\u2019 and 1 ball of type \u2018C\u2019, following are the ways to arrange them in the required fashion. \nABCA\nABAC \nACBA \nACAB \nBACA \nCABA \nHence, there is a total of six ways.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases.\n\nThe first line of each test contains three space-separated positive integers a, b, c, denoting the number of balls of type \u2018A\u2019, \u2018B\u2019, and \u2018C\u2019 respectively.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print the total ways to arrange the balls such that adjacent balls are of a different type in a single line.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don\u2019t have to print anything, it has already been taken care of. Just complete the function. \n\nIf there is no way, return 0.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n0 &lt;= a, b, c &lt;= 15\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n1 2 1\n1 1 1\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>6\n6\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1 :</h5>\n\n<pre><code>Test Case 1: We have one ball of type A, two balls of type B and one ball of type C. All the possible arrangements such that no two adjacent balls are of the same type are shown below. \nABCB\nBACB\nBABC\nBCAB\nBCBA \nCBAB\n\nThese are all the six possible arrangements.\n\nTest Case 2: We have 1 ball of each type. All the possible arrangements are - \nABC\nACB\nBAC\nBCA\nCAB\nCBA\n\nThese are all six possible arrangements.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n4 5 3\n8 3 1\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>588\n0\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 11,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given three integers 'a', 'b', and 'c', representing the number of balls of type 'A', 'B', and 'C' respectively, determine the number of ways to arrange these balls in a straight line such that no two adjacent balls are of the same type.",
                "constraints": [
                    "1 <= T <= 100",
                    "0 <= a, b, c <= 15",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "a = 1, b = 2, c = 1",
                        "output": "6",
                        "explanation": "We have one ball of type A, two balls of type B and one ball of type C. All possible arrangements such that no two adjacent balls are of the same type are: ABCB, BACB, BABC, BCAB, BCBA, CBAB. There are six possible arrangements."
                    },
                    {
                        "input": "a = 1, b = 1, c = 1",
                        "output": "6",
                        "explanation": "We have 1 ball of each type. All possible arrangements are: ABC, ACB, BAC, BCA, CAB, CBA. There are six possible arrangements."
                    },
                    {
                        "input": "a = 4, b = 5, c = 3",
                        "output": "588",
                        "explanation": ""
                    },
                    {
                        "input": "a = 8, b = 3, c = 1",
                        "output": "0",
                        "explanation": ""
                    },
                    {
                        "input": "a = 2, b = 0, c = 0",
                        "output": "0",
                        "explanation": "Since we only have balls of type A, any arrangement will have adjacent balls of the same type."
                    },
                    {
                        "input": "a = 5, b = 5, c = 5",
                        "output": "17232",
                        "explanation": ""
                    },
                    {
                        "input": "a = 0, b = 1, c = 0",
                        "output": "0",
                        "explanation": "Only one type of ball present."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you do this recursively?&nbsp;</p>",
            "<p>Can you optimise the above approach? Try to memorize the subproblems.&nbsp;</p>",
            "<p>Initially, we were breaking the large problem into small problems but now, let us look at it in a different way. Let us solve the small problem first and then reach the final answer. Thus we will be using a bottom-up approach now.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}