{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 15489,
            "title": "Ways To Reach Goal",
            "titleSlug": "ways-to-reach-goal_2542084",
            "content": "<h4 id=\"a-virus-travels-on-a-positive-number-line-with-a-range-from-0-to-r-in-which-it-can-travel-only-in-the-left-or-right-direction-you-are-given-a-string-path-representing-the-sequence-of-moves-a-virus-can-move-your-task-is-to-find-the-number-of-distinct-subsequences-of-those-moves-that-lead-from-a-given-point-x-to-point-y-on-the-number-line-if-a-virus-is-present-at-position-p-then-moving-in-the-l-direction-will-take-it-to-the-p-1-position-whereas-moving-in-the-r-direction-will-take-it-to-the-p-1-position\">A virus travels on a positive number line with a range from 0 to \u2018R\u2019 in which it can travel only in the left or right direction. You are given a string \u2018PATH\u2019 representing the sequence of moves a virus can move. Your task is to find the number of distinct subsequences of those moves that lead from a given point \u2018X\u2019 to point \u2018Y\u2019 on the number line. If a virus is present at position \u2018P\u2019, then moving in the \u2018l\u2019 direction will take it to the \u2018P\u2019 - 1 position, whereas moving in the \u2018r\u2019 direction will take it to the \u2018P\u2019 + 1 position.</h4>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>Subsequences are created by deleting 0 or more characters from a sequence without changing the order.\n</code></pre>\n\n<h5 id=\"example\">Example:</h5>\n\n<pre><code>Let \u2018PATH\u2019 be: &quot;rrr&quot;\nLet \u2018X\u2019 = 1, \u2018Y\u2019 = 2, and \u2018R\u2019 = 10\nPaths are [&quot;r&quot;, &quot;r&quot;, &quot;r&quot;]. As we have to choose distinct subsequences, so the result is 1.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019, the number of test cases.\n\nThe first line of each test case contains a string \u2018PATH\u2019, representing the sequence of moves.\n\nThe second of each test case contains three space-separated integers \u2018X\u2019, \u2018Y\u2019, and \u2018R\u2019, representing the start position, end position, and the range of number line.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case, print a single integer representing the number of distinct subsequences modulo (10^9 + 7).\n\nPrint output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You do not need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= |PATH| &lt;= 10^3\n0 &lt;= X, Y &lt; R &lt;= 2500\n\n&#39;PATH&#39; contains only two characters &#39;r&#39; and &#39;l&#39;.\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\nrrlrlr\n1 2 10\nrrr\n1 2 10\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>7\n1\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1 :</h5>\n\n<pre><code>For test case 1: \nPaths are: [&quot;r&quot;, &quot;rlr&quot;, &quot;lrr&quot;, &quot;rrl&quot;, &quot;rlrlr&quot;, &quot;rrllr&quot;, &quot;rrlrl&quot;]\n\nFor test case 2: \nPaths are [&quot;r&quot;, &quot;r&quot;, &quot;r&quot;]. As we have to choose distinct subsequences, so the result is 1.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\nrrlr\n1 2 15\nrrrlrr \n0 0 7\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>3\n2\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 5,
            "dislikes": "NA",
            "rephrased": {
                "body": "A virus is navigating a number line from 0 to 'R'. It can only move left ('l') or right ('r'). Given a string 'PATH' representing possible moves, a starting position 'X', and an ending position 'Y', find the number of *distinct* subsequences of 'PATH' that allow the virus to travel from 'X' to 'Y'. Moving 'l' decreases position by 1, 'r' increases position by 1.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= |PATH| <= 10^3",
                    "0 <= X, Y < R <= 2500",
                    "'PATH' contains only two characters 'r' and 'l'."
                ],
                "testcases": [
                    {
                        "input": "path = \"rrlrlr\", x = 1, y = 2, r = 10",
                        "output": "7",
                        "explanation": "The distinct subsequences that lead from 1 to 2 are: [\"r\", \"rlr\", \"lrr\", \"rrl\", \"rlrlr\", \"rrllr\", \"rrlrl\"]"
                    },
                    {
                        "input": "path = \"rrr\", x = 1, y = 2, r = 10",
                        "output": "1",
                        "explanation": "The possible paths are [\"r\", \"r\", \"r\"]. As we need distinct subsequences, the answer is 1."
                    },
                    {
                        "input": "path = \"rrlr\", x = 1, y = 2, r = 15",
                        "output": "3",
                        "explanation": "The distinct subsequences that lead from 1 to 2 are: [\"r\", \"rlr\", \"rrl\"]"
                    },
                    {
                        "input": "path = \"rrrlrr\", x = 0, y = 0, r = 7",
                        "output": "2",
                        "explanation": "The distinct subsequences that lead from 0 to 0 are: [\"l\", \"rrlrr\"].  The subsequence 'l' cancels one 'r' and so on. Note that an empty subsequence might need to be considered, depending on the expected behavior when X==Y and PATH is empty/contains only 'l' and 'r' that cancel out. In this case, we don't have an empty path, and the distinct subsequences are \"l\", and \"rrlrr\". Another possible valid answer can be '1', it depends if we have to consider the empty string or not."
                    },
                    {
                        "input": "path = \"l\", x = 1, y = 0, r = 2",
                        "output": "1",
                        "explanation": "Only one subsequence \"l\" leads from 1 to 0."
                    },
                    {
                        "input": "path = \"r\", x = 0, y = 1, r = 2",
                        "output": "1",
                        "explanation": "Only one subsequence \"r\" leads from 0 to 1."
                    },
                    {
                        "input": "path = \"rl\", x = 1, y = 1, r = 2",
                        "output": "1",
                        "explanation": "Only one subsequence \"rl\" leads from 1 to 1."
                    },
                    {
                        "input": "path = \"\", x = 1, y = 1, r = 2",
                        "output": "1",
                        "explanation": "empty subsequence leads from 1 to 1."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to check for all the subsequences.</p>",
            "<p>Try to store the current position and last traversed direction.&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}