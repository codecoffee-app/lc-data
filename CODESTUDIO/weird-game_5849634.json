{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 22718,
            "title": "Weird Game",
            "titleSlug": "weird-game_5849634",
            "content": "<h4 id=\"ninja-and-his-friends-are-playing-a-weird-game-the-game-consists-of-n-levels-and-each-level-can-be-played-in-m-different-difficulty-modes\">Ninja and his friends are playing a weird game. The game consists of \u2018N\u2019 levels, and each level can be played in \u2018M\u2019 different difficulty modes.</h4>\n\n<h4 id=\"for-the-first-level-you-can-start-the-game-with-any-difficulty-mode-and-for-the-subsequent-levels-you-can-either-play-it-with-one-mode-lower-or-one-mode-above-or-equal-to-the-previous-difficulty-mode-i-e-if-you-played-the-ith-level-in-jth-mode-then-you-can-play-i-1th-level-in-either-j-1th-j-m-or-j-1th-j-1-or-jth-mode\">For the first level you can start the game with any difficulty mode and for the subsequent levels, you can either play it with one mode lower or one mode above or equal to the previous difficulty mode, i.e. If you played the ith level in jth mode, then you can play i+1th level in either j+1th (j &lt; M)  or j-1th (j &gt; 1) or jth mode.</h4>\n\n<h4 id=\"on-completion-of-each-level-player-is-awarded-some-points-based-on-the-difficulty-mode-he-played-the-level\">On completion of each level player is awarded some points based on the difficulty mode he played the level.</h4>\n\n<h4 id=\"points-awarded-in-the-ith-level-played-in-jth-difficulty-mode-will-be-points-i-j\">Points awarded in the ith level played in jth difficulty mode will be \u2018POINTS[i][j]\u2019.</h4>\n\n<h4 id=\"score-of-the-game-is-defined-as-the-sum-of-points-obtained-after-completion-of-each-level\">Score of the game is defined as the sum of points obtained after completion of each level.</h4>\n\n<h4 id=\"determine-the-maximum-score-a-player-can-get-if-he-optimally-plays-the-game\">Determine the maximum score a player can get if he optimally plays the game.</h4>\n\n<h4 id=\"you-can-start-the-game-with-any-difficulty-mode\">You can start the game with any difficulty mode.</h4>\n\n<h4 id=\"note-in-the-problem-statement-1-based-indexing-is-used-and-in-the-code-0-based-indexing-is-used\">Note: In the Problem Statement 1-based indexing is used and in the code 0-based indexing is used.</h4>\n\n<h5 id=\"example\">Example:</h5>\n\n<pre><code>Input: \u2018N\u2019 = 3  \u2018M\u2019 = 3  \u2018POINTS\u2019 = [ [ 1, 4, 3 ], [ 2, 9, 11 ], [ 6, 1, 1 ] ]  \n\nOutput: 19\n\nThe optimal strategy would be:-\nPlaying the first level in 2nd difficulty mode with 4 points.\nPlaying the second level in 2nd difficulty mode with 9 points.\nPlaying the third level in 1st difficulty mode with 6 points.\nSo we get a total score of 19 points.   \n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>First line contains \u2018T\u2019, denoting the number of test cases.    \n\nThe first line of each test case contains two integers, \u2018N\u2019 and \u2018M\u2019, denoting the number of       levels and the number of difficulty modes respectively.\n\nEach of the next \u2018N\u2019 lines contains \u2018M\u2019 single space-separated integers, elements of 2D array \u2018POINTS\u2019. \n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>Return the maximum score that can be obtained on completion of the game.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don&#39;t need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 100   \n1 &lt;= N, M &lt;= 100\n1 &lt;= POINTS[i][j] &lt;= 100\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n4 4\n1 3 1 2   \n1 2 5 4  \n10 7 6 9  \n2 1 7 5\n2 2\n1 1\n1 1\n</code></pre>\n\n<p>##### Sample Output 1 :</p>\n\n<pre><code>24\n2\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation Of Sample Input 1 :</h5>\n\n<pre><code>For the first test case:-\nThe optimal strategy would be:-\nPlating the first level in second difficulty mode with points 3.\nPlating the second level in third difficulty mode with points 5.\nPlating the third level in fourth difficulty mode with points 9.\nPlating the fourth level in third difficulty mode with points 7.\nSo total score will be 3 + 5 + 9 + 7 = 24.  \n\nFor the second test case:-\nPlaying in any order will land you with a score of 2.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2 \n5 4\n1 3 1 2  \n10 2 5 4  \n10 9 6 7  \n2 7 1 5  \n8 2 6 1\n3 3\n2 9 1\n7 5 5\n4 4 10 \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>38\n24\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 10,
            "dislikes": "NA",
            "rephrased": {
                "body": "A game consists of 'N' levels, each with 'M' difficulty modes. The player earns points based on the difficulty mode chosen for each level, represented by POINTS[i][j].  The player can start the first level at any difficulty. For subsequent levels, the difficulty mode can only be the same, one level higher (if possible), or one level lower (if possible) than the previous level.  Determine the maximum possible score achievable by playing the game optimally.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= N, M <= 100",
                    "1 <= POINTS[i][j] <= 100"
                ],
                "testcases": [
                    {
                        "input": "n = 4, m = 4, points = [[1, 3, 1, 2], [1, 2, 5, 4], [10, 7, 6, 9], [2, 1, 7, 5]]",
                        "output": "24",
                        "explanation": "The optimal strategy is: Level 1 - mode 2 (3 points), Level 2 - mode 3 (5 points), Level 3 - mode 4 (9 points), Level 4 - mode 3 (7 points). Total score: 3 + 5 + 9 + 7 = 24."
                    },
                    {
                        "input": "n = 2, m = 2, points = [[1, 1], [1, 1]]",
                        "output": "2",
                        "explanation": "Playing in any order results in a score of 2."
                    },
                    {
                        "input": "n = 5, m = 4, points = [[1, 3, 1, 2], [10, 2, 5, 4], [10, 9, 6, 7], [2, 7, 1, 5], [8, 2, 6, 1]]",
                        "output": "38",
                        "explanation": "Optimal path could be 3 + 5 + 9 + 7 + 6 = 30"
                    },
                    {
                        "input": "n = 3, m = 3, points = [[2, 9, 1], [7, 5, 5], [4, 4, 10]]",
                        "output": "24",
                        "explanation": "One optimal path is 9 + 5 + 10 = 24."
                    },
                    {
                        "input": "n = 3, m = 3, points = [[1, 4, 3], [2, 9, 11], [6, 1, 1]]",
                        "output": "19",
                        "explanation": "The optimal strategy is: Level 1 - mode 2 (4 points), Level 2 - mode 2 (9 points), Level 3 - mode 1 (6 points). Total score: 4 + 9 + 6 = 19."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Think of trying out all possibilities in which the game can be played and choose the one with the maximum score.</p>",
            "<p>Can you think of a way to optimize the recursive approach using memoization?</p>",
            "<p>Can you think of a way to optimize the recursive approach using tabulation?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}