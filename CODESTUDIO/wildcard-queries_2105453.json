{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 14295,
            "title": "Wildcard Queries",
            "titleSlug": "wildcard-queries_2105453",
            "content": "<h4 id=\"you-are-given-a-dictionary-d-consisting-of-n-words-each-word-of-the-dictionary-is-of-fixed-size-l-and-contains-only-lowercase-english-alphabets\">You are given a dictionary \u2018D\u2019 consisting of \u2018N\u2019 words. Each word of the dictionary is of fixed size \u2018L\u2019 and contains only lowercase English alphabets.</h4>\n\n<h4 id=\"now-you-have-to-answer-q-queries-in-each-query-you-are-given-a-word-w-of-fixed-size-l-but-this-word-can-consist-of-either-lowercase-english-alphabets-or-wildcard-characters-where-can-be-matched-by-any-lowercase-english-alphabet\">Now you have to answer \u2018Q\u2019 queries, in each query you are given a word \u2018W\u2019 of fixed size \u2018L\u2019 but this word can consist of either lowercase English alphabets or \u2018?\u2019 (wildcard characters). Where \u2018?\u2019 can be matched by any lowercase English alphabet.</h4>\n\n<h4 id=\"for-each-query-find-how-many-words-in-the-dictionary-can-be-matched-by-the-query-word-w-by-replacing-if-present-with-some-lowercase-english-alphabet\">For each query find how many words in the dictionary can be matched by the query word \u2018W\u2019 by replacing \u2018?\u2019(if present) with some lowercase English alphabet.</h4>\n\n<p>&nbsp</p>\n\n<h5 id=\"example\">Example :</h5>\n\n<pre><code>If the dictionary is: {&quot;cat&quot;, &quot;rat&quot;, &quot;bat&quot;, &quot;hat&quot;}\n\nAnd query words are &quot;?at&quot; and &quot;b?t&quot;, then:\n\n&quot;?at&quot; =&gt; can be matched by all the 4 dictionary words by replacing &#39;?&#39; with &#39;c&#39;, &#39;r&#39;, &#39;b&#39; or &#39;h&#39;.\n\n&quot;b?t&quot; =&gt; can only be matched by the dictionary word &quot;bat&quot; by replacing &#39;?&#39; with &#39;a&#39;.  \n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 denoting the number of test cases. Then each test case follows.\n\nThe first line of each test case contains two integers \u2018N\u2019 and \u2018L\u2019, where N denotes the number of words in the dictionary and L denotes the length of words in the dictionary and queries.\n\nThe next line contains N words each of size L, denoting the words in the dictionary.\n\nThe next line contains a single integer \u2018Q\u2019 denoting the number of queries.\n\nThe following Q lines, each contains a word \u2018W\u2019 of size L, denoting the query word.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>For each test case print Q integers in a separate line, each denoting the number of dictionary words that can be matched by the query word.\n\nOutput for each test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You are not required to print anything; it has already been taken care of. Just implement the function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= T &lt;= 10      \n1 &lt;= N &lt;= 100\n1 &lt;= L &lt;= 7\n1 &lt;= Q &lt;= 100\n1 &lt;= word.size &lt;= L\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n5 3\ncat\nmap\nbat\nman\npen\n4\n?at\nma?\n?a?\n??n\n1 5\naaaaa\n1\nbbbbb\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>2\n2\n4\n2\n0\n</code></pre>\n\n<h5 id=\"explanation-of-sample-output-1\">Explanation Of Sample Output 1 :</h5>\n\n<pre><code>For test case 1 :\nQuery1: \u201c?at\u201d matches with \u201ccat\u201d and \u201cbat\u201d\nQuery2: \u201cma?\u201d matches with \u201cmap\u201d and \u201cman\u201d\nQuery3: \u201c?a?\u201d matches with \u201ccat\u201d, \u201cbat\u201d, \u201cmap\u201d and \u201cman\u201d\nQuery4: \u201c??n\u201d matches with \u201cman\u201d and \u201cpen\u201d\n\nFor test case 2 :\nQuery1: \u201cbbbbb\u201d doesn\u2019t matches with any dictionary words\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n5 3\ncat\nmap\nbat\nman\npen\n4\ncat\nma?\n?a?\npen\n2 5\naaaaa\nbbbbb\n1\nbbbbb\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2 :</h5>\n\n<pre><code>1\n2\n4\n1\n1\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 1,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a dictionary of words, each of fixed length and consisting of lowercase English alphabets, and a set of queries. Each query is a word of the same fixed length as the dictionary words, but may contain wildcard characters ('?'). A wildcard character can be replaced by any lowercase English alphabet.  For each query, determine the number of words in the dictionary that can be matched by the query word. A word from the dictionary matches a query word if it's possible to replace the wildcard characters in the query word with lowercase English alphabets such that the resulting word is identical to the dictionary word.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 100",
                    "1 <= L <= 7",
                    "1 <= Q <= 100",
                    "1 <= word.size <= L"
                ],
                "testcases": [
                    {
                        "input": "n = 5, l = 3, dictionary = [\"cat\", \"map\", \"bat\", \"man\", \"pen\"], q = 4, query = [\"?at\", \"ma?\", \"?a?\", \"??n\"]",
                        "output": "[2, 2, 4, 2]",
                        "explanation": "Query1: \u201c?at\u201d matches with \u201ccat\u201d and \u201cbat\u201d\nQuery2: \u201cma?\u201d matches with \u201cmap\u201d and \u201cman\u201d\nQuery3: \u201c?a?\u201d matches with \u201ccat\u201d, \u201cbat\u201d, \u201cmap\u201d and \u201cman\u201d\nQuery4: \u201c??n\u201d matches with \u201cman\u201d and \u201cpen\u201d"
                    },
                    {
                        "input": "n = 1, l = 5, dictionary = [\"aaaaa\"], q = 1, query = [\"bbbbb\"]",
                        "output": "[0]",
                        "explanation": "Query1: \u201cbbbbb\u201d doesn\u2019t matches with any dictionary words"
                    },
                    {
                        "input": "n = 5, l = 3, dictionary = [\"cat\", \"map\", \"bat\", \"man\", \"pen\"], q = 4, query = [\"cat\", \"ma?\", \"?a?\", \"pen\"]",
                        "output": "[1, 2, 4, 1]",
                        "explanation": "Query1: \"cat\" matches with \"cat\"\nQuery2: \"ma?\" matches with \"map\" and \"man\"\nQuery3: \"?a?\" matches with \"cat\", \"map\", \"bat\", and \"man\"\nQuery4: \"pen\" matches with \"pen\""
                    },
                    {
                        "input": "n = 2, l = 5, dictionary = [\"aaaaa\", \"bbbbb\"], q = 1, query = [\"bbbbb\"]",
                        "output": "[1]",
                        "explanation": "Query1: \u201cbbbbb\u201d matches with \u201cbbbbb\u201d"
                    },
                    {
                        "input": "n = 3, l = 4, dictionary = [\"abcd\", \"efgh\", \"ijkl\"], q = 2, query = [\"a?cd\", \"ef?h\"]",
                        "output": "[1, 1]",
                        "explanation": "Query 1: \"a?cd\" matches with \"abcd\"\nQuery 2: \"ef?h\" matches with \"efgh\""
                    },
                    {
                        "input": "n = 2, l = 3, dictionary = [\"abc\", \"def\"], q = 1, query = [\"???\"]",
                        "output": "[2]",
                        "explanation": "Query 1: \"???\" matches both \"abc\" and \"def\""
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try generating all possible words that can be formed from the word given in the query.</p>",
            "<p>Which data structure is best known for storing dictionary words?&nbsp;</p>",
            "<p>Replacing \u2018?\u2019 in query words by lower case alphabet is time-consuming, think of other way around. Will replacing lower case alphabets of the words in the dictionary with a wildcard \u2018?\u2019 help?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Tries",
                "slug": "tries"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}