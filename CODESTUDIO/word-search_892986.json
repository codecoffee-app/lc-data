{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 8514,
            "title": "Word Search",
            "titleSlug": "word-search_892986",
            "content": "<h4 id=\"you-are-given-a-2d-board-n-rows-and-m-columns-of-characters-and-a-string-word\">You are given a 2D board(<em><strong>&#39;N&#39;</strong></em> rows and <em><strong>&#39;M&#39;</strong></em> columns) of characters and a string <em><strong>&#39;word&#39;</strong></em>.</h4>\n\n<p><br></p>\n\n<h4 id=\"your-task-is-to-return-true-if-the-given-word-exists-in-the-grid-else-return-false-the-word-can-be-constructed-from-letters-of-sequentially-adjacent-cells-where-adjacent-cells-are-horizontally-or-vertically-neighboring\">Your task is to return true if the given word exists in the grid, else return false. The word can be constructed from letters of sequentially adjacent cells, where adjacent cells are horizontally or vertically neighboring.</h4>\n\n<p><br></p>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>The same letter cell should not be used more than once.\n</code></pre>\n\n<h5 id=\"for-example\">For Example:</h5>\n\n<pre><code>For a given word \u201cdesign\u201d and the given 2D board \n[[q\u2019, \u2018v\u2019, \u2018m\u2019, \u2018h\u2019],\n [\u2018d\u2019, \u2018e\u2019, \u2018s\u2019, \u2018i\u2019],\n [\u2018d\u2019, \u2018g\u2019, \u2018f\u2019, \u2018g\u2019],\n [\u2018e\u2019, \u2018c\u2019, \u2018p\u2019, \u2018n\u2019]]\n\nThe word design can be formed by sequentially adjacent cells as shown by the highlighted color in the 2nd row and last column.\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/screenshot-76-5908-28481.png\" alt=\"board\"></p>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains a string &#39;word&#39;.\n\nThe second line of input contains two single space-separated integers &#39;N&#39; and &#39;M&#39; representing the number of rows and columns of the grid respectively.\n\nThe next &#39;N&#39; lines contain &#39;M&#39; single space-separated characters each representing the elements in a row of the matrix.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>The only line contains either \u201ctrue\u201d or \u201cfalse\u201d.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You do not need to print anything, it has already been taken care of. Just implement the function.\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>coding\n4 4\nc z k l\no d i a\nr g n m\nm r s d\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>true\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1:</h5>\n\n<pre><code>For the given word, and grid we can construct from letters of sequentially adjacent cells as shown below:\n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/screenshot-71-5907-28479.png\" alt=\"board\"></p>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>ninjas\n4 4\nc d k s\no d s i\nd g n j\ne r i n\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>false\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= N &lt;= 6\n1 &lt;= M &lt;= 6\n1 &lt;= |word| &lt;=20\n\nTime Limit: 1 sec\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 26,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a 2D board of characters (N rows and M columns) and a string 'word', determine if the 'word' exists in the grid. The word can be formed by sequentially adjacent cells (horizontally or vertically neighboring).  A cell cannot be used more than once in the formation of the word.",
                "constraints": [
                    "1 <= N <= 6",
                    "1 <= M <= 6",
                    "1 <= |word| <= 20",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "coding\n4 4\nc z k l\no d i a\nr g n m\nm r s d",
                        "output": "true",
                        "explanation": "The word 'coding' can be found in the grid by starting at (0, 0), then moving to (1, 0), (1, 1), (2, 2), (1, 2) and finally (3,3)"
                    },
                    {
                        "input": "ninjas\n4 4\nc d k s\no d s i\nd g n j\ne r i n",
                        "output": "false",
                        "explanation": "The word 'ninjas' cannot be formed by sequentially adjacent cells in the given grid without reusing cells."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Think of brute force and try to check for all the possibilities.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Matrices (2D Arrays)",
                "slug": "matrices-(2d-arrays)"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}