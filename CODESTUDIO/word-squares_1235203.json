{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10601,
            "title": "Word Squares",
            "titleSlug": "word-squares_1235203",
            "content": "<h4 id=\"given-a-set-of-words-without-duplicates-find-all-word-squares-you-can-build-from-them\">Given a set of words without duplicates, find all word squares you can build from them.</h4>\n\n<h4 id=\"a-sequence-of-words-forms-a-valid-word-square-if-the-kth-row-and-column-read-the-exact-same-string-where-0-k-max-num_rows-num_columns-you-can-return-word-square-in-any-order\">A sequence of words forms a valid word square if the Kth row and column read the exact same string, where 0 \u2264 K &lt; max(NUM_ROWS, NUM_COLUMNS). You can return word square in any order.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>1) All words will have the exact same length.\n2) Each word contains only lowercase English alphabet a-z.\n</code></pre>\n\n<h4 id=\"example\">Example:</h4>\n\n<pre><code>The word sequence [&quot;ball&quot;, &quot;area&quot;, &quot;lead&quot;, &quot;lady&quot;] forms a word square because each word reads the same both horizontally and vertically i.e.\nb a l l\na r e a\nl e a d\nl a d y\n</code></pre>\n\n<h5 id=\"input-format\">Input format:</h5>\n\n<pre><code>The first line of input contains an integer \u2018T\u2019 denoting the number of test cases. \n\nThe first line of every test case contains one integer \u2018N\u2019 where \u2018N\u2019 denotes the number of strings.\n\nThe second line of every test case contains \u2018N\u2019 space-separated strings.\n</code></pre>\n\n<h5 id=\"output-format\">Output format:</h5>\n\n<pre><code>For each test case, return all the valid word squares you can build from the string array.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>1) You do not need to print anything, it has already been taken care of. Just return all the valid word squares.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 10^3\n1 &lt;= |WORD| &lt;= 5\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>1\n5\nwall ball lead lady area  \n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>wall\narea\nlead\nlady\n\nball\narea\nlead\nlady\n</code></pre>\n\n<h5 id=\"explanation-1\">Explanation 1:</h5>\n\n<pre><code>For the first test case, \nThe output consists of two word squares. As it is evident from the \noutput that the kth row and the kth column contain the same \nword.The order of output does not matter just the order of words \nin each word square matters.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1\n4\nabat baba atan atal\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code> baba\n abat\n baba\n atan\n\n baba\n abat\n baba\n atal\n</code></pre>\n\n<h5 id=\"explanation-2\">Explanation 2:</h5>\n\n<pre><code>For the first test case, \nThe output consists of two word squares. As it is evident from the \noutput that the kth row and the kth column contain the same \nword. The order of output does not matter just the order of words \nin each word square matters.\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 2,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a list of unique words, construct all possible word squares that can be formed using these words. A word square is a sequence of words where the kth row and kth column read the same string for all 0 <= k < word.length().",
                "constraints": [
                    "1 <= Number of Test Cases <= 10",
                    "1 <= Number of words in a test case <= 1000",
                    "1 <= Length of each word <= 5"
                ],
                "testcases": [
                    {
                        "input": "n = 5, arr = [\"wall\", \"ball\", \"lead\", \"lady\", \"area\"]",
                        "output": "[\n [\"wall\", \"area\", \"lead\", \"lady\"],\n [\"ball\", \"area\", \"lead\", \"lady\"]\n]",
                        "explanation": "The word sequence [\"wall\", \"area\", \"lead\", \"lady\"] and [\"ball\", \"area\", \"lead\", \"lady\"] forms a word square because each word reads the same both horizontally and vertically."
                    },
                    {
                        "input": "n = 4, arr = [\"abat\", \"baba\", \"atan\", \"atal\"]",
                        "output": "[\n [\"baba\", \"abat\", \"baba\", \"atan\"],\n [\"baba\", \"abat\", \"baba\", \"atal\"]\n]",
                        "explanation": "The word sequence [\"baba\", \"abat\", \"baba\", \"atan\"] and [\"baba\", \"abat\", \"baba\", \"atal\"] forms a word square because each word reads the same both horizontally and vertically."
                    },
                    {
                        "input": "n = 3, arr = [\"abc\", \"bcd\", \"cde\"]",
                        "output": "[]",
                        "explanation": "No valid word square can be formed using the given words."
                    },
                    {
                        "input": "n = 1, arr = [\"a\"]",
                        "output": "[[\"a\"]]",
                        "explanation": "A single character forms a valid word square of size 1."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Solve this problem by first calculating the prefixes of each word and store them in HashMap. Then try to form a valid word square from every word present in the array(backtracking) using the Hashmap that we built.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Matrices (2D Arrays)",
                "slug": "matrices-(2d-arrays)"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}