{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9789,
            "title": "Write as you speak",
            "titleSlug": "write-as-you-speak_1090543",
            "content": "<h4 id=\"write-as-you-speak-is-a-special-sequence-of-strings-that-starts-with-string-1-and-after-one-iteration-you-rewrite-the-sequence-as-whatever-you-speak\">Write as you speak is a  special sequence of strings that starts with string \u201c1\u201d and after one iteration you rewrite the sequence as whatever you speak.</h4>\n\n<h5 id=\"example\">Example :</h5>\n\n<pre><code>The first few iterations of the sequence are :\nFirst iteration: \u201c1\u201d\n    As we are starting with one.\n\nSecond iteration: \u201c11\u201d\n    We speak \u201c1\u201d as   \u201cone 1\u201d then we write it as \u201c11\u201d\n\nThird iteration: \u201c21\u201d\n    We speak \u201c11\u201d as \u201cTwo 1\u201d then we write it as \u201c21\u201d\n\nFourth iteration: \u201c1211\u201d\n    We speak \u201c21\u201d as \u201cone 2, one 1\u201d  then we write it as \u201c1211\u201d\n\nFifth iteration: \u201c111221\u201d\n    We speak \u201c1211\u201d as \u201cone 1, one 2, two 1\u201d then we write it as \u201c111221\u201d\n\nSixth iteration: \u201c312211\u201d\n    We speak \u201c111221\u201d as \u201cthree 1, two 2, one 1\u201d then we write it as \u201c312211\u201d\n</code></pre>\n\n<h4 id=\"you-will-be-given-a-single-positive-integer-n-your-task-is-to-write-the-sequence-after-n-iterations\">You will be given a single positive integer N, Your task is to write the sequence after N iterations.</h4>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of the input contains a single positive integer T, denoting the number of test cases.\n\nThe first line of each test case contains a single integer N, denoting the number of iterations.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each query print the string that represents the sequence after the nth iteration.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You don&#39;t have to print anything, it has already been taken care of. Just Implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 10\n1 &lt;= N &lt;= 30\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n1\n2\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>1\n11\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-2\">Explanation For Sample Input 2:</h5>\n\n<pre><code>First iteration: \u201c1\u201d\n    As we are starting with one.\n\nSecond iteration: \u201c11\u201d\n    We speak \u201c1\u201d as   \u201cone 1\u201d then we write it as \u201c11\u201d\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n3\n4\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>21\n1211\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 20,
            "dislikes": "NA",
            "rephrased": {
                "body": "The 'Write as you speak' sequence starts with \"1\". Each subsequent iteration generates a new string by describing the previous one. For example, \"1\" becomes \"11\" (one 1), \"11\" becomes \"21\" (two 1s), and so on. Given a positive integer N, determine the sequence after N iterations.",
                "constraints": [
                    "1 <= T <= 10",
                    "1 <= N <= 30",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "1\n1",
                        "output": "1",
                        "explanation": null
                    },
                    {
                        "input": "1\n2",
                        "output": "11",
                        "explanation": null
                    },
                    {
                        "input": "2\n1\n2",
                        "output": "1\n11",
                        "explanation": null
                    },
                    {
                        "input": "2\n3\n4",
                        "output": "21\n1211",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Simulation</p>"
        ],
        "relatedTopics": [
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": [],
        "platform": "CODESTUDIO"
    }
}