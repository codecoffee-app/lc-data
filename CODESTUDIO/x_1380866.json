{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 11169,
            "title": "X",
            "titleSlug": "x_1380866",
            "content": "<h4 id=\"you-are-given-a-string-str-your-task-is-to-count-the-number-of-special-palindromic-substrings-of-size-greater-than-1-that-the-given-string-contains-a-substring-is-said-to-be-a-special-palindrome-in-the-following-two-cases\">You are given a string &#39;STR&#39;. Your task is to count the number of special palindromic substrings of size greater than 1 that the given string contains. A substring is said to be a special palindrome in the following two cases:</h4>\n\n<pre><code>If all the characters in the substring are the same.\n\nIf the length of the substring is odd and only the middle element is different, while all the other characters are the same. \n</code></pre>\n\n<h5 id=\"example\">Example:</h5>\n\n<pre><code>\u201caba\u201d is a special palindrome, while \u201cabaa\u201d is not\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains an integer \u2018T\u2019, which denotes the number of test cases or queries to be run. Then the test cases are as follows.\n\nThe first and the only line of each test case contains the string &#39;STR&#39;.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print the count of special palindromic substrings.\n\nPrint the output of each test case in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You don\u2019t need to print anything; It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= |STR| &lt;= 10000\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\nbcbc\nccddd\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>2\n4\n</code></pre>\n\n<h5 id=\"explanation-for-sample-input-1\">Explanation For Sample Input 1:</h5>\n\n<pre><code>In the first test case, \nThe special palindromic substrings in the given string are: bcb and cbc. Hence, the answer is 2 in this case.\n\nIn the second test case, \nThe special palindromic substrings in the string are: cc, dd, ddd and dd. Hence, the answer is 4 in this case. \n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\nabccdcdf\nbaabaab\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>3\n4\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -4,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string, your task is to count the number of special palindromic substrings of length greater than 1. A substring is considered a special palindrome if it meets one of the following conditions:\n\n1.  All characters in the substring are the same.\n2.  The substring has an odd length and only the middle character is different from all other characters.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= |STR| <= 10000",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "bcbc",
                        "output": "2",
                        "explanation": "The special palindromic substrings in the given string are: 'bcb' and 'cbc'. Therefore, the answer is 2."
                    },
                    {
                        "input": "ccddd",
                        "output": "4",
                        "explanation": "The special palindromic substrings in the string are: 'cc', 'dd', 'ddd' and 'dd'.  Therefore, the answer is 4."
                    },
                    {
                        "input": "abccdcdf",
                        "output": "3",
                        "explanation": null
                    },
                    {
                        "input": "baabaab",
                        "output": "4",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Can you think of checking each substring?</p>",
            "<p>Can you think of doing this by storing count of the continuous characters that are the same?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}