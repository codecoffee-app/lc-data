{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 22889,
            "title": "XOR DARE",
            "titleSlug": "xor-dare_6194825",
            "content": "<h4 id=\"ninja-and-his-friends-are-playing-a-truth-or-dare-game-ninja-has-chosen-dare-and-his-friends-have-given-him-a-problem-to-solve-now-ninja-is-unable-to-solve-the-problem-so-he-asks-for-your-help\">Ninja and his friends are playing a truth or dare game. Ninja has chosen dare, and his friends have given him a problem to solve. Now ninja is unable to solve the problem, so he asks for your help.</h4>\n\n<h4 id=\"in-the-problem-you-are-given-an-integer-array-arr-consisting-of-n-elements-and-an-integer-number-k\">In the problem, you are given an integer array \u2018ARR\u2019 consisting of \u2018N\u2019 elements and an integer number \u2018K\u2019.</h4>\n\n<h4 id=\"you-need-to-find-the-maximum-possible-strength-among-all-the-subsets-of-array-arr\">You need to find the maximum possible strength among all the subsets of array \u2018ARR\u2019.</h4>\n\n<h4 id=\"the-strength-of-a-set-of-elements-is-bitwise-xor-of-all-the-elements-present-in-the-set-and-k\">The strength of a set of elements is bitwise XOR of all the elements present in the set and \u2018K\u2019.</h4>\n\n<h4 id=\"note-for-an-empty-subset-you-can-consider-the-xor-of-its-elements-as-0\">Note: For an empty subset, You can consider the XOR of its elements as  0.</h4>\n\n<h5 id=\"example\">Example:</h5>\n\n<pre><code>Input: \u2018N\u2019 = 3  \u2018ARR\u2019 = [1, 2, 3]  \u2018K\u2019 = 4\n\nOutput: 7\n\nThe subset [3] has the maximum possible value, which is equal to 3 XOR 4 = 7\n</code></pre>\n\n<h5 id=\"input-format\">Input Format :</h5>\n\n<pre><code>The first line contains \u2018T\u2019,  denoting the number of test cases.\n\nThe first line of each test case contains two space-separated integers, \u2018N\u2019 and \u2018K\u2019.\n\nThe second line of each test case contains \u2018N\u2019 space-separated integers denoting the          array \u2018ARR\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format :</h5>\n\n<pre><code>Return the maximum possible strength possible among all the subsets of array \u2018ARR\u2019.\n</code></pre>\n\n<h5 id=\"note\">Note :</h5>\n\n<pre><code>You don&#39;t need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints :</h5>\n\n<pre><code>1 &lt;= N &lt;= 1000\n0 &lt;= ARR[i] &lt;=1000 for \u2018i\u2019 in range 0 to N-1\n0 &lt;= K &lt;= 1000\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1 :</h5>\n\n<pre><code>2\n4 3\n5 4 1 2\n3 8\n1 2 8\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1 :</h5>\n\n<pre><code>7\n11\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of sample input 1 :</h5>\n\n<pre><code>For the first test case:\nThe subset [3] will produce maximum strength of ( 3 XOR  4 ) = 7\n\nFor the second test case:\nThe subset  [ 1, 2 ] will produce maximum strength of ( 1 XOR 2 XOR 8 ) = 11 \n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2 :</h5>\n\n<pre><code>2\n2\n4 3\n3 3 3 3\n3 7\n1 2 8\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>3\n15\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -10,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array 'ARR' of 'N' integers and an integer 'K', find the maximum possible strength among all subsets of 'ARR'. The strength of a subset is the bitwise XOR of all its elements XORed with 'K'. Note that the XOR of an empty subset is considered 0.",
                "constraints": [
                    "1 <= N <= 1000",
                    "0 <= ARR[i] <= 1000 for \u2018i\u2019 in range 0 to N-1",
                    "0 <= K <= 1000",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "4 3\n5 4 1 2",
                        "output": "7",
                        "explanation": "Considering all subsets, the maximum strength is achieved by choosing the subset [4]. (4 XOR 3) = 7"
                    },
                    {
                        "input": "3 8\n1 2 8",
                        "output": "11",
                        "explanation": "Considering all subsets, the maximum strength is achieved by choosing the subset [1,2]. (1 XOR 2 XOR 8) = 11"
                    },
                    {
                        "input": "4 3\n3 3 3 3",
                        "output": "3",
                        "explanation": "Considering all subsets, the maximum strength is achieved by the empty subset. (0 XOR 3) = 3"
                    },
                    {
                        "input": "3 7\n1 2 8",
                        "output": "15",
                        "explanation": "The subset containing elements [1, 2, 8] gives the maximum strength: 1 XOR 2 XOR 8 XOR 7 = 14. The subset containing only element 8 give value 8 XOR 7 = 15."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try all the possible subsets</p>",
            "<p>&nbsp; Can you optimise the recursive approach with the help of memoization?&nbsp;</p>",
            "<p><strong>&nbsp;</strong>Can you think of a way to optimise the recursive approach using tabulation?</p><p>&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}