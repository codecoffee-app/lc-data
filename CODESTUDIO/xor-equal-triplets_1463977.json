{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 12524,
            "title": "Xor Equal Triplets",
            "titleSlug": "xor-equal-triplets_1463977",
            "content": "<h4 id=\"you-are-given-an-array-list-arr-consisting-of-n-positive-integers-your-task-is-to-return-the-number-of-triplets-i-j-k-where-i-j-k-are-three-indices-of-arr-such-that\">You are given an array/list \u2018ARR\u2019 consisting of \u2018N\u2019 positive integers.  Your task is to return the number of triplets (i, j, k),   where \u2018i\u2019, \u2018j\u2019, \u2018k\u2019 are three indices of \u2018ARR\u2019 such that -:</h4>\n\n<h4 id=\"1-0-i-j-k-n\">1.  0 &lt;= \u2018i\u2019 &lt; \u2018j\u2019 &lt;= \u2018k\u2019 &lt; \u2018N\u2019 .</h4>\n\n<h4 id=\"2-arr-i-arr-i-1-arr-j-1-arr-j-arr-j-1-arr-k-i-e-bitwise-xor-of-all-integers-in-subarray-of-arr-between-index-i-and-j-1-inclusive-should-equals-to-bitwise-xor-of-all-integers-in-subarray-of-arr-between-index-j-and-k-inclusive\">2. ARR[i] ^ ARR[i + 1] ^ ... ^ ARR[j - 1]  =  ARR[j] ^ ARR[j + 1] ^ ... ^ ARR[k]  i.e bitwise xor of all integers in subarray of \u2018ARR\u2019 between index \u2018i\u2019 and \u2018j-1\u2019 inclusive, should equals to bitwise xor of all integers in subarray of \u2018ARR\u2019 between index \u2018j\u2019 and \u2018k\u2019 inclusive.</h4>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>1. Consider 0 based indexing in \u2018ARR\u2019.\n2. Symbol ^ denotes the bitwise-xor operation.\n3. Xor of subarray having a single integer is that integer itself.\n4. It is guaranteed that the number of such triples fit in a 32 bit integer.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains a single integer \u2018T\u2019 representing the number of test cases. \n\nThe first line of each test case will contain a single integer \u2018N\u2019, representing the size of \u2018ARR\u2019 \n\nThe second line of each test case will contain \u2018N\u2019 space-separated integers representing array/list \u2018ARR\u2019.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>For each test case, print a single integer that represents the number of such triplets.\n\nOutput for every test case will be printed in a separate line.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You don\u2019t need to print anything; It has already been taken care of.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 50\n2 &lt;= N &lt;= 10000\n1 &lt;= ARR[i] &lt;= 2^31 - 1\n\nTime limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n2\n1 1\n5\n2 3 1 6 7\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>1\n4\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of sample input 1:</h5>\n\n<pre><code>In the first test case, There is one such triplet (0, 1, 1). Note xor of subarray having a single integer is that integer itself.\n\nIn the second test case, The triplets are (0,1,2), (0,2,2), (2,3,4) and (2,4,4).\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n5\n2 2 2 2 2\n2\n4 6\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>10\n0\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": -6,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of positive integers, find the number of triplets (i, j, k) such that 0 <= i < j <= k < N and the XOR of the subarray from i to j-1 equals the XOR of the subarray from j to k. Note that XOR of a single element subarray is the element itself.",
                "constraints": [
                    "1 <= T <= 50",
                    "2 <= N <= 10000",
                    "1 <= ARR[i] <= 2^31 - 1",
                    "Time limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "2\n2\n1 1\n5\n2 3 1 6 7",
                        "output": "1\n4",
                        "explanation": "Case 1: N=2, ARR=[1, 1]. The triplet (0, 1, 1) satisfies the condition: ARR[0] = ARR[1] i.e., 1 = 1.\nCase 2: N=5, ARR=[2, 3, 1, 6, 7].\nThe triplets are (0,1,2), (0,2,2), (2,3,4) and (2,4,4) which satisfy ARR[i] ^ ARR[i+1] ^ ... ^ ARR[j-1] == ARR[j] ^ ARR[j+1] ^ ... ^ ARR[k]."
                    },
                    {
                        "input": "2\n5\n2 2 2 2 2\n2\n4 6",
                        "output": "10\n0",
                        "explanation": "Case 1: N=5, ARR=[2, 2, 2, 2, 2]. All the array elements are same, hence the sub-arrays would have XOR value as per their lengths. And we need to find equal XOR for two sub-arrays from \u2018i\u2019 to \u2018j-1\u2019 and from \u2018j\u2019 to \u2018k\u2019. This will give 10 triplets.\nCase 2: N=2, ARR=[4, 6]. No triplets satisfy the condition."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try out all possible ways of selecting three indices.</p>",
            "<p>Xor of two equal integers is 0 and vice versa.</p>",
            "<p>Can you optimize the previous approach by store prefix xor in the hash map?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}