{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 2030,
            "title": "Yogesh And Primes",
            "titleSlug": "yogesh-and-primes_16331",
            "content": "<h4 id=\"yogesh-is-a-very-intelligent-student-and-is-interested-in-research-in-machine-learning-domain-his-college-has-only-one-professor-mr-peter-working-in-that-field-he-approaches-the-professor-for-the-same-but-professor-wants-to-test-him-first\">Yogesh is a very intelligent student and is interested in research in Machine Learning domain. His college has only one professor, Mr. Peter working in that field. He approaches the professor for the same, but professor wants to test him first.</h4>\n\n<h4 id=\"to-pass-the-test-yogesh-must-answer-q-questions-correctly-in-all-the-q-questions-professor-gives-him-three-positive-integers-a-b-and-k-where-a-b\">To pass the test Yogesh must answer Q questions correctly. In all the Q questions, professor gives him three positive integers : A, B and K where A \u2264 B.</h4>\n\n<h4 id=\"now-yogesh-has-to-find-an-integer-p-such-that-it-is-closest-to-integer-a-and-there-are-at-least-k-prime-numbers-in-range-a-p-where-a-p-b\">Now Yogesh has to find an integer P such that it is closest to integer A and there are at least K prime numbers in range [A, P], where A &lt;= P &lt;= B.</h4>\n\n<h4 id=\"help-yogesh-to-find-and-print-minimum-possible-p-or-print-1-if-there-no-such-possible-integer\">Help Yogesh to find and print minimum possible P or print -1 if there no such possible integer.</h4>\n\n<h4 id=\"note-a-prime-number-is-a-natural-number-greater-than-1-that-has-no-positive-divisors-other-than-1-and-itself\">Note: A prime number is a natural number greater than 1 that has no positive divisors other than 1 and itself.</h4>\n\n<h5 id=\"input-format\">Input format :</h5>\n\n<pre><code>The first line of input contains one positive integer Q. \nThe following Q lines contains three spaced-separated integers A, B and K.\n</code></pre>\n\n<h5 id=\"output-format\">Output format :</h5>\n\n<pre><code>For each query, print the answer in a new line, if it exists, else print \u22121.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1\u2264Q\u2264100,000\n1\u2264A\u2264B\u22641,000,000\n1\u2264K\u22641,000,000\nA\u2264P\u2264B\n</code></pre>\n<h5 id=\"sample-input\">Sample Input :</h5>\n\n<pre><code>5\n2 5 1\n2 5 2\n4 12 2\n3 17 7\n5 5 1\n</code></pre>\n\n<h5 id=\"sample-output\">Sample Output :</h5>\n\n<pre><code>2\n3\n7\n-1\n5\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 367,
            "dislikes": "NA",
            "rephrased": {
                "body": "Yogesh, an intelligent student interested in Machine Learning research, is given a test by Professor Peter. To pass, Yogesh must correctly answer Q questions. Each question presents three positive integers: A, B, and K, where A \u2264 B. Yogesh needs to find the smallest integer P such that A \u2264 P \u2264 B and the number of prime numbers within the range [A, P] (inclusive) is at least K. Help Yogesh find the minimum possible P, or indicate if no such P exists.",
                "constraints": [
                    "1 \u2264 Q \u2264 100,000",
                    "1 \u2264 A \u2264 B \u2264 1,000,000",
                    "1 \u2264 K \u2264 1,000,000",
                    "A \u2264 P \u2264 B"
                ],
                "testcases": [
                    {
                        "input": "5\n2 5 1\n2 5 2\n4 12 2\n3 17 7\n5 5 1",
                        "output": "2\n3\n7\n-1\n5",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "cpp",
                "full_func": "#include <bits/stdc++.h>\r\n\r\n#define MAX 1000001\r\n#define ll long long int\r\n#define pb push_back\r\nusing namespace std;\r\n\r\nstruct PrimeNum\r\n{\r\n\tbool primes[MAX];\r\n\tvector <int> p;\r\n\tPrimeNum()\r\n\t{\r\n\t\tfor (int i = 3; i < MAX; i += 2) {\r\n\t\t\tprimes[i] = 1;\r\n\t\t}\r\n\r\n\t\tprimes[2] = 1;\r\n\r\n\t\tfor (int i = 4; i < MAX; i += 2) {\r\n\t\t\tprimes[i] = 0;\r\n\t\t}\r\n\r\n\t\tprimes[0] = primes[1] = 0;\r\n\r\n\t\tfor (int i = 3; i * i < MAX; i += 2)\r\n\t\t{\r\n\t\t\tif (primes[i]) {\r\n\t\t\t\tfor (int j = i * i; j < MAX; j += 2 * i) {\r\n\t\t\t\t\tprimes[j] = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tp.pb(2);\r\n\r\n\t\tfor (int i = 3; i < MAX; i += 2) {\r\n\t\t\tif (primes[i]) {\r\n\t\t\t\tp.pb(i);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tbool isPrime(int x)\r\n\t{\r\n\t\treturn primes[x];\r\n\t}\r\n\r\n\tvector<int> getPrimes()\r\n\t{\r\n\t\treturn p;\r\n\t}\r\n};\r\n\r\nint pre[MAX];\r\n\r\nint main()\r\n{\r\n\tPrimeNum px;\r\n\tpre[0] = pre[1] = 0;\r\n\tint i;\r\n\tfor (i = 2; i < MAX; i++)\r\n\t{\r\n\t\tpre[i] = pre[i - 1];\r\n\t\tif (px.isPrime(i)) {\r\n\t\t\tpre[i] = pre[i] + 1;\r\n\t\t}\r\n\t}\r\n\tint t, a, b, k, lo, mid, hi, ans;\r\n\tcin >> t;\r\n\twhile (t--)\r\n\t{\r\n\t\tcin >> a >> b >> k;\r\n\t\tlo = a; hi = b; ans = -1;\r\n\t\twhile (lo <= hi)\r\n\t\t{\r\n\t\t\tmid = (lo + hi) >> 1;\r\n\t\t\tif (pre[mid] - pre[a - 1] >= k)\r\n\t\t\t{\r\n\t\t\t\tans = mid;\r\n\t\t\t\thi = mid - 1;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tlo = mid + 1;\r\n\t\t}\r\n\t\tcout << ans << endl;\r\n\t}\r\n}",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "java",
                "full_func": "import java.util.*;\r\nimport java.io.BufferedReader;\r\nimport java.io.InputStreamReader;\r\n\r\nclass Solution {\r\n\tpublic static void main(String args[] ) throws Exception {\r\n\t\tint MAX = 1000001;\r\n\t\tboolean[] primes = new boolean[1000001];\r\n\t\tint i, j;\r\n\t\tprimes[0] = primes[1] = false;\r\n\t\tfor (i = 2; i < MAX; i++)\r\n\t\t\tprimes[i] = true;\r\n\t\tfor (i = 4; i < MAX; i += 2)\r\n\t\t\tprimes[i] = false;\r\n\t\tfor (i = 3; i * i < MAX; i += 2) {\r\n\t\t\tif (primes[i]) {\r\n\t\t\t\tfor (j = i * i; j < MAX; j += 2 * i) {\r\n\t\t\t\t\tprimes[j] = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tint[] pre = new int[1000001];\r\n\t\tpre[0] = pre[1] = 0;\r\n\t\tfor (i = 2; i < MAX; i++) {\r\n\t\t\tpre[i] = pre[i - 1];\r\n\t\t\tif (primes[i])\r\n\t\t\t\tpre[i] = pre[i] + 1;\r\n\t\t}\r\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\r\n\t\tString line = br.readLine();\r\n\t\tint A, B, K;\r\n\t\tint q = Integer.parseInt(line);\r\n\t\tfor (i = 0; i < q; i++) {\r\n\t\t\tString[] s1 = br.readLine().split(\" \");\r\n\t\t\tA = Integer.parseInt(s1[0]);\r\n\t\t\tB = Integer.parseInt(s1[1]);\r\n\t\t\tK = Integer.parseInt(s1[2]);\r\n\t\t\tint ans = -1, lo = A, mid, hi = B;\r\n\t\t\twhile (lo <= hi) {\r\n\t\t\t\tmid = (lo + hi) >> 1;\r\n\t\t\t\tif (pre[mid] - pre[A - 1] >= K) {\r\n\t\t\t\t\tans = mid;\r\n\t\t\t\t\thi = mid - 1;\r\n\t\t\t\t} else\r\n\t\t\t\t\tlo = mid + 1;\r\n\t\t\t}\r\n\t\t\tSystem.out.println(ans);\r\n\t\t}\r\n\r\n\t}\r\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "python",
                "full_func": "\r\nMAX = 1000001\r\n\r\nclass PrimeNum:\r\n\r\n    def __init__(self):\r\n        self.primes = [0] * MAX\r\n        self.p = []\r\n        \r\n        for i in range(3,MAX,2):\r\n            self.primes[i] = 1\r\n\r\n        self.primes[2] = 1\r\n\r\n        for i in range(4,MAX,2):\r\n            self.primes[i] = 0\r\n        \r\n        self.primes[0] = 0\r\n        self.primes[1] = 0\r\n\r\n        i = 3\r\n        while i*i<MAX:\r\n\r\n            if self.primes[i]==1:\r\n                j = i*i\r\n                \r\n                while j < MAX:\r\n                    self.primes[j] = 0\r\n                    j = j + 2*i\r\n\r\n            i = i+2 \r\n        \r\n        self.p.append(2)\r\n        for i in range(3,MAX):\r\n            if self.primes[i] == 1:\r\n                self.p.append(i)\r\n\r\n    def isPrime(self,x):\r\n        return self.primes[x]\r\n\r\n    def getPrimes(self):\r\n        return self.p\r\n    \r\npre = [0] * MAX\r\n\r\npx = PrimeNum()\r\n\r\nfor i in range(2,MAX):\r\n\r\n    pre[i] = pre[i-1]\r\n\r\n    if px.isPrime(i):\r\n        pre[i] = pre[i] + 1\r\n    \r\nt = int(input())\r\n\r\nfor i in range(t):\r\n\r\n    a,b,k = list(map(int, input().split()))\r\n\r\n    lo = a \r\n    hi = b\r\n    ans = -1\r\n\r\n    while lo <= hi:\r\n\r\n        mid = (lo + hi)//2\r\n        if (pre[mid] - pre[a-1]) >= k:\r\n            ans =mid\r\n            hi = mid -1\r\n\r\n        else:\r\n            lo = mid + 1\r\n\r\n    print(ans) ",
                "lang_text": "py"
            }
        },
        "platform": "CODESTUDIO"
    }
}