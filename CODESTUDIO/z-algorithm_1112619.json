{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 9958,
            "title": "Z Algorithm ",
            "titleSlug": "z-algorithm_1112619",
            "content": "<h4 id=\"you-re-given-a-string-s-of-length-n-and-a-string-p-of-length-m-your-task-is-to-find-the-number-of-occurrences-of-p-in-s-in-linear-time\">You\u2019re given a string S of length N and a string P of length M. Your task is to find the number of occurrences of P in S in linear time.</h4>\n\n<h5 id=\"for-example\">For example:</h5>\n\n<pre><code>If S = &quot;ababa&quot;, and P = &quot;ab&quot;, then &quot;ab&quot; occurs twice in &quot;ababa&quot;.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>The string only consists of lowercase English alphabets.\n</code></pre>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line of input contains T, the number of test cases.\n\nThe first line of each test case contains two integers N and M, the length of string S and P respectively.\n\nThe second line of each test case contains the string S.\n\nThe third line of each test case contains the string P.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>The only line of output of each test case should contain an integer denoting the number of occurrences of P in S.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You don\u2019t need to print anything. It has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= T &lt;= 100\n1 &lt;= N, M &lt;= 10^4\n\nTime Limit: 1 sec\n</code></pre>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2\n5 2\nababa\nab\n4 10\ncodercodes\ncode\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>2\n2\n</code></pre>\n\n<h5 id=\"explanation-of-sample-input-1\">Explanation of Sample Input 1:</h5>\n\n<pre><code>In the 1st testcase,\n&quot;ab&quot; occurs two times in &quot;ababa&quot;. The first occurrence is from position 1 to position 2 and the second occurrence is from position 4 to position 5.\n\nIn the 2nd testcase, \n&quot;code&quot; occurs two times in &quot;codercodes&quot;. The first occurrence is from position 1 to position 4 and the second occurrence is from position 6 to position 9.\n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>2\n7 3\naababba\naba\n6 2\nzzzzyz\nzz   \n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>1\n3\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 20,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string `S` of length `N` and a pattern string `P` of length `M`, determine the number of times `P` occurs as a substring within `S`. Implement a function to achieve this in linear time.  The strings consist of lowercase English alphabets.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= N, M <= 10^4",
                    "Time Limit: 1 sec"
                ],
                "testcases": [
                    {
                        "input": "n = 5, m = 2, s = \"ababa\", p = \"ab\"",
                        "output": "2",
                        "explanation": "\"ab\" occurs twice in \"ababa\". The first occurrence is from position 1 to position 2 and the second occurrence is from position 4 to position 5."
                    },
                    {
                        "input": "n = 4, m = 10, s = \"codercodes\", p = \"code\"",
                        "output": "2",
                        "explanation": "\"code\" occurs two times in \"codercodes\". The first occurrence is from position 1 to position 4 and the second occurrence is from position 6 to position 9."
                    },
                    {
                        "input": "n = 7, m = 3, s = \"aababba\", p = \"aba\"",
                        "output": "1",
                        "explanation": "\"aba\" occurs once in \"aababba\"."
                    },
                    {
                        "input": "n = 6, m = 2, s = \"zzzzyz\", p = \"zz\"",
                        "output": "3",
                        "explanation": "\"zz\" occurs three times in \"zzzzyz\"."
                    },
                    {
                        "input": "n = 5, m = 5, s = \"abcde\", p = \"fghij\"",
                        "output": "0",
                        "explanation": "The pattern \"fghij\" does not occur in \"abcde\"."
                    },
                    {
                        "input": "n = 5, m = 1, s = \"aaaaa\", p = \"a\"",
                        "output": "5",
                        "explanation": "\"a\" occurs five times in \"aaaaa\"."
                    },
                    {
                        "input": "n = 10, m = 3, s = \"ababababab\", p = \"aba\"",
                        "output": "4",
                        "explanation": "\"aba\" occurs four times in \"ababababab\"."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Brute Force</p>",
            "<p>Z Algorithm</p>"
        ],
        "relatedTopics": [
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "solutions": {},
        "platform": "CODESTUDIO"
    }
}