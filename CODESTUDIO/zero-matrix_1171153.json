{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 10190,
            "title": "Zero Matrix",
            "titleSlug": "zero-matrix_1171153",
            "content": "<p>You are given a matrix &#39;MATRIX&#39; of dimension &#39;N&#39; x &#39;M&#39;. Your task is to make all the elements of row &#39;i&#39; and column &#39;j&#39; equal to 0 if any element in the ith row or jth column of the matrix is 0.</p>\n\n<h4 id=\"note\">Note:</h4>\n\n<pre><code>1) The number of rows should be at least 1.\n\n2) The number of columns should be at least 1.\n\n3) For example, refer to the below matrix illustration: \n</code></pre>\n\n<p><img src=\"https://files.codingninjas.in/zero-8066.png\" alt=\"altImage\"></p>\n\n<h5 id=\"input-format\">Input Format:</h5>\n\n<pre><code>The first line contains two space-separated integers, &#39;N&#39; and &#39;M&#39;, as described in the problem statement.\n\nThe next &#39;N&#39; lines contain &#39;M&#39; integers separated by spaces describing rows of the matrix.\n</code></pre>\n\n<h5 id=\"output-format\">Output Format:</h5>\n\n<pre><code>Return &#39;N&#39; rows consisting of &#39;M&#39; integers representing the matrix.\n</code></pre>\n\n<h5 id=\"note\">Note:</h5>\n\n<pre><code>You don&#39;t need to print anything, it has already been taken care of. Just implement the given function.\n</code></pre>\n\n<h5 id=\"constraints\">Constraints:</h5>\n\n<pre><code>1 &lt;= N &lt;= 100\n1 &lt;= M &lt;= 100\n-10^9 &lt;= MATRIX[i][j] &lt;= 10^9\n\nWhere &#39;MATRIX[i][j]&#39; denotes the matrix element.\n</code></pre>\n\n<h4 id=\"follow-up\">Follow Up:</h4>\n\n<pre><code>Can you solve it with the space complexity of O(1)?\n\nTime limit: 1 sec\n</code></pre>\n\n<p><br/></p>\n<h5 id=\"sample-input-1\">Sample Input 1:</h5>\n\n<pre><code>2 3\n2 4 3\n1 0 0\n</code></pre>\n\n<h5 id=\"sample-output-1\">Sample Output 1:</h5>\n\n<pre><code>2 0 0 \n0 0 0 \n</code></pre>\n\n<h5 id=\"sample-input-2\">Sample Input 2:</h5>\n\n<pre><code>1 1 \n5\n</code></pre>\n\n<h5 id=\"sample-output-2\">Sample Output 2:</h5>\n\n<pre><code>5 \n</code></pre>\n\n<p><br/></p>\n\n<h4 id=\"hints\">Hints:</h4>\n\n<pre><code>1. Think about how to identify the rows and columns containing a &#39;0&#39; element and then modify the matrix accordingly to make all elements in those rows and columns equal to 0.\n2. You can use the first row and first column of the matrix itself as indicators to mark whether a particular row or column needs to be zeroed\n</code></pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 369,
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a matrix of dimensions N x M, if any element in the i-th row or j-th column is 0, set all elements in that row and column to 0. Return the modified matrix.",
                "constraints": [
                    "1 <= N <= 100",
                    "1 <= M <= 100",
                    "-10^9 <= MATRIX[i][j] <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "2 3\n2 4 3\n1 0 0",
                        "output": "2 0 0\n0 0 0",
                        "explanation": "The element at MATRIX[1][1] and MATRIX[1][2] is 0. So the first row and second column become 0. Thus the output."
                    },
                    {
                        "input": "1 1\n5",
                        "output": "5",
                        "explanation": "Since there is no zero element in the matrix, the matrix remains unchanged."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Matrices (2D Arrays)",
                "slug": "matrices-(2d-arrays)"
            }
        ],
        "solutions": [
            {
                "lang": "cpp",
                "full_func": "/*\n    Time Complexity: O(N * M)\n    Space Complexity: O(1)\n\n    Where 'N' is the number of rows ans 'M' is the number of columns.\n*/\n\nvector<vector<int>> zeroMatrix(vector<vector<int>> &matrix, int n, int m){\n\t// Bool variable isColZero will tell us the same for the entire 1st column.\n\tbool isColZero = false;\n\tfor (int i = 0; i < n; i++){\n\t\t/*\n\t\t  If MATRIX[0][i] is 0, then isColZero = true. Because we have found a 0 in,\n\t\t  the 1st column so we have to set the entire 1st column to be 0.\n\t\t*/\n\t\tif (matrix[i][0] == 0){\n\t\t\tisColZero = true;\n\t\t}\n\t\tfor (int j = 1; j < m; j++){\n\t\t\tif (matrix[i][j] == 0){\n\t\t\t\t// We have to set that entire row to be 0.\n\t\t\t\tmatrix[i][0] = 0;\n\t\t\t\t// We have to set that entire column to be 0.\n\t\t\t\tmatrix[0][j] = 0;\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 1; i < n; i++){\n\t\tfor (int j = 1; j < m; j++){\n\t\t\t/*\n\t\t\t  If starting cell of row or starting cell of column is zero,\n\t\t\t  then set entry at i,j to 0.\n\t\t\t*/\n\t\t\tif (!matrix[i][0] || matrix[0][j] == 0){\n\t\t\t\tmatrix[i][j] = 0;\n\t\t\t}\n\t\t}\n\t}\n\t// If MATRIX[0][0] is 0, then we have to set the entire 1st row to be 0.\n\tif (matrix[0][0] == 0){\n\t\tfor (int j = 0; j < m; j++){\n\t\t\tmatrix[0][j] = 0;\n\t\t}\n\t}\n\t// If isColZero is true, then we have to set the entire 1st column to be 0.\n\tif (isColZero){\n\t\tfor (int i = 0; i < n; i++){\n\t\t\tmatrix[i][0] = 0;\n\t\t}\n\t}\n\treturn matrix;\n}",
                "lang_text": "cpp"
            },
            {
                "lang": "python",
                "full_func": "\"\"\"\n    Time Complexity: O(N * M)\n    Space Complexity: O(1)\n\n    Where 'N' is the number of rows ans 'M' is the number of columns.\n\"\"\"\n\ndef zeroMatrix(matrix, n, m):\n\t# Bool variable isColZero will tell us the same for the entire 1st column.\n\tisColZero = False\n\tfor i in range(n):\n\t\t\"\"\"\n\t\t  If MATRIX[0][i] is 0, then isColZero = true. Because we have found a 0 in,\n\t\t  the 1st column so we have to set the entire 1st column to be 0.\n\t\t\"\"\"\n\t\tif (matrix[i][0] == 0):\n\t\t\tisColZero = True\n\n\t\tfor j in range(1,m):\n\t\t\tif (matrix[i][j] == 0):\n\t\t\t\t# We have to set that entire row to be 0.\n\t\t\t\tmatrix[i][0] = 0\n\t\t\t\t# We have to set that entire column to be 0.\n\t\t\t\tmatrix[0][j] = 0\n\t\t\n\tfor i in range(1,n):\n\t\tfor j in range(1,m):\n\t\t\t\"\"\"\n\t\t\t  If starting cell of row or starting cell of column is zero,\n\t\t\t  then set entry at i,j to 0.\n\t\t\t\"\"\"\n\t\t\tif (not matrix[i][0] or matrix[0][j] == 0):\n\t\t\t\tmatrix[i][j] = 0\n\t\t\n\t# If MATRIX[0][0] is 0, then we have to set the entire 1st row to be 0.\n\tif (matrix[0][0] == 0):\n\t\tfor j in range(m):\n\t\t\tmatrix[0][j] = 0\n\t\t\n\t# If isColZero is true, then we have to set the entire 1st column to be 0.\n\tif (isColZero):\n\t\tfor i in range(n):\n\t\t\tmatrix[i][0] = 0\n\t\t\n\treturn matrix",
                "lang_text": "py"
            },
            {
                "lang": "java",
                "full_func": "/*\n    Time Complexity: O(N * M)\n    Space Complexity: O(1)\n\n    Where 'N' is the number of rows ans 'M' is the number of columns.\n*/\n\nimport java.util.ArrayList;\n\npublic class Solution {\n    public static ArrayList<ArrayList<Integer>> zeroMatrix(ArrayList<ArrayList<Integer>> matrix, int n, int m) {\n        // Boolean variable isColZero will tell us the same for the entire 1st column.\n        boolean isColZero = false;\n        for (int i = 0; i < n; i++) {\n            /*\n              If MATRIX[0][i] is 0, then isColZero = true. Because we have found a 0 in,\n              the 1st column so we have to set the entire 1st column to be 0.\n            */\n            if (matrix.get(i).get(0) == 0) {\n                isColZero = true;\n            }\n            for (int j = 1; j < m; j++) {\n                if (matrix.get(i).get(j) == 0) {\n                    // We have to set that entire row to be 0\n                    matrix.get(i).set(0, 0);\n                    // We have to set that entire column to be 0\n                    matrix.get(0).set(j, 0);\n                }\n            }\n        }\n        for (int i = 1; i < n; i++) {\n            for (int j = 1; j < m; j++) {\n                /*\n                  If starting cell of row or starting cell of column is zero,\n                  then set entry at i,j to 0.\n                */\n                if (matrix.get(i).get(0) == 0 || matrix.get(0).get(j) == 0) {\n                    matrix.get(i).set(j, 0);\n                }\n            }\n        }\n        // If MATRIX[0][0] is 0, then we have to set the entire 1st row to be 0\n        if (matrix.get(0).get(0) == 0) {\n            for (int j = 0; j < m; j++) {\n                matrix.get(0).set(j, 0);\n            }\n        }\n        // If isColZero is true, then we have to set the entire 1st column to be 0\n        if (isColZero) {\n            for (int i = 0; i < n; i++) {\n                matrix.get(i).set(0, 0);\n            }\n        }\n        return matrix;\n    }\n}",
                "lang_text": "java"
            }
        ],
        "platform": "CODESTUDIO"
    }
}