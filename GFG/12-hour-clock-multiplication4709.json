{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704745,
            "title": "12 hour clock Multiplication ",
            "titleSlug": "12-hour-clock-multiplication4709",
            "content": "<p><span style=\"font-size:18px\">Given two positive integers&nbsp;<strong>num1&nbsp;</strong>and&nbsp;<strong>num2</strong>, the task is to find&nbsp;the product&nbsp;of the two numbers&nbsp;on a <em><u><strong>12 hour clock</strong></u><strong> </strong></em>rather than a number line.<br />\r\n<strong>Note: </strong>Assume the Clock starts from 0 hour to 11 hours.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input</strong>:</span>\r\n<span style=\"font-size:18px\"><strong>num1 = </strong>2, <strong>num2 = </strong>3</span>\r\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\r\n<span style=\"font-size:18px\">6</span>\r\n<span style=\"font-size:18px\"><strong>Explanation:</strong></span>\r\n<span style=\"font-size:18px\">2*3 = 6. The time in a 12 hour clock is 6.</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input</strong>:</span>\r\n<span style=\"font-size:18px\"><strong>num1 = </strong>3, <strong>num2 = </strong>5</span>\r\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\r\n<span style=\"font-size:18px\">3</span>\r\n<span style=\"font-size:18px\"><strong>Explanation:</strong></span>\r\n<span style=\"font-size:18px\">3*5 = 15. The time in a 12 hour clock is 3.</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>mulClock()</strong> which takes 2 Integers num1, and num2 as input and returns the required time in a 12 hour clock format.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(1)<br />\r\n<strong>Expected Auxiliary Space:</strong> O(1)</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong></span><br />\r\n<span style=\"font-size:18px\">1 &lt;= num1,num2 &lt;= 10<sup>3</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two positive integers `num1` and `num2`, find the product of the two numbers on a 12-hour clock (where the clock starts from 0 to 11).",
                "constraints": [
                    "1 <= num1, num2 <= 1000"
                ],
                "testcases": [
                    {
                        "input": "num1 = 2, num2 = 3",
                        "output": "6",
                        "explanation": "The product of 2 and 3 is 6. On a 12-hour clock, 6 remains 6 because it's within the 0-11 range."
                    },
                    {
                        "input": "num1 = 3, num2 = 5",
                        "output": "3",
                        "explanation": "The product of 3 and 5 is 15. On a 12-hour clock, 15 becomes 3 (15 mod 12 = 3)."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">A 12 hour Clock can&#39;t have a time more than 12.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Modular Arithmetic",
                "slug": "modular-arithmetic"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    // Function to multiply two numbers and return the remainder when divided by 12.\n    int mulClock(int num1, int num2) {\n        \n        int pdt = num1*num2;    // Product of the Numbers\n        int ans = pdt%12;      // Remainder of the Product when divided by 12.\n        \n        return ans;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\r\n\r\nclass Solution {\r\n    static int mulClock(int num1, int num2) {\r\n        \r\n        int pdt = num1*num2;    // Product of the Numbers\r\n        int ans = pdt%12;      // Remainder of the Product when divided by 12.\r\n        \r\n        return ans;\r\n    }\r\n};",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\r\n\r\nclass Solution:\r\n    def mulClock(self, num1, num2):\r\n        \r\n        pdt = num1*num2     # Product of the Numbers\r\n        ans = pdt%12       # Remainder of the Product when divided by 12.\r\n        \r\n        return ans;",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n/**\n * @param {number} num1\n * @param {number} num2\n * @returns {number}\n*/\n\nclass Solution {\n    //Function to return the product of two numbers.\n    mulClock(num1, num2) {\n        //Product of the Numbers\n        let pdt = num1*num2;\n        // Remainder of the Product when divided by 12.\n        let ans = pdt%12;\n        \n        return ans;\n    }\n}",
                "lang_text": "javascript"
            },
            {
                "lang": "C#",
                "full_func": "class Solution\n{\n    public int mulClock(int num1, int num2)\n    {\n        int pdt = num1 * num2;\n        int ans = pdt % 12;\n        return ans;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}