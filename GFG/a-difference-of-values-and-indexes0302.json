{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703492,
            "title": "A difference of values and indexes",
            "titleSlug": "a-difference-of-values-and-indexes0302",
            "content": "<p>Given an unsorted array <strong>arr[ ]</strong> of size <strong>n</strong>, you need to find the maximum difference of absolute values of elements and indexes, i.e., for <strong>i &lt;= j</strong>, calculate maximum of <strong>| arr[ i ] - arr[ j ] | + | i - j |.</strong>&nbsp;</p>\r\n\r\n<p><strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input :</strong> \r\nn = 3\r\narr[ ] = {1, 3, -1}\r\n<strong>Output:</strong> 5\r\n<strong>Explanation:</strong>\r\nMaximum difference comes from indexes \r\n1, 2 i.e | 3 - (-1) | + | 1 - 2&nbsp;| = 5\r\n</pre>\r\n\r\n<p><br />\r\n<strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input :</strong> \r\nn = 4\r\narr[ ] = {5, 9, 2, 6} <strong>\r\nOutput:</strong>  8\r\n<strong>Explanation:</strong> \r\nMaximum difference comes from indexes \r\n1, 2 i.e | 9 - 2 | + | 1 - 2&nbsp;| = 8\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Your Task:</strong><br />\r\nThis is a function problem. The input is already taken care of by the driver code. You only need to complete the function <strong>maxDistance()</strong> that takes an array <strong>(arr)</strong>, sizeOfArray <strong>(n)</strong>, and return the maximum difference as given in the question.&nbsp;&nbsp;The driver code takes care of the printing.</p>\r\n\r\n<p><strong>Expected Time Complexity:</strong>&nbsp;O(n).<br />\r\n<strong>Expected Auxiliary Space:</strong>&nbsp;O(1).<br />\r\n&nbsp;</p>\r\n\r\n<p><strong>Constraints:</strong><br />\r\n1 &lt;= n &lt;= 5*(10^5)<br />\r\n-10^6&nbsp;&lt;= <strong>arr[ i ]</strong>&nbsp;&lt;= 10^6</p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an unsorted array `arr` of size `n`, find the maximum value of `|arr[i] - arr[j]| + |i - j|` for all `i <= j`.",
                "constraints": [
                    "1 <= n <= 5 * 10^5",
                    "-10^6 <= arr[i] <= 10^6"
                ],
                "testcases": [
                    {
                        "input": "n = 3\narr = {1, 3, -1}",
                        "output": "5",
                        "explanation": "The maximum difference is achieved with indices 1 and 2: |3 - (-1)| + |1 - 2| = 5"
                    },
                    {
                        "input": "n = 4\narr = {5, 9, 2, 6}",
                        "output": "8",
                        "explanation": "The maximum difference is achieved with indices 1 and 2: |9 - 2| + |1 - 2| = 8"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>You have to check all the four condition for ith&nbsp;index.<br />\n<br />\n&nbsp; &nbsp; &nbsp; &nbsp; max1 = max(max1, arr[i] + i);&nbsp;<br />\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;min1 = min(min1, arr[i] + i);&nbsp;<br />\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;max2 = max(max2, arr[i] - i);&nbsp;<br />\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;min2 = min(min2, arr[i] - i);</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function template in C++\n\nclass Solution{\n  public:\n    //Function to find the maximum distance between two elements of the array.\n    int maxDistance(int arr[], int n) \n    { \n        \n        int max1 = INT_MIN, min1 = INT_MAX; \n        int max2 = INT_MIN, min2 = INT_MAX; \n    \n        //iterating over the array to find the required values.\n        for (int i = 0; i < n; i++) { \n            \n            //finding maximum and minimum values of arr[i] + i.\n            max1 = max(max1, arr[i] + i); \n            min1 = min(min1, arr[i] + i); \n            \n            //finding maximum and minimum values of arr[i] - i.\n            max2 = max(max2, arr[i] - i); \n            min2 = min(min2, arr[i] - i); \n        } \n    \n        //returning the maximum difference between the values.\n        return max(max1 - min1, max2 - min2); \n    } \n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution{\r\n    \r\n   \r\n    // Function for finding maximum and value pair\r\n    public static int maxDistance (int arr[], int n) {\r\n        //Initializing variables to store minimum and maximum values\r\n        int min1=Integer.MAX_VALUE,min2=Integer.MAX_VALUE;\r\n        int max1=Integer.MIN_VALUE,max2=Integer.MIN_VALUE;\r\n        int ans=0;\r\n        \r\n        //Iterating through the array\r\n        for(int i=0;i<n;i++){\r\n            //Calculating maximum and minimum values based on current element and its index\r\n            max1=Math.max(max1,arr[i]+(i+1));\r\n            min1=Math.min(min1,arr[i]+(i+1));\r\n            max2=Math.max(max2,arr[i]-(i+1));\r\n            min2=Math.min(min2,arr[i]-(i+1));\r\n        }\r\n        \r\n        //Calculating the maximum difference between the min and max values\r\n        return Math.max(max1-min1,max2-min2);\r\n    }\r\n    \r\n    \r\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n# Function to find maximum distance between two elements in array.\n    def maxDistance(self, arr, n): \n        max1 = max2 = -float(\"inf\") # Initialize variables for max sum and max difference.\n        min1 = min2 = float(\"inf\") # Initialize variables for min sum and min difference.\n        for i in range(n):\n            max1 = max(max1, arr[i] + (i + 1)) # Calculate maximum sum element by adding current element and its index.\n            min1 = min(min1, arr[i] + (i + 1)) # Calculate minimum sum element by adding current element and its index.\n            max2 = max(max2, arr[i] - (i + 1)) # Calculate maximum difference element by subtracting current element from its index.\n            min2 = min(min2, arr[i] - (i + 1)) # Calculate minimum difference element by subtracting current element from its index.\n        return max(max1 - min1, max2 - min2) # Return the maximum of the two differences.",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "class Solution {\n    // Function to find the maximum distance between two elements in array.\n    maxDistance(arr, n) {\n        let max1 = -Infinity; // Initialize variables for max sum.\n        let max2 = -Infinity; // Initialize variables for max difference.\n        let min1 = Infinity; // Initialize variables for min sum.\n        let min2 = Infinity; // Initialize variables for min difference.\n        for (let i = 0; i < n; i++) {\n            max1 = Math.max(max1, arr[i] + (i + 1)); // Calculate maximum sum element by adding current element and its index.\n            min1 = Math.min(min1, arr[i] + (i + 1)); // Calculate minimum sum element by adding current element and its index.\n            max2 = Math.max(max2, arr[i] - (i + 1)); // Calculate maximum difference element by subtracting current element from its index.\n            min2 = Math.min(min2, arr[i] - (i + 1)); // Calculate minimum difference element by subtracting current element from its index.\n        }\n        return Math.max(max1 - min1, max2 - min2); // Return the maximum of the two differences.\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}