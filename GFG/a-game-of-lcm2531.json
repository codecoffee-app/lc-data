{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705081,
            "title": "A Game of LCM",
            "titleSlug": "a-game-of-lcm2531",
            "content": "<p><span style=\"font-size:18px\">Given an integer N. Find maximum LCM (Least Common Multiple)&nbsp;that can be obtained from four&nbsp;numbers less than or equal to N.<br />\r\nNote: Duplicate numbers&nbsp;can be used.</span></p>\r\n\r\n<p><strong><span style=\"font-size:18px\">Example 1:</span></strong></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong>\r\nN = 4\r\n<strong>Output: </strong>12\r\n<strong>Explanation:</strong>\r\nThe four numbers can be [4,4,3,2] or\r\n[4,4,4,3], etc. It can be shown that 12 is\r\nthe maximum LCM of four numbers that can\r\nbe obtained from numbers less than or equal \r\nto 4.</span></pre>\r\n\r\n<p><strong><span style=\"font-size:18px\">Example 2:</span></strong></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong>\r\nN = 5\r\n<strong>Output: </strong>60\r\n<strong>Explanation:</strong>\r\nThe four numbers can be [5,5,4,3] or\r\n[5,4,3,2], etc. 60 is the maximum that can\r\nbe obtained.</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>maxGcd()</strong> which takes N as the input parameter and returns the maximum LCM&nbsp;that can be obtained from four numbers less than or equal to N.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:&nbsp;</strong>O( N<sup>4</sup>&nbsp;)<br />\r\n<strong>Expected Auxillary Space:&nbsp;</strong>O(1)</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n4 &le; N &le; 50</span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an integer N, find the maximum Least Common Multiple (LCM) that can be obtained from four numbers less than or equal to N. Duplicate numbers can be used.",
                "constraints": [
                    "4 <= N <= 50"
                ],
                "testcases": [
                    {
                        "input": "4",
                        "output": "12",
                        "explanation": "The maximum LCM of four numbers less than or equal to 4 can be obtained using numbers like [4, 4, 3, 2] or [4, 4, 4, 3], resulting in an LCM of 12."
                    },
                    {
                        "input": "5",
                        "output": "60",
                        "explanation": "The maximum LCM of four numbers less than or equal to 5 can be obtained using numbers like [5, 5, 4, 3] or [5, 4, 3, 2], resulting in an LCM of 60."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Multiplication of two numbers is equal to multiplication of their GCD and LCM.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Misc",
                "slug": "misc"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "// Back-end complete function Template for C++\n\nclass Solution {\n  public:\n    // Function to calculate the least common multiple (lcm) of four numbers.\n    int lcm(int a,int b,int c,int d)\n    {\n        // Initializing the answer with the first number.\n        int ans = a;\n\n        // Calculating lcm using gcd of the numbers.\n        ans = (ans*b)/(__gcd(ans,b));\n        ans = (ans*c)/(__gcd(ans,c));\n        ans = (ans*d)/(__gcd(ans,d));\n\n        // Returning the lcm.\n        return ans;\n    }\n  \n    // Function to calculate the maximum gcd given a number n.\n    long long maxGcd(int n) {\n        // Initializing the answer.\n        int ans = 0;\n\n        // Nested loops to calculate the maximum gcd.\n        for(int i = n ; i >= 1 ; i--)\n        {\n            for(int j = n ; j >= 1 ; j--)\n            {\n                for(int k = n ; k >= 1 ; k--)\n                {\n                    for(int p = n ; p >= 1 ; p--)\n                    {\n                        // Updating the maximum gcd.\n                        ans = max(ans,(int)lcm(i,j,k,p));\n                    }   \n                }\n            }\n        }\n\n        // Returning the maximum gcd.\n        return ans;\n    }\n};",
                "lang_text": "cpp"
            }
        },
        "platform": "GFG"
    }
}