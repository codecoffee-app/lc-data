{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705448,
            "title": "A New Year Game",
            "titleSlug": "a-new-year-game1648",
            "content": "<p><span style=\"font-size:18px\">Rahul and his friends decided to play a game in a New Year Party and the winner will be given some cash prize as decided among them.The game is as follows:-<br />\n1.N carpets will be arranged in a row and each of them will have a number written on it.<br />\n2.A basket full of chocolate is kept there and a person has to take out M chocolates from the basket before starting the game.<br />\n3.A person with M chocolates will start at the first carpet ,eat one chocolate and move to the&nbsp;second one,then again eat one chocolate and move to the third one...and so on..<br />\n4.If on reaching&nbsp;any carpet ,the number of chocolates in the persons hand is less than the number written on the carpet ,then that&nbsp;&nbsp;person loses the game.<br />\nFind the minimum number of chocolate Rahul should take out of the basket to ensure that he wins the game.<br />\nNote:Number of chocolates and the number written on the carpet are compared before the person eats the chocolate on that carpet.See the examples given.</span>&nbsp;</p>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\nN = 5\narr = {6, 5, 4, 3, 2}\n<strong>Output:</strong> 6\n<strong>Explaination:</strong> If Rahul&nbsp;takes 6 chocolates, \non the first step we have 6 &gt;= 6 everything \nis OK, then after he ate one chocolate,&nbsp; \nthe chocolates decreased to 5 and on the \n2nd carpet&nbsp;we&#39;ll receive 5 &gt;= 5, again OK, \nand so on.</span><span style=\"font-size:18px\">\n</span></pre>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\nN = 5\nArr = {3, 4, 3, 1, 1}\n<strong>Output:</strong> 5\n<strong>Explaination:</strong> If Rahul takes 4 chocolates, \nthen he&nbsp;will loose the game&nbsp;on reaching \nthe 2nd carpet.</span></pre>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nYou don&#39;t need to read input or print anything. Your task is to complete the function&nbsp;<strong>minimumChocolates()</strong>&nbsp;which takes the array a<strong>rr[]</strong> and its size <strong>N&nbsp;</strong>as input parameters&nbsp;and returns&nbsp;the minimum number of chocolate Rahul should take out of the basket to ensure that he wins the game.</span></p>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(N)<br />\n<strong>Expected Auxiliary Space:</strong> O(1)</span></p>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Constraints:</strong><br />\n1 &le; N &le; 10<sup>5</sup><br />\n1 &le; arr[i]&nbsp;&le; 10<sup>5</sup></span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Rahul and his friends are playing a game at a New Year's party.  There are N carpets arranged in a row, each with a number written on it. Rahul starts with M chocolates. He begins at the first carpet, eats one chocolate, and moves to the next.  This continues until he reaches the end of the row of carpets. Rahul loses if, upon reaching a carpet, the number of chocolates he has remaining is less than the number written on the carpet. The chocolates are compared before he eats one on that carpet. Determine the minimum number of chocolates, M, that Rahul needs to take initially to win the game.",
                "constraints": [
                    "1 <= N <= 10^5",
                    "1 <= arr[i] <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "N = 5\narr = {6, 5, 4, 3, 2}",
                        "output": "6",
                        "explanation": "Rahul needs to start with at least 6 chocolates.  With 6 chocolates initially: At carpet 1 (value 6), 6 >= 6. He eats one, leaving 5. At carpet 2 (value 5), 5 >= 5. He eats one, leaving 4. At carpet 3 (value 4), 4 >= 4. He eats one, leaving 3. At carpet 4 (value 3), 3 >= 3. He eats one, leaving 2. At carpet 5 (value 2), 2 >= 2. Thus, 6 chocolates is sufficient."
                    },
                    {
                        "input": "N = 5\nArr = {3, 4, 3, 1, 1}",
                        "output": "5",
                        "explanation": "Rahul needs to start with at least 5 chocolates. Starting with 4 chocolates would lead to failure on the second carpet:  At carpet 1 (value 3), 4 >= 3. He eats one, leaving 3. At carpet 2 (value 4), 3 < 4.  Thus, Rahul would lose."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">To reach the ith position Rahul needs to start with at least arr[i] + i chocolates. </span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Misc",
                "slug": "misc"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\nclass Solution {\n  public:\n    //Function to find the minimum number of chocolates required.\n    int  minimumChocolates(int arr[], int N){\n        //initialize result with the first element of the array.\n        int res=arr[0];\n        //initialize cnt with result - 1.\n        int cnt=res-1;\n        //traverse the array starting from the second element.\n        for(int i=1;i<N;i++)\n        {\n            //if the difference between the current element and cnt is greater than 0,\n            //increase cnt and res by this difference.\n            if(arr[i]-cnt>0)\n            {\n                int d=arr[i]-cnt;\n                cnt+=d;\n                res+=d;\n            }\n            //decrease cnt by 1.\n            cnt-=1;\n        }\n        //return the minimum number of chocolates required.\n        return res;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for C++\nclass Solution {\n    // Function to calculate the minimum number of chocolates required\n    static int minimumChocolates(int arr[], int N) {\n        // Initialize the result with the first element of the array\n        int res = arr[0];\n\n        // Initialize the counter to track the number of chocolates given\n        int cnt = res - 1;\n\n        // Iterate through the array starting from the second element\n        for (int i = 1; i < N; i++) {\n            // Check if the difference between the current element and the counter is positive\n            if (arr[i] - cnt > 0) {\n                // Calculate the difference and update the counter and result accordingly\n                int d = arr[i] - cnt;\n                cnt += d;\n                res += d;\n            }\n\n            // Decrease the counter by 1\n            cnt -= 1;\n        }\n\n        // Return the minimum number of chocolates required\n        return res;\n    }\n};",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    public int minimumChocolates(int[] arr, int N)\n    {\n        //initialize result with the first element of the array.\n        int res=arr[0];\n        //initialize cnt with result - 1.\n        int cnt=res-1;\n        //traverse the array starting from the second element.\n        for(int i=1;i<N;i++)\n        {\n            //if the difference between the current element and cnt is greater than 0,\n            //increase cnt and res by this difference.\n            if(arr[i]-cnt>0)\n            {\n                int d=arr[i]-cnt;\n                cnt+=d;\n                res+=d;\n            }\n            //decrease cnt by 1.\n            cnt-=1;\n        }\n        //return the minimum number of chocolates required.\n        return res;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}