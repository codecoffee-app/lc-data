{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704182,
            "title": "Exponentiation (Set 2)",
            "titleSlug": "abset-25327",
            "content": "<p><span style=\"font-size:18px\">For two given positive numbers a and b. Find a<sup>b</sup>. Output your number modulus 10<sup>9</sup>+7.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input: </strong>a = 1, b = 1\n<strong>Output:</strong> 1\n<strong>Explanation</strong>: 1<sup>1</sup>&nbsp;% (10<sup>9</sup>+7) = 1\n</span></pre>\n\n<p><span style=\"font-size:18px\">\u00e2\u20ac\u2039<strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input</strong>: a = 2, b = 5\n<strong>Output:</strong> 32\n<strong>Explanation</strong>: 2<sup>5</sup>&nbsp;% (10<sup>9</sup>+7) = 32</span></pre>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:&nbsp;&nbsp;</strong><br />\nYou don&#39;t need to read input or print anything. Your task is to complete the function&nbsp;<strong>power()</strong>&nbsp;which takes <strong>a, b&nbsp;</strong>as inputs, and returns the answer.<br />\n<br />\n<strong>Expected Time Complexity:</strong>&nbsp;O(log b)<br />\n<strong>Expected Auxiliary Space:</strong>&nbsp;O(1)<br />\n<br />\n<strong>Constraints:</strong><br />\n1 &le;&nbsp;a &le; 10<sup>5</sup><br />\n1 &le; b &le; 10<sup>16</sup></span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "makemytrip"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nclass Solution{   \npublic:\n    //Function to calculate exponentiation modulo.\n    long long int power(int a, long long int b) { \n        long long int M = 1e9 + 7;\n        long long int res = 1;\n        long long int x = a;\n        //Iterating until b becomes 0.\n        while(b > 0){\n            //Checking if least significant bit of b is 1.\n            if(b & 1) res = (res * x) % M;\n            //Dividing b by 2.\n            b /= 2;\n            //Squaring x.\n            x = (x * x) % M;\n        }\n        //Returning the result.\n        return res;\n    } \n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "\nclass Solution{\n    power(a, b){\n        const M = BigInt(1e9 + 7);\n        let res = BigInt(1);\n        let x = BigInt(a);\n        let y = BigInt(b);\n        while(y > BigInt(0)){\n            if(y & BigInt(1)) res = (res * x) % M;\n            y /= BigInt(2);\n            x = (x * x) % M;\n        }\n        return Number(res);\n    }\n}",
                "lang_text": "javascript"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    public long power(int a, long b)\n    {\n        long M = 1000000007;\n        long res = 1;\n        long x = a;\n        while(b > 0)\n        {\n            if(b % 2 == 1)\n                res = (res * x) % M;\n            b /= 2;\n            x = (x * x) % M;\n        }\n        return res;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}