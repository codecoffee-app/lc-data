{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703957,
            "title": "Absolute Difference of 1",
            "titleSlug": "absolute-difference-11156",
            "content": "<p><span style=\"font-size: 18px;\">Given an array <strong>arr</strong>. Return all the numbers less than <strong>k&nbsp;</strong>and the number which have at least two digits and the absolute difference between every adjacent digit of that number should be <strong>1&nbsp;</strong>in the array.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Note: </strong>Return an empty list if no such number is present.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr[] = [7, 98, 56, 43, 45, 23, 12, 8], k = 54\n<strong>Output:</strong> [43, 45, 23, 12]\n<strong>Explanation:</strong> 43 45 23 12 all these numbers have adjacent digits diff as 1 and they areless than 54.</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong> arr[] = [87, 89, 45, 235, 465, 765, 123, 987, 499, 655], k = 1000\n<strong>Output:</strong> [87, 89, 45, 765, 123, 987]\n<strong>Explanation:</strong> 87 89 45 765 123 987 all these numbers have adjacent digits diff as 1 and they areless than 1000.</span>\n</pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &lt;= arr.size() &lt;= 10<sup>6</sup><br />1 &lt;= k, arr[i] &lt;= 10<sup>6</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of integers `arr` and an integer `k`, return a new array containing only the numbers from `arr` that satisfy the following conditions:\n\n1.  The number is less than `k`.\n2.  The number has at least two digits.\n3.  The absolute difference between every pair of adjacent digits in the number is equal to 1.",
                "constraints": [
                    "1 <= arr.size() <= 10^6",
                    "1 <= k, arr[i] <= 10^6"
                ],
                "testcases": [
                    {
                        "input": "arr = [7, 98, 56, 43, 45, 23, 12, 8], k = 54",
                        "output": "[43, 45, 23, 12]",
                        "explanation": "The numbers 43, 45, 23, and 12 are all less than 54, have at least two digits, and the absolute difference between their adjacent digits is 1."
                    },
                    {
                        "input": "arr = [87, 89, 45, 235, 465, 765, 123, 987, 499, 655], k = 1000",
                        "output": "[87, 89, 45, 765, 123, 987]",
                        "explanation": "The numbers 87, 89, 45, 765, 123, and 987 are all less than 1000, have at least two digits, and the absolute difference between their adjacent digits is 1."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Traverse the array and check each&nbsp;number whether the number contains consesutive digits difference 1 and less than K, if yes then insert number to ans array.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [
            "amazon",
            "jabong"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    // Function to check if the digits in a number differ by 1 or not\n    bool isDiff1(int n) {\n        while (n / 10) {\n            int dig1 = n % 10;\n            int dig2 = (n / 10) % 10;\n            if (abs(dig1 - dig2) != 1)\n                return false;\n\n            n = n / 10;\n        }\n        return true;\n    }\n\n    // Function to get numbers from an array that have digits differing by 1 and are\n    // less than k\n    vector<int> getDigitDiff1AndLessK(vector<int>& arr, int k) {\n        int n = arr.size();\n        vector<int> ans;\n        for (int i = 0; i < n; i++) {\n            if (isDiff1(arr[i]) && arr[i] < k && arr[i] >= 10) {\n                ans.push_back(arr[i]);\n            }\n        }\n        return ans;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "// User function Template for Java\n\npublic class Solution {\n    // Function to check if the digits in a number differ by 1 or not\n    public boolean isDiff1(int n) {\n        while (n / 10 > 0) {\n            int dig1 = (int)(n % 10);\n            int dig2 = (int)((n / 10) % 10);\n            if (Math.abs(dig1 - dig2) != 1) return false;\n\n            n = n / 10;\n        }\n        return true;\n    }\n\n    // Function to get numbers from an array that have digits differing by 1 and are\n    // less than k\n    public ArrayList<Integer> getDigitDiff1AndLessK(int[] arr, int k) {\n        ArrayList<Integer> ans = new ArrayList<>();\n        int n = arr.length;\n        for (int i = 0; i < n; i++) {\n            if (isDiff1(arr[i]) && arr[i] < k && arr[i] >= 10) {\n                ans.add(arr[i]);\n            }\n        }\n        return ans;\n    }\n}\n",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "class Solution:\n    # Function to check if the digits in a number differ by 1 or not\n    def isDiff1(self, n):\n        while n >= 10:\n            dig1 = n % 10\n            dig2 = (n // 10) % 10\n            if abs(dig1 - dig2) != 1:\n                return False\n            n = n // 10\n        return True\n\n    # Function to get numbers from a list that have digits differing by 1 and are less than k\n    def getDigitDiff1AndLessK(self, arr, k):\n        ans = []\n        for num in arr:\n            if self.isDiff1(num) and num < k and num >= 10:\n                ans.append(num)\n        return ans",
                "lang_text": "py"
            },
            {
                "lang": "Javascript",
                "full_func": "//Back-end complete function Template for javascript\nclass Solution {\n    // Function to check if the digits in a number differ by 1 or not\n    isDiff1(n) {\n        while (n >= 10) {\n            let dig1 = n % 10;\n            let dig2 = Math.floor(n / 10) % 10;\n            if (Math.abs(dig1 - dig2) !== 1) {\n                return false;\n            }\n            n = Math.floor(n / 10);\n        }\n        return true;\n    }\n\n    // Function to get numbers from an array that have digits differing by 1 and are\n    // less than k\n    getDigitDiff1AndLessK(arr, k) {\n        let ans = [];\n        for (let i = 0; i < arr.length; i++) {\n            if (this.isDiff1(arr[i]) && arr[i] < k && arr[i] >= 10) {\n                ans.push(arr[i]);\n            }\n        }\n        return ans;\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}