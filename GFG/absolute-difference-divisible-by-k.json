{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 713142,
            "title": "Absolute difference divisible by K",
            "titleSlug": "absolute-difference-divisible-by-k",
            "content": "<p><span style=\"font-size: 18px;\">Given an array of integers&nbsp;of size <strong>n</strong> and an integer&nbsp;<strong>k</strong>, find all the pairs in the array&nbsp;whose absolute difference is divisible by k.</span><br /><br /><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:\n</strong>n = 3\narr[] = {3, 7, 11}\nk = 4\n<strong>Output:\n</strong>3\n<strong>Explanation:</strong>\n(11-3) = 8 is divisible by 4\n(11-7) = 4 is divisible by 4\n(7-3) = 4 is divisible by 4</span>\n</pre>\n<p><br /><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:\n</strong>n = 4\narr[] = {1, 2, 3, 4}\nk = 2\n<strong>Output :</strong>\n2\n<strong>Explanation:</strong>\nValid pairs are (1,3), and (2,4).\n</span></pre>\n<p><br /><span style=\"font-size: 18px;\"><strong>Your Task:&nbsp;&nbsp;</strong><br />You don't need to read input or print anything. Your task is to complete the function <strong>countPairs()</strong>&nbsp;which takes integers n,&nbsp;array arr[ ], integer k as input parameters&nbsp;and returns the number of pairs whose&nbsp;absolute difference is divisible by k.<br /><strong>Note:&nbsp;</strong>The answer may be large so use 64-bit integer.&nbsp;</span></p>\n<p><br /><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong> O(n + k)<br /><strong>Expected Auxiliary Space:</strong> O(k)</span></p>\n<p><br /><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />2 &le; n &le; 10<sup>5</sup><br />1 &le; k,arr[i] &le; 10<sup>5</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<ol>\n\t<li><span style=\"font-size:18px\">Convert each elements&nbsp;<code>(A[i])</code>&nbsp;of the array to&nbsp;<code>((A[i]+K)%K)</code></span></li>\n\t<li><span style=\"font-size:18px\">Use hashing teching technique to store the number of times&nbsp;<code>(A[i]%K)</code>&nbsp;occur&nbsp;in the array</span></li>\n\t<li><span style=\"font-size:18px\">Now, if an element A[i] occurs x times in the array then add&nbsp;<code>x*(x-1)/2</code></span></li>\n</ol>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Hash",
                "slug": "hash"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [
            "goldman-sachs"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\r\n\r\nclass Solution {\r\n    #define ll long long\r\n  public:\r\n    ll countPairs(int n, int arr[], int k) {\r\n        \r\n        // intialize the count\r\n        ll cnt = 0;\r\n      \r\n        // making every element of arr in\r\n        // range 0 to k - 1\r\n        for (ll i = 0; i < n; i++) {\r\n            arr[i] = (arr[i] + k) % k;\r\n        }\r\n      \r\n        // create an array hash[]\r\n        ll hash[k] = { 0 };\r\n      \r\n        // store to count of element of arr\r\n        // in hash[]\r\n        for (ll i = 0; i < n; i++) {\r\n            hash[arr[i]]++;\r\n        }\r\n      \r\n        // count the pair whose absolute\r\n        // difference is divisible by k\r\n        for (ll i = 0; i < k; i++) {\r\n            cnt += (hash[i] * (hash[i] - 1)) / 2;\r\n        }\r\n      \r\n        // return the value of count\r\n        return cnt;\r\n    }\r\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\r\n\r\nclass Solution {\r\n\tstatic long countPairs(int n, int[] arr, int k) {\r\n\r\n\t\t// intialize the count\r\n\t\tlong cnt = 0;\r\n\r\n\t\t// making every element of arr in\r\n\t\t// range 0 to k - 1\r\n\t\tfor (int i = 0; i < n; i++)\r\n\t\t{\r\n\t\t\tarr[i] = (arr[i] + k) % k;\r\n\t\t}\r\n\r\n\t\t// create an array hash[]\r\n\t\tlong hash[] = new long[k];\r\n\t\tArrays.fill(hash, 0);\r\n\r\n\t\t// store to count of element of arr\r\n\t\t// in hash[]\r\n\t\tfor (int i = 0; i < n; i++)\r\n\t\t{\r\n\t\t\thash[arr[i]]++;\r\n\t\t}\r\n\r\n\t\t// count the pair whose absolute\r\n\t\t// difference is divisible by k\r\n\t\tfor (int i = 0; i < k; i++)\r\n\t\t{\r\n\t\t\tcnt += (hash[i] * (hash[i] - 1)) / 2;\r\n\t\t}\r\n\r\n\t\t// return the value of count\r\n\t\treturn cnt;\r\n\t}\r\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\r\n\r\nclass Solution:\r\n    def countPairs(self, n, arr, k):\r\n        \r\n        # intialize the count\r\n        cnt = 0\r\n      \r\n        # making every element of arr in\r\n        # range 0 to k - 1\r\n        for i in range(n):\r\n            arr[i] = (arr[i] + k) % k\r\n      \r\n        # create an array hash\r\n        hash = [0]*k\r\n      \r\n        # store to count of element of arr\r\n        # in hash\r\n        for i in range(n):\r\n            hash[arr[i]] += 1\r\n      \r\n        # count the pair whose absolute\r\n        # difference is divisible by k\r\n        for i in range(k):\r\n            cnt += (hash[i] * (hash[i] - 1)) // 2\r\n      \r\n        # return the value of count\r\n        return cnt",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n/**\n * @param {number} n\n * @param {number[]} arr\n * @param {number} k\n * @returns {number}\n*/\n\nclass Solution {\n    //Function to count pairs from two linked lists whose sum is equal to given sum.\n    countPairs (n, arr, k) {\n        // intialize the count\n        let cnt = 0;\n\n        // making every element of arr in range 0 to k - 1\n        for (let i = 0; i < n; i++) {\n            arr[i] = (arr[i] + k) % k;\n        }\n\n        // create an array hash\n        let hash = new Array(k).fill(0);\n\n        // store to count of element of arr in hash\n        for (let i = 0; i < n; i++) {\n            hash[arr[i]] += 1;\n        }\n\n        // count the pair whose absolute difference is divisible by k\n        for (let i = 0; i < k; i++) {\n            cnt += (hash[i] * (hash[i] - 1)) / 2;\n        }\n\n        // return the value of count\n        return cnt;\n    }\n}",
                "lang_text": "javascript"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\r\nclass Solution\r\n{\r\n    //  Complete this function\r\n    public long countPairs(int n, int[] arr, int k)\r\n    {\r\n        // intialize the count\r\n        long cnt = 0;\r\n      \r\n        // making every element of arr in\r\n        // range 0 to k - 1\r\n        for (int i = 0; i < n; i++) {\r\n            arr[i] = (arr[i] + k) % k;\r\n        }\r\n      \r\n        // create an array hash[]\r\n        long[] hash = new long[k];\r\n      \r\n        // store to count of element of arr\r\n        // in hash[]\r\n        for (int i = 0; i < n; i++) {\r\n            hash[arr[i]]++;\r\n        }\r\n      \r\n        // count the pair whose absolute\r\n        // difference is divisible by k\r\n        for (int i = 0; i < k; i++) {\r\n            cnt += (hash[i] * (hash[i] - 1)) / 2;\r\n        }\r\n      \r\n        // return the value of count\r\n        return cnt;\r\n    }\r\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}