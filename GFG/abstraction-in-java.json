{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 878195,
            "title": "Abstraction in Java",
            "titleSlug": "abstraction-in-java",
            "content": "<p><span >Implement the following classes to understand abstraction in Java :<br />Note: Driver code makes all the function calls and print statements</span></p>\n<pre><span >Name: <strong>Shape </strong>(Abstract)<br />Data member/Attributes: <strong>color </strong>(String)<br />Constructor: <strong>Shape(String c) </strong>-&gt; assign value of c to color<br />Methods/Functions: <strong>getColor() </strong>-&gt; returns value of color<br />\\t\\t\\t <strong>getArea() </strong>-&gt; <strong>abstract </strong>function with <strong>double </strong>return type</span></pre>\n<pre><span >Name: <strong>Square </strong>(extends Shape)<br />Data member/Attributes: <strong>side </strong>(double)<br />Constructor: <strong>Square(String c, double side) </strong>-&gt; calls super(c) function and assign value to side.<br />Method/Function: <strong>getArea() </strong>-&gt; returns area of square</span></pre>\n<p><strong><span >Example:</span></strong></p>\n<pre><strong><span >Input:</span></strong><span > color = \"red\", side = 5.0<br /></span><span ><strong>Output: <br /></strong>red 25.0<br />red 25.0</span></pre>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [],
        "companies": [],
        "solutions": [
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\nabstract class Shape {\n    String color;\n\n    String getColor() { return color; }\n\n    Shape(String c) { this.color = c; }\n\n    abstract double getArea();\n}\n\nclass Square extends Shape {\n    double side;\n\n    Square(String c, double side) {\n        super(c);\n        this.side = side;\n    }\n\n    double getArea() { return side * side; }\n}",
                "lang_text": "java"
            }
        ],
        "platform": "GFG"
    }
}