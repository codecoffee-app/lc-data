{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 706050,
            "title": "Add two complex numbers",
            "titleSlug": "add-two-complex-numbers",
            "content": "<p><span style=\"font-size: 18px;\">In this problem, you need to add 2 given complex numbers and return the resulting complex number to the function add().</span></p>\n<blockquote>\n<p><span style=\"font-size: 18px;\">A&nbsp;struct named <strong>Complex </strong>containing data members as real and imaginary part of the complex number is implemented already.</span></p>\n</blockquote>\n<p><span style=\"font-size: 18px;\"><strong>Example :</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong><span style=\"font-size: 18px;\">Input:</span> </strong></span><span style=\"font-size: 18px;\">c1 = 3+6i, c2 = -1+4i</span>\n<span style=\"font-size: 18px;\"><strong><span style=\"font-size: 18px;\">Output:</span> </strong></span><span style=\"font-size: 18px;\">2 + 10i<br /><strong>Explanation: </strong>Real value is 3-1= 4. And imaginary value is 6+4= 10.<br /></span></pre>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Implement the `add` function to add two complex numbers represented by the `Complex` struct. The `Complex` struct already contains `real` and `imaginary` members.",
                "constraints": [],
                "testcases": [
                    {
                        "input": "c1 = 3+6i, c2 = -1+4i",
                        "output": "2 + 10i",
                        "explanation": "The real part of the result is the sum of the real parts (3 + (-1) = 2). The imaginary part of the result is the sum of the imaginary parts (6 + 4 = 10)."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Add real part and imaginary part separately.</p>"
        ],
        "relatedTopics": [
            {
                "name": "CPP",
                "slug": "cpp"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C",
                "full_func": "// Back-end complete function Template for C\r\n\r\nstruct Complex add(struct Complex c1, struct Complex c2) {\r\n    struct Complex c3;\r\n    c3.real = c1.real + c2.real;\r\n    c3.img = c1.img + c2.img;\r\n    return c3;\r\n}",
                "lang_text": "c"
            },
            {
                "lang": "C++",
                "full_func": "// Back-end complete function Template for C++\r\n\r\nComplex add(Complex c1, Complex c2) {\r\n    Complex c3;\r\n    c3.real = c1.real + c2.real;\r\n    c3.img = c1.img + c2.img;\r\n    return c3;\r\n}",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "// Back-end complete function Template for Java\r\n\r\n// Defining add() method\r\n// for adding two complex number\r\nComplex add(Complex C1, Complex C2) {\r\n    // creating temporary variable\r\n    Complex temp = new Complex();\r\n\r\n    // adding real part of complex numbers\r\n    temp.real = C1.real + C2.real;\r\n\r\n    // adding Imaginary part of complex numbers\r\n    temp.imaginary = C1.imaginary + C2.imaginary;\r\n\r\n    // returning the sum\r\n    return temp;\r\n}",
                "lang_text": "java"
            },
            {
                "lang": "C#",
                "full_func": "public class Complex{\n    public int real;\n    public int img;\n}\n\nclass Solution{\n    //Function to add two complex numbers.\n    public Complex add(Complex c1, Complex c2) {\n        Complex c3 = new Complex();\n        c3.real = c1.real + c2.real;\n        c3.img = c1.img + c2.img;\n        return c3;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}