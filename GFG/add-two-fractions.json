{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 700259,
            "title": "Add two fractions",
            "titleSlug": "add-two-fractions",
            "content": "<p><span style=\"font-size:18px\">You are given four numbers <strong>num1, den1, num2, and den2</strong>. You need to find<strong> (num1/den1)+(num2/den2) </strong>and output the result in the form of <strong>(numx/denx)</strong>. </span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Input Format:</strong><br />\r\nThe first line of input contains an integer <strong>T</strong> denoting the number of test cases . Then T test cases follow . Each test case contains four integers <strong>num1,&nbsp;den1, num2, den2 </strong>respectively .</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Output Format:</strong><br />\r\nFor each test case, in a new line,&nbsp; output will be the fraction in the form<strong> a/b</strong> where the fraction denotes the sum of the two given fractions in reduced form.</span></p>\r\n\r\n<p><strong><span style=\"font-size:18px\">Your Task:</span></strong><br />\r\n<span style=\"font-size:18px\">Since this is a function problem, you don&#39;t need to worry about the testcases. Your task is to complete the function <strong>addFraction&nbsp;</strong>&nbsp;which adds the two fractions and prints the resulting fraction. The function&nbsp;takes four arguments <strong>num1, den1, num2, den2 </strong>where&nbsp;<strong>num1, num2 </strong>denotes&nbsp;the <strong>numerators&nbsp;</strong>of two fractions and <strong>den1, den2 </strong>denotes&nbsp;their <strong>denominators</strong>.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n1 &lt;= T &lt;= 100<br />\r\n1 &lt;= den1,den2,num1,num2 &lt;= 1000</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example:<br />\r\nInput</strong><br />\r\n1<br />\r\n1 500 2 500</span><br />\r\n<span style=\"font-size:18px\"><strong>Output</strong><br />\r\n3/500</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Explanation:</strong><br />\r\nIn&nbsp;above test case&nbsp;1/500+2/500=3/500</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Note:</strong>The <strong>Input/Ouput</strong> format and <strong>Example</strong> given are used for system&#39;s internal purpose, and should be used by a user for <strong>Expected Output</strong> only. As it is a function problem, hence a user should not read any input from stdin/console. The task is to complete the function specified, and not to write the full code.</span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "You are given four integers: `num1`, `den1`, `num2`, and `den2`. Your task is to calculate the sum of the fractions `num1/den1` and `num2/den2` and express the result as a simplified fraction `numx/denx`. Implement the `addFraction` function to achieve this.",
                "constraints": [
                    "1 <= T <= 100 (Number of test cases)",
                    "1 <= den1, den2, num1, num2 <= 1000"
                ],
                "testcases": [
                    {
                        "input": "1\n1 500 2 500",
                        "output": "3/500",
                        "explanation": "The problem asks us to sum the two fractions 1/500 and 2/500. The sum is (1+2)/500 = 3/500."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "// Function to find the greatest common divisor of two numbers\r\nint gcd(int a, int b)\r\n{\r\n    if (a == 0)\r\n        return b;\r\n    return gcd(b%a, a);\r\n}\r\n\r\n// Function to reduce the fraction to its lowest terms\r\nvoid lowest(int &den3, int &num3)\r\n{\r\n    // Finding the greatest common divisor of the numerator and denominator\r\n    int common_factor = gcd(num3,den3);\r\n\r\n    // Dividing both the numerator and denominator by the common factor\r\n    den3 = den3/common_factor;\r\n    num3 = num3/common_factor;\r\n}\r\n\r\n// Function to add two fractions\r\nvoid addFraction(int num1, int den1, int num2, int den2)\r\n{\r\n    int num3;int den3;\r\n\r\n    // Finding the common denominator\r\n    den3 = gcd(den1,den2);\r\n    den3 = (den1*den2) / den3;\r\n\r\n    // Adding the numerators with appropriate scaling\r\n    num3 = (num1)*(den3/den1) + (num2)*(den3/den2);\r\n\r\n    // Reducing the resulting fraction to its lowest terms\r\n    lowest(den3,num3);\r\n    \r\n    // Printing the resulting fraction\r\n    cout<<num3<<\"/\"<<den3<<endl;\r\n}",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class GfG\r\n{ \t\r\n\tint num3, den3;\r\n\tint gcd(int a, int b)\r\n\t{\r\n\t\tif(a == 0)\r\n\t\t\treturn b;\r\n\t\treturn gcd(b%a, a);\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\tvoid addFraction(int num1, int den1, int num2, int den2)\r\n\t{\r\n\t\t\r\n\t\tden3 = gcd(den1, den2);\r\n\t\tden3 = (den1 * den2) / den3;\r\n\t\t\r\n\t\tnum3 = (num1)*(den3/den1) + (num2)*(den3/den2);\r\n\t\t\r\n\t\t//System.out.println(num3+\"/\"+den3);\r\n\t\t//GfG g1 = new GfG();\r\n\t\t//Lowest l = new Lowest();\r\n\t\t//l.lowest(g1);\r\n\t\tint common_factor = gcd(num3, den3);\r\n\t\t\r\n\t\tden3 = den3/common_factor;\r\n        num3 = num3/common_factor;\r\n\t\tSystem.out.println(num3+\"/\"+den3);\r\n\t}\r\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": "def gcd(a, b):\r\n    if a==0:\r\n        return (b)\r\n    return (gcd(b%a, a))\r\n#Your task is to complete this function\r\n#Your shouldn't return any thing it should print the required output\r\ndef addFraction(num1, den1, num2, den2):\r\n    #Code here\r\n    #Contributed by: Harshit Sidhwa\r\n    den3=gcd(den1, den2)\r\n    den3=(den1*den2)/den3\r\n    num3=(num1)*(den3/den1)+(num2)*(den3/den2)\r\n\r\n    cf=gcd(num3, den3)\r\n    den3=den3/cf\r\n    num3=num3/cf\r\n    print (\"%d/%d\" %(num3,den3))\r\n",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\r\n\r\n/**\r\n * @param {number} num1\r\n * @param {number} den1\r\n * @param {number} num2\r\n * @param {number} den2\r\n * @return {number[]}\r\n*/\r\n\r\nclass Solution {\r\n    \r\n    addFraction(num1,den1,num2,den2){\r\n        //code here\r\n        let num3 = (num1 * den2) + (num2 * den1);\r\n        let den3 = den1 * den2;\r\n        let gcd = this.gcd(num3, den3);\r\n        num3 /= gcd;\r\n        den3 /= gcd;\r\n        return [num3, den3];\r\n    }\r\n\r\n    gcd(a, b){\r\n        if(a == 0)\r\n            return b;\r\n        return this.gcd(b % a, a);\r\n    }\r\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}