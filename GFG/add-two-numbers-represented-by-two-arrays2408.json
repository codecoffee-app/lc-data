{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703040,
            "title": "Add two numbers represented by two arrays",
            "titleSlug": "add-two-numbers-represented-by-two-arrays2408",
            "content": "<p><span style=\"font-size: 18px;\">Given two arrays <strong>arr1</strong> and <strong>arr2</strong>, representing two numbers such that every element of arrays represents a digit. The task is to find the sum of both the numbers.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input :</strong> arr1[] = [1, 2], arr2[] = [2, 1]\n<strong>Output :</strong> 33\n<strong>Explanation: </strong>arr1[]=[1,2] number represented by first array is 12. arr2[] = [2, 1] number represented by second array is 21. Sum = 12 + 21 = 33.</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input :</strong> arr1[] = [9, 5, 4, 9], arr2[] = [2, 1, 4] <strong>\nOutput :</strong> 9763 <br /><strong>Explanation :</strong> sum of 9549 and 214 is 9763. </span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong> O(n+m).<br /><strong>Expected Auxiliary Space:</strong> O(1).</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &le; arr1.size() &le; 10<sup>6</sup><br />1 &le; arr2.size() &le; </span><span style=\"font-size: 18px;\">10</span><sup>6<br /></sup><span style=\"font-size: 18px;\">1 &le; arr1[i], arr2[i] &le; 9</span><sup><br /></sup></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two arrays, `arr1` and `arr2`, where each element represents a digit, find the sum of the two numbers represented by these arrays.",
                "constraints": [
                    "1 <= arr1.size() <= 10^6",
                    "1 <= arr2.size() <= 10^6",
                    "1 <= arr1[i], arr2[i] <= 9"
                ],
                "testcases": [
                    {
                        "input": "arr1 = [1, 2], arr2 = [2, 1]",
                        "output": "33",
                        "explanation": "The number represented by arr1 is 12, and the number represented by arr2 is 21. Their sum is 12 + 21 = 33."
                    },
                    {
                        "input": "arr1 = [9, 5, 4, 9], arr2 = [2, 1, 4]",
                        "output": "9763",
                        "explanation": "The sum of the numbers 9549 and 214 is 9763."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to form the number represented by each array by traversing from the back and return the sum.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function template in C++\n\nclass Solution {\n  public:\n    // Function to calculate the sum of two integers given as arrays.\n    string sum(vector<int>& a, int n, vector<int>& b, int m) {\n\n        int carry = 0;\n        int s = 0;\n        int i = n - 1, j = m - 1;\n        int k = n - 1;\n        int sum[n + 1];\n\n        // Adding digits from the units place to the most significant digit.\n        while (j >= 0) {\n            s = a[i] + b[j] + carry;\n            sum[k] = s % 10;\n            carry = s / 10;\n            i--;\n            j--;\n            k--;\n        }\n\n        // Adding the remaining digits from the first number.\n        while (i >= 0) {\n            s = carry + a[i];\n            sum[k] = s % 10;\n            carry = s / 10;\n            k--;\n            i--;\n        }\n\n        // Creating a string to store the sum.\n        string ans = \"\";\n\n        // Checking if there is a carry in the most significant digit.\n        if (carry) {\n            ans += \"1\";\n        }\n\n        // Adding the digits from the sum array to the string.\n        for (int i = 0; i < n; i++) {\n            // Skipping leading zeros.\n            if (ans.size() == 0 and sum[i] == 0)\n                continue;\n            ans += to_string(sum[i]);\n        }\n\n        // Returning the final sum as a string.\n        return ans;\n    }\n\n    // Function to calculate the sum of two integers.\n    string calc_Sum(vector<int>& arr1, vector<int>& arr2) {\n        // Checking which number has more digits and calling the sum function\n        // accordingly.\n        int n = arr1.size();\n        int m = arr2.size();\n        if (m > n)\n            return sum(arr2, m, arr1, n);\n        else\n            return sum(arr1, n, arr2, m);\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "// User function Template for Java\nclass Solution {\n    // Function to calculate the sum of two integers given as arrays.\n    public String Sum(int[] a, int n, int[] b, int m) {\n        int carry = 0;\n        int s = 0;\n        int i = n - 1, j = m - 1;\n        int k = n - 1;\n        int[] sum = new int[n + 1];\n\n        // Adding digits from the units place to the most significant digit.\n        while (j >= 0) {\n            s = a[i] + b[j] + carry;\n            sum[k] = s % 10;\n            carry = s / 10;\n            i--;\n            j--;\n            k--;\n        }\n\n        // Adding the remaining digits from the first number.\n        while (i >= 0) {\n            s = carry + a[i];\n            sum[k] = s % 10;\n            carry = s / 10;\n            k--;\n            i--;\n        }\n\n        // Creating a string to store the sum.\n        StringBuilder ans = new StringBuilder();\n\n        // Checking if there is a carry in the most significant digit.\n        if (carry > 0) {\n            ans.append(\"1\");\n        }\n\n        // Adding the digits from the sum array to the string.\n        for (int idx = 0; idx < n; idx++) {\n            // Skipping leading zeros.\n            if (ans.length() == 0 && sum[idx] == 0) {\n                continue;\n            }\n            ans.append(sum[idx]);\n        }\n\n        // Returning the final sum as a string.\n        return ans.toString();\n    }\n\n    // Function to calculate the sum of two integers.\n    public String calc_Sum(int[] arr1, int[] arr2) {\n        // Checking which number has more digits and calling the sum function\n        // accordingly.\n        int n = arr1.length;\n        int m = arr2.length;\n        if (m > n) {\n            return Sum(arr2, m, arr1, n);\n        } else {\n            return Sum(arr1, n, arr2, m);\n        }\n    }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": "#User function Template for python3\nclass Solution:\n    # Function to calculate the sum of two integers given as arrays.\n    def sum(self, a, n, b, m):\n        carry = 0\n        s = 0\n        i = n - 1\n        j = m - 1\n        k = n - 1\n        sum_arr = [0] * (n + 1)\n\n        # Adding digits from the units place to the most significant digit.\n        while j >= 0:\n            s = a[i] + b[j] + carry\n            sum_arr[k] = s % 10\n            carry = s // 10\n            i -= 1\n            j -= 1\n            k -= 1\n\n        # Adding the remaining digits from the first number.\n        while i >= 0:\n            s = carry + a[i]\n            sum_arr[k] = s % 10\n            carry = s // 10\n            k -= 1\n            i -= 1\n\n        # Creating a string to store the sum.\n        ans = \"\"\n\n        # Checking if there is a carry in the most significant digit.\n        if carry > 0:\n            ans += \"1\"\n\n        # Adding the digits from the sum array to the string.\n        for idx in range(n):\n            # Skipping leading zeros.\n            if len(ans) == 0 and sum_arr[idx] == 0:\n                continue\n            ans += str(sum_arr[idx])\n\n        # Returning the final sum as a string.\n        return ans\n\n    # Function to calculate the sum of two integers.\n    def calc_Sum(self, arr1, arr2):\n        # Checking which number has more digits and calling the sum function accordingly.\n        n = len(arr1)\n        m = len(arr2)\n        if m > n:\n            return self.sum(arr2, m, arr1, n)\n        else:\n            return self.sum(arr1, n, arr2, m)\n",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "//Back-end complete function Template for javascript\nclass Solution {\n    // Function to calculate the sum of two integers given as arrays.\n    Sum(a, n, b, m) {\n        let carry = 0;\n        let s = 0;\n        let i = n - 1, j = m - 1;\n        let k = n - 1;\n        let sum = new Array(n + 1).fill(0);\n\n        // Adding digits from the units place to the most significant digit.\n        while (j >= 0) {\n            s = a[i] + b[j] + carry;\n            sum[k] = s % 10;\n            carry = Math.floor(s / 10);\n            i--;\n            j--;\n            k--;\n        }\n\n        // Adding the remaining digits from the first number.\n        while (i >= 0) {\n            s = carry + a[i];\n            sum[k] = s % 10;\n            carry = Math.floor(s / 10);\n            k--;\n            i--;\n        }\n\n        // Creating a string to store the sum.\n        let ans = \"\";\n\n        // Checking if there is a carry in the most significant digit.\n        if (carry > 0) {\n            ans += \"1\";\n        }\n\n        // Adding the digits from the sum array to the string.\n        for (let idx = 0; idx < n; idx++) {\n            // Skipping leading zeros.\n            if (ans.length === 0 && sum[idx] === 0) {\n                continue;\n            }\n            ans += sum[idx].toString();\n        }\n\n        // Returning the final sum as a string.\n        return ans;\n    }\n\n    // Function to calculate the sum of two integers.\n    calc_Sum(arr1, arr2) {\n        // Checking which number has more digits and calling the sum function\n        // accordingly.\n        let n = arr1.length;\n        let m = arr2.length;\n        if (m > n) {\n            return this.Sum(arr2, m, arr1, n);\n        } else {\n            return this.Sum(arr1, n, arr2, m);\n        }\n    }\n}\n",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}