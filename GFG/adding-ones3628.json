{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 702753,
            "title": "Adding Ones",
            "titleSlug": "adding-ones3628",
            "content": "<p><span style=\"font-size: 18px;\">You start with an array <strong>A</strong> of size <strong>N</strong>. Initially all elements of the array A are <strong>zero</strong>. You will be given <strong>K</strong> positive integers. Let <strong>j</strong> be one of these integers, you have to add <strong>1</strong> to all <strong>A[i]</strong>, where <strong>i &ge; j</strong>. Your task is to print the array A after all these <strong>K</strong> updates are done. <br /><strong><br />Note:</strong> Indices in updates array are given in 1-based indexing. That is updates[i] are in range [1,N].</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Example 1: </strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong>\nN = 3, K = 4\n1 1 2 3\n<strong>Output:</strong>\n2 3 4\n<strong>Explanation:</strong>\nInitially the array is {0, 0, 0}. After the\nfirst 1, it becomes {1, 1, 1}. After the\nsecond 1 it becomes {2, 2, 2}. After 2, <br />it becomes {2, 3, 3} and <br />After 3 it becomes, {2, 3, 4}. </span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Example 2: </strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong>\nN = 2, K = 3\n1 1 1\n<strong>Output:</strong>\n3 3 \n<strong>Explanation:</strong>\nInitially the array is {0, 0}. After the\nfirst 1, it becomes {1, 1}. After the\nsecond 1 it becomes {2, 2}. After the\nthird 1, it becomes {3, 3}.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Your Task:&nbsp;&nbsp;</strong><br />You don't need to read input or print anything. Your task is to complete the function&nbsp;<strong>update()</strong>&nbsp;which takes the array <strong>A[]</strong> and its size <strong>N</strong><strong> </strong>as inputs and make the updates and fill the array <strong>A[].</strong></span></p>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity: </strong>O(K)<br /><strong>Expected Auxiliary Space: </strong>O(1)</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &le; N, K &le; 10<sup>5<br /></sup></span><span style=\"font-size: 18px;\">1<sup>&nbsp;</sup>&le; updates[i] &le; N, for all i from 1 to K.</span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "You are given an array **A** of size **N**, initially filled with zeros. You are also given **K** positive integers representing update operations. For each integer **j** in the update sequence, increment all elements of array **A** from index **j** onwards (inclusive). Your task is to apply all **K** updates and return the final state of the array **A**.",
                "constraints": [
                    "1 <= N, K <= 10^5",
                    "1 <= updates[i] <= N, for all i from 1 to K"
                ],
                "testcases": [
                    {
                        "input": "N = 3, K = 4\n1 1 2 3",
                        "output": "2 3 4",
                        "explanation": "Initially A = {0, 0, 0}. After update 1: A = {1, 1, 1}. After update 1 again: A = {2, 2, 2}. After update 2: A = {2, 3, 3}. After update 3: A = {2, 3, 4}."
                    },
                    {
                        "input": "N = 2, K = 3\n1 1 1",
                        "output": "3 3",
                        "explanation": "Initially A = {0, 0}. After update 1: A = {1, 1}. After update 1 again: A = {2, 2}. After update 1 again: A = {3, 3}."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size: 14pt;\">Use Prefix sums.</span></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "// Back-end complete function template in C++\n\nclass Solution{\n    public:\n    // Function to update the array by adding 1 to the specified indices\n    void update(int a[], int n, int updates[], int k)\n    {\n        // Loop to update the array based on the specified indices\n        for(int i = 0; i < k; i++)\n            a[updates[i]-1]++; // Adding 1 to the specified index\n        \n        // Loop to update the array by calculating cumulative sum\n        for(int i = 1; i < n; i++)\n            a[i]+=a[i-1]; // Adding previous element to the current element\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\n// Function to update the array based on the given updates\nclass Solution {\n    public static void update(int a[], int n, int updates[], int k) {\n        // Loop through the updates array\n        for(int i = 0; i < k; i++)\n            // Increment the value in the original array at the update index\n            a[updates[i]-1]++;\n\n        // Loop through the original array starting from index 1\n        for(int i = 1; i < n; i++)\n            // Add the previous element's value to the current element's value\n            a[i] += a[i-1];\n    }\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\r\n\r\nclass Solution:\r\n    \r\n    #Function to update the array based on given updates.\r\n    def update(self, a, n, updates, k):\r\n        \r\n        #iterating over the updates array.\r\n        for i in range(0,k):\r\n            #incrementing the value at index updates[i]-1 by 1.\r\n            a[updates[i]-1]+=1\r\n        \r\n        #iterating over the updated array.\r\n        for i in range (1,n):\r\n            #updating the value at index i by adding the value at previous index.\r\n            a[i]+=a[i-1]",
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}