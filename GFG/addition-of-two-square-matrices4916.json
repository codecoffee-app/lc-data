{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705140,
            "title": "Addition of two square matrices",
            "titleSlug": "addition-of-two-square-matrices4916",
            "content": "<p><span style=\"font-size:18px\">Given two square matrices matrixA and matrixB of size n x&nbsp;n.&nbsp; Find the addition of these two matrices.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Note</strong> :- You don&#39;t have to return anything in this question&nbsp;(Refer <strong>YourTask</strong> section).</span><br />\r\n&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input: </strong>matrixA = {{1, 2}, {3, 4}},\r\nmatrixB = {{4, 3}, {2, 1}}\r\n<strong>Output: </strong>{{5, 5}, {5, 5}}</span>\r\n</pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input: </strong>matrixA = {{2, 2}, {2, 2}},\r\nmatrixB = {{3, 3}, {3, 3}}\r\n<strong>Output: </strong>{{5, 5},{5, 5}}</span>\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou don&#39;t need to read or print anything. Your task is to complete the function&nbsp;<strong>Addition()</strong>&nbsp;which takes matrixA and matrixB as input parameters and adds two matrices. Do the addition without using extra memory. The output matrix must be in matrixA.</span><br />\r\n&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:&nbsp;</strong>O(n<sup>2</sup>)<br />\r\n<strong>Expected Space Complexity:&nbsp;</strong>O(1)</span><br />\r\n&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n1 &lt;= n &lt;= 100</span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two square matrices, `matrixA` and `matrixB`, of size n x n, perform element-wise addition of the matrices.  Modify `matrixA` in place to store the result of the addition (i.e., `matrixA = matrixA + matrixB`). Do not use extra memory for storing the result; update `matrixA` directly.",
                "constraints": [
                    "1 <= n <= 100"
                ],
                "testcases": [
                    {
                        "input": "matrixA = {{1, 2}, {3, 4}}, matrixB = {{4, 3}, {2, 1}}",
                        "output": "{{5, 5}, {5, 5}}",
                        "explanation": "The addition is performed element by element: (1+4, 2+3, 3+2, 4+1)"
                    },
                    {
                        "input": "matrixA = {{2, 2}, {2, 2}}, matrixB = {{3, 3}, {3, 3}}",
                        "output": "{{5, 5}, {5, 5}}",
                        "explanation": "The addition is performed element by element: (2+3, 2+3, 2+3, 2+3)"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Do simple addition.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C",
                "full_func": "//Function to perform matrix addition\n\nvoid Addition(int n, int matrixA[][n], int matrixB[][n])\n{\n    //Iterating over the rows of the matrix\n    for(int i=0; i<n; i++) {\n\n        //Iterating over the columns of the matrix\n        for(int j=0; j<n; j++)\n\n            //Calculating the sum of corresponding elements in the two matrices and updating the value in the first matrix\n            matrixA[i][j] += matrixB[i][j];\n    }\n}",
                "lang_text": "c"
            },
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nclass Solution {\npublic:\n    //Function to perform matrix addition.\n    void Addition(vector<vector<int> >& matrixA, vector<vector<int>>&matrixB) {\n        //iterating over each row and column of the matrices.\n    \tfor(int i = 0; i < matrixA.size(); i++){\n    \t\tfor(int j = 0; j < matrixA[0].size(); j++)\n                //adding corresponding elements of both matrices.\n    \t\t\tmatrixA[i][j] += matrixB[i][j];\n    \t}\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    public void Addition(List<List<int>> matrixA, List<List<int>> matrixB)\n    {\n        //iterating over each row and column of the matrices.\n        for (int i = 0; i < matrixA.Count; i++)\n        {\n            for (int j = 0; j < matrixA[0].Count; j++)\n            {\n                //adding corresponding elements of both matrices.\n                matrixA[i][j] += matrixB[i][j];\n            }\n        }\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}