{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703760,
            "title": "All numbers with specific difference",
            "titleSlug": "all-numbers-with-specific-difference3558",
            "content": "<p><span style=\"font-size: 18px;\">Given a positive number <strong>n</strong> and a number <strong>d</strong>.&nbsp; Find the count of positive numbers smaller or equal to&nbsp; n such that the difference between the number and sum of its digits is greater than or equal to given specific value d.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong></span>\n<span style=\"font-size: 18px;\">n = 13 , d = 2</span>\n<span style=\"font-size: 18px;\"><strong>Output:</strong></span>\n<span style=\"font-size: 18px;\">4</span>\n<span style=\"font-size: 18px;\"><strong>Explanation:</strong></span>\n<span style=\"font-size: 18px;\">There are 4 numbers satisfying the\nConditions. These are 10,11,12 and 13.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong></span>\n<span style=\"font-size: 18px;\">n = 14 , d = 3</span>\n<span style=\"font-size: 18px;\"><strong>Output:</strong></span>\n<span style=\"font-size: 18px;\">5</span>\n<span style=\"font-size: 18px;\"><strong>Explanation:</strong></span>\n<span style=\"font-size: 18px;\">There are 5 numbers satisfying the\nConditions. These are 10,11,12,13 and 14.</span>\n</pre>\n<p><span style=\"font-size: 18px;\"><strong>Your Task:</strong><br />You don't need to read input or print anything. Your task is to complete the function <strong>getCount()</strong> which takes 2 integers n and d as input and returns the answer.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong> O(log(N))<br /><strong>Expected Auxiliary Space:</strong> O(1)</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong></span><br /><span style=\"font-size: 18px;\">1 &lt;= n &lt;= 10<sup>16</sup></span></p>\n<p><span style=\"font-size: 18px;\">1&lt;=d&lt;=10<sup>15</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size: 18px;\">Find the lowest positive number that satisfies the Conditions. See the&nbsp;</span><span style=\"background-color: #ffffff; color: #1e2229; font-family: var(--gfg-font-secondary); font-size: 17px; font-weight: bolder;\">Constraints, which clearly show that less than O(n) algorithm has to be used.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n\n    // Function to get Sum of Digits of a Number.\n    long long sumOfDigit(long long K) {\n\n        long long sod = 0;\n        while (K) {\n            sod += K % 10;\n            K /= 10;\n        }\n        return sod;\n    }\n\n  public:\n    long long getCount(long long N, long long D) {\n\n        // Binary Search to get the least number satisfying the Conditions\n\n        long long low = 1, high = N;\n\n        while (low <= high) {\n            long long mid = (low + high) / 2;\n\n            if (mid - sumOfDigit(mid) < D)\n                low = mid + 1;\n\n            else\n                high = mid - 1;\n        }\n\n        // The least satisfying number must be subtracted from N to get the answer.\n\n        return (N - high);\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": null,
                "lang_text": "csharp"
            },
            {
                "lang": "Javascript",
                "full_func": "class Solution {\n    // Function to get sum of digits of a number.\n    sumOfDigit(K) {\n        let sod = 0;\n        while (K) {\n            sod += K % 10;\n            K = Math.floor(K / 10);\n        }\n        return sod;\n    }\n\n    // Function to get the count of numbers satisfying the conditions.\n    getCount(N, D) {\n        // Binary Search to get the least number satisfying the conditions.\n        let low = 1;\n        let high = N;\n\n        while (low <= high) {\n            let mid = Math.floor((low + high) / 2);\n\n            if (mid - this.sumOfDigit(mid) < D)\n                low = mid + 1;\n            else\n                high = mid - 1;\n        }\n\n        // The least satisfying number must be subtracted from N to get the answer.\n        return N - high;\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}