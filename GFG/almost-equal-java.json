{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 700827,
            "title": "Almost Equal -Java",
            "titleSlug": "almost-equal-java",
            "content": "<p><span style=\"font-size: 18px;\">Given two strings <strong>s1</strong> and <strong>s2</strong> consisting of only lowercase characters whose <a href=\"http://www.geeksforgeeks.org/check-whether-two-strings-are-anagram-of-each-other/\">anagrams </a>are almost equal.<br />The task is to count the number of characters which needs to be <strong>deleted</strong>&nbsp;to make s1 equal to s2.</span></p>\n<p><strong><span style=\"font-size: 18px;\">Example 1:</span></strong></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>s1 = \"madame\", s2 = \"madam\"</span>\n<span style=\"font-size: 18px;\"><strong>Output: </strong>1</span>\n<span style=\"font-size: 18px;\"><strong>Explanation: </strong>string s1 = madame, string s2 = madam. Character 'e' in </span><span style=\"font-size: 18px;\">first string is need to be deleted to make S1 equal to S2.</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>s1 = \"suryansh\", s2 = \"suryanshzzawesome\"</span>\n<span style=\"font-size: 18px;\"><strong>Output: </strong></span><span style=\"font-size: 18px;\">9</span>\n<span style=\"font-size: 18px;\"><strong>Explanation: </strong>string S1 = suryansh, string S2 = suryanshzzawesome. All character after \"suryansh\" in </span><span style=\"font-size: 18px;\">second string are need to be deleted to make S1 equal to S2.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &lt;= s1, s2 &lt;= 10<sup>4</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two strings `s1` and `s2` consisting of only lowercase characters that are almost anagrams of each other, determine the minimum number of characters that need to be deleted from either string to make them equal.",
                "constraints": [
                    "1 <= length of s1 <= 10^4",
                    "1 <= length of s2 <= 10^4"
                ],
                "testcases": [
                    {
                        "input": "s1 = \"madame\", s2 = \"madam\"",
                        "output": "1",
                        "explanation": "The string `s1` is \"madame\" and the string `s2` is \"madam\". Deleting the character 'e' from `s1` will make the two strings equal."
                    },
                    {
                        "input": "s1 = \"suryansh\", s2 = \"suryanshzzawesome\"",
                        "output": "9",
                        "explanation": "The string `s1` is \"suryansh\" and the string `s2` is \"suryanshzzawesome\". Deleting the characters \"zzawesome\" (9 characters) from `s2` will make the two strings equal."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:20px\">Use an Array to store the frequencies of Character.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Java-Strings",
                "slug": "java-strings"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\r\n\r\n\r\nclass Geeks{\r\n    \r\n    static int coutChars(String s1, String s2)\r\n    {\r\n        \r\n        //creating an array to store\r\n        //the frequency of each alphabet\r\n        int hash[] = new int[26];\r\n        \r\n        //Increment frequency of alphabet\r\n        for(int i = 0;i<s1.length();i++){\r\n            hash[s1.charAt(i)-'a']++;\r\n        }\r\n        \r\n        //Decrementing frequncy of alphabet\r\n        for(int i = 0;i<s2.length();i++){\r\n            hash[s2.charAt(i)-'a']--;\r\n        }\r\n        \r\n        //initializing Extra Charcters \r\n        //count to 0\r\n        int count = 0;\r\n        \r\n        //adding the absolute values to the \r\n        //Extra Character count\r\n        for(int i = 0;i<26;i++){\r\n            if(hash[i] != 0){\r\n                count+=Math.abs(hash[i]);\r\n            }\r\n        }\r\n        \r\n        //returning Extra Charcater count\r\n        return count;\r\n    }\r\n}",
                "lang_text": "java"
            }
        ],
        "platform": "GFG"
    }
}