{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 700822,
            "title": "Almost Equal",
            "titleSlug": "almost-equal",
            "content": "<p><span style=\"font-size:18px\">Given two strings <strong>s1</strong> and <strong>s2</strong> consisting of only lowercase characters whose <a href=\"https://www.geeksforgeeks.org/check-whether-two-strings-are-anagram-of-each-other/\"><strong>anagrams </strong></a>are <strong>almost equal</strong>. The task is to count the number of characters which needs to be <strong>edited</strong>(<strong>delete</strong>) to make<strong>&nbsp;s1&nbsp;equal to s2</strong>.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Example:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\ns1 = madame\ns2 = madam\n<strong>Output:\n</strong>1\n<strong>Explanation:\n</strong>String s1 = madame, string s2 = madam. \ncharacter &#39;e&#39; in first string needs to \nbe deleted to make s1 equal to s2.</span></pre>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nPrint the count of characters needed to delete to make s1 and s2&nbsp;equal. Complete the given function.<br />\n<br />\n<strong>Expected Time Complexity:&nbsp;</strong>O(max(|s1|,|s2|))<br />\n<strong>Expected Auxilary Space: </strong>O(|s1| + |s2|)&nbsp;</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\n1 &lt;= s1, s2 &lt;= 10<sup>4</sup></span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two strings, `s1` and `s2`, consisting of only lowercase characters whose anagrams are almost equal, determine the minimum number of character deletions required to make `s1` equal to `s2`.",
                "constraints": [
                    "1 <= length of s1 <= 10^4",
                    "1 <= length of s2 <= 10^4"
                ],
                "testcases": [
                    {
                        "input": "s1 = madame\ns2 = madam",
                        "output": "1",
                        "explanation": "The string `s1` is \"madame\" and `s2` is \"madam\".  Deleting the 'e' from `s1` makes it equal to `s2`. Therefore, only 1 character needs to be deleted."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:14px\">1. Check if the frequency of occurrence of characters are same in both strings</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "cpp-strings",
                "slug": "cpp-strings"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\n/*Function to count number of characters \n* to make s1 and s2 equal\n* s1 : first string\n* s2 : second string\n*/\nclass Solution{\n  public:\n    int countChars(string s1, string s2){\n        \n        //hash array for 26 characters\n        int hash[26] = {0};\n        \n        //counting frequency w.r.t to other string\n        for(int i = 0;i<s1.length();i++){\n            hash[s1[i]-'a']++;\n        }\n        for(int i = 0;i<s2.length();i++){\n            hash[s2[i]-'a']--;\n        }\n        \n        int count = 0;\n        \n        //counting characters need to be edited/deleted\n        for(int i = 0;i<26;i++){\n            if(hash[i] != 0){\n                count+=abs(hash[i]);\n            }\n        }\n        \n        return count;\n        \n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            },
            {
                "lang": "Javascript",
                "full_func": "\nclass Solution{\n    countChars(str1, str2){\n        //hash array for 26 characters\n        let hash = new Array(26).fill(0);\n        \n        //counting frequency w.r.t to other string\n        for(let i = 0; i < str1.length; i++){\n            hash[str1[i].charCodeAt() - 97]++;\n        }\n        for(let i = 0; i < str2.length; i++){\n            hash[str2[i].charCodeAt() - 97]--;\n        }\n        \n        let count = 0;\n        \n        //counting characters need to be edited/deleted\n        for(let i = 0; i < 26; i++){\n           if(hash[i] !== 0){\n             count += Math.abs(hash[i]);\n           }\n        }\n        \n        console.log(count);\n   }\n}",
                "lang_text": "javascript"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    //Function to count number of characters \n    //to make s1 and s2 equal\n    public int countChars(string s1, string s2)\n    {\n        //hash array for 26 characters\n        int[] hash = new int[26];\n        \n        //counting frequency w.r.t to other string\n        for(int i = 0;i<s1.Length;i++){\n            hash[s1[i]-'a']++;\n        }\n        for(int i = 0;i<s2.Length;i++){\n            hash[s2[i]-'a']--;\n        }\n        \n        int count = 0;\n        \n        //counting characters need to be edited/deleted\n        for(int i = 0;i<26;i++){\n            if(hash[i] != 0){\n                count+=Math.Abs(hash[i]);\n            }\n        }\n        \n        return count;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}