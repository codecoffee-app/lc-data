{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704026,
            "title": "Party of Couples",
            "titleSlug": "alone-in-couple5507",
            "content": "<p><span style=\"font-size: 18px;\">You are given an integer array <strong>arr[]</strong> of size <strong>n,</strong> representing n number of people in a party, each person is denoted by an integer. Couples are represented by the <strong>same number </strong>ie: <strong>two</strong> people have the <strong>same integer value</strong>, it means they are a <strong>couple</strong>. Find out the <strong>only</strong> <strong>single person</strong> in the party of couples.<br />Note:</span><strong><span style=\"font-size: 18px;\">&nbsp;</span></strong><span style=\"font-size: 18px;\">It is guarantee that there exist only one single person in the party.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples :</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong> arr[] = [1, 2, 3, 2, 1]\n<strong>Output:</strong> 3\n<strong>Explaination:</strong> Only the number 3 is single.</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong> arr[] = [1, 2, 3, 5, 3, 2, 1, 4, 5, 6, 6] <br /><strong>Output: </strong>4 <br /><strong>Explaination:</strong> 4 is the only single.<br /></span></pre>\n<pre><strong>Input:</strong> arr[] = [1, 1, 3, 3, 2] <br /><strong>Output: </strong>2</pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &le; arr.size() &le; 10<sup>4</sup><br />1 &le; arr[i] &le; 10<sup>6</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an integer array `arr` of size `n`, where each element represents a person in a party. Couples are represented by the same integer value (i.e., two people with the same integer are a couple). Find the integer representing the single person in the party. It is guaranteed that only one single person exists.",
                "constraints": [
                    "1 <= arr.size() <= 10^4",
                    "1 <= arr[i] <= 10^6"
                ],
                "testcases": [
                    {
                        "input": "[1, 2, 3, 2, 1]",
                        "output": "3",
                        "explanation": "The number 3 appears only once in the array, while the numbers 1 and 2 appear twice each."
                    },
                    {
                        "input": "[1, 2, 3, 5, 3, 2, 1, 4, 5, 6, 6]",
                        "output": "4",
                        "explanation": "The number 4 appears only once, making it the single person."
                    },
                    {
                        "input": "[1, 1, 3, 3, 2]",
                        "output": "2",
                        "explanation": "The number 2 appears only once, while the numbers 1 and 3 form couples."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Use XOR operation: XOR-ing all elements will cancel out pairs, leaving the single element.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Bit Magic",
                "slug": "bit-magic"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [
            "ola-cabs"
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nclass Solution {\n  public:\n    // Function to find the single element in the array\n    int findSingle(vector<int> &arr) {\n        int ans = 0;\n\n        // loop to find the single element\n        for (int i = 0; i < arr.size(); i++) {\n            ans ^= arr[i];\n        }\n        return ans;\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\nclass Solution {\n    static int findSingle(int[] arr) {\n        int ans = 0;\n\n        // loop to get the single element\n        for (int i = 0; i < arr.length; i++) {\n            ans ^= arr[i]; // exclusive OR operation to find single element\n        }\n        return ans; // return the single element\n    }\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\n\nclass Solution:\n    #Function to find the element that occurs only once in an array.\n    def findSingle(self, arr):\n        ans = 0\n        n = len(arr)\n        #iterating over the array\n        for i in range(0, n):\n            #Performing bitwise XOR operation between ans and arr[i]\n            ans = ans ^ arr[i]\n        #returning the result after XOR operation\n        return ans\n",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "class Solution {\n    findSingle(arr) {\n        let ans = 0;\n        for (let i = 0; i < arr.length; i++) {\n            ans ^= arr[i];\n        }\n        return ans;\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}