{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703783,
            "title": "Armstrong Numbers",
            "titleSlug": "armstrong-numbers2727",
            "content": "<p><span style=\"font-size: 18px;\">You are given a<strong> 3-digit</strong> number <strong>n</strong>, Find whether it is an <strong><span style=\"color: #000000;\">Armstrong </span></strong>number or not.</span></p>\n<p><span style=\"font-size: 18px;\">An&nbsp;<em>Armstrong number</em> of three digits is a number such that the sum of the cubes of its digits is equal to the <em>number </em>itself.&nbsp;</span><span style=\"font-size: 18px;\">371 is an&nbsp;</span><span style=\"font-size: 18px;\">Armstrong number</span><span style=\"font-size: 18px;\">&nbsp;since 3</span><sup>3</sup><span style=\"font-size: 18px;\">&nbsp;+ 7</span><sup>3&nbsp;</sup><span style=\"font-size: 18px;\">+ 1</span><sup>3</sup><span style=\"font-size: 18px;\"> = 371.&nbsp;</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input</strong>: n = 153\n<strong>Output:</strong> true\n<strong>Explanation</strong>: 153 is an&nbsp;Armstrong number<strong> </strong>since 1<sup>3</sup> + 5<sup>3 </sup>+ 3<sup>3</sup> = 153. </span>\n</pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>n = 372\n<strong>Output: </strong>false\n<strong>Explanation</strong>: 372 is not an Armstrong number<strong> </strong>since 3<sup>3</sup> + 7<sup>3 </sup>+ 2<sup>3</sup> = 378. <br /></span></pre>\n<pre><span ><strong>Input: </strong>n = 100\n<strong>Output: </strong>false\n<strong>Explanation</strong>: 100 is not an Armstrong number<strong> </strong>since 1<sup>3</sup> + 0<sup>3 </sup>+ 0<sup>3</sup> = 1. </span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />100 &le; n &lt;1000&nbsp;</span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Determine if a given 3-digit number is an Armstrong number. An Armstrong number is a number where the sum of the cubes of its individual digits equals the number itself.",
                "constraints": [
                    "100 <= n < 1000"
                ],
                "testcases": [
                    {
                        "input": "153",
                        "output": "true",
                        "explanation": "153 is an Armstrong number because 1\u00b3 + 5\u00b3 + 3\u00b3 = 1 + 125 + 27 = 153"
                    },
                    {
                        "input": "372",
                        "output": "false",
                        "explanation": "372 is not an Armstrong number because 3\u00b3 + 7\u00b3 + 2\u00b3 = 27 + 343 + 8 = 378"
                    },
                    {
                        "input": "100",
                        "output": "false",
                        "explanation": "100 is not an Armstrong number because 1\u00b3 + 0\u00b3 + 0\u00b3 = 1 + 0 + 0 = 1"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span >Extract each digit of the number and check for Armstrong number.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "vmware",
            "oracle"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\nclass Solution {\n  public:\n    // Function to check if a number is an Armstrong number.\n    bool armstrongNumber(int n) {\n        int sum = 0;  // variable to store the sum of cube of digits\n        int temp = n; // variable to store the value of n\n\n        // loop to calculate the sum of cube of digits\n        while (temp) {\n            int last_dig = temp % 10; // extracting the last digit of temp\n            temp /= 10;               // updating temp to remove the last digit\n            sum += (last_dig * last_dig *\n                    last_dig); // adding the cube of last digit to sum....\n        }\n\n        // checking if the sum is equal to the original number\n\n        if (sum == n) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "// User function Template for Java\nclass Solution {\n    static boolean armstrongNumber(int n) {\n        // variable to store the original number\n        int temp = n;\n        // variable to store the sum of cubes of each digit\n        int sum = 0;\n\n        // loop to calculate the sum of cubes of each digit\n        while (temp != 0) {\n            int digit = temp % 10;\n            sum = sum + (int)Math.pow(digit, 3);\n            temp /= 10;\n        }\n        // checking if the sum is equal to the original number\n        if (sum == n) {\n            return true;\n        } else\n            return false;\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#User function Template for python3\n\n\n#User function to check if given number is Armstrong or not.\nclass Solution:\n\n    #Function to check if a number is Armstrong or not.\n    def armstrongNumber(self, n):\n\n        #Convert the number to a list of digits\n        l = list(map(int, str(n)))\n\n        #Initialize a variable to store the sum of cubes of digits\n        s = 0\n\n        #Loop through each digit in the number\n        for i in l:\n            #Add the cube of each digit to the sum\n            s += i**3\n\n        #Check if the sum of cubes is equal to the original number\n        if n == s:\n            return True\n        else:\n            return False\n",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "// User function Template for javascript\n\n/**\n * @param {number} n\n * @returns {boolean}\n */\n\nclass Solution {\n    armstrongNumber(n) {\n        let sum = 0;\n        let temp = n;\n        // sum of cubes of digits\n        while (temp) {\n            let last_dig = temp % 10;\n            temp = Math.floor(temp / 10);\n            sum += Math.pow(last_dig, 3);\n        }\n        // check if sum is equal to given number\n        if (sum == n) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}