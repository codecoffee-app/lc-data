{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 701018,
            "title": "Array insert at index",
            "titleSlug": "array-insert-at-index",
            "content": "<p><em><span style=\"font-size:18px\">Insertion is a basic but frequently used operation. Arrays in most languages cannnot be dynamically shrinked or expanded. Here, we will work with such arrays and try to insert an element at some index.</span></em></p>\r\n\r\n<p><span style=\"font-size:18px\">You are given an array <strong>arr</strong>(0-based index). The size of the array is given by <strong>sizeOfArray</strong>. You need to <strong>insert </strong>an <strong>element </strong>at given <strong>index</strong>.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:\r\n</strong>sizeOfArray = 6\r\narr[] = {1, 2, 3, 4, 5}\r\nindex = 5, element = 90\r\n<strong>Output: </strong>1 2 3 4 5 90<strong>\r\nExplanation: </strong>90 is&nbsp;inserted at index\r\n5(0-based indexing). After inserting,\r\narray elements are like\r\n1, 2, 3, 4, 5, 90.</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:\r\n</strong>sizeOfArray = 6\r\narr[] = {1, 2, 3, 4, 5}\r\nindex = 2, element = 90\r\n<strong>Output: </strong>1 2 90 3 4 5<strong>\r\nExplanation: </strong>90 is&nbsp;inserted at index \r\n2(0-based indexing). After inserting,\r\narray elements are like \r\n1, 2, 90, 3, 4, 5.</span></pre>\r\n\r\n<p><strong><span style=\"font-size:18px\">Your Task:</span></strong><br />\r\n<span style=\"font-size:18px\">You don&#39;t need to read input or print anything.. The input is already taken care of by the driver code. You only need to complete the function <strong>insertAtIndex() </strong>that takes <em>arr</em><strong>, </strong><em>sizeOfArray</em><strong>, </strong><em>index</em><strong>, </strong><em>element</em> as input and modifies the array <em>arr&nbsp;</em>as per requirements. The <strong>printing </strong>is done by <strong>driver code</strong>.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong>&nbsp;O(N).<br />\r\n<strong>Expected Auxiliary Space:</strong>&nbsp;O(1).</span></p>\r\n\r\n<p><strong><span style=\"font-size:18px\">Constraints:</span></strong><br />\r\n<span style=\"font-size:18px\">1 &lt;= sizeOfArray &lt;= 10000<br />\r\n0 &lt;= element, arr<sub>i </sub>&lt;= 10<sup>6</sup><br />\r\n0 &lt;= index &lt;= sizeOfArray-1</span></p>\r\n\r\n<p>&nbsp;</p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array `arr` of size `sizeOfArray`, insert an `element` at the specified `index`.  The array is 0-indexed and cannot be dynamically resized. Modify the original array in-place to include the new element at the given index, shifting existing elements as needed.",
                "constraints": [
                    "1 <= sizeOfArray <= 10000",
                    "0 <= element, arr[i] <= 10^6",
                    "0 <= index <= sizeOfArray - 1"
                ],
                "testcases": [
                    {
                        "input": "sizeOfArray = 6\narr = [1, 2, 3, 4, 5]\nindex = 5\nelement = 90",
                        "output": "1 2 3 4 5 90",
                        "explanation": "The element 90 is inserted at index 5. The resulting array is [1, 2, 3, 4, 5, 90]."
                    },
                    {
                        "input": "sizeOfArray = 6\narr = [1, 2, 3, 4, 5]\nindex = 2\nelement = 90",
                        "output": "1 2 90 3 4 5",
                        "explanation": "The element 90 is inserted at index 2, shifting elements at index 2 and beyond to the right. The resulting array is [1, 2, 90, 3, 4, 5]."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            ""
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C",
                "full_func": "//Back-end complete function Template for C\r\n\r\nvoid insertAtIndex(int arr[], int sizeOfArray, int index, int element)\r\n    {\r\n        // if given index is last index we simply assign the element at last index.\r\n        if(index == sizeOfArray-1)\r\n        {\r\n            arr[index] = element;\r\n            return;\r\n        }\r\n        \r\n        //if given index is not last index we need to shift all the elements starting\r\n        //from that index to the last element towards right by 1 position.\r\n        arr[sizeOfArray-1] = -1;\r\n        //we iterate from last index to the index given.\r\n        for(int i = sizeOfArray-1; i > index; i--)\r\n        {\r\n            //we simply swap the values at ith and (i-1)th index in the array.\r\n            int temp = arr[i];\r\n            arr[i] = arr[i-1];\r\n            arr[i-1] = temp;\r\n        }\r\n        //Then we insert the given element at given index.\r\n        arr[index] = element;\r\n    }",
                "lang_text": "c"
            },
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\r\n\r\nclass Solution{\r\n  public:\r\n    //Function to insert a element at a given index in an array.\r\n    void insertAtIndex(int arr[], int sizeOfArray, int index, int element)\r\n    {\r\n        // if given index is last index we simply assign the element at last index.\r\n        if(index == sizeOfArray-1)\r\n        {\r\n            arr[index] = element;\r\n            return;\r\n        }\r\n        \r\n        //if given index is not last index we need to shift all the elements starting\r\n        //from that index to the last element towards right by 1 position.\r\n        arr[sizeOfArray-1] = -1;\r\n        //we iterate from last index to the index given.\r\n        for(int i = sizeOfArray-1; i > index; i--)\r\n        {\r\n            //we simply swap the values at ith and (i-1)th index in the array.\r\n            int temp = arr[i];\r\n            arr[i] = arr[i-1];\r\n            arr[i-1] = temp;\r\n        }\r\n        //Then we insert the given element at given index.\r\n        arr[index] = element;\r\n    }\r\n};\r\n",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\r\n\r\nclass Solution\r\n{\r\n    //Function to insert a element at a given index in an array.\r\n    public void insertAtIndex(int arr[],int sizeOfArray,int index,int element)\r\n    {\r\n        //if given index is last index we simply assign the element at last index.\r\n        if(index==sizeOfArray-1)\r\n        {\r\n            arr[index]=element;\r\n            return;\r\n        }\r\n        //if given index is not last index we need to shift all the elements starting\r\n        //from that index to the last element towards right by 1 position.\r\n        arr[sizeOfArray-1] = -1;\r\n         \r\n        //we iterate from last index to the index given.\r\n        for(int i=sizeOfArray-1;i>index;i--)\r\n        {\r\n             //we simply swap the values at ith and (i-1)th index in the array.\r\n            int temp=arr[i];\r\n            arr[i]=arr[i-1];\r\n            arr[i-1]=temp;\r\n        }\r\n        //Then we insert the given element at given index.\r\n        arr[index]=element;\r\n    }\r\n\r\n\r\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\r\n\r\n#Function to insert a element at a given index in an array.\r\nclass Solution:\r\n    def insertAtIndex(self, arr, sizeOfArray, index, element):\r\n    \r\n        #if given index is last index we simply assign the element at last index.\r\n        if(index==sizeOfArray-1):\r\n             arr[index]=element\r\n             return \r\n        \r\n        #if given index is not last index we need to shift all the elements starting\r\n        #from that index to the last element towards right by 1 position.\r\n        arr[sizeOfArray-1] = -1;\r\n        \r\n        #we iterate from last index to the index given.\r\n        for i in range(sizeOfArray-1,index,-1):\r\n            #we simply swap the values at ith and (i-1)th index in the array.\r\n            temp=arr[i]\r\n            arr[i]=arr[i-1]\r\n            arr[i-1]=temp\r\n        \r\n        #Then we insert the given element at given index.\r\n        arr[index]=element\r\n",
                "lang_text": "py"
            },
            {
                "lang": "Javascript",
                "full_func": "//Back-end complete function Template for javascript\r\n\r\n\r\n// You need to insert the given element at the given index. \r\n// After inserting the elements at index, elements\r\n// from index onward should be shifted one position ahead\r\n// You may assume that the array already has sizeOfArray - 1\r\n// elements.\r\n/**\r\n * @param {number[]} arr\r\n * @param {number} sizeOfArray\r\n * @param {number} index\r\n * @param {number} element\r\n */\r\nclass Solution {\r\n    //Function to insert a element at a given index in an array.\r\n    insertAtIndex(arr,sizeOfArray,index,element){\r\n        \r\n        //if given index is last index we simply assign the element at last index.\r\n        if(index == sizeOfArray-1)\r\n        {\r\n            arr[index] = element;\r\n            return;\r\n        }\r\n        \r\n        //if given index is not last index we need to shift all the elements starting\r\n        //from that index to the last element towards right by 1 position.\r\n        arr[sizeOfArray-1] = -1;\r\n        //we iterate from last index to the index given.\r\n        for(let i = sizeOfArray-1; i > index; i--)\r\n        {\r\n            //we simply swap the values at ith and (i-1)th index in the array.\r\n            let temp = arr[i];\r\n            arr[i] = arr[i-1];\r\n            arr[i-1] = temp;\r\n        }\r\n        //Then we insert the given element at given index.\r\n        arr[index] = element;\r\n    }\r\n}",
                "lang_text": "javascript"
            },
            {
                "lang": "C#",
                "full_func": "class Solution\n{\n    public void insertAtIndex(int[] arr, int sizeOfArray, int index, int element)\n    {\n        if(index == sizeOfArray-1)\n        {\n            arr[index] = element;\n            return;\n        }\n        \n        arr[sizeOfArray-1] = -1;\n        \n        for(int i = sizeOfArray-1; i > index; i--)\n        {\n            int temp = arr[i];\n            arr[i] = arr[i-1];\n            arr[i-1] = temp;\n        }\n        \n        arr[index] = element;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}