{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 702756,
            "title": "ArrayList Operations",
            "titleSlug": "arraylist-operations",
            "content": "<p><span style=\"font-size: 18px;\">In this question we will be implementing <strong>q&nbsp;</strong>number&nbsp;operations on ArrayList. There will be different type of queries.<br />A query can be of&nbsp;five&nbsp;types:<br />1. a x (Adds an element x to the ArrayList A&nbsp;at the end)<br />2. b (Sorts the ArrayList A in ascending order)<br />3. c (Reverses the ArrayList A)<br />4. d (prints the size of the ArrayList)<br />5. e (Sorts the ArrayList A in descending order)<br />6. f&nbsp;&nbsp;</span><span style=\"font-size: 18px; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">(prints space separated values of the ArrayList)</span></p>\n<p><strong><span style=\"font-size: 18px;\">Examples:</span></strong></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>q = 6, queries = \"a 4 a 6 a 7 b c e\"<br /></span><span style=\"font-size: 18px;\"><strong>Output</strong>: 7 6 4<br /></span><span style=\"font-size: 18px;\"><strong>Explanation:</strong>\nThere are six queries.\nQueries are performed in this order\n1. a 4 {ArrayList has 4}\n2. a 7 {ArrayList has 4,7}\n3. a 6 {ArrayList has 4,7,6}\n4. b {sorts the ArrayList in ascending order,\n&nbsp;     ArrayList now is 4 6 7}\n5. c {reverse the ArrayList to 7 6 4}\n6. e {prints the elements of ArrayList i.e. 7 6 4}</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>q = 4, queries = \"a 55 a 11 d e\"<br /></span><span style=\"font-size: 18px;\"><strong>Output</strong>: 2 55 11</span>\n<span style=\"font-size: 18px;\"><strong>Explanation :</strong>\nThere are four queries.\nQueries are performed in this order\n1. a 55 {ArrayList has 55}\n2. a 11 {ArrayList has 55,11}\n3. d {prints the size of the ArrayList i.e. 2}\n4. e {prints the elements of ArrayList i.e. 55 11}</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1&lt;=Q&lt;=100</span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p>Just use various collection algorithms for sort. Rest are just add and size.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Java",
                "slug": "java"
            },
            {
                "name": "Java-Collections",
                "slug": "java-collections"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\n\npublic static void add_to_ArrayList(ArrayList<Integer> A, int x)\n{\n    //Adding an Element\n\tA.add(x);\n}\t\n\npublic static void sort_ArrayList_Asc(ArrayList<Integer> A)\n{\n    //Sorting the list in Ascending Order\n\tCollections.sort(A);\n}\n\npublic static void reverse_ArrayList(ArrayList<Integer> A)\n{\n    //Reversing the list\n\tCollections.reverse(A);\n}\n\npublic static int size_Of_ArrayList(ArrayList<Integer> A)\n{\n    //Returning the size of the list\n\treturn A.size();\n}\n\npublic static void sort_ArrayList_Desc(ArrayList<Integer> A)\n{\n     //Sorting the list in Descending Order\n\tCollections.sort(A, Collections.reverseOrder());\n}\n\npublic static void print_ArrayList(ArrayList<Integer> A)\n{\n    //Printing all the elements of the list\n\tfor(Integer i : A)\n\t\tSystem.out.print(i+\" \");\n}\n",
                "lang_text": "java"
            }
        ],
        "platform": "GFG"
    }
}