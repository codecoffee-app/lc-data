{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703483,
            "title": "Average Count Array",
            "titleSlug": "average-count-array2215",
            "content": "<p><span style=\"font-size: 18px;\">Given an array <strong>arr[]</strong> and an integer <strong>x</strong>. You have to calculate the average for each element <strong>arr[i]</strong> and <strong>x</strong> and find out whether that number exists in the array. Do it for all the elements of the array and store the count result in another array for each index how many occurrences of average are present in the array.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Note:</strong> Always take the floor value of the average.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input :</strong> arr[] = [2, 4, 8, 6, 2] and x = 2\n<strong>Output :</strong> [2, 0, 0, 1, 2]\n<strong>Explanation:</strong> We take x = 2 and take average with arr[0] whch is equal to 2. We found 2 resides in array at two positions (1st and 5th element) thus storing 2 in another array at 0th index. Similarly do for all elements and store the count in second array.\n</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input :</strong> arr[] = [9, 5, 2, 4, 0, 3] and x = 3 <strong>\nOutput :</strong> [0, 1, 1, 1, 0, 1] <br /><strong>Explanation: </strong>The average of 9 and 3 is 6 and no occurence of 6 is present in array so 0. And so on. <br /></span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong> O(n).<br /><strong>Expected Auxiliary Space:</strong> O(n).</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong></span><br /><span style=\"font-size: 18px;\">1 &le; arr.size() &le; 10<sup>6</sup></span><br /><span style=\"font-size: 18px;\">1 &le; x &le; 10<sup>5</sup></span><br /><span style=\"font-size: 18px;\">1 &le; arr[i] &le; 10<sup>5</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p><span >Make a frequency array and then take average then fill the answer array.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "logical-thinking",
                "slug": "logical-thinking"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    // Function to count the occurrences of numbers in the array\n    vector<int> countArray(vector<int>& arr, int x) {\n        int n = arr.size();\n        vector<int> b(n); // Creating a vector to store the counts\n        // counting frequency\n        unordered_map<int, int> m;\n        for (int i = 0; i < n; i++) {\n            m[arr[i]]++;\n        }\n        // filling b array\n        for (int i = 0; i < n; i++) {\n            int avg = (arr[i] + x) / 2;\n            b[i] = m[avg];\n        }\n        return b;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution {\n    // Function to count the occurrences of numbers in the array\n    public ArrayList<Integer> countArray(int[] arr, int x) {\n        int n = arr.length;\n        ArrayList<Integer> b = new ArrayList<>();\n        // Creating an ArrayList to store the counts\n        // Counting frequency\n        HashMap<Integer, Integer> m = new HashMap<>();\n        for (int i = 0; i < n; i++) {\n            m.put(arr[i], m.getOrDefault(arr[i], 0) + 1);\n        }\n        // Filling b ArrayList\n        for (int i = 0; i < n; i++) {\n            int avg = (arr[i] + x) / 2;\n            b.add(m.getOrDefault(avg, 0));\n        }\n        return b;\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#User function Template for python3\n\nfrom collections import defaultdict\n\n\nclass Solution:\n    # Function to count the occurrences of numbers in the array\n    def countArray(self, arr, x):\n        n = len(arr)\n        b = []  # List to store the counts\n\n        # Counting frequency\n        freq_map = defaultdict(int)\n        for num in arr:\n            freq_map[num] += 1\n\n        # Filling b list\n        for num in arr:\n            avg = (num + x) // 2\n            b.append(freq_map[avg])\n\n        return b\n",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "//Back-end complete function Template for javascript\nclass Solution {\n    // Function to count the occurrences of numbers in the array\n    countArray(arr, x) {\n        const n = arr.length;\n        const b = []; // Array to store the counts\n\n        // Counting frequency\n        const freqMap = new Map();\n        for (let num of arr) {\n            freqMap.set(num, (freqMap.get(num) || 0) + 1);\n        }\n\n        // Filling b array\n        for (let num of arr) {\n            const avg = Math.floor((num + x) / 2);\n            b.push(freqMap.get(avg) || 0);\n        }\n\n        return b;\n    }\n}\n",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}