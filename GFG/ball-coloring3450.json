{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705737,
            "title": "Ball coloring",
            "titleSlug": "ball-coloring3450",
            "content": "<p><span style=\"font-size:18px\">Given n&nbsp;balls . All of them are initially &nbsp;uncolored . You have to color the balls with two colors RED and BLUE such that there can be atmost 2 positions where a RED ball is touching BLUE ball or vice versa. You have to color all the balls.Find the number of ways in which balls can be colored.</span><br />\r\n<br />\r\n<span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input</strong>: n = 1\r\n<strong>Output: </strong>2\r\n<strong>Explanation</strong>: Possible ways to color are {{R},{B}}. \r\nSo the answer is 2 .</span><span style=\"font-size:18px\">\r\n</span></pre>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input: </strong>n = 2\r\n<strong>Output:&nbsp;</strong>4\r\n<strong>Explanation</strong>: Possible ways to color are \r\n{{RB},{BR},{RR},{BB}}.So the answer is 4.\r\n</span></pre>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Your Task:&nbsp;&nbsp;</strong><br />\r\nYou dont need to read input or print anything. Complete the function <strong>noOfWays()&nbsp;</strong>which takes n&nbsp;as input parameter and returns </span>&nbsp;<span style=\"font-size:18px\">the number of ways in which balls can be colored.</span><br />\r\n<br />\r\n<span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(1)<br />\r\n<strong>Expected Auxiliary Space:</strong> O(1)<br />\r\n<br />\r\n<strong>Constraints:</strong><br />\r\n1&lt;= n&nbsp;&lt;=10<sup>5</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given n balls, initially uncolored. Color them with red (R) or blue (B). The number of positions where a red ball touches a blue ball (or vice versa) must be at most 2.  Find the number of valid colorings.",
                "constraints": [
                    "1 <= n <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "1",
                        "output": "2",
                        "explanation": "Possible colorings: {R}, {B}.  Total ways = 2."
                    },
                    {
                        "input": "2",
                        "output": "4",
                        "explanation": "Possible colorings: {RB}, {BR}, {RR}, {BB}. Total ways = 4."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Use mathematical logic.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\nclass Solution {\n  public:\n  \n    //Function to calculate the number of ways.\n    unsigned long long int noOfWays(unsigned long long int n){\n        return 2+ n*(n-1);   //calculating the number of ways using given formula.\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution {\n    // method to calculate the number of ways\n    static long noOfWays(long n){\n        // return the formula for calculating the number of ways\n        return 2 + n*(n-1);\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "class Solution:\n    def noOfWays (self, n):\n        # This function calculates the number of ways to arrange objects.\n        # It takes an integer n as input.\n        # The formula used is 2 + n*(n-1).\n        # Return the result.\n        return 2 + n*(n-1)",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n/**\n * @param {number} n\n * @returns {number}\n*/\n\nclass Solution {\n    //Function to find the number of ways to distribute the toys.\n    noOfWays(n) {\n        //This function calculates the number of ways to arrange objects.\n        //It takes an integer n as input.\n        //The formula used is 2 + n*(n-1).\n        //Return the result.\n        return 2 + n*(n-1);\n    }\n}",
                "lang_text": "javascript"
            },
            {
                "lang": "C#",
                "full_func": "class Solution\n{\n    //Complete this function\n    //Function to find the number of ways to represent n as sum of 2 or more integers.\n    public ulong noOfWays(ulong n)\n    {\n        return 2 + n * (n - 1);   //calculating the number of ways using given formula.\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}