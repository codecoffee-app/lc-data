{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 713589,
            "title": "Balloon Everywhere",
            "titleSlug": "balloon-everywhere--170646",
            "content": "<p><span style=\"font-size: 18px;\">Bob is very fond of balloons. Once he visited an amusement park with his mother. The mother told Bob that she would buy him a balloon only if he answer her problem right. She gave Bob a string<strong>&nbsp;S </strong>[contains only lowercase characters]&nbsp;and asked him to use the characters of string to form&nbsp;as many instances of the word \"balloon\" as possible. Return the <strong>maximum</strong> number of instances that can be formed.</span></p>\n<p><span style=\"font-size: 18px;\">Help Bob to solve the problem.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Note:</strong>&nbsp;You can use each character in the string&nbsp;<strong>at most once</strong>. </span></p>\n<p><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:\n</strong>S: nlaebolko\n<strong>Output: </strong>1\n<strong>Explanation:</strong>\nHere, the number of occurence of 'b' = 1\nof occurence of 'a' = 1\nof occurence of 'l' = 2\nof occurence of 'o' = 2\nof occurence of 'n' = 1\nSo, we can form 1 \"balloon\" using the letters.\n </span>\n</pre>\n<p><span style=\"font-size: 18px;\"><strong>Example 2:&nbsp;</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:\n</strong>S: loonbalxballpoon\n<strong>Output: </strong>2\n<strong>Explanation:</strong>\nHere, the number of occurence of 'b' = 2\nof occurence of 'a' = 2\nof occurence of 'l' = 4\nof occurence of 'o' = 4\nof occurence of 'n' = 2\nSo, we can form 2 \"balloon\" using the letters.</span>\n</pre>\n<p>&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Your Task:</strong><br />The task is to complete the function <strong>maxInstance</strong>() which takes a string as the only input parameter and should return the <strong>maximum</strong> instances that can be formed of the word \"<strong>balloon</strong>\" using the&nbsp;given string.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong>&nbsp;O(n), n is size of the given string.<br /><strong>Expected Auxiliary Space:</strong>&nbsp;O(26).</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &lt;= s.length &lt;= 10<sup>6</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string `S` containing only lowercase characters, determine the maximum number of instances of the word \"balloon\" that can be formed using the characters in `S`. Each character in `S` can be used at most once.",
                "constraints": [
                    "1 <= s.length <= 10^6"
                ],
                "testcases": [
                    {
                        "input": "nlaebolko",
                        "output": "1",
                        "explanation": "The input string 'nlaebolko' contains: 'b': 1, 'a': 1, 'l': 2, 'o': 2, 'n': 1.  We need 1 'b', 1 'a', 2 'l's, 2 'o's, and 1 'n' to form 'balloon'. Since we have exactly the required counts, we can form only 1 instance of 'balloon'."
                    },
                    {
                        "input": "loonbalxballpoon",
                        "output": "2",
                        "explanation": "The input string 'loonbalxballpoon' contains: 'b': 2, 'a': 2, 'l': 4, 'o': 4, 'n': 2.  We need 1 'b', 1 'a', 2 'l's, 2 'o's, and 1 'n' to form 'balloon'.  Since we have at least double the required counts of each character, we can form 2 instances of 'balloon'."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Think of using HashMap</p>"
        ],
        "relatedTopics": [
            {
                "name": "Map",
                "slug": "map"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nclass Solution{\npublic:\n    //Function to find the maximum number of instances of the word \"balloon\" that can be formed.\n    int maxInstance(string s){\n        //Creating a vector to store the count of each character in the input string.\n        vector<int> v(26,0);\n        \n        //Iterating through each character in the input string and updating the count in the vector.\n        for(int i=0;i<s.length();i++){\n            v[s[i]-'a']++;\n        }\n        \n        //Calculating the maximum number of instances of the word \"balloon\" that can be formed.\n        int ans=min({v['b'-'a'],v['a'-'a'],v['l'-'a']/2,v['o'-'a']/2,v['n'-'a']});\n        \n        //Returning the result.\n        return ans;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "// Back-end complete function Template for Java\r\n\r\nclass Solution {\r\n    public int maxInstance(String s) {\r\n        // initialize an array to store the frequency of each character\r\n        int[] freq = new int[26];\r\n        \r\n        // count the frequency of each character in the string\r\n        for (char c : s.toCharArray()) freq[c - 'a']++;\r\n        \r\n        // return the minimum value among the frequencies of 'o', 'l', 'b', 'a', and 'n'\r\n        return Math.min(Math.min(freq['o' - 'a'] / 2, freq['l' - 'a'] / 2),\r\n                        Math.min(Math.min(freq['b' - 'a'], freq['a' - 'a']),\r\n                                 freq['n' - 'a']));\r\n    }\r\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "class Solution:\r\n    def maxInstance(self, s : str) -> bool:\r\n        # initializing a dictionary to count the occurrences of each character\r\n        diction = {\"b\":0,\"a\":0,\"l\":0,\"o\":0,\"n\":0}\r\n        \r\n        # iterating through the string and incrementing the count of each character\r\n        for i in s:\r\n            if i in diction:\r\n                diction[i]+=1\r\n        \r\n        # dividing the counts of \"l\" and \"o\" by 2 since they appear twice in \"ballon\"\r\n        diction[\"l\"]//=2\r\n        diction[\"o\"]//=2\r\n        \r\n        # returning the minimum count among all characters\r\n        return min(diction.values())",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n/**\n * @param {string} s\n * @returns {number}\n*/\nclass Solution {\n    //Function to find the maximum number of instances of a substring.\n    maxInstance(s)\n    {\n        // initializing a dictionary to count the occurrences of each character\n        let dictionary = {\"b\":0,\"a\":0,\"l\":0,\"o\":0,\"n\":0};\n\n        // iterating through the string and incrementing the count of each character\n        for (let i = 0; i < s.length; i++) {\n            let char = s[i];\n            if (char in dictionary) {\n                dictionary[char] += 1;\n            }\n        }\n\n        // dividing the counts of \"l\" and \"o\" by 2 since they appear twice in \"ballon\"\n        dictionary[\"l\"] = Math.floor(dictionary[\"l\"] / 2);\n        dictionary[\"o\"] = Math.floor(dictionary[\"o\"] / 2);\n\n        // returning the minimum count among all characters\n        return Math.min(...Object.values(dictionary));\n    }\n}",
                "lang_text": "javascript"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    public int maxInstance(string s)\n    {\n        //Creating an array to store the count of each character in the input string.\n        int[] v = new int[26];\n        \n        //Iterating through each character in the input string and updating the count in the array.\n        for(int i=0;i<s.Length;i++){\n            v[s[i]-'a']++;\n        }\n        \n        //Calculating the maximum number of instances of the word \"balloon\" that can be formed.\n        int ans = Math.Min(Math.Min(Math.Min(Math.Min(v['b'-'a'], v['a'-'a']), v['l'-'a']/2), v['o'-'a']/2), v['n'-'a']);\n        \n        //Returning the result.\n        return ans;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}