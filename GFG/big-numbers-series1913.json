{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705339,
            "title": "Big Numbers Series",
            "titleSlug": "big-numbers-series1913",
            "content": "<p><span style=\"font-size:18px\">Given a series of numbers 0&nbsp; 1&nbsp; 4&nbsp; 18&nbsp; 96&nbsp; 600&nbsp; 4320 &hellip;.,<strong> </strong>and series starting from zeroth term</span><span style=\"font-size:20px\">. Given <strong>n</strong>, find</span><span style=\"font-size:18px\">&nbsp;the <strong>nth</strong> value of the&nbsp;series.</span><br />\n&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input: </strong>n = 4\n<strong>Output: </strong>96</span>\n</pre>\n\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input: </strong>n = 2\n<strong>Output: 4</strong></span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nYou don&#39;t need to read or print anything, Your task is to complete the function&nbsp;<strong>NthTerm()&nbsp;</strong>which takes n as input parameter and returns the nth value of the given series modulo 10<sup>9</sup>&nbsp;+ 7.</span><br />\n&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:&nbsp;</strong>O(n)<br />\n<strong>Expected Space Complexity:&nbsp;</strong>O(1)<br />\n<br />\n<strong>Constraints:</strong><br />\n1 &lt;= n &lt;= 10000</span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p>Try to find pattern.</p>"
        ],
        "relatedTopics": [
            {
                "name": "permutation",
                "slug": "permutation"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function template in C++\n\nclass Solution {\n    public:\n    \n    //Function to find the Nth term of a sequence.\n    int NthTerm(int n){\n        \n        //if n is 0, return 0.\n        if(n == 0)\n            return 0;\n        \n        long long int ans = 1;\n        long long int mod = 1e9 + 7;\n        \n        //iterating from 1 to n to calculate the factorial.\n        for(int i = 1; i <= n; i++){\n            ans = ans * i;\n            ans %= mod;\n        }\n        \n        //multiplying the factorial with n and taking modulo.\n        ans *= n;\n        ans %= mod;\n        \n        return ans;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    public int NthTerm(int n)\n    {\n        //if n is 0, return 0.\n        if(n == 0)\n            return 0;\n        \n        long ans = 1;\n        long mod = 1000000007;\n        \n        //iterating from 1 to n to calculate the factorial.\n        for(int i = 1; i <= n; i++){\n            ans = (ans * i) % mod;\n        }\n        \n        //multiplying the factorial with n and taking modulo.\n        ans = (ans * n) % mod;\n        \n        return (int)ans;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}