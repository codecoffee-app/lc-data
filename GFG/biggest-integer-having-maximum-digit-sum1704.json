{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704799,
            "title": "Biggest integer having maximum digit sum",
            "titleSlug": "biggest-integer-having-maximum-digit-sum1704",
            "content": "<p><span style=\"font-size:18px\">Given a number N, the task is to find a number in the range from 1 to N such that its digit sum is maximum. If there are several such numbers, print the biggest of them.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input</strong>:\r\nN = 48</span><span style=\"font-size:18px\">\r\n<strong>Output:</strong>&nbsp;48\r\n<strong>Explanation</strong>:\r\nThere are two numbers with maximum digit sum. \r\nThe numbers are 48 and 39 Since 48 &gt; 39, \r\nit is our answer.</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong>\r\nN = 90\r\n<strong>Output: </strong>89\r\n</span></pre>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Your Task:&nbsp;&nbsp;</strong><br />\r\nYou don&#39;t need to read input or print anything. Your task is to complete the function&nbsp;<strong>findMax()</strong>&nbsp;which takes the integer N as input parameters and returns the biggest number having the maximum sum.<br />\r\n<br />\r\n<strong>Expected Time Complexity:</strong> O(M) where M is the number of digits in n.</span><br />\r\n<span style=\"font-size:18px\"><strong>Expected Auxiliary Space:</strong> O(1)</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n1 &lt;= N &lt;= 10<sup>18</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a number N, find the largest number within the range [1, N] that has the maximum digit sum. If multiple numbers have the same maximum digit sum, return the largest among them.",
                "constraints": [
                    "1 <= N <= 10^18"
                ],
                "testcases": [
                    {
                        "input": "48",
                        "output": "48",
                        "explanation": "Both 48 (4 + 8 = 12) and 39 (3 + 9 = 12) have the maximum digit sum. Since 48 > 39, the answer is 48."
                    },
                    {
                        "input": "90",
                        "output": "89",
                        "explanation": "The number with the maximum digit sum is 89 (8 + 9 = 17)."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>An&nbsp;<strong>efficient</strong>&nbsp;approach is to iterate from n to 1. Do the following for each digit of current number, if the digit is not zero, reduce it by one and change all other digits to nine to the right of it. If the sum of digits in the resulting integer is strictly greater than the sum of the digits of the current answer, then update the answer with the resulting integer. If the sum of the resulting integer is same as the current answer, then if the resulting integer is more then current answer, update the current answer with the resulting integer.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Numbers",
                "slug": "numbers"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function template in C++\n\nclass Solution{\r\npublic:\n    //Function to calculate the sum of digits of a given number.\n    int sumOfDigits(long long int a)\n    {\n    \tint sum = 0;\n    \t//calculating sum of digits by repeatedly dividing the number by 10.\n    \twhile (a) {\n    \t\tsum += a % 10;\n    \t\ta /= 10;\n    \t}\n    \treturn sum;\n    }\n    \n    //Function to find the maximum number by rearranging the digits of N.\n    long long int findMax(long long int N)\n    {\n    \tlong long int b = 1, ans = N;\n    \n    \t//iterating over all the digits of N from right to left.\n    \twhile (N) {\n            //calculating the current number by rearranging the digits.\n    \t    long long int cur = (N - 1) * b + (b - 1);\n    \n            //checking if the sum of digits of cur is greater than ans or\n            //if sum of digits is same but cur is greater than ans.\n    \t    if (sumOfDigits(cur) > sumOfDigits(ans) || \n    \t\t    (sumOfDigits(cur) == sumOfDigits(ans) && \n    \t\t    \tcur > ans))\n    \t\t\tans = cur;\n    \n            //dividing N by 10 to move to the next digit.\n    \t\tN /= 10;\n    \n            //multiplying b by 10 to get the correct place value for the next digit.\n    \t\tb *= 10;\n    \t}\n        //returning the maximum number.\n        return ans;\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}