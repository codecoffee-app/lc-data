{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703756,
            "title": "Binary representation",
            "titleSlug": "binary-representation5003",
            "content": "<p><span >You are given an integer <strong>n,&nbsp;</strong>you need to return its <strong>binary representation</strong> in the form of a string.<br /><strong>Note:</strong> String must contain 32 bits.</span></p>\n<p><span ><strong>Examples:</strong></span></p>\n<pre><span ><strong>Input: </strong>n = 2\n<strong>Output:</strong> 00000000000000000000000000000010\n<strong>Explanation: </strong>The binary representation of 2 is '10', so it can be represent as 00000000000000000000000000000010 in 32 bits.</span></pre>\n<pre><span ><strong>Input: </strong>n = 5\n<strong>Output: </strong>00000000000000000000000000000101\n<strong>Explanation: </strong>The binary representation of 5 is '101', so it can be represent as 00000000000000000000000000000101 in 32 bits.</span></pre>\n<p><span ><strong>Constraints:</strong><br />1 &le; n &le; 10<sup>9</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an integer `n`, return its binary representation as a 32-bit string.",
                "constraints": [
                    "1 <= n <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "2",
                        "output": "00000000000000000000000000000010",
                        "explanation": "The binary representation of 2 is '10'. Padded with leading zeros to achieve a 32-bit representation, it becomes '00000000000000000000000000000010'."
                    },
                    {
                        "input": "5",
                        "output": "00000000000000000000000000000101",
                        "explanation": "The binary representation of 5 is '101'. Padded with leading zeros to achieve a 32-bit representation, it becomes '00000000000000000000000000000101'."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Learn how a number is converted to its binary representation.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Bit Magic",
                "slug": "bit-magic"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [
            "microsoft"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "// Function to convert integer to binary representation\nclass Solution {\n  public:\n    string getBinaryRep(int n) {\n        string ans;\n        for (int i = 31; i >= 0; i--) {\n            int bit = (n >> i) & 1;\n            ans.push_back('0' + bit);\n        }\n        return ans;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution {\n    public String getBinaryRep(int n) {\n        StringBuilder ans = new StringBuilder();\n\n        for (int i = 31; i >= 0; i--) {\n            int bit = (n >> i) & 1;\n            ans.append(bit);\n        }\n\n        return ans.toString();\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "class Solution:\n\n    def getBinaryRep(self, n: int) -> str:\n        ans = \"\"\n        for i in range(31, -1, -1):\n            bit = (n >> i) & 1\n            ans += str(bit)\n        return ans\n",
                "lang_text": "py"
            },
            {
                "lang": "C#",
                "full_func": "// User function Template for C#\n\nclass Solution {\n\n    public string getBinaryRep(int n) {\n        string ans = \"\";\n        // Iterating from 29 to 0 to get binary representation\n        for (int i = 31; i >= 0; i--) {\n            // Right shifting N by i and performing bitwise AND operation with 1\n            int bit = (n >> i) & 1;\n            // Appending the binary digit to the ans string\n            ans += Convert.ToString(bit);\n        }\n        // Returning the binary representation as a string\n        return ans;\n    }\n}",
                "lang_text": "csharp"
            },
            {
                "lang": "Javascript",
                "full_func": "class Solution {\n    getBinaryRep(n) {\n        let ans = '';\n        for (let i = 31; i >= 0; i--) {\n            let bit = (n >> i) & 1;\n            ans += bit.toString();\n        }\n        return ans;\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}