{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 701283,
            "title": "Binary String",
            "titleSlug": "binary-string-1587115620",
            "content": "<p><span style=\"font-size:18px\">Given a binary string&nbsp;S. The task is to count the number of substrings that start and end with 1. For example, if the input string is &ldquo;00100101&rdquo;, then there are three substrings &ldquo;1001&rdquo;, &ldquo;100101&rdquo; and &ldquo;101&rdquo;.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:\n</strong>N = 4<strong>\n</strong>S = 1111\n<strong>Output: </strong>6<strong>\nExplanation: </strong>There are 6 substrings from\nthe given string. They are 11, 11, 11,\n111, 111, 1111.</span></pre>\n\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:\n</strong>N = 5<strong>\n</strong>S = 01101\n<strong>Output: </strong>3<strong>\nExplanation: </strong>There 3 substrings from the\ngiven string. They are 11, 101, 1101.</span></pre>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nThe task is to complete the function&nbsp;<strong>binarySubstring() </strong>which takes the length of binary string <strong>n</strong> and a binary string <strong>a</strong>&nbsp;as input parameter and counts the number of substrings starting and ending with 1 and returns the count.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:&nbsp;</strong>O(N).<br />\n<strong>Expected Auxiliary Space:&nbsp;</strong>O(1).</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\n1 &le; |S| &le; 10<sup>4</sup></span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a binary string S, determine the number of substrings that begin and end with the character '1'. For instance, in the string \"00100101\", the substrings \"1001\", \"100101\", and \"101\" fulfill this condition.",
                "constraints": [
                    "1 <= |S| <= 10^4"
                ],
                "testcases": [
                    {
                        "input": "N = 4\nS = 1111",
                        "output": "6",
                        "explanation": "The binary string '1111' has six substrings that start and end with '1'. These are '11', '11', '11', '111', '111', and '1111'."
                    },
                    {
                        "input": "N = 5\nS = 01101",
                        "output": "3",
                        "explanation": "The binary string '01101' has three substrings that start and end with '1'. These are '11', '101', and '1101'."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            ""
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [
            "flipkart",
            "amazon"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "\nclass Solution\n{\n    public:\n    //Function to count the number of substrings that start and end with 1.\n    long binarySubstring(int n, string a)\n    {\n        int count = 0;\n        for(int i=0;i<n;i++)\n        {\n            //counting number of 1's in the string.\n            if(a[i]=='1')\n                count++;\n        }\n        //returning count of possible pairs among total number of 1's.\n        return (count*(count-1))/2;\n        \n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "\nclass Solution\n{\n    //Function to count the number of substrings that start and end with 1.\n    public static int binarySubstring(int a, String str)\n    {\n         int c=0;\n         for(int i=0;i<str.length();++i)\n         {\n             //counting number of 1's in the string.\n             if(str.charAt(i)=='1')\n             ++c;\n         }\n         //returning count of possible pairs among total number of 1's.\n         return (c*(c-1))/2;\n    }\n}\n",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\nclass Solution:\n    \n    #Function to count the number of substrings that start and end with 1.\n    def binarySubstring(self,n,s):\n        \n        #counting number of 1's in the string.\n        number_of_ones=s.count('1')\n        \n        #returning count of possible pairs among total number of 1's.\n        return ((number_of_ones*(number_of_ones-1))//2)\n",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "//Back-end complete function Template for javascript\n\n/**\n * @param {number} n (size of string)\n * @param {string} a (input string)\n * @returns {number}\n*/\n \nclass Solution \n{\n    //Function to count the number of substrings that start and end with 1.\n    binarySubstring(n, a)\n    {\n        let count = 0;\n        for(let i=0;i<n;i++)\n        {\n            //counting number of 1's in the string.\n            if(a[i]=='1')\n            count++;\n        }\n        //returning count of possible pairs among total number of 1's.\n        return Math.floor((count*(count-1))/2);\n    }\n}",
                "lang_text": "javascript"
            },
            {
                "lang": "C#",
                "full_func": "class Solution\n{\n    //Complete this function\n    //Function to count the number of substrings that start and end with 1.\n    public long binarySubstring(int n, string a)\n    {\n        int count = 0;\n        for(int i=0;i<n;i++)\n        {\n            //counting number of 1's in the string.\n            if(a[i]=='1')\n                count++;\n        }\n        //returning count of possible pairs among total number of 1's.\n        return (count*(count-1))/2;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}