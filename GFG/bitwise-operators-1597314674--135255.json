{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 878743,
            "title": "Bitwise Operators",
            "titleSlug": "bitwise-operators-1597314674--135255",
            "content": "<p><span style=\"font-size: 18px;\">Given three positive integers <strong>a</strong>, <strong>b</strong> and <strong>c</strong>. Your task is to perform some bitwise operations on them as given below:<br /><strong>1.</strong> d = a ^ a<br /><strong>2. </strong>e = c ^ b<br /><strong>3.</strong> f = a &amp; b<br /><strong>4.</strong> g = c | (a ^ a)<br /><strong>5.</strong> e = ~ e<br /><strong>Note: ^ </strong>is for xor.<br />Then print d e f g space seperately. Move the cursor to the next line after printing.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input</strong></span>: <span style=\"font-size: 18px;\">a = 1, b = 2, c = 3\n<strong>Output:</strong> 0 -2 0 3\n<strong>Explanation</strong>: We print d e f g after performing the given operations.</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>a = 4 , b = 5 , c = 6\n<strong>Output:</strong> </span><span style=\"font-size: 18px;\">0 -4 4 6</span>\n<span style=\"font-size: 18px;\"><strong>Explanation</strong>: We print d e f g after performing the given operations.</span></pre>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">&nbsp;&nbsp;&nbsp; d=a^a<br />\n&nbsp;&nbsp;&nbsp; e=c^b<br />\n&nbsp;&nbsp;&nbsp; f=a&amp;b<br />\n&nbsp;&nbsp;&nbsp; g=c|(a^a)<br />\n&nbsp;&nbsp;&nbsp; e=~e</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "python-operators",
                "slug": "python-operators"
            },
            {
                "name": "CPP",
                "slug": "cpp"
            },
            {
                "name": "Java",
                "slug": "java"
            },
            {
                "name": "C",
                "slug": "c"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C",
                "full_func": "#include <stdio.h>\n\nint main() {\n    int a, b, c;\n    scanf(\"%d %d %d\", &a, &b, &c);\n\n    // perform the mentioned bitwise operations,\n    // and print d, e, f, g in the same line\n    // code here\n    int d = a ^ a;\n    int e = c ^ b;\n    int f = a & b;\n    int g = c | (a ^ a);\n    e = ~e;\n\n    printf(\"%d %d %d %d\\n\", d, e, f, g);\n\n    return 0;\n}",
                "lang_text": "c"
            },
            {
                "lang": "C++",
                "full_func": "#include <iostream>\nusing namespace std;\n\nint main() {\n    int a, b, c;\n    cin >> a >> b >> c;\n    int d = a ^ a;\n    int e = c ^ b;\n    int f = a & b;\n    int g = c | (a ^ a);\n    e = ~e;\n    cout << d << \" \" << e << \" \" << f << \" \" << g << endl;\n    return 0;\n}",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\nimport java.util.Scanner;\n\nclass Main {\n    public static void main(String[] args) {\n        Scanner scn = new Scanner(System.in);\n        int a = scn.nextInt();\n        int b = scn.nextInt();\n        int c = scn.nextInt();\n        int d = a ^ a;\n        int e = c ^ b;\n        int f = a & b;\n        int g = c | (a ^ a);\n        e = ~e;\n        System.out.println(d + \" \" + e + \" \" + f + \" \" + g);\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\na = int(input())\nb = int(input())\nc = int(input())\n\n# Your code here\nd = a ^ a\ne = c ^ b\nf = a & b\ng = c | (a ^ a)\ne = ~e\n\nprint(d, e, f, g)\n",
                "lang_text": "python3"
            }
        ],
        "platform": "GFG"
    }
}