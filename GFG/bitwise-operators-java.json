{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 700801,
            "title": "Bitwise Operators - Java",
            "titleSlug": "bitwise-operators-java",
            "content": "<p><span style=\"font-size:18px\">Bitwise operators are useful when we want to work with bits. Here, we&#39;ll take a look at them.</span></p>\r\n\r\n<p><span style=\"font-size:18px\">Given three positive integers <strong>a</strong>, <strong>b</strong> and <strong>c</strong>. Your task is to perform some bitwise operations on them as given below:<br />\r\n<strong>1.</strong> d = a ^ a<br />\r\n<strong>2. </strong>e = c ^ b<br />\r\n<strong>3.</strong> f = a &amp; b<br />\r\n<strong>4.</strong> g = c | (a ^ a)<br />\r\n<strong>5.</strong>&nbsp;h&nbsp;= ~e<br />\r\n<strong>Note: ^ </strong>is for xor.</span></p>\r\n\r\n<p><strong><span style=\"font-size:18px\">Example 1:</span></strong></p>\r\n\r\n<div class=\"problemQuestion\">\r\n<div class=\"problemQuestion\">\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong>\r\n4 8 2</span>\r\n\r\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\r\n<span style=\"font-size:18px\">0\r\n10\r\n0\r\n2\r\n-11</span></pre>\r\n\r\n<p><strong><span style=\"font-size:18px\">Example 2:</span></strong></p>\r\n\r\n<div class=\"problemQuestion\">\r\n<div class=\"problemQuestion\">\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong>\r\n7 7 7</span>\r\n\r\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\r\n<span style=\"font-size:18px\">0\r\n0\r\n7\r\n7\r\n-1</span></pre>\r\n</div>\r\n</div>\r\n</div>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou don&#39;t need to read input&nbsp;anything. Your task is to complete the function <strong>bitWiseOp()</strong>&nbsp;which takes <strong>a, b, c</strong>&nbsp;as&nbsp;parameters&nbsp;and print the output for the above-mentioned <strong>bitwise operations</strong>&nbsp;in consecutive lines.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n1 &lt;= A, B, C &lt;= 10<sup>6</sup></span>&nbsp;</p>\r\n</div>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given three positive integers a, b, and c, perform the following bitwise operations:\n\n1. d = a ^ a  (XOR)\n2. e = c ^ b  (XOR)\n3. f = a & b  (AND)\n4. g = c | (a ^ a)  (OR)\n5. h = ~e  (NOT)\n\nPrint the results of each operation (d, e, f, g, h) on separate lines.",
                "constraints": [
                    "1 <= a, b, c <= 10^6"
                ],
                "testcases": [
                    {
                        "input": "4 8 2",
                        "output": "0\n10\n0\n2\n-11",
                        "explanation": null
                    },
                    {
                        "input": "7 7 7",
                        "output": "0\n0\n7\n7\n-1",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">In Java there are six operators. They are:&nbsp;<strong>Bitwise AND, Bitwise OR, Bitwise XOR, Bitwise Left Shift, Bitwise Right Shift, and Ones Complement</strong>. These operators can be applied to the integer types byte, short, int, long, and char.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Java-Operators",
                "slug": "java-operators"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "// Function to perform bitwise operations on given integers a, b, and c\nvoid bitWiseOp(int a, int b, int c) {\n\n    // Performing XOR operation of a with itself will always result in 0\n    cout << (a ^ a) << endl;\n\n    // Performing XOR operation of c and b\n    cout << (c ^ b) << endl;\n\n    // Performing bitwise AND operation of a and b\n    cout << (a & b) << endl;\n\n    // Performing bitwise OR operation of c and XOR operation of a with itself (which results in 0)\n    cout << (c | (a ^ a)) << endl;\n\n    // Performing bitwise NOT operation of XOR operation of c and b\n    cout << ~(c ^ b) << endl;\n}",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "// Back-end complete function Template for Java\n\nclass Geeks {\n    static void bitWiseOp(int a, int b, int c) {\n\n        // printing XOR of a and a, which is always 0\n        System.out.println(a ^ a);\n        \n        // printing XOR of c and b\n        System.out.println(c ^ b);\n        \n        // printing AND of a and b\n        System.out.println(a & b);\n        \n        // printing OR of c and XOR of a and a, which is always c\n        System.out.println(c | (a ^ a));\n        \n        // printing complement of XOR of c and b\n        System.out.println(~(c ^ b));\n    }\n}",
                "lang_text": "java"
            }
        },
        "platform": "GFG"
    }
}