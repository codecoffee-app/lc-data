{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705605,
            "title": "Break Numbers[Duplicate problem]",
            "titleSlug": "break-numbers0435",
            "content": "<p><span style=\"font-size:18px\">Given a large number <strong>N</strong>, write a program to count the ways to&nbsp;break it into three&nbsp;whole numbers such that they sum up to the original number.</span></p>\n\n<p><strong><span style=\"font-size:18px\">Example 1:</span></strong></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong> N = 3\n<strong>Output:</strong> 10\n<strong>Explaination:</strong> The ways are \n0 + 0 + 3 = 3\n0 + 3 + 0 = 3\n3 + 0 + 0 = 3\n0 + 1 + 2 = 3\n0 + 2 + 1 = 3\n1 + 0 + 2 = 3\n1 + 2 + 0 = 3\n2 + 0 + 1 = 3\n2 + 1 + 0 = 3\n1 + 1 + 1 = 3</span></pre>\n\n<p><strong><span style=\"font-size:18px\">Example 2:</span></strong></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong> N = 1\n<strong>Output:</strong> 3\n<strong>Explaination:</strong> The ways are:\n1 + 0 + 0 = 1\n0 + 1 + 0 = 1\n0 + 0 + 1 = 1</span></pre>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nYou do not need to read input or print anything. Your task is to complete the function <strong>countWays()</strong> which takes N as input parameter&nbsp;and returns the total number of possible ways to break <strong>N</strong> in three&nbsp;whole numbers.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(1)<br />\n<strong>Expected Auxiliary Space:</strong> O(1)</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\n1 &le; N &le; 10<sup>9</sup>&nbsp;&nbsp;</span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a non-negative integer N, determine the number of ways to express N as the sum of three non-negative integers. In other words, find the number of solutions to the equation a + b + c = N, where a, b, and c are non-negative integers.",
                "constraints": [
                    "1 \u2264 N \u2264 10^9"
                ],
                "testcases": [
                    {
                        "input": "3",
                        "output": "10",
                        "explanation": "We need to find all combinations of three non-negative integers that sum to 3. These are (0, 0, 3), (0, 3, 0), (3, 0, 0), (0, 1, 2), (0, 2, 1), (1, 0, 2), (1, 2, 0), (2, 0, 1), (2, 1, 0), and (1, 1, 1). There are 10 such combinations."
                    },
                    {
                        "input": "1",
                        "output": "3",
                        "explanation": "We need to find all combinations of three non-negative integers that sum to 1. These are (1, 0, 0), (0, 1, 0), and (0, 0, 1). There are 3 such combinations."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Use Stars and bars technique.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "// Back-end complete function Template for C++\n\nclass Solution{\npublic:\n    // Function to count the number of ways.\n    long long countWays(long long N){\n        // Initializing a counter variable.\n        long long counter = 0;\n\n        // Calculating the number of ways using the given formula.\n        counter = ((N+1)*(N+2))/2;\n\n        // Returning the counter value.\n        return counter;\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\nclass Solution{\n    //function to count the number of ways\n    static long countWays(long N){\n        //initialize the counter\n        long counter = 0;\n        //calculate the number of ways using the formula\n        counter = ((N+1)*(N+2))/2;\n        //return the counter\n        return counter;\n    }\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\nclass Solution:\n    #Function to count the number of ways to reach N.\n    def countWays(self, N):\n        #Calculating the count using the formula\n        counter = ((N+1)*(N+2))//2\n        return counter",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n/**\n * @param {number} N\n * @returns {number}\n*/\n\nclass Solution {\n    //Function to count the number of ways to reach the nth stair.\n    countWays(N) {\n        //Calculating the count using the formula\n        let counter = ((N+1)*(N+2))/2;\n        return counter;\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}