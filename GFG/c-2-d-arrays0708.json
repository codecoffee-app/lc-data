{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704038,
            "title": "C++ 2-D Arrays | Set-1",
            "titleSlug": "c-2-d-arrays0708",
            "content": "<p><span style=\"font-size:18px\">Given a 2-d array of integers having&nbsp;<strong>N*N&nbsp;</strong>elements, print the transpose of the array.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input :</strong> arr[] = {{1,2,3}, {4,5,6}, \r\n&nbsp;\\t\\t     {7,8,9}} and N = 3\r\n<strong>Output :</strong> 1 4 7 2 5 8 3 6 9\r\n<strong>Explanation:</strong>1 2 3\\t 1 4 7\r\n\\t\\t4 5 6 ----&gt; 2 5 8\r\n\\t\\t7 8 9\\t 3 6 9\r\nTranspose of array.</span></pre>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input :</strong> arr[ ] = {{1, 2}, {1, 2}} \r\n&nbsp;\\t\\t\\t and N = 2 \r\n<strong>Output :</strong>  1 1 2 2</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nThis is a function problem. The input is already taken care of by the driver code. You only need to complete the function <strong>transpose()</strong> that takes a two-dimension array&nbsp;<strong>(arr)</strong>, sizeOfArray <strong>(n)</strong>, and return the transpose of the array. The driver code takes care of the printing.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:&nbsp;</strong>O(N<sup>2</sup>).<br />\r\n<strong>Expected Auxiliary Space:&nbsp;</strong>O(1).</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n1 &le; N &le; 100<br />\r\n0 &le; A[i] &le; 1000</span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a 2-d array of integers of size N*N, find the transpose of the array. The transpose of a matrix is obtained by interchanging its rows and columns.",
                "constraints": [
                    "1 <= N <= 100",
                    "0 <= A[i] <= 1000"
                ],
                "testcases": [
                    {
                        "input": "arr[] = {{1,2,3}, {4,5,6}, {7,8,9}}, N = 3",
                        "output": "1 4 7 2 5 8 3 6 9",
                        "explanation": "The transpose of the given 3x3 matrix is obtained by swapping elements across the main diagonal (elements where row index equals column index)."
                    },
                    {
                        "input": "arr[] = {{1, 2}, {1, 2}}, N = 2",
                        "output": "1 1 2 2",
                        "explanation": "The transpose of the given 2x2 matrix is obtained by swapping elements across the main diagonal (elements where row index equals column index)."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Just change the row with the column of 2-d array.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "CPP",
                "slug": "cpp"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "// Function to transpose a square matrix\n// Input: 2D array a, size n\n// Output: Transposed matrix b\nvector<vector<int>> transpose(int a[][M], int n)\n{\n    // Create a new 2D vector b with size n, initialized to 0\n    vector<vector<int>> b(n, vector<int>(n, 0));    \n\n    // Iterate over rows and columns of the matrix\n    for(int i=0;i<n;i++)\n    {\n        for(int j=0;j<n;j++)\n        {\n            // Assign element at (i, j) in transposed matrix b\n            // with element at (j, i) in original matrix a\n            b[i][j] = a[j][i];\n        }\n    }\n    \n    // Return the transposed matrix b\n    return b;\n}",
                "lang_text": "cpp"
            }
        },
        "platform": "GFG"
    }
}