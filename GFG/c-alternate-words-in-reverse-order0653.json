{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703020,
            "title": "Reverse alternate words",
            "titleSlug": "c-alternate-words-in-reverse-order0653",
            "content": "<p><span style=\"font-size:18px\">Given a string str consisting of multiple words, reverse alternate words in str.&nbsp;</span></p>\n\n<p><strong><span style=\"font-size:18px\">Example 1:</span></strong></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\nstr = geeks for geeks\n<strong>Output:</strong> geeks rof geeks\n<strong>Explanation:</strong> First and thrid word are as it is. \nSecond word is reversed.</span></pre>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\nstr = hello there peter pan\n<strong>Output:</strong> hello ereht peter nap\n<strong>Explanation:</strong> second and fourth words are reversed.</span></pre>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Your Task: &nbsp;</strong><br />\nYou dont need to read input or print anything. Complete the function<strong> reverseAlternate() </strong>which takes string str as input parameter and returns the resultant string.</span></p>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Expected Time Complexity: </strong>O(N) where N is the length of str.<br />\n<strong>Expected Auxiliary Space: </strong>O(N)&nbsp;</span></p>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Constraints:</strong><br />\n1&lt;= str.length()&nbsp;&lt;= 10<sup>4</sup></span></p>\n\n<p>&nbsp;</p>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string `str` consisting of multiple words, reverse the words at alternate positions (index 1, 3, 5, etc.).",
                "constraints": [
                    "1 <= str.length() <= 10^4"
                ],
                "testcases": [
                    {
                        "input": "geeks for geeks",
                        "output": "geeks rof geeks",
                        "explanation": "The first and third words remain unchanged. The second word 'for' is reversed to 'rof'."
                    },
                    {
                        "input": "hello there peter pan",
                        "output": "hello ereht peter nap",
                        "explanation": "The second word 'there' is reversed to 'ereht', and the fourth word 'pan' is reversed to 'nap'."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Maintain a counter for the words and reverse every even word and keep the odd words as it.&nbsp;<br />\nIncrease the counter by 1 every time you &nbsp;encounter a white space or the end of the senetence.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function template in C++\n\nclass Solution{\n    public:\n    //Function to reverse alternate words in a given sentence.\n    string reverseAlternate(string str)\n    {\n        string result; //to store the resulting sentence\n        string temp; //to store each word temporarily\n        int count=0; //to keep track of the word count\n\n        //iterating over each character in the string\n        for (int i = 0; i < str.size(); ++i)\n        {\n            //if character is not a space, adding it to temp\n            if(str[i] != ' ')\n                temp += str[i];\n    \n            //if character is a space or it is the last character\n            if (str[i] == ' ' || i == str.size()-1)\n            {\n                count++;\n                //if count is even, reversing the word in temp\n                if(count%2 == 0) \n                    reverse(temp.begin(),temp.end());   \n                \n                //adding the word in temp to the result string\n                result += temp;\n                \n                //adding a space after each word\n                result += ' ';\n                \n                //clearing temp for the next word\n                temp.clear();\n            }\n        }\n        return result; //returning the reversed sentence\n    }\n};\n",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\nclass Solution \n{ \n    // Function to reverse alternate words in a string\n    String reverseAlternate(String s) \n    {\n        // Initialize an empty string to store the final result\n        String ans = \"\";\n        \n        // Temporary string to store a word\n        String tmp = \"\";\n        \n        // Variable to keep track of whether to reverse a word or not\n        int reverse = 0;\n        \n        // Loop through each character in the string\n        for (int i = 0; i < s.length(); i++) \n        {   \n            // If the character is a space, add it to the result and continue\n            if (s.charAt(i) == ' ') {\n                ans += s.charAt(i);\n                continue;\n            }\n            \n            // Add the character to the temporary string\n            tmp += s.charAt(i);\n            \n            // If the next character is also not a space, continue adding to the temporary string\n            if (i + 1 < s.length() && s.charAt(i + 1) != ' ')\n                continue;\n            \n            // If the reverse variable is greater than 0, reverse the temporary string and add it to the result\n            if (reverse > 0) \n                for (int j = tmp.length() - 1; j >= 0; j--)\n                    ans += tmp.charAt(j);\n            else\n                ans += tmp;\n            \n            // Flip the value of the reverse variable\n            reverse ^= 1;\n            \n            // Reset the temporary string\n            tmp = \"\";\n        }\n        \n        // Return the final result\n        return ans;\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    public string reverseAlternate(string str)\n    {\n        string result = \"\"; //to store the resulting sentence\n        string temp = \"\"; //to store each word temporarily\n        int count = 0; //to keep track of the word count\n\n        //iterating over each character in the string\n        for (int i = 0; i < str.Length; ++i)\n        {\n            //if character is not a space, adding it to temp\n            if (str[i] != ' ')\n                temp += str[i];\n\n            //if character is a space or it is the last character\n            if (str[i] == ' ' || i == str.Length - 1)\n            {\n                count++;\n                //if count is even, reversing the word in temp\n                if (count % 2 == 0)\n                {\n                    char[] tempArray = temp.ToCharArray();\n                    Array.Reverse(tempArray);\n                    temp = new string(tempArray);\n                }\n\n                //adding the word in temp to the result string\n                result += temp;\n\n                //adding a space after each word\n                result += ' ';\n\n                //clearing temp for the next word\n                temp = \"\";\n            }\n        }\n        return result; //returning the reversed sentence\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}