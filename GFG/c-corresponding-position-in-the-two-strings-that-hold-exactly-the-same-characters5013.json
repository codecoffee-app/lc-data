{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703029,
            "title": "Same characters in two strings",
            "titleSlug": "c-corresponding-position-in-the-two-strings-that-hold-exactly-the-same-characters5013",
            "content": "<p><span style=\"font-size:18px\">Given two strings A and B of equal length, find how many times the corresponding position in the two strings hold exactly the same character. The comparison should not be case sensitive.&nbsp;</span></p>\n\n<p><strong><span style=\"font-size:18px\">Example 1:</span></strong></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\nA = choice \nB = chancE\n<strong>Output: </strong>4\n<strong>Explanation: </strong>characters at position 0, 1, 4 and 5\nare same in the two strings A and B.</span></pre>\n\n<p><strong><span style=\"font-size:18px\">Example 2:</span></strong></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\nA = Geek \nB = gang\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> charactera at position 0 is the\nsame in the two strings A and B.</span></pre>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Your Task: &nbsp;</strong><br />\nYou dont need to read input or print anything. Complete the function <strong>sameChar()</strong> which takes the two strings A and B as input parameters and returns the count of the characters that are same in A and B.</span></p>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Expected Time Complexity: </strong>O(N) where N is the length of strings A and B.<br />\n<strong>Expected Auxiliary Space: </strong>O(1)&nbsp;</span></p>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Constraints:</strong><br />\n1&lt;= A.length(), B.length()&nbsp;&lt;= 10<sup>4</sup></span></p>\n\n<p>&nbsp;</p>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two strings A and B of equal length, determine the number of positions where the characters in both strings are identical, ignoring case.",
                "constraints": [
                    "1 <= A.length(), B.length() <= 10^4"
                ],
                "testcases": [
                    {
                        "input": "A = choice\nB = chancE",
                        "output": "4",
                        "explanation": "The characters at indices 0, 1, 4, and 5 are the same in both strings when case is ignored ('c', 'h', 'e'). Note that the index is 0-based."
                    },
                    {
                        "input": "A = Geek\nB = gang",
                        "output": "1",
                        "explanation": "The character at index 0 is the same in both strings when case is ignored ('g'). Note that the index is 0-based."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">For each position, if the character in&nbsp;string A or string B is in uppercase, convert it to lowercase and then compare them.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function template in C++\n\nclass Solution{\n    public:\n    //Function to count the number of same characters at same positions in two strings.\n    int sameChar(string A, string B)\n    {\n        int count=0;\n        \n        //iterating over each character in string B.\n        for(int i=0; i<B.length(); i++)\n        {\n            //converting both characters to lowercase if they are uppercase.\n            if(isupper(A[i]))\n                A[i] = tolower(A[i]);\n            if(isupper(B[i]))\n                B[i] = tolower(B[i]);\n            \n            //increasing count if both characters are equal.\n            if(A[i] == B[i])\n                count++;\n        }\n        //returning the count of same characters at same positions.\n        return count;\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\nclass Solution \n{ \n    // Function to count the number of same characters at the same index in two strings\n    int sameChar(String A, String B) \n    {\n        // Variable to store the count of same characters\n        int ans=0;\n        \n        // Loop through each character in the strings\n        for(int i=0;i<A.length();i++){\n            // Get the character at the i-th index in both strings\n            char x=A.charAt(i);\n            char y=B.charAt(i);\n            \n            // Convert uppercase letters to lowercase letters for comparison\n            if(x>='A'&&x<='Z')\n                x=(char)(x-'A'+'a');\n            if(y>='A'&&y<='Z')\n                y=(char)(y-'A'+'a');\n            \n            // If characters are the same, increment the count\n            if(x==y)\n                ans++;\n        }\n        \n        // Return the count of same characters\n        return ans;\n    }\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}