{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704680,
            "title": "C++ Exception Handling",
            "titleSlug": "c-exception-handling3103",
            "content": "<p><span style=\"font-size: 18px;\">Given 2 integers a and b. Find the maximum value of a$b where $ can be any of the arithmetic operation {+, -, *, / }. Use exception handling to take care of infinite or undefined behaviour.</span></p>\n<p><strong><span style=\"font-size: 18px;\">Examples :</span></strong></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong> a = 5, b = -5\n<strong>Output:</strong> 10\n<strong>Explaination: </strong>Use subtraction. a-b = 10.</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong> a = 4, b = 0\n<strong>Output:</strong> inf\n<strong>Explaination:</strong> a/b gives the maximum. ie- infinity. </span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />-10<sup>3</sup> &le; a, b &le; 10<sup>3</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two integers, `a` and `b`, determine the maximum value obtainable by applying one of the following arithmetic operations: addition (+), subtraction (-), multiplication (*), or division (/). Implement exception handling to manage potential infinite or undefined results (e.g., division by zero).",
                "constraints": [
                    "-1000 <= a <= 1000",
                    "-1000 <= b <= 1000"
                ],
                "testcases": [
                    {
                        "input": "a = 5, b = -5",
                        "output": "10",
                        "explanation": "Subtraction yields the maximum value: a - b = 5 - (-5) = 10."
                    },
                    {
                        "input": "a = 4, b = 0",
                        "output": "inf",
                        "explanation": "Division by zero results in infinity, which is the maximum possible value in this case: a / b = 4 / 0 = infinity."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Calculate all the possible values and get the maximum.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "CPP",
                "slug": "cpp"
            },
            {
                "name": "OOP",
                "slug": "oop"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//  Implementation of a function to find the maximum value among the given arithmetic\n//  operations on two integers.\n\nclass Solution {\n  public:\n    // Function to find the maximum of given arithmetic operations on two integers.\n    int maxValue(int A, int B) {\n        // Initializing the maximum value as the smallest possible value.\n        int maxi = INT_MIN;\n\n        // Implementing the arithmetic operations using try-catch block.\n        try {\n            int p, q, r, k;\n            p = A + B; // Sum of A and B.\n            q = A - B; // Difference of A and B.\n            r = A * B; // Product of A and B.\n\n            // If B is zero, throwing an exception to handle the divide by zero\n            // scenario.\n            if (B == 0)\n                throw 0;\n\n            k = A / B; // Division of A by B.\n\n            // Finding the maximum of all arithmetic operations using nested max\n            // function calls.\n            maxi = max(maxi, max(p, max(q, max(r, k))));\n        }\n        // Catching any exception thrown and returning a specific value.\n        catch (...) {\n            return -1 * (999999); // Returning a large negative value.\n        }\n\n        // Returning the maximum value.\n        return maxi;\n    }\n};",
                "lang_text": "cpp"
            }
        },
        "platform": "GFG"
    }
}