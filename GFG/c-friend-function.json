{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 700721,
            "title": "C++ Friend function",
            "titleSlug": "c-friend-function",
            "content": "<p><span style=\"font-size: 18px;\">Ankush challenges&nbsp;Ankit to complete&nbsp;his code which implements the functionality of checking if the first and last name of a student is an <strong>anagram</strong> of each other or not.<br />Print \"</span><strong><span style=\"font-size: 18px;\">ANAGRAM</span></strong><span style=\"font-size: 18px;\">\" for anagram else \"</span><strong><span style=\"font-size: 18px;\">NOT ANAGRAM</span></strong><span style=\"font-size: 18px;\">\".</span></p>\n<p><span style=\"font-size: 18px;\">An anagram of a string is another string that contains the same characters, only the order of characters can be different. For example, &ldquo;act&rdquo; and &ldquo;tac&rdquo; are </span><span style=\"font-size: 18px;\">anagrams</span><span style=\"font-size: 18px;\"> of each other.<br /></span></p>\n<p><strong><span style=\"font-size: 18px;\">Example 1:</span></strong></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong>\n<span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif; white-space: normal;\">rahul garg</span>\n<strong>Output:</strong>\n<span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif; white-space: normal;\">NOT ANAGRAM</span>\n<strong>Explanation:</strong>\nFirst name and second name are not containing same characters.</span></pre>\n<p><strong><span style=\"font-size: 18px;\">Example 2:</span></strong></p>\n<pre><strong><span style=\"font-size: 18px;\">Input:</span></strong>\n<span style=\"font-size: 18px;\"><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif; white-space: normal;\">ankit kitan</span>\n<strong>Output:</strong>\n<span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif; white-space: normal;\">ANAGRAM</span><br /></span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Your Task:</strong><br />You don't need to read input or print anything. Your task is to complete the function </span><span style=\"font-size: 18px;\"><strong>check_name</strong></span><strong style=\"font-size: 18px;\">() </strong><span style=\"font-size: 18px;\">and return the string.</span></p>\n<p>&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong>&nbsp;O(nlog(n))<br /><strong>Expected Space Complexity:</strong>&nbsp;O(n)</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong></span><br /><span style=\"font-size: 18px;\">0&lt;len(first name), len(second name)&lt;=10<sup>6</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a student's first and last name, determine if they are anagrams of each other. An anagram is a rearrangement of letters within a word or phrase to form a new word or phrase, using all the original letters exactly once. Print 'ANAGRAM' if the names are anagrams; otherwise, print 'NOT ANAGRAM'.",
                "constraints": [
                    "0 < length of first name, length of second name <= 10^6"
                ],
                "testcases": [
                    {
                        "input": "rahul garg",
                        "output": "NOT ANAGRAM",
                        "explanation": "The first name 'rahul' and the last name 'garg' do not contain the same characters. Therefore, they are not anagrams."
                    },
                    {
                        "input": "ankit kitan",
                        "output": "ANAGRAM",
                        "explanation": "The first name 'ankit' and the last name 'kitan' contain the same characters, only rearranged. Hence, they are anagrams."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Check whether both strings contain the same number of characters or not.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "// Function to check if two strings are anagrams or not\nclass Solution {\n  public:\n    string check_name(student k) {\n        int flag = 0;\n        string s1 = k.first_name;\n        string s2 = k.last_name;\n        int n1 = s1.length();\n        int n2 = s2.length();\n\n        // Checking if the lengths of the strings are equal\n        if (n1 != n2)\n            return \"NOT ANAGRAM\";\n        // cout << \"NOT ANAGRAM\" << endl;\n\n        else {\n            // Sorting the characters of both strings\n            sort(s1.begin(), s1.end());\n            sort(s2.begin(), s2.end());\n\n            // Comparing the characters of both strings\n            for (int i = 0; i < n1; i++) {\n                // If any character is not equal, flag is set to 1\n                if (s1[i] != s2[i]) {\n                    return \"NOT ANAGRAM\";\n                    // cout << \"NOT ANAGRAM\" << endl;\n                    flag = 1;\n                    break;\n                }\n            }\n\n            // If flag is still 0, it means both strings are anagrams\n            if (flag == 0)\n                // cout << \"ANAGRAM\" << endl;\n                return \"ANAGRAM\";\n        }\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Javascript",
                "full_func": "\n//Back-end complete function Template for javascript\nclass Solution {\n    check_name(k) {\n        let flag = 0;\n        let s1 = k.first_name;\n        let s2 = k.last_name;\n        let n1 = s1.length;\n        let n2 = s2.length;\n\n        // Checking if the lengths of the strings are equal\n        if (n1 != n2) {\n            // console.log(\"NOT ANAGRAM\");\n            return \"NOT ANAGRAM\";\n        } else {\n            // Converting strings to arrays to sort characters\n            let arr1 = Array.from(s1);\n            let arr2 = Array.from(s2);\n\n            // Sorting the characters of both arrays\n            arr1.sort();\n            arr2.sort();\n\n            // Comparing the characters of both arrays\n            for (let i = 0; i < n1; i++) {\n                // If any character is not equal, flag is set to 1\n                if (arr1[i] != arr2[i]) {\n                    // console.log(\"NOT ANAGRAM\");\n                    return \"NOT ANAGRAM\";\n                    flag = 1;\n                    break;\n                }\n            }\n\n            // If flag is still 0, it means both strings are anagrams\n            if (flag == 0) {\n                // console.log(\"ANAGRAM\");\n                return \"ANAGRAM\";\n            }\n        }\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}