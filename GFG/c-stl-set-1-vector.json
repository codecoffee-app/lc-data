{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 700339,
            "title": "C++ STL | Set 1 (vector)",
            "titleSlug": "c-stl-set-1-vector",
            "content": "<p><span style=\"font-size:20px\">Implement different operations on a vector A .</span><br />\r\n&nbsp;</p>\r\n\r\n<p><span style=\"font-size:20px\"><strong>Input:</strong><br />\r\nThe first line of input contains an integer <strong>T</strong> denoting the no of test cases . Then T test cases follow. The first line of input contains an integer <strong>Q</strong> denoting the no of queries . Then in the next line are <strong>Q</strong>&nbsp;space separated queries .<br />\r\nA query can be of&nbsp;five&nbsp;types&nbsp;<br />\r\n1. a x (Adds an element x to the vector A&nbsp;at the end )<br />\r\n2. b (Sorts the vector A in ascending order&nbsp;)<br />\r\n3. c (Reverses the vector A)<br />\r\n4. d (prints the size of the vector)<br />\r\n5. e (prints space separated values of the vector)<br />\r\n5. f &nbsp;(Sorts the vector A in descending&nbsp;order)<br />\r\n<br />\r\n<br />\r\n<strong>Output:</strong><br />\r\nThe output for each test case will&nbsp;&nbsp;be space separated integers denoting the results of each query .&nbsp;<br />\r\n<br />\r\n<strong>Constraints:</strong><br />\r\n1&lt;=T&lt;=100<br />\r\n1&lt;=Q&lt;=100<br />\r\n<br />\r\n<strong>Example:</strong></span></p>\r\n\r\n<p><span style=\"font-size:20px\"><strong>Input</strong><br />\r\n2<br />\r\n6<br />\r\na 4 a 6 a 7 b c e<br />\r\n4<br />\r\na 55 a 11 d e<br />\r\n<strong>&nbsp;<br />\r\nOutput</strong><br />\r\n7 6 4<br />\r\n2 55 11<br />\r\n<br />\r\n<strong>Explanation :<br />\r\nFor the first test case</strong><br />\r\nThere are six queries.&nbsp;Queries&nbsp;are&nbsp;performed in this order<br />\r\n1. a 4 { Vector has 4 &nbsp;}<br />\r\n2. a 7&nbsp;{vector has 7 }<br />\r\n3. a 6 {vector has 6}<br />\r\n4. b {sorts the vector in ascending order, vector&nbsp;now is 5 6 7}<br />\r\n5. c {reverse the vector }<br />\r\n6. e&nbsp;{prints the element of the vectors 7 6 4}<br />\r\n<br />\r\n<strong>For the sec test case&nbsp;</strong><br />\r\nThere are four&nbsp;queries.&nbsp;Queries&nbsp;are&nbsp;performed in this order<br />\r\n1. a 55 &nbsp;(vector A has&nbsp;55}<br />\r\n2. a 11 &nbsp;(vector A has 55 ,11}<br />\r\n3. d &nbsp; &nbsp; &nbsp;(prints the size of the vector A ie. 2 )<br />\r\n4. e &nbsp; &nbsp; &nbsp;(prints the elements of the vector A ie 55 11)</span><br />\r\n<br />\r\n<br />\r\n<span style=\"font-size:16px\"><strong>Note:</strong>The <strong>Input/Output</strong> format and <strong>Example</strong> given are used for system&#39;s internal purpose, and should be used by a user for <strong>Expected Output</strong> only. As it is a function problem, hence a user should not read any input from stdin/console. The task is to complete the function specified, and not to write the full code.</span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Implement different operations on a vector A. The operations include adding elements, sorting in ascending and descending order, reversing the vector, printing the size, and printing the elements.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= Q <= 100"
                ],
                "testcases": [
                    {
                        "input": "6\na 4 a 6 a 7 b c e",
                        "output": "7 6 4",
                        "explanation": "Initial vector is empty.  'a 4' adds 4. 'a 6' adds 6. 'a 7' adds 7. Vector is now [4, 6, 7]. 'b' sorts the vector in ascending order: [4, 6, 7]. 'c' reverses the vector: [7, 6, 4]. 'e' prints the elements: 7 6 4."
                    },
                    {
                        "input": "4\na 55 a 11 d e",
                        "output": "2 55 11",
                        "explanation": "Initial vector is empty. 'a 55' adds 55. 'a 11' adds 11. Vector is now [55, 11]. 'd' prints the size of the vector: 2. 'e' prints the elements: 55 11."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "CPP",
                "slug": "cpp"
            },
            {
                "name": "STL",
                "slug": "stl"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "// Function to add an element to the end of the vector\nvoid add_to_vector(vector<int> &A,int x)\n{\n\tA.push_back(x);\n}\n\n// Function to sort the vector in ascending order\nvoid sort_vector_asc(vector<int> &A)\n{\n\tsort(A.begin(),A.end());\n}\n\n// Function to reverse the order of elements in the vector\nvoid reverse_vector(vector<int> &A)\n{\n\treverse(A.begin(),A.end());\n}\n\n// Function to return the size of the vector\nint size_of_vector(vector<int> &A)\n{\n\treturn A.size();\n}\n\n// Function to sort the vector in descending order\nvoid sort_vector_desc(vector<int> &A)\n{\n\t sort(A.begin(),A.end(),std::greater<int> ());\n}\n\n// Function to print the elements of the vector\nvoid print_vector(vector<int> &A)\n{\n\tfor(int i=0;i<A.size();i++)\n\tcout<<A[i]<<\" \";\n}",
                "lang_text": "cpp"
            }
        ],
        "platform": "GFG"
    }
}