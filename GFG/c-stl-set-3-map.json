{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 700341,
            "title": "C++ STL | Set 3 (map)",
            "titleSlug": "c-stl-set-3-map",
            "content": "<p><span style=\"font-size:20px\">Implement different operations on maps.<br />\r\n<br />\r\n<strong>Input:</strong><br />\r\nThe first line of input contains an integer <strong>T</strong> denoting the no of test cases . Then T test cases follow. The first line of input contains an integer <strong>Q</strong> denoting the no of queries . Then in the next line are <strong>Q</strong>&nbsp;space separated queries .<br />\r\nA query can be of three&nbsp;types&nbsp;<br />\r\n1. a x y&nbsp;(adds a value with key x and value&nbsp;y to the map)<br />\r\n2. b x (print value of &nbsp;x is present in the map else print -1.&nbsp;)<br />\r\n3. c (prints values x and y separated by space i.e., contents of map)<br />\r\n<br />\r\n<strong>Output:</strong><br />\r\nThe output for each test case will&nbsp;&nbsp;be space separated integers denoting the results of each query .&nbsp;<br />\r\n<br />\r\n<strong>Constraints:</strong><br />\r\n1&lt;=T&lt;=100<br />\r\n1&lt;=Q&lt;=100<br />\r\n<br />\r\n<strong>Example:</strong></span></p>\r\n\r\n<p><span style=\"font-size:20px\"><strong>Input</strong><br />\r\n2<br />\r\n4<br />\r\na 1 2 a 66 3 b 66 c<br />\r\n3<br />\r\na 1 66 b 5 c<br />\r\n<br />\r\n<strong>Output</strong></span><br />\r\n<span style=\"font-size:20px\">3 1 2 66 3<br />\r\n-1 1 66</span></p>\r\n\r\n<p><br />\r\n<span style=\"font-size:20px\"><strong>Explanation :<br />\r\nFor the first test case</strong><br />\r\nThere are four&nbsp;queries.&nbsp;Queries&nbsp;are&nbsp;performed in this order<br />\r\n1. a 1 2&nbsp; --&gt; &nbsp;map has a key 1 with value 2&nbsp;<br />\r\n2. a 66 3&nbsp;--&gt;&nbsp;map has a key 66 with value 3<br />\r\n3. b 66 &nbsp; &nbsp;--&gt; prints the value of key 66 if its present in the map ie 3.<br />\r\n4. c &nbsp; &nbsp;--&gt; &nbsp;print the contents of map separated by space ie&nbsp;( 1 2 66 3 )<br />\r\n<strong>For the sec test case&nbsp;</strong><br />\r\nThere are three&nbsp;queries.&nbsp;Queries&nbsp;are&nbsp;performed in this order<br />\r\n1. a 1 66&nbsp;--&gt; adds a key 1 with a value of 66 in the map<br />\r\n2. b 5 &nbsp; &nbsp; &nbsp;--&gt; &nbsp;since the key 5 is not present in the map hence -1 is printed.<br />\r\n3. c &nbsp; --&gt; prints contents of map separated by space&nbsp;ie(1 66)</span><br />\r\n<br />\r\n<span style=\"font-size:16px\"><strong>Note:</strong>The <strong>Input/Output</strong> format and <strong>Example</strong> given are used for system&#39;s internal purpose, and should be used by a user for <strong>Expected Output</strong> only. As it is a function problem, hence a user should not read any input from stdin/console. The task is to complete the function specified, and not to write the full code.</span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Implement different operations on a map data structure.\n\nThe problem involves processing a series of queries on a map.  The map stores key-value pairs (both integers). You'll need to implement operations to add key-value pairs, retrieve values based on keys, and print the entire contents of the map.\n",
                "constraints": [
                    "1 <= T <= 100 (Number of test cases)",
                    "1 <= Q <= 100 (Number of queries per test case)"
                ],
                "testcases": [
                    {
                        "input": "4\na 1 2 a 66 3 b 66 c",
                        "output": "3 1 2 66 3",
                        "explanation": "Initially, the map is empty.\n'a 1 2' adds key 1 with value 2.\n'a 66 3' adds key 66 with value 3.\n'b 66' prints the value associated with key 66, which is 3.\n'c' prints the contents of the map: 1 2 66 3."
                    },
                    {
                        "input": "3\na 1 66 b 5 c",
                        "output": "-1 1 66",
                        "explanation": "Initially, the map is empty.\n'a 1 66' adds key 1 with value 66.\n'b 5' attempts to retrieve the value for key 5. Since key 5 is not present in the map, it prints -1.\n'c' prints the contents of the map: 1 66."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "CPP",
                "slug": "cpp"
            },
            {
                "name": "STL",
                "slug": "stl"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "// Function to add key-value pair to the map\nvoid add_value(map<int,int> &m,int x,int y)\n{\n    m[x] = y;\n}\n\n// Function to find the value associated with a key in the map\nint find_value(map<int,int> &m,int x)\n{\n    // If key exists, return its value\n    if(m.find(x)!=m.end())\n        return m[x];\n    // If key doesn't exist, return -1\n    else\n        return -1;\n}\n\n// Function to print the contents of the map\nvoid print_contents(map<int,int> &m)\n{\n    // Iterating over all key-value pairs in the map\n    for(auto i=m.begin();i!=m.end();i++)\n    {\n        // Printing the key and value\n        cout<<i->first<<\" \"<<i->second<<\" \";\n    }\n}",
                "lang_text": "cpp"
            }
        ],
        "platform": "GFG"
    }
}