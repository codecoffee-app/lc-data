{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 700730,
            "title": "C++ Template",
            "titleSlug": "c-template",
            "content": "<p><span style=\"font-size: 18px;\"><a href=\"http://quiz.geeksforgeeks.org/templates-cpp/\" target=\"_blank\" rel=\"noopener\">Template in C++</a>&nbsp;is a feature. We write code once and use it for any data type including user defined data types.&nbsp;</span></p>\n<p><span style=\"font-size: 18px;\">Given three cases :<br />1st case when two strings are given , print the smallest of the two strings.<br />2nd case when two integers are given, print the smallest of the two integers.<br />3rd case when two char are given , print the smallest of the two characters(lowercase).</span></p>\n<p><span style=\"font-size: 18px;\">Your task is to complete class minElement which would include a private variable say y, a constructor which would set the given value to the private variable. And a method check() which would take one parameter say x and print the min of x and y(private variable) .</span></p>\n<p><span style=\"font-size: 18px;\">First line of each input&nbsp;will contain&nbsp;1 integer&nbsp;<strong>c.&nbsp;</strong>Next line will contain two strings if c is equal to 1 or will contain two integers if c is equal to 2 or will contain two char if value of c is equal to 3. We have to print the lowest of the two values given.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples :</strong> <strong> </strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>1<br />gfg spl\n<strong>Output: </strong>gfg</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>2\n5 9\n<strong>Output: </strong>5</span>\n</pre>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Implement a class `minElement` in C++ that uses templates to find the minimum of two elements. The class should have a private variable `y`, a constructor to initialize `y`, and a `check()` method to compare a given value `x` with `y` and print the smaller of the two.\n\nThe `check()` method needs to work for three different data types: strings, integers, and characters.\n\nSpecifically:\n\n1.  **Strings:** Find the lexicographically smaller string.\n2.  **Integers:** Find the smaller integer.\n3.  **Characters:** Find the smaller character (lowercase).",
                "constraints": [],
                "testcases": [
                    {
                        "input": "1\ngfg spl",
                        "output": "gfg",
                        "explanation": "The first line indicates that the next two inputs are strings. Comparing \"gfg\" and \"spl\" lexicographically, \"gfg\" is smaller."
                    },
                    {
                        "input": "2\n5 9",
                        "output": "5",
                        "explanation": "The first line indicates that the next two inputs are integers. Comparing 5 and 9, 5 is smaller."
                    },
                    {
                        "input": "3\na b",
                        "output": "a",
                        "explanation": "The first line indicates that the next two inputs are characters. Comparing 'a' and 'b', 'a' is smaller."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Define a constructor with parameters as T data type and also define one check() method with one parameter as T data type</p>"
        ],
        "relatedTopics": [
            {
                "name": "Misc",
                "slug": "misc"
            },
            {
                "name": "CPP",
                "slug": "cpp"
            },
            {
                "name": "Class",
                "slug": "class"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "template <class T>\n//Class template for finding the minimum element\nclass minElement\n{\n    T element; \n    public:\n    //Default constructor\n    minElement(){};\n    //Parameterized constructor\n    minElement(T a){\n        element = a;\n    }\n    //Function to check and output the minimum of two elements\n    void check(T x)\n    {\n    cout<<(element<x ? element : x)<<endl;\n    }   \n};",
                "lang_text": "cpp"
            }
        ],
        "platform": "GFG"
    }
}