{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 710077,
            "title": "Calculate the coefficient",
            "titleSlug": "calculate-the-coefficient",
            "content": "<p><span style=\"font-size: 18px;\">Given two integers <strong>n</strong> and <strong>k,</strong> The task is to calculate Permutation Coefficient P(n,k).<br /><strong>Note:&nbsp; </strong>P(n, k) is used to represent the number of ways to obtain an ordered subset having k elements from a set of n elements. <strong>Since this value may be large only find it modulo 10^9 + 7.</strong></span></p>\n<p><strong><span style=\"font-size: 18px;\">Examples :</span></strong></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong> n = 10, k = 2\n<strong>Output:</strong> 90\n<strong>Explanation:</strong> <samp><code>For first case: Ans = 10! / (10 - 2)! = 10! / 8! , 10! is 8!*9*10 and 8! is 8!, Ans = 9*10 = 90.</code></samp></span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong> n = 10, k = 3\n<strong>Output:</strong> 720</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong>&nbsp;O(n)<br /><strong>Expected Space Complexity:&nbsp;</strong>O(1)</span><br />&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &le; n &le; 100000<br />0 </span><span style=\"font-size: 18px;\">&le; k&nbsp;</span><span style=\"font-size: 18px;\">&le; n</span></p>",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two integers, `n` and `k`, calculate the permutation coefficient P(n, k) modulo 10^9 + 7. P(n, k) represents the number of ways to obtain an ordered subset of `k` elements from a set of `n` elements.",
                "constraints": [
                    "1 <= n <= 100000",
                    "0 <= k <= n"
                ],
                "testcases": [
                    {
                        "input": "n = 10, k = 2",
                        "output": "90",
                        "explanation": "P(10, 2) = 10! / (10 - 2)! = 10! / 8! = (10 * 9 * 8!) / 8! = 10 * 9 = 90"
                    },
                    {
                        "input": "n = 10, k = 3",
                        "output": "720",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">The coefficient can also be computed recursively using the below recursive formula:&nbsp;&nbsp;</span></p>\n\n<pre>\n<strong><span style=\"font-size:18px\">P(n, k) = P(n-1, k) + k* P(n-1, k-1)   </span></strong></pre>\n\n<p><span style=\"font-size:18px\">If we observe closely, we can analyze that the problem has overlapping substructure</span></p>"
        ],
        "relatedTopics": [],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nclass Solution{\n    public:\n    \n    //Function to calculate the permutation coefficient of n and k.\n    int permutationCoeff(int n, int k){\n        \n        long long p = 1, mod = 1e9+7;\n        \n        //calculating the permutation coefficient.\n        for(int i = 0;i<k;i++){\n            p = ((p%mod)*(n-i))%mod;\n        }\n        return (p+mod)%mod;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "class Solution\n{\n    public int permutationCoeff(int n, int k)\n    {\n        int mod = (int)1e9 + 7;\n        int p = 1;\n\n        // calculating the permutation coefficient.\n        for (int i = 0; i < k; i++)\n        {\n            p = (int)(((long)p % mod) * (n - i) % mod);\n        }\n\n        return (p + mod) % mod;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}