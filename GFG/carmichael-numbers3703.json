{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704765,
            "title": "Carmichael Numbers",
            "titleSlug": "carmichael-numbers3703",
            "content": "<p><span style=\"font-size:18px\">A number n is said to be a Carmichael number if it satisfies the following modular arithmetic condition:</span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\">  power(b, n-1) MOD n = 1, \r\n  for all b ranging from 1 to n such that b and \r\n  n are relatively prime, i.e, gcd(b, n) = 1 </span></pre>\r\n\r\n<p><span style=\"font-size:18px\">Given a positive integer n, find if it is a Carmichael number.</span></p>\r\n\r\n<p><strong><span style=\"font-size:18px\">Example 1:</span></strong></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong> n = 8\r\n<strong>Output:</strong> 0\r\n<strong>Explaination:</strong> 3 is relatively prime to \r\n8 but 3<sup>(8 - 1)</sup>%8 = 2187%8 != 1</span></pre>\r\n\r\n<p><strong><span style=\"font-size:18px\">Example 2:</span></strong></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong> n = 3\r\n<strong>Output:</strong> 1\r\n<strong>Explaination:</strong> For both 1 and 2 the \r\ncondition satisfied.</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou do not need to read input or print anything. Your task is to complete the function<strong> isCarmichael()</strong> which takes n as input parameter and returns 1 if it is a carmichael number. Otherwise, returns 0.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(n*Logn)<br />\r\n<strong>Expected Auxiliary Space:</strong> O(1)</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n1 &le; n &le; 100000</span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Check for all possible options.</span></p>",
            "<p><span style=\"font-size:18px\">Eucleadean algorithm for GCD is helpful.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "// Back-end complete function Template for C++\n\nclass Solution{\npublic:\n    // Function to calculate the greatest common divisor of two numbers.\n    int gcd(int a, int b){\n        if (a < b)\n            return gcd(b, a);\n        if (a%b == 0)\n            return b;\n        return gcd(b, a%b);\n    }\n    \n    // Function to calculate the modular exponentiation using recursive approach.\n    long long power(int x, int y, int mod){\n        if (y==0)\n            return 1;\n        long long temp = power(x, y/2, mod) % mod;\n        temp = (temp*temp) % mod;\n        if (y%2==1)\n            temp = (temp*x) % mod;\n        return temp;\n    }\n    \n    // Function to check if a given number is a Carmichael number.\n    int isCarmichael(int n){\n        for(int i = 2;i < n;i++){\n            // Checking if i and n are coprime\n            if(gcd(i, n) == 1) \n                // Checking if i^(n-1) is congruent to 1 modulo n\n                if(power(i, n-1, n) != 1)\n                return 0;\n        }\n        return 1;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    // Function to calculate the greatest common divisor of two numbers.\n    public int gcd(int a, int b)\n    {\n        if (a < b)\n            return gcd(b, a);\n        if (a % b == 0)\n            return b;\n        return gcd(b, a % b);\n    }\n\n    // Function to calculate the modular exponentiation using recursive approach.\n    public long Power(int x, int y, int mod)\n    {\n        if (y == 0)\n            return 1;\n        long temp = Power(x, y / 2, mod) % mod;\n        temp = (temp * temp) % mod;\n        if (y % 2 == 1)\n            temp = (temp * x) % mod;\n        return temp;\n    }\n\n    //Complete this function\n    public int isCarmichael(int n)\n    {\n        for (int i = 2; i < n; i++)\n        {\n            // Checking if i and n are coprime\n            if (gcd(i, n) == 1)\n            {\n                // Checking if i^(n-1) is congruent to 1 modulo n\n                if (Power(i, n - 1, n) != 1)\n                    return 0;\n            }\n        }\n        return 1;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}