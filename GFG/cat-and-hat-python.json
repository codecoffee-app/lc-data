{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 700950,
            "title": "Cat and Hat",
            "titleSlug": "cat-and-hat-python",
            "content": "<p><span style=\"font-size: 18px;\">You are given a string<strong> str</strong>, you need to return <strong>True </strong>if&nbsp; the words \"cat\" and \"hat\" appear same<strong> </strong>number of times<strong> </strong>in <strong>str</strong>, otherwise return <strong>False</strong>.<br /></span><span style=\"font-size: 18px;\"><strong>Note:</strong> <strong>str</strong> contains only lowercase English alphabets.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong>\nstr = catinahat\n<strong>Output:</strong>\nTrue\n<strong>Explanation:\n</strong>cat and hat both are present\n1 number of times.</span>\n</pre>\n<p><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong>\nstr = bazingaa\n<strong>Output:</strong>\nTrue\n<strong>Explanation:</strong>\ncat and hat both are present\n0 number of times.<br /></span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:<br /></strong>1 &lt;= str.size() &lt;= 10<sup>5</sup></span></p>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:&nbsp;</strong>O(n)<br /><strong>Expected Auxiliary Space:&nbsp;</strong>O(1)</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Your Task:</strong><br />This is a function problem. You don't need to take any&nbsp;input. Just complete the function <strong>cat_hat() </strong>that takes a string <strong>str</strong> as input.</span></p>",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string `str` containing only lowercase English alphabets, determine if the words \"cat\" and \"hat\" appear the same number of times within the string. Return `True` if they do, otherwise return `False`.",
                "constraints": [
                    "1 <= str.size() <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "catinahat",
                        "output": "True",
                        "explanation": "The string contains \"cat\" once and \"hat\" once."
                    },
                    {
                        "input": "bazingaa",
                        "output": "True",
                        "explanation": "The string contains \"cat\" zero times and \"hat\" zero times."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size: 14px;\">In string check for every possible string of length 3,</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "\nclass Solution {\n  public:\n    bool cat_hat(string str) {\n        int cat = 0;\n        int hat = 0;\n\n        for (size_t i = 0; i <= str.length() - 3; ++i) {\n            if (str.substr(i, 3) == \"cat\") {\n                cat++;\n            }\n            if (str.substr(i, 3) == \"hat\") {\n                hat++;\n            }\n        }\n\n        return cat == hat;\n    }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\ndef cat_hat(str):\n  cat = 0\n  hat = 0\n  for i in range(0, len(str) - 2, 1):\n    if(str[i : i + 3] == \"cat\"):\n      cat += 1\n    if(str[i : i + 3] == \"hat\"):\n      hat += 1\n  if(cat == hat):\n    return True\n  return False\n",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "class Solution {\n    cat_hat(str) {\n        let cat = 0;\n        let hat = 0;\n\n        for (let i = 0; i <= str.length - 3; ++i) {\n            if (str.substring(i, 3 + i) === \"cat\") {\n                cat++;\n            }\n            if (str.substring(i, 3 + i) === \"hat\") {\n                hat++;\n            }\n        }\n\n        return cat === hat;\n    }\n}\n",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}