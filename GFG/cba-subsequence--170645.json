{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 713139,
            "title": "CBA Subsequence",
            "titleSlug": "cba-subsequence--170645",
            "content": "<p><span style=\"font-size:18px\">Given a string, rearrange it in such a way that it has no subsequence as cba. If there are multiple answers return the lexicographically smallest one.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong>\r\nN=6\r\nS=&quot;aaaaab&quot;</span>\r\n<span style=\"font-size:18px\">\r\n<strong>Output:</strong>\r\naaaaab</span>\r\n\r\n<span style=\"font-size:18px\"><strong>Explanation:</strong> &quot;aaaaab&quot; has no subsequence as cba and is \r\nlexicographically the smallest one.</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong> \r\nN=3 \r\nS=&quot;cba&quot;</span>\r\n\r\n<span style=\"font-size:18px\"><strong>Output:</strong></span> \r\n<span style=\"font-size:18px\">abc.</span>\r\n\r\n<span style=\"font-size:18px\"><strong>Explanation:</strong> &quot;abc&quot; has no subsequence as cba and is\r\nlexicographically the smallest one.</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>cbaSubsequence()</strong>&nbsp;which takes the string S,&nbsp;its size N<strong>&nbsp;</strong>as input parameters&nbsp;and returns the rearranged string.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(NLogN)<br />\r\n<strong>Expected Auxiliary Space:</strong> O(1)</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n1&lt;=N&lt;=10<sup>5</sup><br />\r\nS contains only lowercase English alphabets.</span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p>A string containing &quot;cba&quot; as a substring can never be lexicographically smallest.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nclass Solution\n{\n    public:\n        //Function to sort the characters in the string in non-decreasing order.\n        string cbaSubsequence(string s,int n)\n        {\n            //Sorting the string using the sort function.\n            sort(s.begin(),s.end());\n            \n            //Returning the sorted string.\n            return s;\n        }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\r\n\r\nclass Solution{\r\n\tString cbaSubsequence(String S, int N) {\r\n\t\tchar [] arr = S.toCharArray();\r\n\t\tArrays.sort(arr);\r\n\t\treturn new String(arr);\r\n\t}\r\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\r\n\r\nclass Solution():\r\n    def cbaSubsequence(self, s, n):\r\n        #converts the string into a list of characters\r\n        lis = [i for i in s]\r\n        #sort the characters in ascending order\r\n        lis.sort()\r\n        #join the sorted characters to form a string\r\n        return \"\".join(lis)",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n/**\n * @param {string} s\n * @param {number} n\n * @returns {string}\n*/\n\nclass Solution {\n    //Function to return a subsequence of a given string such that the characters in the subsequence are in non-decreasing order.\n    cbaSubsequence(s, n)\n    {\n        //converts the string into a list of characters\n        let lis = Array.from(s);\n        //sort the characters in ascending order\n        lis.sort();\n        //join the sorted characters to form a string\n        return lis.join('');\n    }\n}",
                "lang_text": "javascript"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    public string cbaSubsequence(string s, int n)\n    {\n        //Sorting the string using the sort function.\n        char[] arr = s.ToCharArray();\n        Array.Sort(arr);\n        \n        //Returning the sorted string.\n        return new string(arr);\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}