{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703964,
            "title": "Check if two given circles touch each other",
            "titleSlug": "checcheck-if-two-given-circles-touch-each-other5038",
            "content": "<p><span style=\"font-size: 18px;\">Given two circles c1 of radius r1 and c2 of radius r2,centered at (x1,y1) and (x2,y2) respectively. Find out whether they touch(at one or more than one points).</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>x1=3 y1=4 r1=5 x2=14 y2=18 r2=8\n<strong>Output: </strong>0\n<strong>Explanation: </strong>The circles centred at (3,4) and (14,18) and having radii 5 and 8 respectively do not touch each other.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: x</strong>1=3 y1=4 r1=5 x2=14 y2=18 r2=18\n<strong>Output: </strong>1\n<strong>Explanation: </strong>The circles centred at (3,4) and (14,18) and having radii 5 and 18 respectively touch each other at two points.</span></pre>\n<p><br /><span style=\"font-size: 18px;\"><strong>Your Task: <br /></strong>You don't need to read input or print anything.Your Task is to complete the function circleTouch() which takes 6 integers x1,y1,r1,x2,y2 and r2 as input parameters and returns 0 if the circles do not touch each other at all.<br /></span></p>\n<p><br /><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong>O(1)<br /><strong>Expected Auxillary Space:</strong>O(1)</span></p>\n<p><br /><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />-10<sup>4</sup>&lt;=x1,y1,x2,y2&lt;=10<sup>4</sup><br />1&lt;=r1,r2&lt;=10<sup>4</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">A circle C1 &nbsp;touches or intersects another circle C2 if the distance between their centres is less than or equal to the sum of their radii.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "// Back-end complete function Template for C++\n\nclass Solution {\n  public:\n    int circleTouch(int X1, int Y1, int R1, int X2, int Y2, int R2) {\n        // we are comparing squared values because sqrt leads to loss of\n        // precision sometimes.\n        int distanceBetweenCentresSquared =\n            (X2 - X1) * (X2 - X1) + (Y2 - Y1) * (Y2 - Y1);\n        int sumOfRadiiSquared = (R2 + R1) * (R2 + R1);\n        return (distanceBetweenCentresSquared <= sumOfRadiiSquared);\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "// Back-end complete function Template for Java\n\nclass Solution {\n    int circleTouch(int X1, int Y1, int R1, int X2, int Y2, int R2) {\n        int distanceBetweenCentresSquared =\n            (X2 - X1) * (X2 - X1) + (Y2 - Y1) * (Y2 - Y1);\n        int sumOfRadiiSquared = (R2 + R1) * (R2 + R1);\n        return ((distanceBetweenCentresSquared <= sumOfRadiiSquared)?1:0);\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\nclass Solution:\n\n    # Function to check if two circles touch or not.\n    def circleTouch(self, X1, Y1, R1, X2, Y2, R2):\n\n        # Calculating squared distance between the centres of the circles.\n        distanceBetweenCentresSquared = (X2-X1)*(X2-X1) + (Y2-Y1)*(Y2-Y1)\n\n        # Calculating squared sum of the radii of the circles.\n        sumOfRadiiSquared = (R2+R1)*(R2+R1)\n        diff=(R1-R2)**2\n        # Returning True if the distance between the centres is less than or equal to the sum of the radii.\n        return (int)(diff<=distanceBetweenCentresSquared <= sumOfRadiiSquared)",
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    public int circleTouch(int X1, int Y1, int R1, int X2, int Y2, int R2)\n    {\n        int distanceBetweenCentresSquared = (X2 - X1) * (X2 - X1) + (Y2 - Y1) * (Y2 - Y1);\n        int sumOfRadiiSquared = (R2 + R1) * (R2 + R1);\n        return (distanceBetweenCentresSquared <= sumOfRadiiSquared) ? 1 : 0;\n    }\n}",
                "lang_text": "csharp"
            },
            {
                "lang": "Javascript",
                "full_func": "class Solution {\n    //Function to check whether two circles touch each other.\n    circleTouch(X1, Y1, R1, X2, Y2, R2) {\n        // Calculating squared distance between the centres of the circles.\n        let distanceBetweenCentresSquared = Math.pow((X2-X1), 2) + Math.pow((Y2-Y1), 2);\n\n        // Calculating squared sum of the radii of the circles.\n        let sumOfRadiiSquared = Math.pow((R2+R1), 2);\n\n        // Returning True if the distance between the centres is less than or equal to the sum of the radii.\n        return (distanceBetweenCentresSquared <= sumOfRadiiSquared) ? 1 : 0;\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}