{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 878825,
            "title": "Check for Disjoint",
            "titleSlug": "check-for-disjoint-sets-or-arrays",
            "content": "<p><span style=\"font-family: arial, helvetica, sans-serif; font-size: 14pt;\">Given two arrays <strong>a[]</strong> and <strong>b[]</strong>, check if they are disjoint, i.e., there is no element common between both the arrays. Return true if if they are disjoint, otherwise, false.</span></p>\n<p><span style=\"font-family: arial, helvetica, sans-serif; font-size: 14pt;\"><strong>Examples:</strong></span></p>\n<pre><span style=\"font-family: arial, helvetica, sans-serif; font-size: 14pt;\"><strong>Input</strong>: a[] = [2, 34, 11, 9, 3], b[] = [2, 1, 3, 5]</span><br /><span style=\"font-family: arial, helvetica, sans-serif; font-size: 14pt;\"><strong>Output</strong>: false</span><br /><span style=\"font-family: arial, helvetica, sans-serif; font-size: 14pt;\"><strong>Explanation</strong>: 3 is common in both the arrays.</span></pre>\n<pre><span style=\"font-family: arial, helvetica, sans-serif; font-size: 14pt;\"><strong>Input</strong>: a[] = [12, 34, 11, 9, 3], b[] = [7, 2, 1, 5]</span><br /><span style=\"font-family: arial, helvetica, sans-serif; font-size: 14pt;\"><strong>Output</strong>: true </span><br /><span style=\"font-family: arial, helvetica, sans-serif; font-size: 14pt;\"><strong>Explanation</strong>: There is no common element in both the sets.</span></pre>\n<pre><span style=\"font-family: arial, helvetica, sans-serif; font-size: 14pt;\"><strong>Input</strong>: a[] = [1, 2, 3, 4], b[] = [4, 3, 2, 1]</span><br /><span style=\"font-family: arial, helvetica, sans-serif; font-size: 14pt;\"><strong>Output</strong>: false</span><br /><span style=\"font-family: arial, helvetica, sans-serif; font-size: 14pt;\"><strong>Explanation</strong>: All the elements are common in both the arrays.</span></pre>\n<p><span style=\"font-family: arial, helvetica, sans-serif; font-size: 14pt;\"><strong>Constraints</strong>:<br />1 &lt;= arr.size() &lt;= 10<sup>6<br /></sup>1 &lt;= arr[i] &lt;= 10<sup>6</sup><sup><br /></sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two arrays `a[]` and `b[]`, determine if they are disjoint. Two arrays are disjoint if they have no elements in common. Return `true` if they are disjoint; otherwise, return `false`.",
                "constraints": [
                    "1 <= arr.size() <= 10^6",
                    "1 <= arr[i] <= 10^6"
                ],
                "testcases": [
                    {
                        "input": "a[] = [2, 34, 11, 9, 3], b[] = [2, 1, 3, 5]",
                        "output": "false",
                        "explanation": "The number 3 is present in both arrays."
                    },
                    {
                        "input": "a[] = [12, 34, 11, 9, 3], b[] = [7, 2, 1, 5]",
                        "output": "true",
                        "explanation": "There are no common elements between the two arrays."
                    },
                    {
                        "input": "a[] = [1, 2, 3, 4], b[] = [4, 3, 2, 1]",
                        "output": "false",
                        "explanation": "All elements are common in both arrays."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Check if any element from one array appears in the other array using a collection for fast lookup.</p>"
        ],
        "relatedTopics": [],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\nclass Solution {\n  public:\n    bool areDisjoint(vector<int> &a, vector<int> &b) {\n        unordered_set<int> st;\n\n        // Insert all elements of array\n        // a into the hash set\n        for (int ele : a)\n            st.insert(ele);\n\n        for (int ele : b) {\n\n            // If an element from b is found in the\n            // hash set, arrays are not disjoint\n            if (st.find(ele) != st.end())\n                return false;\n        }\n\n        return true;\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n    public boolean areDisjoint(int[] a, int[] b) {\n        Set<Integer> set = new HashSet<>();\n\n        // Insert all elements of array a into the HashSet\n        for (int ele : a) {\n            set.add(ele);\n        }\n\n        // Check each element of b, if any exists in set, arrays are not disjoint\n        for (int ele : b) {\n            if (set.contains(ele)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "#Back-end complete function Template for Python 3\nclass Solution:\n    # Function to check if two arrays are disjoint\n    def areDisjoint(self, a, b):\n        # Create a set from the first array\n        seen = set(a)\n\n        # Check if any element of the second array is in the set\n        for ele in b:\n            if ele in seen:\n                return False  # Arrays are not disjoint\n        return True  # Arrays are disjoint\n",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "class Solution {\n    // Function to check if two arrays are disjoint\n    areDisjoint(a, b) {\n        let seen = new Set(a);\n\n        for (let ele of b) {\n            if (seen.has(ele)) {\n                return false; // Arrays are not disjoint\n            }\n        }\n        return true; // Arrays are disjoint\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}