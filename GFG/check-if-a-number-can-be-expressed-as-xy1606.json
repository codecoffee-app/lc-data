{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703843,
            "title": "Check if a number can be expressed as x^y",
            "titleSlug": "check-if-a-number-can-be-expressed-as-xy1606",
            "content": "<p><span style=\"font-size:18px\">Given a positive integer N, find if it can be expressed as x<sup>y</sup>&nbsp;where y &gt; 1 and x &gt; 0 and&nbsp;x and y both are both integers.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong><span style=\"font-size:18px\">Example 1:</span></strong></p>\r\n\r\n<pre>\r\n<strong><span style=\"font-size:18px\">Input:</span></strong>\r\n<span style=\"font-size:18px\">N = 8</span>\r\n<strong><span style=\"font-size:18px\">Output:</span></strong>\r\n<span style=\"font-size:18px\">1</span>\r\n<strong><span style=\"font-size:18px\">Explanation:</span></strong>\r\n<span style=\"font-size:18px\">8 can be expressed</span>\r\n<span style=\"font-size:18px\">as 2<sup>3</sup>.</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong><span style=\"font-size:18px\">Example 2:</span></strong></p>\r\n\r\n<pre>\r\n<strong><span style=\"font-size:18px\">Input:</span></strong>\r\n<span style=\"font-size:18px\">N = 7</span>\r\n<strong><span style=\"font-size:18px\">Output:</span></strong>\r\n<span style=\"font-size:18px\">0</span>\r\n<strong><span style=\"font-size:18px\">Explanation:</span></strong>\r\n<span style=\"font-size:18px\">7 can&#39;t be expressed</span>\r\n<span style=\"font-size:18px\">int the form x<sup>y</sup>.</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong><span style=\"font-size:18px\">Your Task:</span></strong></p>\r\n\r\n<p><span style=\"font-size:18px\">You don&#39;t need to read input or print anything. Your task is to complete the function checkPower() which takes an integer N and returns 1 if possible else, 0.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(sqrt(N))<br />\r\n<strong>Expected Auxiliary Space:</strong> O(1)</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n1&lt;= N &lt;=10000</span><br />\r\n<br />\r\n&nbsp;</p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Try all numbers x starting from 2 to square root of N. For every x, try if it possible to express it in x^y.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "amazon",
            "housing.com"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function template for C++\n\nclass Solution{   \npublic:\n    // Function to check if a number is a power of another number\n    bool isPower(unsigned int n)\n    {\n        // If number is less than or equal to 1, it is a power of any number\n        if (n <= 1) return true;\n\n        // Iterate from 2 to square root of n\n        for (int x=2; x<=sqrt(n); x++)\n        {\n            unsigned p = x;\n\n            // Check if number is a power of x\n            while (p <= n)\n            {\n                p *= x;\n                if (p == n)\n                    return true;\n            }\n        }\n        return false;\n    }\n\n    // Function to check if a number is a power\n    int checkPower(int N){\n        if(isPower(N))\n            return 1;\n        else \n            return 0;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "\nclass Solution\n{\n    // Helper method to check if a number is a power of another number\n    private static bool IsPower(int n)\n    {\n        if (n <= 1) return true;\n\n        for (int x = 2; x <= Math.Sqrt(n); x++)\n        {\n            int p = x;\n\n            while (p <= n)\n            {\n                p *= x;\n                if (p == n)\n                    return true;\n            }\n        }\n\n        return false;\n    }\n\n    public int checkPower(int N)\n    {\n        return IsPower(N) ? 1 : 0;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}