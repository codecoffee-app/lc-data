{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703190,
            "title": "Check if array is sorted",
            "titleSlug": "check-if-an-array-is-sorted0701",
            "content": "<p><span style=\"font-size: 18px;\">Given an array <strong>arr[]</strong>, check whether it is sorted in non-decreasing order. Return </span><span style=\"font-size: 18px;\">true if it is sorted otherwise false.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr[] = [10, 20, 30, 40, 50]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> The given array is sorted.</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr[] = [90, 80, 100, 70, 40, 30]\n<strong>Output:</strong> false\n<strong>Explanation:</strong>&nbsp;The given array is not sorted.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &le; arr.size &le; 10<sup>6</sup><br />- 10<sup>9</sup> &le; arr[i] &le; 10<sup>9</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p>Compare each consecutive pair of elements in the array for one iternation through the array.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C",
                "full_func": "//Back-end complete function Template for C\n\n// Function to check if the array is sorted\nbool arraySortedOrNot(int arr[], int n) {\n    if (n == 0 || n == 1)\n        return true;\n\n    for (int i = 1; i < n; i++) {\n        if (arr[i - 1] > arr[i])\n            return false;\n    }\n    return true;\n}",
                "lang_text": "c"
            },
            {
                "lang": "C++",
                "full_func": "//Back-end complete function template for C++\n\nclass Solution {\n  public:\n    bool arraySortedOrNot(vector<int>& arr) {\n        int n = arr.size();\n        // Array has one or no element\n        if (n == 0 || n == 1)\n            return true;\n\n        for (int i = 1; i < n; i++)\n            // Unsorted pair found\n            if (arr[i - 1] > arr[i])\n                return false;\n\n        // No unsorted pair found\n        return true;\n    }\n};\n",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function template for Java\n\nclass Solution {\n    public boolean arraySortedOrNot(int[] arr) {\n        int n = arr.length;\n        // Array has one or no element\n        if (n == 0 || n == 1) return true;\n\n        for (int i = 1; i < n; i++) {\n            // Unsorted pair found\n            if (arr[i - 1] > arr[i]) return false;\n        }\n        // No unsorted pair found\n        return true;\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "# Define the Solution class\nclass Solution:\n\n    def arraySortedOrNot(self, arr) -> bool:\n        n = len(arr)\n        # Array has one or no element\n        if n == 0 or n == 1:\n            return True\n\n        for i in range(1, n):\n            # Unsorted pair found\n            if arr[i - 1] > arr[i]:\n                return False\n\n        # No unsorted pair found\n        return True",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "class Solution {\n    arraySortedOrNot(arr) {\n        const n = arr.length;\n        // Array has one or no element\n        if (n === 0 || n === 1) return true;\n\n        for (let i = 1; i < n; i++) {\n            // Unsorted pair found\n            if (arr[i - 1] > arr[i]) return false;\n        }\n\n        // No unsorted pair found\n        return true;\n    }\n}\n",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}