{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 875858,
            "title": "Check if array contains duplicates",
            "titleSlug": "check-if-array-contains-duplicates",
            "content": "<p><span style=\"font-size: 18.6667px;\">Given an integer array <strong>arr[]</strong>, check if the array contains any <strong>duplicate</strong> value.</span></p>\n<p><span ><strong>Examples:</strong></span></p>\n<pre><span ><strong>Input: </strong>arr = [4, 5, 6, 4]<code>\n<strong>Output: </strong>true\n<strong>Explaination:</strong> </code></span><span style=\"font-size: 18.6667px;\">4 is the duplicate value.</span></pre>\n<pre><span ><strong>Input: </strong>arr = [1, 2, 3, 4]<code>\n<strong>Output: </strong>false\n<strong>Explaination:</strong> All values are distinct.</code></span></pre>\n<p><span ><strong>Constraint:</strong><br />1&lt;=arr.size()&lt;=10<sup>5</sup></span><br /><span >0&lt;=arr[i]&lt;=10<sup>4</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an integer array `arr[]`, determine if any value appears at least twice in the array.",
                "constraints": [
                    "1 <= arr.size() <= 10^5",
                    "0 <= arr[i] <= 10^4"
                ],
                "testcases": [
                    {
                        "input": "[4, 5, 6, 4]",
                        "output": "true",
                        "explanation": "The number 4 appears twice in the array."
                    },
                    {
                        "input": "[1, 2, 3, 4]",
                        "output": "false",
                        "explanation": "All elements in the array are distinct."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"color: #273239; font-family: Nunito, sans-serif;\"><span style=\"font-size: 18px; letter-spacing: 0.162px; white-space-collapse: preserve;\"><em>The main idea is to insert each value into a HashSet, which only stores unique elements.</em></span></span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Hash",
                "slug": "hash"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    bool checkDuplicates(vector<int> &arr) {\n        int n = arr.size();\n\n        // Create an unordered_set to store the unique elements\n        unordered_set<int> st;\n\n        // Iterate through each element\n        for (int i = 0; i < n; i++) {\n\n            // If the element is already present, return true\n            // Else insert the element into the set\n            if (st.find(arr[i]) != st.end())\n                return true;\n            else\n                st.insert(arr[i]);\n        }\n\n        // If no duplicates are found, return false\n        return false;\n    }\n};\n",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution {\n    // This function calculates the maximum possible profit from a given array of stock\n    // prices\n    public boolean checkDuplicates(int arr[]) {\n        int n = arr.length;\n\n        // Create a HashSet to store the unique elements\n        Set<Integer> st = new HashSet<>();\n\n        // Iterate through each element\n        for (int i = 0; i < n; i++) {\n\n            // If the element is already present, return true\n            // Else insert the element into the set\n            if (st.contains(arr[i]))\n                return true;\n            else\n                st.add(arr[i]);\n        }\n\n        // If no duplicates are found, return false\n        return false;\n    }\n}\n",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "class Solution:\n\n    def checkDuplicates(self, arr):\n\n        n = len(arr)\n\n        # Create a set to store the unique elements\n        st = set()\n\n        # Iterate through each element\n        for i in range(n):\n\n            # If the element is already present, return true\n            # Else insert the element into the set\n            if arr[i] in st:\n                return True\n            else:\n                st.add(arr[i])\n\n    # If no duplicates are found, return false\n        return False\n",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "\nclass Solution {\n    checkDuplicates(arr) {\n        const n = arr.length;\n\n        // Create a Set to store the unique elements\n        const st = new Set();\n\n        // Iterate through each element\n        for (let i = 0; i < n; i++) {\n\n            // If the element is already present, return true\n            // Else insert the element into the set\n            if (st.has(arr[i]))\n                return true;\n            else\n                st.add(arr[i]);\n        }\n\n        // If no duplicates are found, return false\n        return false;\n    }\n}\n",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}