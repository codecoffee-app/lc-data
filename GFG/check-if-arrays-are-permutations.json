{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 701623,
            "title": "Check if Arrays are Permutations",
            "titleSlug": "check-if-arrays-are-permutations",
            "content": "<p><span style=\"font-size: 18px;\">Given two arrays&nbsp;<strong>arr1</strong>&nbsp;and&nbsp;<strong>arr2&nbsp;</strong>of equal size. The task is to find whether the second array is a permutation of the first using<strong>&nbsp;the stl function is_permutation()</strong>.</span></p>\n<p><strong><span style=\"font-size: 18px;\">Example:</span></strong></p>\n<pre><strong><span style=\"font-size: 18px;\">Input: </span></strong><span style=\"font-size: 18px;\">arr1[] = [1, 2, 3, 4, 5], arr2[] = [5, 4, 3, 2, 1]<br /><strong>Output: </strong>true<br /><strong>Exlanation: </strong>arr2[] is a permutation of arr1[].</span></pre>\n<pre><strong><span style=\"font-size: 18px;\">Input: </span></strong><span style=\"font-size: 18px;\">arr1[] = [7, 5, 2, 3], arr2[] = [7, 2, 3]<br /><strong>Output: </strong>false<br /><strong>Exlanation: </strong>element 5 is not present in arr1[].</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &lt;= arr1.size(),arr2.size() &lt;= 1000</span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two arrays, `arr1` and `arr2`, of equal size, determine if `arr2` is a permutation of `arr1` using the `is_permutation()` STL function.",
                "constraints": [
                    "1 <= arr1.size(), arr2.size() <= 1000"
                ],
                "testcases": [
                    {
                        "input": "arr1[] = [1, 2, 3, 4, 5], arr2[] = [5, 4, 3, 2, 1]",
                        "output": "true",
                        "explanation": "`arr2` contains all the elements of `arr1` with the same frequency, just in a different order."
                    },
                    {
                        "input": "arr1[] = [7, 5, 2, 3], arr2[] = [7, 2, 3]",
                        "output": "false",
                        "explanation": "The element 5 is present in `arr1` but not in `arr2`. Therefore, `arr2` is not a permutation of `arr1`."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>is_permutation(arr1,arr1+n,arr2)</p>"
        ],
        "relatedTopics": [
            {
                "name": "STL",
                "slug": "stl"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nbool isArr2PermutationOfArr1(vector<int>& arr1, vector<int>& arr2) {\n    return is_permutation(arr1.begin(), arr1.end(), arr2.begin());\n}",
                "lang_text": "cpp"
            }
        ],
        "platform": "GFG"
    }
}