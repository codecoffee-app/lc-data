{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704408,
            "title": "Check if date is valid",
            "titleSlug": "check-if-date-is-valid0050",
            "content": "<p><span style=\"font-size: 18px;\">Given a date, the task is to check if it is valid or not. It may be assumed that the given date is in range from <strong>01/01/1800 to 31/12/9999</strong> and any date not within this range will also be considered invalid. Return<strong> 1</strong> if the date is valid else return <strong>0</strong>;</span></p>\n<p>&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Examples :</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong style=\"font-size: 18px;\">Input: d</strong><span style=\"font-size: 18px;\"> = 10, </span><strong style=\"font-size: 18px;\">m</strong><span style=\"font-size: 18px;\"> = 12, </span><strong style=\"font-size: 18px;\">y</strong><span style=\"font-size: 18px;\"> = 2000\n</span><strong><span style=\"font-size: 18px;\">Output:</span> </strong></span><span style=\"font-size: 18px;\">1</span>\n<span style=\"font-size: 18px;\"><strong><span style=\"font-size: 18px;\">Explanation:</span> </strong></span><span style=\"font-size: 18px;\">The given date 10/12/2000 is valid</span><span style=\"font-size: 18px;\">.</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>d = 30, m = 2, y = 1700</span>\n<span style=\"font-size: 18px;\"><strong><span style=\"font-size: 18px;\">Output:</span> </strong></span><span style=\"font-size: 18px;\">0</span>\n<span style=\"font-size: 18px;\"><strong><span style=\"font-size: 18px;\">Explanation:</span> </strong></span><span style=\"font-size: 18px;\">The given date 30/2/1700 is invalid.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong> O(1)<br /><strong>Expected Auxiliary Space:</strong> O(1)</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong></span><br /><span style=\"font-size: 18px;\">1 &lt;= d, m, y &lt;= 10000</span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a date (day, month, year), determine if it is a valid date. The year must be between 1800 and 9999 (inclusive). Return 1 if the date is valid, and 0 otherwise.",
                "constraints": [
                    "1 <= d, m, y <= 10000"
                ],
                "testcases": [
                    {
                        "input": "d = 10, m = 12, y = 2000",
                        "output": "1",
                        "explanation": "The date 10/12/2000 is a valid date within the specified year range."
                    },
                    {
                        "input": "d = 30, m = 2, y = 1700",
                        "output": "0",
                        "explanation": "The year 1700 is outside the valid range of 1800 to 9999."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Take care of the fact that the month of February has 28 days on a non-leap year and 29 days on a leap year.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "\r\nclass Solution {\r\n  public:\r\n  \r\n    // Returns true if given year is valid.\r\n    bool isLeap(int year)\r\n    {\r\n      // Return true if year is a multiple pf 4 and\r\n      // not multiple of 100.\r\n      // OR year is multiple of 400.\r\n      return (((year%4==0) && (year%100!=0)) ||\r\n               (year%400==0));\r\n    }\r\n    \r\n    int isValidDate(int d, int m, int y) {\r\n        \r\n        // If year, month and day are not in given range\r\n        if (y > 9999 || y < 1800)\r\n          return 0;\r\n        if (m < 1 || m > 12)\r\n          return 0;\r\n        if (d < 1 || d > 31)\r\n          return 0;\r\n     \r\n        // Handle February month with leap year\r\n        if (m == 2)\r\n        {\r\n            if (isLeap(y))\r\n            {\r\n                if (d <= 29)\r\n                    return 1;\r\n                else\r\n                    return 0;\r\n            }\r\n            else\r\n            {\r\n                if (d <= 28)\r\n                    return 1;\r\n                else\r\n                    return 0;\r\n            }\r\n        }\r\n        \r\n        // Months of April, June, Sept and Nov\r\n        // must have number of days less than\r\n        // or equal to 30.\r\n        if (m==4 || m==6 || m==9 || m==11)\r\n        {\r\n            if(d <= 30)\r\n                return 1;\r\n            else\r\n                return 0;\r\n        }\r\n     \r\n        return 1;\r\n    }\r\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            },
            {
                "lang": "C#",
                "full_func": "public class Solution {\n    \n    // Returns true if given year is valid.\n    public bool isLeap(int year)\n    {\n        // Return true if year is a multiple of 4 and\n        // not multiple of 100.\n        // OR year is multiple of 400.\n        return (((year%4==0) && (year%100!=0)) ||\n               (year%400==0));\n    }\n    \n    public int isValidDate(int d, int m, int y) {\n        \n        // If year, month and day are not in given range\n        if (y > 9999 || y < 1800)\n          return 0;\n        if (m < 1 || m > 12)\n          return 0;\n        if (d < 1 || d > 31)\n          return 0;\n     \n        // Handle February month with leap year\n        if (m == 2)\n        {\n            if (isLeap(y))\n            {\n                if (d <= 29)\n                    return 1;\n                else\n                    return 0;\n            }\n            else\n            {\n                if (d <= 28)\n                    return 1;\n                else\n                    return 0;\n            }\n        }\n        \n        // Months of April, June, Sept and Nov\n        // must have number of days less than\n        // or equal to 30.\n        if (m==4 || m==6 || m==9 || m==11)\n        {\n            if(d <= 30)\n                return 1;\n            else\n                return 0;\n        }\n     \n        return 1;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}