{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704001,
            "title": "Check if the door is open or closed",
            "titleSlug": "check-if-the-door-is-open-or-closed2013",
            "content": "<p><span style=\"font-size:18px\">Given <strong>N</strong> doors and <strong>N</strong> persons. The doors are numbered from 1 to <strong>N</strong> and persons are given id&rsquo;s numbered from 1 to <strong>N</strong>. Each door can have only two&nbsp;statuses i.e. open (1) or closed (0) . Initially all the doors have status closed. Find the final status of all the doors, when all the persons have changed&nbsp;the status of the doors of which they are authorized.&nbsp;i.e. if status open then change the status to closed and vice versa. A person with id &lsquo;i&rsquo; is authorized to change the status of door numbered &lsquo;j&rsquo; if &lsquo;j&rsquo; is a multiple of &lsquo;i&rsquo;.<br />\n<strong>Note:</strong> A person has to change the current status of all the doors for which he is authorized exactly once.</span></p>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span><span style=\"font-size:18px\"> </span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\n<span style=\"font-size:18px\"><strong>N = </strong>3\n<strong>Output:</strong></span>\n<span style=\"font-size:18px\">1 0 0 </span>\n<span style=\"font-size:18px\"><strong>Explanation:</strong></span>\n<span style=\"font-size:18px\">Initiall status of rooms - 0 0 0. \nPerson with id 2 changes room 2 to open,\ni.e. (0 1 0). Person with id 1 changes\nroom 1, 2, 3 status (1 0 1).\nPerson with id 3 changes room 3\nstatus i.e. (1 0 0).</span></pre>\n\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span><span style=\"font-size:18px\"> </span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\n<span style=\"font-size:18px\"><strong>N = </strong>2\n<strong>Output:</strong></span>\n<span style=\"font-size:18px\">1 0</span>\n<span style=\"font-size:18px\"><strong>Explanation:</strong></span>\n<span style=\"font-size:18px\">Initiall status of rooms - 0 0. \nPerson with id 2 changes room 2 to open,\ni.e. (0 1). Person with id 1 changes\nroom 1, 2 status (1 0).\n</span></pre>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>checkDoorStatus()</strong> which takes an Integer N as input and returns an array as the answer.</span></p>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(N*sqrt(N))<br />\n<strong>Expected Auxiliary Space:</strong> O(N)</span></p>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong></span><br />\n<span style=\"font-size:18px\">1 &lt;= N &lt;= 10<sup>4</sup></span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given N doors and N persons. The doors are numbered from 1 to N and persons are given ids numbered from 1 to N. Each door can have only two statuses: open (1) or closed (0). Initially, all doors are closed. Determine the final status of all doors after each person changes the status of the doors they are authorized to change. A person with id 'i' is authorized to change the status of door numbered 'j' if 'j' is a multiple of 'i'. Each authorized person changes the status of each authorized door exactly once.",
                "constraints": [
                    "1 <= N <= 10^4"
                ],
                "testcases": [
                    {
                        "input": "3",
                        "output": "1 0 0",
                        "explanation": "Initially, the doors are [0, 0, 0]. Person 1 changes doors 1, 2, and 3 to [1, 1, 1]. Person 2 changes door 2 to [1, 0, 1]. Person 3 changes door 3 to [1, 0, 0]."
                    },
                    {
                        "input": "2",
                        "output": "1 0",
                        "explanation": "Initially, the doors are [0, 0]. Person 1 changes doors 1 and 2 to [1, 1]. Person 2 changes door 2 to [1, 0]."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Only numbers with odd number of factors will have their doors opened by the end.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "tcs"
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    int *checkDoorStatus(int N) {\n        \n        static int arr[10005];   // Initializing an Array to store\n        \n        for(int i=1 ; i<=N ; i++)\n        {\n            int s = sqrt(i);\n            if(s*s==i)      // If i has odd number of factors, them it will have open door.\n                arr[i-1]=1;\n            else\n                arr[i-1]=0;  // If i has even number of factors, them it will have closed door.\n        }\n        \n        return arr;\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\nclass Solution {\n    static int[] checkDoorStatus(int N) {\n        \n        int[] arr = new int[10005];   // Initializing an Array to store\n        \n        for(int i=1 ; i<=N ; i++)\n        {\n            int s = (int)Math.sqrt(i);\n            if(s*s==i)      // If i has odd number of factors, them it will have open door.\n                arr[i-1]=1;\n            else\n                arr[i-1]=0;  // If i has even number of factors, them it will have closed door.\n        }\n        \n        return arr;\n    }\n};",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "#Back-end complete function Template for Python 3\n\nclass Solution:\n    def checkDoorStatus(self, N):\n        \n        arr = [0]*10005\n        \n        for i in range(1,N+1):\n            s = int(math.sqrt(i))\n            if(s*s==i):       # If i has odd number of factors, them it will have open door.\n                arr[i-1]=1\n            else:\n                arr[i-1]=0    # If i has even number of factors, them it will have closed door.\n                \n        arr = arr[0:N]\n        \n        return arr;",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "// The given problem statement can be solved by finding the factors of each number from 1 to N.\n// If a number has even number of factors, then the door will remain closed. \n// If a number has odd number of factors, then the door will be open.\n\nclass Solution {\n    checkDoorStatus(N){\n        let arr = [];\n        for(let i=1; i<=N; i++){\n            let sqrt = Math.sqrt(i);\n            if(sqrt % 1 === 0){\n                arr.push(1);    // door will be open if number has odd number of factors\n            }else{\n                arr.push(0);    // door will be closed if number has even number of factors\n            }\n        }\n        return arr;\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}