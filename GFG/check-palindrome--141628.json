{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705371,
            "title": "Check Palindrome",
            "titleSlug": "check-palindrome--141628",
            "content": "<p><span style=\"font-size: 18px;\">Given a string <strong>s</strong>, you need to check if it is palindrome or not. </span></p>\n<blockquote>\n<p><span style=\"font-size: 18px;\">A palidrome is a string that reads the same from front and back.</span></p>\n</blockquote>\n<p><span style=\"font-size: 18px;\"><strong>Note:</strong> Ignore the case in this question.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input</strong></span>: <span style=\"font-size: 18px;\">s = \"Hello\"\n<strong>Output: </strong>false\n<strong>Explanation</strong>: Hello is not equal to olleH so it's not a palindrome.</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>s = \"TenEt\"\n<strong>Output: </strong>true\n<strong>Explanation</strong>: TenEt == tEneT as we are ignoring the case.</span></pre>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string, determine if it is a palindrome, ignoring case. A palindrome reads the same forwards and backward.",
                "constraints": [],
                "testcases": [
                    {
                        "input": "Hello",
                        "output": "false",
                        "explanation": "After ignoring case, 'Hello' is not a palindrome because 'hello' is not the same as 'olleh'."
                    },
                    {
                        "input": "TenEt",
                        "output": "true",
                        "explanation": "After ignoring case, 'TenEt' is a palindrome because 'tenet' is the same as 'tenet'."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>reverse the string and compare.</p>"
        ],
        "relatedTopics": [
            {
                "name": "python-strings",
                "slug": "python-strings"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\npublic static boolean isPalindrome(String s) {\n    String reverse = \"\";\n    // traversing the string backward to\n    // reverse the string\n    for (int i = s.length() - 1; i >= 0; i--) {\n        // appending the characters backward in the\n        // reverse string\n        reverse = reverse + s.charAt(i);\n    }\n\n    // comparing both the string ignoring\n    // the cases\n    return reverse.equalsIgnoreCase(s);\n}\n",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\ndef isPalindrome(s):\n    return s[::-1].lower() == s.lower()\n",
                "lang_text": "python3"
            }
        ],
        "platform": "GFG"
    }
}