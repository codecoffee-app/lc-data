{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703894,
            "title": "Check perfect square",
            "titleSlug": "check-perfect-square2503",
            "content": "<p><span style=\"font-size:18px\">Given a positive integer n, check if it is perfect square or not.</span><br />\r\n<span style=\"font-size:18px\"><strong>NOTE: </strong>Try to solve the question using only addition and subtraction operation.</span><br />\r\n<br />\r\n<span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input</strong>: n = 35\r\n<strong>Output:</strong>&nbsp;0&nbsp;\r\n<strong>Explanation</strong>: 35 is not perfect\r\nsquare because sqrt(35) = 5 but\r\n5*5 !=35.</span>\r\n</pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input: </strong>n = 49\r\n<strong>Output:&nbsp;</strong>1\r\n<strong>Explanation</strong>: sqrt(49) = 7 and \r\n7*7 = 49, Hence 49 is perfect square. </span>\r\n</pre>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Your Task:&nbsp;&nbsp;</strong><br />\r\nYou dont need to read input or print anything. Complete the function <strong>isPerfectSquare()&nbsp;</strong>which takes n&nbsp;as input parameter and returns&nbsp;1 if n is a perfect square else return&nbsp;0.</span><br />\r\n<br />\r\n<span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(sqrt(n))<br />\r\n<strong>Expected Auxiliary Space:</strong> O(1)<br />\r\n<br />\r\n<strong>Constraints:</strong><br />\r\n1&lt;= n&nbsp;&lt;=10<sup>5</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p>Check if square of any factor results into given number.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\r\nclass Solution {\r\n  public:\r\n    // This function returns true if n is \r\n// perfect square, else false \r\nlong long int isPerfectSquare(long long int n) { \r\n    for (int i = 1; i * i <= n; i++) {\r\n \r\n        // If (i * i = n)\r\n        if ((n % i == 0) && (n / i == i)) {\r\n            return 1;\r\n        }\r\n    }\r\n    return 0;\r\n} \r\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\nclass Solution\n{\n    //Function to check if a given number is a perfect square.\n    public long isPerfectSquare(long n)\n    {\n        for (long i = 1; i * i <= n; i++)\n        {\n            // If (i * i = n)\n            if ((n % i == 0) && (n / i == i))\n            {\n                return 1;\n            }\n        }\n        return 0;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}