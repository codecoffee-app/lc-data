{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703963,
            "title": "Check squares",
            "titleSlug": "check-squares2421",
            "content": "<p><span style=\"font-size:18px\">Given an integer <strong>N</strong>, check if it is possible to represent it as a function(a, b) such that : a<sup>2</sup> + b<sup>2</sup> = N where &quot;a&quot; and &quot;b&quot; are whole numbers. Print 1 if it&#39;s possible, else Print 0.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\r\n<span style=\"font-size:18px\"><strong>N = </strong>1</span>\r\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\r\n<span style=\"font-size:18px\">1</span>\r\n<span style=\"font-size:18px\"><strong>Explanation:</strong></span>\r\n<span style=\"font-size:18px\">1<sup>2</sup> + 0<sup>2</sup> = 1. So, the Output is 1</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\r\n<span style=\"font-size:18px\"><strong>N = </strong>2</span>\r\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\r\n<span style=\"font-size:18px\">1</span>\r\n<span style=\"font-size:18px\"><strong>Explanation:</strong></span>\r\n<span style=\"font-size:18px\">1<sup>2</sup> + 1<sup>2</sup> = 2. So, the Output is 1</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 3:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\r\n<span style=\"font-size:18px\"><strong>N = </strong>7</span>\r\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\r\n<span style=\"font-size:18px\">0</span>\r\n<span style=\"font-size:18px\"><strong>Explanation:</strong></span>\r\n<span style=\"font-size:18px\">We don&#39;t have a or b, which when summed\r\nafter squaring gives 7. So, Output is 0.</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>checkSquares()</strong> which takes an Integer N as input and returns the answer.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(N)<br />\r\n<strong>Expected Auxiliary Space:</strong> O(1)</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong></span><br />\r\n<span style=\"font-size:18px\">1 &lt;= N &lt;= 10<sup>6</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an integer N, determine if it can be represented as the sum of two squares of whole numbers. That is, check if there exist whole numbers 'a' and 'b' such that a\u00b2 + b\u00b2 = N. If such 'a' and 'b' exist, return 1; otherwise, return 0.",
                "constraints": [
                    "1 <= N <= 10^6"
                ],
                "testcases": [
                    {
                        "input": "1",
                        "output": "1",
                        "explanation": "1 can be represented as 1\u00b2 + 0\u00b2 = 1."
                    },
                    {
                        "input": "2",
                        "output": "1",
                        "explanation": "2 can be represented as 1\u00b2 + 1\u00b2 = 2."
                    },
                    {
                        "input": "7",
                        "output": "0",
                        "explanation": "There are no whole numbers a and b such that a\u00b2 + b\u00b2 = 7."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Both a and b can&#39;t be more than sqrt(N).</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "// Back-end complete function Template for C++\n\nclass Solution {\n  public:\n    // Function to check if a number N can be expressed as sum of squares of two integers.\n    int checkSquares(int N) {\n        \n        int flag = 0;\n        \n        // loop to check all possible combinations of squares of two integers.\n        for(int a=0 ; a<=(int)sqrt(N) ; a++)\n        {\n            for(int b=0 ; b<=(int)sqrt(N) ; b++)\n            {\n                // if the sum of squares of two integers is equal to N, set flag to 1 and break.\n                if(a*a+b*b==N)\n                {\n                    flag=1;\n                    break;\n                }\n            }\n            // if flag is 1, break the outer loop.\n            if(flag==1)\n                break;\n        }\n        \n        // return the final value of flag.\n        return flag;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution {\n    // Function to check if a number can be represented as sum of two squares\n    static int checkSquares(int N) {\n\n        // Flag to indicate if a pair of squares is found that sums up to N\n        int flag = 0;\n\n        // Iterate through all possible values of a (from 0 to sqrt(N))\n        for (int a = 0; a <= Math.sqrt(N); a++) {\n\n            // Iterate through all possible values of b (from 0 to sqrt(N))\n            for (int b = 0; b <= Math.sqrt(N); b++) {\n\n                // Check if a^2 + b^2 equals N\n                if (a * a + b * b == N) {\n                    // Set flag to 1 to indicate a pair of squares is found\n                    flag = 1;\n                    // Break out of the inner loop since the pair is found\n                    break;\n                }\n            }\n\n            // Check if a pair of squares is found, if yes, break out of the outer loop\n            if (flag == 1)\n                break;\n        }\n\n        // Return the flag value\n        return flag;\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "class Solution:\n    def checkSquares(self, N):\n        \n        flag = 0\n        \n        # Iterate over all possible values of 'a'\n        for a in range(int(math.sqrt(N))+1):\n            # Iterate over all possible values of 'b'\n            for b in range(int(math.sqrt(N))+1):\n                # Check if a^2 + b^2 equals N\n                if a*a+b*b==N:\n                    flag=1\n                    # If condition is satisfied, set flag to 1 and break out of loop\n                    break \n            # If flag is 1, break out of loop\n            if flag==1:\n                break \n            \n        return flag",
                "lang_text": "py"
            },
            {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\r\n/**\r\n * @param {number} N\r\n * @returns {number}\r\n*/\r\n\r\nclass Solution {\r\n    //Function to check if the given number N is a perfect square.\r\n    checkSquares(N) {\r\n        let flag = 0;\r\n        \r\n        // Iterate over all possible values of 'a'\r\n        for (let a = 0; a <= Math.sqrt(N); a++) {\r\n            // Iterate over all possible values of 'b'\r\n            for (let b = 0; b <= Math.sqrt(N); b++) {\r\n                // Check if a^2 + b^2 equals N\r\n                if (a*a + b*b == N) {\r\n                    flag = 1;\r\n                    // If condition is satisfied, set flag to 1 and break out of loop\r\n                    break; \r\n                }\r\n            }\r\n            // If flag is 1, break out of loop\r\n            if (flag == 1) {\r\n                break; \r\n            }\r\n        }\r\n        return flag;\r\n    }\r\n}",
                "lang_text": "javascript"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    //Function to check whether a number is a perfect square.\n    public int checkSquares(int N)\n    {\n        int flag = 0;\n        \n        // loop to check all possible combinations of squares of two integers.\n        for(int a=0 ; a<=(int)Math.Sqrt(N) ; a++)\n        {\n            for(int b=0 ; b<=(int)Math.Sqrt(N) ; b++)\n            {\n                // if the sum of squares of two integers is equal to N, set flag to 1 and break.\n                if(a*a+b*b==N)\n                {\n                    flag=1;\n                    break;\n                }\n            }\n            // if flag is 1, break the outer loop.\n            if(flag==1)\n                break;\n        }\n        \n        // return the final value of flag.\n        return flag;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}