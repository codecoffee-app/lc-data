{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 702956,
            "title": "Check String",
            "titleSlug": "check-string1818",
            "content": "<p><span style=\"font-size:18px\">Given a string, check if all its characters are the same or not.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong>\r\ns = &quot;geeks&quot;\r\n<strong>Output:</strong> False\r\n<strong>Explanation</strong>: The string contains different\r\ncharacter &#39;g&#39;, &#39;e&#39;, &#39;k&#39; and &#39;s&#39;.\r\n</span>\r\n</pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input</strong>: \r\ns = &quot;gggg&quot;\r\n<strong>Output:</strong> True\r\n<strong>Explanation</strong>: The string contains only one\r\ncharacter &#39;g&#39;.</span>\r\n</pre>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou don&#39;t need to read input or print anything. Your task is to complete the function&nbsp;<strong>check()&nbsp;</strong>which takes a string as input and returns True if all the characters in the string are the same. Else, it returns False.</span></p>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Expected Time Complexity:&nbsp;</strong>O(|S|).<br />\r\n<strong>Expected Auxiliary Space:&nbsp;</strong>O(1).</span></p>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n1 &lt;= |S| &lt;= 10<sup>4</sup></span><br />\r\n&nbsp;</p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string, determine if all characters within the string are identical. Return `True` if all characters are the same; otherwise, return `False`.",
                "constraints": [
                    "1 <= |S| <= 10^4",
                    "|S| represents the length of the string."
                ],
                "testcases": [
                    {
                        "input": "geeks",
                        "output": "False",
                        "explanation": "The string contains different characters: 'g', 'e', 'k', and 's'."
                    },
                    {
                        "input": "gggg",
                        "output": "True",
                        "explanation": "The string contains only the character 'g'."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Store the first character and then check if any character in the string is different from that.<br />\nIf there&#39;s a different character, return false.&nbsp;<br />\nElse, return true after traversing the complete string.&nbsp;</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution\r\n{\r\n    public:\r\n        \r\n        bool check (string s)\r\n        {\r\n        \tchar ch = s[0];\r\n        \tfor (int i = 1; i < s.length (); ++i)\r\n        \t{\r\n        \t\tif (s[i] != ch)\r\n        \t\t\treturn false;\r\n        \t}\r\n        \treturn true;\r\n        }\r\n\r\n// Contributed By: Pranay Bansal\r\n\r\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "// Defining a class named Sol which contains a method named check\nclass Sol \n{\n    // Method check takes a String parameter named s\n    Boolean check (String s)\n    {\n        // Extracting the first character of the string\n        char ch = s.charAt (0);\n        \n        // Iterating through the rest of the characters in the string\n        for (int i = 1; i < s.length (); ++i)\n        {\n            // Checking if any character is different from the initial character\n            // If found, then returning false\n            if (s.charAt(i) != ch)\n                return false;\n        }\n        \n        // If all characters are the same, returning true\n        return true;\n    }\n}\n\n// Contributed By: Pranay Bansal",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\nclass Solution:\r\n    # Function to check if all characters in the string are the same.\r\n    def check (self,s):\r\n        # Store the first character to compare with the rest of the characters.\r\n        ch = s[0]\r\n        \r\n        # Iterate through the rest of the characters in the string.\r\n        for i in range (1, len (s)):\r\n            # If any character is not equal to the first character, return False.\r\n            if s[i] != ch:\r\n                return False\r\n        \r\n        # If all characters are the same, return True.\r\n        return True\r\n        \r\n    # Contributed By: Pranay Bansal",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "\n//User function Template for \n\n/**\n * @param {string} s\n * @return {boolean}\n*/\n\nclass Solution {\n  check(s){\n    const ch = s[0];\n    for (let i = 1; i < s.length; i++){\n      if (s[i] !== ch){\n        return false;\n      }\n    }\n    return true;\n  }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}