{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704524,
            "title": "Check whether two numbers differ at one bit position only",
            "titleSlug": "check-whether-two-numbers-differ-at-one-bit-position-only3415",
            "content": "<p><span style=\"font-size:20px\">Given two non-negative integers&nbsp;<strong>a</strong>&nbsp;and&nbsp;<strong>b</strong>. The problem is to check whether the two numbers differ at one-bit position only or not. If yes then the answer is 1, otherwise 0.</span></p>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input: </strong>a = 13, b = 9\r\n<strong>Output:</strong> 1\r\n<strong>Explanation</strong>: <strong>(13)<sub>10</sub></strong> = (1<strong>1</strong>01)<sub>2</sub>\r\n<strong>(9)<sub>10</sub></strong> = (1<strong>0</strong>01)<sub>2</sub>\r\nBoth the numbers differ at one bit \r\nposition only, i.e, differ at the \r\n<strong>3rd</strong> bit from the right.\r\n</span></pre>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input</strong>: a = 15, b = 8\r\n<strong>Output:</strong> 0\r\n<strong>Explanation</strong>: <strong>(15)<sub>10</sub></strong> = (1<strong>111</strong>)<sub>2</sub> \r\n<strong>(8)<sub>10</sub></strong> = (1<strong>000</strong>)<sub>2</sub> \r\nBoth the numbers differ at 3 bit\r\npositions.</span></pre>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Your Task:&nbsp;&nbsp;</strong><br />\r\nYou don&#39;t need to read input or print anything. Your task is to complete the function&nbsp;<strong>DifferOne()</strong>&nbsp;which takes&nbsp;<strong>a, b&nbsp;</strong>as inputs and returns the answer.<br />\r\n<br />\r\n<strong>Expected Time Complexity:</strong>&nbsp;O(max(log a, log b))<br />\r\n<strong>Expected Auxiliary Space:</strong>&nbsp;O(1)<br />\r\n<br />\r\n<strong>Constraints:</strong><br />\r\n1 &le; a, b &le; 10<sup>9</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two non-negative integers, `a` and `b`, determine if they differ by only one bit in their binary representation. Return 1 if they differ by one bit, and 0 otherwise.",
                "constraints": [
                    "1 <= a, b <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "a = 13, b = 9",
                        "output": "1",
                        "explanation": "The binary representation of 13 is 1101, and the binary representation of 9 is 1001. They differ only in the third bit from the right."
                    },
                    {
                        "input": "a = 15, b = 8",
                        "output": "0",
                        "explanation": "The binary representation of 15 is 1111, and the binary representation of 8 is 1000. They differ in three bit positions."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Bit Magic",
                "slug": "bit-magic"
            },
            {
                "name": "Numbers",
                "slug": "numbers"
            },
            {
                "name": "Operators",
                "slug": "operators"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nclass Solution{   \npublic:\n    //Function to find if two integers differ by exactly one bit.\n    int DifferOne(long int a, long int b) { \n        int c = 0;\n        //iterating over all the bits of a and b.\n        for(int i = 0; i < 32; i++){\n            //checking if corresponding bits are different.\n            int x = (1LL << i) & a, y = (1LL << i) & b;\n            if(x and y == 0) c++;\n            else if(x == 0 and y) c++;\n        }\n        //checking if the difference is exactly one bit.\n        if(c == 1) return 1;\n        return 0;\n    } \n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution{\n    static long DifferOne(long a, long b){\n        // initialize a counter to keep track of differences\n        int c = 0;\n        \n        // iterate through each bit of the numbers\n        for(int i = 0; i < 32; i++){\n            // check the bit at position i in number a\n            int x = (int)((1l << i) & a);\n            \n            // check the bit at position i in number b\n            int y = (int)((1l << i) & b);\n            \n            // if the bit is set in a but not in b or vice versa,\n            // increment the difference counter\n            if(x != 0 && (y == 0)) c++;\n            else if((x == 0) && y != 0) c++;\n        }\n        \n        // if there is only one difference, return 1\n        // otherwise, return 0\n        if(c == 1) return 1;\n        return 0;\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "public class Solution\n{\n    public int DifferOne(long a, long b)\n    {\n        int c = 0;\n        for (int i = 0; i < 64; i++)\n        {\n            long x = (1L << i) & a;\n            long y = (1L << i) & b;\n            if ((x != 0 && y == 0) || (x == 0 && y != 0))\n                c++;\n        }\n        \n        return c == 1 ? 1 : 0;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}