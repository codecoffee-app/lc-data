{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705588,
            "title": "Chicks in a Zoo",
            "titleSlug": "chicks-in-a-zoo1159",
            "content": "<p><span style=\"font-size: 18px;\">Initially, the zoo have a single chick. A chick gives birth to 2 chicks every day and the life expectancy of a chick is 6 days. Zoo officials want to buy food for chicks so they want to know the number of chicks on an N<sup>th</sup>&nbsp;day. Help the officials with this task.</span><br />&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>N = 2</span> \n<strong><span style=\"font-size: 18px;\">Output: </span></strong><span style=\"font-size: 18px;\">3\n<strong>Explanation: </strong>First day there is only 1 chick.\nOn second day total number of chicks = 3.</span><span style=\"font-size: 18px;\"><strong> </strong></span>\n</pre>\n<p><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>N = 3\n<strong>Output: </strong>9\n<strong>Explanation: </strong>First day there is only 1 chick.\nOn second day total number of chicks = 3.\nOn third day total number of chicks = 9</span>\n</pre>\n<p>&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Your Task:</strong><br />You don't need to read or print anything, Your task is to complete the function&nbsp;<strong>NoOfChicks()&nbsp;</strong>which takes N as the input parameter and returns the total no. of chicks on the N<sup>th</sup>&nbsp;day.</span><br />&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:&nbsp;</strong>O(N)<br /><strong>Expected Space Complexity:&nbsp;</strong>O(N)</span><br />&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &lt;= N &lt;= 35</span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "A zoo initially has a single chick. Each chick gives birth to 2 new chicks every day. The lifespan of a chick is 6 days.  Zoo officials need to determine the number of chicks on day N to plan their food purchases.  Your task is to calculate the total number of chicks present on the Nth day.",
                "constraints": [
                    "1 <= N <= 35"
                ],
                "testcases": [
                    {
                        "input": "2",
                        "output": "3",
                        "explanation": "On day 1, there is 1 chick. On day 2, the initial chick gives birth to 2 more, resulting in a total of 1 + 2 = 3 chicks."
                    },
                    {
                        "input": "3",
                        "output": "9",
                        "explanation": "On day 1, there is 1 chick. On day 2, the chick gives birth to 2 chicks, resulting in 3 chicks. On day 3, all 3 chicks give birth to 2 chicks each, resulting in 3 + (3 * 2) = 9 chicks."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Use maths.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution {\r\npublic:\r\n    // Function to calculate the number of chicks\r\n    long long int NoOfChicks(int n){\r\n        long long cnt=1ll;   // Initialize the count of chicks to 1\r\n        vector<long long>expires(50,0);   // Create a vector to store the expiration count of chicks at each day\r\n        expires[6]=1;   // Set the expiration count to 1 on the 6th day\r\n        for(int i=1;i<n;i++){   // Iterate from the 1st day to the given number of days\r\n            cnt-=expires[i];   // Subtract the expiration count of chicks on the current day from the total count\r\n            expires[i+6]+=2*cnt;   // Add the expiration count of chicks on the (i+6)th day by multiplying the count by 2 and adding it to the expiration count of the (i+6)th day\r\n            cnt+=(2*cnt);   // Add twice the count to the total count\r\n        }\r\n        return cnt;   // Return the total count of chicks\r\n    }\r\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution\n{\n    public long NoOfChicks(int N)\n    {\n        // initializing variables\n        long temp=1;  // variable to keep track of increment\n        long ans=1;  // variable to store the final answer\n        long arr[]=new long[N];  // array to store intermediate values\n        boolean flag=false;  // flag variable to indicate if condition is met\n\n        arr[0]=ans;  // storing initial value in the array\n        int ind=0;  // variable to keep track of array index\n\n        // iterating from 1 to N-1\n        for(int i=1;i<N;i++){\n            temp++;  // incrementing temp by 1\n\n            // checking if temp is divisible by 7 or flag is true\n            if(temp%7==0 || flag){\n                flag=true;  // setting flag to true\n                ans-=arr[ind++];  // subtracting value from arr[ind] from ans\n            }\n            long val=ans*2;  // multiplying ans by 2 and storing in val\n            arr[i]=val;  // storing val in the array\n            ans+=val;  // adding val to ans\n        }\n        // returning the final answer\n        return ans;\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "# Function to calculate the number of chicks\nclass Solution:\n\n    def NoOfChicks(self, N):\n\n        # Initialize arrays for storing the count of chicks\n        arr = [0] * (N + 1)\n        actual = [0] * (N + 1)\n\n        # Set the initial counts of chicks for the first day\n        arr[1] = 1\n        actual[1] = 1\n\n        # Iterate over each day starting from the second day\n        for i in range(2, N + 1):\n\n            # Calculate the index for the current day to check if it is within range\n            curr = i - 6\n\n            # Calculate the count of chicks for the current day based on the count of chicks from the previous day\n            add = arr[i - 1]\n            actual[i] = add * 2\n            arr[i] = add * 2\n            arr[i] += arr[i - 1]\n\n            # Adjust the count of chicks if the current day is beyond the range of 7 days\n            if curr >= 1:\n                arr[i] -= 3 * actual[curr]\n                actual[i] -= 2 * actual[curr]\n\n        # Return the count of chicks for the last day\n        return arr[N]\n",
                "lang_text": "py"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    public long NoOfChicks(int n)\n    {\n        long cnt=1; // Initialize the count of chicks to 1\n        long[] expires = new long[50]; // Create a vector to store the expiration count of chicks at each day\n        expires[6]=1; // Set the expiration count to 1 on the 6th day\n        for(int i=1; i<n; i++){ // Iterate from the 1st day to the given number of days\n            cnt-=expires[i]; // Subtract the expiration count of chicks on the current day from the total count\n            expires[i+6]+=2*cnt; // Add the expiration count of chicks on the (i+6)th day by multiplying the count by 2 and adding it to the expiration count of the (i+6)th day\n            cnt+=(2*cnt); // Add twice the count to the total count\n        }\n        return cnt; // Return the total count of chicks\n    }\n}",
                "lang_text": "csharp"
            },
            {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n/**\n * @param {number} N\n * @returns {number}\n*/\n\nclass Solution {\n    //Function to find the chickens that would fly off.\n    NoOfChicks(N) {\n        // Initialize arrays for storing the count of chicks\n        let arr = new Array(N+1).fill(0);\n        let actual = new Array(N+1).fill(0);\n        \n        // Set the initial counts of chicks for the first day\n        arr[1] = 1;\n        actual[1] = 1;\n        \n        // Iterate over each day starting from the second day\n        for (let i = 2; i <= N; i++) {\n            \n            // Calculate the index for the current day to check if it is within range\n            let curr = i-6;\n            \n            // Calculate the count of chicks for the current day based on the count of chicks from the previous day\n            let add = arr[i-1];\n            actual[i] = add*2;\n            arr[i] = add*2;\n            arr[i] += arr[i-1];\n            \n            // Adjust the count of chicks if the current day is beyond the range of 7 days\n            if (curr >= 1) {\n                arr[i] -= 3*actual[curr];\n                actual[i] -= 2*actual[curr];\n            }\n        }\n        \n        // Return the count of chicks for the last day\n        return arr[N];\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}