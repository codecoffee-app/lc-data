{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 881701,
            "title": "Chocolate Distribution Problem",
            "titleSlug": "chocolate-distribution-problem-1607582550--183828",
            "content": "<p><span style=\"font-size: 18px;\">Given a positive integer array <strong>arr[] </strong>of size <strong>n</strong> and&nbsp;</span><span style=\"font-size: 18px;\">an integer&nbsp;</span><strong style=\"font-size: 18px;\">k</strong><span style=\"font-size: 18px;\">, where each value of the array represents the number of chocolates in the </span><strong style=\"font-size: 18px;\">i-</strong><span style=\"font-size: 18px;\">th packet (</span><strong style=\"font-size: 18px;\">i</strong><span style=\"font-size: 18px;\"> &lt; </span><strong style=\"font-size: 18px;\">n</strong><span style=\"font-size: 18px;\">)</span><span style=\"font-size: 18px;\">. Each packet can have variable number of chocolates. There are </span><strong style=\"font-size: 18px;\">k</strong><span style=\"font-size: 18px;\">&nbsp;students, the task is to distribute chocolate packets such that :</span></p>\n<ul>\n<li><span style=\"font-size: 18px;\">Each student gets only one packet.</span></li>\n<li><span style=\"font-size: 18px;\">The difference between the number of chocolates given to the students having packet with maximum chocolates and student having packet with minimum chocolates should be minimum.</span></li>\n</ul>\n<p><strong><span style=\"font-size: 18px;\">Examples:</span></strong></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr[] = [3, 4, 1, 9, 56, 7, 9, 12], k = 5</span>\n<span style=\"font-size: 18px;\"><strong>Output: </strong>6</span>\n<span style=\"font-size: 18px;\"><strong>Explanation: </strong>The minimum difference between maximum chocolates and minimum chocolates is 9 - 3 = 6.<br /></span></pre>\n<p><strong><span style=\"font-size: 18px;\">constraint:</span></strong></p>\n<p><span style=\"font-size: 18px;\">1 &lt;= k &lt;= n &lt;= 100<br />0 &lt;= arr[i] &lt;= 1000</span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a positive integer array `arr` of size `n`, where each element represents the number of chocolates in the i-th packet, and an integer `k`, where `k` is the number of students. The task is to distribute chocolate packets such that each student gets only one packet and the difference between the maximum and minimum number of chocolates received by the students is minimized. Find the minimum difference.",
                "constraints": [
                    "1 <= k <= n <= 100",
                    "0 <= arr[i] <= 1000"
                ],
                "testcases": [
                    {
                        "input": "arr = [3, 4, 1, 9, 56, 7, 9, 12], k = 5",
                        "output": "6",
                        "explanation": "Sort the array arr = [1, 3, 4, 7, 9, 9, 12, 56]. Consider subarrays of length k = 5.  The minimum difference is found with the subarray [3, 4, 1, 9, 7] which becomes [1,3,4,7,9] after sorting and 9 - 1 = 8. Another valid k length array is [3,4,7,9,9] and 9-3 = 6.  Thus, the minimum difference is 6."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Sort the given array then the problem reduces to finding the minium and maximum in contiguous subarray of size M.</p>",
            "<p>After sorting the array find the minimum difference between last and first elements of subarray of size M</p>"
        ],
        "relatedTopics": [
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "CPP",
                "slug": "cpp"
            },
            {
                "name": "Java",
                "slug": "java"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nint minDiff(vector<int> &arr, int k) {\n\n    int n = arr.size();\n\n    sort(arr.begin(), arr.end());\n\n    int res = arr[k - 1] - arr[0];\n\n    for (int i = 0; (i + k - 1) < n; i++)\n        res = min(res, (arr[i + k - 1] - arr[i]));\n\n    return res;\n}",
                "lang_text": "cpp"
            }
        },
        "platform": "GFG"
    }
}