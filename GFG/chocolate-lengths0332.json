{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704003,
            "title": "Chocolate lengths",
            "titleSlug": "chocolate-lengths0332",
            "content": "<p><span style=\"font-size:18px\">Adam has <strong>N</strong> chocolates of unequal lengths. He wants that each chocolate should be of equal lengths. In order to do so,at each step, he picks two unequal length chocolates and takes their length difference &#39;d&#39; and then he eats the bigger one and&nbsp;make it&#39;s length&nbsp; &#39;d&#39; . He stops when all the chocolates are of&nbsp;equal length . Find the final length of all chocolates.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\r\n<span style=\"font-size:18px\"><strong>N = </strong>2 </span>\r\n<span style=\"font-size:18px\"><strong>A[] = </strong>{10 , 12}</span>\r\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\r\n<span style=\"font-size:18px\">2</span>\r\n<span style=\"font-size:18px\"><strong>Explanation:\r\n</strong>{10,12} -&gt; {10,2} -&gt; {8,2} -&gt; {6,2}\r\n-&gt; {4,2} -&gt; {2,2} </span>\r\n<span style=\"font-size:18px\">So, the final length is 2.</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\r\n<span style=\"font-size:18px\"><strong>N = </strong>3</span>\r\n<span style=\"font-size:18px\"><strong>A[] = </strong>{6 , 10 , 15}</span>\r\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\r\n<span style=\"font-size:18px\">1</span>\r\n<span style=\"font-size:18px\"><strong>Explanation:</strong>\r\n{6,10,15}&nbsp;-&gt; {6,10,9}&nbsp;-&gt; {6,4,9}&nbsp;-&gt;\r\n{6,4,3}&nbsp;-&gt; {2,4,3} -&gt; {2,4,1}&nbsp;-&gt;\r\n{2,2,1} -&gt; {1,2,1} -&gt; {1,1,1}\r\nSo, the final length is 1.\r\n[Note:this is one way of eating chocolates,\r\nthere could be many..]</span> </pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>chocolateLength()</strong> which takes an Integer N and an Array A[] as input and returns the answer.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(N*log(N))<br />\r\n<strong>Expected Auxiliary Space:</strong> O(1)</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong></span><br />\r\n<span style=\"font-size:18px\">1 &lt;= N &lt;= 10<sup>5</sup></span><br />\r\n<span style=\"font-size:18px\">1 &lt;= A[i] &lt;= 10<sup>8</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Adam has N chocolates of unequal lengths. He wants to make all chocolates the same length. In each step, he picks two chocolates with different lengths, finds the difference 'd' between their lengths, eats the larger chocolate, and reduces the larger chocolate's length to 'd'. He stops when all the chocolates have the same length. Find the final length of all the chocolates.",
                "constraints": [
                    "1 <= N <= 10^5",
                    "1 <= A[i] <= 10^8"
                ],
                "testcases": [
                    {
                        "input": "N = 2\nA[] = {10 , 12}",
                        "output": "2",
                        "explanation": "The process unfolds as follows: {10, 12} -> {10, 2} -> {8, 2} -> {6, 2} -> {4, 2} -> {2, 2}.  The final length is 2."
                    },
                    {
                        "input": "N = 3\nA[] = {6 , 10 , 15}",
                        "output": "1",
                        "explanation": "One possible sequence of operations is: {6,10,15} -> {6,10,9} -> {6,4,9} -> {6,4,3} -> {2,4,3} -> {2,4,1} -> {2,2,1} -> {1,2,1} -> {1,1,1}. Therefore, the final length is 1. Note that there can be multiple ways to reach the final state."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Upon observing carefully, you will observe that the final length will end up to be gcd of all of the lengths.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\r\n\r\nclass Solution {\r\n  public:\r\n    \r\n    // helper method to get GCD of 2 numbers\r\n    int gcd(int a , int b)\r\n    {\r\n        if(a==0)\r\n            return b;\r\n        else\r\n            return gcd(b%a,a);\r\n    }\r\n    \r\n    int chocolateLength(int N , int A[]) {\r\n        \r\n        int result = A[0];\r\n        \r\n        // Getting GCD of the Array.\r\n        for(int i=1 ; i<N ; i++)\r\n            result=gcd(A[i],result);\r\n        \r\n        return result;\r\n    }\r\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n    \n    // helper method to get GCD of 2 numbers\n    static int gcd(int a , int b)\n    {\n        // base case, if a is 0 then gcd is b\n        if (a == 0)\n            return b;\n        else\n            // recursively calculate gcd by taking remainder\n            return gcd(b % a, a);\n    }\n    \n    // method to calculate the length of chocolate bar\n    static int chocolateLength(int N , int[] A) {\n        \n        // initializing result as the first element of the array\n        int result = A[0];\n        \n        // looping through the array to calculate gcd\n        for (int i = 1; i < N; i++)\n            result = gcd(A[i], result);\n        \n        // return the final result (gcd of the array elements)\n        return result;\n    }\n};",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\nclass Solution:\n    def chocolateLength(self, N , A):\n        result = A[0]\n        \n        # Getting GCD of the Array\n        for i in range(1,N):\n            result = math.gcd(result,A[i])\n            \n        return result;",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "class Solution {\n  //Function to find the length of the maximum length subarray.\n  chocolateLength(N, A) {\n    let result = A[0];\n    // Getting GCD of the Array\n    for (let i = 1; i < N; i++) {\n      result = this.gcd(result, A[i]);\n    }\n    return result;\n  }\n\n  //Function to find the greatest common divisor of two numbers.\n  gcd(a, b) {\n    if (b == 0) {\n      return a;\n    } else {\n      return this.gcd(b, a % b);\n    }\n  }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}