{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 711613,
            "title": "Choice",
            "titleSlug": "choice",
            "content": "<p><span style=\"font-size:18px\">Geek&nbsp;played three matches and he wants to represent his scores as an array and in the Concatenated&nbsp;string form.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\">Input:\r\n2 7 5\r\nOutput:\r\n[ 2,7,5 ]\r\n275</span>\r\n</pre>\r\n\r\n<p><strong><span style=\"font-size:18px\">Your Task:</span></strong><br />\r\n<span style=\"font-size:18px\">This is a function problem. You only need to complete the&nbsp;<strong>function arrayForm() and&nbsp;stringForm()&nbsp;</strong>that takes&nbsp;three integers<strong> a,b,c </strong>as<strong> </strong>parameters and that return array form and string form respectively<strong>.</strong>&nbsp;Don&#39;t print newline, it will be added by the driver code.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraint:</strong><br />\r\n1&lt;=a,b,c&lt;=10</span></p>\r\n\r\n<p>&nbsp;</p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Geek has played three matches and wants to represent his scores as an array and as a concatenated string.",
                "constraints": [
                    "1 <= a, b, c <= 10"
                ],
                "testcases": [
                    {
                        "input": "2 7 5",
                        "output": "[ 2,7,5 ]\n275",
                        "explanation": "The array form is [2, 7, 5] and the concatenated string form is 275."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function template in C++\n\nclass Solution {\n  public:\n    //Function to create an array form of three integers.\n    vector<int> arrayForm(int a, int b, int c) {\n        vector<int> v;\n\n        //Appending three integers to the vector.\n        v.push_back(a);\n        v.push_back(b);\n        v.push_back(c);\n\n        //Returning the vector.\n        return v;\n    }\n\n    //Function to create a string form of three integers.\n    string stringForm(int a, int b, int c) {\n        //Initializing an empty string.\n        string ans = \"\";\n\n        //Appending the three integers to the string.\n        ans += to_string(a);\n        ans += to_string(b);\n        ans += to_string(c);\n\n        //Returning the string.\n        return ans;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\r\n\r\nclass Solution {\r\n \r\n    int [] arrayForm(int a, int b, int c) {\r\n        // code here\r\n        int ans[]=new int[3];\r\n        ans[0]=a;\r\n        ans[1]=b;\r\n        ans[2]=c;\r\n        return ans;\r\n    }\r\n\r\n    String stringForm(int a, int b, int c) {\r\n        // code here\r\n        String ans=\"\";\r\n        ans+=a;\r\n        ans+=b;\r\n        ans+=c;\r\n        return ans;\r\n    }\r\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\r\n\r\nclass Solution:\r\n    \r\n    #Function to return the array form of given integer inputs.\r\n    def arrayForm(self, a, b, c):\r\n        return [a, b, c]\r\n    \r\n    #Function to return the concatenated string form of given integer inputs.\r\n    def stringForm(self, a, b, c):\r\n        return str(a) + str(b) + str(c)",
                "lang_text": "py"
            },
            {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\r\n/**\r\n * @param {number} a\r\n * @param {number} b\r\n * @param {number} c\r\n * @returns {number}\r\n*/\r\n\r\nclass Solution {\r\n    arrayForm(a, b, c) {\r\n        return [a, b, c];\r\n    }\r\n\r\n    stringForm(a, b, c) {\r\n        return String(a) + String(b) + String(c);\r\n    }\r\n}",
                "lang_text": "javascript"
            },
            {
                "lang": "C#",
                "full_func": "class Solution\n{\n    //Complete this function\n    //Function to calculate the array form.\n    public List<int> arrayForm(int a, int b, int c)\n    {\n        //Creating a new list.\n        List<int> v = new List<int>();\n\n        //Appending three integers to the list.\n        v.Add(a);\n        v.Add(b);\n        v.Add(c);\n\n        //Returning the list.\n        return v;\n    }\n\n    //Complete this function\n    //Function to calculate the string form.\n    public string stringForm(int a, int b, int c)\n    {\n        //Initializing an empty string.\n        string ans = \"\";\n\n        //Appending the three integers to the string.\n        ans += a.ToString();\n        ans += b.ToString();\n        ans += c.ToString();\n\n        //Returning the string.\n        return ans;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}