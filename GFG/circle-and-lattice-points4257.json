{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703737,
            "title": "Circle and Lattice Points",
            "titleSlug": "circle-and-lattice-points4257",
            "content": "<p><span style=\"font-size:18px\">Given an integer R&nbsp;which represents the radius of a circle that has (0,0) as its centre,&nbsp;find the total number of lattice points on the circumference. Lattice Points are points with coordinates as integers in 2-D space.</span></p>\r\n\r\n<p><strong><span style=\"font-size:18px\">Example 1:</span></strong></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong> R = 5\r\n<strong>Output:</strong> 12\r\n<strong>Explanation:</strong> </span><span style=\"font-size:18px\">(0,5), (0,-5), (5,0), \r\n(-5,0), (3,4), (-3,4), </span><span style=\"font-size:18px\">(-3,-4), (3,-4), \r\n(4,3), (-4,3), (-4,-3), (4,-3).</span></pre>\r\n\r\n<p><br />\r\n<strong><span style=\"font-size:18px\">Example 2:</span></strong></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong> R = 88\r\n<strong>Output:</strong> 4\r\n<strong>Explanation:</strong> </span><span style=\"font-size:18px\">(0,88), (88,0), (0,-88), \r\n(-88,0)</span>\r\n</pre>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Your Task:&nbsp;&nbsp;</strong></span><br />\r\n<span style=\"font-size:18px\">You don&#39;t need to read input or print anything. Your task is to complete the function <strong>latticePoints()</strong>&nbsp;which takes <strong>R </strong>as input and returns the number of lattice points.<br />\r\n<br />\r\n<strong>Expected Time Complexity:</strong> O(RsqrtR)<br />\r\n<strong>Expected Auxiliary Space:</strong> O(1)</span></p>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n0 &le; <strong>R </strong>&le; 10<sup>4</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an integer R representing the radius of a circle centered at (0,0), determine the total number of lattice points (points with integer coordinates) that lie on the circumference of the circle.",
                "constraints": [
                    "0 <= R <= 10000"
                ],
                "testcases": [
                    {
                        "input": "5",
                        "output": "12",
                        "explanation": "The lattice points on the circle with radius 5 are (0,5), (0,-5), (5,0), (-5,0), (3,4), (-3,4), (-3,-4), (3,-4), (4,3), (-4,3), (-4,-3), and (4,-3)."
                    },
                    {
                        "input": "88",
                        "output": "4",
                        "explanation": "The lattice points on the circle with radius 88 are (0,88), (88,0), (0,-88), and (-88,0)."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>To find lattice points, we basically need to find values of (x, y) which satisfy the equation x<sup>2</sup> + y<sup>2</sup> = r<sup>2</sup>.<br />\nFor any value of (x, y) that satisfies the above equation we actually have total 4 different combination which that satisfy the equation</p>"
        ],
        "relatedTopics": [
            {
                "name": "Geometric",
                "slug": "geometric"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution{\r\n\tpublic:\r\n\tint latticePoints(int r)\r\n\t{\r\n\t\tif (r == 0)\r\n        \treturn 0; \r\n \r\n\t    // Initialize result as 4 for (r, 0), (-r. 0),\r\n\t    // (0, r) and (0, -r)\r\n\t    int result = 4;\r\n\t \r\n\t    // Check every value that can be potential x\r\n\t    for (int x=1; x<r; x++)\r\n\t    {\r\n\t        // Find a potential y\r\n\t        int ySquare = r*r - x*x;\r\n\t        int y = sqrt(ySquare);\r\n\t \r\n\t        // checking whether y is an integer or not.\r\n\t        // Count increments by 4 for four different\r\n\t        // quadrant values\r\n\t        if (y*y == ySquare)\r\n\t            result += 4;\r\n\t    }\r\n\t \r\n\t    return result;\r\n\r\n\t}\r\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\r\n\r\nclass Solution\r\n{\r\n    public int latticePoints(int r) \r\n    { \r\n       if (r == 0)\r\n        \treturn 0; \r\n \r\n\t    // Initialize result as 4 for (r, 0), (-r. 0),\r\n\t    // (0, r) and (0, -r)\r\n\t    int result = 4;\r\n\t \r\n\t    // Check every value that can be potential x\r\n\t    for (int x=1; x<r; x++)\r\n\t    {\r\n\t        // Find a potential y\r\n\t        int ySquare = r*r - x*x;\r\n\t        int y = (int)Math.sqrt(ySquare);\r\n\t \r\n\t        // checking whether y is an integer or not.\r\n\t        // Count increments by 4 for four different\r\n\t        // quadrant values\r\n\t        if (y*y == ySquare)\r\n\t            result += 4;\r\n\t    }\r\n\t \r\n\t    return result;\r\n    } \r\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            },
            {
                "lang": "C#",
                "full_func": "class Solution\n{\n    //Complete this function\n    public int latticePoints(int r)\n    {\n        if (r == 0)\n            return 0;\n\n        // Initialize result as 4 for (r, 0), (-r. 0),\n        // (0, r) and (0, -r)\n        int result = 4;\n\n        // Check every value that can be potential x\n        for (int x = 1; x < r; x++)\n        {\n            // Find a potential y\n            int ySquare = r * r - x * x;\n            int y = (int)Math.Sqrt(ySquare);\n\n            // checking whether y is an integer or not.\n            // Count increments by 4 for four different\n            // quadrant values\n            if (y * y == ySquare)\n                result += 4;\n        }\n\n        return result;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}