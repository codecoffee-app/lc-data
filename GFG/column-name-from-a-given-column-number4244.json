{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 702959,
            "title": "Column name from a given column number",
            "titleSlug": "column-name-from-a-given-column-number4244",
            "content": "<p><span style=\"font-size: 18px;\">Given a positive integer, return its corresponding column title as appear in an Excel sheet.<br />Excel columns has a pattern like A, B, C, &hellip; ,Z, AA, AB, AC,&hellip;. ,AZ, BA, BB, &hellip; ZZ, AAA, AAB &hellip;.. etc. In other words, column 1 is named as &ldquo;A&rdquo;, column 2 as &ldquo;B&rdquo;, column 27 as &ldquo;AA&rdquo; and so on.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong>\nN = 28\n<strong>Output:</strong> <br />AB\n<strong>Explanation</strong>: 1 to 26 are A to Z.\nThen, 27 is AA and 28 = AB.</span>\n</pre>\n<p><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input</strong>: \nN = 13\n<strong>Output:</strong> <br />M\n<strong>Explanation</strong>: M is the 13th character of\nalphabet.</span>\n</pre>\n<p><span style=\"font-size: 18px;\"><strong>Example 3:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong>\nN = 5473578\n<strong>Output:</strong> <br />KYJZF<br /></span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Your Task:</strong><br />You don't need to read input or print anything. Your task is to complete the function&nbsp;<strong>colName()&nbsp;</strong>which takes the column number&nbsp;N as input and returns the column name represented as a string.</span><br /><span style=\"font-size: 18px;\"><strong>Expected Time Complexity: </strong>O(LogN).<br /><strong>Expected Auxiliary Space:&nbsp;</strong>O(1).</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &lt;= N &lt;= 10<sup>18</sup></span></p>\n<p>&nbsp;</p>",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a positive integer N, convert it into its corresponding Excel column title. Excel column titles follow a base-26 numbering system where A=1, B=2, ..., Z=26, AA=27, AB=28, and so on.",
                "constraints": [
                    "1 <= N <= 10^18"
                ],
                "testcases": [
                    {
                        "input": "28",
                        "output": "AB",
                        "explanation": "The 28th column is represented as AB, as columns 1-26 are A-Z and 27 is AA."
                    },
                    {
                        "input": "13",
                        "output": "M",
                        "explanation": "The 13th column corresponds to the letter M in the alphabet."
                    },
                    {
                        "input": "5473578",
                        "output": "KYJZF",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">This is simply like a conversion from base 10 to base 26.&nbsp;<br />\nBut, note that the numbering here starts from 1 and not from 0.&nbsp;</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "paytm",
            "amazon",
            "microsoft",
            "samsung",
            "goldman-sachs",
            "directi"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "\n\nclass Solution{\n    public:\n    string colName (long long int n)\n    {\n    \tstring res = \"\"; // to store the result\n    \n    \tint temp;\n    \twhile (n) // while n > 0\n    \t{\n    \t    n--;\n    \t\ttemp = n % 26;\n    \t\tres += ('A' + temp);\n    \t\tn /= 26;\n    \t}\n    \n    \t// res contains the answer but in reverse.\n    \t// hence, reversing it\n    \treverse (res.begin (), res.end ());\n    \treturn res;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\nclass Solution\n{\n    String colName (long n)\n    {\n    \tString res = \"\"; // to store the result\n    \n    \tlong temp;\n    \twhile (n > 0)\n    \t{\n    \t    n--;\n    \t\ttemp = n % 26;\n    \t\tres += (char)('A' + temp);\n    \t\tn /= 26;\n    \t}\n    \n    \n    \t// res contains the answer but in reverse.\n    \t// hence, reversing it\n    \tint len = res.length ();\n    \tString ans = \"\";\n    \tfor (int  i = len - 1; i >= 0; i--)\n    \t    ans += res.charAt (i);\n    \treturn ans;\n    }\n}\n\n// Contributed By: Pranay Bansal \n",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\nclass Solution: \n    def colName (self, n):\n        # to store the result\n        res = \"\"\n        while n > 0:\n            n -= 1\n            temp = n % 26\n            res += chr (ord('A') + temp)\n            n //= 26\n         \n        # res contains the answer but in reverse       \n        res = res[::-1]\n        return res\n        \n",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": null,
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}