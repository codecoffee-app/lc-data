{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704121,
            "title": "Compute (a*b)%c",
            "titleSlug": "compute-abc5320",
            "content": "<p><span style=\"font-size: 18px;\">Given three numbers a, b and c such that a, b and c can be at most 10<sup>18</sup>. The task is to compute (a*b)%c&nbsp;</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>a = 4, b = 3, c = 5\n<strong>Output:</strong> 2\n<strong>Explanation</strong>: (4 * 3) = 12 and\n12 % 5 = 2\n</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input</strong>: a = 1000000000007,\nb = 10000000000005, c = 1000000000000003\n<strong>Output:</strong> 74970000000035\n<strong>Explanation</strong>: You can calculate it by youself.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Your Task:&nbsp;&nbsp;</strong><br />You don't need to read input or print anything. Your task is to complete the function&nbsp;<strong>mulMod()</strong>&nbsp;which takes <strong>a, b, c&nbsp;</strong>as inputs and returns the answer.<br /><br /><strong>Expected Time Complexity:</strong> O(log(min(a,b)))<br /><strong>Expected Auxiliary Space:</strong> O(log(min(a,b)))<br /><br /><strong>Constraints:</strong><br />1 &le; a, b, c &le; 10<sup>18</sup></span><br />&nbsp;</p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given three numbers a, b, and c, where each number can be at most 10<sup>18</sup>, compute (a * b) % c.  This calculation should be performed efficiently to avoid overflow issues with standard multiplication.",
                "constraints": [
                    "1 <= a, b, c <= 10<sup>18</sup>"
                ],
                "testcases": [
                    {
                        "input": "a = 4, b = 3, c = 5",
                        "output": "2",
                        "explanation": "The product of 4 and 3 is 12. When 12 is divided by 5, the remainder is 2."
                    },
                    {
                        "input": "a = 1000000000007, b = 10000000000005, c = 1000000000000003",
                        "output": "74970000000035",
                        "explanation": "The result of (1000000000007 * 10000000000005) % 1000000000000003 is 74970000000035.  This requires efficient modular multiplication techniques due to the size of the numbers."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\r\n\r\nclass Solution{   \r\npublic:\r\n\r\n    long long fun(long long a, long long b, long long c){\r\n        if (b==1)\r\n            return a;\r\n        long long k = fun(a,b/2,c);\r\n        if(b&1)\r\n            return (k+k+a)%c;\r\n        return (k+k)%c ;  \r\n    }\r\n    \r\n    long long mulMod(long long a, long long b, long long c){\r\n        a %= c, b %= c;\r\n        if (b>a){\r\n            // swap \r\n            long long t = a;\r\n            a = b;\r\n            b = t;\r\n        }\r\n        \r\n        if (b==0)  // base case\r\n            return 0;\r\n            \r\n      return fun(a,b,c);\r\n    }\r\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "class Solution:\r\n    def mulMod (self, a, b, c):\r\n        a = a%c\r\n        b = b%c\r\n        if b>a:\r\n            a,b = b,a\r\n        if b==0:\r\n            return 0;\r\n        \r\n        def fun(a,b):\r\n            if b==1:\r\n                return a\r\n            k = fun(a,b//2)\r\n            if b&1:\r\n                return (k+k+a)%c\r\n            return (k+k)%c\r\n            \r\n        return fun(a,b)    ",
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    public long mulMod(long a, long b, long c)\n    {\n        if (b == 1)\n            return a;\n        long k = mulMod(a, b / 2, c);\n        if (b % 2 == 1)\n            return ((k + k + a) % c);\n        return (k + k) % c;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}