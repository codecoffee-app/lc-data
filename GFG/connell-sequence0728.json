{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705066,
            "title": "Connell Sequence",
            "titleSlug": "connell-sequence0728",
            "content": "<p><span style=\"font-size:18px\"><strong>Connell Sequence</strong>&nbsp;is the sequence formed with the first odd number, i.e 1 as its first term. The subsequent terms of the sequence are made up of the first two even numbers, i.e 2 and 4, followed by the next three odd numbers, i.e 5, 7 and 9, followed by the next four even numbers, i.e 10, 12, 14 and 16 and so on &hellip;.&nbsp;<br />\r\nGiven an integer n, generate the first n&nbsp;terms of the Connell Sequence.</span></p>\r\n\r\n<p><br />\r\n<strong><span style=\"font-size:18px\">Example 1:</span></strong></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong> n = 6\r\n<strong>Output:</strong> 1 2 4 5 7 9\r\n<strong>Explaination:</strong> First one odd number. Then \r\ntwo even numbers. Then three odd numbers.</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong><span style=\"font-size:18px\">Example 2:</span></strong></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong> n = 2\r\n<strong>Output:</strong> 1 2\r\n<strong>Explaination:</strong> The sequence consists of first \r\nodd number then one even number.</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou do not need to read input or print anything. Your task is to complete the function <strong>connellSequence()</strong> which takes n as input parmeters and returns a list of integers containing the first n numbers of the Connell sequence.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(n)<br />\r\n<strong>Expected Auxiliary Space:</strong> O(n)</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n1 &le; n &le; 10<sup>5</sup>&nbsp;&nbsp;</span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">The sequence is first odd number, followed by next two even numbers which are followed by next three odd numbers.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "series",
                "slug": "series"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "// Back-end complete function Template for C++\n\nclass Solution{\npublic:\n    // Function to generate the Connell Sequence up to n terms\n    vector<int> connellSequence(int n){\n        int x = 1, c = 0; // Initialize variables x and c\n        vector<int> res; // Create an empty vector to store the sequence\n        for(int i = 0;i <= sqrt(2*n);i++){ // Loop through the rows of the sequence\n            for(int j = 1;j <= i+1;j++){ // Loop through the elements in each row\n                res.emplace_back(x); // Add the current element to the sequence\n                x += 2; // Increment x by 2\n                c++; // Increment the count of elements added\n                if(c == n) // If we have added n elements, break out of the loop\n                    break;\n            }\n            if(c == n) // If we have added n elements, break out of the outer loop\n                break;\n            x--; // Decrement x\n        }\n        return res; // Return the Connell sequence\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "class Solution{\n    public List<int> connellSequence(int n){\n        int x = 1, c = 0; // Initialize variables x and c\n        List<int> res = new List<int>(); // Create an empty list to store the sequence\n        for(int i = 0;i <= Math.Sqrt(2*n);i++){ // Loop through the rows of the sequence\n            for(int j = 1;j <= i+1;j++){ // Loop through the elements in each row\n                res.Add(x); // Add the current element to the sequence\n                x += 2; // Increment x by 2\n                c++; // Increment the count of elements added\n                if(c == n) // If we have added n elements, break out of the loop\n                    break;\n            }\n            if(c == n) // If we have added n elements, break out of the outer loop\n                break;\n            x--; // Decrement x\n        }\n        return res; // Return the Connell sequence\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}