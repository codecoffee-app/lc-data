{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 702777,
            "title": "Consecutive 1's not allowed",
            "titleSlug": "consecutive-1s-not-allowed1912",
            "content": "<p><span >Given a positive integer <strong>n</strong>, count all possible <strong>distinct binary strings</strong> of length <strong>n</strong> such that there are <strong>no consecutive 1&rsquo;s</strong>.</span></p>\n<p><span ><strong>Examples :</strong></span></p>\n<pre><span ><strong>Input: </strong>n = 3\n<strong>Output:</strong> 5\n<strong>Explanation: </strong>5 strings are (\"000\", \"001\", \"010\", \"100\", \"101\").\n</span></pre>\n<pre><span ><strong>Input: </strong>n = 2\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> 3 strings are (\"00\", \"01\", \"10\").<br /></span></pre>\n<pre><span ><strong>Input: </strong>n = 1\n<strong>Output:</strong> 2</span></pre>\n<p><span ><strong>Constraints:</strong><br />1 &le; n &le; 44</span></p>",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a positive integer n, determine the number of distinct binary strings of length n that do not contain consecutive 1s.",
                "constraints": [
                    "1 <= n <= 44"
                ],
                "testcases": [
                    {
                        "input": "3",
                        "output": "5",
                        "explanation": "The valid binary strings of length 3 without consecutive 1s are: \"000\", \"001\", \"010\", \"100\", \"101\"."
                    },
                    {
                        "input": "2",
                        "output": "3",
                        "explanation": "The valid binary strings of length 2 without consecutive 1s are: \"00\", \"01\", \"10\"."
                    },
                    {
                        "input": "1",
                        "output": "2",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Use dynamic programming to track the number of strings of each type by updating two arrays based on previous values.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "flipkart",
            "morgan-stanley",
            "microsoft",
            "snapdeal"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function template for C++\nclass Solution {\n\n  public:\n    // Function to count the number of strings.\n    int countStrings(int n) {\n        int a[n], b[n];\n        a[0] = b[0] = 1;\n        // Loop to calculate the number of strings.\n        for (int i = 1; i < n; i++) {\n            // Calculating a[i] and b[i] based on previous values.\n            a[i] = a[i - 1] + b[i - 1];\n            b[i] = a[i - 1];\n        }\n        // Returning the sum of a[n-1] and b[n-1].\n        return a[n - 1] + b[n - 1];\n    }\n};\n",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\nclass Solution {\n    // Function to count the number of strings of length n\n    int countStrings(int n) {\n        // Creating two arrays a and b each of length n\n        int a[] = new int[n], b[] = new int[n];\n\n        // Setting the first element of both arrays as 1\n        a[0] = b[0] = 1;\n\n        // Looping from i=1 to n-1 to calculate the elements of arrays a and b\n        for (int i = 1; i < n; i++) {\n            // Calculating value of a[i] as sum of a[i-1] and b[i-1]\n            a[i] = a[i - 1] + b[i - 1];\n\n            // Calculating value of b[i] as a[i-1]\n            b[i] = a[i - 1];\n        }\n\n        // Returning the sum of last elements of array a and b\n        return a[n - 1] + b[n - 1];\n    }\n}\n",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "# Back-end complete function Template for Python 3\nclass Solution:\n\n    # Function to count the number of strings of length n\n    def countStrings(self, n):\n        # Initialize arrays a and b\n        a = [0 for i in range(n)]\n        b = [0 for i in range(n)]\n\n        # Base case\n        a[0] = b[0] = 1\n\n        # Loop to calculate the count for each length\n        for i in range(1, n):\n            # Calculate a[i]\n            a[i] = a[i - 1] + b[i - 1]\n\n            # Calculate b[i]\n            b[i] = a[i - 1]\n\n        # Return the count of strings of length n\n        return a[n - 1] + b[n - 1]\n",
                "lang_text": "py"
            },
            {
                "lang": "C#",
                "full_func": "// User function template for C#\n\nclass Solution {\n    // Complete this function\n    public int countStrings(int n) {\n        int[] a = new int[n];\n        int[] b = new int[n];\n        a[0] = b[0] = 1;\n\n        // Loop to calculate the number of strings.\n        for (int i = 1; i < n; i++) {\n            // Calculating a[i] and b[i] based on previous values.\n            a[i] = a[i - 1] + b[i - 1];\n            b[i] = a[i - 1];\n        }\n\n        // Returning the sum of a[n-1] and b[n-1].\n        return a[n - 1] + b[n - 1];\n    }\n}\n",
                "lang_text": "csharp"
            },
            {
                "lang": "Javascript",
                "full_func": "// User function Template for JavaScript\n\nclass Solution {\n    countStrings(n) {\n        let a = new Array(n);\n        let b = new Array(n);\n        a[0] = b[0] = 1;\n        for (let i = 1; i < n; i++) {\n            a[i] = a[i - 1] + b[i - 1];\n            b[i] = a[i - 1];\n        }\n        return a[n - 1] + b[n - 1];\n    }\n}\n",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}