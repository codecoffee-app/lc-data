{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705439,
            "title": "Constructor Overloading",
            "titleSlug": "constructor-overloading",
            "content": "<p><span style=\"font-size: 18px;\">Design a class as described below.</span></p>\n<blockquote>\n<p><span style=\"font-size: 18px;\"><strong>class</strong>: <strong>User<br /></strong></span><span style=\"font-size: 18px;\"><strong>instance variable: name</strong>(String)<strong> <br />constructor:</strong> <br /><strong>First: { </strong>parameter: <strong>none,</strong> task: <strong>initialize</strong> the instance variable to <strong>\"Default\".}<br /></strong><strong>Second: { </strong>parameter: <strong>name</strong>(String)<strong>,</strong> task: <strong>initialize</strong> the instance variable</span> <span style=\"font-size: 18px;\">to the <strong>value</strong> provided in the <strong>parameter.}</strong></span></p>\n</blockquote>\n<p><span style=\"font-size: 18px;\"><strong>Example:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:  \"</strong>Geeks\"\n<strong>Output: </strong>\"Default\"\n\\t  \"Geeks\"</span></pre>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p>&nbsp;</p>\n\n<pre>\nCreate two constructor with same name as User, one will accept an argument and other will not. \nNow the blank one will initialize Default and parameterized will initialize with given argument.\n   </pre>\n\n<p>&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Java-Class and Object",
                "slug": "java-class-and-object"
            },
            {
                "name": "CPP",
                "slug": "cpp"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nclass User{\n    public:\n    string name;\n    User(){\n        name = \"Default\";\n    }\n    User(string name){\n        this->name = name;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\nclass User{\n    String name;\n    User(){\n        name = \"Default\";\n    }\n    User(String name){\n        this.name = name;\n    }\n}",
                "lang_text": "java"
            }
        ],
        "platform": "GFG"
    }
}