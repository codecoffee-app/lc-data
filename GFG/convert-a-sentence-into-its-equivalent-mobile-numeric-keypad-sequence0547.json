{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 702975,
            "title": "Convert a sentence into its equivalent mobile numeric keypad sequence",
            "titleSlug": "convert-a-sentence-into-its-equivalent-mobile-numeric-keypad-sequence0547",
            "content": "<p><span style=\"font-size:20px\">Given a sentence in the form of a string in uppercase, convert it into its equivalent mobile numeric keypad sequence. Please note there might be spaces in between the words in a sentence and we can print spaces by pressing 0.</span></p>\r\n\r\n<p><img alt=\"\" src=\"https://contribute.geeksforgeeks.org/wp-content/uploads/Phone.png\" style=\"height:375px; width:275px\" /></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong>\r\nS = &quot;GFG&quot;\r\n<strong>Output:</strong> 43334\r\n<strong>Explanation</strong>: For &#39;G&#39; press &#39;4&#39; one time.\r\nFor &#39;F&#39; press &#39;3&#39; three times.</span>\r\n</pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong>\r\nS = &quot;HEY U&quot;\r\n<strong>Output:</strong> 4433999088\r\n<strong>Explanation</strong>: For &#39;H&#39; press &#39;4&#39; two times.\r\nFor &#39;E&#39; press &#39;3&#39; two times. For &#39;Y&#39; press &#39;9&#39; \r\nthree times. For white space press &#39;0&#39; one time.\r\nFor &#39;U&#39; press &#39;8&#39; two times.</span>\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task: &nbsp;</strong><br />\r\nYou dont need to read input or print anything. Complete the function&nbsp;<strong>printSequence()</strong>&nbsp;which takes a string as input parameter and returns </span><span style=\"font-size:20px\">its equivalent mobile numeric keypad sequence as a string.</span><br />\r\n&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong>&nbsp;O(Length of String)<br />\r\n<strong>Expected Auxiliary Space:&nbsp;</strong>O(Length of String)</span><br />\r\n&nbsp;</p>\r\n\r\n<p><strong><span style=\"font-size:18px\">Constraints:</span></strong></p>\r\n\r\n<p><span style=\"font-size:18px\">1 &lt;= Length of String &lt;= 10<sup>5</sup></span><br />\r\n<span style=\"font-size:18px\">Characters of string can be empty space or capital alphabets.</span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an uppercase sentence string, convert it to its corresponding mobile numeric keypad sequence. Spaces between words should be represented by '0'. Refer to the standard mobile keypad mapping of letters to numbers.",
                "constraints": [
                    "1 <= Length of String <= 10^5",
                    "String can contain empty spaces or uppercase alphabets."
                ],
                "testcases": [
                    {
                        "input": "GFG",
                        "output": "43334",
                        "explanation": "G corresponds to 4 (one press). F corresponds to 3 (three presses)."
                    },
                    {
                        "input": "HEY U",
                        "output": "4433999088",
                        "explanation": "H corresponds to 4 (two presses). E corresponds to 3 (two presses). Y corresponds to 9 (three presses). Space corresponds to 0. U corresponds to 8 (two presses)."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>You can store digits in a string for a particular Letter.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Hash",
                "slug": "hash"
            },
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "// Function which computes the sequence\r\nstring printSequence(string input)\r\n{\r\n    \r\n    \t// storing the sequence in array\r\n\tstring arr[] = {\"2\",\"22\",\"222\",\r\n\t\t\t\t\t\"3\",\"33\",\"333\",\r\n\t\t\t\t\t\"4\",\"44\",\"444\",\r\n\t\t\t\t\t\"5\",\"55\",\"555\",\r\n\t\t\t\t\t\"6\",\"66\",\"666\",\r\n\t\t\t\t\t\"7\",\"77\",\"777\",\"7777\",\r\n\t\t\t\t\t\"8\",\"88\",\"888\",\r\n\t\t\t\t\t\"9\",\"99\",\"999\",\"9999\"\r\n\t\t\t\t};\r\n    \r\n\tstring output = \"\";\r\n\r\n\t// length of input string\r\n\tint n = input.length();\r\n\tfor (int i=0; i<n; i++)\r\n\t{\r\n\t\t// Checking for space\r\n\t\tif (input[i] == ' ')\r\n\t\t\toutput = output + \"0\";\r\n\r\n\t\telse\r\n\t\t{\r\n\t\t\t// Calculating index for each \r\n\t\t\t// character\r\n\t\t\tint position = input[i]-'A';\r\n\t\t\toutput = output + arr[position];\r\n\t\t}\r\n\t}\r\n\r\n\t// Output sequence\r\n\treturn output;\r\n}",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}