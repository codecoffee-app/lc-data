{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703187,
            "title": "Convert an array to reduced form",
            "titleSlug": "convert-an-array-to-reduced-form1101",
            "content": "<p><span style=\"font-size:18px\">Given an array with <strong>N</strong>&nbsp;distinct elements, convert the given array to a reduced form where all elements are in range from <strong>0</strong> to <strong>N-1</strong>. The order of elements is same, i.e., <strong>0</strong> is placed in place of smallest element, <strong>1</strong> is placed for second smallest element, and&nbsp;<strong>N-1</strong> is placed for the largest element.</span></p>\r\n\r\n<p><strong><span style=\"font-size:18px\">Note:&nbsp;</span></strong><span style=\"font-size:18px\">You don&#39;t have to return anything. You just have to change the given array.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:\r\n</strong>N = 3\r\nArr[] = {10, 40, 20}\r\n<strong>Output: </strong>0 2 1\r\n<strong>Explanation:</strong> 10 is the least element so it\r\nis replaced by 0. 40 is the largest\r\nelement so it is replaced by 3-1 = 2. And\r\n20 is the 2nd smallest element so it is\r\nreplaced by 1.\r\n</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:\r\n</strong>N = 5\r\nArr[] = {5, 10, 40, 30, 20}\r\n<strong>Output:</strong> 0 1 4 3 2\r\n<strong>Explanation:</strong>&nbsp;As 5 is smallest element,\r\nit&#39;s replaced by 0. Then 10 is 2nd\r\nsmallest element, so it&#39;s replaced by 1.\r\nThen 20 is 3rd smallest element, so it&#39;s\r\nreplaced by 2. And so on.\r\n</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou don&#39;t need to read input or print anything. Your task is to complete the function&nbsp;<strong>convert()</strong>&nbsp;which takes the&nbsp;array of&nbsp;integers&nbsp;<strong>arr&nbsp;</strong>and&nbsp;<strong>n&nbsp;</strong>as parameters and makes changes in the given array.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong>&nbsp;O(N*logN)<br />\r\n<strong>Expected Auxiliary Space:</strong>&nbsp;O(N)</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n1 &le; N &le; 10<sup>5</sup><br />\r\n1 &le; Arr[i] &le; 10<sup>6</sup></span></p>\r\n\r\n<p>&nbsp;</p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p>The idea is to create a vector of pairs. Every element of pair contains element and index. We sort vector by array values. After sorting, we copy indexes to original array.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function template for C++\r\n\r\nclass Solution{\r\npublic:\r\n\t// Converts arr[0..n-1] to reduced form.\r\n\tvoid convert(int arr[], int n) {\r\n\t    // A vector of pairs. Every element of\r\n\t    // pair contains array element and its\r\n\t    // index\r\n\t    vector<pair<int, int>> v;\r\n\r\n\t    // Put all elements and their index in\r\n\t    // the vector\r\n\t    for (int i = 0; i < n; i++) v.emplace_back(arr[i], i);\r\n\r\n\t    // Sort the vector by array values\r\n\t    sort(v.begin(), v.end());\r\n\r\n\t    // Put indexes of modified vector in arr[]\r\n\t    for (int i = 0; i < n; i++) arr[v[i].second] = i;\r\n\t}\r\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution {\r\n    void convert(int[] arr, int n) {\r\n        int temp[] = arr.clone();\r\n \r\n        // Sort temp array\r\n        Arrays.sort(temp);\r\n \r\n        // Create a hash table.\r\n        HashMap<Integer, Integer> umap = new HashMap<>();\r\n \r\n        // One by one insert elements of sorted\r\n        // temp[] and assign them values from 0\r\n        // to n-1\r\n        int val = 0;\r\n        for (int i = 0; i < n; i++)\r\n            umap.put(temp[i], val++);\r\n \r\n        // Convert array by taking positions from\r\n        // umap\r\n        for (int i = 0; i < n; i++)\r\n            arr[i] = umap.get(arr[i]);\r\n    }\r\n}\r\n\r\n\r\n",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "class Solution:\n\n\t# Function to convert the array to a list of tuples with element and index.\n\tdef convert(self,arr, n):\n\t\tv=[]\n\t\tfor i in range(n):\n\t\t    v.append((arr[i],i))\n\t\tv.sort()\n\t\tfor i in range(n):\n\t\t    arr[v[i][1]]=i\n",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n/**\n * @param {number[]} arr\n * @param {number} n\n * @returns {number[]}\n*/\n\nclass Solution {\n    //Function to convert the array to a list of tuples with element and index, then sort and rank the elements.\n    convert(arr, n)\n    {\n        //your code here\n        let v = arr.map((val, idx) => [val, idx]);\n        v.sort((a, b) => a[0] - b[0]);\n        for (let i = 0; i < n; ++i) {\n            arr[v[i][1]] = i;\n        }\n    }\n}",
                "lang_text": "javascript"
            },
            {
                "lang": "C#",
                "full_func": "//User function template for C#\npublic class Solution\n{\n    // Converts arr[0..n-1] to reduced form.\n    public void convert(int[] arr, int n)\n    {\n        // A list of tuples. Every element of\n        // tuple contains array element and its\n        // index\n        List<(int, int)> v = new List<(int, int)>();\n\n        // Put all elements and their index in\n        // the list\n        for (int i = 0; i < n; i++) v.Add((arr[i], i));\n\n        // Sort the list by array values\n        v.Sort();\n\n        // Put indexes of modified list in arr[]\n        for (int i = 0; i < n; i++) arr[v[i].Item2] = i;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}