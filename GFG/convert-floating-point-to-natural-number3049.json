{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705131,
            "title": "Convert floating point to natural number",
            "titleSlug": "convert-floating-point-to-natural-number3049",
            "content": "<p><span style=\"font-size:18px\">Given a positive floating point number N, the task is to find the smallest integer k, such that when we multiply k with N, we get a natural number.</span><br />\n&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input: </strong>N = &quot;30.25&quot;\n<strong>Output: </strong>4\n<strong>Explanation: </strong>30.25 * 4 = 321, there is no \nnumber less than 4 which can convert 30.25\ninto natural number.</span>\n</pre>\n\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input: </strong>N = &quot;5.5&quot;\n<strong>Output: </strong>2\n<strong>Explanation: </strong>5.5 * 2 = 11, there is no number\nless than 2 which can convert 5.5 into \nnatural number.</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nYou don&#39;&nbsp;need to read or print anything. Your task is to complete the function&nbsp;<strong>findMinMultiple()&nbsp;</strong>which takes N as input parameter in string format and returns the minimum k such that when we multiply it with N we get a natural number.</span><br />\n&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong>O(c) where c is constant<br />\n<strong>Expected Space Compelxity:&nbsp;</strong>O(1)</span><br />\n&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\n1 &lt;= N &lt;= 1000</span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a positive floating-point number N (as a string), find the smallest positive integer k such that N * k results in a natural number (a positive integer).",
                "constraints": [
                    "1 <= N <= 1000"
                ],
                "testcases": [
                    {
                        "input": "30.25",
                        "output": "4",
                        "explanation": "Multiplying 30.25 by 4 yields 121, which is a natural number. No integer smaller than 4 will produce a natural number when multiplied by 30.25."
                    },
                    {
                        "input": "5.5",
                        "output": "2",
                        "explanation": "Multiplying 5.5 by 2 yields 11, which is a natural number. No integer smaller than 2 will produce a natural number when multiplied by 5.5."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Use gcd concept.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function template in C++\n\nclass Solution{\n    public:\n    // Function to find the minimum multiple of N\n    int findMinMultiple(string N){\n        int cnt = 1;\n        int n = 0;\n        bool f = false;\n        \n        // Loop through the characters of the string N\n        for(int i = 0; i < N.size(); i++){\n            if(N[i] != '.'){\n                // Convert the character to an integer and add it to n\n                n = n*10 + (N[i] - '0');\n                \n                // Multiply cnt by 10 if the decimal point has been reached\n                if(f){\n                    cnt*=10;\n                }\n            }\n            else f = true; // Set f to true when the decimal point is reached\n        }\n        \n        // Return the minimum multiple of N\n        return cnt / __gcd(cnt, n);\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    public int findMinMultiple(string N)\n    {\n        int cnt = 1;\n        int n = 0;\n        bool f = false;\n        \n        // Loop through the characters of the string N\n        for(int i = 0; i < N.Length; i++){\n            if(N[i] != '.'){\n                // Convert the character to an integer and add it to n\n                n = n*10 + (N[i] - '0');\n                \n                // Multiply cnt by 10 if the decimal point has been reached\n                if(f){\n                    cnt*=10;\n                }\n            }\n            else f = true; // Set f to true when the decimal point is reached\n        }\n        \n        // Return the minimum multiple of N\n        return cnt / GCD(cnt, n);\n    }\n    \n    // Function to find the greatest common divisor of two numbers\n    private int GCD(int a, int b)\n    {\n        if(b == 0)\n            return a;\n        else\n            return GCD(b, a % b);\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}