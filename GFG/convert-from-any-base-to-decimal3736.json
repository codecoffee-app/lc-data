{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704782,
            "title": "Convert from any base to decimal",
            "titleSlug": "convert-from-any-base-to-decimal3736",
            "content": "<p><span style=\"font-size:18px\">Given a number <strong>N</strong> and its base <strong>b</strong>, convert it to decimal. The base of number can be anything such that all digits can be represented using 0 to 9 and A to Z. Value of A is 10, value of B is 11 and so on.</span></p>\r\n\r\n<p><strong><span style=\"font-size:18px\">Example 1:</span></strong></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong> b = 2, N = 1100\r\n<strong>Output:</strong> 12\r\n<strong>Explaination:</strong> It is a binary number whose \r\ndecimal equivalent is 12.</span></pre>\r\n\r\n<p><strong><span style=\"font-size:18px\">Example 2:</span></strong></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong> b = 16, N = A\r\n<strong>Output:</strong> 10\r\n<strong>Explaination:</strong> It&#39;s a hexadecimal number whose \r\ndecimal equivalent is 10.</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou do not need to read input or print anything. Your task is to complete the function <strong>decimalEquivalent()</strong> which takes N and b as input parameters and returns their decimal equivalent. Otherwise return -1 if N is not possible.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong>&nbsp;O(|N|)&nbsp; &nbsp;[|N| means the length of the number N]<br />\r\n<strong>Expected Auxiliary Space:</strong> O(1)</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n1 &le; b &le; 16<br />\r\n1 &le; N &lt; decimal equivalent 10<sup>9</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a number N represented in base b, convert it to its decimal equivalent. The base b can range from 2 to 16, where digits 0-9 represent their usual values and A-F represent 10-15 respectively. If the given number N is not a valid number in base b return -1",
                "constraints": [
                    "1 <= b <= 16",
                    "1 <= N < decimal equivalent 10^9 (inferred, as N represents a number whose decimal value does not exceed 10^9)"
                ],
                "testcases": [
                    {
                        "input": "b = 2, N = 1100",
                        "output": "12",
                        "explanation": "The binary number 1100 is equivalent to (1 * 2^3) + (1 * 2^2) + (0 * 2^1) + (0 * 2^0) = 8 + 4 + 0 + 0 = 12 in decimal."
                    },
                    {
                        "input": "b = 16, N = A",
                        "output": "10",
                        "explanation": "The hexadecimal number A represents the decimal value 10."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Raising to the power of base changes the number.&nbsp;</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "adobe"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "// Back-end complete function Template for C++\n\nclass Solution{\npublic:\n    // Function to return the decimal equivalent of a number in a given base\n    int val(char c){\n        if (c >= '0' && c <= '9')\n            return (int)c - '0';\n        else\n            return (int)c - 'A' + 10;\n    }\n    \n    int decimalEquivalent(string N, int b){\n        int len = N.size();\n        int power = 1, num = 0, i;\n        for(i = len - 1;i >= 0;i--){\n            // Checking if the digit is valid in the given base\n            if(val(N[i]) >= b)\n                return -1;\n            // Calculating the decimal equivalent\n            num += val(N[i])*power;\n            power *= b;\n        }\n        return num;\n    }\n};\n",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    public int decimalEquivalent(string N, int b)\n    {\n        int len = N.Length;\n        int power = 1, num = 0, i;\n        for(i = len - 1;i >= 0;i--){\n            // Checking if the digit is valid in the given base\n            if(val(N[i]) >= b)\n                return -1;\n            // Calculating the decimal equivalent\n            num += val(N[i])*power;\n            power *= b;\n        }\n        return num;\n    }\n    \n    private int val(char c){\n        if (c >= '0' && c <= '9')\n            return (int)c - '0';\n        else\n            return (int)c - 'A' + 10;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}