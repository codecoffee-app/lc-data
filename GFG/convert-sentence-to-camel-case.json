{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 880675,
            "title": "Convert Sentence to Camel Case",
            "titleSlug": "convert-sentence-to-camel-case",
            "content": "<p><span >Given a sentence <strong><code>s</code></strong>, your task is to remove all spaces and convert it to <strong>Camel Case</strong>.&nbsp;</span><span >In Camel Case, words are joined without spaces, the first word keeps its original case, and each subsequent word starts with an uppercase letter.</span></p>\n<p><span ><strong>Note:</strong> It is guaranteed that the sample test cases don't contain leading spaces.</span></p>\n<p><span ><strong>Examples:</strong></span></p>\n<pre><span ><strong>Input: </strong>s = \"i got intern at geeksforgeeks\"</span><br /><span ><strong>Output: </strong>\"iGotInternAtGeeksforgeeks\"<br /><strong>Explanation: </strong>All spaces are removed and each word starts with a capital letter, except the first word which retains its original capitalization.</span></pre>\n<pre><span ><strong>Input: </strong>s = \"here comes the garden\"<br /><strong>Output: </strong>\"hereComesTheGarden\"<strong><br /></strong><strong>Explanation: </strong>Spaces are removed and each word after the first is capitalized.</span></pre>\n<pre><span ><strong>Input: </strong>s = \"coding is fun\"<br /><strong>Output: </strong>\"codingIsFun\"<strong><br /></strong><strong>Explanation: </strong>Spaces are removed, the first word retains its original case, and each subsequent word starts with a capital letter.</span></pre>\n<p><span ><strong>Constraints:<br /></strong>1 &lt;= s.size() &lt;= 10<sup>6</sup></span></p>\n<p><span >The string <strong>s&nbsp;</strong>contains only lowercase english alphabets and spaces.</span></p>",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a sentence `s`, your task is to remove all spaces and convert it to Camel Case. In Camel Case, words are joined without spaces. The first word retains its original case, while each subsequent word starts with an uppercase letter.",
                "constraints": [
                    "1 <= s.size() <= 10^6",
                    "The string s contains only lowercase English alphabets and spaces."
                ],
                "testcases": [
                    {
                        "input": "i got intern at geeksforgeeks",
                        "output": "iGotInternAtGeeksforgeeks",
                        "explanation": "All spaces are removed. Every word after the first is capitalized, while the first word remains in its original case."
                    },
                    {
                        "input": "here comes the garden",
                        "output": "hereComesTheGarden",
                        "explanation": "Spaces are removed and each word after the first is capitalized."
                    },
                    {
                        "input": "coding is fun",
                        "output": "codingIsFun",
                        "explanation": "Spaces are removed, the first word remains lowercase, and each subsequent word starts with a capital letter."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span >Remove spaces, capitalize each word after the first, and concatenate them to form a CamelCase string.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nclass Solution {\n  public:\n    // Function to convert the given string to Camel Case\n    string convertToCamelCase(string& s) {\n        int n = s.length(); // Get the length of the input string\n        int res_ind = 0;    // Index to keep track of the position for the result string\n\n        // Loop through each character in the input string\n        for (int i = 0; i < n; i++) {\n\n            // If the current character is a space\n            if (s[i] == ' ') {\n                // Convert the next character to uppercase\n                s[i + 1] = toupper(s[i + 1]);\n                continue; // Skip the space\n            }\n\n            // If not a space, copy the character to the result position\n            else {\n                s[res_ind++] = s[i];\n            }\n        }\n\n        // Return the modified string up to the result index (res_ind)\n        return s.substr(0, res_ind);\n    }\n};\n",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\nclass Solution {\n    // Function to convert the given string to Camel Case\n    public String convertToCamelCase(String s) {\n        StringBuilder result = new StringBuilder(); // To build the resulting string\n        boolean capitalizeNext =\n            false; // Flag to indicate if the next character should be capitalized\n\n        // Loop through each character in the input string\n        for (int i = 0; i < s.length(); i++) {\n            char ch = s.charAt(i); // Get the current character\n\n            if (ch == ' ') {           // If the current character is a space\n                capitalizeNext = true; // Set the flag to capitalize the next word\n            } else {\n                if (capitalizeNext) {\n                    // Capitalize the current character and add it to the result\n                    result.append(Character.toUpperCase(ch));\n                    capitalizeNext = false; // Reset the flag\n                } else {\n                    // Add the current character as is (first word stays in original\n                    // case)\n                    result.append(ch);\n                }\n            }\n        }\n\n        // Return the final result as a string\n        return result.toString();\n    }\n}\n",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\nclass Solution:\n    # Function to convert the given string to Camel Case\n    def convertToCamelCase(self, s):\n        result = []  # To build the resulting string\n        capitalize_next = False  # Flag to indicate if the next character should be capitalized\n\n        # Loop through each character in the input string\n        for ch in s:\n            if ch == ' ':  # If the current character is a space\n                capitalize_next = True  # Set the flag to capitalize the next word\n            else:\n                if capitalize_next:\n                    # Capitalize the current character and append it\n                    result.append(ch.upper())\n                    capitalize_next = False  # Reset the flag\n                else:\n                    # Append the current character as is (first word stays in original case)\n                    result.append(ch)\n\n        # Join the list into a string and return\n        return ''.join(result)",
                "lang_text": "py"
            },
            {
                "lang": "Javascript",
                "full_func": "class Solution {\n    // Function to convert the given string to Camel Case\n    convertToCamelCase(s) {\n        let result = []; // To build the resulting string\n        let capitalize_next =\n            false; // Flag to indicate if the next character should be capitalized\n\n        // Loop through each character in the input string\n        for (let i = 0; i < s.length; i++) {\n            let ch = s[i];\n            if (ch === ' ') {           // If the current character is a space\n                capitalize_next = true; // Set the flag to capitalize the next word\n            } else {\n                if (capitalize_next) {\n                    // Capitalize the current character and append it\n                    result.push(ch.toUpperCase());\n                    capitalize_next = false; // Reset the flag\n                } else {\n                    // Append the current character as is (first word stays in original\n                    // case)\n                    result.push(ch);\n                }\n            }\n        }\n\n        // Join the list into a string and return\n        return result.join('');\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}