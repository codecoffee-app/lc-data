{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703031,
            "title": "Convert the string",
            "titleSlug": "convert-the-string1022",
            "content": "<p><span style=\"font-size:18px\">Given string&nbsp;str, transform it according to the following rules:<br />\nDelete all the vowels from the string.<br />\nInsert # in front of all the consonants.<br />\nChange the case of all the letters of the string.&nbsp;</span></p>\n\n<p><strong><span style=\"font-size:18px\">Example 1:</span></strong></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\nstr = aBAcAba\n<strong>Output:</strong> #b#C#B\n<strong>Explanation:</strong> Vowels at position 0,2,4,6 are deleted.\n&#39;#&#39; is added before consonants at position 1,3,5 \nand their case is changed.</span></pre>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Your Task: &nbsp;</strong><br />\nYou don&#39;t need to read input or print anything. Complete the function<strong> transform() </strong>which takes the string str as an input parameter and returns the transformed string. If the resulting string is empty return &quot;-1&quot;.</span></p>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(N) where N is the length of str.<br />\n<strong>Expected Auxiliary Space: </strong>O(N) &nbsp;</span></p>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Constraints:</strong><br />\n1&lt;= str.length()&nbsp;&lt;= 10<sup>4</sup></span></p>\n\n<p>&nbsp;</p>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string `str`, transform it according to the following rules:\n\n1.  Remove all vowels from the string.\n2.  Insert '#' before each consonant.\n3.  Invert the case of all remaining letters (uppercase to lowercase and vice-versa).",
                "constraints": [
                    "1 <= str.length() <= 10^4"
                ],
                "testcases": [
                    {
                        "input": "aBAcAba",
                        "output": "#b#C#B",
                        "explanation": "Vowels 'a', 'A', 'a', and 'a' are removed. '#' is added before consonants 'B', 'C', and 'B'.  The case of 'B' is changed to 'b', 'C' to 'C', and 'B' to 'B'."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Check if the character is a vowel or not.<br />\nIf it is a vowel ignore, otherwise insert # into resultant string.<br />\nThen check the case of the consonant character, change it and then insert to result string.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "bool isVowel(char a)\n{\n    //checking if the character is a vowel\n    if(a=='a'||a=='e'||a=='i'||a=='o'||a=='u'||\n        a=='A'||a=='E'||a=='I'||a=='O'||a=='U')\n        return true;\n    else\n        return false;\n}\nstring transform (string str)\n{   \n    bool flag;\n    string result;\n\n    //iterating over the characters of the string\n    for(int i=0; i < str.length(); i++)\n    {   \n        flag = 0;\n        //checking if the character is a vowel\n        if(isVowel(str[i]))\n            flag = 1;\n        //if not a vowel, adding '#' and changing case if necessary\n        if(!flag)\n        {\n            result += '#';\n            if(str[i] >= 'A' && str[i] <= 'Z')\n                result += (str[i]+32);\n            else\n                result += (str[i]-32);\n        }\n    }\n    //if no characters were transformed, returning \"-1\"\n    if(result.size() == 0)\n        return (\"-1\");\n    else\n        return result;\n}",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "// Back-end complete function Template for Java\nclass Solution \n{ \n    // Function to check if a character is a vowel\n    boolean isVowel(char a)\n    {\n        if(a=='a'||a=='e'||a=='i'||a=='o'||a=='u'||\n            a=='A'||a=='E'||a=='I'||a=='O'||a=='U')\n            return true;\n        else\n            return false;\n    }\n\n    // Function to transform a string\n    String transform(String Str) \n    {\n        String result=\"\";\n\n        // Iterate through each character in the string\n        for(int i=0;i<Str.length();i++)\n        {\n            char ch=Str.charAt(i);\n            \n            // Check if the character is a vowel\n            if(isVowel(ch))\n                continue;\n\n            // Append \"#\" to the result string\n            result+=\"#\";\n\n            // Convert the character to lowercase if it is uppercase, or to uppercase if it is lowercase\n            if(ch >= 'A' && ch <= 'Z')\n                result += (char)(ch+32);\n            else\n                result += (char)(ch-32);\n        }\n\n        // If the result string is empty, return \"-1\"\n        if(result.length()==0)\n            return \"-1\";\n\n        // Return the result string\n        return result;\n    }\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}