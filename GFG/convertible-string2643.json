{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703593,
            "title": "Convertible string",
            "titleSlug": "convertible-string2643",
            "content": "<p><span style=\"font-size:18px\">Given two strings check whether first string could be converted to the second string but the conditions are:</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>1.</strong>If the character is at odd place you can swap this character with the characters only at the odd places in &nbsp; &nbsp;the given first string.<br />\r\n<strong>2.</strong>If the character is at even place you can swap this character with the characters only at the even places &nbsp; &nbsp; &nbsp;in the given first string.<br />\r\n<strong>3.</strong>You cannot insert or delete any character on your own.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input: </strong>geeks for</span>\r\n\r\n<span style=\"font-size:18px\"><strong>Output: </strong>0</span>\r\n\r\n<span style=\"font-size:18px\"><strong>Explanation: </strong>Two strings are of\r\ndifferent length. They can&#39;t be equal.</span>\r\n</pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input: </strong>skeeg geeks</span>\r\n\r\n<span style=\"font-size:18px\"><strong>Output: </strong>1</span>\r\n\r\n<span style=\"font-size:18px\"><strong>Explanation:</strong></span>\r\n\r\n<span style=\"font-size:18px\">In first string characters at odd indices are \r\n&#39;s&#39;, &#39;e&#39;, &#39;g&#39;</span>\r\n<span style=\"font-size:18px\">In second string characters at odd indices are </span>\r\n<span style=\"font-size:18px\">&#39;g&#39;, &#39;e&#39;, &#39;s&#39;</span>\r\n<span style=\"font-size:18px\">After swaping index 1st and 3rd of first\r\nstring all the characters at odd positions \r\nbecome equal.</span>\r\n<span style=\"font-size:18px\">Same for even indices.</span>\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong></span></p>\r\n\r\n<p><span style=\"font-size:18px\">You don&#39;t need to read or print anything. Your task is to complete the function<strong> EqualString()&nbsp;</strong>which takes first string as first parameter and second string as second parameter&nbsp;and returns 1 if first string can be made equal to the second string otherwise returns 0.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:&nbsp;</strong>O(n)</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Space Complexity:&nbsp;</strong>O(K) where K is constant.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong></span></p>\r\n\r\n<p><span style=\"font-size:18px\">1 &lt;= length of both strings &lt;= 1000</span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two strings, determine if the first string can be converted into the second string by swapping characters according to the following rules:\n\n1.  Characters at odd indices in the first string can only be swapped with other characters at odd indices.\n2.  Characters at even indices in the first string can only be swapped with other characters at even indices.\n3.  No insertion or deletion of characters is allowed.\n\nReturn 1 if the first string can be converted to the second string, otherwise return 0.",
                "constraints": [
                    "1 <= length of both strings <= 1000"
                ],
                "testcases": [
                    {
                        "input": "geeks for",
                        "output": "0",
                        "explanation": "The strings have different lengths, so the conversion is impossible."
                    },
                    {
                        "input": "skeeg geeks",
                        "output": "1",
                        "explanation": "The characters at odd indices ('s', 'e', 'g') in the first string can be rearranged to match the characters at odd indices ('g', 'e', 's') in the second string. Similarly, the characters at even indices ('k', ' ') in the first string can be rearranged to match the characters at even indices ('e', 'k') in the second string."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Try to make equal of odd-odd and even-even.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [
            "bidgely"
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "\r\nclass Solution\r\n{\r\n\tpublic:\r\n\t\tint EqualString(string s, string t)\r\n\t\t{\r\n\t\t\tvector<int> odd(26, 0), even(26, 0);\r\n\t\t\tfor(int i = 0; i < s.size(); i++)\r\n\t\t\t{\r\n\t\t\t\tif(i&1)\r\n\t\t\t\t{\r\n\t\t\t\t\t// count the fequencies of the character occured at odd indices in s. \r\n\t\t\t\t\todd[s[i] - 'a']++;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\t// count the fequencies of the character occured at even indices in s. \r\n\t\t\t\t\teven[s[i] - 'a']++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor(int i = 0; i < t.size(); i++)\r\n\t\t\t{\r\n\t\t\t\tif(i&1)\r\n\t\t\t\t{\r\n\t\t\t\t\t// decrease the fequencies of the character occured at odd indices in t. \r\n\t\t\t\t\todd[t[i] - 'a']--;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{// decrease the fequencies of the character occured at even indices in t.\r\n\t\t\t\t\teven[t[i] - 'a']--;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor(int i = 0; i < 26; i++)\r\n\t\t\t{\r\n\t\t\t\t// If any frequencies remains that means s and t  can't be equal.\r\n\t\t\t\tif(odd[i] or even[i])\r\n\t\t\t\t\treturn 0;\r\n\t\t\t}\r\n\t\t\treturn 1;\r\n\t\t}\r\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}