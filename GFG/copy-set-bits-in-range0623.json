{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703882,
            "title": "Copy Set Bits in Range",
            "titleSlug": "copy-set-bits-in-range0623",
            "content": "<p><span style=\"font-size: 18px;\">Given two numbers <strong>X</strong> and <strong>Y</strong>, and a range [<strong>L</strong>, <strong>R</strong>] where 1 &lt;= L &lt;= R &lt;= 32. You have to copy the set bits of <strong>'Y'</strong> in the range L to R in<strong> 'X'.</strong>&nbsp;Return this modified X.</span></p>\n<p><span style=\"font-size: 18px;\">Note: Range count will be from Right to Left &amp; start from 1.</span></p>\n<p><strong><span style=\"font-size: 18px;\">Example 1:</span></strong></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong> \nX = 44, Y = 3 \nL = 1,  R = 5\n<strong>Output:</strong> <br />47\n<strong>Explaination:</strong> <br />Binary represenation of 44 and 3 is 1011<span style=\"text-decoration: underline;\">00</span> and 0000<strong>11</strong>. So in the range 1 to 5 there are two set bits of 3 (1st &amp; 2nd position). If those are set in 44 it will become 1011<span style=\"text-decoration: underline;\"><strong>11</strong></span> which is 47.</span></pre>\n<p><strong><span style=\"font-size: 18px;\">Example 2:</span></strong></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong> \nX = 16, Y = 2\nL = 1,  R = 3\n<strong>Output:</strong> 18\n<strong>Explaination:</strong> Binary represenation of 16 and 2 is 100<span style=\"text-decoration: underline;\">00</span> and <strong>10</strong>. If the mentioned conditions are applied then 16 will become 100<span style=\"text-decoration: underline;\"><strong>10</strong></span> which is 18.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Your Task:</strong><br />You do not need to read input or print anything. Your task is to complete the function <strong>setSetBit()</strong> which takes the numbers X, Y, L and R as input parameters and returns the modified value of X.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong> O(R - L)<br /><strong>Expected Auxiliary Space:</strong> O(1)</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &le; X, Y &le; 10<sup>9</sup><br />1 &le; L &le; R &le; 32</span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two numbers X and Y, and a range [L, R] where 1 <= L <= R <= 32. Copy the set bits of Y in the range L to R into X. Return the modified X.\n\nNote: Range count is from Right to Left and starts from 1.",
                "constraints": [
                    "1 <= X, Y <= 10^9",
                    "1 <= L <= R <= 32"
                ],
                "testcases": [
                    {
                        "input": "X = 44, Y = 3, L = 1, R = 5",
                        "output": "47",
                        "explanation": "The binary representation of 44 is 101100 and the binary representation of 3 is 000011.  We need to copy the bits of Y from position 1 to 5 into X.  The relevant bits of Y are '11'. Setting these bits in X (101100) results in 101111, which is 47."
                    },
                    {
                        "input": "X = 16, Y = 2, L = 1, R = 3",
                        "output": "18",
                        "explanation": "The binary representation of 16 is 10000 and the binary representation of 2 is 10. We need to copy the bits of Y from position 1 to 3 into X. The relevant bits of Y are '10'. Setting these bits in X (10000) results in 10010, which is 18."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size: 14pt;\">We can think of using Bit Masking here to solve the problem.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Bit Magic",
                "slug": "bit-magic"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [
            "d-e-shaw",
            "adobe"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "// Back-end complete function Template for C++\nclass Solution{\n    public:\n    // Function to set the bits in x at positions given by the set bits in y from l to r\n    int setSetBit(int x, int y, int l, int r){\n        // Initialize m as x\n        int m = x;\n        // Iterate from l to r\n        for(int i = l;i <= r;i++){\n            // Check if the i-th bit in y is set\n            if(y & (1 << (i-1) ) )\n                // Set the i-th bit in m\n                m |= (1 << (i-1));\n        }\n        // Return the modified x\n        return m;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution{\n    static int setSetBit(int x, int y, int l, int r){\n        int m = x;    //initialize m as x\n        for(int i = l;i <= r;i++){    //iterate from l to r\n            if((y & (1 << (i-1)) )>0 )    //check if the bit at position i is set in y\n                m |= (1 << (i-1));    //set the bit at position i in m\n        }\n        return m;    //return the updated value of m\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "class Solution:\n    def setSetBit(self, x, y, l, r):\n        # create a variable m to store the updated value of x\n        m = x\n        \n        # iterate from l to r\n        for i in range(l,r+1):\n            # check if the ith bit is set in y\n            if y & (1 << (i-1)):\n                # if so, set the ith bit in m\n                m = m | (1<<(i-1))\n        \n        # return the updated value of m\n        return m;",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\r\n/**\r\n * @param {number} x\r\n * @param {number} y\r\n * @param {number} l\r\n * @param {number} r\r\n * @returns {number}\r\n*/\r\n\r\nclass Solution {\r\n    //Function to set kth bit of given number.\r\n    setSetBit(x, y, l, r)\r\n    {\r\n        // create a variable m to store the updated value of x\r\n        let m = x;\r\n        \r\n        // iterate from l to r\r\n        for (let i = l; i <= r; i++) {\r\n            // check if the ith bit is set in y\r\n            if (y & (1 << (i-1))) {\r\n                // if so, set the ith bit in m\r\n                m = m | (1<<(i-1));\r\n            }\r\n        }\r\n        \r\n        // return the updated value of m\r\n        return m;\r\n    }\r\n}",
                "lang_text": "javascript"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    public int setSetBit(int x, int y, int l, int r)\n    {\n        // Initialize m as x\n        int m = x;\n        // Iterate from l to r\n        for(int i = l;i <= r;i++){\n            // Check if the i-th bit in y is set\n            if((y & (1 << (i-1))) != 0 )\n                // Set the i-th bit in m\n                m |= (1 << (i-1));\n        }\n        // Return the modified x\n        return m;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}