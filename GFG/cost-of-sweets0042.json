{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705608,
            "title": "Cost of Sweets",
            "titleSlug": "cost-of-sweets0042",
            "content": "<p><span style=\"font-size:18px\">Jeny love Sweets&nbsp;so much. Now she is at famous restaurant and wants to eat <strong>M</strong>&nbsp;pieces of a particular&nbsp;sweet. Cost of <strong>nth</strong>&nbsp;sweet&nbsp;can only be determined by the determinant of matrix of order&nbsp;<strong>n</strong><strong>&nbsp;x n, </strong>where n&nbsp;=&nbsp;1 to M. The (i, j)th term of matrix is given as<strong>: A[i][j]= minimum(i, j) *(-1)<sup>((i-1)*n + (j-1))</sup>.</strong><br />\r\nMatrix indexes starts with 1. The task is to&nbsp;find the cost of M sweets.</span><br />\r\n<br />\r\n<span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input</strong>: M = 1\r\n<strong>Output:</strong>&nbsp;1&nbsp;\r\n<strong>Explanation</strong>: Matrix of 1*1 is: |1|.\r\nDeterminant of matrix 1x1 = 1.\r\nCost of 1 sweet&nbsp;= 1.</span><span style=\"font-size:18px\">\r\n</span>\r\n</pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input: </strong>M = 2\r\n<strong>Output:&nbsp;</strong>0\r\n<strong>Explanation</strong>: Matrix of 2*2 is: &nbsp;|1 -1|\r\n&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;     |1 -2|.\r\nDeterminant of matrix 2x2= -1.\r\nCost of 2 sweets&nbsp; = \r\nCost of 1st sweet&nbsp;+ Cost of 2nd sweet&nbsp;= 1 + -1 = 0.</span>\r\n</pre>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Your Task:&nbsp;&nbsp;</strong><br />\r\nYou dont need to read input or print anything. Complete the function <strong>costOfSweets()&nbsp;</strong>which takes M&nbsp;as input parameter and returns the cost of M sweets.<br />\r\n<br />\r\n<strong>Expected Time Complexity:</strong> O(1)<br />\r\n<strong>Expected Auxiliary Space:</strong> O(1)<br />\r\n<br />\r\n<strong>Constraints:</strong><br />\r\n1&lt;= M &lt;=10<sup>6</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Jeny loves sweets and wants to eat M pieces of a particular sweet at a famous restaurant. The cost of the nth sweet is determined by the determinant of an n x n matrix, where n ranges from 1 to M. The element at position (i, j) in the matrix is calculated as: A[i][j] = min(i, j) * (-1)^((i-1)*n + (j-1)). Matrix indices start from 1. Calculate the total cost of M sweets.",
                "constraints": [
                    "1 <= M <= 10^6"
                ],
                "testcases": [
                    {
                        "input": "1",
                        "output": "1",
                        "explanation": "For M = 1, the matrix is a 1x1 matrix: |1|. The determinant is 1. The cost of 1 sweet is 1."
                    },
                    {
                        "input": "2",
                        "output": "0",
                        "explanation": "For M = 2, the matrix is a 2x2 matrix: |1 -1| |1 -2|. The determinant is (1 * -2) - (-1 * 1) = -2 + 1 = -1. The cost of the first sweet is 1 (from M=1). The cost of the second sweet is -1 (from M=2). Total cost is 1 + (-1) = 0."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Use math.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\r\nclass Solution {\r\n  public:\r\n    int costOfSweets(int M){\r\n        if(M%4==0)return M/2;\r\n        else if(M%4==1)return(M+1)/2;\r\n        else if(M%4==2)return (M-2)/2;\r\n        else return M/2;\r\n    }\r\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\nclass Solution\n{\n    //Complete this function\n    //Function to find the sum of elements present at even and odd index.\n    public int costOfSweets(int M)\n    {\n        if(M%4==0) return M/2;\n        else if(M%4==1) return (M+1)/2;\n        else if(M%4==2) return (M-2)/2;\n        else return M/2;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}