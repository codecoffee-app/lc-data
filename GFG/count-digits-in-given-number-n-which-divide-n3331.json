{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703825,
            "title": "Count digits in given number N which divide N",
            "titleSlug": "count-digits-in-given-number-n-which-divide-n3331",
            "content": "<p><span style=\"font-size:18px\">Given a number S(in the form of a string). Count all the digits in S&nbsp;which divide S. Divisibility by 0 is not allowed. If any digit in S&nbsp;which is repeated divides S, then all repetitions of that digit should be counted.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong>\r\nS = &quot;35&quot;\r\n<strong>Output:</strong>\r\n1\r\n<strong>Explanation:</strong>\r\nOnly 5 digits 35,thus the answer is 1.</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong>\r\nS = &quot;1122324&quot;\r\n<strong>Output:</strong>\r\n7\r\n<strong>Explanation:</strong>\r\nAll the digits divide 1122324, therefore,\r\nthe answer is 7.</span></pre>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou don&#39;t need to read input or print anything.Your task is to complete the function <strong>divisibleByDigits()</strong>&nbsp; which takes the number S(in the form of a string) as input parameter and returns the number of digits of S that divide S.</span></p>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(N)<br />\r\n<strong>Expected Auxillary S</strong></span><span style=\"font-size:18px\"><strong>pace:</strong> O(constant)</span></p>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n1&lt;=|S|&lt;=10<sup>6</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a number S (in the form of a string), count all the digits in S which divide S. Division by 0 is not allowed. If a digit is repeated and divides S, count all instances of that digit.",
                "constraints": [
                    "1 <= |S| <= 10^6"
                ],
                "testcases": [
                    {
                        "input": "35",
                        "output": "1",
                        "explanation": "Only the digit 5 divides 35, so the answer is 1."
                    },
                    {
                        "input": "1122324",
                        "output": "7",
                        "explanation": "All digits in 1122324 divide 1122324, so the answer is 7."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">A number X is divisible by another number Y if X%Y==0.Similarly the sum of two numbers X and Z are divisible by Y iff (X+Z)%Y==0 i.e ((X%Y)+(Z%Y))%Y==0.</span></p>",
            "<p><span style=\"font-size:18px\">18 is divisible by 3 as ((1%3)*10+8)%3==0</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "// Backend Complete function template for C++\r\n\r\nclass Solution {\r\n  public:\r\n    bool divisible(string S, int digit) {\r\n        int ans = 0;\r\n        for (int i = 0; i < S.length(); i++) {\r\n            // (S[i]-'0') gives the digit value and\r\n            // form the number\r\n            ans = (ans * 10 + (S[i] - '0'));\r\n            ans %= digit;\r\n        }\r\n        return (ans == 0);\r\n    }\r\n    // Function to count digits which appears in N and\r\n    // divide S\r\n    // divide[10]  --> array which tells that particular\r\n    //                 digit divides S or not\r\n    // count[10]   --> counts frequency of digits which\r\n    //                 divide S\r\n    int divisibleByDigits(string S) {\r\n        // We initialize all digits of N as not divisble\r\n        // by S.\r\n        bool divide[10] = {false};\r\n        divide[1] = true; // 1 divides all numbers\r\n\r\n        // start checking divisibilty of S by digits 2 to 9\r\n        for (int digit = 2; digit <= 9; digit++) {\r\n            // if digit divides S then mark it as true\r\n            if (divisible(S, digit)) divide[digit] = true;\r\n        }\r\n\r\n        // Now traverse the number string to find and increment\r\n        // result whenever a digit divides S.\r\n        int result = 0;\r\n        for (int i = 0; i < S.length(); i++) {\r\n            if (divide[S[i] - '0'] == true) result++;\r\n        }\r\n\r\n        return result;\r\n    }\r\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "// Back-end complete function Template for Java\r\n\r\nclass Solution {\r\n    boolean divisible(String S, int digit) {\r\n        int ans = 0;\r\n        for (int i = 0; i < S.length(); i++) {\r\n            ans = (ans * 10 + (int)(S.charAt(i) - '0'));\r\n            ans %= digit;\r\n        }\r\n        return (ans == 0);\r\n    }\r\n    // Function to count digits which appears in S and\r\n    // divide S\r\n    // divide[10]  --> array which tells that particular\r\n    //                 digit divides S or not\r\n    // count[10]   --> counts frequency of digits which\r\n    //                 divide S\r\n    int divisibleByDigits(String S) {\r\n        boolean divide[] = new boolean[10];\r\n        divide[1] = true; // 1 divides all numbers\r\n\r\n        // start checking divisibilty of S by digits 2 to 9\r\n        for (int digit = 2; digit <= 9; digit++) {\r\n            // if digit divides S then mark it as true\r\n            if (divisible(S, digit))\r\n                divide[digit] = true;\r\n            else\r\n                divide[digit] = false;\r\n        }\r\n\r\n        // Now traverse the number string to find and increment\r\n        // result whenever a digit divides S.\r\n        int result = 0;\r\n        for (int i = 0; i < S.length(); i++) {\r\n            if (divide[(int)(S.charAt(i) - '0')] == true) result++;\r\n        }\r\n\r\n        return result;\r\n    }\r\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "#Back-end complete function Template for Python 3\n\nclass Solution:\n    #Function to check if a number is divisible by the given digit.\n    def divisible(self,S,digit):\n        ans=0\n        #iterating over each digit in the number.\n        for i in S:\n            #converting the digit to integer and adding it to ans.\n            ans=(ans*10)+(int)(i)\n            #calculating the remainder when ans is divided by digit.\n            ans%=digit\n        #returning True if ans is 0 (divisible by digit), else False.\n        return (ans==0)    \n    #Function to find the count of digits in the number that are divisible by their own value.\n    def divisibleByDigits(ob,S):\n        #creating a list to store whether each digit is divisible or not.\n        divide=[]\n        #appending False for index 0 and True for index 1, as 0 and 1 are always divisible by themselves.\n        divide.append(False)\n        divide.append(True)\n        #iterating from 2 to 9 (all possible single digits).\n        for i in range(2,10):\n            #checking if the number is divisible by the digit i.\n            if(ob.divisible(S,i)):\n                #appending True if divisible, else False.\n                divide.append(True)\n            else:\n                divide.append(False)\n        #initializing the result as 0.\n        result=0\n        #iterating over each digit in the number.\n        for i in S:\n            #checking if the digit is divisible by itself using divide list.\n            if(divide[(int)(i)]):\n                #if divisible, incrementing the result.\n                result+=1\n        #returning the final result.\n        return result",
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}