{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703897,
            "title": "Count Digits",
            "titleSlug": "count-digits5716",
            "content": "<p><span >Given a positive integer <strong><code>n</code></strong>, count the number of digits in <code>n</code> that divide <code>n</code> evenly (i.e., without leaving a remainder). Return the total number of such digits.</span></p>\n<blockquote>\n<p><span >A digit <code>d</code> of <code>n</code> divides <code>n</code> evenly if the remainder when <code>n</code> is divided by <code>d</code> is 0 (<code>n % d == 0</code>).</span><br /><span >Digits of <code>n</code> should be checked individually. If a digit is 0, it should be ignored because division by 0 is undefined.</span></p>\n</blockquote>\n<p><span ><strong>Examples :</strong></span></p>\n<pre><span ><strong>Input: </strong>n = 12<strong>\nOutput: </strong>2<strong>\nExplanation: </strong>1, 2 when both divide 12 leaves remainder 0.<br /></span></pre>\n<pre><span ><strong>Input: </strong>n = 2446<strong>\nOutput: </strong>1<strong>\nExplanation: </strong>Here among 2, 4, 6 only 2 divides 2446 evenly while 4 and 6 do not.</span></pre>\n<pre><span ><strong>Input: </strong>n = 23<strong>\nOutput: </strong>0<strong>\nExplanation: </strong>2 and 3, none of them divide 23 evenly.\n</span></pre>\n<p><span ><strong>Constraints:</strong><br />1&lt;= n &lt;=10<sup>5</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a positive integer `n`, determine the number of digits in `n` that evenly divide `n`. A digit `d` divides `n` evenly if `n % d == 0`.  Ignore any digit that is 0 as division by zero is undefined. Count each valid digit individually.",
                "constraints": [
                    "1 <= n <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "12",
                        "output": "2",
                        "explanation": "The digits of 12 are 1 and 2. 12 % 1 == 0 and 12 % 2 == 0. Therefore, both 1 and 2 divide 12 evenly."
                    },
                    {
                        "input": "2446",
                        "output": "1",
                        "explanation": "The digits of 2446 are 2, 4, 4, and 6. 2446 % 2 == 0, 2446 % 4 != 0, and 2446 % 6 != 0. Therefore, only 2 divides 2446 evenly."
                    },
                    {
                        "input": "23",
                        "output": "0",
                        "explanation": "The digits of 23 are 2 and 3. 23 % 2 != 0 and 23 % 3 != 0. Therefore, neither 2 nor 3 divides 23 evenly."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span >You get the last digit of a number n by doing mod 10 of n.</span></p>",
            "<p><span >Check each digit of n, ignore zeros, and count how many divide n evenly (n % digit == 0).</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Modular Arithmetic",
                "slug": "modular-arithmetic"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    // Function to count the number of digits in n that evenly divide n\n    int evenlyDivides(int n) {\n        int temp = n, count = 0;\n        while (temp != 0) {\n            // extract the last digit\n            int d = temp % 10;\n            temp /= 10;\n\n            // check if d divides n completely and is not zero\n            if (d > 0 && n % d == 0)\n                count++;\n        }\n\n        return count;\n    }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\nclass Solution {\n    static int evenlyDivides(int n) {\n        int temp = n, count = 0;\n        while (temp != 0) {\n            // extract the last digit\n            int d = temp % 10;\n            temp /= 10;\n\n            // check if n divides d completely\n            if (d > 0 && n % d == 0) count++;\n        }\n\n        return count;\n    }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\n\nclass Solution:\n\n    def evenlyDivides(self, n):\n        temp = n\n        count = 0\n        while temp != 0:\n            # extract the last digit\n            d = temp % 10\n            temp = temp // 10\n            # check if d divides n evenly\n            if d > 0 and n % d == 0:\n                count += 1\n\n        return count\n",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "/**\n * @param {number} n\n * @returns {number}\n */\n\nclass Solution {\n    // Function to check whether the number evenly divides n.\n    evenlyDivides(n) {\n        let temp = n;\n        let count = 0;\n        while (temp != 0) {\n            // extract the last digit\n            let d = temp % 10;\n            temp = Math.floor(temp / 10);\n            // check if d divides n evenly\n            if (d > 0 && n % d == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n}\n",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}