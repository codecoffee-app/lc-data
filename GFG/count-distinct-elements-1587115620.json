{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 701285,
            "title": "Count Non-Repeated Elements",
            "titleSlug": "count-distinct-elements-1587115620",
            "content": "<p><span style=\"font-size: 18px;\">You are given an array of integers <strong>arr[]</strong>. You need to print the count of non-repeated elements in the array.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr[] = [1, 1, 2, 2, 3, 3, 4, 5, 6, 7]\n<strong>Output: </strong>4<strong>\nExplanation: </strong>4, 5, 6 and 7 are the elements with frequency 1 and rest elements are repeated so the number of non-repeated elements are 4.</span>\n</pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr[] = [10, 20, 30, 40, 10]\n<strong>Output: </strong>3<strong>\nExplanation: </strong>20, 30, 40 are the elements with the frequency 1<strong> </strong>and 10 is the repeated element to number of non-repeated elements are 3.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &lt;= arr.size() &lt;= 10<sup>3</sup><br />0 &lt;= arr<sub>i </sub>&lt;= 10<sup>7</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of integers, find the count of elements that appear only once in the array.",
                "constraints": [
                    "1 <= arr.size() <= 10^3",
                    "0 <= arr[i] <= 10^7"
                ],
                "testcases": [
                    {
                        "input": "[1, 1, 2, 2, 3, 3, 4, 5, 6, 7]",
                        "output": "4",
                        "explanation": "The elements 4, 5, 6, and 7 each appear only once in the array. Therefore, the count of non-repeated elements is 4."
                    },
                    {
                        "input": "[10, 20, 30, 40, 10]",
                        "output": "3",
                        "explanation": "The elements 20, 30, and 40 each appear only once in the array. The element 10 appears twice. Therefore, the count of non-repeated elements is 3."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "",
            ""
        ],
        "relatedTopics": [
            {
                "name": "Hash",
                "slug": "hash"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "\n\nclass Solution {\n  public:\n    // Function to return the count of non-repeated elements in the array.\n    int countNonRepeated(vector<int>& arr) {\n        int n = arr.size();\n        // using map to store frequency of each element.\n        unordered_map<int, int> mp;\n        long long counter = 0;\n\n        // storing the frequency of each element in map.\n        for (int i = 0; i < n; i++) {\n            mp[arr[i]]++;\n        }\n\n        // iterating over the array elements.\n        for (int i = 0; i < n; i++) {\n            // if frequency of current element in map is 1,\n            // then we increment the counter.\n            if (mp[arr[i]] == 1) {\n                counter++;\n            }\n        }\n        // returning the count of non-repeated elements.\n        return counter;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\nclass Solution {\n    // Function to return the count of non-repeated elements in the array.\n    static int countNonRepeated(int arr[]) {\n        // using map to store frequency of each element.\n        Map<Integer, Integer> m = new HashMap<>();\n        int n = arr.length;\n        // storing the frequency of each element in map.\n        for (int i = 0; i < n; i++) {\n            if (m.containsKey(arr[i])) {\n                m.put(arr[i], m.get(arr[i]) + 1);\n            } else {\n                m.put(arr[i], 1);\n            }\n        }\n        int count = 0;\n\n        // iterating over the array elements.\n        for (int i = 0; i < n; i++)\n\n            // if frequency of current element in map is 1,\n            // then we increment the counter.\n            if (m.get(arr[i]) == 1) count++;\n\n        // returning the count of non-repeated elements.\n        return count;\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\nclass Solution:\n\n    #Function to return the count of non-repeated elements in the array.\n    def countNonRepeated(self, arr):\n        dict = {}\n        n = len(arr)\n        for i in arr:\n            dict[i] = 0\n\n        #storing the frequency of each element.\n        for i in arr:\n            dict[i] += 1\n        counter = 0\n\n        #iterating over the array elements.\n        for i in arr:\n\n            #if frequency of current element is 1,\n            #then we increment the counter.\n            if dict[i] == 1:\n                counter += 1\n\n        #returning the count of non-repeated elements.\n        return counter\n",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "//Back-end complete function Template for javascript\n\n/**\n * @param {number[]} arr\n * @returns {number}\n */\n\nclass Solution {\n    // Function to return the count of non-repeated elements in the array.\n    countNonRepeated(arr) {\n        // using map to store frequency of each element.\n        let mp = new Map();\n        let counter = 0;\n        let n = arr.length;\n        for (let i = 0; i < n; i++) {\n            mp.set(arr[i], 0);\n        }\n\n        // storing the frequency of each element in map.\n        for (let i = 0; i < n; i++) {\n            mp.set(arr[i], mp.get(arr[i]) + 1);\n        }\n\n        // iterating over the array elements.\n        for (let i = 0; i < n; i++) {\n            // if frequency of current element in map is 1,\n            // then we increment the counter.\n            if (mp.get(arr[i]) == 1) {\n                counter++;\n            }\n        }\n        // returning the count of non-repeated elements.\n        return counter;\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}