{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 702991,
            "title": "Count number of equal pairs in a string",
            "titleSlug": "count-number-of-equal-pairs-in-a-string0520",
            "content": "<p><span style=\"font-size:18px\">Given a string, find the number of pairs of characters that are same. Pairs (s[i], s[j]), (s[j], s[i]), (s[i], s[i]), (s[j], s[j]) should be considered different.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\nS = &quot;air&quot;\n<strong>Output:</strong> 3\n<strong>Explanation</strong>: 3 pairs that are equal:\n(S[0], S[0]), (S[1], S[1]) and (S[2], S[2])\n</span></pre>\n\n<p><span style=\"font-size:18px\">\u00e2\u20ac\u2039<strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input</strong>: \nS = &quot;aa&quot;\n<strong>Output:</strong> 4\n<strong>Explanation</strong>: 4 pairs that are equal:\n(S[0], S[0]), (S[0], S[1]), (S[1], S[0])\nand (S[1], S[1])</span>\n</pre>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nYou don&#39;t need to read input or print anything. Your task is to complete the function&nbsp;<strong>equalPairs()&nbsp;</strong>which takes the string S as input and returns the number of equal pairs as described in the problem description.</span></p>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Expected Time Complexity:&nbsp;</strong>O(|S|).<br />\n<strong>Expected Auxiliary Space:&nbsp;</strong>O(1).</span></p>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Constraints:</strong><br />\n1&lt;=|S|&lt;=10<sup>5</sup></span></p>\n\n<p>&nbsp;</p>\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string, determine the total number of character pairs (s[i], s[j]) within the string where s[i] is equal to s[j]. Note that (s[i], s[j]), (s[j], s[i]), (s[i], s[i]), and (s[j], s[j]) should all be considered as distinct pairs.",
                "constraints": [
                    "1 <= |S| <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "air",
                        "output": "3",
                        "explanation": "The equal pairs are: (S[0], S[0]), (S[1], S[1]), and (S[2], S[2])."
                    },
                    {
                        "input": "aa",
                        "output": "4",
                        "explanation": "The equal pairs are: (S[0], S[0]), (S[0], S[1]), (S[1], S[0]), and (S[1], S[1])."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">With 2 same characters at&nbsp;2 different indices, we can make 4 equal pairs.<br />\nWith 3 same characters at 3 different indices, we can make 9 equal pairs.</span></p>\n\n<p><span style=\"font-size:18px\">Do you see a pattern?</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function template in C++\n\nclass Solution\n{\n  public:\n    //Function to count the number of equal pairs in a string.\n    long long int equalPairs(string s)\n    {\n      //array to store the frequency of each character in the string.\n      long long int freq[256] = {0};\n      \n      //iterating over the string to count the frequency of each character.\n      for (int i = 0; i < s.length(); ++i)\n        freq[(int)s[i]]++;\n    \n      //variable to store the count of equal pairs.\n      long long int res = 0;\n    \n      //iterating over the frequency array.\n      for (int i = 0; i < 256; ++i)\n        //calculating the count of equal pairs by multiplying the frequency\n        //of a character with itself.\n        res += freq[i] * freq[i];\n    \n      //returning the count of equal pairs.\n      return res;\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\nclass Sol\n{\n    //function to count the number of equal pairs in a string\n    long equalPairs (String s)\n    {\n    \t//array to store the frequency of characters\n    \tlong[] freq = new long[256];\n    \t\n    \t//counting the frequency of each character in the string\n    \tfor (int i = 0; i < s.length (); ++i)\n    \t\tfreq[(int)s.charAt(i)]++;\n    \n    \tlong res = 0;\n    \n    \t//calculating the number of equal pairs\n    \tfor (int i = 0; i < 256; ++i)\n    \t\tres += freq[i] * freq[i];\n    \n    \t//returning the total number of equal pairs\n    \treturn res;\n    }\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\nclass Solution:\n    #Function to find the number of equal pairs.\n    def equalPairs (self,s):\n        #initializing a frequency list with zeros.\n        freq = [0 for i in range (256)]\n        \n        #iterating over the given string and updating the frequency.\n        for i in s:\n            freq[ord(i)] += 1\n        \n        res = 0\n        #iterating over the frequency list and calculating the number of pairs.\n        for i in range (256):\n            res += freq[i]*freq[i]\n            \n        #returning the number of equal pairs.\n        return res",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n/**\n * @param {string} s\n * @returns {number}\n*/\n\nclass Solution\n{\n    //Function to count the number of equal pairs in a string.\n    equalPairs(s)\n    {\n        //initializing a frequency list with zeros.\n        let freq = new Array(256).fill(0);\n        \n        //iterating over the given string and updating the frequency.\n        for(let i=0; i<s.length; i++){\n            freq[s.charCodeAt(i)] += 1;\n        }\n        \n        let res = 0;\n        //iterating over the frequency list and calculating the number of pairs.\n        for(let i=0; i<256; i++){\n            res += freq[i]*freq[i];\n        }\n            \n        //returning the number of equal pairs.\n        return res;\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}