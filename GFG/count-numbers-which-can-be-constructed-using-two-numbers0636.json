{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704546,
            "title": "Count numbers which can be constructed using two numbers",
            "titleSlug": "count-numbers-which-can-be-constructed-using-two-numbers0636",
            "content": "<p><span style=\"font-size:18px\">Given three positive integers <strong>x</strong>, <strong>y</strong> and <strong>n</strong>, the task is to find count of all numbers from 1 to n that can be formed using x and y. A number can be formed using x and y if we can get it by adding any number of occurrences of x and/or y.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\r\n<span style=\"font-size:18px\"><strong>x = </strong>2, <strong>y = </strong>3, <strong>n = </strong>10</span>\r\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\r\n<span style=\"font-size:18px\">9</span>\r\n<span style=\"font-size:18px\"><strong>Explanation:</strong></span>\r\n<span style=\"font-size:18px\">We can form 9 out of 10 numbers using\r\n2 and 3 and 10; 2 = 2, 3 = 3, 4 = 2+2,\r\n5 = 2+3, 6 = 3+3 7 = 2+2+3, 8 = 3+3+2,\r\n9 = 3+3+3 , 10 = 3+3+2+2.</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\r\n<span style=\"font-size:18px\"><strong>x = </strong>5, <strong>y = </strong>7, <strong>n = </strong>10</span>\r\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\r\n<span style=\"font-size:18px\">3</span>\r\n<span style=\"font-size:18px\"><strong>Explanation:</strong></span>\r\n<span style=\"font-size:18px\">We can form 3 out of 10 numbers using\r\n5 and 7 and 10; 5 = 5, 7 = 7, 5+5 = 10.</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>getCount()</strong> which takes 3 Integers x,y and n respctively as input and returns the answer.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(n)<br />\r\n<strong>Expected Auxiliary Space:</strong> O(n)</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong></span><br />\r\n<span style=\"font-size:18px\">1 &lt;= x,y,n &lt;= 10<sup>5</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given three positive integers x, y, and n, determine the number of integers from 1 to n (inclusive) that can be expressed as a sum of non-negative multiples of x and y. In other words, count how many numbers in the range [1, n] can be written in the form ax + by, where a and b are non-negative integers.",
                "constraints": [
                    "1 <= x, y, n <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "x = 2, y = 3, n = 10",
                        "output": "9",
                        "explanation": "The numbers 2, 3, 4, 5, 6, 7, 8, 9, and 10 can be formed as combinations of 2 and 3:  2 = 2, 3 = 3, 4 = 2+2, 5 = 2+3, 6 = 3+3, 7 = 2+2+3, 8 = 3+3+2, 9 = 3+3+3, 10 = 3+3+2+2. Only 1 cannot be formed."
                    },
                    {
                        "input": "x = 5, y = 7, n = 10",
                        "output": "3",
                        "explanation": "The numbers 5, 7, and 10 can be formed: 5 = 5, 7 = 7, 10 = 5+5."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">An <strong>efficient solution</strong> solution is to use a boolean array arr[] of size n+1. An entry arr[i] = true is going to mean that i can be formed using x and y. </span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "\r\n\r\nclass Solution {\r\n  public:\r\n    int getCount(int x, int y, int n) {\r\n        \r\n        // Create an array and initialize it \r\n        // as false. An entry arr[i] = true is going to \r\n        // mean that i can be formed using x and y\r\n        bool arr[n+1] = {false};\r\n     \r\n        // x and y can be formed using x and y.\r\n        if (x <= n)\r\n            arr[x] = true;\r\n        if (y <= n)\r\n            arr[y] = true;\r\n     \r\n        // Initialize result\r\n        int result = 0;\r\n     \r\n        // Traverse all numbers and increment\r\n        // result if a number can be formed using\r\n        // x and y.\r\n        for (int i=min(x, y); i<=n; i++)\r\n        {\r\n            // If i can be formed using x and y\r\n            if (arr[i])\r\n            { \r\n                // Then i+x and i+y can also be formed\r\n                // using x and y.               \r\n                if (i+x <= n)\r\n                    arr[i+x] = true;\r\n                if (i+y <= n)\r\n                    arr[i+y] = true;\r\n     \r\n                // Increment result \r\n                result++;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\r\n\r\nclass Solution {\r\n    static int getCount(int x, int y, int n) {\r\n        \r\n        // Create an array and initialize it \r\n        // as false. An entry arr[i] = true is going to \r\n        // mean that i can be formed using x and y\r\n        boolean[] arr = new boolean[n+1];\r\n     \r\n        // x and y can be formed using x and y.\r\n        if (x <= n)\r\n            arr[x] = true;\r\n        if (y <= n)\r\n            arr[y] = true;\r\n     \r\n        // Initialize result\r\n        int result = 0;\r\n     \r\n        // Traverse all numbers and increment\r\n        // result if a number can be formed using\r\n        // x and y.\r\n        for (int i=Math.min(x, y); i<=n; i++)\r\n        {\r\n            // If i can be formed using x and y\r\n            if (arr[i])\r\n            { \r\n                // Then i+x and i+y can also be formed\r\n                // using x and y.               \r\n                if (i+x <= n)\r\n                    arr[i+x] = true;\r\n                if (i+y <= n)\r\n                    arr[i+y] = true;\r\n     \r\n                // Increment result \r\n                result++;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n};",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}