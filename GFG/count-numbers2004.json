{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704032,
            "title": "Count numbers",
            "titleSlug": "count-numbers2004",
            "content": "<p><span style=\"font-size:18px\">Given a number N, count the numbers from 1 to N that don&rsquo;t contain digit 3 in their decimal representation.</span><br />\n&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\nN = 5\n<strong>Output:</strong>\n4\n<strong>Explanation:</strong>\nFrom 1 - 5, only 3 contains\n3 in its decimal representation\nso output is 4</span>\n</pre>\n\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\nN = 25\n<strong>Output:</strong>\n22\n<strong>Explanation:</strong>\nIn between 1 to 25,\n3,13,23 contain 3 in their\ndecimal representaion so \noutput is 25 - 3 = 22</span>\n</pre>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>count()</strong>&nbsp;which takes&nbsp;an integer <strong>N</strong>&nbsp;as input parameter&nbsp;and returns an integer, the total count of numbers&nbsp;from 1 to N that don&rsquo;t contain digit 3 in their decimal representation.</span><br />\n&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(log N)<br />\n<strong>Expected Space Complexity:</strong> O(1)</span><br />\n&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\n0 &lt;= N &lt;= 500</span></p>\n\n<p>&nbsp;</p>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a number N, count the numbers from 1 to N (inclusive) that do not contain the digit '3' in their decimal representation.",
                "constraints": [
                    "0 <= N <= 500"
                ],
                "testcases": [
                    {
                        "input": "5",
                        "output": "4",
                        "explanation": "The numbers from 1 to 5 that do not contain the digit '3' are 1, 2, 4, and 5.  Therefore, the count is 4."
                    },
                    {
                        "input": "25",
                        "output": "22",
                        "explanation": "The numbers from 1 to 25 that contain the digit '3' are 3, 13, and 23. There are 3 such numbers. Therefore, the count of numbers that do *not* contain the digit '3' is 25 - 3 = 22."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Use recursion.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution{\npublic:\n    int count(int N)\n    {\n         // Base cases (Assuming N is not negative)  \n        if (N < 3)  \n            return N;  \n        if (N >= 3 && N < 10)  \n            return N-1;  \n      \n        // Calculate 10^(d-1) (10 raise to the power d-1) where d is  \n        // number of digits in N. po will be 100 for N = 578  \n        int po = 1;  \n        while (N/po > 9)  \n            po = po*10;  \n      \n        // find the most significant digit (msd is 5 for 578)  \n        int msd = N/po;  \n      \n        if (msd != 3)  \n            // For 578, total will be 4*count(10^2 - 1) + 4 + count(78)  \n            return count(msd)*count(po - 1) + count(msd) + count(N%po);  \n        else\n            // For 35, total will be equal to count(29)  \n            return count(msd*po - 1);\n    }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\nclass Solution{\n    static long count(int N)        \n    {\n        // Base cases (Assuming N is not negative) \n        if (N < 3) \n            return N; \n        if (N >= 3 && N < 10) \n            return N-1; \n   \n        // Calculate 10^(d-1) (10 raise to the power d-1) where d is \n        // number of digits in N. po will be 100 for N = 578 \n        int po = 1; \n        while (N/po > 9) \n            po = po*10; \n   \n        // find the most significant digit (msd is 5 for 578) \n        int msd = N/po; \n   \n        if (msd != 3) \n            // For 578, total will be 4*count(10^2 - 1) + 4 + count(78) \n            return count(msd)*count(po - 1) + count(msd) + count(N%po); \n        else\n            // For 35, total will be equal to count(29) \n            return count(msd*po - 1); \n    }\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}