{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703215,
            "title": "Count of substrings containing K ones",
            "titleSlug": "count-of-substrings-containing-k-ones2304",
            "content": "<p><span style=\"font-size: 20px;\">Given a binary string <strong>S</strong> and an integer <strong>K</strong>, the task is to count the number of substrings that contain exactly K ones.</span></p>\n<p><strong><span style=\"font-size: 18px;\">Example 1:</span></strong></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input :</strong> S = 10010, K = 1\n<strong>Output :</strong> 9\n<strong>Explanation:</strong> The 9 substrings containing \none 1 are, 1, 10, 100, 001, 01,\n1, 10, 0010 and 010.</span>\n</pre>\n<p><strong><span style=\"font-size: 18px;\">Example 2:</span></strong></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input :</strong> S = 111, K = 2 \n<strong>Output :</strong> 2 \n<strong>Explanation:</strong> The 2 substrings containing\ntwo 1 are 11, 11.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Your Task:&nbsp;&nbsp;</strong><br />You don't need to read input or print anything. Your task is to complete the function&nbsp;<strong>countOfSubstringWithKOnes()</strong>&nbsp;which takes the string <strong>S</strong> and an integer <strong>K&nbsp;</strong>as inputs and <strong>returns</strong> the count.<br /><br /><strong>Expected Time Complexity:</strong>&nbsp;O(|S|)<br /><strong>Expected Auxiliary Space:</strong>&nbsp;O(|S|)<br /><br /><strong>Constraints:</strong><br />1 &le; N &le; 10<sup>5</sup><br />0 &le; K &le; 10<sup>4</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a binary string `S` and an integer `K`, determine the number of substrings within `S` that contain exactly `K` ones.",
                "constraints": [
                    "1 \u2264 N \u2264 10^5",
                    "0 \u2264 K \u2264 10^4"
                ],
                "testcases": [
                    {
                        "input": "S = 10010, K = 1",
                        "output": "9",
                        "explanation": "The substrings with exactly one '1' are: '1', '10', '100', '001', '01', '1', '10', '0010', and '010'."
                    },
                    {
                        "input": "S = 111, K = 2",
                        "output": "2",
                        "explanation": "The substrings with exactly two '1's are: '11' and '11'."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Use frequency array to keep track number of substring till now occurred with exactly K one&#39;s.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Hash",
                "slug": "hash"
            },
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "\r\nclass Solution {\r\n    public:\r\n    \r\n    long long int countOfSubstringWithKOnes(string s, int K){\r\n        int N = s.length();\r\n        long long int res = 0;\r\n        int countOfOne = 0;\r\n        int freq[N + 1];\r\n        memset(freq,0,sizeof(freq));    \r\n        freq[0] = 1;\r\n        for (int i = 0; i < N; i++) {\r\n            countOfOne += (s[i] - '0');\r\n            if (countOfOne >= K) {\r\n                res += freq[countOfOne - K];\r\n            }\r\n            freq[countOfOne]++;\r\n        }\r\n        return res;\r\n    }\r\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    //Function to count number of substrings with exactly K ones\n    public long countOfSubstringWithKOnes(string S, int K)\n    {\n        int N = S.Length;\n        long res = 0;\n        int countOfOne = 0;\n        int[] freq = new int[N + 1];\n        Array.Fill(freq, 0);    \n        freq[0] = 1;\n        \n        for (int i = 0; i < N; i++) \n        {\n            countOfOne += (S[i] - '0');\n            \n            if (countOfOne >= K) \n            {\n                res += freq[countOfOne - K];\n            }\n            \n            freq[countOfOne]++;\n        }\n        \n        return res;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}