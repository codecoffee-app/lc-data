{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704548,
            "title": "Count of sum of consecutives",
            "titleSlug": "count-of-sum-of-consecutives3741",
            "content": "<p><span style=\"font-size:18px\">Given a number <strong>N</strong>, the task is find the number of ways to represent this number as a sum of 2 or more consecutive natural numbers.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\r\n<span style=\"font-size:18px\"><strong>N = </strong>10</span>\r\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\r\n<span style=\"font-size:18px\">1</span>\r\n<span style=\"font-size:18px\"><strong>Explanation:</strong></span>\r\n<span style=\"font-size:18px\">10 can be reprsented as sum of two or\r\nmore consecutive numbers in only one\r\nway. 10 = 1+2+3+4.</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\r\n<span style=\"font-size:18px\"><strong>N = </strong>15</span>\r\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\r\n<span style=\"font-size:18px\">3</span>\r\n<span style=\"font-size:18px\"><strong>Explanation:</strong></span>\r\n<span style=\"font-size:18px\">15 can be reprsented as sum of two or\r\nmore consecutive numbers in 3 ways.\r\n(15 = 1+2+3+4+5); (15 = 4+5+6); (15 = 7+8).</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>getCount()</strong> which takes an Integer n as input and returns the answer.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(sqrt(N))<br />\r\n<strong>Expected Auxiliary Space:</strong> O(1)</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong></span><br />\r\n<span style=\"font-size:18px\">1 &lt;= N &lt;= 10<sup>8</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a positive integer N, determine the number of ways to express N as the sum of two or more consecutive natural numbers.",
                "constraints": [
                    "1 <= N <= 10^8"
                ],
                "testcases": [
                    {
                        "input": "10",
                        "output": "1",
                        "explanation": "The number 10 can be represented as the sum of consecutive natural numbers in one way: 1 + 2 + 3 + 4 = 10."
                    },
                    {
                        "input": "15",
                        "output": "3",
                        "explanation": "The number 15 can be represented as the sum of consecutive natural numbers in three ways: 1 + 2 + 3 + 4 + 5 = 15, 4 + 5 + 6 = 15, and 7 + 8 = 15."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">The idea is to represent N as a sequence of length L+1 as:<br />\nN = a + (a+1) + (a+2) + .. + (a+L) </span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "visa",
            "walmart",
            "linkedin"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "// Back-end complete function template in C++\n\nclass Solution {\n  public:\n    // Function to calculate the count of possible values\n    int getCount(int N) {\n        \n        // Initializing the count variable\n        int count = 0;\n        \n        // Looping over possible values of L\n        // where L represents the difference between consecutive numbers starting from 1\n        for (int L = 1; L * (L + 1) < 2 * N ; L++) {\n            \n            // Calculating the value of a which represents the first number in the sequence\n            double a = (1.0 * N - (L * (L + 1)) / 2) / (L + 1);\n            \n            // Checking if a is a whole number\n            if (a - (int)a == 0.0) \n                count++;        \n        }\n        \n        // Returning the count of possible values\n        return count;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "class Solution:\n    def getCount(self, N):\n        count = 0   # initialize a count variable to keep track of the number of occurrences\n        L = 1   # initialize a variable L to start with 1\n\n        # this loop runs until L*(L+1) is less than 2*N\n        while( L * (L + 1) < 2 * N): \n            a = (1.0 * N - (L * (L + 1) ) / 2) / (L + 1) \n\n            # if the difference between a and its integer value is 0.0,\n            # increment the count variable\n            if (a - int(a) == 0.0): \n                count += 1\n\n            L += 1  # increment L by 1 in each iteration\n\n        return count  # return the final count value",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\r\n\r\n/**\r\n * @param {number} N\r\n * @returns {number}\r\n*/\r\n\r\nclass Solution{\r\n    getCount(N){\r\n        //code here\r\n        let count = 0;\r\n        for (let L = 1 ; L * (L + 1) < 2 * N ; L++)\r\n        {\r\n            let a = (1.0 * N-(L * (L + 1)) / 2) / (L + 1);\r\n            if (a - Math.floor(a) === 0) \r\n                count++;        \r\n        }\r\n        return count;\r\n    }\r\n}",
                "lang_text": "javascript"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    public int getCount(int N)\n    {\n        // Initializing the count variable\n        int count = 0;\n        \n        // Looping over possible values of L\n        // where L represents the difference between consecutive numbers starting from 1\n        for (int L = 1; L * (L + 1) < 2 * N ; L++) {\n            \n            // Calculating the value of a which represents the first number in the sequence\n            double a = (1.0 * N - (L * (L + 1)) / 2) / (L + 1);\n            \n            // Checking if a is a whole number\n            if (a - (int)a == 0.0) \n                count++;        \n        }\n        \n        // Returning the count of possible values\n        return count;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}