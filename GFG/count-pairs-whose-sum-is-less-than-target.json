{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 876441,
            "title": "Count Pairs whose sum is less than target",
            "titleSlug": "count-pairs-whose-sum-is-less-than-target",
            "content": "<p><span style=\"font-size: 18px;\">Given an array&nbsp;<strong>arr[]</strong>&nbsp;and an integer&nbsp;<strong>target</strong>.&nbsp;</span><span style=\"background-color: #ffffff; color: #273239; font-family: Nunito, sans-serif; font-size: 18px; letter-spacing: 0.162px; text-align: justify;\">You have to find the number of pairs in the array whose sum is strictly less than the&nbsp;<strong>target</strong>.</span></p>\n<p><strong style=\"font-size: 18px;\">Examples:</strong></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong></span><span style=\"font-size: 18px;\">arr[] = [7, 2, 5, 3], target = 8</span><span style=\"font-size: 18px;\">\n<strong>Output: </strong>2<strong>\nExplanation: </strong></span><span style=\"font-size: 18px;\">There are 2 pairs with sum less than 8: (2, 5) and (2, 3). </span></pre>\n<pre><span ><strong>Input: </strong>arr[] = [5, 2, 3, 2, 4, 1], target = 5\n<strong>Output: </strong>4<strong>\nExplanation: </strong></span><span style=\"font-size: 18.6667px;\">There are 4 pairs whose sum is less than 5: (2, 2), (2, 1), (3, 1) and (2, 1).<br /></span></pre>\n<pre><span ><strong>Input: </strong>arr[] = [2, 1, 8, 3, 4, 7, 6, 5], target = 7\n<strong>Output: </strong>6<strong>\nExplanation: </strong></span><span style=\"font-size: 18.6667px;\">There are 6 pairs whose sum is less than 7: (2, 1), (2, 3), (2, 4), (1, 3), (1, 4) and (1, 5).</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:<br /></strong>1 &lt;= arr.size() &lt;= 10<sup>5</sup><strong><br /></strong></span><span style=\"font-size: 18px;\">0 &lt;= arr[i]&nbsp;</span><span style=\"font-size: 18px;\">&lt;= 10<sup>4</sup></span><span style=\"font-size: 18px;\"><br /></span><span style=\"font-size: 18px;\">1 &lt;= target &lt;= 10<sup>4</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array `arr[]` and an integer `target`, find the number of pairs in the array whose sum is strictly less than the `target`.",
                "constraints": [
                    "1 <= arr.size() <= 10^5",
                    "0 <= arr[i] <= 10^4",
                    "1 <= target <= 10^4"
                ],
                "testcases": [
                    {
                        "input": "arr[] = [7, 2, 5, 3], target = 8",
                        "output": "2",
                        "explanation": "There are 2 pairs whose sum is less than 8: (2, 5) and (2, 3)."
                    },
                    {
                        "input": "arr[] = [5, 2, 3, 2, 4, 1], target = 5",
                        "output": "4",
                        "explanation": "There are 4 pairs whose sum is less than 5: (2, 2), (2, 1), (3, 1) and (2, 1)."
                    },
                    {
                        "input": "arr[] = [2, 1, 8, 3, 4, 7, 6, 5], target = 7",
                        "output": "6",
                        "explanation": "There are 6 pairs whose sum is less than 7: (2, 1), (2, 3), (2, 4), (1, 3), (1, 4) and (1, 5)."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Use two pointers to count pairs where the sum is less than the target by sorting the array.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "two-pointer-algorithm",
                "slug": "two-pointer-algorithm"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\nclass Solution {\n  public:\n    int countPairs(vector<int> arr, int target) {\n        sort(arr.begin(), arr.end());\n        int count = 0;\n        int left = 0, right = arr.size() - 1;\n        while (left < right) {\n            if (arr[left] + arr[right] < target) {\n                count += (right - left);\n                left++;\n            } else {\n                right--;\n            }\n        }\n        return count;\n    }\n};\n",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\nclass Solution {\n    int countPairs(int arr[], int target) {\n        Arrays.sort(arr);\n        int count = 0;\n        int left = 0, right = arr.length - 1;\n        while (left < right) {\n            if (arr[left] + arr[right] < target) {\n                count += (right - left);\n                left++;\n            } else {\n                right--;\n            }\n        }\n        return count;\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\nclass Solution:\n    #Complete the below function\n    def countPairs(self, arr, target):\n        arr.sort()\n        count = 0\n        left = 0\n        right = len(arr) - 1\n        while left < right:\n            if arr[left] + arr[right] < target:\n                count += (right - left)\n                left += 1\n            else:\n                right -= 1\n        return count\n",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "//Back-end complete function Template for javascript\n/**\n * @param {number[]} arr\n * @param {number} target\n * @return {number}\n */\nclass Solution {\n    countPairs(arr, target) {\n        arr.sort((a, b) => a - b);\n        let count = 0;\n        let left = 0, right = arr.length - 1;\n        while (left < right) {\n            if (arr[left] + arr[right] < target) {\n                count += (right - left);\n                left++;\n            } else {\n                right--;\n            }\n        }\n        return count;\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}