{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 875937,
            "title": "Count pairs with given sum",
            "titleSlug": "count-pairs-with-given-sum--150253",
            "content": "<p><span style=\"font-size: 18px;\">Given an array&nbsp;<strong>arr[]</strong>&nbsp;and an integer&nbsp;<strong>target</strong>.&nbsp;</span><span style=\"font-size: 18px;\">You have to find numbers of pairs in array&nbsp;<strong>arr[]</strong>&nbsp;which sums up to given&nbsp;<strong>target.</strong></span></p>\n<p><strong style=\"font-size: 18px;\">Examples:</strong></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong></span><span style=\"font-size: 18px;\">arr[] = [1, 5, 7, -1, 5], target = 6 </span><span style=\"font-size: 18px;\">\n<strong>Output: </strong>3<strong>\nExplanation: </strong></span><span style=\"font-size: 18px;\">Pairs with sum 6 are (1, 5), (7, -1) and (1, 5). </span></pre>\n<pre><span ><strong>Input: </strong>arr[] = [1, 1, 1, 1], target = 2 \n<strong>Output: </strong>6<strong>\nExplanation: </strong></span><span style=\"font-size: 18.6667px;\">Pairs with sum 2 are (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1).</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr[] = [10, 12, 10, 15, -1],</span><span style=\"font-size: 18px;\"> target = 125</span><span style=\"font-size: 18px;\">\n<strong>Output: </strong>0</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:<br /></strong>1 &lt;= arr.size() &lt;= 10<sup>5</sup><strong><br /></strong></span><span style=\"font-size: 18px;\">-10<sup>4</sup> &lt;= arr[i] </span><span style=\"font-size: 18px;\">&lt;= 10<sup>4</sup></span><span style=\"font-size: 18px;\"><br /></span><span style=\"font-size: 18px;\">1 &lt;= target &lt;= 10<sup>4</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p>Use a hash map to store frequencies of elements, and for each element, check if its complement (target - element) exists in the map.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Hash",
                "slug": "hash"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C",
                "full_func": "//Back-end complete function Template for C\nint countPairs(int arr[], int n, int target) {\n    int hashMap[200001] = {0}; // Assuming arr values range from -100000 to 100000\n    int count = 0;\n\n    for (int i = 0; i < n; i++) {\n        int complement = target - arr[i];\n\n        // Check if the complement exists in the hash map\n        if (complement + 100000 >= 0 && hashMap[complement + 100000] > 0) {\n            count += hashMap[complement + 100000];\n        }\n\n        // Increment the frequency of arr[i] (using an offset of 100000 to handle\n        // negative values)\n        hashMap[arr[i] + 100000]++;\n    }\n\n    return count;\n}",
                "lang_text": "c"
            },
            {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    int countPairs(vector<int> &arr, int target) {\n        unordered_map<int, int> m;\n        int count = 0;\n\n        for (int i = 0; i < arr.size(); i++) {\n\n            // Check if the complement (target - arr[i])\n            // exists in the map\n            // If yes, increment count\n            if (m.find(target - arr[i]) != m.end()) {\n                count += m[target - arr[i]];\n            }\n\n            // Increment the frequency of arr[i]\n            m[arr[i]]++;\n        }\n        return count;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution {\n\n    int countPairs(int arr[], int target) {\n        HashMap<Integer, Integer> map = new HashMap<>();\n        int count = 0;\n\n        for (int i = 0; i < arr.length; i++) {\n\n            // Check if the complement (target - arr[i]) exists in the map\n            // If yes, increment count\n            if (map.containsKey(target - arr[i])) {\n                count += map.get(target - arr[i]);\n            }\n\n            // Increment the frequency of arr[i]\n            map.put(arr[i], map.getOrDefault(arr[i], 0) + 1);\n        }\n\n        return count;\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "class Solution:\n\n    def countPairs(self, arr, target):\n        freq_map = {}\n        count = 0\n\n        for num in arr:\n            # Check if the complement (target - num) exists in the map\n            if target - num in freq_map:\n                count += freq_map[target - num]\n\n            # Increment the frequency of num\n            if num in freq_map:\n                freq_map[num] += 1\n            else:\n                freq_map[num] = 1\n\n        return count\n",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "/**\n * @param {number[]} arr\n * @param {number} target\n * @return {number}\n */\nclass Solution {\n    countPairs(arr, target) {\n        const freqMap = new Map();\n        let count = 0;\n\n        for (let i = 0; i < arr.length; i++) {\n            // Check if the complement (target - arr[i]) exists in the map\n            if (freqMap.has(target - arr[i])) {\n                count += freqMap.get(target - arr[i]);\n            }\n\n            // Increment the frequency of arr[i]\n            freqMap.set(arr[i], (freqMap.get(arr[i]) || 0) + 1);\n        }\n\n        return count;\n    }\n}\n",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}