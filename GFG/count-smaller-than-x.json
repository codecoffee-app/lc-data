{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 701775,
            "title": "Count Smaller Than X",
            "titleSlug": "count-smaller-than-x",
            "content": "<p><span style=\"font-size:18px\">Given an unsorted array <strong>arr[]</strong> of size <strong>N </strong>containing <strong>non-negative integers</strong>. You will also be given an integer <strong>X</strong>, the task is to count the number of elements which are <strong>strictly smaller </strong>than&nbsp;X. The given integer may or not be present in the array given.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:\r\n</strong>N = 5\r\narr[] = {4 5 3 1 2}\r\nX = 3\r\n<strong>Output: </strong>2<strong>\r\nExplanation: </strong>Here X = 3, and elements that\r\nare smaller than X are 1 and 2.</span>\r\n</pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:\r\n</strong>N = 6\r\narr[] = {2 2 2 2 2 2}\r\nX = 3\r\n<strong>Output: </strong>6<strong>\r\nExplanation: </strong>Here X = 3, and elements that\r\nare smaller than X are 2 2 2 2 2 2.</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task</strong>:<br />\r\nSince this is a functional problem you don&#39;t have to worry about the input, you just have to complete the given function <strong>smallerThanX() </strong>which takes 3 arguments(array arr, N, and X) and returns the count of elements smaller than X. The printing is done by the driver code.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:&nbsp;</strong>O(N).<br />\r\n<strong>Expected Auxiliary Space:&nbsp;</strong>O(1).</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n1 &lt;= <strong>N </strong>&lt;= 10<sup>6</sup><br />\r\n1 &lt;= <strong>arr[i], X</strong> &lt;= 10<sup>5&nbsp;&nbsp;</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an unsorted array `arr` of size `N` containing non-negative integers, determine the number of elements strictly smaller than a given integer `X`. `X` may or may not be present in the array.",
                "constraints": [
                    "1 <= N <= 10^6",
                    "1 <= arr[i], X <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "N = 5\narr[] = {4, 5, 3, 1, 2}\nX = 3",
                        "output": "2",
                        "explanation": "The elements 1 and 2 in the array are strictly smaller than X = 3."
                    },
                    {
                        "input": "N = 6\narr[] = {2, 2, 2, 2, 2, 2}\nX = 3",
                        "output": "6",
                        "explanation": "All elements in the array (2, 2, 2, 2, 2, 2) are strictly smaller than X = 3."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>1. Traverse the array and find the count which are smaller than X.&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C",
                "full_func": "//Back-end complete function Template for C\r\n\r\nint smallerThanX(int arr[], int n, int x)\r\n{\r\n    int counter=0;\r\n    for(int i=0;i<n;i++)\r\n        if(arr[i]<x)\r\n            counter++;\r\n    \r\n    return counter;\r\n}",
                "lang_text": "c"
            },
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\r\n\r\nclass Solution{\r\n    public:\r\n    int smallerThanX(int arr[],int n,int x)\r\n    {\r\n        int counter=0;\r\n        for(int i=0;i<n;i++)\r\n        if(arr[i]<x)\r\n        counter++;\r\n        \r\n        return counter;\r\n    }\r\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\r\n\r\n\r\nclass Solution\r\n{\r\n    public static int smallerThanX(int arr[], int n, int x)\r\n    {\r\n        int counter = 0;\r\n        for(int i=0;i<n;i++)\r\n            if(arr[i]<x)\r\n        counter++;\r\n        \r\n        return counter;\r\n    }\r\n}\r\n\r\n",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\r\n\r\nclass Solution:\r\n    def smallerThanX(self,arr,n,x):\r\n        \r\n        ans=0\r\n        for e in arr:\r\n            if e<x:\r\n                ans+=1\r\n        return ans",
                "lang_text": "py"
            },
            {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\r\n\r\n/**\r\n * @param {number[]} arr\r\n * @param {number} n\r\n * @param {number} x\r\n * @return {number} \r\n*/\r\n\r\nclass Solution {\r\n    smallerThanX(arr,n,x){\r\n       let counter = 0;\r\n       for(let i=0;i<n;i++){\r\n           if(arr[i]<x){\r\n               counter++;\r\n           }\r\n       }\r\n       return counter;\r\n    }\r\n}",
                "lang_text": "javascript"
            },
            {
                "lang": "C#",
                "full_func": "class Solution\n{\n    //Complete this function\n    //Function to count elements in the array that are less than or equal to given integer x.\n    public int smallerThanX(int[] arr, int n, int x)\n    {\n        int counter=0;\n        for(int i=0;i<n;i++)\n        if(arr[i]<x)\n        counter++;\n        \n        return counter;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}