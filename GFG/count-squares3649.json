{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704184,
            "title": "Count Squares",
            "titleSlug": "count-squares3649",
            "content": "<p><span >Given a positive integer <strong>n</strong>, find the number of perfect squares that are less than <strong>n</strong> in the sample space of perfect squares. The sample space consists of all perfect squares starting from 1 (i.e., 1, 4, 9, 16, 25, &hellip;)</span></p>\n<p><span ><strong>Examples :</strong></span></p>\n<pre><span ><strong>Input:</strong> n<strong> = </strong>9\n<strong>Output: </strong>2\n<strong>Explanation: </strong>1 and 4 are the only Perfect Squares less than 9. So, the Output is 2.</span></pre>\n<pre><span ><strong>Input:</strong> n<strong> = </strong>3\n<strong>Output: </strong>1\n<strong>Explanation: </strong>1 is the only Perfect Square less than 3. So, the Output is 1.</span></pre>\n<p><span ><strong>Constraints:</strong></span><br /><span >1 &lt;= n &lt;= 10<sup>8</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a positive integer `n`, determine the count of perfect squares strictly smaller than `n`.  Consider the set of perfect squares starting from 1 (1, 4, 9, 16, 25, ...).",
                "constraints": [
                    "1 <= n <= 10^8"
                ],
                "testcases": [
                    {
                        "input": "9",
                        "output": "2",
                        "explanation": "The perfect squares less than 9 are 1 and 4. Therefore, the count is 2."
                    },
                    {
                        "input": "3",
                        "output": "1",
                        "explanation": "The only perfect square less than 3 is 1. Therefore, the count is 1."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span >There are sqrt(n) Perfect Squares between 1 and n.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "accolite",
            "snapdeal",
            "ola-cabs"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "// This function calculates the number of perfect squares less than or equal to the\n// given number N. It takes an integer N as input and returns an integer representing\n// the count of perfect squares.\nclass Solution {\n  public:\n    int countSquares(int n) {\n        // Calculate the square root of N-1 and store it in the variable ans.\n        int ans = sqrt(n - 1);\n\n        // Return the value of ans as the count of perfect squares.\n        return ans;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\nclass Solution {\n\n    // Function to count the number of squares less than or equal to N\n    static int countSquares(int n) {\n\n        // Finding the square root of N-1 and converting it to int\n        int ans = (int)Math.sqrt(n - 1);\n\n        // Returning the result\n        return ans;\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\nimport math\n\n\nclass Solution:\n    # Function to count the number of perfect squares from 1 to N\n    def countSquares(self, n):\n        # total number of perfect squares less than or equal to N-1\n        ans = int(math.sqrt(n - 1))\n        # return the result\n        return ans\n",
                "lang_text": "py"
            },
            {
                "lang": "C#",
                "full_func": "class Solution {\n    // Complete this function\n    public int countSquares(int n) {\n        // Calculate the square root of N-1 and store it in the variable ans.\n        int ans = (int)Math.Sqrt(n - 1);\n\n        // Return the value of ans as the count of perfect squares.\n        return ans;\n    }\n}",
                "lang_text": "csharp"
            },
            {
                "lang": "Javascript",
                "full_func": "// User function Template for javascript\n/**\n * @param {number} n\n * @returns {number}\n */\n\nclass Solution {\n    // Function to count the number of perfect squares.\n    countSquares(n) {\n        // total number of perfect squares less than or equal to N-1\n        let ans = Math.floor(Math.sqrt(n - 1));\n        // return the result\n        return ans;\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}