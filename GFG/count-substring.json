{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 712150,
            "title": "Count Substring",
            "titleSlug": "count-substring",
            "content": "<p><span style=\"font-size:18px\">Given string s consisting only a,b,c. return the number of substrings&nbsp;containing&nbsp;<strong>at least</strong>&nbsp;one occurrence of all these characters&nbsp;<em>a</em>,&nbsp;<em>b,</em>&nbsp;and&nbsp;<em>c</em>.</span></p>\r\n\r\n<p><strong><span style=\"font-size:18px\">Example 1:</span></strong></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong>\r\nabcabc\r\n<strong>Output:</strong>\r\n10\r\n<strong>Explanation:</strong>\r\nThe required substrings <em> are &quot;</em>abc<em>&quot;, &quot;</em>abca<em>&quot;, &quot;</em>abcab<em>&quot;, &quot;</em>abcabc<em>&quot;,\r\n&quot;</em>bca<em>&quot;, &quot;</em>bcab<em>&quot;, &quot;</em>bcabc<em>&quot;, &quot;</em>cab<em>&quot;, &quot;</em>cabc<em>&quot; </em>and<em> &quot;</em>abc<em>&quot;.</em></span>\r\n\r\n</pre>\r\n\r\n<p><strong><span style=\"font-size:18px\">Example 2:</span></strong></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong>\r\n</span><span style=\"font-size:18px\">aaacb\r\n<strong>Output:</strong>\r\n3</span></pre>\r\n\r\n<p><strong><span style=\"font-size:18px\">Your Task:</span></strong><br />\r\n<span style=\"font-size:18px\">You don&#39;t have to read input or print anything. Your task is to complete the function&nbsp;<strong>countSubstring()&nbsp;</strong>which takes the string s&nbsp;and returns the count of substring having at least a,b,c.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity: </strong>O(n)<br />\r\n<strong>Expected Space Complexity:&nbsp;</strong>O(1)</span></p>\r\n\r\n<p><strong><span style=\"font-size:18px\">Constraint:</span></strong><br />\r\n<span style=\"font-size:18px\">3&lt;=s.length&lt;=5 x 10<sup>4&nbsp;&nbsp;</sup></span><br />\r\n<span style=\"font-size:18px\">S only contains a,b,c.</span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string `s` consisting only of the characters 'a', 'b', and 'c', determine the number of substrings of `s` that contain at least one occurrence of each of these characters.",
                "constraints": [
                    "3 <= s.length <= 5 * 10^4",
                    "s only contains the characters 'a', 'b', and 'c'."
                ],
                "testcases": [
                    {
                        "input": "abcabc",
                        "output": "10",
                        "explanation": "The substrings containing at least one 'a', 'b', and 'c' are: \"abc\", \"abca\", \"abcab\", \"abcabc\", \"bca\", \"bcab\", \"bcabc\", \"cab\", \"cabc\", and \"abc\"."
                    },
                    {
                        "input": "aaacb",
                        "output": "3",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function template in C++\nclass Solution {\n  public:\n    //Function to check if the substring is good or not.\n    bool isGoodSubstring(vector<int> v) {\n        return (v[0] >= 1 && v[1] >= 1 && v[2] >= 1);\n    }\n\n    //Function to count the total number of substrings.\n    int countSubstring(string s) {\n        int total = 0;\n        vector<int> counts(3, 0);   //vector to keep count of occurrences of a, b, and c.\n        int n = s.length();\n        int i = 0;\n        int j = 0;\n\n        //iterating over the string\n        while (j < s.length()) {\n            counts[s[j] - 'a']++;   //incrementing count for the current character.\n\n            //if the current substring is not good, move the end pointer.\n            if (!isGoodSubstring(counts)) {\n                j++;\n            } \n            else {\n                //if the current substring is good, move the start pointer and count the substrings.\n                while (isGoodSubstring(counts)) {\n                    total += (n - j);   //add the count of substrings to the total.\n                    counts[s[i] - 'a']--;   //decrement count for the starting character.\n                    i++;    //move the start pointer.\n                }\n                j++;    //move the end pointer.\n            }\n        }\n\n        //returning the total number of substrings.\n        return total;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution {\n    public static int countSubstring(String s) {\n        int count[] = {0, 0, 0}, res = 0, i = 0, n = s.length();\n        // initialize counts for 'a', 'b', and 'c'\n        for (int j = 0; j < n; ++j) {\n            ++count[s.charAt(j) - 'a'];\n            // check if all characters are present at least once\n            while (count[0] > 0 && count[1] > 0 && count[2] > 0)\n                // decrement count of character at index i\n                --count[s.charAt(i++) - 'a'];\n            // add number of substrings formed till now\n            res += i;\n        }\n        // return total number of substrings formed\n        return res;\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\r\n\r\nclass Solution:\r\n    def countSubstring(self, s):\r\n\r\n        #getting the length of input string\r\n        n = len(s)\r\n\r\n        #variables to keep track of counts of 'a', 'b', and 'c'\r\n        a = b = c = 0\r\n\r\n        #variables for left and right pointers, and result\r\n        l = r = ans = 0\r\n        \r\n        #iterating over the input string\r\n        while r < n:\r\n\r\n            #incrementing respective count variables\r\n            if s[r]=='a':\r\n                a+=1\r\n            elif s[r]=='b':\r\n                b+=1\r\n            else:\r\n                c+=1\r\n        \r\n            #checking if we have at least one 'a', 'b', and 'c'\r\n            while a>=1 and b>=1 and c>=1:\r\n\r\n                #decrementing respective count variables\r\n                if s[l]=='a':\r\n                    a-=1\r\n                elif s[l]=='b':\r\n                    b-=1\r\n                else:\r\n                    c-=1\r\n\r\n                #moving the left pointer\r\n                l+=1\r\n            \r\n            #updating the result by adding the current left pointer\r\n            ans += l\r\n\r\n            #moving the right pointer to next position\r\n            r += 1\r\n        \r\n        #returning the final result\r\n        return ans",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n/**\n * @param {string} s\n * @returns {number}\n*/\n\nclass Solution {\n    //Function to count the number of substrings.\n    countSubstring(s) {\n        let n = s.length;\n        let a = 0;\n        let b = 0;\n        let c = 0;\n        let l = 0;\n        let r = 0;\n        let ans = 0;\n\n        while (r < n) {\n            if (s[r] == 'a') {\n                a += 1;\n            } else if (s[r] == 'b') {\n                b += 1;\n            } else {\n                c += 1;\n            }\n\n            while (a >= 1 && b >= 1 && c >= 1) {\n                if (s[l] == 'a') {\n                    a -= 1;\n                } else if (s[l] == 'b') {\n                    b -= 1;\n                } else {\n                    c -= 1;\n                }\n                l += 1;\n            }\n            ans += l;\n            r += 1;\n        }\n        return ans;\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}