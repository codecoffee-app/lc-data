{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703057,
            "title": "Count the characters",
            "titleSlug": "count-the-characters1821",
            "content": "<p><span style=\"font-size:18px\">Given a string S. Count the characters that have &lsquo;N&rsquo; number of occurrences. If a character appears consecutively it is counted as 1 occurrence.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\nS = &quot;abc&quot;, N = 1\n<strong>Output:</strong> 3\n<strong>Explanation</strong>: &#39;a&#39;, &#39;b&#39; and &#39;c&#39; all have \n1 occurrence.\n</span>\n</pre>\n\n<p><span style=\"font-size:18px\">\u00e2\u20ac\u2039<strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input</strong>: \nS = &quot;geeksforgeeks&quot;, N = 2\n<strong>Output:</strong> 4\n<strong>Explanation</strong>: &#39;g&#39;, &#39;e&#39;, &#39;k&#39; and &#39;s&#39; have\n2 occurrences.</span>\n</pre>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nYou don&#39;t need to read input or print anything. Your task is to complete the function&nbsp;<strong>getCount()&nbsp;</strong>which takes the string S and an integer N as inputs and returns the count of the characters that have exactly N occurrences in the string. Note that the consecutive occurrences of a character have to be counted as 1.</span></p>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Expected Time Complexity:&nbsp;</strong>O(|S|).<br />\n<strong>Expected Auxiliary Space:&nbsp;</strong>O(1).</span></p>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Constraints:</strong><br />\n1&lt;=|S|&lt;=10<sup>5</sup><br />\n1&lt;=N&lt;=10<sup>3</sup></span></p>\n\n<p>&nbsp;</p>\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string `S`, determine the number of distinct characters that appear exactly `N` times in the string. Consecutive occurrences of the same character are counted as a single occurrence.",
                "constraints": [
                    "1 <= |S| <= 10^5",
                    "1 <= N <= 10^3"
                ],
                "testcases": [
                    {
                        "input": "S = \"abc\", N = 1",
                        "output": "3",
                        "explanation": "The characters 'a', 'b', and 'c' each appear once in the string."
                    },
                    {
                        "input": "S = \"geeksforgeeks\", N = 2",
                        "output": "4",
                        "explanation": "The characters 'g', 'e', 'k', and 's' each appear twice in the string."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Try maintaing two pointers and store the occurrence of each character in the string.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Hash",
                "slug": "hash"
            },
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [
            "zoho",
            "amazon"
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function template in C++\n\nclass Solution\n{\n  public:\n    \n    //Function to count the number of characters with frequency N in the given string.\n    int getCount (string S, int N)\n    {\n        //Array to store the frequency of characters.\n        int freq[26] = {0};\n        int n = S.length ();\n\n        int i = 0, j;\n        //Iterating over the string.\n        while (i < n)\n        {\n            j = i;\n            //Counting the number of consecutive occurrences of the current character.\n            while (j < n and S[j] == S[i]) j++;\n\n            //Updating the frequency of the current character.\n            freq[S[i] - 'a']++;\n\n            i = j;\n        }\n\n        int res = 0;\n        //Counting the number of characters with frequency N.\n        for (int i = 0; i < 26; ++i)\n        {\n            if (freq[i] == N)\n                res++;\n        }\n        return res;\n    }\n\n// Contributed By: Pranay Bansal\n\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\nclass Sol\n{\n    //function to count the number of characters that occur exactly N times in a given string\n    int getCount (String S, int N)\n    {\n        //create an array to store the frequency of each character\n        int freq[] = new int[26];\n        //get the length of the string\n        int n = S.length ();\n    \n        int i = 0, j;\n        while (i < n)\n        {\n            j = i;\n            //find the range of consecutive characters that are the same\n            while (j < n && S.charAt (j) == S.charAt (i)) j++;\n            //increment the frequency count of the character\n            freq[(int)(S.charAt (i) - 'a')]++;\n    \n            i = j;\n        }\n    \n        int res = 0;\n        for (i = 0; i < 26; ++i)\n        {\n            //check if the frequency of a character is equal to N\n            if (freq[i] == N)\n                //increment the result count\n                res++;\n        }\n        //return the final count of characters\n        return res;\n    }\n}\n\n// Contributed By: Pranay Bansal",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\nclass Solution:\n    #Function to count the number of characters with frequency equal to N.\n    def getCount (self, S, N):\n        freq = [0 for i in range (26)]\n        \n        n = len (S)\n        i = 0\n        \n        #iterating over the string\n        while (i < n):\n            j = i\n            \n            #finding the continuous occurrences of the current character\n            while (j < n and S[j] == S[i]):\n                j += 1\n            \n            #incrementing the frequency of the character\n            freq[ord(S[i]) - ord ('a')] += 1\n            i = j\n            \n        res = 0\n        #counting the characters with frequency equal to N\n        for i in range (26):\n            if freq[i] == N:\n                res += 1\n        \n        return res\n        \n    # Contributed By: Pranay Bansal",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "class Solution {\n    getCount(S, N){\n        let freq = new Array(26).fill(0);\n        let n = S.length;\n        \n        let i = 0, j;\n        while (i < n) {\n            j = i;\n            while (j < n && S[j] === S[i]) j++;\n            freq[S[i].charCodeAt(0) - 'a'.charCodeAt(0)]++;\n            \n            i = j;\n        }\n        \n        let res = 0;\n        for (let i = 0; i < 26; ++i) {\n            if (freq[i] === N)\n                res++;\n        }\n        \n        return res;\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}