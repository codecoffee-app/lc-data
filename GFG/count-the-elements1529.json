{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 702709,
            "title": "Count the elements",
            "titleSlug": "count-the-elements1529",
            "content": "<p><span style=\"font-size: 18px;\">Given two arrays <strong>a </strong>and <strong>b</strong> both of size <strong>n</strong>. Given <strong>q</strong> queries in an array <strong>query</strong> each having a positive integer <strong>x</strong> denoting an index of the array <strong>a</strong>. For each query, your task is to find all the elements <strong>less than or equal</strong> to <strong>a[x]</strong> in the array <strong>b</strong>.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:\n</strong>n = 3\na[] = {4,1,2}\nb[] = {1,7,3}<br />q = 2<br />query[] = {0,1}\n<strong>Output :</strong> <br />2\n1\n<strong>Explanation</strong>: <br />For 1<sup>st</sup> query, the given index is 0, a[0] = 4. There are 2 elements(1 and 3) which are less than or equal to 4.\nFor 2<sup>nd</sup> query, the given index is 1, a[1] = 1. There exists only 1 element(1) which is less than or equal to 1.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:\n</strong>n = 4\na[] = {1,1,5,5}\nb[] = {0,1,2,3}<br />q = 4\nquery[] = {0,1,2,3}\n<strong>Output :</strong> <br />2<br />2<br />4<br />4\n<strong>Explanation</strong>: <br />For 1<sup>st</sup> query and 2<sup>nd</sup> query, the given index is 0 and 1 respectively, a[0] = a[1] = 1. There are 2 elements(0 and 1) which are less than or equal to 1. \nFor 3<sup style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">rd</sup><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\"> query and 4</span><sup style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">th</sup><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\"> query, the given index is 2 and 3 respectively, a[2] = a[3] = 5. All the 4 elements are less than or equal to 5.</span>   </span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Your Task:</strong><br />You don't need to take any input, as it is already accomplished by the driver code. You just need to complete the function <strong>countElements()</strong>&nbsp;that takes<strong>&nbsp;</strong>array<strong> a </strong>and<strong> b</strong> of size <strong>n, </strong>and array<strong> query </strong>of size <strong>q </strong>as parameters<strong>&nbsp;</strong>and returns an array that contains the answer to the corresponding queries.&nbsp;</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong> O(n+q+</span><span style=\"font-size: 18px;\">maximum of&nbsp;</span><strong style=\"font-size: 18px;\">a</strong><span style=\"font-size: 18px;\">&nbsp;and&nbsp;</span><strong style=\"font-size: 18px;\">b</strong><span style=\"font-size: 18px;\">).</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Expected Auxiliary Space:</strong> O(maximum of <strong>a</strong> and <strong>b</strong>).</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &le; q&nbsp;</span><span style=\"font-size: 18px;\">&le; n</span><span style=\"font-size: 18px;\"> &le; 10<sup>5</sup><br /></span><span style=\"font-size: 18px;\">1&nbsp;</span><span style=\"font-size: 18px;\">&le; a[i], b[i]&nbsp;</span><span style=\"font-size: 18px;\">&le; 10<sup>5</sup><br />0&nbsp;</span><span style=\"font-size: 18px;\">&le; query[i] &lt;</span><span style=\"font-size: 18px;\">&nbsp;n</span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two arrays `a` and `b` of size `n`, and an array `query` of size `q`, where each element in `query` represents an index into array `a`. For each query value `x`, find the number of elements in array `b` that are less than or equal to `a[x]`.",
                "constraints": [
                    "1 <= q <= n <= 10^5",
                    "1 <= a[i], b[i] <= 10^5",
                    "0 <= query[i] < n"
                ],
                "testcases": [
                    {
                        "input": "n = 3\na[] = {4,1,2}\nb[] = {1,7,3}\nq = 2\nquery[] = {0,1}",
                        "output": "2\n1",
                        "explanation": "For the first query, the index is 0, so a[0] = 4. In array b, 1 and 3 are less than or equal to 4, giving a count of 2.\nFor the second query, the index is 1, so a[1] = 1. In array b, only 1 is less than or equal to 1, giving a count of 1."
                    },
                    {
                        "input": "n = 4\na[] = {1,1,5,5}\nb[] = {0,1,2,3}\nq = 4\nquery[] = {0,1,2,3}",
                        "output": "2\n2\n4\n4",
                        "explanation": "For the first and second queries, a[0] = a[1] = 1. In array b, 0 and 1 are less than or equal to 1, so the count is 2.\nFor the third and fourth queries, a[2] = a[3] = 5. All elements in array b (0, 1, 2, 3) are less than or equal to 5, so the count is 4."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size: 14pt;\">Use Hashing, and count the number of elements in array <strong>b</strong> in the hash array.&nbsp;</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Hash",
                "slug": "hash"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [
            "amazon",
            "yatra.com"
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nclass Solution {\n  public:\n    vector<int> countElements(vector<int> &a, vector<int> &b, int n, vector<int> &query,\n                              int q) {\n        int max = -1;\n        for (int i = 0; i < n; i++) {\n            if (a[i] > max) {\n                max = a[i];\n            }\n        }\n        int max2 = max;\n        for (int i = 0; i < n; i++) {\n            if (b[i] > max2) {\n                max2 = b[i];\n            }\n        }\n        int h[max2 + 1];\n        memset(h, 0, sizeof(h));\n        for (int i = 0; i < n; i++) {\n            int m = b[i];\n            h[m]++;\n        }\n        for (int i = 1; i <= max; i++) {\n            h[i] += h[i - 1];\n        }\n        vector<int> ans;\n        for (int i = 0; i < q; i++) {\n            int k = query[i];\n            ans.push_back(h[a[k]]);\n        }\n        return ans;\n    }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\r\n\r\nclass Solution\r\n{\r\n    public static int[] countElements(int a[], int b[], int n, int query[], int q)\r\n    {\r\n        int max = -1; // variable to store the maximum value in array a\r\n       for(int i =0;i<n;i++){ // loop through array a to find the maximum value\r\n            if(a[i] > max){\r\n              max = a[i]; // update the maximum value\r\n          }\r\n       }\r\n         HashMap<Integer, Integer> h = new HashMap<Integer,Integer>(); // create a hashmap to store frequency of elements in array b\r\n       for(int i =0;i<n;i++){ // loop through array b\r\n           int m=b[i]; // current element in array b\r\n           if(h.containsKey(m))\r\n           h.put(m,h.get(m)+1); // if element already exists in hashmap, increment its frequency\r\n           else\r\n           h.put(m,1); // else add the element with frequency 1\r\n       }\r\n       for(int i =1;i<=max;i++){ // iterate from 1 to maximum value in array a\r\n           h.put(i,h.getOrDefault(i,0)+h.getOrDefault(i-1,0)); // calculate cumulative frequency for each element\r\n       }\r\n       int ans[]=new int[q]; // array to store the answers\r\n       for(int i =0;i<q;i++) // loop through query array\r\n       {\r\n           int k=query[i]; // current query\r\n           ans[i]=h.getOrDefault(a[k],0); // get the answer from the hashmap for the current query\r\n        }\r\n      return ans; // return the answer array\r\n    }\r\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "# Back-end complete function Template for Python 3\n\n\n# Function to find the number of elements in 'b' that are greater than each element in 'a' based on given queries 'q'\nclass Solution:\n\n    def countElements(self, a, b, n, query, q):\n        n = len(a)\n        max = -1\n\n        # Finding the maximum element in 'a'\n        for i in range(0, n):\n            if (a[i] > max):\n                max = a[i]\n\n        max2 = max\n\n        # Finding the maximum element in 'b'\n        for i in range(0, n):\n            if (b[i] > max2):\n                max2 = b[i]\n        # Counting the frequency of elements in 'b'\n        h = [0] * (max2 + 1)\n        for i in range(0, n):\n            h[b[i]] += 1\n\n        # Cumulative Sum of the frequency of elements in 'b'\n        for i in range(1, max + 1):\n            h[i] += h[i - 1]\n\n        ans = []\n        # Finding the count of elements in 'b' that are greater than each element in 'a' based on the given queries 'q'\n        for i in range(0, q):\n            ans.append(h[a[query[i]]])\n\n        return ans\n",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "class Solution {\n    countElements(n, a, b, q, queries) {\n        let max = -1;\n        for (let i = 0; i < n; i++) {\n            if (a[i] > max) {\n                max = a[i];\n            }\n        }\n\n        let max2 = max;\n        for (let i = 0; i < n; i++) {\n            if (b[i] > max2) {\n                max2 = b[i];\n            }\n        }\n\n        let h = new Array(max2 + 1).fill(0);\n        for (let i = 0; i < n; i++) {\n            let m = b[i];\n            h[m]++;\n        }\n\n        for (let i = 1; i <= max2; i++) {\n            h[i] += h[i - 1];\n        }\n\n        let ans = [];\n        for (let i = 0; i < q; i++) {\n            let k = queries[i];\n            ans.push(h[a[k]]);\n        }\n\n        return ans;\n    }\n}\n",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}