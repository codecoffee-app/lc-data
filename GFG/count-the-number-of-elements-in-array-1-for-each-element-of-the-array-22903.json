{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703895,
            "title": "Numbers having two adjacent set bits",
            "titleSlug": "count-the-number-of-elements-in-array-1-for-each-element-of-the-array-22903",
            "content": "<p><span style=\"font-size:18px\">Given a number N. The task is to check whether there is pair of adjacent set bit or not in the binary representation of number.</span><br />\n<span style=\"font-size:18px\"><strong>NOTE: </strong>If the number has pair of adjacent set bits return&nbsp;&quot;Yes&quot; else return&nbsp;&quot;No&quot;.<br />\n<br />\n<strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input</strong>: n = 1\n<strong>Output: </strong>&quot;No&quot;&nbsp;\n<strong>Explanation</strong>: There is no pair of adjacent \nset bit in the binary representation of 1.\n</span></pre>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input: </strong>n = 3\n<strong>Output:&nbsp;</strong>&quot;Yes&quot;\n<strong>Explanation</strong>: There is pair of adjacent\nset bit present in the binary \nrepresentation of 3(0011).\n</span></pre>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Your Task:&nbsp;&nbsp;</strong><br />\nYou dont need to read input or print anything. Complete the function <strong>isAdjacentSetBits()&nbsp;</strong>which takes n&nbsp;as input parameter and returns &quot;Yes&quot;&nbsp;If the number has pair of adjacent set bits&nbsp;else &quot;No&quot;.<br />\n<br />\n<strong>Expected Time Complexity:</strong> O(1)<br />\n<strong>Expected Auxiliary Space:</strong> O(1)<br />\n<br />\n<strong>Constraints:</strong><br />\n1&lt;= n&nbsp;&lt;=10<sup>11</sup></span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a number N, determine if its binary representation contains a pair of adjacent set bits (1s). If such a pair exists, return \"Yes\"; otherwise, return \"No\".",
                "constraints": [
                    "1 <= n <= 10^11"
                ],
                "testcases": [
                    {
                        "input": "1",
                        "output": "No",
                        "explanation": "The binary representation of 1 is '0001'. There are no adjacent set bits."
                    },
                    {
                        "input": "3",
                        "output": "Yes",
                        "explanation": "The binary representation of 3 is '0011'.  There is a pair of adjacent set bits at the least significant bits."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Try shifting and then bitwise operations.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Numbers",
                "slug": "numbers"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\nclass Solution {\n  public:\n    //Function to check if the set bits in a number are adjacent or not.\n    string isAdjacentSetBits(long long int n) {\n    //Bitwise AND of a number and its right shift by 1 will give non-zero if the set bits are adjacent.\n    if(n & (n >> 1)) return \"Yes\";\n    else return \"No\";\n}\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    public string isAdjacentSetBits(long n)\n    {\n        //Bitwise AND of a number and its right shift by 1 will give non-zero if the set bits are adjacent.\n        if((n & (n >> 1)) != 0) return \"Yes\";\n        else return \"No\";\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}