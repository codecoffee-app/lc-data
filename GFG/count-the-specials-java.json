{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 700828,
            "title": "Count the Specials - Java",
            "titleSlug": "count-the-specials-java",
            "content": "<p><span style=\"font-size: 18px;\">Given an array <strong>arr[]</strong> (may contain duplicates) and positive integer <strong>k</strong>. The task is to count the number of elements that occur exactly <strong>floor(n/k)</strong> times in the array.</span></p>\n<p><strong><span style=\"font-size: 18px;\">Examples:</span></strong></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr[] = [1, 4, 1, 2, 4], k=2</span>\n<span style=\"font-size: 18px;\"><strong>Output: </strong>2</span>\n<span style=\"font-size: 18px;\"><strong>Explanation: </strong>In the given array, 1 and 4 occurs floor(5/2) = 2 times. So count is 2.</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr[] = [99, 66, 66], k=2 </span>\n<span style=\"font-size: 18px;\"><strong>Output: </strong>1</span>\n<span style=\"font-size: 18px;\"><strong>Explanation: </strong>In the given array, 99 occurs floor(3/2) = 1 time. So count is 1.</span></pre>\n<p><span style=\"font-size: 18px;\"><br /></span><span style=\"font-size: 18px;\"><strong style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif; white-space: normal;\">Expected Time Complexity:</strong><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif; white-space: normal;\">&nbsp;O(n)</span><br style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif; white-space: normal;\" /><strong style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif; white-space: normal;\">Expected Auxiliary Space:</strong><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif; white-space: normal;\"> O(n)<br /></span></span><br /><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &lt;= arr.size(), k &lt;= 10<sup>6</sup><br />1 &lt;= arr[i] &lt;= 10<sup>6</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p><span >Use a frequency map to count occurrences of each element and then check how many elements appear exactly n/k times.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\nclass Solution {\n    static int countSpecials(int arr[], int k) {\n        int arrLength = arr.length;\n        int result = 0;\n        // use hashmap\n        HashMap<Integer, Integer> countMap = new HashMap<>();\n\n        for (int i = 0; i < arrLength; i++) {\n            countMap.put(arr[i], countMap.getOrDefault(arr[i], 0) + 1);\n        }\n        // check for every entry in map\n        for (Map.Entry e : countMap.entrySet()) {\n            if (e.getValue().equals(arrLength / k)) {\n                result++;\n            }\n        }\n\n        return result;\n    }\n}\n",
                "lang_text": "java"
            }
        ],
        "platform": "GFG"
    }
}