{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 707939,
            "title": "Count the Substrings",
            "titleSlug": "count-the-substrings--141634",
            "content": "<p><span style=\"font-size:18px\">Given a string&nbsp;<strong>S</strong>. The task is to count the number of substrings which contains equal number of lowercase and uppercase letters.&nbsp;</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong><strong>\r\n</strong>S = &quot;gEEk&quot;\r\n<strong>Output: </strong>3<strong>\r\nExplanation: </strong>There are 3 substrings of\r\nthe given string which satisfy the\r\ncondition. They are &quot;gE&quot;, &quot;gEEk&quot; and &quot;Ek&quot;.</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong><strong>\r\n</strong>S = &quot;WomensDAY&quot;\r\n<strong>Output: </strong>4\r\n<strong>Explanation: </strong>There are 4 substrings of \r\nthe given string which satisfy the\r\ncondition. They are &quot;Wo&quot;, &quot;ensDAY&quot;, \r\n&quot;nsDA&quot; and &quot;sD&quot;</span>\r\n</pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nThe task is to complete the function&nbsp;<strong>countSubstring()&nbsp;</strong>which takes the&nbsp;string&nbsp;<strong>S</strong>&nbsp;as input parameter and returns the number of substrings which contains equal number of uppercase and lowercase letters.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong>&nbsp;O(N*N)<br />\r\n<strong>Expected Auxiliary Space:</strong>&nbsp;O(1)</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n1 &le; |S| &le; 10<sup>3</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string S, determine the number of substrings that contain an equal number of lowercase and uppercase letters.",
                "constraints": [
                    "1 <= |S| <= 10^3"
                ],
                "testcases": [
                    {
                        "input": "gEEk",
                        "output": "3",
                        "explanation": "The substrings \"gE\", \"gEEk\", and \"Ek\" each contain an equal number of lowercase and uppercase letters."
                    },
                    {
                        "input": "WomensDAY",
                        "output": "4",
                        "explanation": "The substrings \"Wo\", \"ensDAY\", \"nsDA\", and \"sD\" each contain an equal number of lowercase and uppercase letters."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Constraints are small. O(N<sup>2</sup>) wil work.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\nclass Solution\n{\n    public:\n    //Function to count the number of balanced substrings in the given string.\n    int countSubstring(string S)\n    {\n        int ans=0;\n        //iterating over the given string.\n        for(int i=0;i<S.size();i++)\n        {\n            int c=0;\n            //iterating over the substring starting from index i.\n            for(int j=i;j<S.size();j++)\n            {\n                //checking if the character at index j is a lowercase alphabet.\n                if(S[j]>='a'&&S[j]<='z')\n                    c++;  //incrementing the count of lowercase alphabets.\n                else\n                    c--;  //decrementing the count of uppercase alphabets.\n                //checking if the count becomes zero, indicating a balanced substring.\n                if(c==0)\n                    ans++;  //incrementing the answer count.\n            }\n        }\n        //returning the total count of balanced substrings.\n        return ans;\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\r\nclass Solution \r\n{ \r\n    int countSubstring(String S) \r\n    { \r\n        int ans=0;\r\n        for(int i=0;i<S.length();i++)\r\n        {\r\n            int c=0;\r\n            for(int j=i;j<S.length();j++)\r\n            {\r\n                if((int)S.charAt(j)>=(int)'a'&&(int)S.charAt(j)<=(int)'z')\r\n                    c++;\r\n                else\r\n                    c--;\r\n                if(c==0)\r\n                    ans++;\r\n            }\r\n        }\r\n        return ans;\r\n    }\r\n} \r\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "#Back-end complete function Template for Python 3\nclass Solution:\n    def countSubstring(self, S): \n        ans=0\n        for i in range(len(S)):\n            c=0\n            for j in range(i,len(S)):\n                #if current character is a lowercase letter, increase the count\n                if ord(S[j])>=ord('a') and ord(S[j])<=ord('z'):\n                    c+=1\n                #if current character is not a lowercase letter, decrease the count\n                else:\n                    c-=1\n                #if the count becomes 0, it means we have found a valid substring\n                if c==0:\n                    ans+=1\n        return ans",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n/**\n * @param {string} S\n * @returns {number}\n*/\n\nclass Solution {\n    //Function to count the total number of substrings of a string.\n    countSubstring(S) {\n        let ans = 0;\n        for (let i = 0; i < S.length; i++) {\n            let c = 0;\n            for (let j = i; j < S.length; j++) {\n                if (S.charCodeAt(j) >= 'a'.charCodeAt(0) && S.charCodeAt(j) <= 'z'.charCodeAt(0)) {\n                    c += 1;\n                } else {\n                    c -= 1;\n                }\n                if (c === 0) {\n                    ans += 1;\n                }\n            }\n        }\n        return ans;\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}