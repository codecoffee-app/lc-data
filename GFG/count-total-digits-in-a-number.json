{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 701389,
            "title": "Count Total Digits in a Number",
            "titleSlug": "count-total-digits-in-a-number",
            "content": "<p><span style=\"font-size: 18px;\">You are given a number <strong>n</strong>. You need to find the<strong> count of digits</strong> in n.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong></span><span style=\"font-size: 18px;\">\nn = 1\n<strong>Output: <br /></strong>1</span><span style=\"font-size: 18px;\"><strong>\nExplanation: <br /></strong>Number of digit in 1 is 1.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong></span><span style=\"font-size: 18px;\">\nn  = 99999\n<strong>Output: <br /></strong>5\n<strong>Explanation:<br /></strong>Number of digit in 99999 is 5</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Your Task:</strong><br />You don't need to read input or print anything. Your task is to complete the function </span><span style=\"font-size: 18px;\"> <strong>countDigits()&nbsp;</strong>that takes<strong> n</strong> as <strong>parameter </strong>and <strong>returns </strong>the <strong>count of digits</strong> in n.</span></p>\n<p><strong><span style=\"font-size: 18px;\">Constraints: </span></strong><br /><span style=\"font-size: 18px;\">1 &lt;= n &lt;= 10<sup>9</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            ""
        ],
        "relatedTopics": [
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C",
                "full_func": "//Back-end complete function Template for C\n\nint countDigits(int n)\n{\n    // if n is less than 10 then count is 1\n    if(n<10)\n        return 1;\n    else \n    // recursively count the digits of n\n        return 1+countDigits(n/10); \n}",
                "lang_text": "c"
            },
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nclass Solution {\n  public:\n    int countDigits(int n) {\n        // if n is less than 10 then count is 1\n        n = abs(n);\n        if (n < 10)\n            return 1;\n        else\n            // recursively count the digits of n\n            return 1 + countDigits(n / 10);\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\nclass Solution {\n    public static int countDigits(int n) {\n        // if n is less than 10 then count is 1\n        if (n < 0) n = -n;\n        if (n < 10)\n            return 1;\n\n        else\n            // recursively count the digits of n\n            return 1 + countDigits(n / 10);\n    }\n}\n",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\n\nclass Solution:\n\n    def countDigits(self, n):\n        '''\n        :param n: given number\n        :return: count of digits of n.\n        '''\n        # if n is less than 10 then count is 1\n        if n < 0: n = -n\n        if n < 10:\n            return 1\n        # recursively count the digits of n\n        return 1 + (self.countDigits(n // 10))\n",
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    public int countDigits(int n)\n    {\n        // if n is less than 10 then count is 1\n        if(n<10)\n            return 1;\n        else \n        // recursively count the digits of n\n            return 1+countDigits(n/10); \n    }\n}",
                "lang_text": "csharp"
            },
            {
                "lang": "Javascript",
                "full_func": "//Back-end complete function Template for javascript\n\n/**\n * @param {number} n\n * @returns {number}\n */\nclass Solution {\n\n    countDigits(n) {\n        // if n is less than 10 then count is 1\n        if (n < 0) n -= n;\n        if (n < 10)\n            return 1;\n        else\n            // recursively count the digits of n\n            return 1 + this.countDigits(Math.floor(n / 10));\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}