{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 714515,
            "title": "Count Total Setbits",
            "titleSlug": "count-total-setbits",
            "content": "<p><span style=\"font-size: 18px;\">You are given a number&nbsp;<strong>N. </strong>Find&nbsp;the<strong>&nbsp;</strong>total number of setbits in the numbers from 1 to N.&nbsp;</span><br /><br /><strong><span style=\"font-size: 18px;\">Example 1:</span></strong></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong> N = 3\n<strong>Output:</strong> 4\n<strong>Explaination:</strong> \n1 -&gt; 01, 2 -&gt; 10 and 3 -&gt; 11. \nSo total 4 setbits.</span>\n</pre>\n<p><strong><span style=\"font-size: 18px;\">Example 2:</span></strong></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong> N = 4\n<strong>Output:</strong> 5\n<strong>Explaination:</strong> 1 -&gt; 01, 2 -&gt; 10, 3 -&gt; 11 \nand 4 -&gt; 100. So total 5 setbits.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Your Task:</strong><br />You do not need to read input or print anything. Your task is to complete the function <strong>countBits()</strong> which takes N as input parameter and returns the total number of setbits upto N.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong> O(1)<br /><strong>Expected Auxiliary Space:</strong> O(1)</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &le; N &le; 10<sup>9</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Find out the contribution of ith least significant bit to the answer.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Bit Magic",
                "slug": "bit-magic"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "// Back-end complete function Template for C++\r\n\r\nclass Solution{\r\npublic:\r\n     long long countBits(long long N) {\r\n         long long count = 0;\r\n         for (int i = 0; i < 31; i++) {\r\n            int x = 1 << i; // calculate the ith bit\r\n            long long y = (N + 1) / (x * 2) * x; // count the number of set bits up to the ith bit\r\n            long long z = (N + 1) % (x * 2) - x; // count the number of set bits in the ith bit\r\n            count += y + std::max(z, 0LL); // add the counts to the total\r\n        }\r\n        return count;\r\n    }\r\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "\r\n\r\n class Solution {\r\n    public static long countBits(long N) {\r\n        long count = 0;\r\n        for (int i = 0; i < 31; i++) {\r\n            int x = 1 << i; // calculate the ith bit\r\n            long y = (N + 1) / (x * 2) * x; // count the number of set bits up to the ith bit\r\n            long z = (N + 1) % (x * 2) - x; // count the number of set bits in the ith bit\r\n            count += y + Math.max(z, 0); // add the counts to the total\r\n        }\r\n        return count;\r\n\r\n    }\r\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "\r\n\r\nclass Solution:\r\n    def countBits(self, N : int) -> int:\r\n        count = 0\r\n        for i in range(31):\r\n            x = 1 << i # calculate the ith bit\r\n            y = (N + 1) // (x * 2) * x # count the number of set bits up to the ith bit\r\n            z = (N + 1) % (x * 2) - x # count the number of set bits in the ith bit\r\n            count += y + max(z, 0) # add the counts to the total\r\n        return count\r\n",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n/**\n * @param {number} N\n * @returns {number}\n */\n\nclass Solution {\n    //Function to count number of set bits in the given number N.\n    countBits(N)\n    {\n        let count = 0;\n        for(let i = 0; i<31; i++){\n            let x = 1 << i; // calculate the ith bit\n            let y = Math.floor((N + 1) / (x * 2)) * x; // count the number of set bits up to the ith bit\n            let z = (N + 1) % (x * 2) - x; // count the number of set bits in the ith bit\n            count += y + Math.max(z, 0); // add the counts to the total\n        }\n        return count;\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}