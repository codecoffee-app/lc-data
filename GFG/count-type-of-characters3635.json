{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703065,
            "title": "Count type of Characters",
            "titleSlug": "count-type-of-characters3635",
            "content": "<p><span style=\"font-size:18px\">Given a string S, write a program to count the occurrence of Lowercase characters, Uppercase characters, Special characters and Numeric values in the string.<br />\r\nNote: There are no white spaces in the string.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong>\r\nS = &quot;#GeeKs01fOr@gEEks07&quot;\r\n<strong>Output:\r\n</strong>5\r\n8\r\n4\r\n2\r\n<strong>Explanation</strong>: There are 5 uppercase characters,\r\n8 lowercase characters, 4 numeric characters\r\nand 2 special characters.\r\n</span>\r\n</pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input</strong>: \r\nS = &quot;*GeEkS4GeEkS*&quot;\r\n<strong>Output:\r\n</strong>6\r\n4\r\n1\r\n2\r\n<strong>Explanation</strong>: There are 6 uppercase characters,\r\n4 lowercase characters, 1 numeric characters\r\nand 2 special characters.</span></pre>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou don&#39;t need to read input or print anything. Your task is to complete the function&nbsp;<strong>count()&nbsp;</strong>which takes the string S as input and returns an array of size 4 where arr[0] = number of uppercase&nbsp;characters, arr[1] = number of lowercase&nbsp;characters, arr[2] = number of numeric&nbsp;characters and arr[3] = number of special&nbsp;characters.</span></p>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Expected Time Complexity:&nbsp;</strong>O(|S|).<br />\r\n<strong>Expected Auxiliary Space:&nbsp;</strong>O(1).</span></p>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n1&lt;=|S|&lt;=10<sup>5</sup></span></p>\r\n\r\n<p>&nbsp;</p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string S, count the occurrences of lowercase characters, uppercase characters, numeric values, and special characters. Note: The string S contains no whitespace.",
                "constraints": [
                    "1 <= |S| <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "#GeeKs01fOr@gEEks07",
                        "output": "5\n8\n4\n2",
                        "explanation": "The string contains 5 uppercase characters (G, K, O, E, E), 8 lowercase characters (e, e, k, s, f, r, g, e, k, s), 4 numeric characters (0, 1, 0, 7), and 2 special characters (#, @)."
                    },
                    {
                        "input": "*GeEkS4GeEkS*",
                        "output": "6\n4\n1\n2",
                        "explanation": "The string contains 6 uppercase characters (G, E, E, K, S, G, E, E, K, S), 4 lowercase characters (e, k, e, k), 1 numeric character (4), and 2 special characters (*, *)."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">You can actually do it without knowing the ASCII table.<br />\nFor eg, to check if a character is uppercase, you just need to check:<br />\nif (s[i] &gt;= &#39;A&#39; and s[i] &lt;= &#39;Z&#39;)</span></p>\n\n<p><span style=\"font-size:18px\">The compiler implicitely compares the ASCII values by this method.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [
            "amazon",
            "makemytrip"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution\r\n{\r\n    public:\r\n        // Function to count the number of uppercase letters, lowercase letters,\r\n        // digits, and special characters in a string.\r\n        vector <int> count (string s)\r\n        {\r\n            // Initializing a vector with four 0's to store the counts.\r\n            vector <int> res (4, 0);\r\n        \r\n            // Iterating over each character in the string.\r\n            for (int i = 0; i < s.length (); ++i)\r\n            {\r\n                // Checking if the character is an uppercase letter.\r\n                if (s[i] >= 'A' && s[i] <= 'Z') res[0]++;\r\n                // Checking if the character is a lowercase letter.\r\n                else if (s[i] >= 'a' && s[i] <= 'z') res[1]++;\r\n                // Checking if the character is a digit.\r\n                else if (s[i] >= '0' && s[i] <= '9') res[2]++;\r\n                // If the character is none of the above, it is a special character.\r\n                else res[3]++;\r\n            }\r\n            \r\n            // Returning the vector with the counts.\r\n            return res;\r\n        }\r\n        \r\n        // Contributed By: Pranay Bansal\r\n\r\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\nclass Sol\n{\n    // Function to count the occurrences of uppercase letters, lowercase letters, digits, and special characters in a string\n    int[] count (String s)\n    {\n        int res[] = new int[4];\n    \n        // Iterate through each character in the string\n        for (int i = 0; i < s.length (); ++i)\n        {\n            // If the character is an uppercase letter, increment the count for uppercase letters\n            if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z') res[0]++;\n            \n            // If the character is a lowercase letter, increment the count for lowercase letters\n            else if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z') res[1]++;\n            \n            // If the character is a digit, increment the count for digits\n            else if (s.charAt(i) >= '0' && s.charAt(i) <= '9') res[2]++;\n            \n            // If the character is neither an uppercase letter, lowercase letter, nor digit, increment the count for special characters\n            else res[3]++;\n        }\n        \n        return res; // Return the array with counts of each type of character\n    }\n}\n\n// Contributed By: Pranay Bansal",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\r\n\r\nclass Solution:\r\n    def count (self,s):\r\n        res = [0 for i in range (4)]\r\n        \r\n        for i in s:\r\n            #Checking if the character is uppercase letter\r\n            if i >= 'A' and i <= 'Z':\r\n                res[0] += 1\r\n            \r\n            #Checking if the character is lowercase letter\r\n            elif i >= 'a' and i <= 'z':\r\n                res[1] += 1\r\n            \r\n            #Checking if the character is a digit\r\n            elif i >= '0' and i <= '9':\r\n                res[2] += 1\r\n            \r\n            #Counting other characters\r\n            else:\r\n                res[3] += 1\r\n        \r\n        return res\r\n    # Contributed By: Pranay Bansal",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "class Solution{\n    count(s){\n        let res = [0, 0, 0, 0];\n        \n        for (let i = 0; i < s.length; i++) {\n            if (s[i] >= 'A' && s[i] <= 'Z') res[0]++;\n            else if (s[i] >= 'a' && s[i] <= 'z') res[1]++;\n            else if (s[i] >= '0' && s[i] <= '9') res[2]++;\n            else res[3]++;\n        }\n        \n        return res;\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}