{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 701418,
            "title": "Ways to Reach the n'th Stair",
            "titleSlug": "count-ways-to-reach-the-nth-stair-1587115620",
            "content": "<p><span style=\"font-size: 18px;\">There are<strong> n</strong> stairs, a person standing at the bottom wants to reach the top. The person can climb either <strong>1 stair or 2 stairs </strong>at a time. Your task is to count the number of ways, the person can reach the top <strong>(order does matter).</strong></span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>n = 1\n<strong>Output: </strong>1\n<strong>Explanation: </strong>There is only one way to climb 1 stair. </span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>n = 2\n<strong>Output: </strong>2\n<strong>Explanation: </strong>There are 2 ways to reach 2th stair: {1, 1} and {2}.  </span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>n = 4\n<strong>Output: </strong>5<strong>\nExplanation: </strong></span><span style=\"font-size: 18px;\">There are five ways to reach 4th stair: {1, 1, 1, 1}, {1, 1, 2}, {2, 1, 1}, {1, 2, 1} and {2, 2}.</span>\n</pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &le; n &le; 44</span></p>",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "A person is standing at the bottom of a staircase with 'n' stairs and wants to reach the top. The person can climb either 1 stair or 2 stairs at a time.  Determine the total number of distinct ways the person can reach the top of the staircase, considering the order of steps.",
                "constraints": [
                    "1 <= n <= 44"
                ],
                "testcases": [
                    {
                        "input": "1",
                        "output": "1",
                        "explanation": "There is only one way to climb 1 stair: take one step of size 1."
                    },
                    {
                        "input": "2",
                        "output": "2",
                        "explanation": "There are two ways to reach the 2nd stair: two steps of size 1 (1, 1) or one step of size 2 (2)."
                    },
                    {
                        "input": "4",
                        "output": "5",
                        "explanation": "There are five ways to reach the 4th stair: (1, 1, 1, 1), (1, 1, 2), (1, 2, 1), (2, 1, 1), and (2, 2)."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span >Try relating the problem to the Fibonacci sequence, where each step's count depends on the sum of the two previous steps.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "sliding-window",
                "slug": "sliding-window"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "flipkart",
            "amazon",
            "microsoft",
            "oyo-rooms",
            "adobe"
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    // Function to count number of ways to reach the nth stair.\n    int countWays(int n) {\n        // we use same algorithm as Fibonacci series to find the\n        // number of ways to reach the nth stair.\n\n        // base case\n        if (n <= 1)\n            return 1;\n\n        // initializing base values for Fibonacci series.\n        int a = 1, b = 1, temp;\n\n        for (int i = 2; i <= n; i++) {\n            temp = (a + b);\n\n            // updating a as b and b as temp(sum of a and b).\n            a = b;\n            b = temp;\n        }\n\n        // returning the result.\n        return b;\n    }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n    // Function to count number of ways to reach the nth stair.\n    int countWays(int n) {\n        // we use same algorithm as Fibonacci series to find the\n        // number of ways to reach the nth stair.\n\n        // base case\n        if (n <= 1) return 1;\n\n        // initializing base values for Fibonacci series.\n        int a = 1, b = 1, temp;\n\n        for (int i = 2; i <= n; i++) {\n            temp = (a + b);\n            // updating a as b and b as temp (sum of a and b).\n            a = b;\n            b = temp;\n        }\n\n        // returning the result.\n        return b;\n    }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "#Back-end complete function Template for Python 3\n\n\nclass Solution:\n\n    #Function to count number of ways to reach the nth stair.\n    def countWays(self, n):\n        # Base case\n        if n <= 1:\n            return 1\n\n        # Initializing base values for Fibonacci series\n        a, b = 1, 1\n\n        for i in range(2, n + 1):\n            temp = a + b\n\n            # Updating a as b and b as temp (sum of a and b)\n            a = b\n            b = temp\n\n        # Returning the result\n        return b\n",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "//Back-end complete function Template for javascript\n\n/**\n * @param {number} n\n * @returns {BigInt}\n */\n\nclass Solution {\n    // Function to count number of ways to reach the nth stair.\n    countWays(n) {\n        // we use same algorithm as Fibonacci series to find the\n        // number of ways to reach the nth stair.\n\n        // base case\n        if (n <= 1) return 1;\n\n        // initializing base values for Fibonacci series.\n        let a = BigInt(1), b = BigInt(1), temp;\n\n        for (let i = 2; i <= n; i++) {\n            temp = (a + b);\n            // updating a as b and b as temp (sum of a and b).\n            a = b;\n            b = temp;\n        }\n        // returning the result.\n        return b;\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}