{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 876295,
            "title": "Count words in a Trie",
            "titleSlug": "count-words-in-a-trie",
            "content": "<p><span >You are given an array of strings <strong>s</strong> which is converted into a Trie <strong>root</strong>. You need to use the given trie root to count and return the <strong>number of words</strong> stored in the trie.<br /><strong><br />Examples:</strong></span></p>\n<pre><span ><strong>Input:</strong> s[ ] = [\"the\", \"a\", \"there\", \"answer\", \"any\", \"by\", \"bye\", \"their\"]<br /><strong>Output:</strong> 8<br /><strong>Explanation: </strong>The given array of string is converted into a trie. Now, the number of words in the trie are 8, which is the total number of words given in the array s.<br /><img src=\"https://media.geeksforgeeks.org/img-practice/prod/addEditProblem/876295/Web/Other/blobid2_1729009957.png\" alt=\"\" width=\"101\" height=\"266\" /></span></pre>\n<pre><span ><strong>Input:</strong>&nbsp;s[ ] = [</span><span style=\"font-size: 18.6667px;\">\"go\", </span><span style=\"font-size: 18.6667px;\">\"good\", </span><span style=\"font-size: 18.6667px;\">\"pin\", </span><span style=\"font-size: 18.6667px;\">\"pink\", </span><span >\"brown\"</span><span >]<br /><strong>Output:</strong> 5<br /><strong>Explanation:&nbsp;</strong>The given array of string is converted into a trie. Now, the number of words in the trie are 5, which is the total number of words given in the array s.<br /></span><br /><span ><img src=\"https://media.geeksforgeeks.org/img-practice/prod/addEditProblem/876295/Web/Other/blobid3_1729009957.png\" alt=\"\" width=\"97\" height=\"295\" /><br /></span></pre>\n<p><span ><strong>Constraints:&nbsp;</strong><br />1 &lt;= s.size() &lt;= 10<sup>3</sup><br />1 &lt;= s[i] &lt;= 10<sup>3</sup><br />s[i] contains only small case English alphabets</span></p>",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "You are given an array of strings `s` which has been used to construct a Trie rooted at `root`.  Your task is to count and return the number of words originally stored in the Trie.",
                "constraints": [
                    "1 <= s.size() <= 10^3",
                    "1 <= s[i].length <= 10^3",
                    "s[i] contains only lowercase English alphabets"
                ],
                "testcases": [
                    {
                        "input": "s = [\"the\", \"a\", \"there\", \"answer\", \"any\", \"by\", \"bye\", \"their\"]",
                        "output": "8",
                        "explanation": "The Trie was constructed from the given array of strings. The number of words in the Trie is equal to the number of strings in the original array, which is 8."
                    },
                    {
                        "input": "s = [\"go\", \"good\", \"pin\", \"pink\", \"brown\"]",
                        "output": "5",
                        "explanation": "The Trie was constructed from the given array of strings. The number of words in the Trie is equal to the number of strings in the original array, which is 5."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>There may be duplicate words in the string array.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Advanced Data Structure",
                "slug": "advanced-data-structure"
            },
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Trie",
                "slug": "trie"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    int wordCount(TrieNode* root) {\n        int result = 0;\n\n        // If this node is a leaf, it's the end of a word\n        if (root->isLeaf) {\n            result++;\n        }\n\n        // Recur for all children\n        for (int i = 0; i < TrieNode::ALPHABET_SIZE; i++) {\n            if (root->children[i] != nullptr) {\n                result += wordCount(root->children[i]);\n            }\n        }\n\n        return result;\n    }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n    public int wordCount(TrieNode root) {\n        int result = 0;\n\n        // Leaf denotes end of a word\n        if (root.isLeaf) result++;\n\n        for (int i = 0; i < root.children.length; i++) {\n            if (root.children[i] != null) {\n                result += wordCount(root.children[i]);\n            }\n        }\n        return result;\n    }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n\n    def wordCount(self, root):\n        result = 0\n\n        # If the node is a leaf, it means end of a word\n        if root.isLeaf:\n            result += 1\n\n        # Traverse all children and count words recursively\n        for i in range(len(root.children)):\n            if root.children[i] is not None:\n                result += self.wordCount(root.children[i])\n\n        return result\n",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": null,
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}