{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703995,
            "title": "Count zero",
            "titleSlug": "count-zero3710",
            "content": "<p><span style=\"font-size:18px\">Given a number d, representing the number of digits of a number. Find the total count of positive integers which have at-least one zero in them and consist d or less digits.</span><br />\n<br />\n<span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input</strong>: d = 2\n<strong>Output:</strong>&nbsp;9&nbsp;\n<strong>Explanation</strong>: There are total 9 \npositive integers which have \nat-least one zero in them \nand consist 2 or less digits.\n</span></pre>\n\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input: </strong>d = 3\n<strong>Output:&nbsp;</strong>180\n<strong>Explanation</strong>: There are total 180\npositive integers which have\nat-least one zero in them\nand consist 3 or less digits.\n</span></pre>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Your Task:&nbsp;&nbsp;</strong><br />\nYou dont need to read input or print anything. Complete the function <strong>findCountUpto()&nbsp;</strong>which takes d&nbsp;as input parameter and returns&nbsp;the total count of positive integers which have at-least one zero in them and consist d or less digits.<br />\n<br />\n<strong>Expected Time Complexity:</strong> O(logn)<br />\n<strong>Expected Auxiliary Space:</strong> O(1)<br />\n<br />\n<strong>Constraints:</strong><br />\n1&lt;= d&nbsp;&lt;=15</span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a number `d`, find the total count of positive integers with `d` or fewer digits that contain at least one zero.",
                "constraints": [
                    "1 <= d <= 15"
                ],
                "testcases": [
                    {
                        "input": "2",
                        "output": "9",
                        "explanation": "There are 9 positive integers with 2 or fewer digits containing at least one zero. These are: 10, 20, 30, 40, 50, 60, 70, 80, and 90."
                    },
                    {
                        "input": "3",
                        "output": "180",
                        "explanation": "There are 180 positive integers with 3 or fewer digits containing at least one zero."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Try to find the formula after extracting for different values of d.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "amazon"
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\nclass Solution {\n  public:\n    long long int power(long long int x,long long int y) {  \n    long long int res = 1;     // Initialize result  \n    if (x == 0) return 0; // In case x is divisible by p; \n    while (y > 0)  \n    {  \n        // If y is odd, multiply x with result  \n        if (y & 1)  \n            res = (res*x);  \n  \n        // y must be even now  \n        y = y>>1; // y = y/2  \n        x = (x*x);  \n    }  \n    return res;  \n} \n    long long int findCountUpto(long long int d) {\n    long long int Sum1 = 9*((power(10,d)-1)/9);\n    long long int Sum2 = 9*((power(9,d)-1)/8);\n \n    return (Sum1-Sum2);\n}\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}