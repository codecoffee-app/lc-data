{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 700272,
            "title": "Count zeros in a sorted matrix",
            "titleSlug": "count-zeros-in-a-sorted-matrix",
            "content": "<p><span style=\"font-size:18px\">Given a <strong>N X N&nbsp;</strong>binary Square Matrix where each row and column of the matrix is sorted in ascending order. Find the total number of <strong>zeros</strong> present in the matrix.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:\r\n</strong>N = 3\r\nA = {{0, 0, 0},\r\n&nbsp;    {0, 0, 1},\r\n&nbsp;    {0, 1, 1}}<strong>\r\nOutput: </strong>6\r\n<strong>Explanation: \r\n</strong>The first, second and third row contains 3, 2 and 1\r\nzeroes respectively.</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:\r\n</strong>N = 2\r\nA = {{1, 1},\r\n&nbsp;    {1, 1}}\r\n<strong>Output: </strong>0\r\n<strong>Explanation:\r\n</strong>There are no zeroes in any of the rows.</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou don&#39;t need to read input or print anything. Your task is to complete the function&nbsp;<strong>countZeros()&nbsp;</strong>which takes a <strong>2D matrix</strong> as input and returns the number occurring only once.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:&nbsp;</strong>O(N ).<br />\r\n<strong>Expected Auxiliary Space:&nbsp;</strong>O(1).</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints</strong><br />\r\n0 &lt; &nbsp; <strong>N</strong>&nbsp; &lt;= 10<sup>3</sup><br />\r\n0 &lt;= <strong>A[i]</strong> &lt;= 1</span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an N x N binary square matrix where each row and column is sorted in ascending order, find the total number of zeros present in the matrix.",
                "constraints": [
                    "0 < N <= 10^3",
                    "0 <= A[i] <= 1"
                ],
                "testcases": [
                    {
                        "input": "N = 3\nA = {{0, 0, 0},\n     {0, 0, 1},\n     {0, 1, 1}}",
                        "output": "6",
                        "explanation": "The matrix contains a total of 6 zeros. The rows contain 3, 2, and 1 zeros respectively."
                    },
                    {
                        "input": "N = 2\nA = {{1, 1},\n     {1, 1}}",
                        "output": "0",
                        "explanation": "The matrix contains no zeros."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Brute force would be to simply traverse the 2D array completely and count the total number of Zeros. But, this would be O(N*N). Also, in this approach, we didn&#39;t make the use of the fact that the matrix is row and column wise sorted. Can you use these 2 additional informations to come up with a linear solution? How about starting from the lower left corner and then start traversing?</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Searching",
                "slug": "searching"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\r\n\r\nclass Solution{\r\npublic:\r\n\tint countZeros(vector<vector<int>>A)\r\n\t{\r\n\t\t// start from bottom-left corner of the matrix\r\n\t\tint row = A[0].size() - 1, col = 0;\r\n        int N = A[0].size();\r\n\t\t// stores number of zeroes in the matrix\r\n\t\tint count = 0;\r\n\r\n\t\twhile (col < N)\r\n\t\t{\r\n\t\t\t// move up until you find a 0\r\n\t\t\twhile (A[row][col])\r\n\r\n\t\t\t\t// if zero is not found in current column,\r\n\t\t\t\t// we are done\r\n\t\t\t\tif (--row < 0)\r\n\t\t\t\t\treturn count;\r\n\r\n\t\t\t// add 0s present in current column to result\r\n\t\t\tcount += (row + 1);\r\n\r\n\t\t\t// move right to next column\r\n\t\t\tcol++;\r\n\t\t}\t\r\n\r\n\t\treturn count;\r\n\t}\r\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class GfG {\n    int countZeros(int A[][], int n) {\n        // initializing the row and col variables to the bottom-left corner of the matrix\n        int row = n-1;\n        int col = 0;\n        // initializing the count variable to keep track of the number of zeros\n        int count = 0;\n\n        // iterating through the columns of the matrix\n        while(col < n) {\n            // searching for the first zero in the column\n            while(A[row][col] != 0)\n                // decrementing the row index until a zero is found\n                if(--row < 0)\n                    // returning the count if there are no more rows to search\n                    return count;\n            // adding the number of rows below the found zero to the count\n            count += (row+1);\n\n            // moving to the next column\n            col++;\n        }\n        // returning the final count of zeros\n        return count;\n    }\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": "#User function Template for python3\r\n\r\nclass Solution:\r\n    # Function to count the number of zeroes in a given matrix\r\n    def countZeroes(self, A, N):\r\n        row  = N-1\r\n        col = 0\r\n        \r\n        count  = 0\r\n        # loop through the columns of the matrix\r\n        while col < N:\r\n            # loop through the rows of the matrix until a non-zero element is found or until the top row is reached\r\n            while A[row][col]:\r\n                if row < 0:\r\n                    return count \r\n                row = row - 1 \r\n            # add the number of rows with zeroes up to the current column to the count\r\n            count = count + (row + 1)\r\n            col = col + 1 \r\n        return count",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\r\n\r\n/**\r\n * @param {number[][]} A\r\n * @param {number} N\r\n * @return {number}\r\n*/\r\n\r\nclass Solution {\r\n\r\n    countZeros(A,N){\r\n        // start from bottom-left corner of the matrix\r\n        let row = A[0].length - 1;\r\n        let col = 0;\r\n        let count = 0;\r\n\r\n        while (col < N) {\r\n            // move up until you find a 0\r\n            while (A[row][col]) {\r\n                // if zero is not found in current column,\r\n                // we are done\r\n                if (--row < 0) {\r\n                    return count;\r\n                }\r\n            }\r\n\r\n            // add 0s present in current column to result\r\n            count += (row + 1);\r\n\r\n            // move right to next column\r\n            col++;\r\n        }\r\n\r\n        return count;\r\n    }\r\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}