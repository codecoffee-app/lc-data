{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703273,
            "title": "Crazy String",
            "titleSlug": "crazy-string1157",
            "content": "<p><span style=\"font-size:18px\">You have given a non-empty string. This string can consist of lowercase and uppercase english alphabets. Convert the string into an alternating sequence of lowercase and uppercase characters without changing the character at the 0th index.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong>\r\nS = &quot;geeksforgeeks&quot;\r\n<strong>Output:</strong> gEeKsFoRgEeKs\r\n<strong>Explanation</strong>: The first character is kept\r\nunchanged whereas all the characters are\r\narranged in alternating order of lowercase\r\nand uppercase.</span>\r\n</pre>\r\n\r\n<p><span style=\"font-size:18px\">\u00e2\u20ac\u2039<strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input</strong>: \r\nS = &quot;Geeksforgeeks&quot;\r\n<strong>Output:</strong> GeEkSfOrGeEkS\r\n<strong>Explanation</strong>: The first character is kept\r\nunchanged whereas all the characters are\r\narranged in alternating order of lowercase\r\nand uppercase.\r\n</span></pre>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou don&#39;t need to read input or print anything. Your task is to complete the function&nbsp;<strong>getCrazy()&nbsp;</strong>which takes the string S as input and returns the resultant string by making the stated&nbsp;modifications.</span></p>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Expected Time Complexity:&nbsp;</strong>O(|S|).<br />\r\n<strong>Expected Auxiliary Space:&nbsp;</strong>O(1).</span></p>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n1&lt;=|S|&lt;=10<sup>5</sup></span></p>\r\n\r\n<p>&nbsp;</p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">We need to keep the first character as it is. Hence, check if it is lowercase or uppercase and start the alternating sequence.</span></p>\n\n<p><span style=\"font-size:18px\">Lowercase can be converted to uppercase as follows: upper = lower - &#39;a&#39; + &#39;A&#39;;<br />\nUppercase can be converted to lowercase as follows: lower = upper - &#39;A&#39; + &#39;a&#39;;</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "string getCrazy (string S)\r\n{\r\n    // checking whether we have to start with lowercase or uppercase\r\n    bool lower;\r\n    if (S[0] >= 'a' and S[0] <= 'z')\r\n        lower = true;\r\n    else\r\n        lower = false;\r\n\r\n\r\n    for (int i = 0; i < S.length (); ++i)\r\n    {\r\n        // if we require a lowercase character at current position and it's \r\n        // an uppercase, we modify it.\r\n        if (lower)\r\n        {\r\n            if (S[i] >= 'A' and S[i] <= 'Z') S[i] = (S[i] - 'A' + 'a');\r\n            lower = false;\r\n        }\r\n        \r\n        // if we require an uppercase character at current position and it's \r\n        // a lowercase, we modify it.\r\n        else\r\n        {\r\n            if (S[i] >= 'a' and S[i] <= 'z') S[i] = (S[i] - 'a' + 'A');\r\n            lower = true;\r\n        }\r\n    }\r\n    return S;\r\n}\r\n// Contributed By: Pranay Bansal\r\n",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            }
        ],
        "platform": "GFG"
    }
}