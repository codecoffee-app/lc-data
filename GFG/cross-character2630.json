{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703695,
            "title": "Cross character",
            "titleSlug": "cross-character2630",
            "content": "<p><span style=\"font-size:18px\">Convert a given string to its cross string (i.e Diagonal from left-right and from right-left).&nbsp; </span></p>\n\n<p><span style=\"font-size:18px\">See examples for better understanding.</span></p>\n\n<p>&nbsp;</p>\n\n<p><strong><span style=\"font-size:18px\">Example 1:</span></strong></p>\n\n<pre>\n<strong><span style=\"font-size:18px\">Input:</span></strong>\n<span style=\"font-size:18px\">abc</span>\n<strong><span style=\"font-size:18px\">Output:</span></strong>\n<span style=\"font-size:18px\">a c</span> <span style=\"font-size:18px\"> b </span> <span style=\"font-size:18px\">a c</span>\n<strong><span style=\"font-size:18px\">Explanation:</span></strong>\n<span style=\"font-size:18px\">The above is the proper \ncross manner for the \ntest case.</span>\n<span style=\"font-size:18px\">a c</span>\n<span style=\"font-size:18px\"> b </span>\n<span style=\"font-size:18px\">a c</span>\n\n</pre>\n\n<p><span style=\"font-size:18px\">Example 2:</span></p>\n\n<pre>\n<strong><span style=\"font-size:18px\">Input:</span></strong>\n<span style=\"font-size:18px\">geeks</span>\n<strong><span style=\"font-size:18px\">Output:</span></strong>\n<span style=\"font-size:18px\">g   s e k   e   e k g   s</span>\n<span style=\"font-size:18px\"><strong>Explanation:</strong></span>\n<span style=\"font-size:18px\">For the 1st test case where </span>\n<span style=\"font-size:18px\">the string is geeks\n</span>\n<span style=\"font-size:18px\">G &nbsp; S\n&nbsp;E K\n&nbsp; E\n&nbsp;E K\nG &nbsp; S</span>\n\n<span style=\"font-size:18px\">The above is the proper cross </span>\n<span style=\"font-size:18px\">the manner for the test case, but </span>\n<span style=\"font-size:18px\">when printed in a single line </span>\n<span style=\"font-size:18px\">it becomes as shown in the output.</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong><span style=\"font-size:18px\">Your Task:</span></strong></p>\n\n<p><span style=\"font-size:18px\">You don&#39;t need to read input or print anything. Your task is to complete the function crossPattern() which takes the string S and returns a single string in the following way first-line output of the string concatenated with 2nd line and so on till the Nth line.</span></p>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\">Expected Time Complexity: O(N)<br />\nExpected Auxiliary Space: O(1)</span></p>\n\n<p>&nbsp;</p>\n\n<p><strong><span style=\"font-size:18px\">Constraints:</span></strong></p>\n\n<p><span style=\"font-size:18px\">1 &le; length of string&nbsp;&le; 1000</span></p>\n\n<p>&nbsp;</p>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string, transform it into its cross string representation. This involves creating a pattern where the characters form diagonals from left-to-right and right-to-left. Return the cross string as a single line by concatenating each row of the cross pattern.",
                "constraints": [
                    "1 <= length of string <= 1000"
                ],
                "testcases": [
                    {
                        "input": "abc",
                        "output": "a c b a c",
                        "explanation": "The cross pattern for 'abc' is: \na c\n b \na c\nWhen concatenated into a single line, it becomes 'a c b a c'."
                    },
                    {
                        "input": "geeks",
                        "output": "g   s e k   e   e k g   s",
                        "explanation": "The cross pattern for 'geeks' is: \nG   S\n E K\n  E\n E K\nG   S\nWhen concatenated into a single line, with the appropriate spacing, it becomes 'g   s e k   e   e k g   s'."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Try remembering the (i,j) diagonal condition and sketch pattern in your notebook.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [
            "zoho"
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution{   \npublic:\n    string crossPattern(string S){\n        int len = S.size(); \n        string ans=\"\";\n        \n        \n        // i and j are the indexes of characters  \n        // to be displayed in the ith iteration \n        // i = 0 initially and go upto length of \n        // string \n        // j = length of string initially  \n        // in each iteration of i, we increment \n        // i and decrement j, we print character \n        // only of k==i or k==j \n        \n        \n        for (int i = 0; i < len; i++) \n        { \n            int j = len -1 - i; \n            for (int k = 0; k < len; k++) \n            { \n                if (k == i || k == j) \n                    ans+=S[k]; \n                else\n                    ans+=\" \"; \n            } \n        } \n        \n        return ans;\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\nclass Solution:\n    def crossPattern(ob,S):# i and j are the indexes  \n        # of characters to be  \n        # displayed in the ith  \n        # iteration i = 0 initially  \n        # and go upto length of string \n        # j = length of string initially  \n        # in each iteration of i, we  \n        # increment i and decrement j, \n        # we print character only of \n        # k==i or k==j \n        len1=len(S)\n        ans=''\n        for i in range(0, len1): \n          \n            j = len1 -1 - i \n            for k in range(0, len1): \n              \n                if (k == i or k == j): \n                    ans+=S[k]\n                else: \n                    ans+=' '\n              \n        return ans\n        ",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n/**\n * @param {string} S\n * @returns {string}\n*/\n\nclass Solution {\n    //Function to convert a string into leetspeak.\n    crossPattern(S)\n    {\n        let len1 = S.length;\n        let ans = '';\n        for (let i = 0; i < len1; i++) {\n            let j = len1 -1 - i;\n            for (let k = 0; k < len1; k++) {\n                if (k === i || k === j) {\n                    ans += S[k];\n                } else {\n                    ans += ' ';\n                }\n            }\n        }\n        return ans;\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}