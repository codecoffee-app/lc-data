{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705260,
            "title": "Damon Prime",
            "titleSlug": "damon-prime4930",
            "content": "<p><span style=\"font-size: 18px;\">Damon is a mathematician, and he calls a integer <strong>N </strong>Damon Prime if <strong>N+1</strong> and <strong>N-1</strong> both are prime numbers. He will give you an integer <strong>N</strong>, you need to find whether the number is Damon Prime or not.&nbsp;&nbsp;<br /><strong>For example:</strong>&nbsp; 4 is a damon prime, 5&nbsp;is not a damon prime,&nbsp;102&nbsp;is a damon prime, 9 is not a damon prime, etc .&nbsp;<br /><br /><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input</strong>: N = 4\n<strong>Output:</strong>&nbsp;\"Yes\"&nbsp;\n<strong>Explanation</strong>: According to Damon 4\nis a Damon Prime.\n</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>N = 5\n<strong>Output:&nbsp;</strong>\"No\"\n<strong>Explanation</strong>: According to Damon 5\nis not a Damon Prime. \n\n</span></pre>\n<p><br /><span style=\"font-size: 18px;\"><strong>Your Task:&nbsp;&nbsp;</strong><br />You dont need to read input or print anything. Complete the function <strong>damonPrime()&nbsp;</strong>which takes N&nbsp;as input parameter and returns \"Yes\"&nbsp;if N&nbsp;is a Damon Prime&nbsp;else return \"No\".<br /><br /><strong>Expected Time Complexity:</strong> O(sqrt(N))<br /><strong>Expected Auxiliary Space:</strong> O(1)<br /><br /><strong>Constraints:</strong><br />1&lt;= N&nbsp;&lt;=10<sup>4</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "An integer N is considered a Damon Prime if both N+1 and N-1 are prime numbers. Given an integer N, determine if it is a Damon Prime.",
                "constraints": [
                    "1 <= N <= 10000"
                ],
                "testcases": [
                    {
                        "input": "4",
                        "output": "Yes",
                        "explanation": "4 is a Damon Prime because 4-1 = 3 and 4+1 = 5 are both prime numbers."
                    },
                    {
                        "input": "5",
                        "output": "No",
                        "explanation": "5 is not a Damon Prime because 5-1 = 4 is not a prime number, even though 5+1 = 6 is also not a prime number."
                    },
                    {
                        "input": "102",
                        "output": "Yes",
                        "explanation": "102 is a Damon Prime because 102-1 = 101 and 102+1 = 103 are both prime numbers."
                    },
                    {
                        "input": "9",
                        "output": "No",
                        "explanation": "9 is not a Damon Prime because 9-1 = 8 is not a prime number, and 9+1 = 10 is also not a prime number."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:14px\">Check prev and next.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Prime Number",
                "slug": "prime-number"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\nclass Solution {\n  public:\n  // Function to check if a number is prime or not\n  bool isprime(int n){\n    for(int i = 2; i*i <= n ;i++){ \n            if(n%i == 0){ \n                return false; \n            } \n        }\n    return true; \n  }\n  \n  // Function to check if a number is Damon Prime or not\n  string damonPrime(int n){\n    if(n<=2) return \"No\"; // Damon Prime numbers cannot be less than or equal to 2\n    else{\n        if(isprime(n-1) and isprime(n+1)) return \"Yes\"; // If n-1 and n+1 are both prime, then n is Damon Prime\n    }\n    return \"No\"; // Otherwise, n is not Damon Prime\n  }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    // Function to check if a number is prime or not\n    bool isPrime(int n)\n    {\n        for(int i = 2; i*i <= n ;i++)\n        { \n            if(n%i == 0)\n            { \n                return false;\n            } \n        }\n        return true;\n    }\n  \n    //Complete this function\n    public string damonPrime(int N)\n    {\n        if(N<=2) \n        { \n            return \"No\"; // Damon Prime numbers cannot be less than or equal to 2\n        }\n        else\n        {\n            if(isPrime(N-1) && isPrime(N+1)) \n            { \n                return \"Yes\"; // If n-1 and n+1 are both prime, then n is Damon Prime\n            }\n        }\n        return \"No\"; // Otherwise, n is not Damon Prime\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}