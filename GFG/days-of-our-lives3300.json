{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703723,
            "title": "Days of Our Lives",
            "titleSlug": "days-of-our-lives3300",
            "content": "<p><span style=\"font-size:18px\">Given a month with arbitrary number of days, N, and an integer&nbsp;K representing the day with which it starts. ie- 1 for Monday, 2 for Tuesday and so on.&nbsp;&nbsp;Find the number of times each day&nbsp;(Monday, Tuesday, ..., Sunday) appears in the month.&nbsp;</span></p>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\n<strong>N = </strong>31 , <strong>K = </strong>1\n<strong>Output:</strong>\n5 5 5 4 4 4 4 \n<strong>Explanation: </strong>The month starts from Monday.\nThere will be 4 days of each day\n(Sunday , Monday , etc) upto 28th of the\nMonth. Then, The successive 3 days will\nhave a extra day each. So, Monday, Tuesday\nand Wednesday will have 5 days while the\nothers will have 4 days each.</span></pre>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\n<strong>N = </strong>28, <strong>K = </strong>5\n<strong>Output:</strong>\n5 5 5 4 4 4 4 \n<strong>Explanation: </strong>Each day of the month will\nhave 4 days each and thus the Output.</span></pre>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>daysOfWeeks()</strong> which takes Integers N&nbsp; and K as input and return a&nbsp;list of 7 integers indicating number of days in each day of the week.</span></p>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(1)</span><br />\n<span style=\"font-size:18px\"><strong>Expected Auxiliary Space:</strong> O(1)</span><br />\n&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\n1 &lt;= N &lt;= 10<sup>5</sup></span><br />\n<span style=\"font-size:18px\">1 &lt;= K &lt;= 7</span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given the number of days in a month, N, and the day of the week that the month starts on, K (where 1 represents Monday, 2 represents Tuesday, and so on), determine the number of occurrences of each day of the week (Monday through Sunday) in that month.",
                "constraints": [
                    "1 <= N <= 10^5",
                    "1 <= K <= 7"
                ],
                "testcases": [
                    {
                        "input": "N = 31, K = 1",
                        "output": "5 5 5 4 4 4 4",
                        "explanation": "The month starts on Monday.  There are four full weeks, accounting for 28 days.  The remaining 3 days are Monday, Tuesday, and Wednesday, increasing the count for those days to 5."
                    },
                    {
                        "input": "N = 28, K = 5",
                        "output": "5 5 5 4 4 4 4",
                        "explanation": "Each day of the month will have 4 days each and thus the Output."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Find the number of &quot;<strong>whole</strong>&quot; weeks in the month which is equal to N/7. Add 1 to N%7 days starting from Day K. </span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    vector<int> daysOfWeeks(int N , int K) {\n        \n        vector<int> ans(7);\n        \n        int temp=N/7;       // Getting number of whole weeks.\n        int temp2=N%7;      // Getting number of days which will have 1 more day.\n        \n        for(int i=0 ; i<7 ; i++)\n            ans[i]=temp;     // Setting each day as number of whole weeks.\n        \n        for(int i=K-1,j=0;j<temp2;j++)\n        {\n            i%=7;\n            ans[i]++;      // Adding 1 to selected days.\n            i++;\n        }\n        \n        return ans;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\nclass Solution:\n    def daysOfWeeks(self, N ,K):\n        \n        temp=N//7      # Getting number of whole weeks.\n        temp2=N%7      # Getting number of days which will have 1 more day.\n        \n        ans=[temp]*7    # Setting each day as number of whole weeks.\n        \n        for i in range(K-1,K-1+temp2):\n            i%=7 \n            ans[i]+=1     # Adding 1 to Selected Days.\n            \n        return ans",
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    //Function to find the maximum difference of the adjacent elements of the given array.\n    public List<int> daysOfWeeks(int N, int K)\n    {\n        //Your code here\n        List<int> ans = new List<int>(7);\n        \n        int temp = N / 7;       // Getting number of whole weeks.\n        int temp2 = N % 7;      // Getting number of days which will have 1 more day.\n        \n        for (int i = 0; i < 7; i++)\n            ans.Add(temp);     // Adding each day as number of whole weeks.\n        \n        for (int i = K - 1, j = 0; j < temp2; j++)\n        {\n            i %= 7;\n            ans[i]++;      // Adding 1 to selected days.\n            i++;\n        }\n        \n        return ans;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}