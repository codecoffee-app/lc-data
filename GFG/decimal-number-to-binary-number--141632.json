{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 706413,
            "title": "Decimal number to binary number",
            "titleSlug": "decimal-number-to-binary-number--141632",
            "content": "<p><span style=\"font-size:18px\">Given a decimal number N in string format, compute its binary equivalent.</span></p>\n\n<p><br />\n<strong style=\"font-size:18px\">Example 1:</strong></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input: </strong>N = 7\n<strong>Output: </strong>111</span>\n</pre>\n\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input: </strong>N = 33\n<strong>Output: </strong>100001</span></pre>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nYou have to print its binary form. Don&#39;t need to add new line. Complete the function <strong>toBinary()</strong> which takes the decimal number N as input parameter and prints its binary equivalent.</span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a decimal number N represented as a string, convert it to its binary equivalent and print the binary representation.",
                "constraints": [],
                "testcases": [
                    {
                        "input": "7",
                        "output": "111",
                        "explanation": "The decimal number 7 is equivalent to 111 in binary."
                    },
                    {
                        "input": "33",
                        "output": "100001",
                        "explanation": "The decimal number 33 is equivalent to 100001 in binary."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Use an array to store bit sets.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "CPP",
                "slug": "cpp"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C",
                "full_func": "//Back-end complete function Template for C\n\nvoid toBinary(char N[])\n{\n    int binaryNum[1000];\n    int B = atoi(N);\n    \n    int i = 0;\n    \n    if(B == 0){\n        printf(\"0\");\n        return;\n    }\n    \n    while (B > 0) {\n \n        // storing remainder in binary array\n        binaryNum[i] = B % 2;\n        B = B / 2;\n        i++;\n    }\n    \n    for (int j = i - 1; j >= 0; j--)\n        printf(\"%d\", binaryNum[j]);\n        \n    \n}",
                "lang_text": "c"
            },
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nclass Solution{\n    public:\n        void toBinary(string N)\n    {\n        int binaryNum[1000];\n        int B = stoi(N);\n        \n        int i = 0;\n        \n        if(B == 0){\n            printf(\"0\");\n            return;\n        }\n        \n        while (B > 0) {\n     \n            // storing remainder in binary array\n            binaryNum[i] = B % 2;\n            B = B / 2;\n            i++;\n        }\n        \n        for (int j = i - 1; j >= 0; j--)\n            printf(\"%d\", binaryNum[j]);\n            \n        \n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    //Function to convert a given number N to a string in binary.\n    public void toBinary(string N)\n    {\n        int B = int.Parse(N);\n        string binaryNum = \"\";\n        \n        if(B == 0){\n            binaryNum = \"0\";\n        }\n        else{\n            while (B > 0) {\n                // storing remainder in binary string\n                binaryNum = (B % 2).ToString() + binaryNum;\n                B = B / 2;\n            }\n        }\n        \n        Console.Write(binaryNum);\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}