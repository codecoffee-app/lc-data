{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703559,
            "title": "Demonitisation",
            "titleSlug": "demonitisation0013",
            "content": "<p><span style=\"font-size: 18px;\">Given 3 Strings S, M and N. Your task is to remove occurences of M and N completely from the given string S. After removing every occurence of M and N from the string S, if S becomes empty, then return -1.<br /><br /><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong>\n<strong>S = </strong>abc\n<strong>m = </strong>ab\n<strong>n = </strong>bc\n<strong>Output:</strong>\n-1\n<strong>Explanation: </strong>When we remove the two strings,\nwe get an empty string and thus the Output -1.</span>\n</pre>\n<p><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong>\n<strong>S = </strong> abbbccab \n<strong>m = </strong>ab\n<strong>n = </strong>bcc\n<strong>Output:</strong>\nb\n<strong>Explanation: </strong>There are two instance of the String\n\"ab\" in S and one occurence of \"bcc\". Removing\nthese from S we get \"b\".</span>\n</pre>\n<p><span style=\"font-size: 18px;\"><strong>Example 3:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong>\n<strong>S = </strong> geeksforgks\n<strong>m = </strong>for\n<strong>n = </strong>gks\n<strong>Output:</strong>\ngeeks\n<strong>Explanation: </strong>After removing m and n from the String\nS we get \"geeks\".\n</span></pre>\n<p>&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Your Task:</strong><br />You don't need to read input or print anything. Your task is to complete the function <strong>demonitize</strong><strong>()</strong> which takes Strings S , m and n as input and returns the answer.</span></p>\n<p>&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong> O(|S|<sup>2</sup>)<br /><strong>Expected Auxiliary Space:</strong> O(|S|)</span></p>\n<p>&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &lt;= |S| &lt;= 1000<br />1 &lt;= |n| , |m| &lt;= |S|</span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given three strings, S, M, and N, your task is to remove all occurrences of M and N completely from S. If, after removing all instances of M and N, the resulting string S is empty, return -1. Otherwise, return the modified string S.",
                "constraints": [
                    "1 <= |S| <= 1000",
                    "1 <= |n|, |m| <= |S|"
                ],
                "testcases": [
                    {
                        "input": "S = abc\nm = ab\nn = bc",
                        "output": "-1",
                        "explanation": "Removing 'ab' and 'bc' from 'abc' results in an empty string."
                    },
                    {
                        "input": "S = abbbccab\nm = ab\nn = bcc",
                        "output": "b",
                        "explanation": "Removing two instances of 'ab' and one instance of 'bcc' from 'abbbccab' results in 'b'."
                    },
                    {
                        "input": "S = geeksforgks\nm = for\nn = gks",
                        "output": "geeks",
                        "explanation": "Removing 'for' and 'gks' from 'geeksforgks' results in 'geeks'."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Remove all occurences of m and n from S and check whether it&#39;s empty or not.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Hash",
                "slug": "hash"
            },
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\r\n  public:\r\n    string demonitize(string S, string m, string n) {\r\n\r\n        // First we create an empty List of size |S|with each element\r\n        // marked 0. We would mark elemnts that are to be removed with 1.\r\n\r\n        int f[S.length()] = {0};\r\n\r\n        for (int i = 0; i < S.length(); i++) {\r\n            // We check each Substring of length |m| and |n|. If a substring\r\n            // matches m or n. We mark all the positions of the substring as 1.\r\n\r\n            string check = \"\";\r\n\r\n            for (int j = i; j < i + m.length(); j++) check += S[j];\r\n\r\n            if (check == m) {\r\n                for (int j = i; j < i + m.length(); j++) f[j] = 1;\r\n            }\r\n\r\n            check = \"\";\r\n\r\n            for (int j = i; j < i + n.length(); j++) check += S[j];\r\n\r\n            if (check == n) {\r\n                for (int j = i; j < i + n.length(); j++) f[j] = 1;\r\n            }\r\n        }\r\n\r\n        string ans;\r\n\r\n        for (int i = 0; i < S.length(); i++) {\r\n            if (f[i] == 0)\r\n                ans +=\r\n                    S[i]; // elements marked 0 are concatenated to the answer.\r\n        }\r\n        if (ans.length() == 0)\r\n            ans = \"-1\"; // If the whole String S is removed answer is -1.\r\n\r\n        return ans;\r\n    }\r\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\r\n    static String demonitize(String S, String m, String n) {\r\n\r\n        // First we create an empty List of size |S|with each element\r\n        // marked 0. We would mark elemnts that are to be removed with 1.\r\n\r\n        int[] f = new int[S.length()];\r\n        Arrays.fill(f, 0);\r\n\r\n        char[] s = S.toCharArray(); // Converting String S to CharArray.\r\n\r\n        for (int i = 0; i < S.length(); i++) {\r\n            // We check each Substring of length |m| and |n|. If a substring\r\n            // matches m or n. We mark all the positions of the substring as 1.\r\n\r\n            String check = \"\";\r\n\r\n            for (int j = i; j < i + m.length(); j++) {\r\n                if (j >= S.length()) break;\r\n                check += s[j];\r\n            }\r\n\r\n            if (check.equals(m)) {\r\n                for (int j = i; j < i + m.length(); j++) f[j] = 1;\r\n            }\r\n\r\n            check = \"\";\r\n\r\n            for (int j = i; j < i + n.length(); j++) {\r\n                if (j >= S.length()) break;\r\n                check += s[j];\r\n            }\r\n\r\n            if (check.equals(n)) {\r\n                for (int j = i; j < i + n.length(); j++) f[j] = 1;\r\n            }\r\n        }\r\n\r\n        String ans = \"\";\r\n\r\n        for (int i = 0; i < S.length(); i++) {\r\n            if (f[i] == 0)\r\n                ans +=\r\n                    s[i]; // elements marked 0 are concatenated to the answer.\r\n        }\r\n        if (ans.length() == 0)\r\n            ans = \"-1\"; // If the whole String S is removed answer is -1.\r\n\r\n        return ans;\r\n    }\r\n};",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "#Back-end complete function Template for Python 3\r\n\r\nclass Solution:\r\n    def demonitize(self, S , m , n):\r\n        # First we create an empty List of size |S|with each element\r\n        # marked 0. We would mark elemnts that are to be removed with 1.\r\n        \r\n        f=[0]*len(S)\r\n        \r\n        for i in range(len(S)):\r\n            \r\n            # We check each Substring of length |m| and |n|. If a substring\r\n            # matches m or n. We mark all the positions of the substring as 1.\r\n            \r\n            if S[i:i+len(m)]==m:\r\n                for j in range(i,i+len(m)):\r\n                    f[j]=1 \r\n            if S[i:i+len(n)]==n:\r\n                for j in range(i,i+len(n)):\r\n                    f[j]=1\r\n            ans=\"\"\r\n            for i in range(len(S)):\r\n                if f[i]==0:\r\n                    ans+=S[i]         # elements marked 0 are concatenated to the answer.\r\n            if len(ans)==0:\r\n                ans=\"-1\"              # If the whole String S is removed answer is -1.\r\n        \r\n        return ans",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n/**\n * @param {string} S\n * @param {string} m\n * @param {string} n\n * @returns {string}\n*/\n\nclass Solution {\n    //Function to find the modified string after demonitization.\n    demonitize(S, m, n) {\n        let f = new Array(S.length).fill(0);\n        \n        for (let i = 0; i < S.length; i++) {\n            if (S.substring(i, i + m.length) === m) {\n                for (let j = i; j < i + m.length; j++) {\n                    f[j] = 1;\n                }\n            }\n            if (S.substring(i, i + n.length) === n) {\n                for (let j = i; j < i + n.length; j++) {\n                    f[j] = 1;\n                }\n            }\n        }\n        \n        let ans = \"\";\n        for (let i = 0; i < S.length; i++) {\n            if (f[i] === 0) {\n                ans += S[i];\n            }\n        }\n        \n        if (ans.length === 0) {\n            ans = \"-1\";\n        }\n        \n        return ans;\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}