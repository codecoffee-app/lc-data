{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 706458,
            "title": "Design HashMap",
            "titleSlug": "design-hashmap",
            "content": "<p><span style=\"font-size:18px\">Design a HashMap&nbsp;without using any built-in hash table libraries.</span></p>\r\n\r\n<p><span style=\"font-size:18px\">To be specific, your design should include these functions:</span></p>\r\n\r\n<ul>\r\n\t<li><span style=\"font-size:18px\"><code>put(key, value)</code>&nbsp;:&nbsp;Insert a (key, value) pair into the HashMap. If the value already exists in the HashMap, update the value.</span></li>\r\n\t<li><span style=\"font-size:18px\"><code>get(key)</code>: Returns the value to which the specified key is mapped, or -1 if this map contains no mapping for the key.</span></li>\r\n\t<li><span style=\"font-size:18px\"><code>remove(key)</code>&nbsp;:&nbsp;Remove the mapping for the value key if this map contains the mapping for the key.</span><br />\r\n\t&nbsp;</li>\r\n</ul>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:\r\n</strong>n = 8\r\nput(1,1)&nbsp;\r\nput(2,2)\r\nget(1)&nbsp;\r\nget(3)\r\nput(2,1)&nbsp;\r\nget(2)\r\nremove(2)\r\nget(2)\r\n<strong>Output: \r\n</strong>1\r\n-1\r\n1\r\n-1<strong>\r\nExplanation: \r\n</strong></span></pre>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\">MyHashMap hashMap = new MyHashMap();\r\nhashMap.put(1, 1);// Now the value of key 1 is 1. &nbsp; &nbsp; &nbsp; &nbsp;\r\nhashMap.put(2, 2);// Now the value of key 2 is 2. \r\nhashMap.get(1);// returns 1\r\nhashMap.get(3);// returns -1 (not found)\r\nhashMap.put(2, 1);// update the existing value of key 2 to 1.\r\nhashMap.get(2);// returns 1 \r\nhashMap.remove(2);// remove the mapping for 2.\r\nhashMap.get(2);// returns -1 (not found)</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:\r\n</strong>n = 3\r\nput(1,1)&nbsp;\r\nput(2 2)\r\nget(2)\r\n<strong>Output: </strong>\r\n2<strong>\r\nExplanation:\r\n</strong>hashMap.put(1,1)//<strong> </strong>Now the value of key 1 is 1.\r\nhashMap.put(2,2)// Now the value of key 2 is 2.\r\nhashMap.get(2)// Returns 2. &nbsp; &nbsp;</span>\r\n</pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou only need to <strong>complete </strong>the provided function <strong>put(), remove(),&nbsp;get().&nbsp;</strong></span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:&nbsp;</strong>O(1) for&nbsp;<strong>put(), remove(),&nbsp;get().</strong><br />\r\n<strong>Expected Auxiliary Space:&nbsp;</strong>O(n) for&nbsp;<strong>put(), remove(),&nbsp;get().</strong></span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n1 &lt;= q&nbsp;&lt;= 10<sup>4</sup><br />\r\n1 &lt;= key&nbsp;&lt;= 10<sup>4</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p>Use concept of frequency array.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Hash",
                "slug": "hash"
            },
            {
                "name": "Map",
                "slug": "map"
            },
            {
                "name": "Design-Pattern",
                "slug": "design-pattern"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nclass MyHashMap {\npublic:\n    /** Initialize your data structure here. */\n    //Constructor to initialize the data structure\n    MyHashMap() {\n        A.resize(10001, -1); //Resizing the vector A and setting all values to -1\n    }\n\n    /** value will always be non-negative. */\n    //Function to put the key-value pair in the hashmap\n    void put(int key, int value) {\n        A[key] = value; //Setting the value at index key to the given value\n    }\n\n    /** Returns the value to which the specified key is mapped, or -1 if this map contains no mapping for the key */\n    //Function to get the value associated with the given key\n    int get(int key) {\n        return A[key]; //Returning the value at index key\n    }\n\n    /** Removes the mapping of the specified value key if this map contains a mapping for the key */\n    //Function to remove the key-value pair from the hashmap\n    void remove(int key) {\n        A[key] = -1; //Setting the value at index key to -1\n    }\n\nprivate:\n    vector<int> A; //Vector to store the key-value pairs\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\nclass MyHashMap {\n    //initialize an array to store key-value pairs\n    int A[];\n\n    /** Initialize your data structure here. */\n    MyHashMap() {\n        //initialize the array with a size of 10001 and fill it with -1\n        A=new int[10001];\n        Arrays.fill(A,-1);\n    }\n\n    /** value will always be non-negative. */\n    void put(int key, int value) {\n        //store the value at the given key in the array\n        A[key] = value;\n    }\n\n    /** Returns the value to which the specified key is mapped, or -1 if this map contains no mapping for the key */\n    int get(int key) {\n        //return the value stored at the given key in the array\n        return A[key];\n    }\n\n    /** Removes the mapping of the specified value key if this map contains a mapping for the key */\n    void remove(int key) {\n        //set the value at the given key to -1, indicating that the mapping is removed\n        A[key]=-1;\n    }\n}",
                "lang_text": "java"
            }
        ],
        "platform": "GFG"
    }
}