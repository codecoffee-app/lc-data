{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 878381,
            "title": "Diagonal sum",
            "titleSlug": "diagonal-sum--103215",
            "content": "<p><span >Given a square matrix of size 4*4, calculate the sum of the elements on the main diagonal and the secondary diagonal.</span></p>\n<p><strong><span >Examples:<br /></span></strong></p>\n<pre><strong><span >Input: </span></strong><span >arr[][]= [[1, 2, 3, 4], [2, 3, 4, 5], [3, 4, 5, 6], [4, 5, 6, 7]]<br /><strong>Output: </strong>32<br /><strong>Explanation: </strong>main diagonal sum is 16 and secondary diagonal sum is 16, 16+16= 32.<br /></span></pre>\n<pre><strong><span >Input: </span></strong><span >arr[][]= [[3, 2, 1, 0], [0, 3, 2, 7], [4, 4, 2, 2], [5, 5, 3, 6]]<br /><strong>Output: </strong>25<br /><strong>Explanation: </strong>one diagonal sum is 14 and other diagonal sum is 11, 14+11= 25.</span><span ><br /></span></pre>\n<pre><strong><span >Input: </span></strong><span >arr[][]= [[0, 0, 0, 1], [0, 0, 1, 0], [0, 1, 0, 0], [1, 0, 0, 0]]<br /><strong>Output: </strong>4<br /><strong>Explanation: </strong>one diagonal sum is 0 and other diagonal sum is 14, 0+4= 4.</span></pre>\n<p><strong><span >Constraints:<br /></span></strong><span >0&lt;=arr[i][j]&lt;=1e5</span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nclass Solution {\n  public:\n    // Function to find sum of diagonals\n    int diagonalSum(int arr[4][4]) {\n        int sum = 0;\n        for (int i = 0; i < 4; i++) {\n            sum += arr[i][i] + arr[3 - i][i];\n        }\n        return sum;\n    }\n};\n",
                "lang_text": "cpp"
            }
        ],
        "platform": "GFG"
    }
}