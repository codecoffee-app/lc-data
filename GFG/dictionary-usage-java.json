{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 700923,
            "title": "Dictionary Usage - Java",
            "titleSlug": "dictionary-usage-java",
            "content": "<p dir=\"ltr\"><span style=\"font-size:18px\"><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial\">Given two arrays </span><strong>pages</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial\"> and </span><strong>words </strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial\">of size </span><strong>n</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial\">. The array of pages contains the page numbers and array of words contains <strong>n</strong> words. You have to map each word corresponding to its page number and you need to find the word that is mapped to page number x. If there is no word on x, print null.</span></span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Input Format:</strong><br />\r\nThe first line of input contains T denoting thr number of testcases. T testcases follow. Each testcase contains 2 lines of input. The first line contains the number of words n and x. The second line contains the n&nbsp; page numbers separated by space. The third line contains n words separated by space. The ith index of word array corresponds to ith index of page numbers array. .</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Output Format:</strong><br />\r\nFor each testcase, in a new line, print the required answer.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nSince this is a function problem, you don&#39;t need to take any input. Just complete the function <strong>Dictionary()</strong>.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n1 &lt;= T &lt;= 100<br />\r\n1 &lt;= n &lt;= 1000</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Examples:</strong><br />\r\n1<br />\r\n5 600<br />\r\n123 345 456 500 550<br />\r\nlearn code practice study geeks<br />\r\n<strong>Output:</strong></span><br />\r\n<span style=\"font-size:18px\">null</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Explanation:<br />\r\nTestcase1:</strong></span><br />\r\n<span style=\"font-size:18px\">There is no word in the dictionary at page number 600 so it prints <strong>null.</strong></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Misc",
                "slug": "misc"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "Java",
                "full_func": "class Geeks {\n  \n    // function to create a dictionary using Hashtable\n    // using pages as keys and words as values\n    public static void Dictionary(int pages[], String words[], int pg) {\n        int n = pages.length;\n        Dictionary dn = new Hashtable();\n        \n        // adding each element from the pages array as key\n        // and corresponding word from words array as value\n        for(int i = 0; i < n; i++)\n            dn.put(pages[i], words[i]);\n        \n        // printing the word corresponding to the given page(pg)\n        System.out.println(dn.get(pg));\n    }\n}",
                "lang_text": "java"
            }
        ],
        "platform": "GFG"
    }
}