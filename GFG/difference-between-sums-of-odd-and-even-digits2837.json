{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704411,
            "title": "Difference between sums of odd and even digits",
            "titleSlug": "difference-between-sums-of-odd-and-even-digits2837",
            "content": "<p><span style=\"font-size: 18px;\">Given a number S in the form of string, the task is to check whether the sum of digits at odd places is equal to the sum of digits at even places or not.</span></p>\n<p><strong><span style=\"font-size: 18px;\">Example 1:</span></strong></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong> S = \"132\"\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> The sum of digits at odd \nplaces is 1+2=3. Similarly the sum of \ndigits at even places is 3. Since they \nare equal,the answer is 1.</span></pre>\n<p><strong><span style=\"font-size: 18px;\">Example 2:</span></strong></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong> S = \"123\"\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> The sum of digits at odd \nplaces is 1+3=4. The sum of digits at \neven places is 2. Since,the sums are \nnot equal,Thus answer is 0.</span></pre>\n<p><br /><span style=\"font-size: 18px;\"><strong>Your Task:</strong><br />You don't need to read input or print anything.Your task is to complete the function <strong>oddAndEven()</strong> which takes an integer S&nbsp;(in the form of string) as input parameter and returns 1 if the sum of digits at odd places is equal to the sum of digits at even places.Otherwise, it returns 0.</span></p>\n<p><br /><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong>O(|S|)<br /><strong>Expected Auxillary Space:</strong>O(1)</span></p>\n<p><br /><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1&le; |S| &le; 10<sup>5</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a number S represented as a string, determine if the sum of digits at odd indices equals the sum of digits at even indices (0-based indexing). Return 1 if they are equal, and 0 otherwise.",
                "constraints": [
                    "1 <= |S| <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "132",
                        "output": "1",
                        "explanation": "Odd indices (0 and 2): 1 + 2 = 3. Even index (1): 3. The sums are equal, so the answer is 1."
                    },
                    {
                        "input": "123",
                        "output": "0",
                        "explanation": "Odd indices (0 and 2): 1 + 3 = 4. Even index (1): 2. The sums are not equal, so the answer is 0."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Just traverse the string and keep on adding digits that appear at odd and even places separately.Then, check whether they are equal or not.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "// Back-end complete function Template for C++\n\nclass Solution {\n  public:\n    // Function to check if sum of digits at odd and even positions are equal.\n    int oddAndEven(string S) {\n        int i, even = 0, odd = 0;\n        // iterating over all characters in the string.\n        for (i = 0; i < S.length(); i++) {\n            // If index is odd, add the character converted to integer to the even sum.\n            if (i % 2)\n                even += S[i] - '0';\n            // If index is even, add the character converted to integer to the odd sum.\n            else\n                odd += S[i] - '0';\n        }\n        // If the sum of digits at odd positions is equal to the sum of digits at even positions, return 1. Otherwise, return 0.\n        return even == odd;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "// Back-end complete function Template for Java\n\nclass Solution {\n    // Function to check if the sum of the odd-indexed digits\n    // is equal to the sum of the even-indexed digits in the string.\n    int oddAndEven(String S) {\n        int i, even = 0, odd = 0;\n        // Loop through the characters in the string.\n        for (i = 0; i < S.length(); i++) {\n            // If the index is odd, add the digit to even sum.\n            if (i % 2 != 0)\n                even += S.charAt(i) - '0';\n            // If the index is even, add the digit to odd sum.\n            else\n                odd += S.charAt(i) - '0';\n        }\n        // Return 1 if the sums are equal, 0 otherwise.\n        return (even == odd ? 1 : 0);\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\nclass Solution:\n\n    #Function to check if sum of digits at odd and even positions are equal.\n    def oddAndEven(self, S):\n\n        odd, even = 0, 0\n\n        #iterating over each character in the string.\n        for i in range(len(S)):\n\n            #if current index is odd, adding the digit to even sum.\n            if i % 2:\n                even += int(S[i])\n\n            #if current index is even, adding the digit to odd sum.\n            else:\n                odd += int(S[i])\n\n        #returning 1 if sums at odd and even positions are equal, else return 0.\n        return 1 if even == odd else 0",
                "lang_text": "py"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution {\n    //Complete this function\n    public int oddAndEven(string S) {\n        int even = 0;\n        int odd = 0;\n        // iterating over all characters in the string.\n        for (int i = 0; i < S.Length; i++) {\n            // If index is odd, add the character converted to integer to the even sum.\n            if (i % 2 == 1)\n                even += S[i] - '0';\n            // If index is even, add the character converted to integer to the odd sum.\n            else\n                odd += S[i] - '0';\n        }\n        // If the sum of digits at odd positions is equal to the sum of digits at even positions, return 1. Otherwise, return 0.\n        return even == odd ? 1 : 0;\n    }\n}",
                "lang_text": "csharp"
            },
            {
                "lang": "Javascript",
                "full_func": "// User function Template for javascript\n/**\n * @param {string} S\n * @returns {number}\n */\n\nclass Solution {\n    // Function to check whether sum of digits at even and odd places are equal.\n    oddAndEven(S) {\n        let odd = 0;\n        let even = 0;\n        for (let i = 0; i < S.length; i++) {\n            if (i % 2 === 0) {\n                odd += parseInt(S[i]);\n            } else {\n                even += parseInt(S[i]);\n            }\n        }\n        return (even === odd) ? 1 : 0;\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}