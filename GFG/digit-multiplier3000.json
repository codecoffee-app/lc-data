{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704702,
            "title": "Digit multiplier",
            "titleSlug": "digit-multiplier3000",
            "content": "<p><span style=\"font-size:18px\">Given a positive integer <strong>N</strong>, find the smallest number <strong>S </strong>such that the product of all the digits of <strong>S </strong>is equal to the number <strong>N</strong>. If there&#39;s no such number, Print &quot;-1&quot;.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\r\n<span style=\"font-size:18px\"><strong>N = </strong>100</span>\r\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\r\n<span style=\"font-size:18px\">455</span>\r\n<span style=\"font-size:18px\"><strong>Explanation:</strong></span>\r\n<span style=\"font-size:18px\">4*5*5 = 100. There are no numbers\r\nless than 455 with the product of\r\nit&#39;s digit as 100.</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\r\n<span style=\"font-size:18px\"><strong>N = </strong>26</span>\r\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\r\n<span style=\"font-size:18px\">-1</span>\r\n<span style=\"font-size:18px\"><strong>Explanation:</strong></span>\r\n<span style=\"font-size:18px\">There are no numbers which can form\r\na product of 26 with its digits.</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>getSmallest()</strong> which takes an Integer N as input and returns the answer as a String.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(log(N))<br />\r\n<strong>Expected Auxiliary Space:</strong> O(1)</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong></span><br />\r\n<span style=\"font-size:18px\">1 &lt;= N &lt;= 10<sup>9</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a positive integer N, find the smallest number S such that the product of all the digits of S is equal to N. If no such number exists, return -1.",
                "constraints": [
                    "1 <= N <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "100",
                        "output": "455",
                        "explanation": "The digits 4, 5, and 5 multiply to 100 (4 * 5 * 5 = 100). There is no smaller number whose digits have a product of 100."
                    },
                    {
                        "input": "26",
                        "output": "-1",
                        "explanation": "There is no combination of digits whose product equals 26."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">If the number has a prime factor greater than 10, then it&#39;s impossible to find the required answer.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Numbers",
                "slug": "numbers"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "amazon",
            "factset"
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function template in C++\n\nclass Solution {\n  public:\n    //Function to get smallest number with given factors.\n    string getSmallest(long long N) {\n        \n        //if N is already 1, return \"1\"\n        if(N==1)\n            return \"1\";\n        \n        //array to store count of each factor from 2 to 9\n        int arr[10]={0};\n        \n        //loop to find factors of N from 9 to 2\n        for(int i=9 ; i>=2 && N>1 ; i--)\n        {\n            //finding factors of N and increasing count of that factor\n            while(N%i == 0)\n            {\n                N/=i;\n                arr[i]++;\n            }\n        }\n        \n        //string to store the smallest number\n        string ans=\"\";\n        \n        //loop to add factors to ans string\n        for(int i=2 ; i<=9 ; i++)\n        {\n            for(int j=0 ; j<arr[i] ; j++)\n            {\n                ans+=(i+'0');\n            }\n        }\n            \n        //if N is still not 1 i.e. N has a factor greater than 9,\n        //then smallest number is not possible so set ans to \"-1\"\n        if(N!=1)\n            ans=\"-1\";\n        \n        //returning the smallest number\n        return ans;\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}