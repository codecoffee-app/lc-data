{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704679,
            "title": "Dimensions of Rectangle",
            "titleSlug": "dimensions-of-rectangle5440",
            "content": "<p><span style=\"font-size:18px\">You are required to build some sheets of rectangular shape of Area <strong>A</strong>. To build a sheet of an &nbsp;Area A of Dimensions L &amp; B. You have two conditions:<br />\n1) L and B can not be in decimals.<br />\n2) When L and B are even, L must be Equal to B.<br />\nCalculate the number of possible choices to build a sheet of area A.</span></p>\n\n<p><strong><span style=\"font-size:18px\">Example 1:</span></strong></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong> A = 4\n<strong>Output:</strong> 2\n<strong>Explaination:</strong> The possible combinations are (1, 4) \nand (2, 2). Note that order does not matter. (1, 4) \nand (4, 1) are same.</span></pre>\n\n<p><strong><span style=\"font-size:18px\">Example 2:</span></strong></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong> A = 7\n<strong>Output:</strong> 1\n<strong>Explaination:</strong> The only possible combination is (1, 7).</span></pre>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nYou do not need to read input or print anything. Your task is to complete the function<strong> rectangleCount()</strong> which takes A as input parameters and returns the number of possible combinations of (L, B).</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O( sqrt(A) )<br />\n<strong>Expected Auxiliary Space:</strong> O(1)</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\n1 &le; A &le; 10<sup>5</sup></span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an area `A`, determine the number of possible rectangular sheets that can be constructed with integer length `L` and breadth `B` such that `L * B = A`. The following conditions must be met:\n\n1.  `L` and `B` must be integers (no decimals allowed).\n2.  If both `L` and `B` are even, then `L` must be equal to `B`.",
                "constraints": [
                    "1 <= A <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "4",
                        "output": "2",
                        "explanation": "The possible combinations are (1, 4) and (2, 2).  Note that the order does not matter (1, 4) is the same as (4, 1). In this case both length and breadth are even so only the case where both are equal matters so (2,2) is considered"
                    },
                    {
                        "input": "7",
                        "output": "1",
                        "explanation": "The only possible combination is (1, 7)."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Get all possible combinations of L and B.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Combinatorial",
                "slug": "combinatorial"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "// Back-end complete function Template for C++\n\nclass Solution{\npublic:\n    // Function to count the number of rectangles\n    int rectangleCount(int A){\n        int count = 0, n = A;\n        \n        // Loop to check all possible pairs of dimensions\n        for(int i = 1; i <= sqrt(n); i++){\n            if(n%i == 0){\n                // If both dimensions are even, increment count\n                if((n/i)%2 == 0 && i%2 == 0){\n                    if(n/i == i)\n                        count++;\n                }\n                // If one dimension is odd, increment count\n                else if((n/i)%2 != 0 || i%2 != 0)\n                    count++;\n            }\n        }\n        return count;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    public int rectangleCount(int A)\n    {\n        int count = 0, n = A;\n        \n        // Loop to check all possible pairs of dimensions\n        for(int i = 1; i <= Math.Sqrt(n); i++)\n        {\n            if(n%i == 0)\n            {\n                // If both dimensions are even, increment count\n                if((n/i)%2 == 0 && i%2 == 0)\n                {\n                    if(n/i == i)\n                        count++;\n                }\n                // If one dimension is odd, increment count\n                else if((n/i)%2 != 0 || i%2 != 0)\n                    count++;\n            }\n        }\n        return count;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}