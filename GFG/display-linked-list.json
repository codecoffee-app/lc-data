{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 702060,
            "title": "Display Linked List",
            "titleSlug": "display-linked-list",
            "content": "<p><span style=\"font-size:18px\">Given a singly linked list of integers. The task is to display the linked list.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:\n</strong>LinkedList: 1-&gt;2-&gt;3-&gt;4-&gt;5\n<strong>Output: </strong>1 2 3 4 5</span>\n</pre>\n\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\n1 &lt;= Number of nodes &lt;= 100<br />\n0 &lt;= value of nodes&lt;= 10<sup>3</sup></span></p>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nYour task is to complete the given function <strong>displayList</strong>(), which takes head reference as argument and return the linkedlist as an array.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:&nbsp;</strong>O(N).<br />\n<strong>Expected Auxiliary Space:&nbsp;</strong>O(1).</span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a singly linked list of integers, the task is to display the linked list as an array of integers.",
                "constraints": [
                    "1 <= Number of nodes <= 100",
                    "0 <= value of nodes <= 1000"
                ],
                "testcases": [
                    {
                        "input": "LinkedList: 1->2->3->4->5",
                        "output": "1 2 3 4 5",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>void displayList(Node head)<br />\n{<br />\n&nbsp;&nbsp;&nbsp; while(head)<br />\n&nbsp;&nbsp;&nbsp; {<br />\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; print(head.data)<br />\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; head=head.next<br />\n&nbsp;&nbsp;&nbsp; }<br />\n}</p>"
        ],
        "relatedTopics": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nvector<int> displayList(Node *head)\n{\n    vector<int> list;\n    while(head)\n    {\n        list.push_back(head->data);\n        head=head->next;\n    }\n    return list;\n}\n",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\n\nclass Get\n{\n    public static ArrayList<Integer> displayList(Node head)\n    {\n        ArrayList<Integer> list = new ArrayList<Integer>();\n        Node temp = head;\n        while(temp != null)\n        {\n           list.add(temp.data);\n            temp = temp.next;\n        }\n            \n        return list;\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\ndef displayList(head):\n    l = []\n    while head:\n        l.append(head.data)\n        head=head.next\n    return l",
                "lang_text": "py"
            },
            {
                "lang": "Javascript",
                "full_func": "//Back-end complete function Template for javascript\n\nclass Solution {\n  displayList(head){\n    let res = [];\n    while(head){\n      res.push(head.data);\n      head = head.next;\n    }\n    return res;\n  }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}