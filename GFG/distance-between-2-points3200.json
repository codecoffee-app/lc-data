{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703978,
            "title": "Distance between 2 points",
            "titleSlug": "distance-between-2-points3200",
            "content": "<p><span style=\"font-size:18px\">Given coordinates of <strong>2</strong> points on a cartesian plane, find&nbsp;the distance between them rounded up to nearest integer. </span></p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input: </strong>0 0 2 -2\n<strong>Output: </strong>3\n<strong>Explanation: </strong>Distance between (0, 0) \nand (2, -2) is 3.</span>\n</pre>\n\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input: </strong>-20 23 -15 68\n<strong>Output: </strong>45\n<strong>Explanation: </strong>Distance between (-20, 23) \nand (-15, 68) is 45.</span>\n</pre>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nYou don&#39;t need to read or print anything. Your task is to complete the function&nbsp;<strong>distance()&nbsp;</strong>which takes x1, y1, x2 and y2 as input parameter and returns the distance between the given two points.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:&nbsp;</strong>O(1)<br />\n<strong>Expected Space Complexity:</strong>&nbsp;O(1)</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong></span><br />\n<span style=\"font-size:18px\">-1000 &lt;= x1, y1, x2, y2 &lt;= 1000</span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given the coordinates of two points (x1, y1) and (x2, y2) on a Cartesian plane, calculate the Euclidean distance between them. Round the resulting distance up to the nearest integer and return the value.",
                "constraints": [
                    "-1000 <= x1, y1, x2, y2 <= 1000"
                ],
                "testcases": [
                    {
                        "input": "0 0 2 -2",
                        "output": "3",
                        "explanation": "The distance between (0, 0) and (2, -2) is calculated as sqrt((2-0)^2 + (-2-0)^2) = sqrt(8) \u2248 2.828. Rounding up to the nearest integer gives 3."
                    },
                    {
                        "input": "-20 23 -15 68",
                        "output": "45",
                        "explanation": "The distance between (-20, 23) and (-15, 68) is calculated as sqrt((-15 - (-20))^2 + (68 - 23)^2) = sqrt(25 + 2025) = sqrt(2050) \u2248 45.27. Rounding up to the nearest integer gives 45."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Use the formula to find the distance between two points.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Geometric",
                "slug": "geometric"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "zoho"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution\n{\n\tpublic:\n\t\tint distance(int x1, int y1, int x2, int y2)\n\t\t{\n\t\t\tint ans = round(sqrtl((x1 - x2) * (x1 - x2) *1.0 + (y1 - y2) * (y1 - y2) * 1.0));\n\t\t\treturn ans;\n\t\t}\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            },
            {
                "lang": "Javascript",
                "full_func": "// Define a class called Solution for handling all operations\nclass Solution {\n  \n  // Define a distance function that takes in four parameters: (x1, y1) and (x2, y2)\n  distance(x1, y1, x2, y2) {\n    \n    // Calculate the horizontal distance between x1 and x2\n    let a = x2 - x1;\n    \n    // Calculate the vertical distance between y1 and y2\n    let b = y2 - y1;\n    \n    // Calculate the diagonal distance using the Pythagorean theorem\n    let ans = Math.round(Math.sqrt(a * a + b * b));\n    \n    // Return the rounded value of the diagonal distance\n    return ans;\n  }\n}",
                "lang_text": "javascript"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    //Function to find distance between two points in a plane.\n    public int distance(int x1, int y1, int x2, int y2)\n    {\n        int ans = (int)Math.Round(Math.Sqrt((x1 - x2) * (x1 - x2) * 1.0 + (y1 - y2) * (y1 - y2) * 1.0));\n        return ans;\n    }\n\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}