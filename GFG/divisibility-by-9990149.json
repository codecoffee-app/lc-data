{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703168,
            "title": "Divisibility by 999",
            "titleSlug": "divisibility-by-9990149",
            "content": "<p><span style=\"font-size:18px\">You are given a large number N in the form of a string, you have to check whether it is divisible by 999 without dividing or finding modulo of number by 999.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1-</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input</strong>:\r\nN = 1998\r\n<strong>Output</strong>:\r\nDivisible</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2 -</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input</strong>:\r\nN = 99999999\r\n<strong>Output</strong>:\r\nNot divisible</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task </strong>:<br />\r\nComplete the function&nbsp;<strong>isDivisible999</strong><em><strong>()</strong>&nbsp;</em>that receives a string N denoting number and returns true if the n is divisible by 999 and flse otherwise. The driver code itself prints &quot;Divisible&quot; if the returned value is true and returns &quot;Non Divisible&quot; if returned value is false.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity </strong>: O(len(N))<br />\r\n<strong>Expected Space Complexity</strong> : O(1)</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints</strong>:<br />\r\n1&lt;=|N|&lt;=10<sup>3</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a large number N as a string, determine if it's divisible by 999 without performing division or modulo operations.",
                "constraints": [
                    "1 <= |N| <= 10^3"
                ],
                "testcases": [
                    {
                        "input": "1998",
                        "output": "Divisible",
                        "explanation": "The number 1998 is divisible by 999."
                    },
                    {
                        "input": "99999999",
                        "output": "Not divisible",
                        "explanation": "The number 99999999 is not divisible by 999."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">A number is divisible by 999 if sum of its 3-digit-groups (if required groups are formed by appending a 0s at the beginning) is divisible by 999.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Division",
                "slug": "division"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "// function to check divisibility\r\nbool isDivisible999(string N)\r\n{\r\n    int n = N.length();\r\n    if (n == 0 && N[0] == '0')\r\n    return true;\r\n\r\n    // Append required 0s at the beginning.\r\n    if (n % 3 == 1)\r\n    N = \"00\" + N;\r\n    if (n % 3 == 2)\r\n    N = \"0\" + N;\r\n\r\n    // add digits in group of three in gSum\r\n    int gSum = 0;\r\n    for (int i = 0; i<n; i++)\r\n    {\r\n        // group saves 3-digit group\r\n        int group = 0;\r\n        group += (N[i++] - '0') * 100;\r\n        group += (N[i++] - '0') * 10;\r\n        group += N[i] - '0';\r\n        gSum += group;\r\n    }\r\n\r\n    // calculate result till 3 digit sum\r\n    if (gSum > 1000)\r\n    {\r\n        N = to_string(gSum);\r\n        n = N.length();\r\n        gSum = isDivisible999( N);\r\n    }\r\n    return (gSum == 999);\r\n}\r\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}