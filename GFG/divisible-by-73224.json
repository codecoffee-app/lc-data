{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703522,
            "title": "Divisible by 7",
            "titleSlug": "divisible-by-73224",
            "content": "<p><span style=\"font-size: 20px;\">Given an n-digit large number <strong>n </strong>in form of string, check whether it is divisible by 7 or not. Return</span><span style=\"font-size: 18px;\"> 1 if divisible by 7, otherwise 0.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples :</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>n = \"49</span><span style=\"font-size: 18px;\">\"\n<strong>Output:</strong> 1\n<strong>Explanation</strong>: 49 is divisible by 7.</span>\n</pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input</strong>: n = \"1000\"\n<strong>Output:</strong> 0\n<strong>Explanation</strong>: 1000 is not divisible by 7.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &le; num.size() &le; 10<sup>5</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a large number represented as a string 'n' with 'n' digits, determine if it is divisible by 7. Return 1 if it is divisible, and 0 otherwise.",
                "constraints": [
                    "1 <= num.size() <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "49",
                        "output": "1",
                        "explanation": "49 is divisible by 7."
                    },
                    {
                        "input": "1000",
                        "output": "0",
                        "explanation": "1000 is not divisible by 7."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Think of divisibility rule of 7</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "// Backend complete function template for C++\nclass Solution {\n  public:\n    // Function to check if a number is divisible by 7\n    int isdivisible7(string num) {\n        int n = num.length(), gSum = 0;\n\n        // If the number of digits is not a multiple of 3,\n        // add additional 0s at the end to make it a multiple of 3\n        if (n % 3 == 1) {\n            num += \"00\";\n            n += 2;\n        } else if (n % 3 == 2) {\n            num += \"0\";\n            n++;\n        }\n\n        int i, GSum = 0, p = 1;\n        for (i = n - 1; i >= 0; i--) {\n            int group = 0;\n\n            // Split the number into groups of 3 digits\n            group += num[i--] - '0';\n            group += (num[i--] - '0') * 10;\n            group += (num[i] - '0') * 100;\n\n            // Calculate the group sum with alternating signs\n            gSum = gSum + group * p;\n            p *= (-1);\n        }\n\n        // Check if the group sum is divisible by 7\n        return (gSum % 7 == 0);\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "// Backend complete function Template for Java\n\nclass Solution {\n    int isdivisible7(String num) {\n        int n = num.length();\n\n        // Append required 0s at the beginning.\n        if (n % 3 == 1) {\n            num = num + \"00\";\n            n += 2;\n        }\n        if (n % 3 == 2) {\n            num = num + \"0\";\n            n += 1;\n        }\n\n        // add digits in group of three in gSum\n        int gSum = 0, p = 1;\n        for (int i = n - 1; i >= 0; i--) {\n\n            // group saves 3-digit group\n            int group = 0;\n            group += num.charAt(i--) - '0';\n            group += (num.charAt(i--) - '0') * 10;\n            group += (num.charAt(i) - '0') * 100;\n            gSum = gSum + group * p;\n            // generate alternate series of plus and minus\n            p = p * -1;\n        }\n\n        // calculate result till 3 digit sum\n        if (gSum % 7 == 0) return 1;\n        return 0;\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Backend complete function Template for python3\r\n\r\nclass Solution:\r\n    def isdivisible7(self, num):\r\n        n = len(num)\r\n    \r\n        # Append required 0s at the beginning.\r\n        if (n % 3 == 1):\r\n            num += \"00\"\r\n            n += 2\r\n        \r\n        elif (n % 3 == 2):\r\n            num += \"0\"\r\n            n += 1\r\n    \r\n        # add digits in group of three in gSum\r\n        GSum = 0\r\n        p = 1\r\n        i = n-1\r\n        while i>=0:\r\n    \r\n            # group saves 3-digit group\r\n            group = 0\r\n            group += ord(num[i]) - ord('0')\r\n            i -= 1\r\n            group += (ord(num[i]) - ord('0')) * 10\r\n            i -= 1\r\n            group += (ord(num[i]) - ord('0')) * 100\r\n    \r\n            GSum = GSum + group * p\r\n    \r\n            # generate alternate series of \r\n            # plus and minus\r\n            p *= (-1)\r\n            i -= 1\r\n    \r\n        if GSum % 7 == 0:\r\n            return 1\r\n        return 0\r\n",
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "// User function template for C#\n\nclass Solution {\n    // Function to check if the given number is divisible by 7.\n    public int isdivisible7(string num) {\n        int n = num.Length;\n        int gSum = 0;\n\n        if (n % 3 == 1) {\n            num += \"00\";\n            n += 2;\n        } else if (n % 3 == 2) {\n            num += \"0\";\n            n++;\n        }\n\n        int i, p = 1;\n        for (i = n - 1; i >= 0; i--) {\n            int group = 0;\n\n            group += num[i--] - '0';\n            group += (num[i--] - '0') * 10;\n            group += (num[i] - '0') * 100;\n\n            gSum = gSum + group * p;\n            p *= (-1);\n        }\n\n        return (gSum % 7 == 0) ? 1 : 0;\n    }\n}",
                "lang_text": "csharp"
            },
            {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n/**\n * @param {string} num\n * @returns {boolean}\n*/\n\nclass Solution {\n    //Function to check whether the number is divisible by 7.\n    isdivisible7(num) {\n        let n = num.length;\n    \n        // Append required 0s at the beginning.\n        if (n % 3 === 1) {\n            num += \"00\";\n            n += 2;\n        } else if (n % 3 === 2) {\n            num += \"0\";\n            n += 1;\n        }\n    \n        // Add digits in groups of three in gSum.\n        let gSum = 0;\n        let p = 1;\n        let i = n - 1;\n\n        while (i >= 0) {\n            // Group saves 3-digit group.\n            let group = 0;\n            group += Number(num[i]);\n            i -= 1;\n            group += Number(num[i]) * 10;\n            i -= 1;\n            group += Number(num[i]) * 100;\n\n            gSum = gSum + group * p;\n\n            // Generate alternate series of plus and minus.\n            p *= -1;\n            i -= 1;\n        }\n    \n        // Check for divisibility by 7.\n        return gSum % 7 === 0;\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}