{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703171,
            "title": "Divisible by 8",
            "titleSlug": "divisible-by-82732",
            "content": "<p><span style=\"font-size:18px\">Given a number <strong>S</strong>,&nbsp;you need to check whether any permutation of the number <strong>S</strong>&nbsp;divisible by 8 or not.&nbsp;</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input</strong>: S = &quot;80&quot;\r\n<strong>Output</strong>: &quot;Divisible&quot;\r\n<strong>Explanation</strong>: 80 is divisible by 8</span>\r\n</pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input</strong>: S = &quot;101&quot;\r\n<strong>Output</strong>: &quot;Not divisible&quot;</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task </strong>:<br />\r\nComplete the function&nbsp;<strong>isDivisible8()&nbsp;</strong>that receives a string <strong>S&nbsp;</strong>denoting the number and&nbsp;<strong>returns</strong> 1 if&nbsp;any permutation of the number is divisible by 8&nbsp;or else returns 0.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity </strong>: O(lS|<sup>3</sup>)<br />\r\n<strong>Expected Space Complexity</strong> : O(1)</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints</strong>:<br />\r\n1 &le; lS|&nbsp;&le; 10<sup>2</sup></span></p>\r\n\r\n<p>&nbsp;</p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a number represented as a string **S**, determine if any permutation of its digits is divisible by 8.",
                "constraints": [
                    "1 <= length of S <= 100"
                ],
                "testcases": [
                    {
                        "input": "80",
                        "output": "1",
                        "explanation": "The number 80 itself is divisible by 8."
                    },
                    {
                        "input": "101",
                        "output": "0",
                        "explanation": "No permutation of the digits '1', '0', and '1' forms a number divisible by 8. Possible permutations include 101, 110, and 011 (11)."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Use brute-force method to check whether divisibility of 8 can be satisfied or not using 3 digits.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "citrix"
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution{\r\n    public:\r\n    \r\n    int isDivisible8(string s) {\r\n        if (s.length() <= 1) {\r\n            int a = (s[0] - '0');\r\n            if (a % 8 == 0)\r\n                return 1;\r\n            else\r\n                return 0;\r\n            \r\n        }\r\n        if (s.length() <= 2) {\r\n            int a = 10 * (s[0] - '0') + (s[1] - '0');\r\n            int b = 10 * (s[1] - '0') + (s[0] - '0');\r\n            if (a % 8 == 0 || b % 8 == 0)\r\n                return 1;\r\n            else\r\n                return 0;\r\n            \r\n        } else {\r\n            int l = s.length();\r\n            int i, j, k;\r\n            int temp = 0;\r\n            for (i = 0; i < l; i++) {\r\n                for (j = 0; j < l; j++) {\r\n                    for (k = 0; k < l; k++) {\r\n                        if (i != j && j != k && k != i) {\r\n                            int a = 100 * (s[i] - '0') + 10 * (s[j] - '0') +\r\n                                    (s[k] - '0');\r\n                            if (a % 8 == 0) {\r\n                                temp = 1;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (temp == 0)\r\n                return 0;\r\n            else\r\n                return 1;\r\n        }\r\n         return 1;\r\n    }\r\n\r\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": "class Solution:\r\n    def isDivisible8(self, S):\r\n        # code here\r\n        \r\n        n = len(S) # Getting the length of the input string\r\n\r\n        # List of two-digit numbers divisible by 8\r\n        two_digit = [0, 8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 96]\r\n\r\n        if len(S) > 2: # Check if the input string has more than 2 characters\r\n            for i in range(n): # Iterate through the characters in the string\r\n                for j in range(i+1, n): # Iterate through the characters after the current character\r\n                    for k in range(j+1, n): # Iterate through the characters after the second character\r\n                        if (int(S[i] + S[j] + S[k]) % 8 == 0): # Check if the combined three-digit number is divisible by 8\r\n                            return 1 # If divisible by 8, return 1\r\n        else:\r\n            if int(S) in two_digit: # Check if the two-digit number is in the list of numbers divisible by 8\r\n                return 1 # If divisible by 8, return 1\r\n        \r\n        return 0 # If no three-digit or two-digit numbers are divisible by 8, return 0",
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}