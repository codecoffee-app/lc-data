{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 712249,
            "title": "Divisor Game",
            "titleSlug": "divisor-game-1664432414",
            "content": "<p><span style=\"font-size: 18px;\">Alice and Bob take turns playing a game, with Alice starting first.<br />Initially, there is a number <strong>n</strong> on the chalkboard. On each player's turn, that player makes a move consisting of:</span></p>\n<ul>\n<li><span style=\"font-size: 18px;\">Choosing any <strong>x</strong> with <strong>0 &lt; x &lt; n</strong>&nbsp; and <strong>n % x == 0</strong>.</span></li>\n<li><span style=\"font-size: 18px;\">Replacing the number <strong>n</strong> on the chalkboard with <strong>n - x</strong>.</span></li>\n</ul>\n<p><span style=\"font-size: 18px;\">Also, if a player cannot make a move, they lose the game.<br />Return <strong>true</strong> if and only if Alice wins the game,&nbsp;assuming both players play <strong>optimally.</strong></span></p>\n<p>&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre style=\"background: #eeeeee; border: 1px solid #cccccc; padding: 5px 10px; --darkreader-inline-bgimage: initial; --darkreader-inline-bgcolor: #222426; --darkreader-inline-border-top: #3e4446; --darkreader-inline-border-right: #3e4446; --darkreader-inline-border-bottom: #3e4446; --darkreader-inline-border-left: #3e4446;\"><span style=\"font-size: 18px;\"><strong>Input:</strong><br />n = 2<br /><strong>Output: </strong>True<br /><strong>Explanation:</strong>&nbsp;Alice chooses 1, and Bob has no more moves.</span></pre>\n<p>&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></p>\n<pre style=\"background: #eeeeee; border: 1px solid #cccccc; padding: 5px 10px; --darkreader-inline-bgimage: initial; --darkreader-inline-bgcolor: #222426; --darkreader-inline-border-top: #3e4446; --darkreader-inline-border-right: #3e4446; --darkreader-inline-border-bottom: #3e4446; --darkreader-inline-border-left: #3e4446;\"><span style=\"font-size: 18px;\"><strong>Input:</strong><br />n = 3<br /><strong>Output:&nbsp;</strong>False<br /><strong>Explanation:</strong>&nbsp;Alice chooses 1, Bob chooses 1, and Alice has no more moves.</span></pre>\n<p>&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Your Task:</strong><br />You don't need to read input or print anything. Your task is to complete the function <strong>divisorGame()</strong>&nbsp;which takes an integer&nbsp;<strong>n </strong>as a parameter and returns true if Alice wins the game.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong>&nbsp;O(1)<br /><strong>Expected Auxiliary Space:</strong>&nbsp;O(1)</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &le; n &le; 10<sup>3</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Alice and Bob are playing a game. Initially, a number 'n' is written on a chalkboard. Players take turns, with Alice going first. On each turn, a player must choose a number 'x' such that 0 < x < n and n is divisible by x (n % x == 0). The player then replaces 'n' with 'n - x' on the chalkboard. If a player cannot make a move, they lose. Determine if Alice wins the game, assuming both players play optimally.",
                "constraints": [
                    "1 <= n <= 10^3"
                ],
                "testcases": [
                    {
                        "input": "2",
                        "output": "true",
                        "explanation": "Alice chooses 1, and the number becomes 2 - 1 = 1. Bob has no valid moves (no x exists such that 0 < x < 1 and 1 % x == 0), so Alice wins."
                    },
                    {
                        "input": "3",
                        "output": "false",
                        "explanation": "Alice chooses 1, and the number becomes 3 - 1 = 2. Bob chooses 1, and the number becomes 2 - 1 = 1. Alice has no valid moves, so Bob wins."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Alice always wants to make the number even and Bob wants to make the number odd after their moves.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    bool divisorGame(int n) { return n % 2 == 0; }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\nclass Solution {\n    // Function to check if N is divisible by 2 or not\n    public static boolean divisorGame(int n) {\n        // Return true if N is divisible by 2, else return false\n        return n % 2 == 0;\n    }\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\nclass Solution:\n\n    #Function to check if N is divisible by 2.\n    def divisorGame(self, n):\n        return n % 2 == 0\n",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "// User function Template for javascript\n/**\n * @param {number} n\n * @returns {boolean}\n */\n\nclass Solution {\n    // Code here\n    divisorGame(n) { return n % 2 === 0; }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}