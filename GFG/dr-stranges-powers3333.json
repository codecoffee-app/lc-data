{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704847,
            "title": "Binary Addition of 1",
            "titleSlug": "dr-stranges-powers3333",
            "content": "<p><span style=\"font-size:18px\">You are given a binary string <strong>s</strong> of length <strong>n</strong>. You have to perform binary addition of the string with &#39;1&#39;.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong><span style=\"font-size:18px\">Example 1:</span></strong></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong> \r\nn = 4\r\ns = 1010\r\n<strong>Output:</strong> 1011\r\n<strong>Explaination:</strong> \r\nThe decimal equivalent of given s is 10, \r\nAdding 1 gives 11, its binary representation\r\nis 1011.</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong><span style=\"font-size:18px\">Example 2:</span></strong></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong> \r\nn = 3\r\ns = 111\r\n<strong>Output:</strong> 1000\r\n<strong>Explaination:</strong> The given number is 7. \r\nNow 7+1 = 8, whose binary representation \r\nis 1000.</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou do not need to read input or print anyhthing. Your task is to complete the function <strong>binaryAdd()</strong> which takes n and s as input parameters and returns the resultant binary string after adding 1 with s.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(n)<br />\r\n<strong>Expected Auxiliary Space:</strong> O(1)</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n1 &le; n &le; 10000</span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a binary string `s` of length `n`, perform binary addition of the string with '1'.  Return the resulting binary string.",
                "constraints": [
                    "1 <= n <= 10000"
                ],
                "testcases": [
                    {
                        "input": "n = 4\ns = 1010",
                        "output": "1011",
                        "explanation": "The decimal equivalent of 1010 is 10. Adding 1 gives 11, whose binary representation is 1011."
                    },
                    {
                        "input": "n = 3\ns = 111",
                        "output": "1000",
                        "explanation": "The decimal equivalent of 111 is 7. Adding 1 gives 8, whose binary representation is 1000."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Rightmost end of the string is the LSB of the binary number.<br />\nIn binary addition 1+1 = 0 and carry 1.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "// Back-end complete function Template for C++\n\nclass Solution{\npublic:\n    // Function to perform binary addition\n    string binaryAdd(int n, string s){\n        int x, carry = 0;\n        \n        // Taking last character and converting it to integer\n        x = (s[n-1] - '0');\n        x += 1;\n        carry = x / 2;\n        x = x % 2;\n        \n        // Converting the result back to character and updating the string\n        s[n-1] = ('0' + x);\n        n--;\n        \n        // Loop for further binary addition\n        while(n > 0 && carry != 0){\n            // Taking current character and converting it to integer\n            x = (s[n-1] - '0');\n            x += carry;\n            carry = x / 2;\n            x = x % 2;\n            \n            // Converting the result back to character and updating the string\n            s[n-1]  = ('0' + x);\n            n--;\n        }\n        \n        // Adding the carry if it exists\n        if(carry)\n            s = \"1\" + s;\n        \n        // Returning the final result string\n        return s;\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}