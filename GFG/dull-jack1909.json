{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704982,
            "title": "Dull Jack",
            "titleSlug": "dull-jack1909",
            "content": "<p><span style=\"font-size: 18px;\">Jack is very fond of reading. He reads a lot many pages of books in a day. Since he is obsessed with reading, he reads <strong>K</strong> times more pages than the number of pages he read the previous day.He read 1 page on the first day. He wants to see that on any given day<strong> N</strong>, how many pages will he read.Since the answer can be very large, find&nbsp;the answer in modulo <strong>10<sup>9</sup>+7</strong>.</span><br /><br /><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input</strong>: N = 5, K = 2 \n<strong>Output:</strong>&nbsp;16&nbsp;\n<strong>Explanation</strong>: \nOn Day 1 : 1\nOn Day 2 : 2\nOn Day 3 : 4\nOn Day 4 : 8\nOn Day 5 : 16\n</span><span style=\"font-size: 18px;\">So the answer is 16. </span>\n</pre>\n<p><br /><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>N = 2, K = 3 \n<strong>Output:&nbsp;</strong>3\n<strong>Explanation</strong>: \nOn Day 1 : 1\nOn Day 2 : 3</span>\n<span style=\"font-size: 18px;\">So the answer is 3. </span>\n</pre>\n<p><br /><span style=\"font-size: 18px;\"><strong>Your Task:&nbsp;&nbsp;</strong><br />You dont need to read input or print anything. Complete the function <strong>nthDayPage()&nbsp;</strong>which takes N and K&nbsp;as input parameter and returns the answer.<br /><br /><strong>Expected Time Complexity:</strong> O(logN)<br /><strong>Expected Auxiliary Space:</strong> O(1)<br /><br /><strong>Constraints:</strong><br />1&lt;= N&nbsp;&lt;=10<sup>6</sup><br />1&lt;= K&nbsp;&lt;=10<sup>3</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Jack loves reading and reads a certain number of pages each day. He reads K times more pages than he did the previous day. If he read 1 page on the first day, determine how many pages he will read on day N. Calculate the result modulo 10^9 + 7.",
                "constraints": [
                    "1 <= N <= 10^6",
                    "1 <= K <= 10^3"
                ],
                "testcases": [
                    {
                        "input": "N = 5, K = 2",
                        "output": "16",
                        "explanation": "On Day 1: 1 page, Day 2: 2 pages, Day 3: 4 pages, Day 4: 8 pages, Day 5: 16 pages. Therefore, the answer is 16."
                    },
                    {
                        "input": "N = 2, K = 3",
                        "output": "3",
                        "explanation": "On Day 1: 1 page, Day 2: 3 pages. Therefore, the answer is 3."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Try to find mathamatical formula.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "series",
                "slug": "series"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\nclass Solution {\n  public:\n    // Function to compute modular exponentiation\n    long long  powm(long long  x,long long  n,long long  M)\n    {\n        long long  result=1;\n        while(n>0)\n        {\n            if(n % 2 ==1)\n                result=(result * x)%M;\n            x=(x*x)%M;\n            n=n/2;\n        }\n        return result;\n    }\n    \n    // Function to calculate the number of pages on the nth day\n    long long nthDayPage(long long N, long long K){\n        // Applying modular exponentiation to calculate K^(N-1) mod 10^9+7\n        return powm(K,N-1,1000000007);\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}