{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703183,
            "title": "Modify the Array",
            "titleSlug": "ease-the-array0633",
            "content": "<p><span style=\"font-size: 18px;\">Given an array <strong>arr</strong>. Return the modified array in such a way that if the current and next numbers are <strong>valid</strong> numbers and are equal then <strong>double </strong>the current number value and <strong>replace </strong>the next number with<strong> 0</strong>. After the modification, rearrange the array such that all 0's are shifted to the end.</span></p>\n<p><strong><span style=\"font-size: 18px;\">Note:</span></strong></p>\n<ol>\n<li><span style=\"font-size: 18px;\">Assume &lsquo;<strong>0</strong>&rsquo; as the invalid number and all others as a valid number.</span></li>\n<li><span style=\"font-size: 18px;\">The <strong>sequence </strong>of the valid numbers is present in the same order.</span></li>\n</ol>\n<p><span style=\"font-size: 18px;\"><strong>Example:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong> arr[] = [2, 2, 0, 4, 0, 8] <br /><strong>Output:</strong> [4, 4, 8, 0, 0, 0] <br /><strong>Explanation: </strong>At index 0 and 1 both the elements are the same. So, we will change the element at index 0 to 4 and the element at index 1 is 0 then we will shift all the zeros to the end of the array. So, the array will become [4, 4, 8, 0, 0, 0].</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong> arr[] = [0, 2, 2, 2, 0, 6, 6, 0, 0, 8]<strong>&nbsp;<br />Output:</strong> [4, 2, 12, 8, 0, 0, 0, 0, 0, 0]<br /><strong>Explanation:&nbsp;</strong>At index 5 and 6 both the elements are the same. So, we will change the element at index 5 to 12 and the element at index 6 is 0. We will change the element at index 1 to 4 and the element at index 2 is 0. Then we shift all the zeros to the end of the array. So, array will become [4, 2, 12, 8, 0, 0, 0, 0, 0, 0].<br /></span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong> O(n)<br /><strong>Expected Auxiliary Space:</strong> O(n)</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &le; arr.size() &le; 10<sup>5<br /></sup>1 &le; arr[i] &le; 10<sup>6</sup><sup><br />&nbsp;</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of integers, modify it such that if two consecutive elements are non-zero and equal, the first element is doubled and the second element is replaced by 0. After this modification, shift all the zeros to the end of the array, maintaining the original order of the non-zero elements.",
                "constraints": [
                    "1 <= arr.size() <= 10^5",
                    "1 <= arr[i] <= 10^6"
                ],
                "testcases": [
                    {
                        "input": "[2, 2, 0, 4, 0, 8]",
                        "output": "[4, 4, 8, 0, 0, 0]",
                        "explanation": "The first two elements (2, 2) are equal and non-zero. The first 2 becomes 4, and the second becomes 0.  The array becomes [4, 0, 0, 4, 0, 8]. Then, all zeros are moved to the end resulting in [4, 4, 8, 0, 0, 0]."
                    },
                    {
                        "input": "[0, 2, 2, 2, 0, 6, 6, 0, 0, 8]",
                        "output": "[4, 2, 12, 8, 0, 0, 0, 0, 0, 0]",
                        "explanation": "The elements at index 1 and 2 are same so arr[1] becomes 4 and arr[2] becomes 0.  The elements at index 5 and 6 are same so arr[5] becomes 12 and arr[6] becomes 0.  The array becomes [0, 4, 0, 2, 0, 12, 0, 0, 0, 8]. Then all the zeros are moved to the end [4, 2, 12, 8, 0, 0, 0, 0, 0, 0]"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span >First, modify the array then count the number of zeros.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companies": [
            "zoho",
            "microsoft"
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nclass Solution {\n  public:\n    // function which pushes all zeros to end of\n    // an array.\n    vector<int> modifyAndRearrangeArray(vector<int> &arr) {\n        int n = arr.size();\n        vector<int> ans;\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i] != 0 && arr[i] == arr[i + 1]) {\n                ans.push_back(2 * arr[i]);\n                arr[i + 1] = 0;\n            } else if (arr[i] == 0) {\n                ans.push_back(0);\n            } else {\n                ans.push_back(arr[i]);\n            }\n        }\n        if (arr[n - 2] == arr[n - 1]) {\n            ans.push_back(0);\n        } else {\n            ans.push_back(arr[n - 1]);\n        }\n        vector<int> mod;\n        int c = 0;\n        for (int i = 0; i < n; i++) {\n            if (ans[i])\n                mod.push_back(ans[i]);\n            else\n                c++;\n        }\n        for (int i = 0; i < c; i++)\n            mod.push_back(0);\n        return mod;\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "// User function Template for Java\n\nclass Solution {\n    static ArrayList<Integer> modifyAndRearrangeArr(int arr[]) {\n        // Complete the function\n        int n = arr.length;\n        ArrayList<Integer> ans = new ArrayList<>();\n\n        // Process the array as per the given logic\n        for (int i = 0; i < n - 1; i++) {\n            if (arr[i] != 0 && arr[i] == arr[i + 1]) {\n                ans.add(2 * arr[i]);\n                arr[i + 1] = 0;\n            } else if (arr[i] == 0) {\n                ans.add(0);\n            } else {\n                ans.add(arr[i]);\n            }\n        }\n\n        // Handle the last element\n        if (arr[n - 2] == arr[n - 1]) {\n            ans.add(0);\n        } else {\n            ans.add(arr[n - 1]);\n        }\n\n        // Create the modified list\n        ArrayList<Integer> mod = new ArrayList<>();\n        int c = 0;\n\n        // Count zeros and add non-zero values to mod\n        for (int i = 0; i < n; i++) {\n            if (ans.get(i) != 0) {\n                mod.add(ans.get(i));\n            } else {\n                c++;\n            }\n        }\n\n        // Add counted zeros to the end of mod\n        for (int i = 0; i < c; i++) {\n            mod.add(0);\n        }\n\n        return mod;\n    }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": "#User function Template for python3\n\n\nclass Solution:\n\n    def modifyAndRearrangeArr(self, arr):\n        #Complete the function\n        n = len(arr)\n        ans = []\n\n        for i in range(n - 1):\n            if arr[i] != 0 and arr[i] == arr[i + 1]:\n                ans.append(2 * arr[i])\n                arr[i + 1] = 0\n            elif arr[i] == 0:\n                ans.append(0)\n            else:\n                ans.append(arr[i])\n\n        # Handle the last element\n        if n > 1 and arr[n - 2] == arr[n - 1]:\n            ans.append(0)\n        elif n > 0:\n            ans.append(arr[n - 1])\n\n        # Create the modified list\n        mod = []\n        zero_count = 0\n\n        for value in ans:\n            if value != 0:\n                mod.append(value)\n            else:\n                zero_count += 1\n\n        # Append the counted zeros at the end\n        mod.extend([0] * zero_count)\n\n        return mod\n",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "// User function Template for javascript\n\nclass Solution {\n    modifyAndRearrangeArr(arr) {\n        // code here\n        const n = arr.length;\n        const ans = [];\n\n        for (let i = 0; i < n - 1; i++) {\n            if (arr[i] !== 0 && arr[i] === arr[i + 1]) {\n                ans.push(2 * arr[i]);\n                arr[i + 1] = 0;\n            } else if (arr[i] === 0) {\n                ans.push(0);\n            } else {\n                ans.push(arr[i]);\n            }\n        }\n\n        // Handle the last element\n        if (n > 1 && arr[n - 2] === arr[n - 1]) {\n            ans.push(0);\n        } else if (n > 0) {\n            ans.push(arr[n - 1]);\n        }\n\n        // Create the modified list\n        const mod = [];\n        let zeroCount = 0;\n\n        for (const value of ans) {\n            if (value !== 0) {\n                mod.push(value);\n            } else {\n                zeroCount++;\n            }\n        }\n\n        // Append the counted zeros at the end\n        for (let i = 0; i < zeroCount; i++) {\n            mod.push(0);\n        }\n\n        return mod;\n    }\n}\n",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}