{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 701613,
            "title": "Elected candidate",
            "titleSlug": "elected-candidate",
            "content": "<p><span style=\"font-size: 18px;\">Given an array of names <strong>arr[] </strong>of candidates in an election. A candidate name in array represents a<strong> vote casted</strong> to the candidate. You need to find the <strong>candidate with maximum votes</strong> recieved in the election.</span></p>\n<p><strong><span style=\"font-size: 18px;\">Examples:</span></strong></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr[] = [\"Shrikant\", \"Sushma\", \"Rajnath\", \"Sushma\"]</span>\n<span style=\"font-size: 18px;\"><strong>Output: </strong>Sushma</span>\n<span style=\"font-size: 18px;\"><strong>Explanation: </strong>Here Sushma has 2 votes and Rajnath has 1 vote.</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr[] = [\"Atal\", \"Shashtri\", \"Atal\"]</span>\n<span style=\"font-size: 18px;\"><strong>Output: </strong>Atal</span>\n<span style=\"font-size: 18px;\"><strong>Explanation: </strong>Here Atal has max votes of 2.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &lt;= arr.size() &lt;= 10<sup>4</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of candidate names (`arr[]`) representing votes cast in an election, determine the candidate who received the maximum number of votes.",
                "constraints": [
                    "1 <= arr.size() <= 10^4"
                ],
                "testcases": [
                    {
                        "input": "[\"Shrikant\", \"Sushma\", \"Rajnath\", \"Sushma\"]",
                        "output": "Sushma",
                        "explanation": "Sushma received 2 votes, while Rajnath and Shrikant each received 1 vote. Therefore, Sushma has the maximum votes."
                    },
                    {
                        "input": "[\"Atal\", \"Shashtri\", \"Atal\"]",
                        "output": "Atal",
                        "explanation": "Atal received 2 votes, while Shashtri received 1 vote. Thus, Atal has the maximum votes."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Use HashMap to store Name and their Frequency pair.</span></p>\n\n<p><span style=\"font-size:18px\">Complete code of above approach has been provided in next hint.</span></p>",
            "<p><span style=\"font-size:18px\">Count the number of votes casted to each candidate and store as&nbsp;(key, value) mapping in hashmap. Name of candidate will be considered as Key and number of votes as value in hashmap. Finally iterate hashmap and find the maximum vote casted and store the corresponding candidate name in ans.&nbsp;</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Java",
                "slug": "java"
            },
            {
                "name": "STL",
                "slug": "stl"
            },
            {
                "name": "Java-Collections",
                "slug": "java-collections"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nclass Solution {\n  public:\n    string electionWinner(vector<string>& arr) {\n        int n = arr.size();\n        string winner = \"\";\n        unordered_map<string, int> mp;\n        for (int i = 0; i < n; i++)\n            mp[arr[i]]++;\n\n        int maxVotes = 0;\n\n        for (auto itr = mp.begin(); itr != mp.end(); itr++) {\n            if (maxVotes < itr->second) {\n                maxVotes = itr->second;\n                winner = itr->first;\n            }\n        }\n        return winner;\n    }\n};\n",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\nclass Solution {\n    public static String electionWinner(String arr[]) {\n        // Taking an empty String called winner\n        String winner = \"\";\n\n        // Declaring a new HashMap of String, Integer pair\n        HashMap<String, Integer> mp = new HashMap<>();\n\n        int n = arr.length;\n        for (int i = 0; i < n; i++) {\n            // incrementing the count if the\n            // name is already present\n            if (mp.containsKey(arr[i])) {\n                mp.put(arr[i], mp.get(arr[i]) + 1);\n            } else // initializing name with frequency 1\n            {\n                mp.put(arr[i], 1);\n            }\n        }\n\n        int maxVotes = 0;\n\n        // Running a loop to take out the\n        // name of the person with maxVotes\n        for (Map.Entry mapElement : mp.entrySet()) {\n            String key = (String)mapElement.getKey();\n            int value = ((int)mapElement.getValue());\n\n            if (maxVotes < value) {\n                maxVotes = value;\n                winner = key;\n            }\n        }\n\n        // returning the winner's name\n        return winner;\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            },
            {
                "lang": "C#",
                "full_func": "class Solution {\n    public string electionWinner(string[] arr) {\n        int n = arr.Length;\n        Dictionary<string, int> mp = new Dictionary<string, int>();\n        for (int i = 0; i < n; i++) {\n            if (mp.ContainsKey(arr[i])) {\n                mp[arr[i]]++;\n            } else {\n                mp.Add(arr[i], 1);\n            }\n        }\n\n        int maxVotes = 0;\n        string winner = \"\";\n\n        foreach (var pair in mp) {\n            if (pair.Value > maxVotes) {\n                maxVotes = pair.Value;\n                winner = pair.Key;\n            }\n        }\n\n        return winner;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}