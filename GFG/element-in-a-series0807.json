{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704145,
            "title": "Element in a Sequence",
            "titleSlug": "element-in-a-series0807",
            "content": "<p><span style=\"font-size:18px\">Consider a sequence of numbers composed of only digits 4 and 7 such as 4, 7, 44, 47, 74,...... 44744,.. etc. Given a number <strong>N</strong>, we need to find&nbsp;the value of the</span><span style=\"font-size:18px\">&nbsp;<strong>N</strong>-th element&nbsp;</span><span style=\"font-size:18px\">in the sequence.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:\r\n</strong>N = 3</span>\r\n<span style=\"font-size:18px\"><strong>Output:\r\n</strong>44</span>\r\n<span style=\"font-size:18px\"><strong>Explanation:\r\n</strong>Value of the first term = 4\r\nValue of the second term = 7\r\nValue of the third term = 44</span></pre>\r\n\r\n<p><strong><span style=\"font-size:18px\">Example 2:</span></strong></p>\r\n\r\n<pre>\r\n<strong><span style=\"font-size:18px\">Input:\r\n</span></strong><span style=\"font-size:18px\">N = 5</span>\r\n<strong><span style=\"font-size:18px\">Output:\r\n</span></strong><span style=\"font-size:18px\">74</span>\r\n<span style=\"font-size:18px\"><strong>Explanation:\r\n</strong>Value of the first term = 4\r\nValue of the second term = 7\r\nValue of the third term = 44\r\nValue of the fourth term = 47\r\nValue of the fifth term = 74\r\n</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:&nbsp;&nbsp;</strong></span><br />\r\n<span style=\"font-size:18px\">You don&#39;t need to read input or print anything. Your task is to complete the function&nbsp;<strong>NthTermOfSeries()</strong>&nbsp;which takes an integer N as an input parameter and returns the value of the Nth term of the sequence.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong>&nbsp;O(N)<br />\r\n<strong>Expected Auxiliary Space:</strong>&nbsp;O(N)</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n1 &lt;= N &lt;= 1000</span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a positive integer N, find the Nth term in a sequence where each number is composed only of the digits 4 and 7. The sequence starts as: 4, 7, 44, 47, 74, 77, 444, 447, and so on.",
                "constraints": [
                    "1 <= N <= 1000"
                ],
                "testcases": [
                    {
                        "input": "3",
                        "output": "44",
                        "explanation": "The sequence is 4, 7, 44, 47, 74, ....  The 3rd term is 44."
                    },
                    {
                        "input": "5",
                        "output": "74",
                        "explanation": "The sequence is 4, 7, 44, 47, 74, ....  The 5th term is 74."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Do not try every integer it will give TLE.<br />\nFrom 4 and 7 constructs next number 44 then 47&nbsp;then using these 2 constructs next and so on.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "series",
                "slug": "series"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution\r\n{\r\npublic:\r\n    //Function to calculate the Nth term of the series.\r\n    int NthTermOfSeries(int N)\r\n    {\r\n        long long int arr[N+1];\r\n        arr[1] = 4; //Base case for N = 1\r\n        arr[2] = 7; //Base case for N = 2\r\n    \r\n        //Iterating over the remaining terms of the series.\r\n        for (long long int i=3; i<=N; i++)\r\n        {\r\n            // If i is odd, calculate the Nth term based on the previous odd term.\r\n            if (i%2 != 0)\r\n                arr[i] = arr[i/2]*10 + 4;\r\n            // If i is even, calculate the Nth term based on the previous even term.\r\n            else\r\n                arr[i] = arr[(i/2)-1]*10 + 7;\r\n        }\r\n        return arr[N]; //Returning the Nth term of the series.\r\n    }\r\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    public int NthTermOfSeries(int N)\n    {\n        long[] arr = new long[N+1];\n        arr[1] = 4; //Base case for N = 1\n        arr[2] = 7; //Base case for N = 2\n\n        //Iterating over the remaining terms of the series.\n        for (long i=3; i<=N; i++)\n        {\n            // If i is odd, calculate the Nth term based on the previous odd term.\n            if (i%2 != 0)\n                arr[i] = arr[i/2]*10 + 4;\n            // If i is even, calculate the Nth term based on the previous even term.\n            else\n                arr[i] = arr[(i/2)-1]*10 + 7;\n        }\n        return (int)arr[N]; //Returning the Nth term of the series.\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}