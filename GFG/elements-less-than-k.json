{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 701677,
            "title": "Elements Less Than K",
            "titleSlug": "elements-less-than-k",
            "content": "<p><span style=\"font-size: 18px;\">A vector&nbsp;<strong>arr[]</strong>&nbsp;&nbsp;and an element&nbsp;<strong>k</strong>&nbsp;are given to you.You need to return the&nbsp;<strong>list(vector)&nbsp;</strong>of elemeents less than k. The&nbsp;<strong>order&nbsp;</strong>of elements should be the&nbsp;<strong>same&nbsp;</strong>as that in the original array.<br /><strong>Note:&nbsp;</strong>Incase, there is no element less than k then return an empty vector.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Example :</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr[] = [5, 3, 6, 1, 3], k = 4\n<strong>Output: </strong>3 1 3\n<strong>Explanation: </strong>Here k is 4. Elements less than 4 in the list are {3 1 3}</span>\n</pre>\n<p><strong><span style=\"font-size: 18px;\">Constraints:<br /></span></strong><span style=\"font-size: 18px;\">1&lt;= arr.size() &lt;= 10<sup>5</sup><br />1&lt;= arr[i] &lt;= 10<sup>5</sup><br />1&lt;= k &lt;= 10<sup>5</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a vector `arr[]` and an integer `k`, return a new vector containing only the elements from `arr[]` that are strictly less than `k`. The order of elements in the returned vector must be the same as their order in the original `arr[]`.",
                "constraints": [
                    "1 <= arr.size() <= 10^5",
                    "1 <= arr[i] <= 10^5",
                    "1 <= k <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "arr[] = [5, 3, 6, 1, 3], k = 4",
                        "output": "[3, 1, 3]",
                        "explanation": "The elements in the array [5, 3, 6, 1, 3] that are less than 4 are 3, 1, and 3. The order must be the same as the original array."
                    },
                    {
                        "input": "arr[] = [5, 6, 7, 8, 9], k = 4",
                        "output": "[]",
                        "explanation": "There are no elements in the array [5, 6, 7, 8, 9] that are less than 4, so an empty vector is returned."
                    },
                    {
                        "input": "arr[] = [1, 2, 3, 4, 5], k = 6",
                        "output": "[1, 2, 3, 4, 5]",
                        "explanation": "All elements in the array [1, 2, 3, 4, 5] are less than 6, so the original array is returned."
                    },
                    {
                        "input": "arr[] = [10, 10, 10], k = 10",
                        "output": "[]",
                        "explanation": "There are no elements in the array [10, 10, 10] which are strictly less than 10, so the empty vector is returned"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>. Create a new vector. Now traverse the given vector and push elements less than k in the new vector. Now return the new vector</p>"
        ],
        "relatedTopics": [
            {
                "name": "STL",
                "slug": "stl"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\nclass Solution {\n  public:\n    vector<int> list_less_than_k(vector<int> &arr, int k) {\n        vector<int> result;\n        int n = arr.size();\n        int i;\n        for (i = 0; i < n; i++) {\n            if (arr[i] < k) {\n                result.push_back(arr[i]);\n            }\n        }\n        return result;\n    }\n};\n",
                "lang_text": "cpp"
            }
        ],
        "platform": "GFG"
    }
}