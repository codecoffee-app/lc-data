{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 878187,
            "title": "Encapsulation in Java",
            "titleSlug": "encapsulation-in-java",
            "content": "<p><span >Your task is to create a&nbsp;<strong>Person&nbsp;</strong>class in Java that demonstrates encapsulation.<br />This class should have two <strong>private&nbsp;</strong>attributes:&nbsp;<strong>name</strong>( String ) and <strong>age</strong>( int ) whose default values should be name as \"Geeks\" and age as 10.<br /></span><span >The class should provide <strong>public getter</strong> and <strong>setter</strong> methods to access and modify these private attributes.<br /></span><span >Note: In custom test cases Person() should be written first and in setName('name') function write the name is single quotes.</span></p>\n<p><strong><span >Example:</span></strong></p>\n<pre><strong><span >Input: </span></strong><span >Funtion calls: [Person(), getName(), setName(\"John\"), setAge(21), getName(), getAge()] <br /><strong>Output: </strong>Geeks John 21<br /><strong>Explanation: <br /></strong>Person person = new Person() // Person Object Created<br />person.getName() // Default value \"Geeks\" returned<br />person.setName(\"John\") // name value set to \"John\"<br />person.setAge(21) // age value set to 21<br />person.getName() // \"John\" returned<br />person.getAge() // 21 returned</span></pre>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Create a `Person` class in Java demonstrating encapsulation. The class should have two private attributes: `name` (String) and `age` (int). The default value for `name` should be \"Geeks\" and for `age` should be 10. Provide public getter and setter methods to access and modify these private attributes.",
                "constraints": [],
                "testcases": [
                    {
                        "input": "Person(), getName(), setName('John'), setAge(21), getName(), getAge()",
                        "output": "Geeks John 21",
                        "explanation": "First, a Person object is created with default values. `getName()` returns the default name \"Geeks\". `setName('John')` sets the name to \"John\", and `setAge(21)` sets the age to 21. Subsequent calls to `getName()` and `getAge()` return \"John\" and 21, respectively."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [],
        "companies": [],
        "solutions": [
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\nclass Person {\n    private String name;\n    private int age;\n\n    public Person() {\n        this.name = \"Geeks\";\n        this.age = 10;\n    }\n\n    public int getAge() { return age; }\n\n    public String getName() { return name; }\n\n    public void setAge(int n) { this.age = n; }\n\n    public void setName(String s) { this.name = s; }\n}",
                "lang_text": "java"
            }
        ],
        "platform": "GFG"
    }
}