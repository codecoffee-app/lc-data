{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 700356,
            "title": "Equal Sum and XOR",
            "titleSlug": "equal-sum-and-xor",
            "content": "<p><span style=\"font-size: 20px;\">Given a positive integer N, Your task is to complete the function <strong>countValues</strong> which returns an integer denoting the count of all integers i such that<br />0 &lt;= i &lt;= n and n+i = n^i where ^ denotes a XOR operation.<br /><br /><strong>Input:</strong><br />The first line of input contains an integer T denoting the no of test cases. Then T test cases follow. Each test case contains an integer N.<br /><br /><strong>Output:</strong><br />For each test case in a new line output will be the count of such positive integers.<br /><br /><strong>Constraints:</strong><br />1&lt;=T&lt;=100<br />1&lt;=N&lt;=1000<br /><br /><strong>Example(To be used only for expected output):<br />Input</strong><br />2<br />7<br />12<br /><strong>Output</strong><br />1<br />4<br /><br /><strong>Explanation:</strong><br /><strong>For first test case</strong><br />7^i = 7+i holds only for only for i = 0<br />7+0 = 7^0 = 7<br /><strong>For second test case</strong><br />12^i = 12+i hold only for i = 0, 1, 2, 3<br />for i=0, 12+0 = 12^0 = 12<br />for i=1, 12+1 = 12^1 = 13<br />for i=2, 12+2 = 12^2 = 14<br />for i=3, 12+3 = 12^3 = 15</span></p>\n<p><br /><span style=\"font-size: 16px;\"><strong>Note:</strong>The <strong>Input/Ouput</strong> format and <strong>Example</strong> given are used for system's internal purpose, and should be used by a user for <strong>Expected Output</strong> only. As it is a function problem, hence a user should not read any input from stdin/console. The task is to complete the function specified, and not to write the full code.</span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a positive integer N, determine the count of integers 'i' such that 0 <= i <= N and N + i = N ^ i, where '^' denotes the bitwise XOR operation.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= N <= 1000"
                ],
                "testcases": [
                    {
                        "input": "7",
                        "output": "1",
                        "explanation": "When N = 7, the condition 7 + i = 7 ^ i is only satisfied when i = 0. Therefore, the count is 1."
                    },
                    {
                        "input": "12",
                        "output": "4",
                        "explanation": "When N = 12, the condition 12 + i = 12 ^ i is satisfied for i = 0, 1, 2, and 3.  Therefore, the count is 4."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Bit Magic",
                "slug": "bit-magic"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C",
                "full_func": "//Added by Piyush Doorwar\r\n// Function to count the values for a given integer\r\nint countValues (int n)\r\n{\r\n    int countV = 0; // Initializing the count of values to 0\r\n \r\n    int i; // Variable for looping\r\n    for (i=0; i<=n; i++ ) // Looping over the range from 0 to n\r\n        if ((n+i) == (n^i) ) // Checking if the sum of n and i is equal to the bitwise XOR of n and i\r\n            countV++; // Incrementing the count of values\r\n \r\n    return countV; // Returning the count of values\r\n}",
                "lang_text": "c"
            },
            {
                "lang": "C++",
                "full_func": "// Function to count values that satisfy a condition\r\nint countValues (int n)\r\n{\r\n    int countV = 0; // Counter for values that satisfy the condition\r\n\r\n    // Iterate through the values from 0 to n\r\n    for (int i=0; i<=n; i++ )\r\n    {\r\n        // Check if the sum of n and i is equal to the bitwise XOR of n and i\r\n        if ((n+i) == (n^i) )\r\n            countV++; // Increment the counter\r\n    }\r\n \r\n    return countV; // Return the count of values\r\n}",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class GfG{\n\t// Initialize a counter variable\n\tpublic int countValues(int n)\n\t{\n\t\t// Initialize c as 0\n\t\tint c=0;\n\t\t// Loop from 0 to n\n\t\tfor(int i=0;i<=n;i++)\n\t\t{\n\t\t\t// Check if the sum of n and i is equal to the bitwise XOR of n and i\n\t\t\tif((n+i)==(n^i))\n\t\t\t\t// Increment the counter if the condition is true\n\t\t\t\tc++;\n\t\t}\n\t\t// Return the final count\n\t\treturn c;\n\t}\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "def countValues(n):\n    # initializing the count variable\n    cnt=-1\n    \n    # iterating over the range from 0 to n+1\n    for i in range(n+1):\n        \n        # checking if the sum of n and i is equal to the XOR of n and i\n        if(n+i==n^i):\n            \n            # if it is true, then increment the count variable\n            cnt+=1\n    \n    # returning the count plus 1\n    return cnt+1",
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "class Solution\n{\n    //Complete this method\n    public int countValues(int n)\n    {\n        int countV = 0; // Counter for values that satisfy the condition\n\n        // Iterate through the values from 0 to n\n        for (int i=0; i<=n; i++ )\n        {\n            // Check if the sum of n and i is equal to the bitwise XOR of n and i\n            if ((n+i) == (n^i) )\n                countV++; // Increment the counter\n        }\n     \n        return countV; // Return the count of values\n    }\n}",
                "lang_text": "csharp"
            },
            {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\r\n\r\n/**\r\n * @param {number} n\r\n * @return {number} \r\n*/\r\n\r\nclass Solution {\r\n    countValues(n){\r\n       let countV = 0;\r\n\r\n        for (let i=0; i<=n; i++ ){\r\n            if ((n+i) == (n^i) ){\r\n                countV++;\r\n            }\r\n        }\r\n     \r\n        return countV;\r\n    }\r\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}