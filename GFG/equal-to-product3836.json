{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703236,
            "title": "Product Pair",
            "titleSlug": "equal-to-product3836",
            "content": "<p><span style=\"font-size: 18px;\">Given an array, <strong>arr[] </strong>of distinct elements, and a number <strong>x</strong>, find if there is a pair in arr[] with a product equal to <strong>x</strong>. Return true if there exists such pair otherwise false.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr[] = [10, 20, 9, 40], x = 400\n<strong>Output:</strong> true\n<strong>Explanation:</strong> As 10 * 40 = 400, the answer is true.\n</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr[] = [-10, 20, 9, -40], x = 30\n<strong>Output:</strong> false\n<strong>Explanation:</strong> No pair exists with product 30.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong> O(n)<br /><strong>Expected Space&nbsp;</strong></span><strong style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif; font-size: 18px;\">Complexity</strong><strong style=\"font-size: 18px; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">:</strong><span style=\"font-size: 18px; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\"> O(n)</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &le; arr.size &le; 10<sup>5</sup><br />-10<sup>8</sup>&nbsp;&le; |arr<sub>i</sub>| &le; 10<sup>8</sup><br />-10<sup>18</sup> &le; |x| &le; 10<sup>18</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array `arr` of distinct elements and a number `x`, determine if there exists a pair of elements in `arr` whose product is equal to `x`. Return `true` if such a pair exists; otherwise, return `false`.",
                "constraints": [
                    "1 <= arr.length <= 10^5",
                    "-10^8 <= |arr[i]| <= 10^8",
                    "-10^18 <= |x| <= 10^18"
                ],
                "testcases": [
                    {
                        "input": "arr = [10, 20, 9, 40], x = 400",
                        "output": "true",
                        "explanation": "The pair (10, 40) has a product of 400."
                    },
                    {
                        "input": "arr = [-10, 20, 9, -40], x = 30",
                        "output": "false",
                        "explanation": "No pair of elements in the array multiplies to 30."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size: 18px;\">Can you use sorting and binary search to solve this problem in O(nlogn)?</span></p>",
            "<p><span style=\"font-size:18px\">Can you use hash map to solve the problem in O(n) ? &nbsp;For each element check&nbsp;If (x % arr[i]) is 0 and (x/arr[i]) exists in the hash map.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [
            "amazon",
            "visa"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function template for C++\n\nclass Solution {\n  public:\n    bool isProduct(vector<int> arr, long long x) {\n        int n = arr.size();\n        if (n < 2)\n            return false;\n\n        unordered_set<int> s;\n        for (int i = 0; i < n; i++) {\n            // 0 case must be handles explicitly as\n            // x % 0 is undefined behaviour in C++\n            if (arr[i] == 0) {\n                if (x == 0)\n                    return true;\n                else\n                    continue;\n            }\n\n            // x/arr[i] exists in hash,\n            // then we found a pair\n            if (x % arr[i] == 0) {\n                if (s.find(x / arr[i]) != s.end())\n                    return true;\n\n                // Insert arr[i]\n                s.insert(arr[i]);\n            }\n        }\n        return false;\n    }\n};\n",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "// User function Template for Java\n\nclass Solution {\n    boolean isProduct(int[] arr, long x) {\n        int n = arr.length;\n        // creating a list to store elements that divide x\n        ArrayList<Long> list = new ArrayList<>();\n        // iterating through the array\n        for (long num : arr) {\n            // checking if current element is 0 and x is also 0\n            if (num == 0) {\n                if (x == 0)\n                    return true;\n                else\n                    continue;\n            }\n            // checking if x is divisible by current element and\n            // if the list contains the quotient\n            if (x % num == 0 && list.contains(x / num)) {\n                return true;\n            }\n            // adding current element to the list\n            list.add(num);\n        }\n        // returning false if no pairs found\n        return false;\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#User function Template for python3\n\n\nclass Solution:\n    #Function to check if there are two numbers in the array whose product equals x.\n    def isProduct(self, arr, x):\n        k = set(arr)\n        #iterating over array elements.\n        for i in arr:\n            if i == 0:\n                continue\n            elif x / i in k:\n                return True\n        return False\n",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "class Solution {\n    isProduct(arr, x) {\n        let n = arr.length;\n        if (n < 2) {\n            return false;\n        }\n\n        let s = new Set();\n        for (let i = 0; i < n; i++) {\n            if (arr[i] === 0) {\n                if (x === 0) {\n                    return true;\n                } else {\n                    continue;\n                }\n            }\n\n            if (x % arr[i] === 0) {\n                if (s.has(x / arr[i])) {\n                    return true;\n                }\n                s.add(arr[i]);\n            }\n        }\n        return false;\n    }\n}\n",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}