{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704967,
            "title": "Euler Totient",
            "titleSlug": "euler-totient2036",
            "content": "<p><span style=\"font-size:18px\">Consider &Oslash;(n) as the <a href=\"http://www.geeksforgeeks.org/eulers-totient-function/\">Euler Totient Function</a> for n. You will be given a positive integer <strong>N</strong> and you have to find the smallest positive integer<strong> n</strong>, n &lt;= N for which the ratio n/&Oslash;(n) is maximized.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input</strong>:</span>\r\n<span style=\"font-size:18px\"><strong>N = </strong>6</span>\r\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\r\n<span style=\"font-size:18px\">6</span>\r\n<span style=\"font-size:18px\"><strong>Explanation:</strong></span>\r\n<span style=\"font-size:18px\">For n = 1, 2, 3, 4, 5 and 6 the values of\r\nthe ratio are 1, 2, 1.5, 2, 1.25 and 3\r\nrespectively. The maximum is obtained at 6.</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input</strong>:</span>\r\n<span style=\"font-size:18px\"><strong>N = </strong>50</span>\r\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\r\n<span style=\"font-size:18px\">30</span>\r\n<span style=\"font-size:18px\"><strong>Explanation:</strong></span>\r\n<span style=\"font-size:18px\">For n = 1 to 50, the maximum value of the\r\nratio is 3.75 which is obtained at n = 30.</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>maximizeEulerRatio()</strong> which takes an Integer N as input and returns the smallest positive integer (&lt;= N) which maximizes </span><span style=\"font-size:18px\">the ratio n/&Oslash;(n) is maximized.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(constant)<br />\r\n<strong>Expected Auxiliary Space:</strong> O(constant)</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong></span><br />\r\n<span style=\"font-size:18px\">1 &lt;= N &lt;= 10<sup>12</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a positive integer N, find the smallest positive integer n such that n <= N and the ratio n/\u03a6(n) is maximized, where \u03a6(n) is the Euler Totient Function.",
                "constraints": [
                    "1 <= N <= 10^12"
                ],
                "testcases": [
                    {
                        "input": "6",
                        "output": "6",
                        "explanation": "The Euler's totient values for numbers from 1 to 6 are: \u03a6(1) = 1, \u03a6(2) = 1, \u03a6(3) = 2, \u03a6(4) = 2, \u03a6(5) = 4, \u03a6(6) = 2. The ratios n/\u03a6(n) are 1, 2, 1.5, 2, 1.25, and 3, respectively. The maximum ratio is 3, achieved when n = 6."
                    },
                    {
                        "input": "50",
                        "output": "30",
                        "explanation": "The number 30 (2 * 3 * 5) has the highest ratio of n/\u03a6(n) among numbers less than or equal to 50. Its prime factors are small, which results in a larger number of coprime numbers and a higher ratio."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Product of the first 11 primes is greater than 10<sup>12</sup>.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "\r\nclass Solution {\r\n  public:\r\n    long long maximizeEulerRatio(long long N) {\r\n        \r\n        // Return 1 if N is 1\r\n        if(N == 1)\r\n            return 1ll;\r\n        \r\n        // Store the first 12 primes in an array.\r\n        int primes[12] = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37};\r\n        \r\n        long long pdt = 1;\r\n    \r\n        long long b[20];   // Make an array to store product of first few primes\r\n        \r\n        int idx = 0;\r\n        for(int i=0; i<12; i++)\r\n        {\r\n            pdt *= primes[i];\r\n            b[idx] = pdt;\r\n            idx++;\r\n        }\r\n        \r\n        long long ans;\r\n        \r\n        for(int j=0; j<=13; j++)\r\n        {\r\n            if(b[j] > N)\r\n            {\r\n                ans = b[j-1];\r\n                break;\r\n            }\r\n        }\r\n        \r\n        return ans;\r\n    }\r\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    public long maximizeEulerRatio(long N)\n    {\n        // Return 1 if N is 1\n        if(N == 1)\n            return 1L;\n        \n        // Store the first 12 primes in an array.\n        int[] primes = new int[12] {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37};\n        \n        long pdt = 1;\n    \n        long[] b = new long[20];   // Make an array to store product of first few primes\n        \n        int idx = 0;\n        for(int i=0; i<12; i++)\n        {\n            pdt *= primes[i];\n            b[idx] = pdt;\n            idx++;\n        }\n        \n        long ans = 0;\n        \n        for(int j=0; j<=13; j++)\n        {\n            if(b[j] > N)\n            {\n                ans = b[j-1];\n                break;\n            }\n        }\n        \n        return ans;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}