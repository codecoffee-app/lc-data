{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704913,
            "title": "Evaluate the expression",
            "titleSlug": "evaluate-the-expression0307",
            "content": "<p><span style=\"font-size: 18px;\">Given a number n, find the value of below expression:<br />&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; f(n-1)*f(n+1) - f(n)*f(n)&nbsp; &nbsp; where f(n) is n<sup>th</sup>&nbsp;Fibonacci.&nbsp;</span><br />&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input : </strong>n = 5\n<strong>Output: </strong>-1\n<strong>Explanation: </strong>f(4) = 3, f(5) = 5\n</span><span style=\"font-size: 18px;\">f(6) = 8. 3 * 8 - 5 * 5 = -1</span>\n</pre>\n<p><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>n = 3\n<strong>Output: -</strong>1\n<strong>Explanation: </strong>f(2) = 1, f(3) = 2\nand f(4) = 3. 1 * 3 - 2 * 2 = -1</span>\n</pre>\n<p>&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Your Task:</strong><br />You don't need to read or print anything. Yous task is to complete the function&nbsp;<strong>evaluate_exp()</strong>&nbsp;which takes n as input parameter and returns the value of the given expression.</span><br />&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:&nbsp;</strong>O(1)<br /><strong>Expected Space Complexity:&nbsp;</strong>O(1)</span><br />&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &lt;= n &lt;= 10<sup>18</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a number `n`, calculate the value of the expression: f(n-1) * f(n+1) - f(n) * f(n), where f(n) represents the n-th Fibonacci number.",
                "constraints": [
                    "1 <= n <= 10^18"
                ],
                "testcases": [
                    {
                        "input": "5",
                        "output": "-1",
                        "explanation": "The 4th Fibonacci number (f(4)) is 3, the 5th (f(5)) is 5, and the 6th (f(6)) is 8. Therefore, 3 * 8 - 5 * 5 = -1."
                    },
                    {
                        "input": "3",
                        "output": "-1",
                        "explanation": "The 2nd Fibonacci number (f(2)) is 1, the 3rd (f(3)) is 2, and the 4th (f(4)) is 3. Therefore, 1 * 3 - 2 * 2 = -1."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "flipkart"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "\r\nclass Solution{\r\n\tpublic:\r\n   \tint evaluate_exp(int n){\r\n   \t\treturn (n & 1 == 1) ? -1 : 1; \r\n   \t}    \r\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\r\n\r\nclass Solution\r\n{ \r\n    //Function to evaluate the expression\r\n    public int evaluate_exp(int n)\r\n    {\r\n        //Using bitwise AND operator to check if n is odd or even.\r\n        int k = n & 1;\r\n        \r\n        //If n is odd, return -1\r\n        if(k == 1)\r\n        return -1;\r\n        \r\n        //If n is even, return 1\r\n        return 1;\r\n    }\r\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\n\nclass Solution:\n\n    def evaluate_exp(self, n):\n        # Code here\n        if (n & 1):  # Check if n is odd\n            return -1  # if odd return -1\n        return 1  # if even return 1\n",
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "class Solution\n{\n    public int evaluate_exp(int n)\n    {\n        return (n & 1) == 1 ? -1 : 1;\n    }\n}",
                "lang_text": "csharp"
            },
            {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\r\n/**\r\n * @param {number} n\r\n * @returns {number}\r\n*/\r\n\r\nclass Solution {\r\n    //Function to evaluate postfix expression.\r\n    evaluate_exp(n) {\r\n        // Code here\r\n        if(n & 1) { // Check if n is odd \r\n            return -1; // if odd return -1\r\n        }\r\n        return 1; // if even return 1\r\n    }\r\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}