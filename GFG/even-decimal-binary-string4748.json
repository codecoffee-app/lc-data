{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703537,
            "title": "Even Decimal Binary String",
            "titleSlug": "even-decimal-binary-string4748",
            "content": "<p><span style=\"font-size:18px\">Given a binary string of size <strong>N</strong>,&nbsp;you have to return the number of&nbsp;substrings that have&nbsp;even value in its decimal form.<br />\nNote: Most significant bit is on the right end side. For example - binary representation of 6 is 011.&nbsp;</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input</strong>:\nN = 3\n</span><span style=\"font-size:18px\">S = &quot;101&quot;\n</span><span style=\"font-size:18px\"><strong>Output:</strong> 2\n</span><span style=\"font-size:18px\"><strong>Explanation : \n</strong></span><span style=\"font-size:18px\">Substrings in S: \n1, 10, 101, 0, 01, 1\n</span><span style=\"font-size:18px\">Corresponding decimal values:\n1, 1, 5, 0, 2, 1\nThere are only 2 even decimal valued \nsubstrings.</span></pre>\n\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input</strong>:</span>\n<span style=\"font-size:18px\">N = 5</span>\n<span style=\"font-size:18px\">S = &quot;10010&quot;</span>\n<span style=\"font-size:18px\"><strong>Output:</strong> \n8\n<strong>Explanation:\n</strong></span><span style=\"font-size:18px\">Substrings in S:\n1, 0, 0, 1, 0, 10, 00, 01, 10, 100, \n001, 010, 1001, 0010 and 10010\nCorresponding decimal Values are:\n1, 0, 0, 1, 0, 1, 0, 2, 1, 1, 4, 2,\n9, 4 ans 9\nThere are 8 decimal values which are even.</span>\n</pre>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:&nbsp;&nbsp;</strong><br />\nYou don&#39;t need to read input or print anything. Your task is to complete the function&nbsp;<strong>evenDecimalSubStr()</strong>&nbsp;which takes the string S, its size N<strong>&nbsp;</strong>as input parameters&nbsp;and returns&nbsp;the number of&nbsp;substrings&nbsp;that has even value in its decimal form.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong>&nbsp;O(N)<br />\n<strong>Expected Auxiliary Space:</strong>&nbsp;O(1)</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\n1 &le; T &le;&nbsp;1000<br />\n1 &le;&nbsp;N &le;&nbsp;10<sup>5</sup></span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a binary string of size N, determine the number of substrings whose decimal representation is even. Note that the least significant bit is on the left end side, and the most significant bit is on the right end side. For example - binary representation of 6 is 011.",
                "constraints": [
                    "1 <= T <= 1000",
                    "1 <= N <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "N = 3\nS = \"101\"",
                        "output": "2",
                        "explanation": "The substrings of \"101\" are \"1\", \"0\", \"1\", \"10\", \"01\", and \"101\". Their corresponding decimal values, considering right-to-left bit ordering, are 1, 0, 1, 1, 2, and 5, respectively. There are 2 even numbers in the substring."
                    },
                    {
                        "input": "N = 5\nS = \"10010\"",
                        "output": "8",
                        "explanation": "The substrings of \"10010\" and their decimal representations (right-to-left) include: \"1\", \"0\", \"0\", \"1\", \"0\", \"10\", \"00\", \"01\", \"10\", \"100\", \"001\", \"010\", \"1001\", \"0010\" and \"10010\" with corresponding decimal values 1, 0, 0, 1, 0, 1, 0, 2, 1, 1, 4, 2, 9, 4, and 9. There are 8 even numbers."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Every even binary&nbsp;number has 0 at its beginning in its binary representation.</span></p>\n\n<p>&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Binary Representation",
                "slug": "binary-representation"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "    \nclass Solution{   \npublic:\n    long long evenDecimalSubStr(string S, int N) { \n        // store the count of even decimal value substring \n        long long result = 0; \n        for (int i = 0; i < N; i++) { \n            // substring started with '0' \n            if (S[i] == '0') { \n                // increment result by (n-i) \n                // because all substring which are generate by \n                // this character produce even decimal value. \n                result += (N - i); \n            } \n        } \n        return result; \n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\nclass Solution{\n    static long evenDecimalSubStr(int N, String S){\n        long result = 0; \n        for (int i = 0; i < N; i++)  \n        { \n  \n            // substring started with '0' \n            if (S.charAt(i) == '0')  \n            { \n                // increment result by (n-i) \n                // because all substring which  \n                // are generate by this character  \n                // produce even decimal value. \n                result += (N - i); \n            } \n        } \n        return result;\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\nclass Solution:\n    def evenDecimalSubStr (self, N, S):\n        result = 0\n        for i in range(0, N): \n      \n            # substring started with '0' \n            if (S[i] == '0'): \n      \n                # increment result by (n-i) \n                # because all substring which are generate by \n                # this character produce even decimal value. \n                result += (N - i) \n          \n        return result ",
                "lang_text": "py"
            },
            {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n/**\n * @param {number} N\n * @param {string} S\n * @returns {string}\n */\n\nclass Solution {\n    //Function to calculate the even decimal substring.\n    evenDecimalSubStr(N, S) {\n        let result = 0;\n        for (let i = 0; i < N; i++) {\n            // substring started with '0' \n            if (S[i] === '0') {\n                // increment result by (n-i) \n                // because all substring which are generate by \n                // this character produce even decimal value. \n                result += (N - i);\n            }\n        }\n        return result.toString();\n    }\n}",
                "lang_text": "javascript"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    //Function to find the length of longest subarray having sum k.\n    public long evenDecimalSubStr(string S, int N)\n    {\n        // store the count of even decimal value substring \n        long result = 0;\n        for (int i = 0; i < N; i++)\n        {\n            // substring started with '0' \n            if (S[i] == '0')\n            {\n                // increment result by (n-i) \n                // because all substring which are generate by \n                // this character produce even decimal value. \n                result += (N - i);\n            }\n        }\n        return result;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}