{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703758,
            "title": "Even Odd Sum",
            "titleSlug": "even-odd-sum5450",
            "content": "<p><span style=\"font-size:18px\">Given an array Arr[] of N integers.Find the sum of values of even and odd index positions separately.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\nN=5\nArr={1,2,3,4,5}\n<strong>Output:</strong>\n9 6\n<strong>Explanation:</strong>\nThe sum of elements at odd places i.e\nat 1st,3rd and 5th places are (1+3+5=9)\nSimilarly,the sum of elements at even \nplaces i.e. at 2nd and 4th places are\n(2+4=6).</span></pre>\n\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\nN=5\nArr={1,1,1,1,1}\n<strong>Output:</strong>\n3 2\n<strong>Explanation:</strong>\nThe sum of elements at odd places\nis (1+1+1=3).Similarly, the sum of\nelements at even places is (1+1=2)</span></pre>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nYou don&#39;t need to read input or print anything.Your Task is to complete the function <strong>EvenOddSum()</strong> which takes an integer N and an array Arr as input parameters and returns the sum of elements in odd places and in even places separately.</span><br />\n&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong>O(N)<br />\n<strong>Expected Auxillary Space:</strong>O(1)<br />\n<br />\n<strong>Constraints:</strong><br />\n1&lt;=N&lt;=10<sup>5</sup><br />\n0&lt;=Arr[i]&lt;=10<sup>4</sup>,for 0&lt;=i</span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of N integers, find the sum of elements at even and odd index positions separately. Note that indexing starts from 1.",
                "constraints": [
                    "1 <= N <= 10^5",
                    "0 <= Arr[i] <= 10^4 for 0 <= i < N"
                ],
                "testcases": [
                    {
                        "input": "N = 5, Arr = [1, 2, 3, 4, 5]",
                        "output": "9 6",
                        "explanation": "The sum of elements at odd indices (1, 3, and 5) is 1 + 3 + 5 = 9. The sum of elements at even indices (2 and 4) is 2 + 4 = 6."
                    },
                    {
                        "input": "N = 5, Arr = [1, 1, 1, 1, 1]",
                        "output": "3 2",
                        "explanation": "The sum of elements at odd indices (1, 3, and 5) is 1 + 1 + 1 = 3. The sum of elements at even indices (2 and 4) is 1 + 1 = 2."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Traverse the array by incrementing the iterator twice.&nbsp;</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Traversal",
                "slug": "traversal"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    // Function to calculate the sum of integers at odd and even positions in the array\n    vector<int> EvenOddSum(int N, int Arr[]) {\n        int EvenSum = 0, OddSum = 0;\n\n        // calculating Sum of integers at odd places\n        for (int i = 0; i < N; i += 2)\n            OddSum += Arr[i];\n\n        // calculating Sum of integers at even places\n        for (int i = 1; i < N; i += 2)\n            EvenSum += Arr[i];\n\n        // creating a vector to store the sum of integers at odd and even positions\n        vector<int> ans = {OddSum, EvenSum};\n\n        // returning the vector\n        return ans;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "// Back-end complete function Template for Java\n\nclass Solution {\n    ArrayList<Integer> EvenOddSum(int N, int Arr[]) {\n        int EvenSum = 0, OddSum = 0;\n        // calculating Sum of integers at odd places\n        for (int i = 0; i < N; i += 2) OddSum += Arr[i];\n        // calculating Sum of integers at even places\n        for (int i = 1; i < N; i += 2) EvenSum += Arr[i];\n        ArrayList<Integer> ans = new ArrayList<Integer>();\n        ans.add(OddSum);\n        ans.add(EvenSum);\n        return ans;\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\nclass Solution:\n    #Function to find the sum of even and odd elements of the given array.\n    def EvenOddSum(self,N,Arr):\n        EvenSum,OddSum=0,0\n        \n        #calculating the sum of odd elements.\n        for i in range(0,N,2):\n            OddSum+=Arr[i]\n        \n        #calculating the sum of even elements.\n        for i in range(1,N,2):\n            EvenSum+=Arr[i]\n        \n        ans=[]\n        ans.append(OddSum)\n        ans.append(EvenSum)\n        return ans",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n/**\n * @param {number} N\n * @param {number[]} Arr\n * @returns {number[]}\n*/\n\nclass Solution {\n    //Function to find sum of even and odd elements in an array\n    EvenOddSum(N, Arr)\n    {\n        let EvenSum = 0, OddSum = 0;\n        \n        //calculating the sum of odd elements.\n        for (let i = 0; i < N; i += 2) {\n            OddSum += Arr[i];\n        }\n        \n        //calculating the sum of even elements.\n        for (let i = 1; i < N; i += 2) {\n            EvenSum += Arr[i];\n        }\n        \n        return [OddSum, EvenSum];\n    }\n}",
                "lang_text": "javascript"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    //Function to find the sum of even and odd elements in the array.\n    public int[] EvenOddSum(int N, int[] Arr)\n    {\n        int EvenSum = 0, OddSum = 0;\n\n        // calculating Sum of integers at odd places\n        for (int i = 0; i < N; i += 2)\n            OddSum += Arr[i];\n\n        // calculating Sum of integers at even places\n        for (int i = 1; i < N; i += 2)\n            EvenSum += Arr[i];\n\n        // creating a vector to store the sum of integers at odd and even positions\n        int[] ans = {OddSum, EvenSum};\n\n        // returning the vector\n        return ans;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}