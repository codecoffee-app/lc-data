{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705443,
            "title": "Examination Papers",
            "titleSlug": "examination-papers2459",
            "content": "<p><span style=\"font-size:18px\">A professor teaches Computer Science in his University. After the End Semester Examination, he checks all the papers and keeps them in descending order based on marks in the form of a pile. However he realizes that he has kept the papers in the box meant for Chemistry papers. He has to transfer the papers to the actual box that too in a pile with descending order of marks, and with some conditions.</span></p>\n\n<p><span style=\"font-size:18px\">1) He can withdraw a paper from the top of a pile only, and also he can place a paper on the top of a pile only.</span></p>\n\n<p><span style=\"font-size:18px\">2) He can keep a paper only at three places: box meant for computer science paper, box meant&nbsp;for chemistry paper, and he can keep the papers on the table also while withdrawing another paper from the top of a&nbsp;pile.</span></p>\n\n<p><span style=\"font-size:18px\">3) He can&#39;t keep the papers upon the table separately, i.e, he has to keep those papers in a single pile upon the table.</span></p>\n\n<p><span style=\"font-size:18px\">4) A paper with lower marks never comes below the paper with higher marks in a pile.</span></p>\n\n<p><span style=\"font-size:18px\">Displacing a paper to any pile would be called a move.</span></p>\n\n<p><span style=\"font-size:18px\">He wants to know in advance how many moves would he require. Compute the number of moves.<br />\n<br />\n<strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input</strong>: N = 2\n<strong>Output:</strong>&nbsp;3&nbsp;\n<strong>Explanation</strong>: First paper to table,\nsecond paper to actual box, then\nagain first paper to actual box.\n</span>\n</pre>\n\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input: </strong>N = 3\n<strong>Output:&nbsp;</strong>7\n<strong>Explanation</strong>: First paper to actual box,\nsecond paper to table,first paper to table,\nthird paper to actual box,first paper to\nchemistry box,second paper to actual box,\nfirst paper to actual box.</span>\n</pre>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Your Task:&nbsp;&nbsp;</strong><br />\nYou dont need to read input or print anything. Complete the function <strong>totalMoves()&nbsp;</strong>which takes N&nbsp;as input parameter and returns the number of moves.<strong>&nbsp;</strong><br />\n<br />\n<strong>Expected Time Complexity:</strong> O(N)<br />\n<strong>Expected Auxiliary Space:</strong> O(1)<br />\n<br />\n<strong>Constraints:</strong><br />\n1&lt;= N&nbsp;&lt;=50</span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "A professor needs to move Computer Science exam papers from a Chemistry box to the correct Computer Science box. The papers are initially arranged in descending order of marks in the Chemistry box. The professor can only move one paper at a time from the top of a pile. The papers can be placed in the Computer Science box, back in the Chemistry box, or on a table (but the table can only hold one pile).  The final arrangement in the Computer Science box must also be in descending order of marks. Each move of a paper counts.  Determine the minimum number of moves required to transfer all papers to the Computer Science box in the correct order.",
                "constraints": [
                    "1 <= N <= 50, where N is the number of papers."
                ],
                "testcases": [
                    {
                        "input": "2",
                        "output": "3",
                        "explanation": "Move paper 1 to the table. Move paper 2 to the Computer Science box. Move paper 1 from the table to the Computer Science box."
                    },
                    {
                        "input": "3",
                        "output": "7",
                        "explanation": "Move paper 1 to the Computer Science Box. Move paper 2 to the Table. Move paper 1 to the Table. Move paper 3 to the Computer Science Box. Move paper 1 to the Chemistry box. Move paper 2 to the Computer Science box. Move paper 1 to the Computer Science box."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Use Math.</span></p>"
        ],
        "relatedTopics": [],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\nclass Solution {\n  public:\n    //Function to calculate the power of a number.\n    long long int  power(int n,int m){\n        int i;\n        long long int  p=1;\n        for(i=1;i<=m;i++)\n        {\n            p*=n;\n        }\n        return p;\n    }\n    \n    //Function to calculate the total number of moves.\n    long long int  totalMoves(long long int  N){\n        //Calculating the total number of moves using the formula 2^N - 1.\n        return power(2,N)-1;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    public long totalMoves(long N)\n    {\n        //Calculating the total number of moves using the formula 2^N - 1.\n        return Power(2, N) - 1;\n    }\n\n    //Function to calculate the power of a number.\n    public long Power(long n, long m)\n    {\n        long p = 1;\n        for (int i = 1; i <= m; i++)\n        {\n            p *= n;\n        }\n        return p;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}