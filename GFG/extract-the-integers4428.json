{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703110,
            "title": "Extract the integers",
            "titleSlug": "extract-the-integers4428",
            "content": "<p><span style=\"font-size: 18px;\">Given a string <strong>s</strong>, extract all the integers from s. </span></p>\n<p><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong>\ns = \"1: Prakhar Agrawal, 2: Manish Kumar Rai, \n&nbsp;    3: Rishabh Gupta56\"\n<strong>Output: </strong>1 2 3 56\n<strong>Explanation: \n</strong>1, 2, 3, 56 are the integers present in s.</span>\n</pre>\n<p><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:\n</strong>s = \"geeksforgeeks\"\n<strong>Output: </strong>No Integers\n<strong>Explanation: \n</strong>No integers present in the string.</span></pre>\n<p>&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Your Task:</strong><br />You don't need to read input or print anything. Complete the function&nbsp;<strong>extractIntegerWords()&nbsp;</strong>which takes string s as input and returns a list of strings. If an empty list is returned the output is printed as \"No Integers\".</span></p>\n<p>&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:&nbsp;</strong>O(|s|).<br /><strong>Expected Auxiliary Space:&nbsp;</strong>O(|s|).</span></p>\n<p>&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1&lt;=|s|&lt;=10<sup>5</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string `s`, extract all the integers present in the string. The integers should be extracted as strings.",
                "constraints": [
                    "1 <= |s| <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "1: Prakhar Agrawal, 2: Manish Kumar Rai,\n 3: Rishabh Gupta56",
                        "output": "1 2 3 56",
                        "explanation": "The integers present in the input string are 1, 2, 3, and 56. These are extracted and returned as a space separated string."
                    },
                    {
                        "input": "geeksforgeeks",
                        "output": "No Integers",
                        "explanation": "There are no integers present in the input string."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Extract every number by traversing through the string.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "two-pointer-algorithm",
                "slug": "two-pointer-algorithm"
            },
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Function to extract integer words from a given string.\nvector<string> extractIntegerWords(string s)\n{\n    vector<string> res;\n    int i=0,len=s.length(); \n\n    //Iterating through the string.\n    while(i<len)\n    {\n        //Checking if the current character is a digit.\n        if(s[i]<='9' && s[i]>='0')\n        {\n            string ans=\"\";\n\n            //Loop to extract all continuous digits and form a number.\n            while(s[i]<='9' && s[i]>='0' && i<len)\n            {\n                ans+=s[i]; \n                i++;\n            }\n            //Adding the extracted number to the result vector.\n            res.push_back(ans);\n            ans.clear();\n        }\n        i++;\n    }\n    return res;\n}",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\nclass Solution \n{ \n    // Function to extract integer words from a given string\n    ArrayList<String> extractIntegerWords(String s) \n    { \n        // Initialize an ArrayList to store the extracted integer words\n        ArrayList<String> ans = new ArrayList<String>();\n        // Initialize a variable to keep track of the current integer word\n        int x=0;\n        // Initialize a StringBuilder to build the current integer word\n        StringBuilder tmp = new StringBuilder();\n        // Loop through each character in the string\n        for(int i=0;i<s.length();i++)\n        {\n            // If the character is not a digit, skip to the next iteration\n            if(s.charAt(i)<'0'||s.charAt(i)>'9')\n                continue;\n            // Append the character to the current integer word\n            tmp.append(s.charAt(i));\n            // If the next character is also a digit, do not add the current integer word yet\n            if(i+1<s.length()&&'0'<=s.charAt(i+1)&&s.charAt(i+1)<='9')\n                continue;\n            // Add the current integer word to the ArrayList\n            ans.add(tmp.toString());\n            // Reset the StringBuilder for the next integer word\n            tmp.delete(0,tmp.length());\n            // Reset the variable for the next iteration\n            x=0;\n        }\n        // Return the ArrayList of extracted integer words\n        return ans;    \n    }\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}