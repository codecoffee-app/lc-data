{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703767,
            "title": "Factor OR Multiple",
            "titleSlug": "factor-or-multiple1128",
            "content": "<p><span style=\"font-size:18px\">Given an array A comprising of N non-zero, positive integers and an integer X, find the bitwise&nbsp;OR of all such elements in the array that are a multiple of X. The result of OR operation should be&nbsp; in decimal form.&nbsp;If no multiple of X is found, the answer should be 0.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong>\r\n<strong>N = </strong>4 , <strong>X = </strong>2\r\n<strong>A = </strong>{3 , 4 , 3 , 9}\r\n<strong>Output:</strong>\r\n4<strong>\r\nExplanation:</strong>\r\nOnly multiple of 2 in array is 4.\r\nHence it is printed.</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong>\r\n<strong>N = </strong>5 , <strong>X = </strong>3\r\n<strong>A = </strong>{9 , 3 , 1 , 6 , 1}\r\n<strong>Output:</strong>\r\n15<strong>\r\nExplanation:</strong>\r\nMultiples of 3 in array are 9,3 and 6.\r\nTheir OR value is 15 and thus the Output.</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 3:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong>\r\n<strong>N = </strong>3 , <strong>X = </strong>8\r\n<strong>A = </strong>{1,2,3}\r\n<strong>Output:</strong>\r\n0<strong>\r\nExplanation:</strong>\r\nThere are no multiples of 8 in the array.\r\nSo, Output is 0.</span>\r\n</pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>factorOrMultiple()</strong> which takes integers N and X, and an Array A as input and returns the answer.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(N)<br />\r\n<strong>Expected Auxiliary Space:</strong> O(N)</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong></span><br />\r\n<span style=\"font-size:18px\">1 &lt;= N,X,A[i] &lt;= 10<sup>5</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array `A` of `N` non-zero, positive integers and an integer `X`, find the bitwise OR of all elements in `A` that are multiples of `X`. Return the result of the OR operation in decimal form. If no multiple of `X` is found in `A`, return 0.",
                "constraints": [
                    "1 <= N, X, A[i] <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "N = 4, X = 2, A = {3, 4, 3, 9}",
                        "output": "4",
                        "explanation": "Only the element 4 is a multiple of 2. Therefore, the bitwise OR is just 4."
                    },
                    {
                        "input": "N = 5, X = 3, A = {9, 3, 1, 6, 1}",
                        "output": "15",
                        "explanation": "The multiples of 3 in the array are 9, 3, and 6. Their bitwise OR is 9 | 3 | 6 = 15."
                    },
                    {
                        "input": "N = 3, X = 8, A = {1, 2, 3}",
                        "output": "0",
                        "explanation": "There are no multiples of 8 in the array. Therefore, the output is 0."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Follow a greedy Approach and store the X divisible numbers in an array. Then perform OR operation on those numbers.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Bit Magic",
                "slug": "bit-magic"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution {\r\n  public:\r\n    int factorOrMultiple(int N , int X , int A[]) {\r\n        \r\n        int temp[N];    // Array to store the numbers that are divisible by X\r\n\t\tint k=-1;\r\n\r\n\t\tfor(int i=0 ; i<N ; i++)\r\n\t\t{\r\n\t\t\tif(A[i]%X==0)\r\n\t\t\t\ttemp[++k]=A[i];     // Numbers divisible by X are stored in temp\r\n\t\t}\r\n        \r\n        if(k==-1)\r\n        \treturn 0;         // If there's no number divisible by X, return 0.\r\n\r\n        else if(k==0)\r\n        \treturn temp[k];    // If there's only 1 number divisible by X, return that number.\r\n        \r\n        else\r\n        {\r\n            int s=temp[0];\r\n            \r\n            // If there are multiple numbers divisible by X, Perform Logical OR\r\n            // among those numbers and return the result.\r\n        \tfor(int j=1 ; j<=k ; j++)\r\n        \t\ts=s|temp[j];\r\n\r\n        \treturn s;\r\n        }\r\n    }\r\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution {\r\n    static int factorOrMultiple(int N , int X , int[] A) {\r\n        \r\n        int[] temp = new int[N];    // Array to store the numbers that are divisible by X\r\n\t\tint k=-1;\r\n\r\n\t\tfor(int i=0 ; i<N ; i++)\r\n\t\t{\r\n\t\t\tif(A[i]%X==0)\r\n\t\t\t\ttemp[++k]=A[i];     // Numbers divisible by X are stored in temp\r\n\t\t}\r\n        \r\n        if(k==-1)\r\n        \treturn 0;         // If there's no number divisible by X, return 0.\r\n\r\n        else if(k==0)\r\n        \treturn temp[k];    // If there's only 1 number divisible by X, return that number.\r\n        \r\n        else\r\n        {\r\n            int s=temp[0];\r\n            \r\n            // If there are multiple numbers divisible by X, Perform Logical OR\r\n            // among those numbers and return the result.\r\n        \tfor(int j=1 ; j<=k ; j++)\r\n        \t\ts=s|temp[j];\r\n\r\n        \treturn s;\r\n        }\r\n    }\r\n};",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\r\n\r\nclass Solution:\r\n    def factorOrMultiple(self, N , X , A):\r\n        \r\n        temp = [0]*N    # List to store the numbers that are divisible by X\r\n        k = -1\r\n        \r\n        for i in range(N):\r\n            if(A[i]%X==0):\r\n                k+=1\r\n                temp[k]=A[i]     # Numbers divisible by X are stored in temp\r\n        \r\n        if(k==-1):\r\n            return 0         # If there's no number divisible by X, return 0.\r\n        \r\n        elif(k==0):\r\n            return temp[k]     # If there's only 1 number divisible by X, return that number.\r\n        \r\n        else:\r\n            s = temp[0]\r\n        \r\n            # If there are multiple numbers divisible by X, Perform Logical OR\r\n            # among those numbers and return the result.\r\n            for j in range(1,k+1):\r\n                s=s|temp[j]\r\n            \r\n            return s",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\r\n/**\r\n * @param {number} N\r\n * @param {number} X\r\n * @param {number[]} A\r\n * @returns {number}\r\n*/\r\n\r\nclass Solution\r\n{\r\n    //Function to find the smallest divisor or multiple\r\n    factorOrMultiple(N, X, A)\r\n    {\r\n        let temp = new Array(N).fill(0);    // List to store the numbers that are divisible by X\r\n        let k = -1;\r\n        \r\n        for (let i = 0; i < N; i++) {\r\n            if(A[i] % X === 0) {\r\n                k += 1;\r\n                temp[k] = A[i];     // Numbers divisible by X are stored in temp\r\n            }\r\n        }\r\n        \r\n        if(k === -1) {\r\n            return 0;         // If there's no number divisible by X, return 0.\r\n        } else if(k === 0) {\r\n            return temp[k];     // If there's only 1 number divisible by X, return that number.\r\n        } else {\r\n            let s = temp[0];\r\n        \r\n            // If there are multiple numbers divisible by X, Perform Logical OR\r\n            // among those numbers and return the result.\r\n            for (let j = 1; j <= k; j++) {\r\n                s = s | temp[j];\r\n            }\r\n            \r\n            return s;\r\n        }\r\n    }\r\n}",
                "lang_text": "javascript"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    public int factorOrMultiple(int N, int X, int[] A)\n    {\n        int[] temp = new int[N];    // Array to store the numbers that are divisible by X\n        int k = -1;\n\n        for(int i = 0; i < N; i++)\n        {\n            if(A[i] % X == 0)\n                temp[++k] = A[i];     // Numbers divisible by X are stored in temp\n        }\n\n        if(k == -1)\n            return 0;         // If there's no number divisible by X, return 0.\n\n        else if(k == 0)\n            return temp[k];    // If there's only 1 number divisible by X, return that number.\n\n        else\n        {\n            int s = temp[0];\n\n            // If there are multiple numbers divisible by X, Perform Logical OR\n            // among those numbers and return the result.\n            for(int j = 1; j <= k; j++)\n                s = s | temp[j];\n\n            return s;\n        }\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}