{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705027,
            "title": "Factorial Pairs",
            "titleSlug": "factorial-pairs5916",
            "content": "<p><span style=\"font-size:18px\">Given Two integers <strong>L</strong> and <strong>R</strong> find the total number of distinct pairs <strong>(p,q) </strong>&nbsp;between <strong>L</strong> and <strong>R</strong> ( both inclusive ) satisfying the given relationship.&nbsp;<strong>p! * q!=k^2</strong> (a perfect square) where p,q,k is any integer and &#39;<strong>!</strong>&#39; denotes factorial.</span><br />\r\n<br />\r\n<span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input</strong>: L = 0, R = 1\r\n<strong>Output:</strong>&nbsp;1\r\n<strong>Explanation</strong>: 1 is the only perfect square\r\nbetween 0 and 1; \r\n</span></pre>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input: </strong>L = 9, R = 25\r\n<strong>Output:&nbsp;</strong>3</span><span style=\"font-size:18px\">\r\n<strong>Explanation</strong>: 9, 16 and 25 are the perfect \r\nsquares between 9 and 25. </span>\r\n</pre>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Your Task:&nbsp;&nbsp;</strong><br />\r\nYou don&#39;t need to read input or print anything. Complete the function <strong>countPerfectSquares()&nbsp;</strong>which takes L and R&nbsp;as an input parameter and returns the total number of perfect squares.<br />\r\n<br />\r\n<strong>Expected Time Complexity:</strong> O(sqrt(N))<br />\r\n<strong>Expected Auxiliary Space:</strong> O(1)<br />\r\n<br />\r\n<strong>Constraints:</strong><br />\r\n0&lt;= L &lt;= R &lt;=10<sup>18</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Use square root for upper and lower value.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\nclass Solution {\n  public:\n    //Function to count the number of perfect squares within a given range.\n    long long int countPerfectSquares(long long int L, long long int R) \n    { \n        //returning the count of perfect squares within the range\n        return (floor(sqrt(R)) - ceil(sqrt(L)) + 1); \n    } \n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    //Function to count the number of perfect squares in the given range.\n    public long countPerfectSquares(long L, long R)\n    {\n        //returning the count of perfect squares within the range\n        return (long)(Math.Floor(Math.Sqrt(R)) - Math.Ceiling(Math.Sqrt(L)) + 1);\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}