{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 702881,
            "title": "Fascinating Number",
            "titleSlug": "fascinating-number3751",
            "content": "<p><span style=\"font-size: 18px;\">Given a number <strong>n</strong>. Your task is to check whether it is fascinating or not.</span></p>\n<blockquote>\n<p><span style=\"font-size: 18px;\"><strong>Fascinating Number</strong>: A number with 3 or more digits is considered fascinating if, when it is multiplied by 2 and 3, and the resulting </span><span style=\"font-size: 18px;\">products are concatenated with the original number, the final sequence contains all the digits from 1 to 9 exactly once.</span></p>\n</blockquote>\n<p><span style=\"font-size: 18px;\">Note:&nbsp; If a number is fascinating, return true. Otherwise, return false.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong> n = 192\n</span><span style=\"font-size: 18px;\"><strong>Output:</strong> true\n<strong>Explanation:</strong> After multiplication with 2 and 3, and concatenating with original number, number will become 192384576 which contains all digits from 1 to 9.</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong> n = 853\n<strong>Output:</strong> false\n<strong>Explanation:</strong> It is not a fascinating number</span></pre>\n<p><span style=\"font-size: 20px;\"><strong>Constraints:</strong><br /><span >100 &lt;= n &lt;= </span></span><span >2*10</span><sup>9</sup></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a number 'n', determine if it is a fascinating number. A number is considered fascinating if it has 3 or more digits and, when multiplied by 2 and 3, the original number and the two products concatenated together form a string containing all digits from 1 to 9 exactly once.",
                "constraints": [
                    "100 <= n <= 2*10^9"
                ],
                "testcases": [
                    {
                        "input": "192",
                        "output": "true",
                        "explanation": "The number 192 multiplied by 2 and 3 gives 384 and 576 respectively.  Concatenating these with the original number results in '192384576', which contains each digit from 1 to 9 exactly once."
                    },
                    {
                        "input": "853",
                        "output": "false",
                        "explanation": "The number 853 multiplied by 2 and 3 does not produce a concatenation that includes each digit from 1 to 9 exactly once."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Convert n, n*2 and n*3 to strings and concatenate them, and then determine if the resulting number meets the given conditions.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Hash",
                "slug": "hash"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function template for C++\n\nclass Solution {\n  public:\n    bool fascinating(int n) {\n        string s = to_string(n) + to_string(n * 2) + to_string(n * 3);\n        vector<int> hash(10, 0);\n        for (char c : s) {\n            hash[c - '0']++;\n        }\n        for (int i = 1; i <= 9; i++) {\n            if (hash[i] != 1) {\n                return false;\n            }\n        }\n        return true;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution {\n    // determines if a number is fascinating\n    boolean fascinating(long n) {\n        // calculating the multiples of n\n        long x = 2 * n;\n        long y = 3 * n;\n\n        // converting the multiples to strings\n        String s = Long.toString(x);\n        String ss = Long.toString(y);\n        String q = Long.toString(n);\n\n        // concatenating the strings\n        q = q + s;\n        q = q + ss;\n\n        // initializing an array to store the frequency of digits\n        int[] hash = new int[10];\n\n        // counting the frequency of each digit in the concatenated string\n        for (int i = 0; i < q.length(); i++) {\n            hash[q.charAt(i) - '0']++;\n        }\n\n        // checking if each digit appears only once in the concatenated string\n        for (int i = 1; i <= 9; i++) {\n            if (hash[i] != 1) {\n                // returning false if any digit appears more than once\n                return false;\n            }\n        }\n\n        // returning true if each digit appears only once in the concatenated string\n        return true;\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "class Solution:\n\n    def fascinating(self, n: int) -> bool:\n        s = str(n) + str(n * 2) + str(n * 3)\n        hash = [0] * 10\n\n        for c in s:\n            hash[int(c)] += 1\n\n        for i in range(1, 10):\n            if hash[i] != 1:\n                return False\n\n        return True\n",
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "// User function Template for C#\n\nclass Solution {\n    // Complete this function\n    public bool fascinating(int n) {\n        // Concatenated string of numbers\n        string s = n.ToString() + (n * 2).ToString() + (n * 3).ToString();\n\n        // Hash array for digits from 0 to 9\n        int[] hash = new int[10];\n\n        // Populate hash array with digit frequencies\n        foreach (char c in s) {\n            if (c >= '1' && c <= '9') // Process only valid digits (1 to 9)\n            {\n                hash[c - '0']++;\n            }\n        }\n\n        // Check digit uniqueness condition\n        for (int i = 1; i <= 9; i++) {\n            if (hash[i] != 1) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n}",
                "lang_text": "csharp"
            },
            {
                "lang": "Javascript",
                "full_func": "class Solution {\n    fascinating(n) {\n        let s = n.toString() + (n * 2).toString() + (n * 3).toString();\n        let hash = Array(10).fill(0);\n        for (let i = 0; i < s.length; i++) {\n            let digit = parseInt(s.charAt(i));\n            hash[digit]++;\n        }\n        for (let i = 1; i <= 9; i++) {\n            if (hash[i] !== 1) {\n                return false;\n            }\n        }\n        return true;\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}