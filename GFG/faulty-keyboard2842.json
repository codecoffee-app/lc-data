{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704852,
            "title": "Faulty Keyboard",
            "titleSlug": "faulty-keyboard2842",
            "content": "<p><span >Geek has a unique keyboard containing only the numpad keys. ie - 1,2,3,4,5,6,7,8,9,0. But the keyboard is damaged and can only process M keys. Geek is supposed to use the keyboard to type as many natural numbers as possible starting from 1. What will be the greatest natural number he will type? &nbsp;</span></p>\n<p><span ><strong>Examples :</strong></span></p>\n<pre><span ><strong>Input: </strong>m = 5\n<strong>Output:</strong> 5\n<strong>Explaination: </strong>Geek types numbers 1 to 5, using 1 key each (5 keys in total). The greatest number is 5.</span></pre>\n<pre><span ><strong>Input: </strong>m = 15\n<strong>Output:</strong> 12\n<strong>Explaination: </strong>Geek types numbers 1 to 9 (9 keys) and 10 to 12 (6 keys, 2 keys each). The greatest number is 12<span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">.</span></span></pre>\n<p><span ><strong>Constraints:</strong><br />1 &le; m &le; 10<sup>9</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">See how many keypress required to increase a digit&nbsp;of the numbers.Like 9 to go from 1 digit to 2 digits. 180 for 2 digit to 3 digit.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "samsung"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nclass Solution {\n  public:\n    // Function to find the maximum natural number such that its sum of digits is equal\n    // to 'M'.\n    int maxNatural(int m) {\n        int c = 9, x = 1, val = 0;\n\n        // loop to iterate until 'M' is greater than or equal to product of 'x' and 'c'.\n        while (m >= x * c) {\n            m -= x * c;\n            val += c;\n            c *= 10;\n            x++;\n        }\n\n        // returning the maximum natural number.\n        return (val + m / x);\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\nclass Solution {\n    static int maxNatural(int m) {\n        int c = 9, x = 1, val = 0;\n        while (m >= x * c) {\n            m = m - x * c;\n            val = val + c;\n            c = c * 10;\n            x = x + 1;\n        }\n        return (val + m / x);\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    public int maxNatural(int M)\n    {\n        int c = 9, x = 1, val = 0;\n\n        //loop to iterate until 'M' is greater than or equal to product of 'x' and 'c'.\n        while(M >= x*c){\n            M -= x*c;\n            val += c;\n            c *= 10;\n            x++;\n        }\n\n        //returning the maximum natural number.\n        return (val + M/x);\n    }\n}",
                "lang_text": "csharp"
            },
            {
                "lang": "Javascript",
                "full_func": "//Back-end complete function Template for javascript\nclass Solution {\n    // Function to find the maximum natural number such that its sum of digits is equal\n    // to 'M'\n    maxNatural(m) {\n        let c = 9, x = 1, val = 0;\n\n        // Loop to iterate until 'm' is greater than or equal to the product of 'x' and\n        // 'c'.\n        while (m >= x * c) {\n            m -= x * c;\n            val += c;\n            c *= 10;\n            x++;\n        }\n\n        // Returning the maximum natural number.\n        return val + Math.floor(m / x);\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}