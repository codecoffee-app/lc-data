{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 702675,
            "title": "Count minimum right flips to set all values in an array",
            "titleSlug": "faulty-wiring-and-bulbs2939",
            "content": "<p><span style=\"font-size: 18px;\">A wire connects light bulbs. Each bulb has a switch associated with it, however, due to faulty wiring, a switch also changes the state of all the bulbs to the right of the current bulb. Given the initial state of all bulbs, find the minimum number of switches you have to press to turn on all the bulbs. \"0 represents the bulb is off and 1 represents the bulb is on.\"</span><br />&nbsp;<br /><span style=\"font-size: 18px;\"><strong>Examples:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr[] = [0, 0, 0, 0]\n<strong>Output:</strong>  1\n<strong>Explanation</strong>: From the given set of bulbs change the state of the first bulb from off to on, which eventually turn the rest three bulbs on the right of it.<br /></span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr[] = [1, 0, 0, 1]<br /><strong>Output:</strong> 2<br /><strong>Explanation: </strong>First click the second bulb then click the third bulb.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong> O(n).<br /><strong>Expected Auxiliary Space:</strong> O(1).</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &le; arr.size() &le; 10<sup>6<br /></sup>0&le; arr[i] &le; 1<sup><br /></sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p><span >We traverse given array from left to right and keep pressing switch for off bulbs. We keep track of the number of switch presses so far. If the number of presses are odd, that means the current switch is in its original state else it is in the other state. Depending on what state the bulb is in, we can increment the count of the number of presses.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Binary Representation",
                "slug": "binary-representation"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    // Function to count the minimum number of flips required to make all elements\n    // equal.\n    int countFlips(vector<int>& arr) {\n        int count = 0;\n        int n = arr.size();\n        // iterating over the array\n        for (int i = 0; i < n; i++) {\n\n            // if count is even and current element is 0, increment count\n            if (count % 2 == 0 && arr[i] == 0)\n                count++;\n\n            // if count is odd and current element is 1, increment count\n            if (count % 2 != 0 && arr[i] == 1)\n                count++;\n        }\n        // return the final count\n        return count;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\nclass Solution {\n    public static int countFlips(int[] arr) {\n        int c = 0; // initialize a counter variable\n        int n = arr.length;\n        // loop through the array\n        for (int i = 0; i < n; i++) {\n            // check if the current index is even and the element at that index is 0\n            if (c % 2 == 0 && arr[i] == 0) {\n                c++; // increment the counter\n            }\n            // check if the current index is odd and the element at that index is 1\n            if (c % 2 != 0 && arr[i] == 1) {\n                c++; // increment the counter\n            }\n        }\n        return c; // return the final count\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\n\nclass Solution:\n    #Function to count the number of flips required to make all elements same.\n    def countFlips(self, arr):\n        c = 0\n        n = len(arr)\n        #iterating over the array.\n        for i in range(0, n):\n\n            #if current count is even and current element is 0,\n            #increment the count.\n            if (c % 2 == 0 and arr[i] == 0):\n                c += 1\n\n            #if current count is odd and current element is 1,\n            #increment the count.\n            if (c % 2 != 0 and arr[i] == 1):\n                c += 1\n\n        #returning the count.\n        return c\n",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "// User function Template for javascript\n\nclass Solution {\n    // Function to count number of flips required to make all elements 0.\n    countFlips(arr) {\n        let c = 0;\n        let n = arr.length;\n        // iterating over the array.\n        for (let i = 0; i < n; i++) {\n\n            // if current count is even and current element is 0,\n            // increment the count.\n            if (c % 2 === 0 && arr[i] == 0) {\n                c += 1;\n            }\n\n            // if current count is odd and current element is 1,\n            // increment the count.\n            if (c % 2 !== 0 && arr[i] === 1) {\n                c += 1;\n            }\n        }\n\n        // returning the count.\n        return c;\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}