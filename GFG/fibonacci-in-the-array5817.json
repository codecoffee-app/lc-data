{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 702921,
            "title": "Fibonacci in the array",
            "titleSlug": "fibonacci-in-the-array5817",
            "content": "<p><span >Given an array <strong>arr</strong> of integers, the task is to count the number of elements of the array which are Fibonacci numbers</span></p>\n<p><span ><strong>Examples:</strong></span></p>\n<pre><span ><strong>Input: </strong>arr[] = [4, 2, 8, 5, 20, 1, 40, 13, 23]\n<strong>Output:</strong> 5\n<strong>Explanation</strong>: Fibonacci Numbers that are present in array are 2, 8, 5, 1, 13</span></pre>\n<pre><span ><strong>Input: </strong>arr[] = [4, 7, 6, 25]\n<strong>Output:</strong> 0\n<strong>Explanation</strong>: No Fibonacci number in this array.</span></pre>\n<p><span ><strong>Expected Time Complexity:</strong> O(n*log(maxElement))<br /><strong>Expected Auxiliary Space:</strong> O(1)</span></p>\n<p><span ><strong>Constraints:</strong><br />1 &le; arr.size() &le; 10<sup>5<br /></sup>1 &le; arr[i] &le; 10<sup>5</sup><sup><br /></sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of integers, determine the number of elements that are Fibonacci numbers.",
                "constraints": [
                    "1 <= arr.size() <= 10^5",
                    "1 <= arr[i] <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "[4, 2, 8, 5, 20, 1, 40, 13, 23]",
                        "output": "5",
                        "explanation": "The Fibonacci numbers present in the array are 1, 2, 5, 8, and 13."
                    },
                    {
                        "input": "[4, 7, 6, 25]",
                        "output": "0",
                        "explanation": "There are no Fibonacci numbers in the array."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span >A number is said to be in the Fibonacci series if either (5 * n * n &ndash; 4) or (5 * n * n + 4) is a perfect square.&nbsp;</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Fibonacci",
                "slug": "fibonacci"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n  private:\n    // Helper function to check if a number is a perfect square\n    bool isPerfectSquare(long long num) {\n        long long n = sqrt(num);\n        return (n * n == num);\n    }\n\n  public:\n    // Function to count the number of Fibonacci numbers in the given array\n    int countFibonacciNumbers(vector<long long>& arr) {\n        int count = 0;\n        for (auto num : arr) {\n            // Check if the number is a Fibonacci number using a mathematical property\n            if (isPerfectSquare(5 * num * num + 4) ||\n                isPerfectSquare(5 * num * num - 4)) {\n                count++;\n            }\n        }\n        return count;\n    }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n    // Helper method to check if a number is a perfect square\n    private boolean isPerfectSquare(long num) {\n        long n = (long)Math.sqrt(num);\n        return (n * n == num);\n    }\n\n    // Method to count how many Fibonacci numbers are present in the array\n    public int countFibonacciNumbers(long[] arr) {\n        int count = 0;\n        for (long num : arr) {\n            // Check if the number is a Fibonacci number using a property of Fibonacci\n            // numbers\n            if (isPerfectSquare(5 * num * num + 4) ||\n                isPerfectSquare(5 * num * num - 4)) {\n                count++;\n            }\n        }\n        return count;\n    }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n    # Check if a number is a perfect square\n    def isPerfectSquare(self, num):\n        n = int(math.sqrt(num))\n        return n * n == num\n\n    # Count Fibonacci numbers in the array\n    def countFibonacciNumbers(self, arr):\n        count = 0\n        for num in arr:\n            # Use mathematical properties to check if a number is Fibonacci\n            if (self.isPerfectSquare(5 * num * num + 4)\n                    or self.isPerfectSquare(5 * num * num - 4)):\n                count += 1\n        return count\n",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "//Back-end complete function Template for JavaScript\nclass Solution {\n    // Function to check if a number is a perfect square\n    isPerfectSquare(num) {\n        const n = Math.floor(Math.sqrt(num));\n        return n * n === num;\n    }\n\n    // Function to count the number of Fibonacci numbers in the array\n    countFibonacciNumbers(arr) {\n        let count = 0;\n        for (const num of arr) {\n            // Check if the number is a Fibonacci number using mathematical properties\n            if (this.isPerfectSquare(5 * num * num + 4) ||\n                this.isPerfectSquare(5 * num * num - 4)) {\n                count++;\n            }\n        }\n        return count;\n    }\n}\n",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}