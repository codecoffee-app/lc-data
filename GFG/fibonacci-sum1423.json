{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704348,
            "title": "Fibonacci Sum",
            "titleSlug": "fibonacci-sum1423",
            "content": "<p><span style=\"font-size: 18px;\">Given a number positive number N, find the value of f<sub>0</sub> + f<sub>1</sub> + f<sub>2</sub> +... + f<sub>N</sub> where f<sub>i</sub> indicates ith Fibonacci number.<br />Remember that f<sub>0</sub> = 0, f<sub>1</sub> = 1, f<sub>2</sub> = 1, f<sub>3</sub> = 2, f<sub>4</sub> = 3, f<sub>5</sub> = 5, <br />Since the answer can be very large, the <strong>answer </strong>takes<strong> modulo</strong> with <strong>1000000007</strong> and returned.<br /><br /><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\">Input:\nN = 3\nOutput:\n4\nExplanation:\n0 + 1 + 1 + 2  = 4</span>\n</pre>\n<p><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></p>\n<pre><span style=\"font-size: 18px;\">Input :\nN = 4\nOutput :\n7\nExplanation :\n0 + 1 + 1 + 2 + 3 = 7</span>\n</pre>\n<p><br /><span style=\"font-size: 18px;\"><strong>Your Task:</strong><br />You don't need to read input or print anything. Your task is to complete the function&nbsp;<strong>fibSum()</strong>&nbsp;which takes an integer N<strong>&nbsp;</strong>as input parameter and returns the sum of all the Fibonacci numbers from F<sub>0</sub>&nbsp;to F<sub>N</sub>.<br /><br /><strong>Expected Time Complexity:</strong>&nbsp;O(Log N)<br /><strong>Expected Space Complexity:</strong>&nbsp;O(1)</span><br />&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &lt;= N &lt;= 100000</span></p>",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a positive integer N, calculate the sum of the first N+1 Fibonacci numbers (f<sub>0</sub> + f<sub>1</sub> + f<sub>2</sub> +... + f<sub>N</sub>). Remember that f<sub>0</sub> = 0, f<sub>1</sub> = 1, and each subsequent Fibonacci number is the sum of the two preceding ones. Return the sum modulo 1000000007.",
                "constraints": [
                    "1 <= N <= 100000"
                ],
                "testcases": [
                    {
                        "input": "3",
                        "output": "4",
                        "explanation": "The Fibonacci sequence up to N=3 is 0, 1, 1, 2.  Their sum is 0 + 1 + 1 + 2 = 4."
                    },
                    {
                        "input": "4",
                        "output": "7",
                        "explanation": "The Fibonacci sequence up to N=4 is 0, 1, 1, 2, 3.  Their sum is 0 + 1 + 1 + 2 + 3 = 7."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"color: #0d0d0d; font-family: S&ouml;hne, ui-sans-serif, system-ui, -apple-system, 'Segoe UI', Roboto, Ubuntu, Cantarell, 'Noto Sans', sans-serif, 'Helvetica Neue', Arial, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; font-size: 16px; white-space-collapse: preserve; background-color: #ffffff;\">Iterate through the Fibonacci sequence, updating the sum and each Fibonacci number modulo 1000000007 to manage large values. Use a loop to compute and sum the Fibonacci numbers efficiently.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Fibonacci",
                "slug": "fibonacci"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "goldman-sachs"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution{\r\npublic:\r\n    map<long long unsigned int , long long unsigned int > f;\r\n    long long int fib(long long int n) \r\n    {\r\n        long long unsigned int  MOD  = 1000000007;\r\n        // Base cases\r\n        if (n == 0)\r\n            return 0;\r\n        if (n == 1 || n == 2)\r\n            return (f[n] = 1);\r\n        \r\n        // If fib(n) is already computed\r\n        if (f.find(n) != f.end())\r\n            return f[n];\r\n        \r\n        long long unsigned int  k = (n & 1)? (n+1)/2 : n/2;\r\n        \r\n        // Applyting above formula [Note value n&1 is 1\r\n        // if n is odd, else 0.\r\n        f[n] = ( (n & 1)? \r\n            (((fib(k)%MOD)*(fib(k)%MOD))%MOD+((fib(k-1)%MOD)*(fib(k-1)%MOD))%MOD)\r\n            : ((2*(fib(k-1)%MOD)) + (fib(k))%MOD) * (fib(k)%MOD) ) %MOD;\r\n        \r\n        return f[n];\r\n    } \r\n \r\n    long long int fibSum(long long int N){\r\n         return fib(N+2) - 1;\r\n    }\r\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution {\n    static long fibSum(long N) {\n        long MOD = 1000000007;\n        if (N == 0) return 0;\n        if (N == 1) return 1;\n\n        long a = 0;\n        long b = 1;\n        long sum = 1;\n\n        for (long i = 2; i <= N; i++) {\n            long c = (a + b) % MOD;\n            sum = (sum + c) % MOD;\n\n            a = b;\n            b = c;\n        }\n\n        return sum;\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            },
            {
                "lang": "C#",
                "full_func": "class Solution\n{\n    public long fibSum(long N)\n    {\n        long MOD = 1000000007;\n        if (N == 0)\n            return 0;\n        if (N == 1)\n            return 1;\n        \n        long a = 0;\n        long b = 1;\n        long sum = 1;\n        \n        for (long i = 2; i <= N; i++)\n        {\n            long c = (a + b) % MOD;\n            sum = (sum + c) % MOD;\n            \n            a = b;\n            b = c;\n        }\n        \n        return sum;\n    }\n}",
                "lang_text": "csharp"
            },
            {
                "lang": "Javascript",
                "full_func": null,
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}