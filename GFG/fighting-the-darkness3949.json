{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703033,
            "title": "Fighting the darkness",
            "titleSlug": "fighting-the-darkness3949",
            "content": "<p><span style=\"font-size: 18px;\">Given an array<strong> arr[]</strong><strong>&nbsp;</strong>representing the size of candles which is reduced by 1 unit each day. The room is illuminated using all the present candles. Find the maximum number of days the room will stay </span><span style=\"font-size: 18px;\">illuminated (at least one candle having a size greater than 0)<br /></span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr[] = [1, 1, 2] \n<strong>Output:</strong> 2\n<strong>Explanation</strong>: The candle's length is reduced by 1 in first day. So, at the end of day 1: Sizes would be [0 0 1], So, at end of second day: Sizes would be [0 0 0]. This means the room was illuminated for 2 days.</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr[] = [2, 3, 4, 2, 1] \n<strong>Output:</strong> 4\n</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:<br /></strong></span><span style=\"font-size: 18px;\">1 &le; arr.size() &le; 10<sup>6</sup><br />1 &le; arr[i] &le; 10<sup>9</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Find the maximum element of the array.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [
            "snapdeal"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function template for C++\n\nclass Solution {\n  public:\n    // Function to find the maximum value in the array\n    int maxDays(vector<int> arr) {\n        int mx = -1;\n        for (auto &i : arr)\n            mx = max(mx, i);\n\n        // returning the maximum value\n        return mx;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution {\n    public int maxDays(int[] arr) {\n        int max = Integer.MIN_VALUE;\n        for (int num : arr) {\n            if (num > max) {\n                max = num;\n            }\n        }\n        return max;\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "class Solution:\n\n    def maxDays(self, arr):\n        return max(arr)\n",
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "// User function template for C#\n\nclass Solution {\n    public int maxDays(List<int> arr) {\n        int mx = -1;\n        foreach (int i in arr) {\n            mx = Math.Max(mx, i);\n        }\n\n        return mx;\n    }\n};",
                "lang_text": "csharp"
            },
            {
                "lang": "Javascript",
                "full_func": "//Back-end complete function Template for javascript\nclass Solution {\n    maxDays(arr) { return Math.max(...arr); }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}