{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704750,
            "title": "Find (a^b)%m",
            "titleSlug": "find-abm3912",
            "content": "<p><span style=\"font-size:18px\">Given three numbers <strong>a</strong>, <strong>b</strong> and <strong>m</strong>. The task is to find (a^b)%m.<br />\r\n<strong>Note: </strong>a is given as a String because it can be very big.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\r\n<span style=\"font-size:18px\"><strong>a = </strong>&quot;3&quot;, <strong>b = </strong>2, <strong>m = </strong>4</span>\r\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\r\n<span style=\"font-size:18px\">1</span>\r\n<span style=\"font-size:18px\"><strong>Explanation:</strong></span>\r\n<span style=\"font-size:18px\">(3^2)%4 = 9%4 = 1</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\r\n<span style=\"font-size:18px\"><strong>a = </strong>&quot;8&quot;, <strong>b = </strong>2, <strong>m = </strong>6</span>\r\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\r\n<span style=\"font-size:18px\">4</span>\r\n<span style=\"font-size:18px\"><strong>Explanation:</strong></span>\r\n<span style=\"font-size:18px\">(8^2)%6 = 64%6 = 4</span> </pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>powerMod()</strong> which takes a string a and 2 integers b, and m as input and returns (a<sup>b</sup> % m).</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(Number of digits in a)<br />\r\n<strong>Expected Auxiliary Space:</strong> O(1)</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong></span><br />\r\n<span style=\"font-size:18px\">1 &lt;= |a| &lt;= 10<sup>5</sup><br />\r\n0 &lt;= b &lt;= 10<sup>9</sup><br />\r\n1 &lt;= m &lt;=10<sup>9</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string `a` representing a non-negative integer, and two integers `b` and `m`, compute `(a^b) % m`.  The string `a` can represent a very large number.",
                "constraints": [
                    "1 <= |a| <= 10^5 (where |a| is the length of the string a)",
                    "0 <= b <= 10^9",
                    "1 <= m <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "a = \"3\", b = 2, m = 4",
                        "output": "1",
                        "explanation": "3 raised to the power of 2 is 9. 9 modulo 4 is 1."
                    },
                    {
                        "input": "a = \"8\", b = 2, m = 6",
                        "output": "4",
                        "explanation": "8 raised to the power of 2 is 64. 64 modulo 6 is 4."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">We have to use Modular Exponentiation because b is very large.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Modular Arithmetic",
                "slug": "modular-arithmetic"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution {\r\n  public:\r\n  \r\n    long long aModM(string s, long long mod)\r\n    {\r\n        long long number = 0;\r\n        for (int i = 0; i < s.length(); i++)\r\n        {\r\n            // (s[i]-'0') gives the digit value and form\r\n            // the number\r\n            number = (number*10 + (s[i] - '0'));\r\n            number %= mod;\r\n        }\r\n        return number;\r\n    }\r\n    \r\n    long long powerMod(string a, long long b, long long m) {\r\n        \r\n        long long a2 = aModM(a, m);\r\n        \r\n        long long res = 1;     // Initialize result  \r\n       \r\n        if (a2 == 0) return 0; // In case a2 is divisible by m; \r\n      \r\n        while (b > 0)  \r\n        {  \r\n            // If b is odd, multiply a2 with result  \r\n            if (b & 1)  \r\n                res = (res*a2) % m;  \r\n      \r\n            // b must be even now  \r\n            b = b>>1;       // b = y/2  \r\n            a2 = (a2*a2) % m;  \r\n        }  \r\n        return res;\r\n    }\r\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "\r\n\r\nclass Solution{\r\n    long aModM(String s, long mod)\r\n    {\r\n        long number = 0;\r\n        for (int i = 0; i < s.length(); i++)\r\n        {\r\n            // (s[i]-'0') gives the digit value and form\r\n            // the number\r\n            number = (number*10 + (s.charAt(i) - '0'));\r\n            number %= mod;\r\n        }\r\n        return number;\r\n    }\r\n    \r\n    long powerMod(String a, long b, long m) {\r\n        \r\n        long a2 = aModM(a, m);\r\n        \r\n        long res = 1;     // Initialize result  \r\n       \r\n        if (a2 == 0) \r\n            return 0; // In case a2 is divisible by m; \r\n      \r\n        while (b > 0)  \r\n        {  \r\n            // If b is odd, multiply a2 with result  \r\n            if ((b & 1) == 1)  \r\n                res = (res*a2) % m;  \r\n      \r\n            // b must be even now  \r\n            b = b>>1;       // b = y/2  \r\n            a2 = (a2*a2) % m;  \r\n        }  \r\n        return res;\r\n    }\r\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    //Function to calculate (a^b)%c.\n    public long powerMod(string a, long b, long c)\n    {\n        long a2 = aModM(a, c);\n        \n        long res = 1;     // Initialize result  \n       \n        if (a2 == 0) return 0; // In case a2 is divisible by c; \n      \n        while (b > 0)  \n        {  \n            // If b is odd, multiply a2 with result  \n            if ((b & 1) == 1)  \n                res = (res * a2) % c;  \n      \n            // b must be even now  \n            b = b >> 1;       // b = y/2  \n            a2 = (a2 * a2) % c;  \n        }  \n        return res;\n    }\n    \n    public long aModM(string s, long mod)\n    {\n        long number = 0;\n        for (int i = 0; i < s.Length; i++)\n        {\n            // (s[i]-'0') gives the digit value and form\n            // the number\n            number = (number * 10 + (s[i] - '0'));\n            number %= mod;\n        }\n        return number;\n    }\n    \n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}