{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703398,
            "title": "Find k-th character in string",
            "titleSlug": "find-k-th-character-in-string3841",
            "content": "<p><span style=\"font-size: 18px;\">Given a decimal number <strong>m</strong>. Convert it into a binary string and apply <strong>n</strong> iterations.<br />In each iteration, replace the character&nbsp;<strong>0&nbsp;</strong>with the string <strong>01</strong>, and <strong>1</strong> with <strong>10</strong>. Find the<strong> k</strong>th (1-based indexing) character in the string after the <strong>n</strong>th iteration.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong> m = 5, n = 2, k = 5\n<strong>output:</strong> 0\n<strong>Explanation:</strong> Binary representation of m \nis \"101\", after one iteration binary \nrepresentation will be \"100110\", and after \nsecond iteration binary representation </span><span style=\"font-size: 18px;\">\nwill be \"100101101001\". </span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong> m = 5, n = 2, k = 1\n<strong>output:</strong> 1\n<strong>Explanation:</strong> Binary representation of m \nis \"101\", after one iteration binary \nrepresentation will be \"100110\", and after \nsecond iteration binary representation</span><span style=\"font-size: 18px;\">\nwill be \"100101101001\". </span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Your task:</strong><br />You do not need to read any input or print anything. The task is to complete the function <strong>kthCharacter()</strong>, which takes 3 integers <strong>m</strong>, <strong>n</strong>, and <strong>k</strong> as input and returns a character. </span></p>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong>&nbsp;O(2<sup>n</sup>)<br /><strong>Expected Auxiliary Space:</strong>&nbsp;O(2<sup>n</sup>)</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong></span><br /><span style=\"font-size: 18px;\">0 &le; m &le; 50<br />0 &le; n &le; 10<br />k is a valid index</span></p>",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a decimal number `m`, convert it to its binary representation. Perform `n` iterations where each '0' is replaced with '01' and each '1' is replaced with '10'. Find the `k`th character (1-based indexing) in the resulting string after the `n`th iteration.",
                "constraints": [
                    "0 <= m <= 50",
                    "0 <= n <= 10",
                    "k is a valid index"
                ],
                "testcases": [
                    {
                        "input": "m = 5, n = 2, k = 5",
                        "output": "0",
                        "explanation": "The binary representation of 5 is \"101\". After the first iteration, it becomes \"100110\". After the second iteration, it becomes \"100101101001\". The 5th character is '0'."
                    },
                    {
                        "input": "m = 5, n = 2, k = 1",
                        "output": "1",
                        "explanation": "The binary representation of 5 is \"101\". After the first iteration, it becomes \"100110\". After the second iteration, it becomes \"100101101001\". The 1st character is '1'."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>After Each iteration update the binary representation</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [
            "amazon"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function template for C++\n\nclass Solution{\npublic:\n    //Function to find the kth character in the string.\n    char kthCharacter(int m, int n, int k)\n    {\n        string str = \"\";\n\n        //if m is 0, then the string will be \"0\".\n        if(m==0)\n            str = \"0\";\n\n        //converting m to binary and storing it in the string.\n        while(m)\n        {\n            int r = m%2;\n            str += (r + '0');\n            m /= 2;\n        }\n\n        //reversing the string.\n        reverse(str.begin(), str.end());\n        \n        //iterating n times to create the final string.\n        while(n--)\n        {\n            string s = \"\";\n            //iterating through each character in the string.\n            for(int i = 0; i < str.size(); i++)\n            {\n                //appending the corresponding characters based on the current character.\n                if(str[i]=='0')\n                    s += \"01\";\n                else\n                    s += \"10\";\n            }\n            //updating the string.\n            str = s;\n        }\n\n        //returning the kth character in the string.\n        return str[k-1];\n\n    }\n\n\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": null,
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}