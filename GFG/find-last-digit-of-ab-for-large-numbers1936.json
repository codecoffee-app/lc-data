{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704709,
            "title": "Find Last Digit Of a^b for Large Numbers",
            "titleSlug": "find-last-digit-of-ab-for-large-numbers1936",
            "content": "<p><span style=\"font-size: 18px;\">You are given two integer numbers in the form of string, the base a and the index b. You have to find the last digit of a<sup>b</sup>.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples:<br /></strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong></span><span style=\"font-size: 18px;\"><strong>a = </strong>\"3\", <strong>b = \"</strong>10\"</span>\n<span style=\"font-size: 18px;\"><strong>Output: </strong></span><span style=\"font-size: 18px;\">9</span>\n<span style=\"font-size: 18px;\"><strong>Explanation: </strong></span><span style=\"font-size: 18px;\">3<sup>10</sup> = 59049. Last digit is 9.</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong></span><span style=\"font-size: 18px;\"><strong>a = </strong>\"6\", <strong>b = \"</strong>2\"</span>\n<span style=\"font-size: 18px;\"><strong>Output: </strong></span><span style=\"font-size: 18px;\">6</span>\n<span style=\"font-size: 18px;\"><strong>Explanation: </strong></span><span style=\"font-size: 18px;\">6<sup>2</sup> = 36. Last digit is 6.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Your Task:</strong><br />You don't need to read input or print anything. Your task is to complete the function <strong>getLastDigit()</strong> which takes two&nbsp;strings&nbsp;a,b as parameters&nbsp;and returns an integer denoting the last digit of a<sup>b</sup>.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong> O(|b|)<br /><strong>Expected Auxiliary Space:</strong> O(1)</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong></span><br /><span style=\"font-size: 18px;\">1 &lt;= |a|,|b|&nbsp;&lt;= 1000</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Note</strong>: |a| = length of a and |b| = length of b. There will not be any test cases such that a<sup>b&nbsp;</sup>is undefined.</span></p>",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two integers represented as strings, `a` (the base) and `b` (the exponent), determine the last digit of a<sup>b</sup>.",
                "constraints": [
                    "1 <= |a|, |b| <= 1000",
                    "|a| represents the length of string a.",
                    "|b| represents the length of string b.",
                    "a<sup>b</sup> will always be defined."
                ],
                "testcases": [
                    {
                        "input": "a = \"3\", b = \"10\"",
                        "output": "9",
                        "explanation": "3 raised to the power of 10 is 59049. The last digit of 59049 is 9."
                    },
                    {
                        "input": "a = \"6\", b = \"2\"",
                        "output": "6",
                        "explanation": "6 raised to the power of 2 is 36. The last digit of 36 is 6."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">a<sup>b</sup> will have the same last digit as that of (a%10)<sup>(b)</sup>.</span><br />\n<span style=\"font-size:18px\">Example:- 13<sup>2</sup> = 169. 169%10 = 9 = 3<sup>2</sup>.</span></p>",
            "<p><span style=\"font-size:18px\">The last digit of power of any number</span></p>\n\n<ul>\n\t<li><span style=\"font-size:18px\">will repeat in a cycle of&nbsp;4 numbers or 2 numbers, or</span></li>\n\t<li><span style=\"font-size:18px\">remains the same throughout.</span></li>\n</ul>\n\n<p>&nbsp;</p>",
            "<p><span style=\"font-size:18px\">Since the repeating pattern length is 4 or&nbsp;2,&nbsp;So the last digit of a<sup>b</sup>&nbsp;will be the same as that of a<sup>(b%4)&nbsp;</sup>or a<sup>(b%2) </sup>respectively.&nbsp;</span></p>\n\n<p><span style=\"font-size:18px\">To find the modulo of the large number&nbsp;we will process all digits one by one and use the property that:</span></p>\n\n<blockquote>\n<p><span style=\"font-size:18px\">xy (mod a) &equiv; ((x (mod a) * 10) + (y (mod a))) mod a</span></p>\n</blockquote>\n\n<p><span style=\"font-size:18px\">where, x: left-most digit, y: rest of the digits except x.</span></p>\n\n<p><span style=\"font-size:18px\">For example:&nbsp;625 % 5 = (((6 % 5)*10) + (25 % 5)) % 5 = 0</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "samsung"
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n  \n    int Modulo(int a, string b)\n    {\n        // Initialize result\n        int mod = 0;\n     \n        // calculating mod of b with a to make\n        // b like 0 <= b < a\n        for (int i=0; i<b.length(); i++)\n            mod = (mod*10 + b[i] - '0')%a;\n     \n        return mod; // return modulo\n    }\n\n    int getLastDigit(string a, string b) {\n        \n        int len_a = a.length(), len_b = b.length();\n \n     \n        // if exponent is 0\n        if (len_b==1 && b[0]=='0' )\n            return 1;\n     \n        // if base is 0\n        if (len_a==1 && a[0]=='0')\n            return 0;\n     \n        // if exponent is divisible by 4 that means last\n        // digit will be pow(a, 4) % 10.\n        // if exponent is not divisible by 4 that means last\n        // digit will be pow(a, b%4) % 10\n        int exp = (Modulo(4,b)==0)? 4 : Modulo(4, b);\n     \n        // Find last digit in 'a' and compute its exponent\n        int res = pow(a[len_a - 1] - '0', exp);\n     \n        // Return last digit of result\n        return res % 10;\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "class Solution {\n  getLastDigit(a, b) {\n    const Modulo = (a, b) => {\n      let mod = 0;\n      for (let i = 0; i < b.length; i++) {\n        mod = (mod * 10 + parseInt(b[i])) % a;\n      }\n      return mod;\n    }\n\n    const len_a = a.length;\n    const len_b = b.length;\n\n    if (len_b === 1 && b[0] === '0') {\n      return 1;\n    }\n\n    if (len_a === 1 && a[0] === '0') {\n      return 0;\n    }\n\n    const exp = Modulo(4, b) === 0 ? 4 : Modulo(4, b);\n    const res = Math.pow(parseInt(a[len_a - 1]), exp);\n    return res % 10;\n  }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}