{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704206,
            "title": "Find maximum number",
            "titleSlug": "find-maximum-number2152",
            "content": "<p><span style=\"font-size:18px\">Given a number <strong>N</strong>, write a program to find a maximum number that can be formed using all of the digits of this number.<br />\r\n<strong>Note: </strong>The given number can be very large, so the input is taken as a <strong>String.</strong></span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\r\n<span style=\"font-size:18px\"><strong>N =</strong> &quot;38293367&quot;</span>\r\n<strong><span style=\"font-size:18px\">Output:</span></strong>\r\n<span style=\"font-size:18px\">98763332 </span>\r\n<span style=\"font-size:18px\"><strong>Explanation:</strong></span>\r\n<span style=\"font-size:18px\">98763332 is the largest number that\r\ncan be formed by rearranging the\r\ndigits of N.</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\r\n<span style=\"font-size:18px\"><strong>N =</strong> &quot;1203465&quot;</span>\r\n<strong><span style=\"font-size:18px\">Output:</span></strong>\r\n<span style=\"font-size:18px\">6543210</span>\r\n<span style=\"font-size:18px\"><strong>Explanation:</strong></span>\r\n<span style=\"font-size:18px\">6543210 is the largest number that\r\ncan be formed by rearranging the\r\ndigits of N.</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>findMax()</strong> which takes a String N as input and returns the answer.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(|N|)<br />\r\n<strong>Expected Auxiliary Space:</strong> O(constant)</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong></span><br />\r\n<span style=\"font-size:18px\">1 &lt;= |N| &lt;= 10<sup>5</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a number N represented as a string, find the largest possible number that can be formed by rearranging its digits.",
                "constraints": [
                    "1 <= |N| <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "38293367",
                        "output": "98763332",
                        "explanation": "Rearranging the digits of 38293367 in descending order results in the largest possible number, 98763332."
                    },
                    {
                        "input": "1203465",
                        "output": "6543210",
                        "explanation": "Rearranging the digits of 1203465 in descending order results in the largest possible number, 6543210."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">We know that the digits in a number will range from 0-9, so the idea is to create a hashed array of size 10 and store the count of every digit in the hashed array that occurs in the number. Then traverse the hashed array from index 9 to 0 and calculate the number accordingly. </span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "\r\nclass Solution {\r\n  public:\r\n    string findMax(string N) {\r\n        \r\n        int freq[10] = {0};    // Initializing frequency of all digits as 0.\r\n        \r\n        for(int i=0 ; i<N.length() ; i++)\r\n            freq[N[i]-'0']++;    // Incrementing the count of digits upon visiting\r\n            \r\n        string ans = \"\";\r\n        \r\n        for(int i=9 ; i>=0 ; i--)\r\n        {\r\n            for(int j=0 ; j<freq[i] ; j++)\r\n                ans+='0'+i;     // Finally add all the digits to the final string from 9 to 0.\r\n        }\r\n        \r\n        return ans;\r\n    }\r\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\r\n\r\nclass Solution {\r\n    static String findMax(String N) {\r\n        \r\n        int[] freq = new int[10];\r\n        Arrays.fill(freq,0);     // Initializing frequency of all digits as 0.\r\n        \r\n        for(int i=0 ; i<N.length() ; i++)\r\n            freq[N.charAt(i)-'0']++;    // Incrementing the count of digits upon visiting\r\n            \r\n        String ans = \"\";\r\n        for(int i=9 ; i>=0 ; i--)\r\n        {\r\n            for(int j=0 ; j<freq[i] ; j++)\r\n                ans+=((char)(i+'0'));     // Finally add all the digits to the final string from 9 to 0.\r\n        }\r\n        \r\n        return ans;\r\n    }\r\n};",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\r\n\r\nclass Solution:\r\n    def findMax(self, N):\r\n        \r\n        freq = [0]*10   # Initializing frequency of all digits as 0.\r\n        \r\n        for i in range(len(N)):\r\n            freq[int(N[i])]+=1    # Incrementing the count of digits upon visiting\r\n            \r\n        ans = \"\"\r\n        \r\n        for i in range(9,-1,-1):\r\n            for j in range(freq[i]):\r\n                ans+=str(i)     # Finally add all the digits to the final string from 9 to 0.\r\n        \r\n        return ans",
                "lang_text": "py"
            },
            {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n/**\n * @param {string} N\n * @returns {string}\n*/\n\nclass Solution {\n    //Function to find the maximum number.\n    findMax(N) {\n        const freq = Array(10).fill(0); // Initializing frequency of all digits as 0.\n\n        for (let i = 0; i < N.length; i++) {\n            freq[parseInt(N[i])]++; // Incrementing the count of digits upon visiting\n        }\n        \n        let ans = \"\";\n        \n        for (let i = 9; i >= 0; i--) {\n            for (let j = 0; j < freq[i]; j++) {\n                ans += i; // Finally add all the digits to the final string from 9 to 0.\n            }\n        }\n\n        return ans;\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}