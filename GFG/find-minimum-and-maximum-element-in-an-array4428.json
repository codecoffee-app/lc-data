{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703457,
            "title": "Min and Max in Array",
            "titleSlug": "find-minimum-and-maximum-element-in-an-array4428",
            "content": "<p><span style=\"font-size: 18px;\">Given an array<strong> arr</strong>. Your task is to find the <strong>minimum </strong>and<strong> maximum </strong>elements in the&nbsp;array.</span></p>\n<p><span style=\"font-size: 18px;\">Note: Return a Pair that contains <strong>two </strong>elements the first one will be a minimum element and the second will be a maximum<strong>.</strong></span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr[] = [3, 2, 1, 56, 10000, 167]\n<strong>Output: </strong>1 10000<br /><strong>Explanation:</strong> minimum and maximum elements of array are 1 and 10000.</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr[] = [1, 345, 234, 21, 56789]\n<strong>Output: </strong>1 56789<br /><strong>Explanation:</strong> minimum and maximum element of array are 1 and 56789.<br /></span></pre>\n<pre><span ><strong>Input: </strong>arr[] = [56789]\n<strong>Output: </strong>56789 56789</span><br /><span ><strong>Explanation:</strong> Since the array contains only one element so both min &amp; max are same.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &lt;= arr.size() &lt;= 10<sup>5</sup><br />1 &lt;= arr[i] &lt;=10<sup>9</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of integers, find the minimum and maximum elements in the array. Return a pair containing the minimum and maximum elements, with the minimum element appearing first.",
                "constraints": [
                    "1 <= arr.size() <= 10^5",
                    "1 <= arr[i] <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "[3, 2, 1, 56, 10000, 167]",
                        "output": "1 10000",
                        "explanation": "The minimum element in the array is 1, and the maximum element is 10000."
                    },
                    {
                        "input": "[1, 345, 234, 21, 56789]",
                        "output": "1 56789",
                        "explanation": "The minimum element in the array is 1, and the maximum element is 56789."
                    },
                    {
                        "input": "[56789]",
                        "output": "56789 56789",
                        "explanation": "Since the array contains only one element, both the minimum and maximum are the same: 56789."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size: 14pt;\">Initialize the min variable as a very high value and the max variable as a low value.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n//          Function to get the minimum and maximum values from an array\nclass Solution {\n  public:\n    pair<int, int> getMinMax(vector<int> arr) {\n        int n = arr.size();\n        int mn = 1e9, mx = -1;\n\n        // Iterating over the array\n        for (int i = 0; i < n; i++) {\n\n            // Updating the minimum value\n            mn = min(arr[i], mn);\n\n            // Updating the maximum value\n            mx = max(arr[i], mx);\n        }\n\n        // Returning the minimum and maximum values as a pair\n        return {mn, mx};\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\nclass Solution {\n    public Pair<Integer, Integer> getMinMax(int[] arr) {\n        int min = Integer.MAX_VALUE;\n        int max = Integer.MIN_VALUE;\n        for (int num : arr) {\n            if (num < min) {\n                min = num;\n            }\n            if (num > max) {\n                max = num;\n            }\n        }\n        return new Pair<>(min, max);\n    }\n}\n",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n#User function Template for python3\n\n\nclass Solution:\n\n    def get_min_max(self, arr):\n        mn = float('inf')\n        mx = float('-inf')\n\n        # Iterating over the array\n        for num in arr:\n            # Updating the minimum value\n            mn = min(num, mn)\n\n            # Updating the maximum value\n            mx = max(num, mx)\n\n        # Returning the minimum and maximum values as a tuple\n        return (mn, mx)\n",
                "lang_text": "py"
            },
            {
                "lang": "Javascript",
                "full_func": "//Back-end complete function Template for javascript\n//     User function Template for javascript\n\n/**\n * @param {number[]} arr\n * @param {number} n\n * @returns {number[]}\n */\n\nclass Solution {\n    getMinMax(arr) {\n        let mn = Infinity, mx = -Infinity;\n\n        // Iterating over the array\n        for (let num of arr) {\n            // Updating the minimum value\n            mn = Math.min(num, mn);\n\n            // Updating the maximum value\n            mx = Math.max(num, mx);\n        }\n\n        // Returning the minimum and maximum values as an array\n        return [ mn, mx ];\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}