{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 702678,
            "title": "Missing And Repeating",
            "titleSlug": "find-missing-and-repeating2512",
            "content": "<p><span >Given an unsorted array <strong><em>arr</em></strong> of positive integers. One number <strong>a</strong> from the set <strong>[1, 2,....,n]</strong> is missing and one number <strong>b</strong> occurs twice in the array. Find numbers <strong>a</strong>&nbsp;and <strong>b</strong>.<br /></span></p>\n<p><span ><strong>Note:</strong> The test cases are generated such that there always exists one missing and one repeating number within the range <strong>[1,n]</strong>.</span></p>\n<p><span ><strong>Examples:<br /></strong></span></p>\n<pre><span ><strong>Input: </strong>arr[] = [2, 2]\n<strong>Output:</strong> [2, 1]\n<strong>Explanation:</strong> Repeating number is 2 and smallest positive missing number is 1.\n</span></pre>\n<pre><span ><strong>Input: </strong>arr[] = [1, 3, 3] \n<strong>Output:</strong> [3, 2]\n<strong>Explanation:</strong> Repeating number is 3 and smallest positive missing number is 2.</span></pre>\n<pre><span ><strong>Input: </strong>arr[] = [4, 3, 6, 2, 1, 1]</span><br /><span ><strong>Output:</strong> [1, 5]</span><br /><span ><strong>Explanation:</strong> Repeating number is 1 and the missing number is 5.</span></pre>\n<p><span ><strong>Constraints:</strong><br />2 &le; arr.size() &le; 10<sup>6</sup><br />1 &le; arr[i] &le; arr.size()</span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an unsorted array `arr` of positive integers, where one number `a` from the set `[1, 2, ..., n]` is missing and one number `b` occurs twice in the array. Find the repeating number `b` and the missing number `a`.",
                "constraints": [
                    "2 <= arr.size() <= 10^6",
                    "1 <= arr[i] <= arr.size()"
                ],
                "testcases": [
                    {
                        "input": "[2, 2]",
                        "output": "[2, 1]",
                        "explanation": "The number 2 appears twice, and the missing number from the range [1, 2] is 1."
                    },
                    {
                        "input": "[1, 3, 3]",
                        "output": "[3, 2]",
                        "explanation": "The number 3 appears twice, and the missing number from the range [1, 3] is 2."
                    },
                    {
                        "input": "[4, 3, 6, 2, 1, 1]",
                        "output": "[1, 5]",
                        "explanation": "The number 1 appears twice, and the missing number from the range [1, 6] is 5."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span >Use the array as a marker: track duplicates by negation, and find the missing number from unmarked indices.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    // Function to find two elements such that their sum is equal to the given number\n    vector<int> findTwoElement(vector<int>& arr) {\n        vector<int> ans(2);\n        int i;\n        int n = arr.size();\n        // Iterate over the array to find the first element\n        for (i = 0; i < n; i++) {\n            // If the element is positive, make it negative\n            // to mark it as visited\n            if (arr[abs(arr[i]) - 1] > 0)\n                arr[abs(arr[i]) - 1] = -arr[abs(arr[i]) - 1];\n            else\n                // If the element is already negative, it is a duplicate\n                // Store it as the first element in the answer vector\n                ans[0] = abs(arr[i]);\n        }\n\n        // Iterate over the array to find the second element\n        for (i = 0; i < n; i++) {\n            // If the element is positive, it is the missing element\n            // Store it as the second element in the answer vector\n            if (arr[i] > 0)\n                ans[1] = i + 1;\n        }\n\n        return ans;\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\nclass Solution {\n    // Function to find two elements in array\n    ArrayList<Integer> findTwoElement(int arr[]) {\n        // Initialize an ArrayList to store the two elements\n        ArrayList<Integer> ans = new ArrayList<>(2); // Initialize with capacity 2\n        int n = arr.length;\n\n        // Loop through the array\n        for (int i = 0; i < n; i++) {\n            // Get the absolute value of each element\n            int abs_val = Math.abs(arr[i]);\n\n            // Check if the element at index abs_val - 1 is positive\n            // If it is positive, negate it\n            // If it is negative, store the abs_val as the first missing element\n            if (arr[abs_val - 1] > 0) {\n                arr[abs_val - 1] = -arr[abs_val - 1];\n            } else {\n                ans.add(abs_val); // Store the first missing element\n            }\n        }\n\n        // Loop through the array again\n        // Find the positive element, which indicates the missing element\n        for (int i = 0; i < n; i++) {\n            if (arr[i] > 0) {\n                ans.add(i + 1); // Store the second missing element\n            }\n        }\n\n        // Return the ArrayList containing the two missing elements\n        return ans;\n    }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\n\n# function for adding one to number\n# This function takes an array (arr) and its length (n) as input.\n# It finds the two elements that are missing in the array and adds one to each of them.\n# It returns an array with the two missing elements.\nclass Solution:\n\n    def findTwoElement(self, arr):\n        ans = [0] * 2\n        # loop through the array\n        n = len(arr)\n        for i in range(n):\n            # check if the element at the index of the absolute value of arr[i]-1 is greater than 0\n            if arr[abs(arr[i]) - 1] > 0:\n                # make the element at the index of the absolute value of arr[i]-1 negative\n                arr[abs(arr[i]) - 1] = -arr[abs(arr[i]) - 1]\n            else:\n                # if the element at the index of the absolute value of arr[i]-1 is negative, it means that\n                # the element has already been encountered before, so assign its absolute value to the first missing element\n                ans[0] = abs(arr[i])\n\n        # loop through the array\n        for i in range(n):\n            # if the element is positive, it means that it has not been encountered, so assign its index + 1 to the second missing element\n            if arr[i] > 0:\n                ans[1] = i + 1\n        return ans\n",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "// User function Template for javascript\n/**\n * @param {number[]} arr\n * @returns {number[]}\n */\n\nclass Solution {\n    // Function to find two repeating elements in an array of size n.\n    findTwoElement(arr) {\n        let n = arr.length;\n        // array to store the missing elements\n        let ans = new Array(2).fill(0);\n\n        // loop through the array\n        for (let i = 0; i < n; i++) {\n            // check if the element at the index of the absolute value of arr[i]-1 is\n            // greater than 0\n            if (arr[Math.abs(arr[i]) - 1] > 0) {\n                // make the element at the index of the absolute value of arr[i]-1\n                // negative\n                arr[Math.abs(arr[i]) - 1] = -arr[Math.abs(arr[i]) - 1];\n            } else {\n                // if the element at the index of the absolute value of arr[i]-1 is\n                // negative, it means that the element has already been encountered\n                // before, so assign its absolute value to the first missing element\n                ans[0] = Math.abs(arr[i]);\n            }\n        }\n\n        // loop through the array\n        for (let i = 0; i < n; i++) {\n            // if the element is positive, it means that it has not been encountered, so\n            // assign its index + 1 to the second missing element\n            if (arr[i] > 0) {\n                ans[1] = i + 1;\n            }\n        }\n\n        // return the array containing the missing elements\n        return ans;\n    }\n}\n",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}