{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704707,
            "title": "Find number of days between two given dates",
            "titleSlug": "find-number-of-days-between-two-given-dates5400",
            "content": "<p><span style=\"font-size:18px\">Given two dates, find the total number of days between them.<br />\r\n<strong>Note: </strong>The system follows <a href=\"https://en.wikipedia.org/wiki/Gregorian_calendar#Adoption\">Gregorian calender</a> from the beginning of time.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\r\n<span style=\"font-size:18px\"><strong>d1 = </strong>10, <strong>m1 = </strong>2, <strong>y1 = </strong>2014</span>\r\n<span style=\"font-size:18px\"><strong>d2 = </strong>10, <strong>m2 = </strong>3, <strong>y2 = </strong>2015</span>\r\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\r\n<span style=\"font-size:18px\">393</span>\r\n<span style=\"font-size:18px\"><strong>Explanation:</strong></span>\r\n<span style=\"font-size:18px\">By counting manually, we find out there\r\nare 393 days between the two dates.</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\r\n<span style=\"font-size:18px\"><strong>d1 = </strong>10, <strong>m1 = </strong>2, <strong>y1 = </strong>2001</span>\r\n<span style=\"font-size:18px\"><strong>d2 = </strong>10, <strong>m2 = </strong>2, <strong>y2 = </strong>2002</span>\r\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\r\n<span style=\"font-size:18px\">365</span>\r\n<span style=\"font-size:18px\"><strong>Explanation:</strong></span>\r\n<span style=\"font-size:18px\">By counting manually, we find out there\r\nare 365 days between the two dates.</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>noOfDays()</strong> which takes Integers d1,m1,y1 for the first date and d2,m2,y2 as the second date as input and returns the answer.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(1)<br />\r\n<strong>Expected Auxiliary Space:</strong> O(1)</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong></span><br />\r\n<span style=\"font-size:18px\">1 &lt;= d1,d2 &lt;= 31<br />\r\n1 &lt;= m1,m2 &lt;= 12<br />\r\n1 &lt;= y1,y2 &lt;= 3000</span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two dates (d1, m1, y1) and (d2, m2, y2), calculate the total number of days between them. Assume the Gregorian calendar is used throughout the entire period.",
                "constraints": [
                    "1 <= d1, d2 <= 31",
                    "1 <= m1, m2 <= 12",
                    "1 <= y1, y2 <= 3000"
                ],
                "testcases": [
                    {
                        "input": "d1 = 10, m1 = 2, y1 = 2014\nd2 = 10, m2 = 3, y2 = 2015",
                        "output": "393",
                        "explanation": "There are 393 days between February 10, 2014, and March 10, 2015."
                    },
                    {
                        "input": "d1 = 10, m1 = 2, y1 = 2001\nd2 = 10, m2 = 2, y2 = 2002",
                        "output": "365",
                        "explanation": "There are 365 days between February 10, 2001, and February 10, 2002."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Be careful about leap years.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "zoho",
            "salesforce"
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\r\n  public:\r\n  \r\n    // To store number of days in all months from January to Dec.\r\n        const int monthDays[12] = {31, 28, 31, 30, 31, 30,\r\n                                   31, 31, 30, 31, 30, 31};\r\n    // This function counts number of leap years before the \r\n    // given date\r\n    \r\n    int countLeapYears(int d, int m, int y) \r\n    {\r\n        // Check if the current year needs to be considered \r\n        // for the count of leap years or not \r\n        if (m <= 2) \r\n            y--; \r\n      \r\n        // An year is a leap year if it is a multiple of 4, \r\n        // multiple of 400 and not a multiple of 100. \r\n        return y / 4 - y / 100 + y / 400; \r\n    }\r\n    \r\n    // This function returns number of days between two given \r\n    // dates \r\n    int noOfDays(int d1, int m1, int y1, int d2, int m2, int y2) {\r\n        // COUNT TOTAL NUMBER OF DAYS BEFORE FIRST DATE 'dt1' \r\n  \r\n        // initialize count using years and day \r\n        int n1 = y1*365 + d1; \r\n      \r\n        // Add days for months in given date \r\n        for (int i=0; i<m1 - 1; i++) \r\n            n1 += monthDays[i]; \r\n      \r\n        // Since every leap year is of 366 days, \r\n        // Add a day for every leap year \r\n        n1 += countLeapYears(d1,m1,y1); \r\n      \r\n        // SIMILARLY, COUNT TOTAL NUMBER OF DAYS BEFORE 'dt2' \r\n      \r\n        int n2 = y2*365 + d2; \r\n        for (int i=0; i<m2 - 1; i++) \r\n            n2 += monthDays[i]; \r\n        n2 += countLeapYears(d2,m2,y2); \r\n        \r\n        // return difference between two counts \r\n        return abs(n2 - n1); \r\n    }\r\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}