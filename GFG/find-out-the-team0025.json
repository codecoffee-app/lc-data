{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703885,
            "title": "Binary Shift to Divide",
            "titleSlug": "find-out-the-team0025",
            "content": "<p><span style=\"font-size:18px\">A number <strong>N</strong> is given. Divide it in half by&nbsp;using the binary shift operator.<br />\nUse the floor value if the result is in decimal.&nbsp;If the number is 1,&nbsp;leave it as it is.</span></p>\n\n<p><br />\n<strong><span style=\"font-size:18px\">Example 1:</span></strong></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong> N = 1\n<strong>Output:</strong> 1\n</span></pre>\n\n<p><br />\n<strong><span style=\"font-size:18px\">Example 2:</span></strong></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong> N = 37\n<strong>Output:</strong> 18\n<strong>Explaination:</strong> 37/2 = 18.5 which is in \ndecimal form and whose floor value is 18.</span></pre>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nYou do not need to read input or print anything. Your task is to complete the function <strong>half()</strong>, which takes the number <strong>N</strong> as input parameter and returns the desired output.</span></p>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(1)<br />\n<strong>Expected Auxiliary Space:</strong> O(1)</span></p>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Constarints:</strong><br />\n1 &le;&nbsp;N &le;&nbsp;10<sup>9</sup></span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Right shifting the number one time is equivalent to the operation.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Bit Magic",
                "slug": "bit-magic"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "// Back-end complete function Template for C++\nclass Solution{\n    public:\n    // Function to return half of the input N\n    int half(int N){\n        if(N == 1)\n        return 1;\n        else\n        return (N>>1); // Using right shift operator to divide N by 2\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\nclass Solution{\n    // Function to calculate half of a number\n    static int half(int N){\n        int n = N;\n        // If N is 1, return 1\n        if(N == 1)\n            return 1;\n        else\n            // Return half of N by right-shifting the bits\n            return(n>>1);\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\nclass Solution:\n    #Function to find the half of a number.\n    def half(self, N):\n        if N == 1:\n            return 1\n        else:\n            return (N>>1)",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n\n/**\n * @param {number} n\n * @returns {number}\n*/\n\nclass Solution{\n    half(n){\n        if(n == 1)\n            return 1;\n        else\n            return Math.floor(n/2);\n    }\n}",
                "lang_text": "javascript"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    public int half(int N)\n    {\n        if(N == 1)\n            return 1;\n        else\n            return (N>>1);\n    }\n\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}