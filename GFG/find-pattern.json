{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704396,
            "title": "Find Pattern",
            "titleSlug": "find-pattern",
            "content": "<p><span style=\"font-size:18px\">Given a string s,</span> <span style=\"font-size:18px\">and a pattern p. You need to find if p exists in s or not and return the starting index of p in s. If p does not exist in s then -1 will be returned.<br />\r\nHere p and s both are case-sensitive.</span><br />\r\n<span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input</strong></span>:\r\n<span style=\"font-size:18px\">s = &quot;Hello&quot;\r\np = &quot;llo&quot;\r\n<strong>Output:</strong> \r\n2\r\n<strong>Explanation</strong>: llo starts from the second index in Hello.\r\n</span></pre>\r\n\r\n<p><strong><span style=\"font-size:18px\">Example 2:</span></strong></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong>\r\ns = &quot;World&quot;\r\np = &quot;Doodle&quot;\r\n<strong>Output:\r\n</strong>-1\r\n<strong>Explanation</strong>: Both are different.</span>\r\n</pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:&nbsp; </strong></span><br />\r\n<span style=\"font-size:18px\">The input s and p are provided as a <strong>parameter </strong>to the function <strong>findPattern</strong>. You need to return the starting index of p in s if it exists, else return -1.</span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string `s` and a pattern `p`, determine if the pattern `p` exists within the string `s`. Return the starting index of the first occurrence of `p` in `s`. If `p` does not exist in `s`, return -1.  The comparison is case-sensitive.",
                "constraints": [],
                "testcases": [
                    {
                        "input": "s = \"Hello\"\np = \"llo\"",
                        "output": "2",
                        "explanation": "The pattern \"llo\" starts at index 2 in the string \"Hello\"."
                    },
                    {
                        "input": "s = \"World\"\np = \"Doodle\"",
                        "output": "-1",
                        "explanation": "The pattern \"Doodle\" does not exist in the string \"World\"."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>s.find(p)</p>"
        ],
        "relatedTopics": [
            {
                "name": "python-strings",
                "slug": "python-strings"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\r\n\r\ndef findPattern(s,p):\r\n    return s.find(p)\r\n",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "//Back-end complete function Template for javascript\r\n\r\nclass Solution {\r\n    findPattern(s, p) {\r\n        let n = s.length;\r\n        let m = p.length;\r\n        if(m > n) return -1;\r\n        for(let i = 0; i <= n - m; i++) {\r\n            let flag = true;\r\n            for(let j = i; j < i + m; j++) {\r\n                if(s[j] !== p[j - i]) {\r\n                    flag = false;\r\n                    break;\r\n                }\r\n            }\r\n            if(flag) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}