{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705026,
            "title": "Find Prime numbers in a range",
            "titleSlug": "find-prime-numbers-in-a-range4718",
            "content": "<p><span style=\"font-size:18px\">Given two integers M and N, generate all primes between M and N including M and N.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong>\r\nM=1,N=10\r\n<strong>Output:</strong>\r\n2 3 5 7\r\n<strong>Explanation:</strong>\r\nThe prime numbers between 1 and 10\r\nare 2,3,5 and 7.</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong>\r\nM=2, N=5\r\n<strong>Output:</strong>\r\n2,3,5\r\n<strong>Explanation:</strong>\r\nThe prime numbers between 2 and 5 are \r\n2,3 and 5.</span></pre>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou don&#39;t need to read input or print anything. Your task is to complete the function primeRange() which takes 2 integer inputs M and N and returns a list of all primes between M and N including N and M.</span></p>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong>O(N*sqrt(N))<br />\r\n<strong>Expected Auxillary Space:</strong>O(1)</span></p>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n1&lt;=M&lt;=N&lt;=10<sup>6</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two integers M and N, find all prime numbers between M and N (inclusive).",
                "constraints": [
                    "1 <= M <= N <= 10^6"
                ],
                "testcases": [
                    {
                        "input": "M = 1, N = 10",
                        "output": "2 3 5 7",
                        "explanation": "The prime numbers within the range [1, 10] are 2, 3, 5, and 7."
                    },
                    {
                        "input": "M = 2, N = 5",
                        "output": "2 3 5",
                        "explanation": "The prime numbers within the range [2, 5] are 2, 3, and 5."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Iterate over the range and check which numbers are prime.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Prime Number",
                "slug": "prime-number"
            }
        ],
        "companies": [
            "vmware",
            "qualcomm",
            "ge"
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "// Back-end complete function Template for C++\n\nclass Solution {\n  public:\n    // Function to check if a number is prime or not\n    int isPrime(int N) {\n        if (N == 2) return 1; // 2 is a prime number\n        if (N < 2 || N % 2 == 0) return 0; // if number is less than 2 or even, it is not prime\n        for (int i = 3; i * i <= N; i += 2) // checking divisibility by odd numbers up to square root of N\n            if (N % i == 0) return 0; // if divisible, number is not prime\n        return 1; // number is prime\n    }\n    \n    // Function to find prime numbers within a given range\n    vector<int> primeRange(int M, int N) {\n        vector<int> ans; // vector to store prime numbers\n\n        // iterating over the given range\n        for (int i = M; i <= N; i++) {\n            if (isPrime(i)) ans.push_back(i); // checking if the number is prime and adding to the vector\n        }\n        return ans; // returning the vector of prime numbers\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "// Back-end complete function Template for Java\n\nclass Solution {\n    // function to check if a number is prime\n    int isPrime(int N) {\n        if (N == 2) return 1; // 2 is a prime number\n        if (N < 2 || N % 2 == 0) return 0; // check if N is less than 2 or even number\n        // iterate from 3 to square root of N, incrementing by 2\n        // to check if N is divisible by any odd number\n        for (int i = 3; i * i <= N; i += 2) \n            if (N % i == 0) return 0; // N is divisible by i, so not a prime number\n        return 1; // N is a prime number\n    }\n    \n    // function to find prime numbers in a given range\n    ArrayList<Integer> primeRange(int M, int N) {\n        ArrayList<Integer> ans = new ArrayList<Integer>(); // create an empty list to store prime numbers\n        // iterate from M to N\n        for (int i = M; i <= N; i++) {\n            if (isPrime(i) == 1) ans.add(i); // if a number is prime, add it to the list\n        }\n        return ans; // return the list of prime numbers in the given range\n    }\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "#Back-end complete function Template for Python 3\r\n\r\nclass Solution:\r\n\r\n    #Function to check if a given number is prime.\r\n    def isPrime(self, N):\r\n        if N == 2:\r\n            return 1\r\n        if N % 2 == 0 or N < 2:\r\n            return 0\r\n        \r\n        #Checking divisibility from 3 to sqrt(N) with step size 2.\r\n        for i in range(3, (int)(math.sqrt(N) + 1), 2):\r\n            if N % i == 0:\r\n                return 0\r\n        return 1\r\n\r\n    #Function to find prime numbers in a given range.\r\n    def primeRange(self, M, N):\r\n        ans = []\r\n\r\n        #Iterating over the range from M to N.\r\n        for i in range(M, N + 1):\r\n            if self.isPrime(i) == 1:\r\n                ans.append(i)\r\n        return ans",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n/**\n * @param {number} M\n * @param {number} N\n * @returns {number[]}\n*/\n\nclass Solution {\n    //Function to check if a given number is prime.\n    isPrime(N){\n        if (N == 2){\n            return 1;\n        }\n        if (N % 2 == 0 || N < 2){\n            return 0;\n        }\n        \n        //Checking divisibility from 3 to sqrt(N) with step size 2.\n        for (let i = 3; i <= Math.sqrt(N); i+=2){\n            if (N % i === 0){\n                return 0;\n            }\n        }\n        return 1;\n    }\n\n    //Function to find prime numbers in a given range.\n    primeRange(M, N)\n    {\n        const ans = [];\n\n        //Iterating over the range from M to N.\n        for (let i = M; i <= N; i++){\n            if (this.isPrime(i) === 1){\n                ans.push(i);\n            }\n        }\n        return ans;\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}