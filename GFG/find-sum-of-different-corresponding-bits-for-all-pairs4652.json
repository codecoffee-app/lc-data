{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704662,
            "title": "Bit Difference",
            "titleSlug": "find-sum-of-different-corresponding-bits-for-all-pairs4652",
            "content": "<p><span style=\"font-size:18px\">We define f&nbsp;(X, Y)&nbsp;as number of different corresponding bits in binary representation of X and Y. For example, f (2, 7)&nbsp;= 2, since binary representation of 2 and 7 are 010&nbsp;and 111, respectively. The first and the third bit differ, so&nbsp;f (2, 7)&nbsp;= 2.</span></p>\n\n<p><span style=\"font-size:18px\">You are given an array <strong>A</strong> of <strong>N</strong> integers, A<sub>1</sub>, A<sub>2</sub>&nbsp;,&hellip;, A<sub>N</sub>. Find sum of f(A<sub>i</sub>, A<sub>j</sub>) for all ordered pairs (i, j) such that 1 &le; i, j &le; N. Return the answer modulo 10<sup>9</sup>+7.</span></p>\n\n<p><strong><span style=\"font-size:18px\">Example 1:</span></strong></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong> N = 2\nA = {2, 4}\n<strong>Output:</strong> 4\n<strong>Explaintion:</strong> We return \nf(2, 2) + f(2, 4) + \nf(4, 2) + f(4, 4) = \n0 + 2 + \n2 + 0 = 4.</span></pre>\n\n<p><strong><span style=\"font-size:18px\">Example 2:</span></strong></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong> N = 3\nA = {1, 3, 5}\n<strong>Output:</strong> 8\n<strong>Explaination:</strong> We return \nf(1, 1) + f(1, 3) + f(1, 5) + \nf(3, 1) + f(3, 3) + f(3, 5) + \nf(5, 1) + f(5, 3) + f(5, 5) = \n0 + 1 + 1 + \n1 + 0 + 2 + \n1 + 2 + 0 = 8.</span></pre>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nYou do not need to read input or print anything. Your task is to complete the function <strong>countBits()</strong> which takes the value N and the array A as input parameters and returns the desired count modulo 10<sup>9</sup>+7.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(N * log<sub>2</sub>(Max(A<sub>i</sub>)))<br />\n<strong>Expected Auxiliary Space:</strong> O(1)</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\n1 &le; N &le; 10<sup>5</sup><br />\n2<sup>0</sup> &le;&nbsp;A[i] &lt;&nbsp;2<sup>31</sup></span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array **A** of **N** integers, A<sub>1</sub>, A<sub>2</sub>, ..., A<sub>N</sub>, define a function f(X, Y) as the number of differing bits in the binary representations of X and Y. Calculate the sum of f(A<sub>i</sub>, A<sub>j</sub>) for all ordered pairs (i, j) such that 1 \u2264 i, j \u2264 N. Return the result modulo 10<sup>9</sup>+7.",
                "constraints": [
                    "1 \u2264 N \u2264 10<sup>5</sup>",
                    "2<sup>0</sup> \u2264 A[i] < 2<sup>31</sup>"
                ],
                "testcases": [
                    {
                        "input": "N = 2\nA = [2, 4]",
                        "output": "4",
                        "explanation": "f(2, 2) + f(2, 4) + f(4, 2) + f(4, 4) = 0 + 2 + 2 + 0 = 4."
                    },
                    {
                        "input": "N = 3\nA = [1, 3, 5]",
                        "output": "8",
                        "explanation": "f(1, 1) + f(1, 3) + f(1, 5) + f(3, 1) + f(3, 3) + f(3, 5) + f(5, 1) + f(5, 3) + f(5, 5) = 0 + 1 + 1 + 1 + 0 + 2 + 1 + 2 + 0 = 8."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Say for the ith bit position there are A numbers which have &#39;0&#39; and B numbers which have &#39;1&#39;. Estimate the effect of it on the answer.&nbsp;</span></p>",
            "<p><span style=\"font-size:18px\">The effect on answer&nbsp;will be 2AB.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Bit Magic",
                "slug": "bit-magic"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [
            "microsoft",
            "google"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "// Back-end complete function Template for C++\n\nclass Solution{\npublic:\n    int countBits(int N, long long int A[])\n    {\n        long long int mod = 1000000007;\n        int ans = 0;\n        // traverse over all bits\n        for(int i = 0; i < 31; i++){\n            long long int count = 0;\n            \n            // count number of elements with ith bit = 0\n            for(int j = 0; j < N; j++){\n                if(A[j] & (1 << i))\n                    count++;\n            }\n            \n            // add to answer count * (n - count) * 2\n            ans += (count * ((long long int)N - count) * 2LL) % mod;\n            if(ans >= mod)\n                ans -= mod;\n        }\n        return ans;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution{\n    static int countBits(int N, long A[])\n    {\n        long mod = 1000000007;\n        int ans = 0;\n        // traverse over all bits\n        for(int i = 0; i < 31; i++){\n            long count = 0;\n            \n            // count number of elements with ith bit = 0\n            for(int j = 0; j < N; j++){\n                if((A[j] & (1 << i))!=0)\n                    count++;\n            }\n            \n            // add to answer count * (n - count) * 2\n            ans += (count * ((long)N - count) * 2L) % mod;\n            if(ans >= mod)\n                ans -= mod;\n        }\n        return ans;\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "class Solution:\n    def countBits(self, N, A):\n        # initializing the modulo constant\n        mod = 1000000007\n        # initializing the answer variable\n        ans = 0\n        # iterating through 31 bits (0 to 30)\n        for i in range(31) :\n            # initializing the count variable\n            count = 0;\n            \n            # iterating through the array A\n            for j in A :\n                # counting the number of elements with the i-th bit set\n                if j & (1<<i) :\n                    count +=1\n            \n            # updating the answer by adding the count multiplied by (N-count)*2\n            ans += count*(N-count)*2\n            # taking the modulo of the answer with the mod constant\n            ans%=mod\n            \n        # returning the final answer\n        return ans",
                "lang_text": "py"
            },
            {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n\nclass Solution {\n    countBits(A,n) {\n        const mod = 1000000007;\n        let ans = 0;\n        // traverse over all bits\n        for(let i = 0; i < 31; i++){\n            let count = 0;\n            \n            // count number of elements with ith bit = 0\n            for(let j = 0; j < n; j++){\n                if(A[j] & (1 << i))\n                    count++;\n            }\n            \n            // add to answer count * (n - count) * 2\n            ans += (count * ((n - count) * 2)) % mod;\n            if(ans >= mod)\n                ans -= mod;\n        }\n        return ans;\n    }\n}",
                "lang_text": "javascript"
            },
            {
                "lang": "C#",
                "full_func": "class Solution\n{\n    //Complete this function\n    //Function to count set bits in the given array\n    public int countBits(int N, long[] A)\n    {\n        long mod = 1000000007;\n        int ans = 0;\n        // traverse over all bits\n        for(int i = 0; i < 31; i++){\n            long count = 0;\n            \n            // count number of elements with ith bit = 0\n            for(int j = 0; j < N; j++){\n                if((A[j] & (1L << i)) == 0)\n                    count++;\n            }\n            \n            // add to answer count * (n - count) * 2\n            ans += (int)(((count * (N - count) * 2L) % mod)); // Cast it explicitly to int\n            if(ans >= mod)\n                ans -= (int)mod; // Cast mod to int for consistency\n        }\n        return ans;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}