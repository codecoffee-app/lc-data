{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 702994,
            "title": "Count of camel case characters",
            "titleSlug": "find-the-camel3348",
            "content": "<p><span style=\"font-size:18px\">Given a string. Count the number of Camel Case characters in it.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\nS = &quot;ckjkUUYII&quot;\n<strong>Output:</strong> 5\n<strong>Explanation</strong>: Camel Case characters present:\nU, U, Y, I and I.\n</span>\n</pre>\n\n<p><span style=\"font-size:18px\">\u00e2\u20ac\u2039<strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input</strong>: \nS = &quot;abcd&quot;\n<strong>Output:</strong> 0\n<strong>Explanation</strong>: No Camel Case character\npresent.</span>\n</pre>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nYou don&#39;t need to read input or print anything. Your task is to complete the function&nbsp;<strong>countCamelCase()&nbsp;</strong>which takes the string S as input and returns the count of the camel case characters in the string.</span></p>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Expected Time Complexity:&nbsp;</strong>O(|S|).<br />\n<strong>Expected Auxiliary Space:&nbsp;</strong>O(1).</span></p>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Constraints:</strong><br />\n1&lt;=|S|&lt;=10<sup>5</sup></span></p>\n\n<p>&nbsp;</p>\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string, count the number of uppercase (Camel Case) characters within it.",
                "constraints": [
                    "1 <= |S| <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "ckjkUUYII",
                        "output": "5",
                        "explanation": "The uppercase characters are U, U, Y, I, and I. Thus, the count is 5."
                    },
                    {
                        "input": "abcd",
                        "output": "0",
                        "explanation": "There are no uppercase characters in the string. Thus, the count is 0."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Just run a simple loop and check for each character.</span></p>\n\n<p><span style=\"font-size:18px\">if s[i] &gt;= &#39;A&#39; and s[i] &lt;= &#39;Z&#39;, then it&#39;s a camel case character.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "// C++ program to count the number of CamelCase characters in a string\n\nclass Solution\n{\n  public:   \n    // Function to count the CamelCase characters in a string\n    int countCamelCase (string s)\n    {\n    \tint res = 0;\n    \t// looping through all characters in the string\n    \tfor (int i = 0; i < s.length (); ++i)\n    \t\t// checking if a character is uppercase\n    \t\tif (s[i] >= 'A' and s[i] <= 'Z')\n    \t\t\tres++;\n    \n    \treturn res;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Count the number of camel case letters in the given string\n\nclass Sol{\n    int countCamelCase (String s) {\n        int res = 0; //initialize the result to 0\n        for (int i = 0; i < s.length(); ++i) //iterate through each character in the string\n            if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z') //check if the character is a capital letter\n                res++; //increment the result counter\n    \n        return res; //return the final count of camel case letters\n    }\n}\n// Contributed By: Pranay Bansal",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\nclass Solution:\n    # Function to count the number of CamelCase characters in a string\n    def countCamelCase (self,s):\n        res = 0\n        # Iterating over each character in the string\n        for i in s:\n            # Checking if the character is uppercase\n            if i >= 'A' and i <= 'Z':\n                res += 1\n                \n        return res\n    \n# Contributed By: Pranay Bansal",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n\n\n/**\n * @param {string} s\n * @returns {number}\n*/\n\nclass Solution{\n    countCamelCase(s){\n        let res = 0;\n    \tfor (let i = 0; i < s.length; ++i)\n    \t\tif (s[i] >= 'A' && s[i] <= 'Z')\n    \t\t\tres++;\n    \n    \treturn res;\n    }\n}",
                "lang_text": "javascript"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    public int countCamelCase(string s)\n    {\n        int res = 0;\n        // looping through all characters in the string\n        for (int i = 0; i < s.Length; ++i)\n        {\n            // checking if a character is uppercase\n            if (s[i] >= 'A' && s[i] <= 'Z')\n                res++;\n        }\n\n        return res;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}