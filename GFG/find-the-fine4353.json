{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703818,
            "title": "Find the fine",
            "titleSlug": "find-the-fine4353",
            "content": "<p><span style=\"font-size: 18px;\">Given an array of car numbers <strong>car[]</strong>,&nbsp;</span><span style=\"font-size: 18px;\">an array of penalties <strong>fine[],</strong></span><span style=\"font-size: 18px;\"> and an integer value <strong>date</strong>. The task is to find the total fine which will be collected on the given date. The fine is collected from odd-numbered cars on even dates and vice versa.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>date = 12, car[] = [2375, 7682, 2325, 2352], fine[] = [250, 500, 350, 200]\n<strong>Output: </strong>600\n<strong>Explanation: </strong>The date is 12 (even), so we collect the fine from odd-numbered cars. The odd-numbered cars and the fines associated with them are as follows:\n2375 -&gt; 250\n2325 -&gt; 350\nThe sum of the fines is 250+350 = 600</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>date = 8, car[] = [2222, 2223, 2224], fine[] = [200, 300, 400]\n<strong>Output: </strong>300</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong> O(n)<br /><strong>Expected Space&nbsp;</strong></span><strong style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif; font-size: 18px;\">Complexity</strong><strong style=\"font-size: 18px; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">:</strong><span style=\"font-size: 18px; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\"> O(1)</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &lt;= car.size &lt;= 10<sup>5</sup><br />1 &lt;= car[i], fine[i], date &lt;= 10<sup>5</sup><br /></span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size: 14pt;\">Try to update the sum of the penalties of even car numbers and the sum of penalties of odd car numbers then finally printing the even sum if the date is odd or odd sum if the date is even.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "microsoft"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end function to calculate total fine.\n\nclass Solution {\n  public:\n    // Function to calculate total fine based on date, car numbers and respective fines.\n    long long int totalFine(int date, vector<int> car, vector<int> fine) {\n        int n = car.size();\n        long long int even = 0, odd = 0;\n\n        // iterating over all the cars.\n        for (int i = 0; i < n; i++) {\n            // if car number is even, adding fine to even variable.\n            if (car[i] % 2 == 0)\n                even += fine[i];\n            // if car number is odd, adding fine to odd variable.\n            else\n                odd += fine[i];\n        }\n\n        // if date is even, returning odd fines.\n        if (date % 2 == 0)\n            return odd;\n        // if date is odd, returning even fines.\n        else\n            return even;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution {\n\n    // Function to calculate total fine based on date, car numbers and respective fines.\n    public long totalFine(int date, int[] car, int[] fine) {\n        int n = car.length;\n        long even = 0, odd = 0;\n\n        // iterating over all the cars.\n        for (int i = 0; i < n; i++) {\n            // if car number is even, adding fine to even variable.\n            if (car[i] % 2 == 0) {\n                even += fine[i];\n            } else {\n                // if car number is odd, adding fine to odd variable.\n                odd += fine[i];\n            }\n        }\n\n        // if date is even, returning odd fines.\n        if (date % 2 == 0) {\n            return odd;\n        } else {\n            // if date is odd, returning even fines.\n            return even;\n        }\n    }\n}\n",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "# User function Template for python3\n\n\nclass Solution:\n\n    def totalFine(self, date, car, fine):\n        # Number of cars\n        n = len(car)\n        even = 0\n        odd = 0\n\n        # Iterating over all the cars\n        for i in range(n):\n            # If car number is even, adding fine to even variable\n            if car[i] % 2 == 0:\n                even += fine[i]\n            else:\n                # If car number is odd, adding fine to odd variable\n                odd += fine[i]\n\n        # If date is even, returning odd fines\n        if date % 2 == 0:\n            return odd\n        else:\n            # If date is odd, returning even fines\n            return even\n",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "//Back-end complete function Template for javascript\nclass Solution {\n    totalFine(date, car, fine) {\n        let n = car.length;\n        let even = 0, odd = 0;\n\n        for (let i = 0; i < n; i++) {\n            if (car[i] % 2 === 0)\n                even += fine[i];\n            else\n                odd += fine[i];\n        }\n\n        if (date % 2 === 0)\n            return odd;\n        else\n            return even;\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}