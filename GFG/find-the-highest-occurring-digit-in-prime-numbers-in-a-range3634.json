{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705263,
            "title": "Find the highest occurring digit in prime numbers in a range",
            "titleSlug": "find-the-highest-occurring-digit-in-prime-numbers-in-a-range3634",
            "content": "<p><span style=\"font-size: 18px;\">Given a range&nbsp;L&nbsp;to&nbsp;R, the task is to find the highest occurring digit in prime numbers which lie between L and R (both inclusive). If multiple digits have same highest frequency return&nbsp;the largest of them. If no prime number occurs between L and R, return&nbsp;-1.</span><br />&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input</strong>: L = 2, R = 10\n<strong>Output:</strong>&nbsp;7\n<strong>Explanation</strong>: Between 2 and 10 every digit\nhas same frquency and 7 is largest among\nthem.</span></pre>\n<p><span style=\"font-size: 18px;\"><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>L = 2, R = 20\n<strong>Output:&nbsp;</strong>1\n<strong>Explanation</strong>: Prime number between 2 and 20 are \n2, 3, 5, 7, 11, 13, 17, 19. 1 occur \nmaximum i.e 4 times among 0 to 9.</span></pre>\n<p><br /><span style=\"font-size: 18px;\"><strong>Your Task:&nbsp;&nbsp;</strong><br />You dont need to read input or print anything. Complete the function <strong>maxDigit()&nbsp;</strong>which takes L&nbsp;and R&nbsp;as input parameter and returns the highest occuring digit. If multiple digits have same highest frequency return&nbsp;the largest of them. If no prime number occurs between L and R, return&nbsp;-1.<br /><br /><strong>Expected Time Complexity:</strong> O(nlog(n)sqrt(n))<br /><strong>Expected Auxiliary Space:</strong> O(k)<br /><br /><strong>Constraints:</strong><br />1 &lt;= L&lt;= R &lt;= 1000</span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p>Brute force.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Prime Number",
                "slug": "prime-number"
            },
            {
                "name": "sieve",
                "slug": "sieve"
            }
        ],
        "companies": [
            "walmart"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\nclass Solution {\n  public:\n    //Function to check if a number is prime or not.\n    bool isprime(int n){\n        if(n==1)return false;\n        //iterating from 2 to square root of number to check for factors.\n        for(int i = 2; i*i <= n ;i++){ \n            if(n%i == 0){ \n                return false; \n            } \n        }\n        return true;\n    }\n    //Function to find the digit with maximum frequency.\n    int maxDigit(int L, int R){\n        //array to store the frequency of each digit.\n        int f[10]={0};\n        //iterating from L to R.\n        for(int i=L;i<=R;i++){\n            //checking if the number is prime.\n            if(isprime(i)){\n                int p=i;\n                //iterating through each digit of the prime number.\n                while(p){\n                    f[p%10]++;\n                    p=p/10;\n                }\n            }\n        }\n        int ans=0, mx=INT_MIN;\n        //iterating through the frequency array.\n        for(int i=0;i<10;i++){\n            //finding the digit with maximum frequency.\n            if(mx<=f[i]){\n                mx=f[i];\n                ans=max(ans,i);\n            }\n        }\n        //returning -1 if no digits have frequency greater than 0.\n        if(mx==0)return -1;\n        //returning the digit with maximum frequency.\n        return ans;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\nclass Solution\n{\n    //Function to check if a number is prime or not.\n    public bool isprime(int n)\n    {\n        if(n==1)return false;\n        //iterating from 2 to square root of number to check for factors.\n        for(int i = 2; i*i <= n ;i++){ \n            if(n%i == 0){ \n                return false; \n            } \n        }\n        return true;\n    }\n    \n    //Complete this function\n    public int maxDigit(int L, int R)\n    {\n        int[] f=new int[10];\n        //iterating from L to R.\n        for(int i=L;i<=R;i++){\n            //checking if the number is prime.\n            if(isprime(i)){\n                int p=i;\n                //iterating through each digit of the prime number.\n                while(p != 0){\n                    f[p%10]++;\n                    p=p/10;\n                }\n            }\n        }\n        int ans=0, mx=int.MinValue;\n        //iterating through the frequency array.\n        for(int i=0;i<10;i++){\n            //finding the digit with maximum frequency.\n            if(mx<=f[i]){\n                mx=f[i];\n                ans=Math.Max(ans,i);\n            }\n        }\n        //returning -1 if no digits have frequency greater than 0.\n        if(mx==0)return -1;\n        //returning the digit with maximum frequency.\n        return ans;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}