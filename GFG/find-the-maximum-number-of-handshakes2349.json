{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704888,
            "title": "Maximum Handshakes",
            "titleSlug": "find-the-maximum-number-of-handshakes2349",
            "content": "<p><span style=\"font-size:18px\">There are&nbsp;<strong>N</strong>&nbsp;people in a room. If two persons shake hands exactly once,&nbsp;find the maximum number of handshakes possible.&nbsp;</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong><span style=\"font-size:18px\">Example 1:</span></strong></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong> N = 2\r\n<strong>Output: </strong>1\r\n<strong>Explaination:</strong> There are two people and they \r\ncan shake hands maximum one time.</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong><span style=\"font-size:18px\">Example 2:</span></strong></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong> N = 3\r\n<strong>Output:</strong> 3\r\n<strong>Explaination:</strong> Let the people be person 1, 2 and 3. \r\nSo the possible handshakes are (1, 2), (2, 3) and \r\n(1, 3).</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou do not need to read input or print anything. Your task is to complete the function <strong>handShakes()</strong> which takes N as input parameter and returns the maximum number of handshakes possible.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(1)<br />\r\n<strong>Expected Auxiliary Space:</strong> O(1)</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n2 &le; N &le; 10<sup>9</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given N people in a room, determine the maximum number of handshakes possible if each pair of people shakes hands exactly once.",
                "constraints": [
                    "2 <= N <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "2",
                        "output": "1",
                        "explanation": "With 2 people, there is only one possible handshake between them."
                    },
                    {
                        "input": "3",
                        "output": "3",
                        "explanation": "With 3 people (person 1, 2, and 3), the possible handshakes are (1, 2), (2, 3), and (1, 3), resulting in a total of 3 handshakes."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">The maximum number of handshakes is possible when each person shakes hand with other N-1 person.</span></p>",
            "<p><span style=\"font-size:18px\">It requires 2 persons for a handshake.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "// Back-end complete function Template for C++\n\nclass Solution{\npublic:\n    // Function to calculate the number of handshakes\n    long long handShakes(int N){\n        long long n = N;\n        \n        // Formula to calculate the number of handshakes\n        return (n * (n - 1)) / 2;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\nclass Solution{\n    // Calculate the number of handshakes that can be made with N people.\n    static long handShakes(long N){\n        // Formula: n = (N * (N - 1)) / 2\n        long n = (N * (N - 1)) / 2;\n        // Return the number of handshakes.\n        return n;\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\nclass Solution:\n    #Function to calculate the number of possible handshakes.\n    def handShakes(self, N):\n        n = N;\n        #Using the formula to calculate the number of handshakes:\n        #n * (n - 1) / 2\n        return (n * (n - 1))//2",
                "lang_text": "py"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    public long handShakes(int N)\n    {\n        long n = N;\n        \n        // Formula to calculate the number of handshakes\n        return (n * (n - 1)) / 2;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}