{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703160,
            "title": "Find the most frequent digit",
            "titleSlug": "find-the-most-frequent-digit4432",
            "content": "<p><span style=\"font-size:18px\">Given a number N, find the most occurring digit in it. If two or more digits occur same number of times, then return the highest of them. Input number is given as a string.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input</strong>:\nN = &quot;12234&quot;\n<strong>Output</strong>:\n2\n<strong>Explanation </strong>:\n2 occurs most times</span></pre>\n\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input</strong>:\nN = &quot;1122&quot;\n<strong>Output</strong>:\n2\n<strong>Explanation </strong>:\n1 and 2 occurs most times but 2 &gt; 1.</span></pre>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Your Task</strong>: </span></p>\n\n<p><span style=\"font-size:18px\">You don&#39;t need to read input or print anything. Your task is to c</span><span style=\"font-size:18px\">omplete the function <em>solve()&nbsp;</em>that receives a string N as input parameter and returns the most frequent digit in it as a string.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity</strong> : O(len(N))<br />\n<strong>Expected Space Complexity</strong> : O(1)</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Constraints</strong>:<br />\n1&lt;= len(N) &lt;=101000</span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a number N (represented as a string), determine the digit that appears most frequently within the number. If multiple digits share the highest frequency, return the largest among them.",
                "constraints": [
                    "1 <= len(N) <= 100000"
                ],
                "testcases": [
                    {
                        "input": "12234",
                        "output": "2",
                        "explanation": "The digit '2' appears twice, which is more frequent than any other digit in the input."
                    },
                    {
                        "input": "1122",
                        "output": "2",
                        "explanation": "Both '1' and '2' appear twice. Since they have equal frequency, the larger digit '2' is returned."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>1. Use string to input the number as the number can be very huge.</p>",
            "<p>2. Hash the digits from 0 to 9. Now just see which digit occurs the most.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Hash",
                "slug": "hash"
            },
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "// Function to find the most frequent digit in a given string\n\nint solve(string s)\n{\n    int arr[10]={0}; // Array to store the count of each digit\n    \n    // Loop through the string and count the occurrence of each digit\n    for(int i=0;i<s.length();i++)\n    {\n        arr[s[i]-'0']++;\n    }\n    \n    int max=-1; // Variable to store the maximum count of a digit\n    int res=0; // Variable to store the resulting most frequent digit\n    \n    // Loop through the array and find the digit with maximum count\n    for(int i=0;i<10;i++)\n    {\n        if(arr[i]>=max)\n        {\n            max=arr[i];\n            res=i;\n        }\n    }\n    \n    return res; // Return the most frequent digit\n}",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\nclass Solution \n{ \n    // Function to find the most frequent digit in the given number\n    String solve(String N) \n    { \n        // Array to store the frequencies of each digit, initialized with zeros\n        int h[] = new int [10];\n        Arrays.fill(h,0);\n        \n        // Counting the frequency of each digit in the number\n        for(int i=0;i<N.length();i++)\n        {\n            h[N.charAt(i)-'0']+=1;\n        }\n        \n        // Finding the digit with the highest frequency\n        int mx=0;\n        int ans=-1;\n        for(int i=0;i<=9;i++)\n        {\n            if(h[i]>=mx)\n            {\n                mx=h[i];\n                ans=i;\n            }\n        }\n        \n        // Converting the most frequent digit to a string and returning it\n        return Integer.toString(ans);\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "class Solution\n{\n    public int solve(string N)\n    {\n        int[] arr = new int[10]; // Array to store the count of each digit\n\n        // Loop through the string and count the occurrence of each digit\n        for (int i = 0; i < N.Length; i++)\n        {\n            arr[N[i] - '0']++;\n        }\n\n        int max = -1; // Variable to store the maximum count of a digit\n        int res = 0; // Variable to store the resulting most frequent digit\n\n        // Loop through the array and find the digit with maximum count\n        for (int i = 0; i < 10; i++)\n        {\n            if (arr[i] >= max)\n            {\n                max = arr[i];\n                res = i;\n            }\n        }\n\n        return res; // Return the most frequent digit\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}