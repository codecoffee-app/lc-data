{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705659,
            "title": "Find the pattern",
            "titleSlug": "find-the-pattern4155",
            "content": "<p><span style=\"font-size:18px\">Given a sequence as follow:<br />\n1,1,7,19,73....<br />\nFind the N<sup>th</sup>&nbsp;term of the given sequence.</span><br />\n&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input: </strong>N = 1\n<strong>Output: </strong>1</span>\n</pre>\n\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input: </strong>N = 4\n<strong>Output: </strong>19</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nYour task is to complete the function&nbsp;<strong>NthTerm()&nbsp;</strong>which takes N as input paramater and returns N<sup>th</sup>&nbsp;term of the given sequence modulo 10<sup>9</sup>+7.</span><br />\n&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:&nbsp;</strong>O(log(N))<br />\n<strong>Expected Space Compelxity:&nbsp;</strong>O(K) where K is constant.</span><br />\n&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\n1 &lt;= N &lt;= 10<sup>10</sup></span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given the sequence 1, 1, 7, 19, 73, ... find the Nth term of the sequence. Return the result modulo 10^9 + 7.",
                "constraints": [
                    "1 <= N <= 10^10"
                ],
                "testcases": [
                    {
                        "input": "1",
                        "output": "1",
                        "explanation": null
                    },
                    {
                        "input": "4",
                        "output": "19",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to find linear recurrence</p>"
        ],
        "relatedTopics": [
            {
                "name": "Modular Arithmetic",
                "slug": "modular-arithmetic"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "\n\nclass Solution {\npublic:\nusing ll = long long int;\nusing matrix = vector<vector<ll>>;\nll MOD = 1e9 + 7;\n// HINT: 5*a + 2*b\n// HELP FOR SOLUTION TAKEN FROM ::  http://fusharblog.com/solving-linear-recurrence-for-programming-contest/\n// computes A * B\nmatrix mul(matrix A, matrix B)\n{\n\tint K = 2;\n    matrix C(K+1, vector<ll>(K+1));\n    for(int i = 1; i <= K; i++) \n    \tfor(int j = 1; j <= K; j++)\n    \t\tfor(int k = 1; k <= K; k++)\n        \t\tC[i][j] = (C[i][j] + A[i][k]* B[k][j]) % MOD;\n    return C;\n}\n// computes A ^ p\nmatrix pow(matrix A, int p)\n{\n    if (p == 1)\n        return A;\n    if (p % 2)\n        return mul(A, pow(A, p-1));\n    matrix X = pow(A, p/2);\n    return mul(X, X);\n}\n// returns the N-th term\nlong long int NthTerm(long long int N)\n{\n\tint K = 2;\n    // create vector F1\n    vector<ll> F1(K+1);\n    F1[1] = 1;\n    F1[2] = 1;\n    // create matrix T\n    matrix T(K+1, vector<ll>(K+1));\n    T[1][1] = 0, T[1][2] = 1;\n    T[2][1] = 5, T[2][2] = 2;\n    // raise T to the (N-1)th power\n    if (N == 1)\n        return 1;\n    T = pow(T, N-1);\n    // the answer is the first row of T . F1\n    ll res = 0;\n    for(int i = 1; i <= K; i++)\n        res = (res + T[1][i] * F1[i]) % MOD;\n    return res;\n}\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            },
            {
                "lang": "C#",
                "full_func": "class Solution\n{\n    const long MOD = 1000000007;\n\n    // computes A * B\n    static long[,] Mul(long[,] A, long[,] B)\n    {\n        int K = 2;\n        long[,] C = new long[K + 1, K + 1];\n        for (int i = 1; i <= K; i++)\n        {\n            for (int j = 1; j <= K; j++)\n            {\n                for (int k = 1; k <= K; k++)\n                {\n                    C[i, j] = (C[i, j] + A[i, k] * B[k, j]) % MOD;\n                }\n            }\n        }\n        return C;\n    }\n\n    // computes A ^ p\n    static long[,] Pow(long[,] A, int p)\n    {\n        if (p == 1)\n        {\n            return A;\n        }\n        if (p % 2 == 1)\n        {\n            return Mul(A, Pow(A, p - 1));\n        }\n        long[,] X = Pow(A, p / 2);\n        return Mul(X, X);\n    }\n\n    // returns the N-th term\n    public long NthTerm(long N)\n    {\n        int K = 2;\n        // create vector F1\n        long[] F1 = new long[K + 1];\n        F1[1] = 1;\n        F1[2] = 1;\n        // create matrix T\n        long[,] T = new long[K + 1, K + 1];\n        T[1, 1] = 0;\n        T[1, 2] = 1;\n        T[2, 1] = 5;\n        T[2, 2] = 2;\n        // raise T to the (N-1)th power\n        if (N == 1)\n        {\n            return 1;\n        }\n        T = Pow(T, (int)N - 1);\n        // the answer is the first row of T . F1\n        long res = 0;\n        for (int i = 1; i <= K; i++)\n        {\n            res = (res + T[1, i] * F1[i]) % MOD;\n        }\n        return res;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}