{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703232,
            "title": "Find the position",
            "titleSlug": "find-the-position4424",
            "content": "<p><span style=\"font-size:20px\">Consider a series of numbers composed of only digits 4 and 7. First few numbers in the series are <strong>4, 7, 44, 47, 74, 77, 444, .. </strong>etc. Given a string <strong>N </strong>constructed by 4, 7 digit only, find position of this number in this series.</span><br />\n&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong> N = &quot;7&quot;\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> In the series 4 , 7 , 44 , 47...\n7 is at second position.</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong> N = &quot;444&quot;\n<strong>Output:</strong> 7\n<strong>Explanation: </strong>In the series 4 , 7 , 44 ,\n47 , 74 , 77 , 444 , 447... 444 is at 7th\nposition </span></pre>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:&nbsp;&nbsp;</strong><br />\nYou don&#39;t need to read input or print anything. Your task is to complete the function&nbsp;<strong>findpos()&nbsp;</strong>which accepts a string N as input parameter and returns the position of that string in the given series.</span><br />\n&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong>&nbsp;O(Length of given string)<br />\n<strong>Expected Auxiliary Space:</strong>&nbsp;O(1)</span></p>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\n1 &lt;= Length of String &lt; 50</span></p>\n\n<p>&nbsp;</p>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Consider a series of numbers composed only of the digits 4 and 7. The sequence begins: 4, 7, 44, 47, 74, 77, 444, ... Given a string N consisting only of the digits 4 and 7, determine the position of N in this sequence.",
                "constraints": [
                    "1 <= Length of String <= 50"
                ],
                "testcases": [
                    {
                        "input": "7",
                        "output": "2",
                        "explanation": "The number 7 is the second element in the sequence: 4, 7, 44, 47..."
                    },
                    {
                        "input": "444",
                        "output": "7",
                        "explanation": "The number 444 is the seventh element in the sequence: 4, 7, 44, 47, 74, 77, 444..."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to imagine it like a tree and think how you can number a node in complete binay tree</p>\n\n<p>&nbsp;</p>",
            "<p>left child = 2*pos + 1</p>\n\n<p>right child = 2*pos + 2</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "// Function to find the position of a number in a special series\n\nunsigned long long int findpos(string n)\n{\n    int len=n.length();\n    unsigned long long int i = 0, pos = 0;\n  \n    // calculating position character wise\n    // imagine the series as tree like structure.\n    while (i<len) {\n        switch (n[i]) \n        {\n        case '4':\n            pos = pos * 2 + 1; // left child\n            break;\n        case '7':\n            pos = pos * 2 + 2; // right child\n            break;\n        }\n        i++;\n    }\n    return pos;\n}",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\nclass Solution \n{ \n    long findpos(String n) \n    { \n        int len=n.length();\n        int i = 0;\n        long pos = 0;\n        // calculating position character wise\n        // imagine the series as tree like structure.\n        while (i<len) {\n            switch ((int)(n.charAt(i))) \n            {\n            case '4':\n                pos = pos * 2 + 1;\n                break;\n            case '7':\n                pos = pos * 2 + 2; \n                break;\n            }\n            i++;\n        }\n        return pos;\n    }\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}