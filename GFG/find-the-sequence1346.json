{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703968,
            "title": "Find The Sequence",
            "titleSlug": "find-the-sequence1346",
            "content": "<p><span style=\"font-size:18px\">Adobe is weak in the concepts of string. He is given a number <strong>N</strong>&nbsp;and has to find <strong>N</strong>&nbsp;terms of that series. The series is 1, 2, 5, 8,15. . .&nbsp;</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong>\r\nN = 8\r\n<strong>Output:</strong>\r\n1 2 5 8 15 28 51 94\r\n<strong>Explanation:</strong>\r\nFor N = 8, series comes out to be:\r\n1 2 5 8 15 28 51 94<strong>\r\n</strong></span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong>\r\nN = 3\r\n<strong>Output:</strong>\r\n1 2 5 \r\n<strong>Explanation:</strong>\r\nFor N = 3, series comes out to be:\r\n1 2 5 </span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:&nbsp;&nbsp;</strong><br />\r\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>printSeries()</strong>&nbsp;which takes an integer N as input parameter and return the list of the first N term of the series.<br />\r\n<br />\r\n<strong>Expected Time Complexity:</strong> O(N)<br />\r\n<strong>Expected Auxiliary Space:</strong> O(1)</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n1 &lt;= N&nbsp;&lt;= 50</span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Find the pattern in the series and generate \u00e2\u20ac\u2039the next number of the series using the previous numbers.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "series",
                "slug": "series"
            },
            {
                "name": "logical-thinking",
                "slug": "logical-thinking"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "// Back-end complete function template in C++\n \nclass Solution\n{\npublic:\n    // Function to return a series of numbers\n    vector<long long> printSeries(int N)\n    {\n        // Declaring a vector to store the series\n        vector<long long> a(N+3);\n        \n        // Initializing the first three numbers of the series\n        a[0]=1;\n        a[1]=2;\n        a[2]=5;\n        \n        // Checking if N is less than or equal to 3\n        if(N<=3){\n            // If true, return the first N numbers of the series\n            return a;\n        }\n        \n        // Generating the series using a loop\n        for(long long i=3;i<N;i++)\n        {\n            a[i]=a[i-1]+a[i-2]+a[i-3];\n        }\n        \n        // Returning the generated series\n        return a;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\nclass Solution\n{\n    // Complete this function\n    public List<long> printSeries(int N)\n    {\n        // Declaring a list to store the series\n        List<long> a = new List<long>();\n        \n        // Initializing the first three numbers of the series\n        long first = 1, second = 2, third = 5;\n        \n        if (N >= 1) a.Add(first);\n        if (N >= 2) a.Add(second);\n        if (N >= 3) a.Add(third);\n        \n        // Generating the series\n        for (int i = 3; i < N; i++)\n        {\n            long next = first + second + third;\n            a.Add(next);\n            first = second;\n            second = third;\n            third = next;\n        }\n        \n        // Returning the generated series up to the Nth number\n        return a;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}