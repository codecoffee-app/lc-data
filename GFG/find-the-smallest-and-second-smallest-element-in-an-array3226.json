{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703436,
            "title": "First and Second Smallests",
            "titleSlug": "find-the-smallest-and-second-smallest-element-in-an-array3226",
            "content": "<p><span >Given an array, <strong>arr</strong> of integers, your task is to return the smallest and second smallest element in the array. If the smallest and second smallest do not exist, return <strong style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">-1.</strong></span></p>\n<p><span ><strong>Examples:</strong></span></p>\n<pre><span ><strong>Input: </strong>arr[] = [2, 4, 3, 5, 6]\n<strong>Output: </strong>2 3 \n<strong>Explanation:</strong> 2 and 3 are respectively the smallest and second smallest elements in the array.</span></pre>\n<pre><span ><strong>Input: </strong>arr[] = [1, 1, 1]\n<strong>Output: </strong>-1\n<strong>Explanation: </strong>Only element is 1 which is smallest, so there is no second smallest element.</span></pre>\n<p><span ><strong>Expected Time Complexity:</strong> O(n)<br /><strong>Expected Auxillary Space</strong><strong style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">:</strong><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\"> O(1)</span></span></p>\n<p><span ><strong>Constraints:</strong><br />1 &lt;= arr.size &lt;= 10<sup>5</sup><br />1 &lt;= arr[i] &lt;= 10<sup>5</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of integers, find the smallest and second smallest elements. If the second smallest element doesn't exist (e.g., all elements are the same), return -1.",
                "constraints": [
                    "1 <= array size <= 10^5",
                    "1 <= element value <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "[2, 4, 3, 5, 6]",
                        "output": "2 3",
                        "explanation": "The smallest element is 2, and the second smallest element is 3."
                    },
                    {
                        "input": "[1, 1, 1]",
                        "output": "-1",
                        "explanation": "The smallest element is 1, but there is no distinct second smallest element, so -1 is returned."
                    },
                    {
                        "input": "[5, 2, 8, 1, 9, 4]",
                        "output": "1 2",
                        "explanation": "The smallest element is 1, and the second smallest is 2."
                    },
                    {
                        "input": "[7]",
                        "output": "-1",
                        "explanation": "There is only one element, so a second smallest doesn't exist. Returns -1."
                    },
                    {
                        "input": "[3, 3, 5, 6]",
                        "output": "3 5",
                        "explanation": "The smallest element is 3, and the second smallest distinct element is 5."
                    },
                    {
                        "input": "[1, 2, 3, 4, 5]",
                        "output": "1 2",
                        "explanation": "The smallest element is 1, and the second smallest is 2."
                    },
                    {
                        "input": "[5,4,3,2,1]",
                        "output": "1 2",
                        "explanation": "The smallest element is 1, and the second smallest is 2."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size: 14pt;\">Traverse the array once to update the smallest and second smallest elements.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [
            "amazon",
            "goldman-sachs"
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "\nclass Solution {\n  public:\n    // Function to find the minimum and second minimum elements in the array.\n    vector<int> minAnd2ndMin(vector<int> &arr) {\n        vector<int> ans;\n        int min1 = arr[0], min2 = INT_MAX, n = arr.size();\n\n        // Traverse the array to find the minimum and second minimum elements.\n        for (int i = 1; i < n; i++) {\n            // Update min1 and min2 if arr[i] is smaller than both.\n            if (arr[i] < min1) {\n                min2 = min1;\n                min1 = arr[i];\n            }\n            // Update min2 if arr[i] is smaller than min2 but greater than min1.\n            else if (arr[i] < min2 && arr[i] != min1)\n                min2 = arr[i];\n        }\n\n        // If there is only one element in the array or second minimum is not found,\n        // return\n        // {-1, -1}.\n        if (n == 1 || min2 == INT_MAX) {\n            ans.push_back(-1);\n            ans.push_back(-1);\n        }\n        // Otherwise, return the minimum and second minimum elements.\n        else {\n            ans.push_back(min1);\n            ans.push_back(min2);\n        }\n        return ans;\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "// User function Template for Java\n\nclass Solution {\n    public int[] minAnd2ndMin(int[] arr) {\n        int[] ans = new int[2];\n        int min1 = arr[0], min2 = Integer.MAX_VALUE, n = arr.length;\n\n        // Traverse the array to find the minimum and second minimum elements.\n        for (int i = 1; i < n; i++) {\n            // Update min1 and min2 if arr[i] is smaller than both.\n            if (arr[i] < min1) {\n                min2 = min1;\n                min1 = arr[i];\n            }\n            // Update min2 if arr[i] is smaller than min2 but greater than min1.\n            else if (arr[i] < min2 && arr[i] != min1) {\n                min2 = arr[i];\n            }\n        }\n\n        // If there is only one element in the array or second minimum is not found,\n        // return {-1, -1}.\n        if (n == 1 || min2 == Integer.MAX_VALUE) {\n            ans[0] = -1;\n            ans[1] = -1;\n        } else {\n            // Otherwise, return the minimum and second minimum elements.\n            ans[0] = min1;\n            ans[1] = min2;\n        }\n        return ans;\n    }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n\n    def minAnd2ndMin(self, arr):\n        # Initialize the answer list\n        ans = []\n\n        # Edge case: if the array is empty, return [-1, -1]\n        if len(arr) == 0:\n            return [-1, -1]\n\n        min1 = arr[0]\n        min2 = float('inf')\n        n = len(arr)\n\n        # Traverse the array to find the minimum and second minimum elements.\n        for i in range(1, n):\n            # Update min1 and min2 if arr[i] is smaller than both.\n            if arr[i] < min1:\n                min2 = min1\n                min1 = arr[i]\n            # Update min2 if arr[i] is smaller than min2 but greater than min1.\n            elif arr[i] < min2 and arr[i] != min1:\n                min2 = arr[i]\n\n        # If there is only one element in the array or second minimum is not found,\n        # return [-1, -1].\n        if n == 1 or min2 == float('inf'):\n            ans.append(-1)\n            ans.append(-1)\n        else:\n            # Otherwise, return the minimum and second minimum elements.\n            ans.append(min1)\n            ans.append(min2)\n\n        return ans\n",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "\nclass Solution {\n    minAnd2ndMin(arr) {\n        let n = arr.length;\n        let min1 = arr[0];\n        let min2 = Number.MAX_VALUE;\n\n        for (let i = 1; i < n; i++) {\n            if (arr[i] < min1) {\n                min2 = min1;\n                min1 = arr[i];\n            } else if (arr[i] < min2 && arr[i] !== min1) {\n                min2 = arr[i];\n            }\n        }\n\n        if (n === 1 || min2 === Number.MAX_VALUE) {\n            return [ -1 ];\n        } else {\n            return [ min1, min2 ];\n        }\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}