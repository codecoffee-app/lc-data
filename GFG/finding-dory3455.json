{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703890,
            "title": "Finding Dory",
            "titleSlug": "finding-dory3455",
            "content": "<p><span style=\"font-size: 18px;\">My friend generated a series<strong> 1 4 8 9 12 17 25 28</strong> .... . Each element of this series is known as \"<strong>Dory</strong>\". You are given a number <strong>n</strong> and your task is to find out whether <strong>n&nbsp;</strong>is <strong>Dory</strong> or not.</span><br /><span style=\"font-size: 18px;\"><strong>NOTE: </strong>If <strong>n</strong>&nbsp;is \"<strong>Dory</strong>\", then return&nbsp;<strong>1</strong>&nbsp;else return&nbsp;<strong>0.</strong><br /><br /><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input</strong>: n = 4\n<strong>Output:</strong>&nbsp;1&nbsp;\n<strong>Explanation</strong>: 4 is Dory because \nits present in the series.</span>\n</pre>\n<p><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>n = 7\n<strong>Output:&nbsp;</strong>0\n<strong>Explanation</strong>: 7 is not Dory because\nits not present in the series.</span>\n<span style=\"font-size: 18px;\"><br /><strong>Expected Time Complexity:</strong> O(1)<br /><strong>Expected Auxiliary Space:</strong> O(1)<br /><br /><strong>Constraints:</strong><br />1&lt;= n&nbsp;&lt;=10<sup>9</sup></span></pre>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "A series of numbers, known as 'Dory' numbers, is generated as follows: 1, 4, 8, 9, 12, 17, 25, 28, ... Given a number 'n', determine if it is a 'Dory' number.",
                "constraints": [
                    "1 <= n <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "4",
                        "output": "1",
                        "explanation": "4 is a Dory number as it is present in the series."
                    },
                    {
                        "input": "7",
                        "output": "0",
                        "explanation": "7 is not a Dory number as it is not present in the series."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Use concept of fibonacci series.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Fibonacci",
                "slug": "fibonacci"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\nclass Solution {\n  public:\n    // Function to check if a number is a perfect square.\n    long long int isPerfectSquare(long long int x)\n    {\n        long long int s = sqrt(x);\n        return (s*s == x);\n    }\n\n\n    // Function to check if a number is a Dory number.\n    long long int nisDoryOrNot(long long int n)\n    {\n        return isPerfectSquare(5*n + 4) || isPerfectSquare(5*n - 4);\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            },
            {
                "lang": "C#",
                "full_func": "class Solution\n{\n    public long nisDoryOrNot(long n)\n    {\n        long s = (long)Math.Sqrt(5 * n + 4);\n        if (s * s == 5 * n + 4)\n        {\n            return 1;\n        }\n        s = (long)Math.Sqrt(5 * n - 4);\n        if (s * s == 5 * n - 4)\n        {\n            return 1;\n        }\n        return 0;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}