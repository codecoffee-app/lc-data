{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 702733,
            "title": "Finding-Pairs",
            "titleSlug": "finding-pairs2835",
            "content": "<p><span >You are given an array of character pairs and a string <code>s</code>. Your task is to count how many of the character pairs from the array appear in the string <code>s</code>.</span></p>\n<p><span ><strong>Examples:</strong></span></p>\n<pre><span ><strong>Input: </strong>arr[] = [('A','G'),('d','i'),('P','o')], s = \"APiod\"\n<strong>Output:</strong> 2\n<strong>Explanation: </strong>\nIn the string <code>\"APiod\"</code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">, the pairs </span><code>(d, i)</code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\"> and </span><code>(P, o)</code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\"> appear. Thus, the answer is </span><code>2</code><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">.</span></span></pre>\n<pre><span ><strong>Input: </strong>arr[] = [('r','e')], s = \"ghe\"\n<strong>Output:</strong> 0<br /><strong>Explanation:</strong> In the string <code>\"ghe\"</code>, there are no characters that match the pair <code>(r, e)</code>. Thus, the answer is <code>0</code>. </span></pre>\n<p><span ><strong>Expected Time Complexity:</strong> O(n), n is the size of arr.<br /><strong>Expected Auxiliary Space:</strong> O(1).</span></p>\n<p><span ><strong>Constraints:<br /></strong>1&lt;=s.size()&lt;=10<sup>6<br /></sup>1&lt;=arr.size()&lt;=10<sup>6</sup><br />The string <code>s</code> and the characters in each pair are either lowercase or uppercase alphabets.<br /></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of character pairs and a string `s`, count how many of the character pairs from the array appear in the string `s`. A character pair is considered to appear in the string if both characters of the pair are present in the string, irrespective of their order or adjacency.",
                "constraints": [
                    "1 <= s.size() <= 10^6",
                    "1 <= arr.size() <= 10^6",
                    "The string `s` and the characters in each pair are either lowercase or uppercase alphabets."
                ],
                "testcases": [
                    {
                        "input": "arr[] = [('A','G'),('d','i'),('P','o')], s = \"APiod\"",
                        "output": "2",
                        "explanation": "The pairs (d, i) and (P, o) are both present in the string \"APiod\". The pair (A, G) is not present because 'G' is not in the string."
                    },
                    {
                        "input": "arr[] = [('r','e')], s = \"ghe\"",
                        "output": "0",
                        "explanation": "The string \"ghe\" does not contain both 'r' and 'e', therefore the count is 0."
                    },
                    {
                        "input": "arr[] = [('a','b'), ('c', 'd')], s = \"abcd\"",
                        "output": "2",
                        "explanation": "Both pairs ('a', 'b') and ('c', 'd') are present in the string 'abcd'."
                    },
                    {
                        "input": "arr[] = [('A','a')], s = \"Aa\"",
                        "output": "1",
                        "explanation": "Both 'A' and 'a' are present in string 'Aa' so pair exist"
                    },
                    {
                        "input": "arr[] = [('z','x')], s = \"\"",
                        "output": "0",
                        "explanation": "The string is empty and cannot contain any pairs"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span >Use Hashing to hash all the characters of String S and check if the pair is present in the String if it is present then just increment the answer and check for another pair.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "STL",
                "slug": "stl"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function template for C++\n\nclass Solution {\n  public:\n    // Function to count pairs of characters from array and string.\n    int count_pairs(vector<vector<char>> &arr, string &s) {\n        // Initializing an array to store the occurrence of characters in the string.\n        int f[128] = {0};\n\n        // Traversing through the string and updating the occurrence of each character.\n        for (char c : s) {\n            f[c] = 1;\n        }\n\n        // Initializing a variable to store the count of pairs of characters.\n        int ans = 0;\n\n        // Traversing through the array.\n        for (const auto &pair : arr) {\n            // Checking if both characters in the pair exist in the string.\n            if (f[pair[0]] == 1 && f[pair[1]] == 1) {\n                // If they exist, increment the count of pairs.\n                ans += 1;\n            }\n        }\n\n        // Returning the count of pairs of characters.\n        return ans;\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n    // Function to count pairs of characters from array and string.\n    public int countPairs(List<char[]> arr, String s) {\n        // Initializing a set to store the occurrence of characters in the string.\n        Set<Character> charSet = new HashSet<>();\n\n        // Traversing through the string and updating the occurrence of each character.\n        for (char c : s.toCharArray()) {\n            charSet.add(c);\n        }\n\n        // Initializing a variable to store the count of pairs of characters.\n        int ans = 0;\n\n        // Traversing through the array.\n        for (char[] pair : arr) {\n            // Checking if both characters in the pair exist in the string.\n            if (charSet.contains(pair[0]) && charSet.contains(pair[1])) {\n                // If they exist, increment the count of pairs.\n                ans++;\n            }\n        }\n\n        // Returning the count of pairs of characters.\n        return ans;\n    }\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n    # Function to count pairs of characters from array and string.\n    def count_pairs(self, arr, s):\n        # Initializing a set to store the occurrence of characters in the string.\n        char_set = set(s)\n\n        # Initializing a variable to store the count of pairs of characters.\n        ans = 0\n\n        # Traversing through the array.\n        for pair in arr:\n            # Checking if both characters in the pair exist in the string.\n            if pair[0] in char_set and pair[1] in char_set:\n                # If they exist, increment the count of pairs.\n                ans += 1\n\n        # Returning the count of pairs of characters.\n        return ans\n",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "class Solution {\n    // Function to count pairs of characters from array and string.\n    count_pairs(arr, s) {\n        let f =\n            Array(128).fill(0); // Array to store occurrence of characters in the string\n\n        // Traverse through the string and update occurrence\n        for (let i = 0; i < s.length; i++) {\n            f[s.charCodeAt(i)] = 1;\n        }\n\n        let ans = 0;\n\n        // Traverse through the array and count pairs\n        for (let i = 0; i < arr.length; i++) {\n            if (f[arr[i][0].charCodeAt(0)] === 1 && f[arr[i][1].charCodeAt(0)] === 1) {\n                ans++;\n            }\n        }\n\n        return ans;\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}