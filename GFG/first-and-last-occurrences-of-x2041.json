{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 706467,
            "title": "First and last occurrences of x",
            "titleSlug": "first-and-last-occurrences-of-x2041",
            "content": "<p><span >Given an element <strong>x</strong> and a sorted array, <strong>arr[],</strong> find the&nbsp;</span><span style=\"font-size: 18.6667px;\">indices</span><span style=\"font-size: 18.6667px;\"> of </span><span style=\"font-size: 18.6667px;\">first and last occurrences</span><span > of the </span><strong >x</strong><span >'s in the array.</span></p>\n<p><span >Note: If the number <strong>x </strong>is not found in the array, return an array containing -1 only.</span></p>\n<p><span ><strong>Examples:</strong></span></p>\n<pre><span ><strong>Input: </strong>x = 3, arr[] = [1, 3, 3, 4]\n<strong>Output: </strong>[1, 2]\n<strong>Explanation: T</strong>he first occurrence of X = 3 is at index = 1 and the last at index = 2.</span></pre>\n<pre><span ><strong>Input: </strong>x = 5, arr[] = [1, 2, 3, 4]\n<strong>Output: </strong>[-1]\n<strong>Explanation: </strong>5 is not present, so the answer is -1.</span></pre>\n<p><span ><strong>Expected Time Complexity:</strong> O(log n)<br /><strong>Expected Auxillary Space</strong><strong style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">:</strong><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\"> O(1)</span></span></p>\n<p><span ><strong>Constraints:&nbsp;</strong><br />1 &lt;= arr.size() &lt;= 10<sup>5</sup>&nbsp;<br />0 &lt;= arr[i], x &lt;= 10<sup>9</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a sorted array `arr[]` and an element `x`, find the indices of the first and last occurrences of `x` in the array. If `x` is not found, return an array containing only -1.",
                "constraints": [
                    "1 <= arr.length <= 10^5",
                    "0 <= arr[i], x <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "x = 3, arr[] = [1, 3, 3, 4]",
                        "output": "[1, 2]",
                        "explanation": "The element 3 appears first at index 1 and last at index 2."
                    },
                    {
                        "input": "x = 5, arr[] = [1, 2, 3, 4]",
                        "output": "[-1]",
                        "explanation": "The element 5 is not present in the array."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">As the array is sorted, try to use&nbsp;<strong>Binary Search</strong>&nbsp;to find the first and last occurence of&nbsp;<strong>x&nbsp;</strong>separately.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Searching",
                "slug": "searching"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "amazon",
            "microsoft"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "\n\n// Function to find the first occurrence of x in the given array\nint first(vector<int> &arr, int low, int high, int x, int n) {\n    if (high >= low) {\n        int mid = low + (high - low) / 2;\n        if ((mid == 0 || x > arr[mid - 1]) && arr[mid] == x)\n            return mid;\n        else if (x > arr[mid])\n            return first(arr, (mid + 1), high, x, n);\n        else\n            return first(arr, low, (mid - 1), x, n);\n    }\n    return -1;\n}\n\n// Function to find the last occurrence of x in the given array\nint last(vector<int> &arr, int low, int high, int x, int n) {\n    if (high >= low) {\n        int mid = low + (high - low) / 2;\n        if ((mid == n - 1 || x < arr[mid + 1]) && arr[mid] == x)\n            return mid;\n        else if (x < arr[mid])\n            return last(arr, low, (mid - 1), x, n);\n        else\n            return last(arr, (mid + 1), high, x, n);\n    }\n    return -1;\n}\n\nclass Solution {\n  public:\n    // Function to find the first and last occurrence of x in the given array\n    vector<int> firstAndLast(int x, vector<int> &arr) {\n        int n = arr.size();\n        int f = first(arr, 0, n - 1, x, n);\n        int l = last(arr, 0, n - 1, x, n);\n        vector<int> ans;\n        if (f == l && f == -1) {\n            ans.push_back(-1);\n        } else {\n            ans.push_back(f);\n            ans.push_back(l);\n        }\n        return ans;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "\n\nclass Solution {\n    // Function to find the first occurrence of x in the given array\n    private int first(int[] arr, int low, int high, int x, int n) {\n        if (high >= low) {\n            int mid = low + (high - low) / 2;\n            if ((mid == 0 || x > arr[mid - 1]) && arr[mid] == x) {\n                return mid;\n            } else if (x > arr[mid]) {\n                return first(arr, mid + 1, high, x, n);\n            } else {\n                return first(arr, low, mid - 1, x, n);\n            }\n        }\n        return -1;\n    }\n\n    // Function to find the last occurrence of x in the given array\n    private int last(int[] arr, int low, int high, int x, int n) {\n        if (high >= low) {\n            int mid = low + (high - low) / 2;\n            if ((mid == n - 1 || x < arr[mid + 1]) && arr[mid] == x) {\n                return mid;\n            } else if (x < arr[mid]) {\n                return last(arr, low, mid - 1, x, n);\n            } else {\n                return last(arr, mid + 1, high, x, n);\n            }\n        }\n        return -1;\n    }\n\n    // Function to find the first and last occurrence of x in the given array\n    public ArrayList<Integer> firstAndLast(int x, int[] arr) {\n        int n = arr.length;\n        int f = first(arr, 0, n - 1, x, n);\n        int l = last(arr, 0, n - 1, x, n);\n        ArrayList<Integer> ans = new ArrayList<>();\n        if (f == l && f == -1) {\n            ans.add(-1);\n        } else {\n            ans.add(f);\n            ans.add(l);\n        }\n        return ans;\n    }\n}\n",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "class Solution:\n\n    def first(self, arr, low, high, x, n):\n        if high >= low:\n            mid = low + (high - low) // 2\n            if (mid == 0 or x > arr[mid - 1]) and arr[mid] == x:\n                return mid\n            elif x > arr[mid]:\n                return self.first(arr, mid + 1, high, x, n)\n            else:\n                return self.first(arr, low, mid - 1, x, n)\n        return -1\n\n    def last(self, arr, low, high, x, n):\n        if high >= low:\n            mid = low + (high - low) // 2\n            if (mid == n - 1 or x < arr[mid + 1]) and arr[mid] == x:\n                return mid\n            elif x < arr[mid]:\n                return self.last(arr, low, mid - 1, x, n)\n            else:\n                return self.last(arr, mid + 1, high, x, n)\n        return -1\n\n    def firstAndLast(self, x, arr):\n        n = len(arr)\n        f = self.first(arr, 0, n - 1, x, n)\n        l = self.last(arr, 0, n - 1, x, n)\n        if f == l and f == -1:\n            return [-1]\n        else:\n            return [f, l]\n",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "// User function Template for javascript\n\n/**\n * @param {number[]} arr\n * @param {number} x\n * @returns {number[]}\n */\n\nclass Solution {\n\n    firstAndLast(x, arr) {\n        // your code here\n        let n = arr.length;\n        let first = -1;\n        let last = -1;\n\n        // Finding first occurrence of X\n        for (let i = 0; i < n; i++) {\n            if (arr[i] == x) {\n                first = i;\n                break;\n            }\n        }\n\n        // Finding last occurrence of X\n        for (let i = n - 1; i >= 0; i--) {\n            if (arr[i] == x) {\n                last = i;\n                break;\n            }\n        }\n\n        let ans = [];\n\n        if (first == -1 && last == -1) {\n            ans.push(-1);\n        } else {\n            ans.push(first);\n            ans.push(last);\n        }\n\n        return ans;\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}