{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 702782,
            "title": "First Come First Serve",
            "titleSlug": "first-come-first-serve1328",
            "content": "<p><span style=\"font-size: 18px;\">You are given an array<strong> arr[]</strong>, containing the IDs of users in chronological order of their occurrences. Find the first user who has exactly <strong>k</strong> occurrences. <br /></span><span style=\"font-size: 18px;\">If no such user exists, return -1.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr[] = [1, 7, 4, 3, 4, 8, 7] , k = 2\n<strong>Output:</strong> 7\n<strong>Explanation</strong>: Both 7 and 4 occur 2 times. But <strong>7</strong>&nbsp;is the first that occurs 2 times.  </span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong> arr[] = [4, 1, 6, 1, 6, 4] , k = 1 \n<strong>Output:</strong> -1 \n<strong>Explanation</strong>: No one occurs exactly 1 time.</span>\n</pre>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong> O(n).<br /><strong>Expected Auxiliary Space: </strong>O(n).</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &le; arr.size() &le; 10<sup>6</sup><br />1 &le; arr[i] &le; 10<sup>6</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array `arr` of user IDs in chronological order of their occurrences, find the first user ID that appears exactly `k` times. If no such user exists, return -1.",
                "constraints": [
                    "1 <= arr.length <= 10^6",
                    "1 <= arr[i] <= 10^6"
                ],
                "testcases": [
                    {
                        "input": "[1, 7, 4, 3, 4, 8, 7], k = 2",
                        "output": "7",
                        "explanation": "Both user IDs 7 and 4 appear 2 times. Since 7 appears before 4, the output is 7."
                    },
                    {
                        "input": "[4, 1, 6, 1, 6, 4], k = 1",
                        "output": "-1",
                        "explanation": "No user ID appears exactly once."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span >Use a HashMap to store the frequency of each element and then traverse the array to find the first element with a frequency equal to k.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Hash",
                "slug": "hash"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    // Function to find the first element with count k in the given array.\n    int firstElement(vector<int>& arr, int k) {\n        // Initializing an unordered_map to count the frequency of numbers in the array.\n        unordered_map<int, int> count_map;\n        int n = arr.size(); // Getting the size of the array\n\n        // Looping through the array to update the count map.\n        for (int i = 0; i < n; i++)\n            count_map[arr[i]]++;\n\n        // Looping through the array to find the first element with count k.\n        for (int i = 0; i < n; i++)\n            if (count_map[arr[i]] == k)\n                return arr[i];\n\n        // Returning -1 if no such element is found.\n        return -1;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "// User function Template for Java\n\nclass Solution {\n\n    // Function to find the first element with count k in the given array.\n    static int firstElement(int arr[], int k) {\n        // Initializing a HashMap to count the frequency of numbers in the array.\n        HashMap<Integer, Integer> countMap = new HashMap<>();\n        int n = arr.length; // Getting the size of the array\n\n        // Looping through the array to update the count map.\n        for (int i = 0; i < n; i++) {\n            countMap.put(arr[i], countMap.getOrDefault(arr[i], 0) + 1);\n        }\n\n        // Looping through the array to find the first element with count k.\n        for (int i = 0; i < n; i++) {\n            if (countMap.get(arr[i]) == k) {\n                return arr[i];\n            }\n        }\n\n        // Returning -1 if no such element is found.\n        return -1;\n    }\n}\n",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "class Solution:\n    # Function to find the first element with count k in the given array.\n    def firstElement(self, arr, k):\n        # Initializing a dictionary to count the frequency of numbers in the array.\n        count_map = {}\n\n        # Looping through the array to update the count map.\n        for num in arr:\n            count_map[num] = count_map.get(num, 0) + 1\n\n        # Looping through the array to find the first element with count k.\n        for num in arr:\n            if count_map[num] == k:\n                return num\n\n        # Returning -1 if no such element is found.\n        return -1\n",
                "lang_text": "py"
            },
            {
                "lang": "Javascript",
                "full_func": "// User function Template for JavaScript\n/**\n * @param {number[]} arr\n * @param {number} k\n * @returns {number}\n */\n\nclass Solution {\n    // Function to find the first element with count k in the given array.\n    firstElement(arr, k) {\n        // Initializing a map to count the frequency of numbers in the array.\n        let count_map = new Map();\n\n        // Looping through the array to update the count map.\n        for (let num of arr) {\n            count_map.set(num, (count_map.get(num) || 0) + 1);\n        }\n\n        // Looping through the array to find the first element with count k.\n        for (let num of arr) {\n            if (count_map.get(num) === k) {\n                return num;\n            }\n        }\n\n        // Returning -1 if no such element is found.\n        return -1;\n    }\n}\n",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}