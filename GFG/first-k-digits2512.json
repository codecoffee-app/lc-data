{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704526,
            "title": "First K Digits ",
            "titleSlug": "first-k-digits2512",
            "content": "<p><span style=\"font-size:18px\">Given a positive integer n, find first k digits after the decimal in the value of 1/n and return it as a string. </span></p>\n\n<p><span style=\"font-size:18px\"><strong>Note:&nbsp;</strong>Your program should avoid overflow and floating-point arithmetic.&nbsp;</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input: </strong>n = 3, k = 3\n<strong>Output:</strong> 333\n<strong>Explanation</strong>: 1/3=0.33333, so\nafter point 3 digits are 3,3,3.</span></pre>\n\n<p><span style=\"font-size:18px\">\u00e2\u20ac\u2039<strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input</strong>: n = 50, k = 4\n<strong>Output:</strong> 0200\n<strong>Explanation</strong>: 1/50=0.020000, so \nafter point 4 digits are 0,2,0,0.</span></pre>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:&nbsp;&nbsp;</strong><br />\nYou don&#39;t need to read input or print anything. Your task is to complete the function&nbsp;<strong>Kdigits()</strong>&nbsp;which takes&nbsp;<strong>n, k&nbsp;</strong>as inputs and returns the string.<br />\n<br />\n<strong>Expected Time Complexity:</strong>&nbsp;O(k)<br />\n<strong>Expected Auxiliary Space:</strong>&nbsp;O(1)<br />\n<br />\n<strong>Constraints:</strong><br />\n1 &le; n, k &le; 10<sup>5</sup></span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a positive integer `n`, determine the first `k` digits following the decimal point in the decimal representation of 1/`n`. Return these digits as a string. Implement a solution that avoids overflow and floating-point arithmetic.",
                "constraints": [
                    "1 <= n <= 10^5",
                    "1 <= k <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "n = 3, k = 3",
                        "output": "333",
                        "explanation": "1/3 = 0.33333...  The first 3 digits after the decimal point are 3, 3, and 3."
                    },
                    {
                        "input": "n = 50, k = 4",
                        "output": "0200",
                        "explanation": "1/50 = 0.020000... The first 4 digits after the decimal point are 0, 2, 0, and 0."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try calculating the values after the decimal one at a time using the division method.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nclass Solution{   \npublic:\n    string Kdigits(int n, int k) { \n        string s = \"\";\n       int rem = 1; // Initialize remainder \n       // Run a loop k times to print k digits \n       for (int i = 0; i < k; i++) { \n             // The next digit can always be obtained as \n             // doing (10*rem)/10 \n             int val =  (10 * rem) / n; \n             char c = '0' + val;\n             s += c;\n             // Update remainder \n             rem = (10*rem) % n; \n       }\n       return s; \n    } \n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            },
            {
                "lang": "C#",
                "full_func": "\nclass Solution\n{\n    public string Kdigits(int n, int k)\n    {\n        StringBuilder s = new StringBuilder();\n        int rem = 1; // Initialize remainder\n\n        // Run a loop k times to print k digits\n        for (int i = 0; i < k; i++)\n        {\n            // The next digit can always be obtained as\n            // doing (10 * rem) / n\n            int val = (10 * rem) / n;\n            char c = (char)('0' + val);\n            s.Append(c);\n\n            // Update remainder\n            rem = (10 * rem) % n;\n        }\n\n        return s.ToString();\n    }\n}\n",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}