{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703241,
            "title": "Floating point number even or odd",
            "titleSlug": "floating-point-number-even-or-odd0146",
            "content": "<p><span style=\"font-size:20px\">Given a floating point number in string format <strong>s</strong>, check whether it is even or odd.</span><br />\n&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong> \nn = 4\ns = 97.8\n<strong>Output:</strong> EVEN\n<strong>Explanation:</strong> 8 is even number.</span></pre>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Example 2:</strong></span><span style=\"font-size:18px\"><strong> </strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:\n</strong>n = 6\ns = 100.70\n<strong>Output:</strong> ODD\n</span><span style=\"font-size:18px\"><strong>Explanation: </strong>Trailing 0s after dot do not matter.</span></pre>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Your Task:&nbsp;&nbsp;</strong><br />\nYou don&#39;t need to read input or print anything. Your task is to complete the function&nbsp;<strong>isEven()</strong>&nbsp;which accepts a string s(floating point number) and the integer n(denotes the length of the string s) as input parameter and returns a boolean value.</span></p>\n\n<h6>&nbsp;</h6>\n\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong>&nbsp;O(n)<br />\n<strong>Expected Auxiliary Space:</strong>&nbsp;O(1)</span><br />\n&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\n1 &lt;= n&nbsp;&lt;=&nbsp;10<sup>5</sup></span></p>\n\n<p><span style=\"font-size:18px\">n is the length of the string s.<sup>&nbsp;</sup></span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p>Simply traverse string from right to left and apply some&nbsp;conditions.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "// Function to check if the given number is even or not.\nbool isEven(string s, int n) {\n    int l = s.length();\n    bool dotSeen = false;\n    \n    // Iterating over the digits of the number from right to left.\n    for (int i = l - 1; i >= 0; i--) {\n        \n        // Ignoring leading zeroes before the decimal point.\n        if (s[i] == '0' && dotSeen == false)\n            continue;\n        \n        // Checking if a decimal point is encountered.\n        if (s[i] == '.') {\n            dotSeen = true;\n            continue;\n        }\n        \n        // Checking if the digit is even.\n        if ((s[i] - '0') % 2 == 0)\n            return true;\n        \n        // Returning false if the digit is odd.\n        return false;\n    }\n    \n    // Returning true if all digits are even or the number has trailing zeroes after the decimal point.\n    return true;\n}",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\nclass Solution \n{ \n    // Function to check if the given string is even\n    boolean isEven(String s,int n) \n    { \n        int l = s.length();\n        boolean dotSeen = false;\n        \n        // Iterate through each character in the string from right to left\n        for (int i = l - 1; i >= 0; i--) {\n            // If character is '0' and dot is not seen yet, continue to the next character\n            if (s.charAt(i) == '0' && dotSeen == false)\n               continue;\n            // If character is '.' set dotSeen to true and continue to the next character\n            if (s.charAt(i) == '.') {\n                dotSeen = true;\n                continue;\n            }\n            // If character is even return true\n            if ((s.charAt(i) - '0') % 2 == 0) \n                return true;\n                 \n            return false;        \n        }\n        // Return true if all characters are odd\n        return true;\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "class Solution\n{\n    //Function to check if the given number is even or not.\n    public bool isEven(string s, int n)\n    {\n        int l = s.Length;\n        bool dotSeen = false;\n\n        //Iterating over the digits of the number from right to left.\n        for (int i = l - 1; i >= 0; i--)\n        {\n            //Ignoring leading zeroes before the decimal point.\n            if (s[i] == '0' && dotSeen == false)\n                continue;\n\n            //Checking if a decimal point is encountered.\n            if (s[i] == '.')\n            {\n                dotSeen = true;\n                continue;\n            }\n\n            //Checking if the digit is even.\n            if ((s[i] - '0') % 2 == 0)\n                return true;\n\n            //Returning false if the digit is odd.\n            return false;\n        }\n\n        //Returning true if all digits are even or the number has trailing zeroes after the decimal point.\n        return true;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}