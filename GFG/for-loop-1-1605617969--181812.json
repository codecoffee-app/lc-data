{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 878890,
            "title": "For Loop - 1",
            "titleSlug": "for-loop-1-1605617969--181812",
            "content": "<p><span style=\"font-size: 18px;\">You are given a number <strong>n</strong>, you need to print its multiplication table in a single line using for loop.&nbsp;</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>n = 5\n<strong>Output: </strong>5 10 15 20 25 30 35 40 45 50</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>n = 6\n<strong>Output: </strong>6 12 18 24 30 36 42 48 54 60</span></pre>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a positive integer `n`, generate and print its multiplication table up to 10 in a single line, separated by spaces.",
                "constraints": [],
                "testcases": [
                    {
                        "input": "5",
                        "output": "5 10 15 20 25 30 35 40 45 50",
                        "explanation": "The multiplication table of 5 up to 10 is: 5 * 1 = 5, 5 * 2 = 10, ..., 5 * 10 = 50."
                    },
                    {
                        "input": "6",
                        "output": "6 12 18 24 30 36 42 48 54 60",
                        "explanation": "The multiplication table of 6 up to 10 is: 6 * 1 = 6, 6 * 2 = 12, ..., 6 * 10 = 60."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\"><strong>Java:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\">for(int i = 1; i &lt; 11; i++){\n    System.out.print(i * n + &quot; &quot;);\n}</span></pre>\n\n<p><span style=\"font-size:18px\"><strong>CPP:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\">for(int i = 1; i &lt; 11; i++){\n    cout &lt;&lt; i * n &lt;&lt; &quot; &quot;;\n}</span></pre>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>C:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\">for(int i = 1; i &lt; 11; i++){\n    printf(&quot;%d &quot;, i * n);\n}</span></pre>"
        ],
        "relatedTopics": [
            {
                "name": "CPP",
                "slug": "cpp"
            },
            {
                "name": "Java",
                "slug": "java"
            },
            {
                "name": "C",
                "slug": "c"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C",
                "full_func": "#include <stdio.h>\n\nint main() {\n    int n;\n    scanf(\"%d\", &n);\n    // use for loop to print the\n    // multiplication table of n\n    // code here\n    for (int i = 1; i < 11; i++) {\n        printf(\"%d \", i * n);\n    }\n\n    return 0;\n}",
                "lang_text": "c"
            },
            {
                "lang": "C++",
                "full_func": "#include <iostream>\nusing namespace std;\n\nint main() {\n    int n;\n    cin >> n;\n    for (int i = 1; i < 11; i++) {\n        cout << i * n << \" \";\n    }\n\n    return 0;\n}\n",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "import java.util.*;\n\npublic class Main {\n    public static void main(String args[]) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        for (int i = 1; i <= 10; i++) System.out.print(i * n + \" \");\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\nn = int(input())\n\n# Your code here\nfor i in range(1, 11):\n    print(i * n, end=\" \")\n",
                "lang_text": "python3"
            }
        ],
        "platform": "GFG"
    }
}