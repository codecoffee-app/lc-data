{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 700948,
            "title": "For Loop 2- Python",
            "titleSlug": "for-loop-2-python",
            "content": "<p><span style=\"font-size:18px\">Welcome to the part 2 of For Loops in Python. In this question, we&#39;ll learn to print characters of a string at even indices. </span></p>\n\n<p><span style=\"font-size:18px\">You are given a <strong>string str</strong>, you need to print its characters at even indices(index starts at 0).</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Note:</strong> Please go through the <a href=\"https://www.geeksforgeeks.org/python-range-method/\">range function</a> to understand how to jump 2 steps.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\nstr = DoctorPhenomenal\n<strong>Output:</strong>\nDcoPeoea</span>\n</pre>\n\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\nstr = Geeks\n<strong>Output:</strong>\nGes\n</span></pre>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nThis is a function problem. You don&#39;t need to take input. Just complete the function <strong>stringJumper()&nbsp;</strong>that takes <strong>str</strong> as input.</span></p>\n\n<p>&nbsp;</p>\n\n<p><iframe frameborder=\"0\" height=\"315\" src=\"https://www.youtube.com/embed/AaoqKlYCbSk\" width=\"560\"></iframe></p>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string `str`, your task is to extract and print the characters located at even indices (starting from index 0).  For example, if the string is 'abcdefg', you should print 'aceg'.",
                "constraints": [],
                "testcases": [
                    {
                        "input": "DoctorPhenomenal",
                        "output": "DcoPeoea",
                        "explanation": "The characters at even indices (0, 2, 4, 6, 8, 10, 12) in 'DoctorPhenomenal' are 'D', 'c', 'o', 'P', 'e', 'o', 'e', 'a' respectively. Concatenating these gives 'DcoPeoea'."
                    },
                    {
                        "input": "Geeks",
                        "output": "Ges",
                        "explanation": "The characters at even indices (0, 2, 4) in 'Geeks' are 'G', 'e', 's' respectively. Concatenating these gives 'Ges'."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:14px\">Even and odd number occur Alternate in Natural Number.</span></p>\n\n<p><span style=\"font-size:14px\">So to generate an even index start from 0 and skip by 2.</span></p>\n\n<p>&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "python-loops",
                "slug": "python-loops"
            },
            {
                "name": "python",
                "slug": "python"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\n\ndef stringJumper(str):\n    for i in range(0, len(str), 2):\n        print(str[i], end=\"\")\n\n",
                "lang_text": "py"
            },
            {
                "lang": "Javascript",
                "full_func": "/**\n * @param {string} str\n * @returns {void}\n */\nclass Solution {\n    //Function to skip characters and print the remaining characters.\n    stringJumper(str) {\n        let output = '';\n        for (let i = 0; i < str.length; i += 2) {\n            output += str[i];\n        }\n        console.log(output);\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}