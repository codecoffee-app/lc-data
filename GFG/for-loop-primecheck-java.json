{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 700803,
            "title": "For Loop- primeCheck - Java",
            "titleSlug": "for-loop-primecheck-java",
            "content": "<p><em><span style=\"font-size: 18px;\">What do you do when you need to execute certain statements more than once? You put them in a loop. Loops are very powerful. The majority of coding questions need loops to work. You can't even input test cases without loops!</span></em></p>\n<p><span style=\"font-size: 18px;\">Here, we will use<strong> for loop</strong> and check if the given number <strong>n is prime or not</strong>.<br /><br /><strong>Note:&nbsp;</strong> A number is prime if it's<strong> divisible by itself and 1 only</strong>. Also, 1 is not prime.</span></p>\n<p><strong><span style=\"font-size: 18px;\">Example 1:</span></strong></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong>\nn = 1</span>\n<span style=\"font-size: 18px;\"><strong>Output:</strong></span>\n<span style=\"font-size: 18px;\">No\n</span></pre>\n<p><strong><span style=\"font-size: 18px;\">Example 2:</span></strong></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong>\nn = 2</span>\n<span style=\"font-size: 18px;\"><strong>Output:</strong></span><span style=\"font-size: 18px;\">\nYes</span></pre>\n<p><span style=\"font-size: 18px;\"><strong style=\"font-size: 18px;\">Your Task: </strong><br /><span style=\"font-size: 18px;\">You don't need to read input or print anything. Your task is to complete the function <strong>isPrime()</strong> which takes the integer n as a parameter and returns a string <strong>\"Yes\"</strong> or <strong>\"No\".</strong></span><br /></span></p>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:&nbsp;</strong>O(n)<br /><strong>Expected Auxillary Space:&nbsp;</strong>O(1)</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &lt;= n &lt;= 10<sup>5</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Determine if a given number `n` is a prime number using a `for` loop. A prime number is divisible only by 1 and itself. Note that 1 is not considered a prime number.",
                "constraints": [
                    "1 <= n <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "1",
                        "output": "No",
                        "explanation": "1 is not a prime number as it is only divisible by 1."
                    },
                    {
                        "input": "2",
                        "output": "Yes",
                        "explanation": "2 is a prime number as it is only divisible by 1 and 2."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:20px\">Check if any value of i completely divides n or not.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Java-Control-Flow",
                "slug": "java-control-flow"
            },
            {
                "name": "number-theory",
                "slug": "number-theory"
            },
            {
                "name": "Prime Number",
                "slug": "prime-number"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "\nclass Solution {\n  public:\n    string isPrime(int n) {\n        // code here\n            bool flag = false;\n\n        // If the number is less than 2, it is not prime.\n        if (n < 2)\n            return \"No\";\n        else {\n            // Checking for factors from 2 to square root of n.\n            for (int i = 2; i <= sqrt(n); i++) {\n                // If a factor is found, set flag to true and break out of loop.\n                if (n % i == 0) {\n                    flag = true;\n                    break;\n                }\n            }\n    \n            // If flag is false, the number is prime.\n            if (flag == false)\n                return \"Yes\";\n            // Otherwise, the number is not prime.\n            else\n                return \"No\";\n        }\n    }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "\nclass Solution {\n    public static String isPrime(int n) {\n        // code here\n        boolean flag = false;\n\n        // if n==1\n        if (n < 2)\n            return \"No\";\n        else {\n\n            for (int i = 2; i <= Math.sqrt(n); i++) {\n\n                // if n has a factor other than\n                // 1 and n itself then making\n                // flag true\n                if (n % i == 0) {\n                    flag = true;\n                    break;\n                }\n            }\n\n            // printing \"Yes\" if\n            // it is prime\n            // else \"No\"\n            if (flag == false)\n                return \"Yes\";\n            else\n                return \"No\";\n        }\n\n    }\n}\n        \n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": "\nclass Solution:\n    def isPrime(self, n : int) -> str:\n        # code here\n        # If the number is less than 2, it is not prime.\n        if n < 2:\n            return \"No\"\n        else:\n            # Checking for factors from 2 to square root of n.\n            for i in range(2, int(math.sqrt(n)) + 1):\n                # If a factor is found, return \"No\".\n                if n % i == 0:\n                    return \"No\"\n            # If no factors found, return \"Yes\".\n            return \"Yes\"\n        \n",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "\nclass Solution {\n/**\n* @param number n\n\n* @returns string\n*/\n    isPrime(n) {\n        // code here\n        if (n < 2)\n            return \"No\";\n        else {\n            // Checking for factors from 2 to square root of n.\n            for (let i = 2; i <= Math.sqrt(n); i++) {\n                // If a factor is found, return \"No\".\n                if (n % i === 0)\n                    return \"No\";\n            }\n            // If no factors found, return \"Yes\".\n            return \"Yes\";\n        }\n    }\n}\n        \n",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}