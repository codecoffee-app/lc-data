{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 700788,
            "title": "For Loop- primeCheck",
            "titleSlug": "for-loop-primechecl",
            "content": "<p><em><span style=\"font-size: 18px;\">What do you do when you need to execute certain statements more than once? You put them in a loop. Loops are very powerful. Majority of coding questions need loops to work. You can't even input testcases without loops!</span></em></p>\n<p><span style=\"font-size: 18px;\">Here, we will use<strong> for loop</strong> and check if the given number <strong>n is prime or not</strong>.<br /><strong>Note:</strong> A number is prime if it's<strong> divisible ONLY by itself and 1 </strong>and not any other number. Also, 1 is not prime.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong>\nn = 1\n<strong>Output:</strong>No<br /><strong>Explanation:</strong> it is already said that 1 is not a prime number.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong>\nn = 2\n<strong>Output:</strong>Yes<br /><strong>Explanation:</strong> 2 is a prime number because it is only divisible by itself and 1.<br /></span></pre>\n<p><span style=\"font-size: 18px;\"><strong>User Task: </strong><br />Your task is to complete the provided function <strong>isPrime() </strong>which should return a string \"Yes\" if n is prime and \"No\" if not<strong>.</strong></span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &le; n &le; 10<sup>9</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Determine if a given number 'n' is a prime number using a for loop. A prime number is divisible only by 1 and itself. Note that 1 is not considered a prime number.",
                "constraints": [
                    "1 <= n <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "1",
                        "output": "No",
                        "explanation": "The number 1 is not considered a prime number."
                    },
                    {
                        "input": "2",
                        "output": "Yes",
                        "explanation": "The number 2 is a prime number because it is only divisible by 1 and 2."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size: 18px;\">Check the divisibility from 2 to&nbsp; sqrt(n). if divisible then the number is not prime.</span></p>",
            "<p><span style=\"font-size:18px\">Optimized way of doing is to run for loop&nbsp;till sqrt(n) ie from 2 to sqrt(n)</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "CPP-Control-Flow",
                "slug": "cpp-control-flow"
            },
            {
                "name": "CPP",
                "slug": "cpp"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\nclass Solution {\n  public:\n    // Function to check if a number is prime or not.\n    string isPrime(int n) {\n        bool flag = false;\n\n        // Checking if the number is less than 2, it is not prime.\n        if (n < 2)\n            return \"No\";\n        else {\n            // Iterating from 2 to square root of n to check if n is divisible by any\n            // number.\n            for (int i = 2; i <= sqrt(n); i++) {\n                // If n is divisible by any number, set flag to true and break the loop.\n                if (n % i == 0) {\n                    flag = true;\n                    break;\n                }\n            }\n\n            // If no number divides n, it is prime.\n            if (flag == false)\n                return \"Yes\";\n            else\n                return \"No\";\n        }\n    }\n};\n",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution {\n    public static String isPrime(int n) {\n        boolean flag = false;\n    \n            // if n==1\n            if (n < 2)\n                return \"No\";\n            else {\n    \n                for (int i = 2; i <= Math.sqrt(n); i++) {\n    \n                    // if n has a factor other than\n                    // 1 and n itself then making\n                    // flag true\n                    if (n % i == 0) {\n                        flag = true;\n                        break;\n                    }\n                }\n    \n                // printing \"Yes\" if\n                // it is prime\n                // else \"No\"\n                if (flag == false)\n                    return \"Yes\";\n                else\n                    return \"No\";\n            }\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "from math import sqrt\nclass Solution:\n    def isPrime(self, n : int) -> str:\n        # code here\n        if n==1:\n            return \"No\"\n        if n==2 or n==3:\n            return \"Yes\"\n            \n        f = True\n        for i in range(2,int(sqrt(n))+1):\n            if n%i==0:\n                f = False\n                break\n        \n        if f:\n            return \"Yes\"\n        return \"No\"    \n        \n",
                "lang_text": "py"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n    {\n        //Complete this function\n        public string isPrime(int n)\n        {\n            //Your code here\n            if (n < 2)\n                return \"No\";\n            else {\n                for (int i = 2; i <= Math.Sqrt(n); i++) {\n                    if (n % i == 0) {\n                        return \"No\";\n                    }\n                }\n                return \"Yes\";\n            }\n        }\n\n    }",
                "lang_text": "csharp"
            },
            {
                "lang": "Javascript",
                "full_func": "// Back-end complete function Template for javascript\r\n\r\nclass Solution {\r\n\r\n    isPrime(n) {\r\n        if (n < 2) {\r\n            return \"No\";\r\n        } else {\r\n            let flag = false;\r\n            for (let j = 2; j <= Math.sqrt(n); j++) {\r\n                if (n % j == 0) {\r\n                    flag = true;\r\n                }\r\n            }\r\n\r\n            if (!flag)\r\n                return \"Yes\";\r\n            else\r\n                return \"No\";\r\n        }\r\n    }\r\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}