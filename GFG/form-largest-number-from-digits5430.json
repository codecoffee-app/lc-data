{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703000,
            "title": "Form largest number from digits",
            "titleSlug": "form-largest-number-from-digits5430",
            "content": "<p><span style=\"font-size: 18px;\">Given an array <strong>arr[] </strong>of numbers from <strong>0 to 9</strong>. Your task is to rearrange elements of the array such that after combining all the elements of the array, the number formed is maximum.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr[] = [9, 0, 1, 3, 0]\n<strong>Output: </strong>93100\n<strong>Explanation: </strong>Largest number is 93100 which can be formed from array digits.</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr[] = [1, 2, 3]\n<strong>Output: </strong>321</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &lt;= arr.size() &lt;= 10<sup>6</sup></span><br /><span style=\"font-size: 18px;\">0 &lt;= arr[i]<sub>&nbsp;</sub>&lt;= 9</span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array `arr[]` of single-digit numbers (0 to 9), rearrange the elements to form the largest possible number by concatenating them.",
                "constraints": [
                    "1 <= arr.size() <= 10^6",
                    "0 <= arr[i] <= 9"
                ],
                "testcases": [
                    {
                        "input": "[9, 0, 1, 3, 0]",
                        "output": "93100",
                        "explanation": "By arranging the digits in descending order, we get the largest possible number: 93100."
                    },
                    {
                        "input": "[1, 2, 3]",
                        "output": "321",
                        "explanation": "Arranging the digits in descending order results in the largest possible number: 321."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span >Sort the array in descending order and concatenate in a string.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [
            "paytm"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    // Function to find the maximum number by sorting the array in descending order\n    string MaxNumber(vector<int>& arr) {\n        string s = \"\";\n        int n = arr.size();\n        // Array to store the count of each digit in the input array\n        long long h[15] = {0};\n        // Counting the occurrence of each digit\n        for (int i = 0; i < n; i++) {\n            // Incrementing the count of digit a[i] in array h\n            h[arr[i]]++;\n        }\n\n        // Building the maximum number by looping through the digits in descending order\n        for (int i = 9; i >= 0; i--) {\n            while (h[i]-- > 0) {\n                s += (char)('0' + i);\n            }\n        }\n        // Returning the maximum number as a string\n        return s;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution {\n    // Function to find the maximum number by sorting the array in descending order\n    public String MaxNumber(int arr[]) {\n        StringBuilder s = new StringBuilder();\n        int n = arr.length;\n        // Array to store the count of each digit in the input array\n        int[] h = new int[10]; // Range is 0-9, so array size is 10\n\n        // Counting the occurrence of each digit\n        for (int i = 0; i < n; i++) {\n            // Incrementing the count of digit a[i] in array h\n            h[arr[i]]++;\n        }\n\n        // Building the maximum number by looping through the digits in descending order\n        for (int i = 9; i >= 0; i--) {\n            while (h[i]-- > 0) {\n                s.append(i);\n            }\n        }\n        // Returning the maximum number as a string\n        return s.toString();\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "class Solution:\n\n    def MaxNumber(self, arr):\n        # Array to store the count of each digit (0-9)\n        h = [0] * 10\n\n        # Counting the occurrence of each digit in the input array\n        for num in arr:\n            h[num] += 1\n\n        # Building the maximum number by looping through the digits in descending order\n        result = \"\"\n        for i in range(9, -1, -1):\n            result += str(i) * h[i]\n\n        return result\n",
                "lang_text": "py"
            },
            {
                "lang": "Javascript",
                "full_func": "//Back-end complete function Template for javascript\nclass Solution {\n    MaxNumber(arr) {\n        // Array to store the count of each digit (0-9)\n        let h = Array(10).fill(0);\n\n        // Counting the occurrence of each digit in the input array\n        for (let i = 0; i < arr.length; i++) {\n            h[arr[i]]++;\n        }\n\n        // Building the maximum number by looping through the digits in descending order\n        let result = '';\n        for (let i = 9; i >= 0; i--) {\n            // Append digit 'i', h[i] times\n            result += i.toString().repeat(h[i]);\n        }\n\n        return result;\n    }\n}\n",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}