{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704527,
            "title": "Forming Rectangle",
            "titleSlug": "forming-rectangle0218",
            "content": "<p><span style=\"font-size:20px\">Given a positive integer N denoting the length of a stick, return&nbsp;the number of&nbsp;ways to split a stick into four parts so that it&#39;s possible to form a rectangle using these parts, but is impossible to form a square.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input: </strong>N = 10\r\n<strong>Output:</strong> 2\r\n<strong>Explanation</strong>: The 2 ways to split \r\nthe stick&nbsp;are {1,1,4,4} ,&nbsp;{2,2,3,3}&nbsp;\r\n</span></pre>\r\n\r\n<p><span style=\"font-size:18px\">\u00e2\u20ac\u2039<strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input</strong>: n = 20\r\n<strong>Output:</strong> 4\r\n<strong>Explanation</strong>: The 4 ways to split \r\nthe stick are {1,1,9,9} , {2,2,8,8}, \r\n{3,3,7,7} and&nbsp;{4,4,6,6}. Note that \r\n{5,5,5,5} forms&nbsp;square so it is not \r\nconsidered.</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:&nbsp;&nbsp;</strong><br />\r\nYou don&#39;t need to read input or print anything. Your task is to complete the function&nbsp;<strong>count()</strong>&nbsp;which takes&nbsp;<strong>N&nbsp;</strong>as input&nbsp;and returns the answer.<br />\r\n<br />\r\n<strong>Expected Time Complexity:</strong>&nbsp;O(1)<br />\r\n<strong>Expected Auxiliary Space:</strong>&nbsp;O(1)<br />\r\n<br />\r\n<strong>Constraints:</strong><br />\r\n1 &le; N &le; 10<sup>9</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a positive integer N, representing the length of a stick, determine the number of ways to split the stick into four parts such that a rectangle can be formed using these parts, but a square cannot be formed.",
                "constraints": [
                    "1 <= N <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "10",
                        "output": "2",
                        "explanation": "The possible splits are {1, 1, 4, 4} and {2, 2, 3, 3}.  Each set of four lengths allows the construction of a rectangle but not a square."
                    },
                    {
                        "input": "20",
                        "output": "4",
                        "explanation": "The possible splits are {1, 1, 9, 9}, {2, 2, 8, 8}, {3, 3, 7, 7}, and {4, 4, 6, 6}. The split {5, 5, 5, 5} is not considered because it forms a square."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nclass Solution{   \npublic:\n    //Function to count the number of segments divisible by 4.\n    long int count(long int n) { \n        //Checking if n is odd, if yes return 0.\n        if(n & 1) return 0;\n        //Calculating x as n divided by 2 and initializing ans as n divided by 4.\n        long int x = n / 2, ans = n / 4;\n        //Checking if x is divisible by 2, if yes decrement ans by 1.\n        if(x % 2 == 0) ans--;\n        //Returning the final count of segments divisible by 4.\n        return ans;\n    } \n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    public long count(long N)\n    {\n        //Checking if N is odd, if yes return 0.\n        if(N % 2 != 0)\n            return 0;\n        \n        //Calculating x as N divided by 2 and initializing ans as N divided by 4.\n        long x = N / 2;\n        long ans = N / 4;\n\n        //Checking if x is divisible by 2, if yes decrement ans by 1.\n        if(x % 2 == 0)\n            ans--;\n        \n        //Returning the final count of segments divisible by 4.\n        return ans;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}