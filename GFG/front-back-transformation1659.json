{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703249,
            "title": "Front-Back Transformation - copy",
            "titleSlug": "front-back-transformation1659",
            "content": "<p><span style=\"font-size:18px\">Given a string S, consisting only of english alphabets, replace all the alphabets with the alphabets occuring at the same position when counted in reverse order of alphabets. For example, &#39;a&#39; would be replaced by &#39;z&#39;, &#39;b&#39; by &#39;y&#39;, &#39;c&#39; by &#39;x&#39; and so on. Any capital letters would be replaced by capital letters only.</span></p>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong> S = &quot;Hello&quot;\n<strong>Output:</strong> Svool\n<strong>Explanation:</strong> &#39;H&#39; is the 8th letter from the\nbeginning of alphabets, which is replaced by\n&#39;S&#39; which comes at 8th position in reverse order\nof alphabets. Similarly, all other letters are \nreplaced by their respective upper or lower case \nletters accordingly.</span>\n</pre>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong> S = &quot;GfG&quot;\n<strong>Output:</strong> TuT\n<strong>Explanation: </strong>&#39;G&#39; is replaced with &#39;T&#39;\nand &#39;f&#39; is replaced with &#39;u&#39;</span></pre>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:&nbsp;&nbsp;</strong><br />\nYou don&#39;t need to read input or print anything. Your task is to complete the function&nbsp;<strong>convert()</strong>&nbsp;which accepts a string&nbsp;as input parameter and returns the modified&nbsp;string according to given conditions.&nbsp;</span></p>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong>&nbsp;O(Length of string)<br />\n<strong>Expected Auxiliary Space:</strong>&nbsp;O(Length of string)</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Constraints</strong>:</span></p>\n\n<p><span style=\"font-size:18px\">1&nbsp;&lt;=&nbsp;Length of string S &lt;= 10<sup>5</sup></span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string S consisting of English alphabets, replace each alphabet with the alphabet at the corresponding position when counted in reverse order. For example, 'a' becomes 'z', 'b' becomes 'y', and so on. Capital letters should be replaced with capital letters only.",
                "constraints": [
                    "1 <= Length of string S <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "Hello",
                        "output": "Svool",
                        "explanation": "'H' (8th letter) is replaced by 'S' (8th from the end). Similarly for other letters, maintaining case."
                    },
                    {
                        "input": "GfG",
                        "output": "TuT",
                        "explanation": "'G' is replaced with 'T' and 'f' is replaced with 'u'"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>How can ASCII values will help?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Function to convert a string by replacing each character with its corresponding opposite case character.\nstring convert(string a)\n{\n\t//Initializing an empty string to store the converted string.\n\tstring ans=\"\";\n\n\t//Looping through each character in the given string.\n\tfor(int i = 0; i < (int) a.size(); ++i)\n\t{\n\t\t//Checking if the character is lowercase.\n\t\tif(a[i] >= 'a' and a[i] <= 'z') \n\t\t\t//If it is lowercase, add the corresponding uppercase opposite case character to the ans string.\n\t\t\tans += (char)('z' - (a[i] - 'a'));\n\t\telse \n\t\t\t//If it is uppercase, add the corresponding lowercase opposite case character to the ans string.\n\t\t\tans += (char)('Z' - (a[i] - 'A'));\n\t}\n\t//Returning the converted string.\n\treturn ans;\n}",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "// Back-end complete function Template for Java\nclass Solution \n{ \n    // Convert given string by replacing each character with its corresponding opposite letter in the alphabet\n    String convert(String a) \n    { \n        // Create a StringBuilder to store the converted string\n        StringBuilder ans = new StringBuilder();\n        \n        // Iterate over each character in the given string\n        for(int i = 0; i < (int) a.length(); ++i)\n    \t{\n    \t    char ch=a.charAt(i);\n    \t    \n            // If the character is a lowercase letter, replace it with its opposite lowercase letter\n    \t\tif(ch >= 'a' && ch <= 'z') \n    \t\t\tch = (char)('z' - (ch - 'a'));\n    \t\t\n            // If the character is an uppercase letter, replace it with its opposite uppercase letter\n    \t\telse \n    \t\t\tch = (char)('Z' - (ch - 'A'));\n    \t\t\n            // Append the converted character to the StringBuilder\n    \t\tans.append(ch);\n    \t}\n    \t\n        // Convert the StringBuilder back to a string and return it\n    \treturn ans.toString();\n    }\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n    def convert(self, s):\n        ans=''  # Initialize an empty string 'ans'\n        for i in s:  # Iterate through each character in the given string 's'\n            if ord(i) >= ord('a') and ord(i) <= ord('z'):  # Check if the character is lowercase\n                ans += chr(ord('z') - (ord(i) - ord('a')))  # Convert the character to its inverted lowercase value and add it to 'ans'\n            else:  # If the character is not lowercase, it must be uppercase\n                ans += chr(ord('Z') - (ord(i) - ord('A')))  # Convert the character to its inverted uppercase value and add it to 'ans'\n        return ans  # Return the final converted string 'ans'",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n/**\n * @param {string} s\n * @returns {string}\n*/\n\nclass Solution {\n    //Function to convert the given string to its reverse.\n    convert(s) {\n        let ans='';  // Initialize an empty string 'ans'\n        for (let i = 0; i < s.length; i++) {  // Iterate through each character in the given string 's'\n            if (s.charCodeAt(i) >= 97 && s.charCodeAt(i) <= 122) {  // Check if the character is lowercase\n                ans += String.fromCharCode(122 - (s.charCodeAt(i) - 97));  // Convert the character to its inverted lowercase value and add it to 'ans'\n            } else {  // If the character is not lowercase, it must be uppercase\n                ans += String.fromCharCode(90 - (s.charCodeAt(i) - 65));  // Convert the character to its inverted uppercase value and add it to 'ans'\n            }\n        }\n        return ans;  // Return the final converted string 'ans'\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}