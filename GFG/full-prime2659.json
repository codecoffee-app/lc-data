{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703829,
            "title": "Full Prime",
            "titleSlug": "full-prime2659",
            "content": "<p><span style=\"font-size:18px\">Given a number N.Check if it is Full Prime or not.&nbsp;<br />\n<strong>Note</strong> : A full prime number is one in which the number itself is prime and all its digits are also prime.</span></p>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\nN=31\n<strong>Output:</strong>\n0\n<strong>Explanation:</strong>\nN is prime but since 1 is not a \nprime so all the digits of N\nare not prime.So, Answer is 0.</span></pre>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\nN=37\n<strong>Output:</strong>\n1\n<strong>Explanation:</strong>\nN is prime and so is all of its digits.\nThus, Answer is 1.</span></pre>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nYou don&#39;t need to read input or print anything.Your task is to complete the function <strong>fullPrime()</strong> which takes the number N as input parameter and returns 1 if the number is Full Prime.Otherwise return 0.</span></p>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong>O(Sqrt(N))<br />\n<strong>Expected Auxillary Space:</strong>O(1)</span></p>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Constraints:</strong><br />\n1&lt;=N&lt;=10<sup>9</sup></span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a number N, determine if it is a Full Prime. A Full Prime number is a prime number where all its digits are also prime numbers.",
                "constraints": [
                    "1 <= N <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "31",
                        "output": "0",
                        "explanation": "31 is a prime number, but 1 is not. Therefore, not all digits of 31 are prime."
                    },
                    {
                        "input": "37",
                        "output": "1",
                        "explanation": "37 is a prime number, and both 3 and 7 are also prime numbers. Therefore, 37 is a Full Prime."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">A number is prime if it has only two factors: 1 and the number itself.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Prime Number",
                "slug": "prime-number"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Backend Complete function template for C++\n\nclass Solution{\n    public:\n\t// Function to check if the number is a full prime or not.\n\tint fullPrime(int N){\n\t\t// Loop to check for factors less than or equal to square root of N.\n\t\tfor(int i=2;i*i<=N;i++)\n\t\t\t// If N is divisible by i, then it is not a full prime, return 0.\n\t\t\tif(N%i==0)\n\t\t\t\treturn 0;\n\t\t// Loop to check if each digit of N is 2, 3, 5, or 7.\n\t\twhile(N){\n\t\t\tif(N%10!=2&&N%10!=3&&N%10!=5&&N%10!=7)\n\t\t\t\t// If any digit is not 2, 3, 5, or 7, then it is not a full prime, return 0.\n\t\t\t\treturn 0;\n\t\t\tN/=10;\n\t\t}    \n\t\t// If the number passes both checks, it is a full prime, return 1.\n\t\treturn 1;\n\t}\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "// Back-end complete function Template for Java\n\nclass Solution{\n    // Function to check if a number is a full prime\n    static int fullPrime(int N){\n        int i;\n        \n        // Checking for factors up to square root of N\n        for(i=2;i*i<=N;i++)\n            if(N%i==0)\n                // If N is divisible by i, it is not a prime number\n                return 0;\n                \n        // Checking if every digit of N is 2, 3, 5, or 7\n        while(N>0){\n            if(N%10!=2&&N%10!=3&&N%10!=5&&N%10!=7)\n                // If any digit of N is not 2, 3, 5, or 7, it is not a full prime\n                return 0;\n            N/=10;\n        }    \n        \n        // If all conditions are satisfied, N is a full prime\n        return 1;\n    }\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\nclass Solution:\n    \n    #Function to check if the number is a full prime or not.\n    def fullPrime(self,N):\n        \n        i=2\n        #Checking if the number is divisible by any number less than or equal to its square root.\n        while(i*i<=N):\n            if(N%i==0):\n                return 0\n            i=i+1\n            \n        #Checking if the number contains only the digits 2, 3, 5, and 7.\n        while(N>0):\n            if(N%10!=2 and N%10!=3 and N%10!=5 and N%10!=7):\n                return 0\n            N//=10    \n        return 1",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n/**\n * @param {number} N\n * @returns {boolean}\n*/\n\nclass Solution {\n    //Function to find whether a number is prime or not.\n    isPrime(N) {\n        if (N <= 1) {\n            return 0;\n        }\n        for (let i = 2; i * i <= N; i++) {\n            if (N % i == 0) {\n                return 0;\n            }\n        }\n        return 1;\n    }\n\n    //Function to find whether a number is full prime or not.\n    fullPrime(N) {\n        if (!this.isPrime(N)) {\n            return 0;\n        }\n        \n        while (N > 0) {\n            let digit = N % 10;\n            if (digit !== 2 && digit !== 3 && digit !== 5 && digit !== 7) {\n                return 0;\n            }\n            N = Math.floor(N / 10);\n        }\n        \n        return 1;\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}