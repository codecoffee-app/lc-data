{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 878590,
            "title": "Function pointer as parameter",
            "titleSlug": "function-pointer-as-parameter",
            "content": "<p><span >You are given two functions, <code>add</code> and <code>mul</code>, each of which takes two integers, <code>a</code> and <code>b</code>, as input and returns an integer result. <br /></span><span >Your task is to complete the <code>compute</code> function so that it can perform the desired operation (either addition or multiplication) based on the function specified in the driver code.</span></p>\n<p><span >To accomplish this, use a function pointer as a parameter in the <code>compute</code> function to select between <code>add</code> and <code>mul</code> dynamically when invoked.</span></p>\n<p><span ><strong>Examples:</strong></span></p>\n<pre><strong><span >Input: </span></strong><span >a = 3, b = 4, func= add()<br /><strong>Output: </strong>7<br /><strong>Explanation: </strong>add() function is called. <br /></span></pre>\n<pre><strong><span >Input:</span></strong><span > a = 5, b = 2, func = mul()<br /><strong>Output: </strong>10</span><span ><br /><strong>Explanation: </strong>mul() function is called. </span></pre>\n<pre><strong><span >Input:</span></strong><span > a = 1, b = 5, func = mul()<br /><strong>Output: </strong>5</span><span ><br /><strong>Explanation: </strong>mul() function is called. </span></pre>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "You are given two functions, `add` and `mul`, each of which takes two integers, `a` and `b`, as input and returns an integer result. Your task is to complete the `compute` function so that it can perform either addition or multiplication based on the function specified. Use a function pointer as a parameter in the `compute` function to dynamically select between `add` and `mul` when invoked.",
                "constraints": [],
                "testcases": [
                    {
                        "input": "a = 3, b = 4, func= add()",
                        "output": "7",
                        "explanation": "The `add` function is called with inputs 3 and 4, returning their sum, which is 7."
                    },
                    {
                        "input": "a = 5, b = 2, func = mul()",
                        "output": "10",
                        "explanation": "The `mul` function is called with inputs 5 and 2, returning their product, which is 10."
                    },
                    {
                        "input": "a = 1, b = 5, func = mul()",
                        "output": "5",
                        "explanation": "The `mul` function is called with inputs 1 and 5, returning their product, which is 5."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\n// Function that add two numbers\nint add(int x, int y) {\n    return x + y;\n}\n\n// Function that multiplies two\n// numbers\nint mul(int x, int y) {\n    return x * y;\n}\n\n// Function that takes a pointer\n// to a function\nint compute(int x, int y, int (*func)(int, int)) {\n    return func(x, y);\n}",
                "lang_text": "cpp"
            }
        },
        "platform": "GFG"
    }
}