{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 706540,
            "title": "Function pointer",
            "titleSlug": "function-pointer",
            "content": "<p><span style=\"font-size:18px\">Here two integers<strong> a </strong>and<strong> b </strong>are given. Their values are passed as <strong>arguments </strong>to the function <strong>compute() </strong>along<strong> </strong>with a function pointer. The compute() should print&nbsp;<strong>(a-b) or&nbsp;(a+b) </strong>as per function calls followed by a new line. You need to <strong>complete all functions</strong>. Main function will do two function calls as compute(a,b, sub) &amp; compute(a, b, add).&nbsp;</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong><strong> </strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input</strong>:\na = 2\nb = 3\n<strong>Output:</strong> \n-1\n5\n<strong>Explanation</strong>: 2 - 3 = -1; 2 + 3 = 5. </span></pre>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:&nbsp; </strong><br />\nYou have to<strong> complete </strong>all&nbsp;functions sub(), add() &amp;&nbsp;compute()<strong>. </strong>All functions should take <strong>two arguments a</strong> and <strong>b</strong>&nbsp;but compute() will take one&nbsp;extra argument as function pointer. sub() and add() will return the result but compute() will print the result as per function call.</span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p>Pass function pointer as argument.</p>"
        ],
        "relatedTopics": [
            {
                "name": "CPP",
                "slug": "cpp"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C",
                "full_func": "//Back-end complete function Template for C\n\nint sub(int a, int b){\n    return (a - b);\n}\n\nint add(int a, int b){\n    return (a + b);\n}\n\nvoid compute(int a, int b, int (*fun_ptr)(int, int)){\n    printf(\"%d\\n\", fun_ptr(a, b));\n}",
                "lang_text": "c"
            }
        ],
        "platform": "GFG"
    }
}