{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704652,
            "title": "Game of cells",
            "titleSlug": "game-of-cells3700",
            "content": "<p><span style=\"font-size:18px\">Given a <strong>NxNxN</strong> grid. Harvey and Mike are playing a game. The rule of the game is simple. Each of them in their turn choses a cell and mark it with their initials. But the catch here is once a cell is marked they can&#39;t chose any of the adjacent(sharing a common face not the just the edge) cell to it. Since Harvey is senior he goes first. Both of them play optimally. The player with no move remaining loses the game. Find out who wins.</span></p>\r\n\r\n<p><br />\r\n<strong><span style=\"font-size:18px\">Example 1:</span></strong></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong> N = 2\r\n<strong>Output:</strong> Mike\r\n<strong>Explaination:</strong> 2*2*2 grid they have 8 blocks, \r\nif Harvey marks any of the cell the then Mark \r\nhas only three options left, and once Mike \r\nchooses any one of the three, then Harvey has\r\nno other option so Mike wins.</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong><span style=\"font-size:18px\">Example 2:</span></strong></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong> N = 1\r\n<strong>Output:</strong> Harvey\r\n<strong>Explaination:</strong> There is only one cell which \r\ngets filled when Harvey uses his first turn. \r\nSo Mike has no possible turn and Harvey wins.</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou do not need to read&nbsp;input or print anything. Your task is to complete the function <strong>winner() </strong>which takes the value N as input parameter and returns the name of the&nbsp;winner. ie either &quot;Harvey&quot; or &quot;Mike&quot;.</span></p>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Expected Time Complexity: </strong>O(1)<br />\r\n<strong>Expected Auxiliary Space:</strong> O(1)</span></p>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n1 &le; N &le; 10<sup>18</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Harvey and Mike are playing a game on an NxNxN grid. They take turns marking cells with their initials.  When a cell is marked, no adjacent cell (sharing a face) can be chosen. Harvey goes first. Both players play optimally. The player with no available moves loses. Determine the winner.",
                "constraints": [
                    "1 \u2264 N \u2264 10^18"
                ],
                "testcases": [
                    {
                        "input": "N = 2",
                        "output": "Mike",
                        "explanation": "In a 2x2x2 grid (8 cells), Harvey marks a cell. Mike can then choose from a limited set of adjacent cells that remains valid to win, restricting Harvey's moves such that Mike eventually wins."
                    },
                    {
                        "input": "N = 1",
                        "output": "Harvey",
                        "explanation": "With a 1x1x1 grid (1 cell), Harvey marks the only cell, leaving no move for Mike. Therefore, Harvey wins."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Even number of total cells results in Mike&#39;s win.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Game Theory",
                "slug": "game-theory"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "// Back-end complete function Template for C++\n\nclass Solution{\npublic:\n    // Function to determine the winner based on the given input number N\n    string winner(long long int N){\n        // If N is odd, Harvey wins, so return \"Harvey\"\n        if(N%2 == 1)\n            return \"Harvey\";\n        // If N is even, Mike wins, so return \"Mike\"\n        else\n            return \"Mike\";\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\r\n\r\nclass Solution{\r\n    \r\n    //Function to determine the winner based on the given input.\r\n    static String winner(long N){\r\n        \r\n        //Checking if the given number is odd or even.\r\n        //If the number is odd, Harvey is the winner.\r\n        if(N%2 == 1)\r\n            return \"Harvey\";\r\n        //If the number is even, Mike is the winner.\r\n        else\r\n            return \"Mike\";\r\n    }\r\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\r\n\r\nclass Solution:\r\n    \r\n    #Function to determine the winner.\r\n    def winner(self, N):\r\n        \r\n        #Checking if N is odd.\r\n        if(N%2 == 1):\r\n            return \"Harvey\"\r\n        else:\r\n            return \"Mike\"",
                "lang_text": "py"
            }
        ],
        "platform": "GFG"
    }
}