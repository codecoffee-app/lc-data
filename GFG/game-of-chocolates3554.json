{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704866,
            "title": "Game of Chocolates",
            "titleSlug": "game-of-chocolates3554",
            "content": "<p><span style=\"font-size: 18px;\"><span style=\"font-size: 18px;\">Bunty and Dolly are playing a game, described as follows.</span><br /><strong style=\"font-size: 18px;\">Game Description: -</strong><br /><span style=\"font-size: 18px;\">There are two boxes having </span><strong style=\"font-size: 18px;\">a </strong><span style=\"font-size: 18px;\">and </span><strong style=\"font-size: 18px;\">b</strong><span style=\"font-size: 18px;\"> number&nbsp;of chocolates respectively. Both can eat</span><strong style=\"font-size: 18px;\"> L</strong><span style=\"font-size: 18px;\">&nbsp;(L &ge; 1) chocolates from any one box or</span><strong style=\"font-size: 18px;\"> L</strong><span style=\"font-size: 18px;\"> chocolates from both boxes in one&nbsp;move. They play the game alternatively and the last one to eat the chocolate will be the winner.</span><br /><span style=\"font-size: 18px;\">As Bunty wants to impress Dolly, he wants to make Dolly the winner. You have to help Bunty in deciding who should play first. Assume that both the players play optimally.</span><br /><span style=\"font-size: 18px;\">Returns <strong>false</strong> if Bunty should play first else <strong>true</strong>.</span><br /></span></p>\n<p><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input</strong>:\na = 1 and b = 2\n<strong>Output:</strong>&nbsp;Bunty</span><span style=\"font-size: 18px;\">\n<strong>Explanation</strong>:\nIf Bunty starts first, all the next possible state\n(0,2), (1,1), (1,0) are wining state for Dolly</span>\n</pre>\n<p><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong>\na = 1 and b = 3\n<strong>Output: </strong>Dolly\n</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Your Task:&nbsp;&nbsp;</strong><br />You don't need to read input or print anything. Your task is to complete the function&nbsp;<strong>game()</strong>&nbsp;which takes the integer A and B&nbsp;as input parameters and returns <strong>false</strong>&nbsp;if Bunty should play first else returns&nbsp;<strong>true</strong>.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong> O(1)<br /><strong>Expected Auxiliary Space:</strong> O(1)</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />0 &le; a, b &le; 10<sup>9</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Bunty and Dolly are playing a game with two boxes of chocolates. The first box contains 'a' chocolates and the second box contains 'b' chocolates. In each turn, a player can eat 'L' (L >= 1) chocolates from either one box or 'L' chocolates from both boxes. The player who eats the last chocolate wins. Bunty wants Dolly to win. Determine who should play first for Dolly to win, assuming both players play optimally.\n\nReturn 'false' if Bunty should play first and 'true' if Dolly should play first.",
                "constraints": [
                    "0 <= a, b <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "a = 1 and b = 2",
                        "output": "false",
                        "explanation": "If Bunty starts first, all possible next states (0,2), (1,1), and (1,0) are winning states for Dolly. Therefore Bunty should play first for Dolly to win."
                    },
                    {
                        "input": "a = 1 and b = 3",
                        "output": "true",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size: 18px;\">This is Wythoff's game.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Game Theory",
                "slug": "game-theory"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Constant for defining the range of N\nconst int Nrange = (int)(1e6+1);\n\nclass Solution{\npublic:   \n    //Function to play a game with two numbers.\n    bool game(int a, int b){\n        //Sorting a and b in ascending order.\n        if(a>b){\n            swap(a,b);\n        }\n        \n        //Calculating the difference between b and a.\n        int k=b-a;\n        \n        //Calculating the value of the golden ratio.\n        long double d= 1 +sqrt(5);\n        d/=2;\n        \n        //Multiplying the golden ratio by the difference.\n        d*=k;\n        \n        //Converting the product to an integer.\n        int temp=(int)d;\n        \n        //Checking if the integer is equal to a.\n        if(temp==a){\n            //If it is equal, then return false.\n            return 0;\n        }\n        \n        //If not equal, return true.\n        return 1;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution {\n    // Constant for defining the range of N\n    static final int Nrange = (int)(1e6 + 1);\n\n    // Function to play a game with two numbers.\n    boolean game(int a, int b) {\n        // Sorting a and b in ascending order.\n        if (a > b) {\n            int temp = a;\n            a = b;\n            b = temp;\n        }\n\n        // Calculating the difference between b and a.\n        int k = b - a;\n\n        // Calculating the value of the golden ratio.\n        double d = 1 + Math.sqrt(5);\n        d /= 2;\n\n        // Multiplying the golden ratio by the difference.\n        d *= k;\n\n        // Converting the product to an integer.\n        int temp = (int)d;\n\n        // Checking if the integer is equal to a.\n        if (temp == a) {\n            // If it is equal, then return false.\n            return false;\n        }\n\n        // If not equal, return true.\n        return true;\n    }\n}\n",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "import math\n\n\nclass Solution:\n    # Constant for defining the range of N\n    Nrange = int(1e6 + 1)\n\n    # Function to play a game with two numbers.\n    def game(self, a, b):\n        # Sorting a and b in ascending order.\n        if a > b:\n            a, b = b, a\n\n        # Calculating the difference between b and a.\n        k = b - a\n\n        # Calculating the value of the golden ratio.\n        d = (1 + math.sqrt(5)) / 2\n\n        # Multiplying the golden ratio by the difference.\n        d *= k\n\n        # Converting the product to an integer.\n        temp = int(d)\n\n        # Checking if the integer is equal to a.\n        if temp == a:\n            # If it is equal, then return False.\n            return False\n\n        # If not equal, return True.\n        return True\n",
                "lang_text": "py"
            },
            {
                "lang": "C#",
                "full_func": null,
                "lang_text": "csharp"
            },
            {
                "lang": "Javascript",
                "full_func": "//Back-end complete function Template for javascript\n\nclass Solution {\n    solve(a, b) {\n        // Swap a and b if a is greater than b\n        if(a>b){\n            [a, b] = [b, a];\n        }\n        let k=b-a; // Calculate the difference between a and b\n        let d= 1 +Math.sqrt(5); // Calculate the value of phi\n        d/=2; // Divide phi by 2\n        d*=k; // Multiply phi/2 with the difference between a and b\n        let temp=parseInt(d); // Convert d into an integer\n        // Check if temp is equal to a\n        if(temp===a){\n            // If temp is equal to a, return false\n            return false;\n        }\n        // Otherwise, return true\n        return true;\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}