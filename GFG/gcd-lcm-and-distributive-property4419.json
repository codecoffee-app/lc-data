{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704528,
            "title": "GCD, LCM and Distributive Property",
            "titleSlug": "gcd-lcm-and-distributive-property4419",
            "content": "<p><span style=\"font-size:18px\">Given three integers <strong>x, y, z</strong>, the task is to compute the value of&nbsp;<strong>GCD(LCM(x,y), LCM(x,z)) </strong>and return the value.<br />\r\nWhere, GCD&nbsp;= Greatest Common Divisor, LCM&nbsp;= Least Common Multiple.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input: </strong>x = 15, y = 20, z = 100\r\n<strong>Output:</strong> 60\r\n<strong>Explanation</strong>: GCD(LCM(15,20), LCM(15,100))\r\n=GCD(60,300)=60.</span></pre>\r\n\r\n<p><span style=\"font-size:18px\">\u00e2\u20ac\u2039<strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input</strong>: x = 30, y = 40, z = 400\r\n<strong>Output:</strong> 120\r\n<strong>Explanation</strong>: GCD(LCM(30,40), LCM(30,400))\r\n=GCD(120,1200)=120.</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:&nbsp;&nbsp;</strong><br />\r\nYou don&#39;t need to read input or print anything. Your task is to complete the function&nbsp;<strong>findValue()</strong>&nbsp;which takes&nbsp;<strong>x, y, z&nbsp;</strong>as inputs and returns the answer.<br />\r\n<br />\r\n<strong>Expected Time Complexity:</strong>&nbsp;O(max(log x, log y, log z))<br />\r\n<strong>Expected Auxiliary Space:</strong>&nbsp;O(1)<br />\r\n<br />\r\n<strong>Constraints:</strong><br />\r\n1 &le; x, y, z &le; 10<sup>6</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given three integers x, y, and z, compute the value of GCD(LCM(x, y), LCM(x, z)). GCD represents the Greatest Common Divisor, and LCM represents the Least Common Multiple.",
                "constraints": [
                    "1 <= x, y, z <= 10^6"
                ],
                "testcases": [
                    {
                        "input": "x = 15, y = 20, z = 100",
                        "output": "60",
                        "explanation": "The LCM of 15 and 20 is 60. The LCM of 15 and 100 is 300. The GCD of 60 and 300 is 60."
                    },
                    {
                        "input": "x = 30, y = 40, z = 400",
                        "output": "120",
                        "explanation": "The LCM of 30 and 40 is 120. The LCM of 30 and 400 is 1200. The GCD of 120 and 1200 is 120."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nclass Solution{   \npublic:\n    //Function to find the value using given inputs.\n    long long findValue(int x, int y, int z) { \n        //Calculating GCD of y and z.\n        long long int g = __gcd(y, z); \n        //Returning LCM(x, GCD(y, z)).\n        long long ans = (long long)(x*g)/ (long long)__gcd((long long)x, g);\n        return ans; \n    } \n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    public long findValue(int x, int y, int z)\n    {\n        //Calculating GCD of y and z.\n        long g = CalculateGCD(y, z);\n        //Returning LCM(x, GCD(y, z)).\n        long ans = (x * g) / CalculateGCD(x, g);\n        return ans;\n    }\n\n    //Private function to calculate GCD of two numbers.\n    private long CalculateGCD(long a, long b)\n    {\n        if (b == 0)\n            return a;\n        return CalculateGCD(b, a % b);\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}