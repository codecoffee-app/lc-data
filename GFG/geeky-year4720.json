{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705259,
            "title": "Geeky Year",
            "titleSlug": "geeky-year4720",
            "content": "<p><span style=\"font-size:18px\">It is given to you that on 1st January 2001 it was monday. Let&#39;s call a year as Geeky if the 1st January of that year happens to be on Sunday. You will be given two years &#39;a&#39; and &#39;b&#39;. The&nbsp;task is to find the no. of Geeky years between those two years (including&nbsp;&#39;a&#39; and &#39;b&#39; as well)</span><br />\n&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input: </strong>a = 2001, b = 2013\n<strong>Output: </strong>2</span>\n</pre>\n\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input: </strong>a = 2020, b = 2024\n<strong>Output: </strong>1</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nYou don&#39;t need to read or print anything. Your task is to complete the function&nbsp;<strong>Count()</strong>&nbsp;which takes a and b as input parameter and returns total no. of Geeky years between a to b(inclusive).</span><br />\n&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:&nbsp;</strong>O(n<sup>2</sup>)<br />\n<strong>Expected Space Complexity:&nbsp;</strong>O(1)</span><br />\n&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\n1000 &lt;= a &lt; = b &lt;= 3000</span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p>Use dynamic programming.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution {\n\tpublic:\n\t\tint Count(int a, int b){\n\t\t    int dp[2001];\n\t\t    memset(dp,0,sizeof(dp));\n\t\t    for(int i=1000;i<=3000;i++)\n\t\t    {\n\t\t        int day,n=i,count=1;\n\t\t        if(n==2001)\n\t\t            day=1;\n\t\t        if(n>2001)\n\t\t        {\n\t\t            for(int j=2001;j<n;j++)\n\t\t            {\n\t\t                if(j==2001)\n\t\t                count+=364;\n\t\t                if(j>2001)\n\t\t                {\n\t\t                    if(j%100!=0)\n\t\t                    {\n\t\t                        if(j%4==0)\n\t\t                        count+=366;\n\t\t                        else\n\t\t                        count+=365;\n\t\t                    }\n\t\t                    else\n\t\t                    {\n\t\t                        if((j/100)%4==0)\n\t\t                        count+=366;\n\t\t                        else if((j/100)%4!=0)\n\t\t                        count+=365;\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            day=count%7;\n\t\t            day++;\n\t\t        }\n\t\t        if(n<2001)\n\t\t        {\n\t\t            for(int j=2000;j>=n;j--)\n\t\t            {\n\t\t                if(j%100!=0)\n\t\t                {\n\t\t                    if(j%4==0)\n\t\t                    count-=366;\n\t\t                    else\n\t\t                    count-=365;\n\t\t                }\n\t\t                else\n\t\t                {\n\t\t                    if((j/100)%4==0)\n\t\t                    count-=366;\n\t\t                    else if((j/100)%4!=0)\n\t\t                    count-=365;\n\t\t                }\n\t\t            }\n\t\t            count=-count;\n\t\t            day=7-count%7;\n\t\t        }\n\t\t        if(i!=1000)\n\t\t        {\n\t\t            if(day==7)\n\t\t            dp[i-1000]=dp[i-1-1000]+1;\n\t\t            else\n\t\t            {\n\t\t                dp[i-1000]=dp[i-1-1000];\n\t\t            }\n\t\t        }\n\t\t        else\n\t\t        {\n\t\t            if(day==7)\n\t\t            dp[i-1000]=1;\n\t\t        }\n\t\t    }\n\t\t    a-=1000;\n\t\t    b-=1000;\n\t\t    if(a != 0)\n\t\t    \treturn dp[b] - dp[a-1];\n\t\t    return dp[b];\n\t\t}\n\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            }
        ],
        "platform": "GFG"
    }
}