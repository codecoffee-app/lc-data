{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 700783,
            "title": "GetLine and Ignore",
            "titleSlug": "getline-and-ignore",
            "content": "<p><span style=\"font-size:18px\">There are many times when we need to take input of a string that contains multiple words.<br />\r\nHere, we will learn how to take input of a<strong> string that comprises of multiple words</strong>. Also, we will learn to clear the input buffer. Your task is to take input of strings and integers and produce the output.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Note :</strong> Use <a href=\"https://www.geeksforgeeks.org/basic-input-output-c/\">std:cin</a>, <a href=\"https://www.geeksforgeeks.org/getline-string-c/\">getline()</a>, <a href=\"https://www.geeksforgeeks.org/clearing-the-input-buffer-in-cc/\">cin.ignore()</a>.<br />\r\n<strong>Note 2: </strong>When cin is followed by getline, <strong>it creates a problem </strong>that can be circumvented by using cin.ignore. You can read more about it <a href=\"https://stackoverflow.com/questions/25074624/why-is-stdgetline-skipped\">here</a></span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Input Format:</strong><br />\r\nFirst line of input contains <strong>T</strong>,&nbsp; number of testcases. For each testcase, there will<strong> be three lines of input</strong>. First line <strong>contains string</strong>, <strong>second line contains integer,</strong> and<strong> third line again contains string</strong>.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Output Format:</strong><br />\r\nFor each testcase,<strong> print the variables in same order as taken in input</strong>.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>User Task:</strong><br />\r\nYour task is to complete the function <strong>getLineAndIgnore()</strong> to take input of strings and<strong> learn how and when to use cin.ignore().</strong></span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example:</strong><br />\r\n<strong>Input:</strong><br />\r\n1<br />\r\nhello world<br />\r\n5<br />\r\nhello</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Output:</strong><br />\r\nhello world<br />\r\n5<br />\r\nhello</span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "This problem focuses on handling string input, especially when dealing with multiple words and the interaction between `cin` and `getline()` in C++. You'll need to take input of strings and integers in a specific order for each test case, ensuring proper input handling by using `cin.ignore()` to clear the input buffer when necessary. The goal is to understand how and when to use `cin.ignore()` to avoid common input issues.",
                "constraints": [],
                "testcases": [
                    {
                        "input": "1\nhello world\n5\nhello",
                        "output": "hello world\n5\nhello",
                        "explanation": "The test case provides a single test case. The first string is 'hello world', followed by integer 5, and then the string 'hello'. The output should mirror this input."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>use cin.getline() after taking integer input&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "cpp-strings",
                "slug": "cpp-strings"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nvoid getLineAndIgnore(){\n\n    string a, d;\n    \n    int b;\n    \n    //Taking input as a string\n    getline(cin,a);\n    \n    //Taking input as an integer\n    cin>>b;\n   \n    //Ignoring the newline so it isn't consumed by getline\n    cin.ignore();\n    \n    //Taking input as a string\n    getline(cin,d);\n   \n    //Printing the first string\n    cout<<a<<endl;\n\n    //Printing the integer\n    cout << b << endl;\n    \n    //Printing the second string\n    cout << d << endl;\n}",
                "lang_text": "cpp"
            }
        ],
        "platform": "GFG"
    }
}