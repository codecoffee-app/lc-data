{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704144,
            "title": "G.F Series",
            "titleSlug": "gf-series3535",
            "content": "<p><span style=\"font-size: 18px;\">Siddhant made a special series and named it as G.F Series. The series follows this trend &nbsp;<strong>T<sub>n</sub>=(T<sub>n-2</sub>)<sup>2</sup>-(T<sub>n-1</sub>)</strong> &nbsp;in which the first and the second term are 0 and 1 respectively. Help Siddhant to find the first <strong>n</strong> terms of the series.<br /><br /><strong>Note</strong>: Print a white space (\" \") after every integer and a newline character after every testcase. <br /></span></p>\n<p><strong><span style=\"font-size: 18px;\">Examples</span></strong></p>\n<pre><strong><span style=\"font-size: 18px;\">Input: </span></strong><span style=\"font-size: 18px;\">n = 3</span>\n<strong><span style=\"font-size: 18px;\">Output: </span></strong><span style=\"font-size: 18px;\">0 1 -1</span>\n<strong><span style=\"font-size: 18px;\">Explanation: </span></strong><span style=\"font-size: 18px;\">First-term is given as 0 and the second term is 1. So the T<sub>3</sub> = (T<sub>3-2</sub>)<sup>2</sup> - (T<sub>3-1</sub>) = T<sub>1</sub><sup>2</sup> - T<sub>2</sub> = 0<sup>2</sup> - 1 = -1</span></pre>\n<pre><strong><span style=\"font-size: 18px;\">Input: </span></strong><span style=\"font-size: 18px;\">n = 6</span>\n<strong><span style=\"font-size: 18px;\">Output: </span></strong><span style=\"font-size: 18px;\">0 1 -1 2 -1 5</span>\n<strong><span style=\"font-size: 18px;\">Explanation:\n</span></strong><span style=\"font-size: 18px;\">T<sub>1</sub> : 0\nT<sub>2</sub> : 1\nT<sub>3</sub> : -1\nT<sub>4</sub> = (1)<sup>2</sup> - (-1) = 2\nT<sub>5</sub> = (-1)<sup>2</sup> - (2) = 1 - 2 = -1\nT<sub>6</sub> = (2)<sup>2</sup> - (-1) = 4 + 1 = 5 </span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Your Task:&nbsp;&nbsp;</strong></span><br /><span style=\"font-size: 18px;\">You don't need to read input. Your task is to complete the function&nbsp;<strong>gfSeries</strong>() which takes an integer n as an input parameter and print first n term of the series.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity</strong>: O(n)<br /><strong>Expected Auxiliary Space:</strong> O(n)</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />2 &lt;= n &lt;= 15</span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Siddhant created a series called the G.F Series. The series follows the pattern: T<sub>n</sub> = (T<sub>n-2</sub>)<sup>2</sup> - (T<sub>n-1</sub>), where the first term (T<sub>1</sub>) is 0 and the second term (T<sub>2</sub>) is 1. Write a program to find the first *n* terms of the series. Print a space after each integer and a newline after each test case.",
                "constraints": [
                    "2 <= n <= 15"
                ],
                "testcases": [
                    {
                        "input": "3",
                        "output": "0 1 -1",
                        "explanation": "The first two terms are given as 0 and 1. The third term is calculated as: T<sub>3</sub> = (T<sub>1</sub>)<sup>2</sup> - T<sub>2</sub> = 0<sup>2</sup> - 1 = -1"
                    },
                    {
                        "input": "6",
                        "output": "0 1 -1 2 -1 5",
                        "explanation": "The series is generated as follows:\nT<sub>1</sub> = 0\nT<sub>2</sub> = 1\nT<sub>3</sub> = (0)<sup>2</sup> - 1 = -1\nT<sub>4</sub> = (1)<sup>2</sup> - (-1) = 2\nT<sub>5</sub> = (-1)<sup>2</sup> - (2) = -1\nT<sub>6</sub> = (2)<sup>2</sup> - (-1) = 5"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Write recursive solution or run a loop and using the last two value calculate the current value and store it in the array.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution\r\n{\r\npublic:\r\n    void gfSeries(int N)\r\n    {\r\n        long long gf[N];\r\n        gf[0]=0;\r\n        gf[1]=1;\r\n        for(int i=2;i<N;i++){\r\n            gf[i]=gf[i-2]*gf[i-2]-gf[i-1];\r\n        }\r\n        for(int i=0;i<N;i++){\r\n            cout<<gf[i]<<\" \";\r\n        }\r\n        cout<<endl;\r\n    }\r\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "//User function Template for Java\nclass Solution {\n    public void gfSeries(int N) {\n        // array to store the generated series\n        long[] dp = new long[N+1];\n        dp[0] = 0;\n        dp[1] = 1;\n\n        // generating the series using the recursion formula\n        for (int i = 2; i < N; i++) {\n            dp[i] = (long) (Math.pow(dp[i-2], 2) - dp[i-1]);\n        }\n\n        // printing the generated series\n        for (int i = 0; i < N; i++) {\n            System.out.print(dp[i] + \" \");\n        }\n        \n        // printing a new line after printing the series\n        System.out.println();\n    }\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n    def gfSeries(self, N : int) -> None:\n        # code here\n        \n        # initialize a list to store the values of the series\n        dp = []\n        \n        # initialize the first two elements of the series\n        dp.append(0)\n        dp.append(1)\n        \n        # iterate from the third element up to N\n        for i in range(2, N):\n            # calculate the next element based on the previous two elements\n            dp.append((dp[i-2]**2) - dp[i-1])\n        \n        # print the elements of the series\n        print(*dp)",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "class Solution {\n    gfSeries(N) {\n        let gf = new Array(N); // Create an array to store the numbers in the Generalized Fibonacci series.\n        gf[0] = 0; // Set the first element of the series as 0.\n        gf[1] = 1; // Set the second element of the series as 1.\n        for (let i = 2; i < N; i++) {\n            gf[i] = gf[i - 2] * gf[i - 2] - gf[i - 1]; // Calculate the ith element of the series using the previous two elements.\n        }\n        let s = \"\"; // Initialize an empty string to store the series as a string.\n        for (let i = 0; i < N; i++) {\n            s += gf[i]; // Add each element of the series to the string.\n            s += \" \"; // Add a space after each element.\n        }\n        console.log(s); // Print the series to the console.\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}