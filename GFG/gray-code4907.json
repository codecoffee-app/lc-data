{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703751,
            "title": "Gray Code ",
            "titleSlug": "gray-code4907",
            "content": "<p><span style=\"font-size:18px\">You are given a decimal number <strong>n. </strong>You need to find the gray code of the number n and convert&nbsp;it into decimal.</span></p>\n\n<p><span style=\"font-size:18px\">Gray code is a binary numeral system where two successive values differ in only one bit.<br />\nFor example, the sequence of Gray codes for 3-bit numbers is: 000, 001, 011, 010, 110, 111, 101, 100, so&nbsp;G(4)=6.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:\nn  =</strong> 7</span>\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\n<span style=\"font-size:18px\">4</span>\n<span style=\"font-size:18px\"><strong>Explanation:</strong></span>\n<span style=\"font-size:18px\">7 is represented as 111 in binary form.\nThe gray code of 111 is 100, in the binary\nform whose decimal equivalent is 4.</span></pre>\n\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:\nn  =</strong> 10</span>\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\n<span style=\"font-size:18px\">15</span>\n<span style=\"font-size:18px\"><strong>Explanation:</strong></span>\n<span style=\"font-size:18px\">10 is represented as 1010 in binary form.\nThe gray code of 1010 is 1111, in the&nbsp;binary\nform whose decimal equivalent is 15<strong>.</strong></span></pre>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>getGray()</strong> which takes an Integer n as input and returns the answer.</span></p>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(1)<br />\n<strong>Expected Auxiliary Space:</strong> O(1)</span></p>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong></span><br />\n<span style=\"font-size:18px\">0 &lt;= n &lt;= 10<sup>8</sup></span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a non-negative decimal integer `n`, compute its Gray code equivalent and return the resulting decimal value. The Gray code is a binary numeral system where two successive values differ in only one bit.",
                "constraints": [
                    "0 <= n <= 10^8"
                ],
                "testcases": [
                    {
                        "input": "7",
                        "output": "4",
                        "explanation": "The binary representation of 7 is 111. The Gray code of 111 is 100, which is 4 in decimal."
                    },
                    {
                        "input": "10",
                        "output": "15",
                        "explanation": "The binary representation of 10 is 1010. The Gray code of 1010 is 1111, which is 15 in decimal."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Gray code of 7 (111) is given by:</span></p>\n\n<p><span style=\"font-size:18px\">Copy the MSB= 1<br />\nXOR the 2nd bit from right with 1st bit from right=0<br />\nXOR the 1st bit from right with the 0th bit from right=0</span></p>\n\n<p><span style=\"font-size:18px\">So the Gray code for 7(111) is (4)100.</span></p>",
            "<p><span style=\"font-size:18px\">Let G(n) be Gray code equivalent of binary represention n. Consider bits of a number n and a number bit G(n). Note that leftmost set bits of both n and G(n) are at same position. Let this position be i and positions on right of it be (i+1), (i+2), etc. The (i + 1)<sup>th</sup> bit in G(n) is 0 if i-th bit in n is 1 and vice versa is also true. The same is true for (i+2)-th bits, etc.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Bit Magic",
                "slug": "bit-magic"
            },
            {
                "name": "Binary Representation",
                "slug": "binary-representation"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    int getGray(int n) {\n        \n        int q=n>>1;      // Left shift n and store the output in q.\n        int ans=n^q;    // xor of n and q.\n        \n        return ans;\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n    static int getGray(int n) {\n        int q=n>>1;      // Left shift n and store the output in q.\n        int ans=n^q;    // xor of n and q.\n        return ans;\n    }\n};",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "#Back-end complete function Template for Python 3\n\nclass Solution:\n    def getGray(self, n):\n        \n        q=n>>1;         # Left shift n and store the output in q.\n        ans=n^q         # xor of n and q.\n        \n        return ans;",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n/**\n * @param {number} n\n * @returns {number}\n*/\n\nclass Solution {\n    //Function to get the gray code of given number n.\n    getGray(n)\n    {\n        //your code here\n        let q = n >> 1;\n        let ans = n ^ q;\n        return ans;\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}