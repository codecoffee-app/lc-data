{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 701167,
            "title": "Gray to Binary equivalent",
            "titleSlug": "gray-to-binary-equivalent-1587115620",
            "content": "<p><span style=\"font-size: 18px;\">Given an integer number <strong>n, </strong>which is a decimal representation of <span style=\"text-decoration: underline; color: #236fa1;\"><a style=\"color: #236fa1; text-decoration: underline;\" href=\"https://www.geeksforgeeks.org/what-is-gray-code/\" target=\"_blank\" rel=\"noopener\"><strong>Gray Code.</strong></a></span> Find the <strong>binary equivalent</strong> of the Gray Code &amp; return the <strong>decimal representation</strong> of the <strong>binary equivalent</strong>.</span></p>\n<p><span style=\"font-size: 18px;\"><img src=\"https://media.geeksforgeeks.org/img-practice/ScreenShot2021-08-27at10-1630039200.png\" alt=\"\" />&nbsp;</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: <br /></strong>n = 4\n<strong>Output</strong>: <br />7\n<strong>Explanation</strong>:\nGiven 4, its gray code =  110.\nBinary equivalent of the gray code 110 is 100.\nReturn 7 representing gray code 100.\n</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input</strong>: <br />n = 15\n<strong>Output</strong>: <br />10\n<strong>Explanation</strong>:\nGiven 15 representing gray code 1000.\nBinary equivalent of gray code 1000 is 1111.\nReturn 10 representing gray code 1111 \nie binary 1010.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Your Task:&nbsp;</strong><br />You don't need to read input or print anything.&nbsp;Your task is to complete the function&nbsp;<strong>grayToBinary</strong>() which accepts an integer&nbsp;<strong>n</strong>&nbsp;as an input parameter and&nbsp;<strong>returns decimal representation</strong> of the <strong>binary equivalent</strong> of the given gray code. </span></p>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong> O(log (n)).<br /><strong>Expected Auxiliary Space:</strong> O(1).</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />0 &lt;= n &lt;= 10<sup>9</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an integer `n` representing a Gray Code in decimal form, find the decimal representation of its binary equivalent.",
                "constraints": [
                    "0 <= n <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "4",
                        "output": "7",
                        "explanation": "Given the Gray Code 4 (binary representation 110), its binary equivalent is 7 (binary representation 111)."
                    },
                    {
                        "input": "15",
                        "output": "10",
                        "explanation": "Given the Gray Code 15 (binary representation 1000), its binary equivalent is 10 (binary representation 1010)."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"color: #0d0d0d; font-family: S&ouml;hne, ui-sans-serif, system-ui, -apple-system, 'Segoe UI', Roboto, Ubuntu, Cantarell, 'Noto Sans', sans-serif, 'Helvetica Neue', Arial, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; font-size: 16px; white-space-collapse: preserve; background-color: #ffffff;\">Consider applying bitwise operations, particularly XOR (^) and right shift (&gt;&gt;)</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Bit Magic",
                "slug": "bit-magic"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\r\n\r\nclass Solution{\r\n    public:\r\n    // function to convert a given Gray equivalent n to Binary equivalent.\r\n    int grayToBinary(int n)\r\n    {\r\n        int b=0;\r\n        //We use a loop and Right shift n everytime until it becomes 0.\r\n        for(n=n;n>0;n=n>>1)\r\n            //We use XOR operation which stores the result of conversion in b.\r\n            b^=n;\r\n            \r\n        //returning the Binary equivalent.\r\n        return b;\r\n    }\r\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\r\n\r\nclass Solution{\r\n    // function to convert a given Gray equivalent n to Binary equivalent.\r\n    public static int grayToBinary(int n) {\r\n        int b=0;\r\n        \r\n        //We use a loop and Right shift n everytime until it becomes 0.\r\n        for(n=n;n>0;n=n>>1)\r\n         //We use XOR operation which stores the result of conversion in b.\r\n            b^=n;\r\n            \r\n        //returning the Binary equivalent.\r\n        return b;\r\n    }\r\n       \r\n}\r\n\r\n\r\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\n\nclass Solution:\n    #function to convert a given Gray equivalent n to Binary equivalent.\n    def grayToBinary(self, n):\n        b = 0\n\n        #We use a loop and Right shift n everytime until it becomes 0.\n        for i in iter(int, 1):\n            if (n > 0):\n                b = (b ^ n)\n                n = n >> 1\n            else:\n                break\n\n        #returning the Binary equivalent.\n        return b\n",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "//Back-end complete function Template for javascript\r\n\r\n/**\r\n * @param {Number} n\r\n * @returns {Number}\r\n*/\r\n\r\nclass Solution {\r\n    // function to convert a given Gray equivalent n to Binary equivalent.\r\n    grayToBinary(n)\r\n    {\r\n        let b=0;\r\n    \r\n        //We use a loop and Right shift n everytime until it becomes 0.\r\n        for(n=n;n>0;n=n>>1)\r\n         //We use XOR operation which stores the result of conversion in b.\r\n            b^=n;\r\n            \r\n        //returning the Binary equivalent.\r\n        return b;\r\n    }\r\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}