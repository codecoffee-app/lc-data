{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704416,
            "title": "Happy Number",
            "titleSlug": "happy-number1408",
            "content": "<p><span style=\"font-size:18px\">Given a number <strong>N</strong>&nbsp;find whether its a happy number or not.<strong>&nbsp;</strong><br />\nA number is called happy if it leads to 1 after a sequence of steps wherein each step, the number is replaced by the sum of squares of its digit that is if we start with Happy Number and keep replacing it with digits square sum, we reach 1.<br />\n<br />\n<strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input: </strong>\nN = 19\n<strong>Output: </strong>\n1\n<strong>Explanation:</strong>\n19 is a Happy Number,\n1^2 + 9^2 = 82\n8^2 + 2^2 = 68\n6^2 + 8^2 = 100\n1^2 + 0^2 + 0^2 = 1\nAs we reached to 1, \n19 is a Happy Number.</span>\n</pre>\n\n<p><strong><span style=\"font-size:18px\">Example 2:</span></strong></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\nN = 20\n<strong>Output: </strong>\n0\n<strong>Explanation: </strong>\nWe can never reach to 1\nby repeating the mentioned\nsteps.</span></pre>\n\n<p><br />\n<strong><span style=\"font-size:18px\">Your Task:</span></strong><br />\n<span style=\"font-size:18px\">You don&#39;t need to read input or print anything. Your task is to complete the function <strong>isHappy()</strong>&nbsp;which takes&nbsp;an integer <strong>N</strong>&nbsp;as input parameter&nbsp;and returns 1 if N is a happy number or 0 otherwise.</span><br />\n&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(sqrt(N))<br />\n<strong>Expected Space Complexity:</strong> O(1)</span><br />\n&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\n1 &lt;= N &lt;= 10<sup>4</sup></span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a number N, determine if it is a happy number. A happy number is defined as a number that, when repeatedly replaced by the sum of the squares of its digits, eventually reaches 1. If the process loops endlessly without reaching 1, the number is not happy.",
                "constraints": [
                    "1 <= N <= 10^4"
                ],
                "testcases": [
                    {
                        "input": "19",
                        "output": "1",
                        "explanation": "19 is a Happy Number because: 1^2 + 9^2 = 82, 8^2 + 2^2 = 68, 6^2 + 8^2 = 100, 1^2 + 0^2 + 0^2 = 1. The process results in 1."
                    },
                    {
                        "input": "20",
                        "output": "0",
                        "explanation": "20 is not a Happy Number because repeatedly calculating the sum of the squares of its digits does not lead to 1."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">If the same number occurs again we flag result as not happy.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution{\npublic:\n    int isHappy(int N){\n        if (N == 1 || N == 7) \n            return 1; \n        int sum = N, x = N; \n  \n        // this loop executes till the sum of square of \n        // digits obtained is not a single digit number \n        while(sum > 9) { \n            sum = 0; \n  \n            // this loop finds the sum of square of digits \n            while (x > 0) { \n                int d = x%10; \n                sum += d*d; \n                x/=10; \n            } \n            if (sum == 1) \n                return 1; \n            x = sum; \n        } \n        if(sum == 7) \n            return 1; \n        return 0;\n    }\n};\n    ",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\nclass Solution { \n  \n     static int isHappy(int N) { \n        if (N == 1 || N == 7) \n            return 1; \n        int sum = N, x = N; \n  \n        // this loop executes till the sum of square of \n        // digits obtained is not a single digit number \n        while(sum > 9) { \n            sum = 0; \n  \n            // this loop finds the sum of square of digits \n            while (x > 0) { \n                int d = x%10; \n                sum += d*d; \n                x/=10; \n            } \n            if (sum == 1) \n                return 1; \n            x = sum; \n        } \n        if(sum == 7) \n            return 1; \n        return 0; \n    } \n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\nclass Solution:\n    def isHappy (self, N):\n        if (N == 1 or N == 7): \n            return 1 \n        sum = N\n        x = N \n        # this loop executes till the sum of square of \n        # digits obtained is not a single digit number \n        while(sum > 9): \n            sum = 0 \n            # this loop finds the sum of square of digits \n            while (x > 0): \n                d = x%10 \n                sum += d*d;\n                x//=10 \n            if (sum == 1) :\n                return 1\n            x = sum\n        if(sum == 7): \n            return 1 \n        return 0",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n/**\n * @param {number} N\n * @returns {boolean}\n*/\n\nclass Solution {\n    // Function to check whether the number is happy number or not.\n    isHappy(N)\n    {\n        if (N == 1 || N == 7) {\n            return 1;\n        }\n        let sum = N;\n        let x = N;\n        while (sum > 9) {\n            sum = 0;\n            while (x > 0) {\n                let d = x % 10;\n                sum += d * d;\n                x = Math.floor(x / 10);\n            }\n            if (sum === 1) {\n                return 1;\n            }\n            x = sum;\n        }\n        if (sum === 7) {\n            return 1;\n        }\n        return 0;\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}