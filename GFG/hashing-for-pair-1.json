{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 701025,
            "title": "Hashing for pair - 1",
            "titleSlug": "hashing-for-pair-1",
            "content": "<p><span style=\"font-size: 18px;\">You are given an array of <strong>distinct</strong> integers&nbsp;and&nbsp;a <strong>sum</strong>. Check if there's a pair with the given sum in the array.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples :</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], sum = 14\n<strong>Output: </strong>1<strong>\nExplanation: </strong>arr[] = [</span><span style=\"font-size: 18px;\">1, 2, 3, 4, 5, 6, 7, 8, 9, 10] and sum = 14.&nbsp; There is a pair [4, 10] with sum 14.</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr[] = [2, 5], sum = 10\n<strong>Output: </strong>0<strong>\nExplanation: </strong>arr[]&nbsp; = [2, 5] and sum = 10. There is no pair with sum 10.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &lt;= arr.size() &lt;= 1000<br />1 &lt;= arr<sub>i</sub> &lt;= 10<sup>6</sup><br />1 &lt;= sum &lt;= 1000</span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p>&nbsp;</p>\n\n<p>&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Hash",
                "slug": "hash"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C",
                "full_func": "// Back-end complete function Template for C\n\n// Function to check if there is a pair with the given sum in the array.\nint sumExists(int arr[], int N, int sum) {\n    bool s[100001];\n    for (int i = 0; i < 100001; i++) s[i] = false;\n\n    // we mark all the elements of array in s as true.\n    for (int i = 0; i < N; i++) s[arr[i]] = true;\n\n    // iterating over the array.\n    for (int i = 0; i < N; i++) {\n        // taking care of cases like 4-2=2 as two 2's cannot exist in distinct\n        // array so we continue iteration over next element.\n        if (sum - arr[i] == arr[i] || sum - arr[i] < 0)\n            continue;\n        else {\n            // if (sum-arr[i]) exists in array, we return 1.\n            if (s[sum - arr[i]]) {\n                return 1;\n            }\n        }\n    }\n    // if no such pair is present, we return 0.\n    return 0;\n}\n",
                "lang_text": "c"
            },
            {
                "lang": "C++",
                "full_func": "// Back-end complete function Template for C++\n\n// Function to check if there is a pair with the given sum in the array.\nint sumExists(int arr[], int N, int sum) {\n    // using set to store the elements.\n    unordered_set<int> s;\n\n    // inserting all elements in the set.\n    for (int i = 0; i < N; i++) s.insert(arr[i]);\n\n    // iterating over the array.\n    for (int i = 0; i < N; i++) {\n        // taking care of cases like 4-2=2 as two 2's cannot exist in distinct\n        // array so we continue iteration over next element.\n        if (sum - arr[i] == arr[i])\n            continue;\n        else {\n            // if (sum-arr[i]) exists in set, we return 1.\n            if (s.count(sum - arr[i]) != 0) {\n                return 1;\n            }\n        }\n    }\n    // if no such pair is present, we return 0.\n    return 0;\n}",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "// Back-end complete function Template for Java\n\nclass Geeks {\n    // Function to check if there is a pair with the given sum in the array.\n    public static int sumExists(int arr[], int N, int sum) {\n        // using HashSet to store the elements.\n        HashSet<Integer> st = new HashSet<Integer>();\n\n        // inserting all elements in the HashSet.\n        for (int i = 0; i < N; i++) st.add(arr[i]);\n\n        // iterating over the array.\n        for (int i = 0; i < N; i++) {\n            // taking care of cases like 4-2=2 as two 2's cannot exist in\n            // distinct\n            // array so we continue iteration over next element.\n            if (sum - arr[i] == arr[i])\n                continue;\n            else {\n                // if (sum-arr[i]) exists in HashSet, we return 1.\n                if (st.contains(sum - arr[i])) {\n                    return 1;\n                }\n            }\n        }\n        // if no such pair is present, we return 0.\n        return 0;\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\n#Function to check if there is a pair with the given sum in the array.\ndef sumExists(arr,N,sum):\n    \n    #using set to store the elements.\n    mySet=set()\n    \n    #inserting all elements in the set.\n    for i in arr:\n        mySet.add(i) \n    \n    #iterating over the array.\n    for i in arr:\n        #taking care of cases like 4-2=2 as two 2's cannot exist in distinct\n        #array so we continue iteration over next element.\n        if(sum-i==i):\n            continue\n        else:\n            #if (sum-arr[i]) exists in set, we return 1.\n            if sum-i in mySet: \n                return 1\n                \n                \n    #if no such pair is present, we return 0.\n    return 0 \n",
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    //Function to check if there is a pair with the given sum in the array.\n    public int sumExists(int[] arr, int N, int sum)\n    {\n        // using HashSet to store the elements.\n        HashSet<int> set = new HashSet<int>();\n\n        // inserting all elements in the set.\n        for (int i = 0; i < N; i++) \n            set.Add(arr[i]);\n\n        // iterating over the array.\n        for (int i = 0; i < N; i++) {\n            // taking care of cases like 4-2=2 as two 2's cannot exist in distinct\n            // array so we continue iteration over next element.\n            if (sum - arr[i] == arr[i])\n                continue;\n            else {\n                // if (sum-arr[i]) exists in set, we return 1.\n                if (set.Contains(sum - arr[i])) {\n                    return 1;\n                }\n            }\n        }\n        // if no such pair is present, we return 0.\n        return 0;\n    }\n}",
                "lang_text": "csharp"
            },
            {
                "lang": "Javascript",
                "full_func": "// Back-end complete function Template for javascript\n\n/**\n * @param {number[]} arr\n * @param {number} N\n * @param {number} sum\n * @returns {number}\n*/\nclass Solution {\n    // Function to check if there is a pair with the given sum in the array.\n    sumExists(arr, N, sum) {\n        // using map to store the elements.\n        let s = new Map();\n\n        // inserting all elements in the map.\n        for (let i = 0; i < N; i++) s.set(arr[i], 1);\n\n        // iterating over the array.\n        for (let i = 0; i < N; i++) {\n            // taking care of cases like 4-2=2 as two 2's cannot exist in\n            // distinct array so we continue iteration over next element.\n            if (sum - arr[i] == arr[i])\n                continue;\n            else {\n                // if (sum-arr[i]) exists in map, we return 1.\n                if (s.has(sum - arr[i])) {\n                    return 1;\n                }\n            }\n        }\n        // if no such pair is present, we return 0.\n        return 0;\n    }\n}\n",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}