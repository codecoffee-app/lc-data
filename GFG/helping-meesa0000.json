{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705464,
            "title": "Find the Number",
            "titleSlug": "helping-meesa0000",
            "content": "<p><span style=\"font-size:18px\">A Lucky number is a number&nbsp;which has only the&nbsp;digits&nbsp;4&nbsp;and&nbsp;7. There&#39;s a special function <strong>F(n)</strong> for a positive integer&nbsp;<strong>n</strong> that returns&nbsp;all good digits of number&nbsp;<strong>n</strong>&nbsp;from the left to the right. For example, the output for number&nbsp;147 is number&nbsp;47. There are two numbers :</span></p>\r\n\r\n<ul>\r\n\t<li><span style=\"font-size:18px\">An integer&nbsp;<strong><em>a</em></strong>&nbsp;</span></li>\r\n\t<li><span style=\"font-size:18px\">A Lucky number&nbsp;<strong><em>b</em></strong>.</span></li>\r\n</ul>\r\n\r\n<p><span style=\"font-size:18px\">Find the minimum number&nbsp;<strong><em>c</em>&nbsp;</strong>(<em>c</em>&thinsp;&gt;&thinsp;<em>a</em>)&nbsp;such that <strong>F(c) = b</strong>.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\r\n<span style=\"font-size:18px\"><strong>a = </strong>1, <strong>b = </strong>7</span>\r\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\r\n<span style=\"font-size:18px\">7</span>\r\n<span style=\"font-size:18px\"><strong>Explanation:</strong></span>\r\n<span style=\"font-size:18px\">The minimum number x greater than 1 such that</span><span style=\"font-size:18px\"><strong>\r\n</strong>F(x) = 7, is 7 and so it is the answer.</span> </pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\r\n<span style=\"font-size:18px\"><strong>a = </strong>5, <strong>b = </strong>4</span>\r\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\r\n<span style=\"font-size:18px\">14</span>\r\n<span style=\"font-size:18px\"><strong>Explanation:</strong></span>\r\n<span style=\"font-size:18px\">The minimum number x greater than 5 such that</span><span style=\"font-size:18px\"><strong>\r\n</strong>F(x) = 4, is 14 and so it is the answer.</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>findTheNum()</strong> which takes 2 Integera a, and b as input and returns the minimum number x greater than a such that F(x) = b.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(b)<br />\r\n<strong>Expected Auxiliary Space:</strong> O(1)</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong></span><br />\r\n<span style=\"font-size:18px\">1 &lt;= a,b &lt;= 10<sup>5</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "A Lucky number is a number that contains only the digits 4 and 7.  Define F(n) as a function that extracts the 'lucky' digits (4 and 7) from a number 'n', preserving their order from left to right. Given an integer 'a' and a lucky number 'b', find the smallest integer 'c' such that c > a and F(c) = b.",
                "constraints": [
                    "1 <= a <= 10^5",
                    "1 <= b <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "a = 1, b = 7",
                        "output": "7",
                        "explanation": "The smallest number greater than 1 whose lucky digits are equal to 7 is 7."
                    },
                    {
                        "input": "a = 5, b = 4",
                        "output": "14",
                        "explanation": "The smallest number greater than 5 whose lucky digits are equal to 4 is 14."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">The number has to be larger than a.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "\r\n\r\nclass Solution {\r\n  public:\r\n    \r\n    // Function to extract digits 4 and 7 from a number.\r\n    int mask(int t)\r\n    {\r\n        int d = 1;\r\n        int res = 0;\r\n        \r\n        // Traverse through each digit of the number\r\n        while(t)\r\n        {\r\n            int tmp = t%10;  // Extract the last digit\r\n            \r\n            // Check if the digit is 4 or 7\r\n            if (tmp==4 || tmp==7)\r\n            {\r\n                res += tmp*d;  // Add the digit to the result\r\n                d *= 10;      // Increase the place value\r\n            }\r\n            \r\n            t /= 10;  // Remove the last digit\r\n        }\r\n        return res;  // Return the number with only 4s and 7s\r\n    }\r\n\r\n    // Function to find the next number after a that contains only 4s and 7s.\r\n    int findTheNum(int a, int b) {\r\n        \r\n        int ans = a+1;  // Start from the next number after a\r\n        \r\n\t\t// Loop until we find a number that matches the condition\r\n\t\twhile(b != mask(ans))\r\n\t\t\tans++;\r\n\t\t\r\n\t\treturn ans;  // Return the number\r\n    }\r\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "class Solution\n{\n    // Function to extract digits 4 and 7 from a number.\n    public int mask(int t)\n    {\n        int d = 1;\n        int res = 0;\n        \n        // Traverse through each digit of the number\n        while(t != 0)\n        {\n            int tmp = t % 10;  // Extract the last digit\n            \n            // Check if the digit is 4 or 7\n            if (tmp == 4 || tmp == 7)\n            {\n                res += tmp * d;  // Add the digit to the result\n                d *= 10;      // Increase the place value\n            }\n            \n            t /= 10;  // Remove the last digit\n        }\n        return res;  // Return the number with only 4s and 7s\n    }\n\n    // Function to find the next number after a that contains only 4s and 7s.\n    public int findTheNum(int a, int b)\n    {\n        int ans = a + 1;  // Start from the next number after a\n        \n        // Loop until we find a number that matches the condition\n        while(b != mask(ans))\n            ans++;\n        \n        return ans;  // Return the number\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}