{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705105,
            "title": "Water Balloons",
            "titleSlug": "holi-balloons0351",
            "content": "<p><span style=\"font-size:18px\">Geek is celebrating&nbsp;holi by aiming coloured&nbsp;water balloons&nbsp;at his friends. He wants to avoid throwing balloons of the same colours more than twice in a row. Given a string st, where each alphabet denotes a different colour, modify the sequenuence to represent the correct order of throwing balloons by eliminating some of them.</span></p>\r\n\r\n<p><br />\r\n<strong><span style=\"font-size:18px\">Example 1:</span></strong></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong> \r\nst = ABBBCCDEAB\r\n<strong>Output:</strong> ABBCCDEAB\r\n<strong>Explaination:</strong> Remove the third &#39;B&#39;.</span></pre>\r\n\r\n<p><br />\r\n<strong><span style=\"font-size:18px\">Example 2:</span></strong></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong> \r\nst = AAAAAA\r\n<strong>Output:</strong> AA\r\n<strong>Explaination:</strong> We can keep only two A&#39;s.</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou do not need to read input or print anything. Your task is to complete the function <strong>sequence()</strong> which takes string st as input parameter and returns a string containing the modified&nbsp;sequence.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(N), where n is the length of the string st.</span><br />\r\n<span style=\"font-size:18px\"><strong>Expected Auxiliary Space:</strong> O(N)</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n1 &le; |st| &le; 10000</span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Geek is celebrating Holi by throwing colored water balloons at his friends. To avoid throwing the same color more than twice in a row, modify the given sequence to represent the correct throwing order by eliminating excess balloons. Given a string `st`, where each character represents a different color, return the modified sequence.",
                "constraints": [
                    "1 <= |st| <= 10000"
                ],
                "testcases": [
                    {
                        "input": "ABBBCCDEAB",
                        "output": "ABBCCDEAB",
                        "explanation": "The third 'B' is removed to avoid having more than two consecutive 'B's."
                    },
                    {
                        "input": "AAAAAA",
                        "output": "AA",
                        "explanation": "Only two 'A's are kept to ensure no more than two consecutive balloons of the same color."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">If there are more than two consecutive appearance of same character keep that only twice.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Misc",
                "slug": "misc"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nclass Solution{\npublic:\n    //Function to return a sequence by removing consecutive duplicates.\n    string sequence(string st){\n        string ans = \"\";\n\n        //iterating over the input string.\n        for(int i = 0;i < st.size();i++){\n            ans += st[i];\n\n            //checking if the next character is the same as the current character.\n            if(i+1 < st.size() && st[i+1] == st[i]){\n                ans += st[i+1];\n                i++;\n\n                //skipping all the consecutive duplicates.\n                while(i+1 < st.size() && st[i+1] == st[i])\n                    i++;\n            }\n        }\n        return ans;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    public string sequence(string st)\n    {\n        string ans = \"\";\n\n        //iterating over the input string.\n        for(int i = 0;i < st.Length;i++){\n            ans += st[i];\n\n            //checking if the next character is the same as the current character.\n            if(i+1 < st.Length && st[i+1] == st[i]){\n                ans += st[i+1];\n                i++;\n\n                //skipping all the consecutive duplicates.\n                while(i+1 < st.Length && st[i+1] == st[i])\n                    i++;\n            }\n        }\n        return ans;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}