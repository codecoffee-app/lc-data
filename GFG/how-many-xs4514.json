{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705222,
            "title": "How Many X's?",
            "titleSlug": "how-many-xs4514",
            "content": "<p><span style=\"font-size: 18px;\">Given two integers <strong>L</strong>, <strong>R</strong>, and digit <strong>X</strong>. Find the number of occurrences of X in all the numbers in the range (L, R) <strong>excluding</strong> L and R.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong>\nL=10, R=19, X=1\n<strong>Output:</strong>\n9\n<strong>Explanation:</strong>\nThere are 9 1s (11, 12, 13, 14, 15, 16, 17, 18) in the numbers in the range (10,19).</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong>\nL=18, R=81, X=9\n<strong>Output:</strong>\n7\n<strong>Explanation:</strong>\nThere are 7 occurrences of the digit 9 in the numbers in the range (18,81).</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Your Task:</strong><br />You don't need to read input or print anything. Your task is to complete the function <strong>countX()</strong> which takes three integers L, R, and X as input parameters and returns the number of occurrences of X in the numbers in the range(L, R).</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong>O(RLogR)<br /><strong>Expected Auxillary Space:</strong>O(1)</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &lt;= L&lt; R &lt;= 10<sup>5</sup><br />0 &lt;= X &lt;= 9&nbsp;</span></p>",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two integers, `L` and `R`, and a digit `X`, determine the number of times the digit `X` appears in all integers within the range (L, R), excluding L and R themselves.",
                "constraints": [
                    "1 <= L < R <= 10^5",
                    "0 <= X <= 9"
                ],
                "testcases": [
                    {
                        "input": "L=10, R=19, X=1",
                        "output": "9",
                        "explanation": "The numbers in the range (10, 19) are 11, 12, 13, 14, 15, 16, 17, and 18. The digit 1 appears a total of 9 times within these numbers."
                    },
                    {
                        "input": "L=18, R=81, X=9",
                        "output": "7",
                        "explanation": "The digit 9 appears 7 times within the numbers in the range (18, 81)."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Use bruteforce approach.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Numbers",
                "slug": "numbers"
            },
            {
                "name": "Modular Arithmetic",
                "slug": "modular-arithmetic"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "amazon"
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "// Back-end complete function Template for C++\n\nclass Solution {\n  public:\n    // Function to count the occurrences of X in a number N.\n    int count(int N, int X) {\n        int ans = 0;\n        while (N) {\n            // Checking if the last digit of N is X and incrementing ans if true.\n            if (N % 10 == X) ans++;\n            // Removing the last digit of N.\n            N /= 10;\n        }\n        // Returning the count of occurrences of X in N.\n        return ans;\n    }\n    // Function to count the occurrences of X in the range from L+1 to R-1.\n    int countX(int L, int R, int X) {\n        int ans = 0;\n        // Iterating over the numbers in the range.\n        for (int i = L + 1; i < R; i++) {\n            // Computing the count of occurrences of X in each number and adding to ans.\n            ans += count(i, X);\n        }\n        // Returning the total count of occurrences of X in the range.\n        return ans;\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "// Back-end complete function Template for Java\n\nclass Solution {\n    \n    // Function to count the number of occurrences of X in a number N\n    int count(int N, int X) {\n        int ans = 0;\n        \n        // Loop until all digits in N are processed\n        while (N > 0) {\n            \n            // If the last digit of N is X, increment the answer variable\n            if (N % 10 == X) {\n                ans++;\n            }\n            \n            // Remove the last digit from N\n            N /= 10;\n        }\n        \n        // Return the count of occurrences of X in N\n        return ans;\n    }\n    \n    // Function to count the total number of occurrences of X in the range L to R (exclusive)\n    int countX(int L, int R, int X) {\n        int ans = 0;\n        \n        // Iterate over all numbers in the range (L, R)\n        for (int i = L + 1; i < R; i++) {\n            \n            // Count the number of occurrences of X in each number and add it to the answer variable\n            ans += count(i, X);\n        }\n        \n        // Return the total count of occurrences of X in the range (L, R)\n        return ans;\n    }\n};",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\nclass Solution:\n    \n    # Function to count the occurrences of digit X in a number N.\n    def count(self,N,X):\n        ans=0\n        \n        # Counting the occurrences by checking each digit of N one by one.\n        while N>0:\n            if N%10==X:\n                ans+=1\n            N//=10\n        return ans    \n    \n    # Function to count the occurrences of digit X in numbers between L and R.\n    def countX(self,L,R,X):\n        ans=0\n        \n        # Iterating through each number between L and R.\n        for i in range(L+1,R):\n            \n            # Counting the occurrences of digit X in each number.\n            ans+=self.count(i,X)\n        return ans",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n/**\n * @param {number} L\n * @param {number} R\n * @param {number} X\n * @returns {number}\n */\n\nclass Solution {\n    //Function to count numbers from 1 to N that have 4 as a digit.\n    countX(L,R,X) {\n        let ans = 0;\n        \n        // Function to count the occurrences of digit X in a number N.\n        const count = (N, X) => {\n            let ans = 0;\n            \n            // Counting the occurrences by checking each digit of N one by one.\n            while (N > 0) {\n                if (N % 10 === X) {\n                    ans += 1;\n                }\n                N = Math.floor(N / 10);\n            }\n            return ans;\n        }\n        \n        // Iterating through each number between L and R.\n        for (let i = L + 1; i < R; i++) {\n            \n            // Counting the occurrences of digit X in each number.\n            ans += count(i, X);\n        }\n        \n        return ans;\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}