{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704004,
            "title": "Identical Matrices",
            "titleSlug": "identical-matrices1042",
            "content": "<p><span style=\"font-size:18px\">Given two square matrices Grid1 and Grid2 with the same dimensions(NxN).Check whether they are identical or not.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\nN=2\nGrid1=[[1,2],[3,4]]\nGrid2=[[1,2],[3,4]]\n<strong>Output:</strong>\n1\n<strong>Explanation:</strong>\nBoth the matrices are identical,\nso the answer is 1.</span></pre>\n\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\nN=2\nGrid1=[[1,2][3,4]]\nGrid2=[[1,2][3,2]]\n<strong>Output:</strong>\n0\n<strong>Explanation:</strong>\nBoth the matrices are not identical,\nSo, answer is 0.</span></pre>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nYou don&#39;t need to read input or print anything.Your task is to complete the function <strong>areMatricesIdentical()</strong> which takes the integer N and two 2D arrays Grid1 and Grid2 as input parameters and returns 1 if the matrices are identical.Otherwise,it returns 0.</span></p>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong>O(N<sup>2</sup>)<br />\n<strong>Expected Auxillary Space:</strong>O(1)</span></p>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Constraints:</strong><br />\n1&lt;=N&lt;=1000<br />\n-1000&lt;=Grid1[i][j],Grid2[i][j]&lt;=1000,for 0&lt;=i,j</span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two square matrices, `Grid1` and `Grid2`, of size N x N, determine if they are identical. Two matrices are considered identical if all corresponding elements are equal.",
                "constraints": [
                    "1 <= N <= 1000",
                    "-1000 <= Grid1[i][j], Grid2[i][j] <= 1000, for 0 <= i, j < N"
                ],
                "testcases": [
                    {
                        "input": "N = 2\nGrid1 = [[1, 2], [3, 4]]\nGrid2 = [[1, 2], [3, 4]]",
                        "output": "1",
                        "explanation": "The two matrices are identical; all corresponding elements are equal."
                    },
                    {
                        "input": "N = 2\nGrid1 = [[1, 2], [3, 4]]\nGrid2 = [[1, 2], [3, 2]]",
                        "output": "0",
                        "explanation": "The two matrices are not identical. For example, Grid1[1][1] (4) is not equal to Grid2[1][1] (2)."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Traverse both grids simultaneously and check if all the elements are equal at the same indices.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "// Back-end complete function Template for C++\n\nclass Solution {\n  public:\n    // Function to check if two matrices are identical or not.\n    int areMatricesIdentical(int N, vector<vector<int>> Grid1,\n                             vector<vector<int>> Grid2) {\n        // iterating over each row and column of the matrices.\n        for (int i = 0; i < N; i++)\n            for (int j = 0; j < N; j++)\n                // checking whether correspoding elements are same or not\n                if (Grid1[i][j] != Grid2[i][j]) return 0;\n        return 1; // returning 1 if matrices are identical.\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "// Back-end complete function Template for Java\n\nclass Solution {\n    int areMatricesIdentical(int N, int[][] Grid1, int[][] Grid2) {\n        int i, j;\n        for (i = 0; i < N; i++)\n            for (j = 0; j < N; j++)\n                // checking whether correspoding elements are same or not\n                if (Grid1[i][j] != Grid2[i][j]) return 0; //if not same, return 0\n        return 1; //if all elements are same, return 1\n    }\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "#Back-end complete function Template for Python 3\n\nclass Solution:\n    #Function to check if two matrices are identical or not.\n    def areMatricesidentical(self,N,Grid1,Grid2):\n        for i in range(N):\n            for j in range(N):\n                #checking whether correspoding elements are same or not\n                if Grid1[i][j]!=Grid2[i][j]:\n                    return 0\n        return 1",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "class Solution{\n    areMatricesIdentical(n,grid1, grid2){\n        for(let i = 0; i < n; i++){\n            for(let j = 0; j < n; j++){\n                if (grid1[i][j] != grid2[i][j]) return 0;\n            }\n        }\n        return 1;\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}