{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703052,
            "title": "Immediate Smaller Element",
            "titleSlug": "immediate-smaller-element1142",
            "content": "<p><span style=\"font-size: 18px;\">Given an integer array <strong>arr</strong>. For each element in the array, check whether the right adjacent element (on the next immediate position) of the array is smaller. If the next element is smaller, update the current index to that element. If not, then update to <strong>-</strong>1.</span></p>\n<p><span style=\"font-size: 18px;\">Note: Update the array in itself.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr[] = [4, 2, 1, 5, 3]\n<strong>Output: </strong>[2, 1, -1, 3, -1]\n<strong>Explanation:</strong> Array elements are 4, 2, 1, 5, 3. Next to 4 is 2 which is smaller, so we print 2. Next of 2 is 1 which is smaller,so we print 1. Next of 1 is 5 which is greater, so we print -1. Next of 5 is 3 which is smaller, so we print 3.&nbsp; Note that for last element, output is always  going to be -1 because there is no element on right.</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr[] = [5, 6, 2, 3, 1, 7]\n<strong>Output: </strong>[-1, 2, -1, 1, -1, -1]\n<strong>Explanation: </strong>Next to 5 is 6 which is greater, so we print -1. Next of 6 is 2 which is smaller, so we print 2. Next of 2 is 3 which is greater, so we print -1. Next of 3 is 1 which is smaller, so we print 1. Next of 1 is 7 which is greater, so we print -1. Note that for last element, output is always going to be -1 because there is no element on right.<br /></span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr[] = [4, 1]\n<strong>Output: </strong>[1, -1]\n<strong>Explanation:</strong> 4 will be updated to 1 and 1 will be updated </span><span >to -1.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &le; arr.size() &le; 10<sup>5</sup><br />1 &le; arr[i] &le; 10<sup>5</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an integer array `arr`, modify the array in-place. For each element, check if the element to its immediate right is smaller. If it is, update the current element with the value of the right element. Otherwise, update the current element to -1. The last element should always be updated to -1 since it has no right neighbor.",
                "constraints": [
                    "1 <= arr.size() <= 10^5",
                    "1 <= arr[i] <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "[4, 2, 1, 5, 3]",
                        "output": "[2, 1, -1, 3, -1]",
                        "explanation": "4 is updated to 2 because 2 < 4. 2 is updated to 1 because 1 < 2. 1 is updated to -1 because 5 > 1. 5 is updated to 3 because 3 < 5. 3 is updated to -1 because it is the last element."
                    },
                    {
                        "input": "[5, 6, 2, 3, 1, 7]",
                        "output": "[-1, 2, -1, 1, -1, -1]",
                        "explanation": "5 is updated to -1 because 6 > 5. 6 is updated to 2 because 2 < 6. 2 is updated to -1 because 3 > 2. 3 is updated to 1 because 1 < 3. 1 is updated to -1 because 7 > 1. 7 is updated to -1 because it is the last element."
                    },
                    {
                        "input": "[4, 1]",
                        "output": "[1, -1]",
                        "explanation": "4 is updated to 1 because 1 < 4. 1 is updated to -1 because it is the last element."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">You can solve this problem by iterating from left to right, when arr[i] &gt; arr[i+1] then arr[i]=arr[i+1] else arr[i]=-1.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [
            "flipkart",
            "amazon"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function template for C++\n\nclass Solution {\n  public:\n    // Function to find the immediate smaller element for each element in the array\n    void immediateSmaller(vector<int>& arr) {\n        int n = arr.size();\n        for (int i = 0; i < n - 1; i++) {\n            // If the current element is greater than the next element, assign the next\n            // element as the immediate smaller\n            if (arr[i] > arr[i + 1]) {\n                arr[i] = arr[i + 1];\n            } else\n                // If the current element is not greater than the next element, assign\n                // -1 as the immediate smaller\n                arr[i] = -1;\n        }\n        // Assign -1 as the immediate smaller for the last element in the array\n        arr[n - 1] = -1;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution {\n    public void immediateSmaller(int[] arr) {\n        int n = arr.length;\n\n        for (int i = 0; i < n - 1; i++) {\n            // If the current element is greater than the next element, assign the next\n            // element as the immediate smaller\n            if (arr[i] > arr[i + 1]) {\n                arr[i] = arr[i + 1];\n            } else {\n                // If the current element is not greater than the next element, assign\n                // -1\n                arr[i] = -1;\n            }\n        }\n        // Assign -1 as the immediate smaller for the last element in the array\n        arr[n - 1] = -1;\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "class Solution:\n\n    def immediateSmaller(self, arr):\n        n = len(arr)\n\n        for i in range(n - 1):\n            # If the current element is greater than the next element, append the next\n            # element as the immediate smaller\n            if arr[i] > arr[i + 1]:\n                arr[i] = arr[i + 1]\n            else:\n                # If the current element is not greater than the next element, append -1\n                arr[i] = -1\n\n        # Append -1 as the immediate smaller for the last element in the array\n        arr[n - 1] = -1\n",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "class Solution {\n    immediateSmaller(arr) {\n        let n = arr.length;\n\n        for (let i = 0; i < n - 1; i++) {\n            // If the current element is greater than the next element, push the next\n            // element as the immediate smaller\n            if (arr[i] > arr[i + 1]) {\n                arr[i] = arr[i + 1];\n            } else {\n                // If the current element is not greater than the next element, push -1\n                arr[i] = -1;\n            }\n        }\n        // Push -1 as the immediate smaller for the last element in the array\n        arr[n - 1] = -1;\n    }\n}\n",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}