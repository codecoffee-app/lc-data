{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 878959,
            "title": "Implement Set in Python",
            "titleSlug": "implement-set-in-python--160443",
            "content": "<p><span style=\"font-size: 18px;\">A set is an <strong>unordered collection </strong>of items where every element is unique and must be <strong>immutable</strong>, but set is <strong>mutable</strong>. You cannot access an element of set using indexing or slicing, but you can update the set.</span></p>\n<p><span style=\"font-size: 18px;\">Some important functions in Set in Python:<br /><strong>add</strong>(): Adds an element to the set.<br /><strong>clear</strong>(): Removes all elements from the set<br /><strong>discard</strong>(): Removes an element from the set if present.<br /><strong>remove</strong>(): Removes an element from the set. If the element is not present, it raises error.<br /><strong>pop</strong>(): Removes and returns an arbitary set element. Raise error if the set is empty.<br /><strong>union</strong>(): Returns the union of sets in a new set<br /><strong>update</strong>(): Updates the set with the union of itself and others<br /><strong>len</strong>(): Return the length of set.<br /><strong>sorted</strong>(): Return a new sorted list from elements in the set.<br /><strong>sum</strong>(): Return the sum of all elements in the set.</span></p>\n<p><span style=\"font-size: 18px;\">Let's implement some methods through a question. The task is to perform given queries in the Set as given below:<br /><strong>a. i element</strong>: Add element i to the set.<br /><strong>b.</strong> <strong>r element</strong>: Remove element r from set.<br /><strong>c.</strong> <strong>s</strong>: Find sum of elements in set.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input</strong>: st = [6, 7, 81, 2, 1], i = 3, r = 6\n<strong>Output:</strong> <br />1 2 3 6 7 81<br />1 2 3 7 81 <br />94<br /></span><strong style=\"font-size: 18px; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Explanation:</strong><span style=\"font-size: 18px; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\"> After adding 3 set becomes [</span><span style=\"font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Open Sans, Helvetica Neue, sans-serif;\"><span style=\"font-size: 18px;\">1, 2, 3, 6, 7, 81], after removing 6 set becomes [1, 2, 3, 7, 81]  and sum of set is 94.</span></span></pre>\n<pre><strong style=\"font-size: 18px;\">Input: </strong><span style=\"font-size: 18px;\">st = [1, 9, 6], i = 78, r = 9</span><strong style=\"font-size: 18px;\">\nOutput: \n</strong><span style=\"font-size: 18px;\">1 6 9 78 \n1 6 78\n85</span><strong style=\"font-size: 18px;\">\nExplanation: </strong><span style=\"font-size: 18px;\">After adding 78 set becomes [1, 6, 9, 78], after removing 9 set becomes [1, 6, 78]  and sum of set is 85.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &lt;= S[i] &lt;= 10<sup>4</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "A set is an unordered collection of unique and immutable items, while the set itself is mutable. You cannot access elements using indexing or slicing, but you can update the set.\n\nHere are some common set operations in Python:\n\n*   `add(element)`: Adds an element to the set.\n*   `clear()`: Removes all elements from the set.\n*   `discard(element)`: Removes an element if it's present.\n*   `remove(element)`: Removes an element. Raises an error if the element is not present.\n*   `pop()`: Removes and returns an arbitrary element. Raises an error if the set is empty.\n*   `union(other_set)`: Returns a new set containing the union of the sets.\n*   `update(other_set)`: Updates the set with the union of itself and another set.\n*   `len(set)`: Returns the number of elements in the set.\n*   `sorted(set)`: Returns a new sorted list from the elements in the set.\n*   `sum(set)`: Returns the sum of all elements in the set.\n\nYour task is to implement a series of operations on a set based on the given queries:\n\n*   `a element`: Add the specified element to the set.\n*   `r element`: Remove the specified element from the set.\n*   `s`: Calculate and return the sum of the elements in the set.",
                "constraints": [
                    "1 <= S[i] <= 10000"
                ],
                "testcases": [
                    {
                        "input": "st = [6, 7, 81, 2, 1], i = 3, r = 6",
                        "output": "1 2 3 6 7 81\n1 2 3 7 81\n94",
                        "explanation": "Initially, the set is {6, 7, 81, 2, 1}. Adding 3 results in {1, 2, 3, 6, 7, 81}. Removing 6 results in {1, 2, 3, 7, 81}. The sum of the elements is 1 + 2 + 3 + 7 + 81 = 94."
                    },
                    {
                        "input": "st = [1, 9, 6], i = 78, r = 9",
                        "output": "1 6 9 78\n1 6 78\n85",
                        "explanation": "Initially, the set is {1, 9, 6}. Adding 78 results in {1, 6, 9, 78}. Removing 9 results in {1, 6, 78}. The sum of the elements is 1 + 6 + 78 = 85."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>All operations can be done by directly using inbuilt functions</p>\n\n<p>&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "python-set",
                "slug": "python-set"
            }
        ],
        "companies": [],
        "solutions": {
            "py": {
                "lang": "Python",
                "full_func": "#Back-end complete function Template for Python 3\nst = {int(x) for x in input().split()}\ni = int(input())\nr = int(input())\n\n# Insert i in set\nst.add(i)\n\n# Printing the set\nfor i in sorted(st):\n    print(i, end=' ')\nprint()\n\n# Remove r from set\nst.discard(r)\n\n# Printing the set\nfor i in sorted(st):\n    print(i, end=' ')\nprint()\n\ns = sum(st)\n\n# Print sum of set\nprint(s)\n",
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}