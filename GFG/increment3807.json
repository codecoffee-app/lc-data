{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704622,
            "title": "Increment",
            "titleSlug": "increment3807",
            "content": "<p><span style=\"font-size:18px\">Given a base <strong>B</strong> and a number <strong>N</strong> in that base, increment the number by one and print the resulting number in that base only.</span><br />\n&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\nB = 2\nN = 0010\n<strong>Output:</strong>\n11\n<strong>Explanation:</strong>\n(0010)<sub>2</sub>&nbsp;= (2)<sub>10\n</sub>2 + 1 = 3\n(3)<sub>10</sub>&nbsp;= (11)2</span></pre>\n\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\nB = 13\nN = 2139\n<strong>Output:</strong>\n231A\n<strong>Explanation:</strong>\n(2319)<sub>13</sub>&nbsp;= (81)<sub>10\n</sub>81 + 1 = 82\n(82)<sub>10</sub>&nbsp;= (231A)<sub>13</sub>\n</span></pre>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nYou don&#39;t need to read input or print anything. Your task is to complete the function&nbsp;<strong>inc()</strong>&nbsp;which takes an integer <strong>B, </strong>a<strong>&nbsp;</strong>string <strong>N&nbsp;</strong>as input parameter&nbsp;and returns the string by incrementing the number by one in the same base.</span><br />\n&nbsp;</p>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(log N)<br />\n<strong>Expected Space Complexity:</strong> O(1)</span><br />\n&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\n2 &lt;= <strong>B</strong> &lt;= 16<br />\n0000 &lt;= <strong>N</strong> &lt;= Max value in that base (e.g. 1111 for base 2, FFFF for base 16, etc.)</span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a base B and a number N in that base, increment the number by one and return the resulting number in that base.",
                "constraints": [
                    "2 <= B <= 16",
                    "0000 <= N <= Max value in that base (e.g. 1111 for base 2, FFFF for base 16, etc.)"
                ],
                "testcases": [
                    {
                        "input": "B = 2\nN = 0010",
                        "output": "11",
                        "explanation": "The number 0010 in base 2 is equal to 2 in base 10. Incrementing 2 by 1 gives 3. The number 3 in base 10 is equal to 11 in base 2."
                    },
                    {
                        "input": "B = 13\nN = 2139",
                        "output": "213A",
                        "explanation": "The number 2139 in base 13 is equal to 81 in base 10. Incrementing 81 by 1 gives 82. The number 82 in base 10 is equal to 213A in base 13. Note that A represents the digit 10 in base 13."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Use Brute Force.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "motlay"
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nclass Solution{\npublic:\n    string inc(int B,string N)\n    {\n        int x = 0; \n        // convert the number to 2 base\n        for(int i = 0;i<N.length();i++)\n        {\n            int w = pow(B,i);\n            int c = 0;\n            if('0'<=N[N.length()-1-i] && N[N.length()-1-i]<='9')\n                c = (int)(N[N.length()-1-i] - '0');\n            else\n                c = (int)(N[N.length()-1-i] - 'A' + 10);\n            x = x + (c*w);\n        }\n        \n        // increment number by 1\n        x = x + 1;\n        string ans = \"\";\n        \n        // convert the number back to base B\n        while(x!=0)\n        {\n            int r = x%B;\n            char c;\n            if(r<10)\n                c = (char)(r+'0');\n            else\n                c = (char)((r-10)+'A');\n            ans = c+ans;\n            x/=B;\n        }\n        \n        // return the converted number\n        return ans;\n    }\n    \n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution{\n    static String inc(int B,String N){\n        int x = 0;\n        // convert the number to base 2\n        for(int i = 0;i<N.length();i++)\n        {\n            int w = (int)Math.pow(B,i);\n            int c = 0;\n            if('0'<=N.charAt(N.length()-1-i) && N.charAt(N.length()-1-i)<='9')\n                c = (int)(N.charAt(N.length()-1-i) - '0');\n            else\n                c = (int)(N.charAt(N.length()-1-i) - 'A' + 10);\n            x = x + (c*w);\n        }\n        \n        // increment the number by 1\n        x = x + 1;\n        String ans = \"\";\n        \n        // convert the number back to base B\n        while(x!=0)\n        {\n            int r = x%B;\n            char c ='0';\n            if(r<10)\n                c = (char)(r+'0');\n            else\n                c = (char)((r-10)+'A');\n            ans = c+ans;\n            x/=B;\n        }\n        \n        // return the answer\n        return ans;\n    }\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "#Back-end complete function Template for Python 3\n\nclass Solution:\n    def inc (self, B, N):\n        x = 0\n        \n        # convert the number to base 2\n        for i in range(len(N)):\n            w = pow(B,i)\n            c = 0\n            if '0'<=N[len(N)-1-i] and N[len(N)-1-i]<='9':\n                c = (int)(ord(N[len(N)-1-i]) - ord('0'))\n            else:\n                c = (int)(ord(N[len(N)-1-i]) - ord('A') + 10)\n            x = x + (c*w)\n            \n        # increment the number by 1\n        x = x + 1\n        ans = \"\"\n        \n        # convert the number back to base B\n        while(x!=0):\n            r = x%B\n            c = '0'\n            if(r<10):\n                c = chr(int(r+ord('0')))\n            else:\n                c = chr(int((r-10)+ord('A')))\n            ans = c+ans\n            x//=B\n            \n        # return the answer\n        return ans",
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}