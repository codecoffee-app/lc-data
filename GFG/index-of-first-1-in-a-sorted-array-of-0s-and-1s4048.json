{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703159,
            "title": "First 1 in a Sorted Binary Array",
            "titleSlug": "index-of-first-1-in-a-sorted-array-of-0s-and-1s4048",
            "content": "<p><span >Given a sorted array <strong><span style=\"color: #000000;\">arr</span></strong> consisting of <strong>0</strong>s and <strong>1</strong>s. The task is to find the index&nbsp;</span><span >(0-based indexing)</span><span > of the first <strong>1</strong> in the given array. </span></p>\n<p><span ><strong>NOTE: </strong>If one is not present then, return -1.</span></p>\n<p><span ><strong>Examples :</strong></span></p>\n<pre><span ><strong>Input : </strong>arr[] = [0, 0, 0, 0, 0, 0, 1, 1, 1, 1]\n<strong>Output : </strong>6\n<strong>Explanation: </strong>The index of first <strong>1</strong> in the array is 6.\n</span></pre>\n<pre><span ><strong>Input : </strong>arr[] = [0, 0, 0, 0]\n<strong>Output :</strong> -1\n<strong>Explanation: </strong>1's are not present in the array.</span></pre>\n<p><span ><strong>Expected Time Complexity:</strong> O(log (n))<br /><strong>Expected Auxiliary Space:</strong> O(1)</span></p>\n<p><span ><strong>Constraints:</strong><br />1 &le; arr.size() &le; 10<sup>6</sup><br />0 &le; arr[i] &le; 1</span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a sorted array `arr` consisting of 0s and 1s, find the index (0-based) of the first occurrence of 1 in the array. Return -1 if 1 is not present in the array.",
                "constraints": [
                    "1 <= arr.size() <= 10^6",
                    "0 <= arr[i] <= 1"
                ],
                "testcases": [
                    {
                        "input": "[0, 0, 0, 0, 0, 0, 1, 1, 1, 1]",
                        "output": "6",
                        "explanation": "The first '1' is found at index 6."
                    },
                    {
                        "input": "[0, 0, 0, 0]",
                        "output": "-1",
                        "explanation": "The array contains no '1's."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size: 18px;\">Use the binary search technique on the sorted array, to find the index of first &lsquo;1&rsquo;. Try to find the index of one where the previous element is </span><span style=\"font-size: 18px;\">&lsquo;0&rsquo;.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Searching",
                "slug": "searching"
            }
        ],
        "companies": [
            "amazon",
            "makemytrip"
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    // function to find the index of first '1'\n    // binary search technique is applied\n    int indexOfFirstOne(vector<int> &arr, int low, int high) {\n        while (low <= high) {\n            int mid = (low + high) / 2;\n\n            // if true, then 'mid' is the index of first '1'\n            if (arr[mid] == 1 && (mid == 0 || arr[mid - 1] == 0))\n                return mid;\n\n            // first '1' lies to the left of 'mid'\n            else if (arr[mid] == 1)\n                high = mid - 1;\n\n            // first '1' lies to the right of 'mid'\n            else\n                low = mid + 1;\n        }\n\n        // 1's are not present in the array\n        return -1;\n    }\n\n    int firstIndex(vector<int> &arr) {\n        int n = arr.size();\n        return indexOfFirstOne(arr, 0, n - 1);\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n    public int indexOfFirstOne(int[] arr, int low, int high) {\n        while (low <= high) {\n            int mid = (low + high) / 2;\n\n            if (arr[mid] == 1 && (mid == 0 || arr[mid - 1] == 0))\n                return mid;\n            else if (arr[mid] == 1)\n                high = mid - 1;\n            else\n                low = mid + 1;\n        }\n        return -1;\n    }\n\n    public int firstIndex(int[] arr) {\n        int n = arr.length;\n        return indexOfFirstOne(arr, 0, n - 1);\n    }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n\n    def indexOfFirstOne(self, arr, low, high):\n        while low <= high:\n            mid = (low + high) // 2\n\n            if arr[mid] == 1 and (mid == 0 or arr[mid - 1] == 0):\n                return mid\n            elif arr[mid] == 1:\n                high = mid - 1\n            else:\n                low = mid + 1\n        return -1\n\n    def firstIndex(self, arr):\n        n = len(arr)\n        return self.indexOfFirstOne(arr, 0, n - 1)\n",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "class Solution {\n    indexOfFirstOne(arr, low, high) {\n        while (low <= high) {\n            let mid = Math.floor((low + high) / 2);\n\n            if (arr[mid] === 1 && (mid === 0 || arr[mid - 1] === 0))\n                return mid;\n            else if (arr[mid] === 1)\n                high = mid - 1;\n            else\n                low = mid + 1;\n        }\n        return -1;\n    }\n\n    firstIndex(arr) {\n        let n = arr.length;\n        return this.indexOfFirstOne(arr, 0, n - 1);\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}