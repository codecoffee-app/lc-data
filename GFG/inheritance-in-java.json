{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 878197,
            "title": "Inheritance in Java",
            "titleSlug": "inheritance-in-java",
            "content": "<p><span >Implement the following classes to understant Inheritance in Java:<br /><span style=\"font-size: 18.666666px;\">Note: Driver code makes all the function calls and print statements</span><br /></span></p>\n<pre><span >Name: <strong>Employee<br /></strong></span><span >Data member/Attributes: <strong>id </strong>(int), <strong>salary </strong>(int)<br /></span><span >Constructor: <strong>Employee(id,salary) </strong>-&gt; Initializes values to respective variables </span></pre>\n<pre><span >Name: <strong>SalesEmployee </strong>(extends Employee)<br />Data member/Attributes: <strong>sales </strong>(int)<br />Constructor: <strong>SalesEmployee(id,salary,sales) </strong>-&gt; calls super(id,salary) and initialzes value to sales</span></pre>\n<p><strong><span >Example:</span></strong></p>\n<pre><strong><span >Input: </span></strong><span >id = 14, salary = 30000, sales = 20<br /><strong>Output: <br /></strong>14 30000<strong><br /></strong>14 30000 20<br /></span></pre>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Implement the `Employee` and `SalesEmployee` classes in Java to demonstrate inheritance.\n\n**Employee Class:**\n*   **Attributes:** `id` (int), `salary` (int)\n*   **Constructor:** `Employee(id, salary)` - Initializes the `id` and `salary` attributes.\n\n**SalesEmployee Class:**\n*   Extends the `Employee` class.\n*   **Attribute:** `sales` (int)\n*   **Constructor:** `SalesEmployee(id, salary, sales)` - Calls the `super(id, salary)` constructor to initialize the inherited `id` and `salary` attributes, and then initializes the `sales` attribute.\n\n**Note:** The driver code will handle all function calls and print statements.",
                "constraints": [],
                "testcases": [
                    {
                        "input": "id = 14, salary = 30000, sales = 20",
                        "output": "14 30000\n14 30000 20",
                        "explanation": "The first line represents the output from an Employee object created with id 14 and salary 30000. The second line represents the output from a SalesEmployee object created with id 14, salary 30000 and sales 20."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [],
        "companies": [],
        "solutions": {
            "java": {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\nclass Employee {\n    int id;\n    int salary;\n\n    Employee(int id, int salary) {\n        this.id = id;\n        this.salary = salary;\n    }\n}\n\nclass SalesEmployee extends Employee {\n    int sales;\n\n    SalesEmployee(int id, int salary, int sales) {\n        super(id, salary);\n        this.sales = sales;\n    }\n}",
                "lang_text": "java"
            }
        },
        "platform": "GFG"
    }
}