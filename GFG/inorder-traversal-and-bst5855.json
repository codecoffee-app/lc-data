{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705301,
            "title": "Inorder Traversal and BST",
            "titleSlug": "inorder-traversal-and-bst5855",
            "content": "<p><span style=\"font-size: 18px;\">Given an array <strong>arr&nbsp;</strong>of size <strong>N,&nbsp;</strong>determine whether this array represents an <strong>inorder traversal</strong> of a <strong>BST.&nbsp;</strong></span></p>\n<p><span style=\"font-size: 18px;\"><strong>Note:</strong>&nbsp;All keys in BST must be unique.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong>\nN = 3\narr = {2, 4, 5}\n<strong>Output:</strong> 1\n<strong>Explaination:</strong> <br />Given array is inorder traversal for the following tree:<br />    4<br />   / \\<br />  2   5</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong>\nN = 3\narr = {2, 4, 1}\n<strong>Output:</strong> 0\n<strong>Explaination:</strong> <br />Given array can not represent any BST.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Your Task:</strong><br />You don't need to read input or print anything. Your task is to complete the function&nbsp;<strong>isRepresentingBST()</strong>&nbsp;which takes the array <strong>arr[]</strong> and its size <strong>N&nbsp;</strong>as input parameters&nbsp;and returns&nbsp;<strong>1</strong> if array represents Inorder traversal of a BST, else returns <strong>0</strong>. </span></p>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong> O(N)<br /><strong>Expected Auxiliary Space:</strong> O(1)</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &le; N &le; 10<sup>5</sup><br />1 &le; arr[i]&nbsp;&le; 10<sup>5</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array `arr` of size `N`, determine whether this array represents an inorder traversal of a Binary Search Tree (BST). Note that all keys in the BST must be unique.",
                "constraints": [
                    "1 <= N <= 10^5",
                    "1 <= arr[i] <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "N = 3\narr = {2, 4, 5}",
                        "output": "1",
                        "explanation": "The array {2, 4, 5} represents the inorder traversal of a BST. For example, a BST with the root 4, left child 2, and right child 5 has this inorder traversal."
                    },
                    {
                        "input": "N = 3\narr = {2, 4, 1}",
                        "output": "0",
                        "explanation": "The array {2, 4, 1} cannot represent the inorder traversal of a BST because the elements are not in increasing order."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>What is the property of an inorder traversal in BST?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Binary Search Tree",
                "slug": "binary-search-tree"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\nclass Solution {\n  public:\n//Function to check if the given array represents a valid BST.\nint isRepresentingBST(int arr[], int N)\n{\n    //iterating over the array starting from the second element.\n    for(int i=1;i<N;i++)\n    {\n        //if the current element is less than or equal to the previous element,\n        //return 0 as it does not represent a valid BST.\n        if(arr[i]<=arr[i-1])\n            return 0;\n    }\n    //return 1 if the array represents a valid BST.\n    return 1;\n}\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution\n{\n    static int isRepresentingBST(int arr[], int n)\n    {\n        for(int i=0;i<n-1;i++)\n        {\n            if(arr[i]>=arr[i+1])\n            {\n                return 0;\n            }\n        }\n        return 1;\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "class Solution:\r\n    # Function to check if the given array represents a valid BST.\r\n    def isRepresentingBST(self, arr, N):\r\n        # Iterating over the array starting from the second element.\r\n        for i in range(N-1):\r\n            # If the current element is less than or equal to the previous element,\r\n            # return 0 as it does not represent a valid BST.\r\n            if arr[i] >= arr[i+1]:\r\n                return 0\r\n        # Return 1 if the array represents a valid BST.\r\n        return 1",
                "lang_text": "py"
            },
            {
                "lang": "C#",
                "full_func": "class Solution\n{\n    //Complete this function\n    public int isRepresentingBST(int[] arr, int N)\n    {\n        for (int i = 1; i < N; i++)\n        {\n            if (arr[i] <= arr[i - 1])\n                return 0;\n        }\n        return 1;\n    }\n\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}