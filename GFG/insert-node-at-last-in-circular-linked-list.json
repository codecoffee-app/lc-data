{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 701073,
            "title": "Insert node at last in circular linked list",
            "titleSlug": "insert-node-at-last-in-circular-linked-list",
            "content": "<p><span style=\"font-size:18px\">Given a circular linked list of size <strong>N</strong> and an integer <strong>x</strong>. Your task is insert a new node with value x at the end of linked list. You are required to complete the function <strong>insert_at_end(head, x)</strong> which accepts the head circular linked list and x as an argument.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Input:</strong><br />\nThe input line contains <strong>T</strong>, denoting the number of testcases. Each testcase contains two lines. The first line contains N(size of circular linked list) and x(value as a node to inserted) separated by space. The second line contains N elements of the linked list separated by space.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Output:</strong><br />\nFor each testcase in new line, print the new circular linked list.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>User task:</strong><br />\nSince this is a functional problem you don&#39;t have to worry about the input, you just have to complete the function <strong>insert_at_end().</strong></span></p>\n\n<p><span style=\"font-size:18px\"><strong>Constraint:</strong><br />\n1 &lt;= T &lt;= 100<br />\n1 &lt;= N, x &lt;= 10<sup>3</sup><br />\n1 &lt;= node value &lt;= 10<sup>4</sup></span></p>\n\n<p><span style=\"font-size:18px\"><strong>Example:<br />\nInput:</strong><br />\n2<br />\n5 9<br />\n1 2 3 4 6<br />\n6 7<br />\n1 2 3 4 5 6</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Output:</strong><br />\n1 2 3 4 6 9<br />\n1 2 3 4 5 6 7</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Explanation:<br />\nTestcase 1:</strong> The value 9 is to be inserted in the given circular linked list 1 2 3 4 6. The new circular linked list after inserting node at end is 1 2 3 4 6 9.</span><br />\n&nbsp;</p>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a circular linked list of size N and an integer x, insert a new node with value x at the end of the linked list. Implement the function insert_at_end(head, x) which takes the head of the circular linked list and x as input.",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= N, x <= 10^3",
                    "1 <= node value <= 10^4"
                ],
                "testcases": [
                    {
                        "input": "5 9\n1 2 3 4 6",
                        "output": "1 2 3 4 6 9",
                        "explanation": "The value 9 is inserted at the end of the circular linked list 1 2 3 4 6, resulting in the new circular linked list 1 2 3 4 6 9."
                    },
                    {
                        "input": "6 7\n1 2 3 4 5 6",
                        "output": "1 2 3 4 5 6 7",
                        "explanation": "The value 7 is inserted at the end of the circular linked list 1 2 3 4 5 6, resulting in the new circular linked list 1 2 3 4 5 6 7."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "circular-linked-list",
                "slug": "circular-linked-list"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C",
                "full_func": "//Back-end complete function Template for C\n\n// function to insert new node with value x at the end of\n// circular linked list\nstruct Node* insert_at_end(struct Node* head, int x)\n{\n    struct Node *node;\n\tnode = (struct Node *) malloc(sizeof(struct Node));\n\tnode->data = x;\n\tnode->next = NULL;\n    struct Node* temp = head->next;\n    \n    // reaching end of the linked list\n    while(temp->next != head)\n    {\n        temp = temp->next;\n    }\n    // linking new node to the tail\n    temp->next = node;\n    node->next = head;\n    \n    return head;\n}",
                "lang_text": "c"
            },
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\n// function to insert new node with value x at the end of\n// circular linked list\nNode* insert_at_end(Node* head, int x)\n{\n    Node* node = new Node;\n    node->data = x;\n    Node* temp = head->next;\n    \n    // reaching end of the linked list\n    while(temp->next != head)\n    {\n        temp = temp->next;\n    }\n    // linking new node to the head\n    temp->next = node;\n    node->next = head;\n    \n    return head;\n}\n\n",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\nclass gfg\n{\n    static Node insert_at_end(Node head, int x)\n    {\n        Node new_node = new Node(x);\n        \n        Node temp = head.next;\n        while(temp.next != head)\n        {\n            temp = temp.next;\n        }\n        \n        temp.next = new_node;\n        new_node.next = head;\n        //new_node= head;\n        return head;\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\ndef insert_at_end(head, data):\n    \n    ptr1 = Node(data)\n    if not head:\n        head=ptr1\n        ptr1.next=ptr1\n        return head\n    temp=head\n\n    while temp.next!=head:\n        temp=temp.next\n    \n    temp.next=ptr1\n    ptr1.next=head\n    return head",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n\n/**\n * Definition for singly-linked list.\n * class Node {\n *     constructor(data) {\n *         this.data = data;\n *         this.next = null;\n *     }\n * }\n */\n\nclass Solution {\n    //Function to insert data at the end of circular linked list.\n    insertAtEnd(head, data) {\n        let newNode = new Node(data);\n        if (!head) {\n            head = newNode;\n            newNode.next = newNode;\n            return head;\n        }\n        let current = head;\n        while (current.next !== head) {\n            current = current.next;\n        }\n        current.next = newNode;\n        newNode.next = head;\n        return head;\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}