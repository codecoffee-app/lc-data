{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 888443,
            "title": "Insertion in an empty circular linked list",
            "titleSlug": "insertion-in-an-empty-circular-linked-list",
            "content": "<p><span >Given an <strong data-start=\"76\" data-end=\"106\">empty circular linked list</strong>, the task is to complete an <strong data-start=\"137\" data-end=\"160\">insertInEmptyList()</strong> function that inserts a new node into the empty circular linked list.</span></p>\n<p><strong><span >Examples:</span></strong></p>\n<pre><strong><span >Input:&nbsp;</span></strong><span style=\"font-size: 18.6667px;\">1</span><br /><span ><strong>Output:</strong> 1</span><br /><span ><strong>Explanation:</strong> The list is empty, so the first node with value 1 is inserted and points to itself.</span></pre>\n<pre><strong><span >Input: </span></strong><span >5</span><br /><span ><strong>Output:</strong> 5</span><br /><span ><strong>Explanation:</strong>&nbsp;</span><span style=\"font-size: 18.6667px;\">The list is empty, so the first node with value 5 is inserted and points to itself.</span></pre>\n<p><strong style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\"><span >Constarints:<br /></span></strong><span >1 &lt;= node-&gt;data &lt;= 10<sup>9</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an empty circular linked list, implement the `insertInEmptyList()` function to insert a new node with a given value into the list. The new node should become the only node in the circular list, pointing to itself.",
                "constraints": [
                    "1 <= node.data <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "1",
                        "output": "1",
                        "explanation": "The list is initially empty. A node with value 1 is inserted. Since it's the only node, it points to itself, forming a circular list of size 1."
                    },
                    {
                        "input": "5",
                        "output": "5",
                        "explanation": "The list is initially empty. A node with value 5 is inserted. As the first and only node, it points to itself to form a circular list."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\nclass Solution {\n  public:\n\n    Node* insertInEmptyList(Node* last, int data) {\n\n        Node* newNode = new Node(data);\n\n        newNode->next = newNode;\n\n        last = newNode;\n        return last;\n    }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n    // Method to insert a node into an empty circular linked list\n    public Node insertInEmptyList(Node last, int data) {\n        if (last != null) {\n            return last; // Return if list is not empty\n        }\n\n        Node newNode = new Node(data);\n        newNode.next = newNode; // Circular reference to itself\n        last = newNode;\n        return last;\n    }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\nclass Solution:\n    \"\"\" Contains method to insert into an empty circular linked list. \"\"\"\n\n    def insert_in_empty_list(self, last, data):\n        \"\"\"\n        Inserts a node into an empty circular linked list.\n        If the list is already non-empty, it remains unchanged.\n        \"\"\"\n        if last is not None:\n            return last  # Return last if the list is not empty.\n\n        new_node = Node(data)\n        new_node.next = new_node  # Circular reference to itself.\n        last = new_node\n        return last\n",
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}