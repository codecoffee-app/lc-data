{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 701610,
            "title": "Insertion in deque",
            "titleSlug": "insertion-in-deque",
            "content": "<p><span style=\"font-size: 18px;\">Given an array <strong>arr[] </strong>of size <strong>N </strong>containing non-negative integers. You need to insert all elements of the array to deque&nbsp;and return it.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong> \n5\n1 2 3 4 5\n\n<strong>Output:</strong> \n1 2 3 4 5\n\n<strong>Explanation:</strong> \nAfter insert in the deque \nit will look like {1, 2, 3, 4, 5}.</span>\n</pre>\n<p><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong>\n1\n1\n\n<strong>Output:</strong> \n1\n\n<strong>Explanation:</strong> \nAfter insert in the deque \nit will look like {1}.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Your Task</strong>:<br />You need to complete the function <strong>deque_Init()</strong> which takes array <strong>arr[]</strong> and it's size <strong>N</strong> as input parameters and should return deque that contains array elements. You don't have to worry about input.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity</strong>: O(N)<br /><strong>Expected Auxilliary Space</strong>: O(1)</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &le; N &le; 10<sup>5</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array `arr[]` of size `N` containing non-negative integers, insert all elements of the array into a deque and return it.",
                "constraints": [
                    "1 <= N <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "5\n1 2 3 4 5",
                        "output": "1 2 3 4 5",
                        "explanation": "The deque will contain the elements in the same order as the input array: {1, 2, 3, 4, 5}."
                    },
                    {
                        "input": "1\n1",
                        "output": "1",
                        "explanation": "The deque will contain the single element from the input array: {1}."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            ""
        ],
        "relatedTopics": [
            {
                "name": "Java",
                "slug": "java"
            },
            {
                "name": "Queue",
                "slug": "queue"
            },
            {
                "name": "STL",
                "slug": "stl"
            },
            {
                "name": "Java-Collections",
                "slug": "java-collections"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "// Back-end complete function Template for C++\n\nclass Solution {\n  public:\n    // Function to insert all elements of the array in deque.\n    deque<int> deque_Init(int arr[], int n) {\n        // creating a deque.\n        deque<int> res;\n\n        // iterating over the array elements and inserting them in deque.\n        for (int i = 0; i < n; i++) res.push_back(arr[i]);\n        return res;\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "// Back-end complete function Template for Java\n\nclass Solution {\n    // Function to insert all elements of the array in deque.\n    public static ArrayDeque<Integer> deque_Init(int arr[], int n) {\n        // creating a deque.\n        ArrayDeque<Integer> res = new ArrayDeque<>();\n\n        // iterating over the array elements and inserting them in deque.\n        for (int i = 0; i < n; i++) res.addLast(arr[i]);\n\n        return res;\n    }\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\nclass Solution:\n    \n    #Function to insert all elements of the array in deque.\n    def deque_Init(self,arr,n):\n        \n        #creating a deque and inserting the array elements in it.\n        dq=deque(arr)\n        return dq",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "// Back-end complete function Template for javascript\n\n/**\n * @param {number[]} arr\n * @param {number} n\n * @returns {Deque}\n*/\n\nclass Solution {\n    // Function to insert all elements of the array in deque.\n    deque_Init(arr, n) {\n        // creating a deque.\n        let res = new Deque();\n\n        // iterating over the array elements and inserting them in deque.\n        for (let i = 0; i < n; i++) {\n            res.push_back(arr[i]);\n        }\n        return res;\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}