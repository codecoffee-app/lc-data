{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705095,
            "title": "Interesting Prime Numbers",
            "titleSlug": "interesting-prime-numbers1757",
            "content": "<p><span style=\"font-size: 18px;\">An interesting prime number is a prime number that can be written as <strong>a<sup>2</sup> + b<sup>4</sup></strong> where a and b are positive integers. The smallest interesting prime is <strong>2 = 1<sup>2</sup> + 1<sup>4</sup></strong>. <br />You will be given <strong>N</strong> a positive integer, you have to find the <strong>number of interesting primes </strong>less than or equal to <strong>N</strong>. </span><br />&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>N = 3\n<strong>Output: </strong>1\n<strong>Explanation: </strong>1<sup>2</sup>&nbsp;+ 1<sup>4</sup>&nbsp;= 2</span>\n</pre>\n<p><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>N = 10\n<strong>Output: </strong>2\n<strong>Explanation: </strong>1<sup>2</sup>&nbsp;+ 1<sup>4</sup>&nbsp;= 2 and 2<sup>2</sup>&nbsp;+ 1<sup>4</sup>&nbsp;= 5</span>\n</pre>\n<p>&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Your Task:</strong><br />You don't need to read or print anything. Your task is to complete the function <strong>CountInterestingPrimeNo()&nbsp;</strong>which takes N as input parameter and returns number of Interesting prime numbers less than or equal to N.</span><br />&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:&nbsp;</strong>O(N * log(N))<br /><strong>Expected Space&nbsp; Complexity:&nbsp;</strong>O(N)</span><br />&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &lt;= N &lt;= 10<sup>5</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "An interesting prime number is a prime number that can be expressed as a<sup>2</sup> + b<sup>4</sup>, where a and b are positive integers.  For a given positive integer N, determine the number of interesting prime numbers that are less than or equal to N.",
                "constraints": [
                    "1 <= N <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "3",
                        "output": "1",
                        "explanation": "The only interesting prime less than or equal to 3 is 2, since 1^2 + 1^4 = 2."
                    },
                    {
                        "input": "10",
                        "output": "2",
                        "explanation": "The interesting primes less than or equal to 10 are 2 and 5, since 1^2 + 1^4 = 2 and 2^2 + 1^4 = 5."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Use&nbsp;Sieve of Eratosthenes.</p>"
        ],
        "relatedTopics": [
            {
                "name": "number-theory",
                "slug": "number-theory"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "\n\nclass Solution{\n\tpublic:\n\tint CountInterestingPrimeNo(int N){\n\t\t// Sieve\n\t\tvector<int>prime(N+2, true);\n\t\tfor(int i  = 2; i * i <= N; i++){\n\t\t\tif(prime[i]){\n\t\t\t\tfor(int j = i*i; j <= N; j+=i){\n\t\t\t\t\tprime[j] = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// All a^2 and b^4 <= N\n\t\tvector<int>a,b;\n\t\tfor(int i = 1; i <= 332; i++){\n\t\t\tlong long int x = i * i;\n\t\t\tlong long int y = x * x;\n\t\t\tif(x <= N)a.push_back(x);\n\t\t\tif(y <= N)b.push_back(y);\n\t\t}\n\t\tint cnt = 0;\n\t\tvector<bool>hash(N+2,false);\n\t\t// Checking for Interesting prime No.\n\t\tfor(int i = 0; i < a.size(); i++){\n\t\t\tfor(int j = 0; j < b.size(); j++){\n\t\t\t\tif(a[i] + b[j] <= N and prime[a[i] + b[j]] and !hash[a[i] + b[j]])\n\t\t\t\t\tcnt++, hash[a[i] + b[j]] = true;\n\t\t\t}\n\t\t}\n\t\treturn cnt;\n\t}\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    public int CountInterestingPrimeNo(int N)\n    {\n        // Sieve\n        bool[] prime = new bool[N+2];\n        for(int i = 0; i < N+2; i++)\n        {\n            prime[i] = true;\n        }\n        \n        for(int i = 2; i * i <= N; i++)\n        {\n            if(prime[i])\n            {\n                for(int j = i * i; j <= N; j += i)\n                {\n                    prime[j] = false;\n                }\n            }\n        }\n        \n        // All a^2 and b^4 <= N\n        List<int> a = new List<int>();\n        List<int> b = new List<int>();\n        \n        for(int i = 1; i <= 332; i++)\n        {\n            long x = i * i;\n            long y = x * x;\n            if(x <= N)\n            {\n                a.Add((int)x);\n            }\n            if(y <= N)\n            {\n                b.Add((int)y);\n            }\n        }\n        \n        int cnt = 0;\n        bool[] hash = new bool[N+2];\n        \n        // Checking for Interesting prime No.\n        for(int i = 0; i < a.Count; i++)\n        {\n            for(int j = 0; j < b.Count; j++)\n            {\n                if(a[i] + b[j] <= N && prime[a[i] + b[j]] && !hash[a[i] + b[j]])\n                {\n                    cnt++;\n                    hash[a[i] + b[j]] = true;\n                }\n            }\n        }\n        \n        return cnt;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}