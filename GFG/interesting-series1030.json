{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705463,
            "title": "Interesting Series",
            "titleSlug": "interesting-series1030",
            "content": "<p><span style=\"font-size:18px\">Given a series of numbers&nbsp;<strong> 6, 14, 36, 98, 276...</strong> Identify the pattern in the series and help to identify the integer at <strong>N</strong>th index. Indices are starting from 1.</span><br />\r\n<strong><span style=\"font-size:18px\">Note: </span></strong><span style=\"font-size:18px\">Calculate the answer modulo (10<sup>9</sup>+7).</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\r\n<strong><span style=\"font-size:18px\">N = </span></strong><span style=\"font-size:18px\">2</span>\r\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\r\n<span style=\"font-size:18px\">14</span>\r\n<span style=\"font-size:18px\"><strong>Explanation:</strong></span>\r\n<span style=\"font-size:18px\">14 is the 2nd integer of the Series.</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\r\n<strong><span style=\"font-size:18px\">N = </span></strong><span style=\"font-size:18px\">8</span>\r\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\r\n<span style=\"font-size:18px\">6818</span>\r\n<span style=\"font-size:18px\"><strong>Explanation:</strong></span>\r\n<span style=\"font-size:18px\">6818 is the 8th integer of the Series.</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>findNthNum()</strong> which takes an Integer N as input and returns the Nth number of the given Series.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(log(N))<br />\r\n<strong>Expected Auxiliary Space:</strong> O(1)</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong></span><br />\r\n<span style=\"font-size:18px\">1 &lt;= N &lt;= 10<sup>5</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given the series of numbers 6, 14, 36, 98, 276..., identify the pattern and determine the integer at the Nth index. The index starts from 1. Calculate the answer modulo (10^9 + 7).",
                "constraints": [
                    "1 <= N <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "2",
                        "output": "14",
                        "explanation": "The 2nd number in the series is 14."
                    },
                    {
                        "input": "8",
                        "output": "6818",
                        "explanation": "The 8th number in the series is 6818."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Be careful about Overflow of integers.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\r\n\r\nclass Solution {\r\n  public:\r\n    \r\n    /* Iterative Function to calculate (x^y)%p in O(log y) */\r\n    long long power(long long x, long long y, long long p)  \r\n    {  \r\n        long long res = 1;     // Initialize result  \r\n      \r\n        x = x % p; // Update x if it is more than or  \r\n                    // equal to p \r\n       \r\n        if (x == 0) return 0; // In case x is divisible by p; \r\n      \r\n        while (y > 0)  \r\n        {  \r\n            // If y is odd, multiply x with result  \r\n            if (y & 1)  \r\n                res = (res*x) % p;  \r\n      \r\n            // y must be even now  \r\n            y = y>>1; // y = y/2  \r\n            x = (x*x) % p;  \r\n        }  \r\n        return res;  \r\n    }  \r\n\r\n    long long findNthNum(int N) {\r\n        \r\n        long long mod = 1000000007;\r\n        \r\n        long long ans = (1ll + power(2ll,N,mod) + power(3ll,N,mod) + mod) % mod;\r\n        \r\n        return ans;\r\n    }\r\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\nclass Solution:\n    #Function to find the Nth number.\n    def findNthNum(self, N):\n        \n        mod = 1000000007\n        #calculating the answer using the formula (1 + 2^N + 3^N) % mod\n        ans = (1 + pow(2,N,mod) + pow(3,N,mod)) % mod \n        \n        return ans",
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "//public class\nclass Solution\n{\n    //Complete this function\n    public long findNthNum(int N)\n    {\n        long mod = 1000000007;\n        long ans = (1 + power(2, N, mod) + power(3, N, mod) + mod) % mod;\n        return ans;\n    }\n    \n    /* Iterative Function to calculate (x^y)%p in O(log y) */\n    public long power(long x, long y, long p)  \n    {  \n        long res = 1;     // Initialize result  \n\n        x = x % p; // Update x if it is more than or  \n                    // equal to p \n\n        if (x == 0) return 0; // In case x is divisible by p; \n\n        while (y > 0)  \n        {  \n            // If y is odd, multiply x with result  \n            if ((y & 1) != 0)  \n                res = (res * x) % p;  \n\n            // y must be even now  \n            y = y >> 1; // y = y/2  \n            x = (x * x) % p;  \n        }  \n        return res;  \n    }  \n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}