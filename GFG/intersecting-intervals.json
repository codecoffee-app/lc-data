{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 710143,
            "title": "Maximum number of overlapping Intervals",
            "titleSlug": "intersecting-intervals",
            "content": "<p><span style=\"font-size:18px\">Given&nbsp;<strong>N</strong>&nbsp;intervals of the form [<strong>A, B]</strong>. The task is to return the maximum number of overlap among these intervals at any time.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong>\r\nN = 3\r\nIntervals[] = {{1, 2}, {2, 4}, {3, 6}}\r\n<strong>Output: </strong>\r\n2\r\n<strong>Explanation:</strong> \r\nThe maximum overlapping is 2(between (1 2) and \r\n(2 4) or between (2 4) and (3 6))</span>&nbsp;\r\n<img alt=\"\" src=\"https://media.geeksforgeeks.org/img-practice/overlapping-300x189-1648453947.png\" style=\"height:189px; width:300px\" />\r\n<span style=\"font-size:18px\">\r\n</span>\r\n</pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong>\r\nN = 4\r\nIntervals[] = {{1, 8}, {2, 5}, {5, 6}, {3, 7}}\r\n<strong>Output: </strong>\r\n4\r\n<strong>Explanation:</strong> \r\nThe maximum overlapping is 4 (between (1, 8), \r\n(2, 5), (5, 6) and (3, 7))</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:&nbsp;&nbsp;</strong><br />\r\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>overlap</strong></span><span style=\"font-size:18px\"><strong>()</strong>&nbsp;which takes a list of pairs as input and returns an integer&nbsp;as output.</span><br />\r\n&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(N * log N)<br />\r\n<strong>Expected Auxiliary Space:</strong> O(N)</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n2 &lt;= N&nbsp;&lt;= 2 * 10<sup>4</sup><br />\r\n1&lt;= intervals[i][0] &lt; intervals[i][1] &lt;= 4*10<sup>3</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given N intervals of the form [A, B], determine the maximum number of intervals that overlap at any given time.",
                "constraints": [
                    "2 <= N <= 2 * 10^4",
                    "1 <= intervals[i][0] < intervals[i][1] <= 4 * 10^3"
                ],
                "testcases": [
                    {
                        "input": "N = 3\nIntervals[] = {{1, 2}, {2, 4}, {3, 6}}",
                        "output": "2",
                        "explanation": "The maximum overlapping is 2, occurring between (1, 2) and (2, 4) or between (2, 4) and (3, 6)."
                    },
                    {
                        "input": "N = 4\nIntervals[] = {{1, 8}, {2, 5}, {5, 6}, {3, 7}}",
                        "output": "4",
                        "explanation": "The maximum overlapping is 4, occurring between (1, 8), (2, 5), (5, 6), and (3, 7)."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Store coordinates in a new vector of pair mapped with characters &lsquo;x&rsquo; and &lsquo;y&rsquo;, to identify coordinates.</span></p>",
            "<p><span style=\"font-size:18px\">Sort the vector.</span></p>",
            "<p><span style=\"font-size:18px\">Traverse the vector, if an x coordinate is encountered it means a new range is added, so update count and if y coordinate is encountered that means a range is subtracted.</span></p>"
        ],
        "relatedTopics": [],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\r\n\r\nclass Solution{\r\n    public:\r\n    int overlap(vector<pair<int,int>>v, int n){\r\n        int ans = 0;\r\n        int count = 0;\r\n        vector<pair<int, char> > data;\r\n     \r\n        // storing the x and y\r\n        // coordinates in data vector\r\n        for (int i = 0; i < v.size(); i++) {\r\n     \r\n            // pushing the x coordinate\r\n            data.push_back({ v[i].first, 'x' });\r\n     \r\n            // pushing the y coordinate\r\n            data.push_back({ v[i].second, 'y' });\r\n        }\r\n     \r\n        // sorting of ranges\r\n        sort(data.begin(), data.end());\r\n     \r\n        // Traverse the data vector to\r\n        // count number of overlaps\r\n        for (int i = 0; i < data.size(); i++) {\r\n     \r\n            // if x occur it means a new range\r\n            // is added so we increase count\r\n            if (data[i].second == 'x')\r\n                count++;\r\n     \r\n            // if y occur it means a range\r\n            // is ended so we decrease count\r\n            if (data[i].second == 'y')\r\n                count--;\r\n     \r\n            // updating the value of ans\r\n            // after every traversal\r\n            ans = max(ans, count);\r\n        }\r\n     \r\n        // printing the maximum value\r\n        return ans;\r\n    }\r\n};\r\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}