{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705563,
            "title": "Inverted triangle of stars",
            "titleSlug": "inverted-triangle-of-stars0110",
            "content": "<p><span style=\"font-size:18px\">Given an integer <strong>N</strong>, print an inverted isosceles triangle of stars such that the height of the triangle is <strong>N</strong>.</span></p>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\n<span style=\"font-size:18px\"><strong>N = </strong>4</span>\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\n<span style=\"font-size:18px\">*******</span>\n<span style=\"font-size:18px\"> *****</span>\n<span style=\"font-size:18px\">  ***</span>\n<span style=\"font-size:18px\">   *</span></pre>\n\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\n<span style=\"font-size:18px\"><strong>N = </strong>3</span>\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\n<span style=\"font-size:18px\">*****</span>\n<span style=\"font-size:18px\"> ***</span>\n<span style=\"font-size:18px\">  *</span></pre>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>invIsoTriangle()</strong> which takes an Integer N as input and returns a vector of strings where each line represents lines of the pattern. For example, if N=2, the vector v = {&quot;***&quot;, &quot; * &quot;}.</span></p>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(N)<br />\n<strong>Expected Auxiliary Space:</strong> O(N)</span></p>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong></span><br />\n<span style=\"font-size:18px\">1 &lt;= N &lt;= 100</span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an integer N, generate an inverted isosceles triangle pattern of stars. The height of the triangle should be equal to N. The pattern should be returned as a vector of strings, where each string represents a line of the triangle.",
                "constraints": [
                    "1 <= N <= 100"
                ],
                "testcases": [
                    {
                        "input": "4",
                        "output": [
                            "*******",
                            " *****",
                            "  ***",
                            "   *"
                        ],
                        "explanation": "The height of the triangle is 4. The base of the triangle has 2*N - 1 = 7 stars. Each subsequent row has 2 less stars and is indented by one space."
                    },
                    {
                        "input": "3",
                        "output": [
                            "*****",
                            " ***",
                            "  *"
                        ],
                        "explanation": "The height of the triangle is 3. The base of the triangle has 2*N - 1 = 5 stars. Each subsequent row has 2 less stars and is indented by one space."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "pattern-printing",
                "slug": "pattern-printing"
            }
        ],
        "companies": [
            "adobe"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nclass Solution {\n  public:\n    // Function to generate inverted isosceles triangle pattern\n    vector<string> invIsoTriangle(int N) {\n        \n        vector<string> ans;\n        \n        // Loop to iterate over rows of the triangle\n        for(int i=N; i>=1; i--)\n        {\n            int x = 2*i-1; // Number of stars in each row\n            int y = N-i; // Number of spaces before stars in each row\n            \n            string s; // String to store each row\n            \n            // Loop to add spaces before stars\n            for(int i=0; i<y; i++)\n                s += \" \";\n            \n            // Loop to add stars\n            for(int i=0; i<x; i++)\n                s += \"*\";\n            \n            // Loop to add spaces after stars\n            for(int i=0; i<y; i++)\n                s += \" \";\n            \n            ans.push_back(s); // Add the row to the answer vector\n        }\n        \n        return ans; // Return the inverted isosceles triangle pattern\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\r\n\r\nclass Solution\r\n{\r\n    //Complete this function\r\n    //Function to generate inverted isosceles triangle pattern.\r\n    public List<string> invIsoTriangle(int N)\r\n    {\r\n        List<string> ans = new List<string>();\r\n        \r\n        // Loop to iterate over rows of the triangle\r\n        for(int i=N; i>=1; i--)\r\n        {\r\n            int x = 2*i-1; // Number of stars in each row\r\n            int y = N-i; // Number of spaces before stars in each row\r\n            \r\n            string s = \"\"; // String to store each row\r\n            \r\n            // Loop to add spaces before stars\r\n            for(int j=0; j<y; j++)\r\n                s += \" \";\r\n            \r\n            // Loop to add stars\r\n            for(int j=0; j<x; j++)\r\n                s += \"*\";\r\n            \r\n            // Loop to add spaces after stars\r\n            for(int j=0; j<y; j++)\r\n                s += \" \";\r\n            \r\n            ans.Add(s); // Add the row to the answer list\r\n        }\r\n        \r\n        return ans; // Return the inverted isosceles triangle pattern\r\n    }\r\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}