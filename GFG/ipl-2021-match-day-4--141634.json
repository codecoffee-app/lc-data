{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 707049,
            "title": "IPL 2021 - Match Day 4",
            "titleSlug": "ipl-2021-match-day-4--141634",
            "content": "<p><span style=\"font-size:18px\">Due to the rise of covid-19 cases in India, this year BCCI decided to organize knock-out matches in IPL rather than a league. </span></p>\r\n\r\n<p><span style=\"font-size:18px\">Today is matchday 4 and it is between one-time champions Rajasthan Royals and the team lead by the Youngest Captian - Delhi Capitals. As this match is very crucial, Rahul Tewatia, Rajasthan Royals all-rounder wants to hit six sixes in an over.&nbsp; But he knows that he can only hit six sixes if he finds the maximum AND value that can be generated by any pair of elements from the given array. Help Tewatia to find the answer.</span></p>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Note:</strong> AND is a bitwise &#39;<strong>&amp;&#39;</strong> operator. </span></p>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input</strong>: \r\nN = 4</span>\r\n<span style=\"font-size:18px\">arr[] = {4, 8, 12, 16}\r\n<strong>Output</strong>: 8<strong>\r\nExplanation:\r\n</strong>Pair (8, 12) has the <em>Maximum</em> AND <em>Value</em>&nbsp;8.</span>\r\n</pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:\r\n</strong>N = 4</span>\r\n<span style=\"font-size:18px\">arr[] = {4, 8, 16, 2}\r\n<strong>Output</strong>: 0\r\n<strong>Explanation</strong>: <em>Maximum</em> AND <em>Value</em> is 0.</span></pre>\r\n\r\n<div><br />\r\n<span style=\"font-size:18px\"><strong>Your Task:&nbsp;</strong></span></div>\r\n\r\n<div><span style=\"font-size:18px\">You don&#39;t need to read input or print anything. Your&nbsp;task is to complete the function <strong>maxAND</strong>() which takes the array elements and N (size of the array) as input parameters and returns the maximum AND value generated by any pair in the array. </span><br />\r\n<br />\r\n<span style=\"font-size:18px\"><strong>Constraints:</strong></span><br />\r\n<span style=\"font-size:18px\">1 </span> <span style=\"font-size:18px\">&le;</span> <span style=\"font-size:18px\"> N </span> <span style=\"font-size:18px\">&le;</span> <span style=\"font-size:18px\"> 10<sup>5</sup></span><br />\r\n<span style=\"font-size:18px\">1 </span> <span style=\"font-size:18px\">&le;</span> <span style=\"font-size:18px\"> arr[i] </span> <span style=\"font-size:18px\">&le;</span> <span style=\"font-size:18px\"> 10<sup>5</sup></span></div>\r\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Rahul Tewatia, a Rajasthan Royals all-rounder, aims to hit six sixes in an over during a crucial IPL knockout match against Delhi Capitals. To achieve this, he needs to find the maximum bitwise AND value achievable from any pair of numbers within a given array.  Your task is to help him determine this maximum AND value.",
                "constraints": [
                    "1 <= N <= 10^5 (where N is the size of the array)",
                    "1 <= arr[i] <= 10^5 (where arr[i] is an element of the array)"
                ],
                "testcases": [
                    {
                        "input": "N = 4\narr[] = {4, 8, 12, 16}",
                        "output": "8",
                        "explanation": "The pair (8, 12) yields the maximum bitwise AND value of 8 (8 & 12 = 8)."
                    },
                    {
                        "input": "N = 4\narr[] = {4, 8, 16, 2}",
                        "output": "0",
                        "explanation": "The maximum bitwise AND value achievable from any pair in the array is 0."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:14px\">You can use the properties of AND operator. Start from MSB and check to get maximum.</span></p>",
            "<p><span style=\"font-size:14px\">Idea is based on properties of AND operator. AND operation of any two bits result in 1 if&nbsp;both bits are 1.</span></p>\n\n<p><span style=\"font-size:14px\">We start from the MSB and check whether we have minimum of two elements of array having set value. If yes then that MSB will be part of our solution and be added to result otherwise we will discard that bit.</span></p>\n\n<p><span style=\"font-size:14px\">Similary, iterating from MSB to LSB (16&nbsp;to 1) for bit position we can easily check which bit will be part of our solution and will keep adding all such bits to our solution.</span></p>",
            "<p><span style=\"font-size:14px\">Algorithm:</span></p>\n\n<p><span style=\"font-size:14px\"><strong>1</strong>: Write Bit-representation of each element :<br />\n4 = 100, 8 = 1000, 12 = 1100, 16 = 10000<br />\n<strong>2</strong>: Check for 1st MSB , pattern = 0 + 16 = 16. Now 5th bit in 16 is set but no other element has 5-bit as set bit so this will not add up to our RES, still RES = 0 and pattern = 0<br />\n<strong>3: </strong>Check 4th bit, pattern = 0 + 8 = 8. Now 8 and 12 both have set bit on 4th bit position so that will add up in our solution, RES = 8 and pattern = 8<br />\n<strong>4: </strong>Check 3rd bit, pattern = 8 + 4 = 12. Now only 12 has both bits set bit (same as pattern) so we will discard 3rd bit, RES = 8 and pattern = 8<br />\n<strong>5:</strong> Check 2nd bit, pattern = 8 + 2 = 10. No element has set bit same as pattern so we will discard 2nd bit, RES = 8 and pattern = 8<br />\n<strong>4:</strong> Check 1st bit, pattern = 8 + 1 = 9. No element has set bit same as pattern so we will discard 1st bit, RES = 8 and pattern = 8</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Bit Magic",
                "slug": "bit-magic"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [
            "microsoft"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\r\n\r\nclass Solution\r\n{\r\n    public:\r\n    //Function to check number of elements in an array\r\n    //having set MSB as of pattern.\r\n    int checkBit(int pattern, int arr[], int n)\r\n    {\r\n        int count = 0;\r\n        //iterating over all elements in array.\r\n        for (int i = 0; i < n; i++)\r\n        //incrementing counter if element has set MSB as of pattern.\r\n            if ((pattern & arr[i]) == pattern)\r\n                count++;\r\n                \r\n        //returning the number of element having set MSB as of pattern.\r\n        return count;\r\n    }\r\n     \r\n    // Function for finding maximum AND value.\r\n    int maxAND (int arr[], int n)\r\n    {\r\n        int res = 0, count;\r\n     \r\n        //iterating over total of 16 bits from MSB to LSB.\r\n        for (int bit = 16; bit >= 0; bit--)\r\n        {\r\n            //finding the count of element in the array \r\n            //having set MSB as of [res | (1 << bit)].\r\n            count = checkBit(res | (1 << bit),arr,n);\r\n     \r\n            //if count >= 2 setting particular bit in result.\r\n            if ( count >= 2 )\r\n                res |= (1 << bit);\r\n        }\r\n        \r\n        //returning the final maximum AND value.\r\n        return res;\r\n    }\r\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\r\n\r\nclass AND{\r\n    \r\n    //Function to check number of elements in an array \r\n    //having set MSB as of pattern.\r\n    public static int checkBit(int pattern, int arr[], int n) {\r\n        int count = 0;\r\n        //iterating over all elements in array.\r\n        for (int i = 0; i < n; i++){\r\n            //incrementing counter if element has set MSB as of pattern.\r\n            if ((pattern & arr[i]) == pattern){\r\n                count++;\r\n            }\r\n        }\r\n        \r\n        //returning the number of element having set MSB as of pattern.\r\n        return count;\r\n    }\r\n    \r\n    // Function for finding maximum AND value.\r\n    public static int maxAND (int arr[], int n) {\r\n        int res = 0, count;\r\n        //iterating over total of 16 bits from MSB to LSB.\r\n        for (int bit = 16; bit >= 0; bit--) {\r\n            \r\n            //finding the count of element in the array\r\n            //having set MSB as of [res | (1 << bit)].\r\n            count = checkBit(res | (1 << bit), arr, n);\r\n            \r\n            //if count >= 2 setting particular bit in result.\r\n            if( count >= 2 ){\r\n                res |= (1 << bit);\r\n            }\r\n        }\r\n        //returning the final maximum AND value.\r\n        return res;\r\n    }\r\n    \r\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\r\n\r\nclass Solution:\r\n    #function to check number of elements in an array \r\n    #having set MSB as of pattern.\r\n    def checkBit(self, pattern, arr,n):\r\n        count=0\r\n        \r\n        #iterating over all elements in array.\r\n        for i in range(0,n):\r\n            #incrementing counter if element has set MSB as of pattern.\r\n            if((pattern&arr[i])==pattern):\r\n                count+=1\r\n                \r\n        #returning the number of element having set MSB as of pattern.        \r\n        return count\r\n    \r\n    # Function for finding maximum AND value.\r\n    def maxAND(self, arr,n):\r\n        res=0\r\n        \r\n        #iterating over total of 16 bits from MSB to LSB.\r\n        for bit in range(16,-1,-1):\r\n            #finding the count of element in the array \r\n            #having set MSB as of [res | (1 << bit)].\r\n            count=self.checkBit(res|(1<<bit),arr,n)\r\n            \r\n            #if count >= 2 setting particular bit in result.\r\n            if count>=2:\r\n                res|=(1<<bit)\r\n                \r\n        #returning the final maximum AND value.\r\n        return res\r\n        ",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "//Back-end complete function Template for javascript\r\n\r\n/**\r\n * @param {number[]} arr\r\n * @param {number} n\r\n * @returns {number}\r\n*/\r\nclass Solution {\r\n    \r\n    //function to check number of elements in an array\r\n    //having set MSB as of pattern.\r\n    checkBit(pattern, arr, n)\r\n    {\r\n        let count = 0, i;\r\n        //iterating over all elements in array.\r\n        for (i = 0; i < n; i++)\r\n            //incrementing counter if element has set MSB as of pattern.\r\n            if ((pattern & arr[i]) == pattern)\r\n                count++;\r\n                \r\n        //returning the number of element having set MSB as of pattern.\r\n        return count;\r\n    }\r\n    \r\n    // Function for finding maximum AND value.\r\n    maxAND(arr, n)\r\n    {\r\n        let res = 0, count, bit;\r\n \r\n        //iterating over total of 16 bits from MSB to LSB.\r\n        for (bit = 16; bit >= 0; bit--)\r\n        {\r\n            //finding the count of element in the array \r\n            //having set MSB as of [res | (1 << bit)].\r\n            count = this.checkBit(res | (1 << bit),arr,n);\r\n     \r\n            //if count >= 2 setting particular bit in result.\r\n            if ( count >= 2 )\r\n                res |= (1 << bit);\r\n        }\r\n        //returning the final maximum AND value.\r\n        return res;\r\n    }\r\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}