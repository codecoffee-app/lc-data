{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704023,
            "title": "Is digital root of N a prime?",
            "titleSlug": "is-digital-root-of-n-a-prime2522",
            "content": "<p><span style=\"font-size:18px\">Given a number N, you need to find if its digital root is prime or not. DigitalRoot of a number is the repetitive sum of its digits until we get a single-digit number.<br />\nEg.DigitalRoot(191)=1+9+1=&gt;11=&gt;1+1=&gt;2</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\nN = 89</span>\n<span style=\"font-size:18px\"><strong>Output:</strong>\n0</span>\n<span style=\"font-size:18px\"><strong>Explanation:</strong>\nDigitalRoot(89)=&gt;17=&gt;1+7=&gt;8; not a prime.</span></pre>\n\n<p><strong><span style=\"font-size:18px\">Example 2:</span></strong></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\nN = 12</span>\n<span style=\"font-size:18px\"><strong>Output:</strong>\n1</span>\n<span style=\"font-size:18px\"><strong>Explanation:</strong>\nDigitalRoot(12)=&gt;1+2=&gt;3; a prime number.</span></pre>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:&nbsp;&nbsp;</strong><br />\nYou don&#39;t need to read input or print anything. Your task is to complete the function&nbsp;<strong>digitalRoot()</strong>&nbsp;which takes an integer N as an input parameter and return 1 if its digital root is a prime number otherwise return 0.<br />\n<br />\n<strong>Expected Time Complexity:</strong>&nbsp;O(1)<br />\n<strong>Expected Auxiliary Space:</strong>&nbsp;O(1)</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\n1 &lt;= N &lt;= 10<sup>4</sup></span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a number N, determine if its digital root is a prime number. The digital root is calculated by repeatedly summing the digits of a number until a single-digit number is obtained. If the digital root is prime, return 1; otherwise, return 0.",
                "constraints": [
                    "1 <= N <= 10000"
                ],
                "testcases": [
                    {
                        "input": "89",
                        "output": "0",
                        "explanation": "The digital root of 89 is calculated as follows: 8 + 9 = 17, then 1 + 7 = 8.  Since 8 is not a prime number, the output is 0."
                    },
                    {
                        "input": "12",
                        "output": "1",
                        "explanation": "The digital root of 12 is calculated as follows: 1 + 2 = 3. Since 3 is a prime number, the output is 1."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Try to find the digital root of an integer N in O(1). Observe some pattern with the modulo.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution\n{\npublic:\n    // Function to calculate digital root\n    int digitalRoot(int N)\n    {\n        // Array to store if the number is prime or not\n        int prime[10]={0,0,1,1,0,1,0,1,0,0};\n        \n        // Calculating the digital root using the formula\n        int root=1+(N-1)%9;\n        \n        // Checking if the digital root is prime or not\n        if(prime[root]==1)\n            return 1;\n        else\n            return 0;\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}