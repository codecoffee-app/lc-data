{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703736,
            "title": "Ishaan's Birthday",
            "titleSlug": "ishaans-birthday4141",
            "content": "<p><span style=\"font-size:18px\">Given a List <strong>Arr,</strong> of 26 integers denoting the number of Alphabets of each type. You have to make all alphabets same. Exchanging an alphabet with another costs the difference in their ASCII value. For example, to exchange A with C, it will cost him 67-65 = 2.<br />\nCalculate the minimum amount you must spend to make all the alphabets same.</span></p>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1: </strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\n<strong>Arr = </strong>{2 3 4 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0}\n<strong>Output:</strong>\n6\n<strong>Explanation:</strong>\nExchanging all the alphabets to B\nwill cost the minimum.\nExchanging 2 A&#39;s for B&#39;s: 2*(66-65)=2\nExchanging 4 C&#39;s for B&#39;s: 4* (67-66)=4\nTotal cost = 6</span></pre>\n\n<p><span style=\"font-size:18px\"><strong>Example 2: </strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\n<strong>Arr =</strong> { 3 4 0 0 0 0 0 0 6 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 }\n<strong>Output:</strong>\n45\n<strong>Explanation:</strong>\nExchanging all the alphabets to B\nwill cost the minimum.\nExchanging 3 A&#39;s for B&#39;s: 3*(66-65)= 3\nExchanging 6 I&#39;s for B&#39;s: 6*(73-66)= 42\nTotal cost = 45 </span>\n</pre>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>getMinCost()</strong> which takes an Array/List Arr as input and return an answer.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(|Arr|<sup>2</sup>)<br />\n<strong>Expected Auxiliary Space:</strong> O(1)</span></p>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong></span><br />\n<span style=\"font-size:18px\">1 &lt;= Total number of alphabets &lt;= 26*(10^5)</span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a list `Arr` of 26 integers, where each integer represents the number of occurrences of a corresponding alphabet (A-Z). The goal is to make the number of occurrences of all alphabets equal.  Changing one alphabet to another incurs a cost equal to the absolute difference in their ASCII values. Calculate the minimum total cost to achieve this.",
                "constraints": [
                    "1 <= Total number of alphabets <= 26 * (10^5)"
                ],
                "testcases": [
                    {
                        "input": "{2 3 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0}",
                        "output": "6",
                        "explanation": "The minimum cost is achieved by converting all alphabets to 'B'. Converting 2 'A's to 'B' incurs a cost of 2 * (66 - 65) = 2. Converting 4 'C's to 'B' incurs a cost of 4 * (67 - 66) = 4. The total cost is 2 + 4 = 6."
                    },
                    {
                        "input": "{ 3 4 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }",
                        "output": "45",
                        "explanation": "The minimum cost is achieved by converting all alphabets to 'B'. Converting 3 'A's to 'B' incurs a cost of 3 * (66 - 65) = 3. Converting 6 'I's to 'B' incurs a cost of 6 * (73 - 66) = 42. The total cost is 3 + 42 = 45."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">To find out the minimum cost, we will check for each alphabet (i.e. to convert all alphabets to this alphabet what is the cost)&nbsp;and select the lowest cost of those. </span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    long long getMinCost(long long arr[26]) {\n        \n        long long ans = 1e18;     // Declaring ans as a large value because we have to get minimum cost.\n        \n        for(int i=0 ; i<26 ; i++)\n        {\n            long long cost=0;\n            for(int j=0 ; j<26 ; j++)\n                cost+=arr[j]*abs(i-j);    // Finding Cost for each alpahabet\n            ans=min(ans,cost);            // Getting the minimum of all costs\n        }\n        \n        return ans;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\nclass Solution {\n    static Long getMinCost(int[] arr) {\n        Long ans = 1000000000000000000L;   // Declaring ans as a large value because we have to get minimum cost.\n        \n        for(int i=0 ; i<26 ; i++)\n        {\n            Long cost=0L;\n            for(int j=0 ; j<26 ; j++)\n                cost+=arr[j]*Math.abs(i-j);    // Finding Cost for each alpahabet\n            ans=Math.min(ans,cost);            // Getting the Minimum of all costs\n        }\n        \n        return ans;\n    }\n};",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\nclass Solution:\n    def getMinCost(self , arr):\n        ans = 1e18;  # Declaring ans as a large value because we have to get minimum cost.\n        \n        for i in range(26):\n            cost=0\n            for j in range(26):\n                cost+=arr[j]*abs(i-j)    # Finding Cost for each alpahabet\n            ans=min(ans,cost)            # Getting Minimum of all costs\n        \n        return ans",
                "lang_text": "py"
            },
            {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n/**\n * @param {number[]} arr\n * @returns {number}\n*/\n\nclass Solution {\n    //Function to get minimum cost.\n    getMinCost(arr) {\n        let ans = 1e18;  // Declaring ans as a large value because we have to get minimum cost.\n\n        for (let i = 0; i < 26; i++) {\n            let cost = 0;\n            for (let j = 0; j < 26; j++) {\n                cost += arr[j] * Math.abs(i - j);    // Finding Cost for each alphabet\n            }\n            ans = Math.min(ans, cost);            // Getting Minimum of all costs\n        }\n\n        return ans;\n    }\n}",
                "lang_text": "javascript"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    //Function to get the minimum cost.\n    public long getMinCost(long[] arr)\n    {\n        long ans = (long)Math.Pow(10, 18);     // Declaring ans as a large value because we have to get minimum cost.\n\n        for(int i=0 ; i<26 ; i++)\n        {\n            long cost=0;\n            for(int j=0 ; j<26 ; j++)\n                cost+=arr[j]*Math.Abs(i-j);    // Finding Cost for each alphabet\n            ans=Math.Min(ans,cost);            // Getting the minimum of all costs\n        }\n\n        return ans;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}