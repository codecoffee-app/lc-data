{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703662,
            "title": "Bitwise OR in a given Range",
            "titleSlug": "ishaans-curiosity0853",
            "content": "<p><span style=\"font-size:20px\">Given 2 integers L, R as input, and find the <strong>bitwise OR</strong> of all the integers in the range [L, R] (both inclusive).</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input: </strong>L = 3, R = 8\n<strong>Output:</strong> 15\n<strong>Explanation</strong>: 3|4|5|6|7|8 = 15 </span></pre>\n\n<p><span style=\"font-size:18px\">\u00e2\u20ac\u2039<strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input</strong>: L = 12, R = 18\n<strong>Output:</strong> 31\n<strong>Explanation</strong>: 12|13|14|15|16|17|18 = 31</span></pre>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:&nbsp;&nbsp;</strong><br />\nYou don&#39;t need to read input or print anything. Your task is to complete the function&nbsp;<strong>findBitwiseOR()</strong>&nbsp;which takes the <strong>L</strong> and <strong>R&nbsp;</strong>as inputs and returns the answer.<br />\n<br />\n<strong>Expected Time Complexity:</strong>&nbsp;O(log R)<br />\n<strong>Expected Auxiliary Space:</strong>&nbsp;O(1)<br />\n<br />\n<strong>Constraints:</strong><br />\n1 &le; L &le; R&nbsp;&le; 10<sup>12</sup></span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two integers, L and R, find the bitwise OR of all integers within the inclusive range [L, R].",
                "constraints": [
                    "1 <= L <= R <= 10^12"
                ],
                "testcases": [
                    {
                        "input": "L = 3, R = 8",
                        "output": "15",
                        "explanation": "The bitwise OR of 3, 4, 5, 6, 7, and 8 is 15. (3 | 4 | 5 | 6 | 7 | 8 = 15)"
                    },
                    {
                        "input": "L = 12, R = 18",
                        "output": "31",
                        "explanation": "The bitwise OR of 12, 13, 14, 15, 16, 17, and 18 is 31. (12 | 13 | 14 | 15 | 16 | 17 | 18 = 31)"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<ol>\n\t<li>Find the position of Most Significant Bit (MSB) in both the numbers (L and R)</li>\n\t<br />\n\t<li>If the position of both MSBs are different, set all the bits from the max(MSB1, MSB2) including this different bit upto Oth bit i.e. add the value (1 &lt;&lt; i) for all 0 &le; i &le; max(MSB1, MSB2) in the answer.</li>\n\t<li>If the position of both MSBs are same, then\n\t<ul>\n\t\t<li>Set this bit corresponding to MSB or add the value (1 &lt;&lt; MSB) in the answer.</li>\n\t\t<li>Subtract the value (1 &lt;&lt; MSB) from both the numbers (L and R).</li>\n\t\t<br />\n\t\t<li>Repeat the steps 1, 2 and 3.</li>\n\t</ul>\n\t</li>\n</ol>"
        ],
        "relatedTopics": [
            {
                "name": "Bit Magic",
                "slug": "bit-magic"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function template for C++\n\nclass Solution{\npublic:\n\tint MSBPosition(long long int N) { \n\t    int msb_p = -1; \n\t    while (N) { \n\t        N = N >> 1; \n\t        msb_p++; \n\t    } \n\t    return msb_p; \n\t} \npublic:  \n\t// Returns the Bitwise OR of all \n\t// integers between L and R \n\tlong long int findBitwiseOR(long long int L, long long int R) {\n\t    if(L == R) return L;\n\t    long long a = L, b = R;\n\t    long long aa[50] = {0} ,bb[50] = {0};\n\t        int i=0;\n\t        long long ans=0;\n\t        while(a || b){\n\t            aa[i]=a%2;\n\t            bb[i]=b%2;\n\t            i++;\n\t            a/=2;\n\t            b/=2;\n\t        }\n\t        for(int j=i-1;j>=0;j--){\n\t            if(aa[j]==bb[j]){\n\t                ans+=bb[j]*(1LL << j);\n\t            }\n\t            else{\n\t                ans+=(1LL << (j + 1))-1;\n\t                break;\n\t            }\n\t        }\n\t        return ans;\n\t} \n\n\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            },
            {
                "lang": "C#",
                "full_func": "//User function template for C#\nclass Solution{\n    \n    public long findBitwiseOR(long L, long R){\n        if(L == R) return L;\n        long a = L, b = R;\n        long[] aa = new long[50];\n        long[] bb = new long[50];\n        int i=0;\n        long ans=0;\n        while(a != 0 || b != 0){\n            aa[i]=a%2;\n            bb[i]=b%2;\n            i++;\n            a/=2;\n            b/=2;\n        }\n        for(int j=i-1;j>=0;j--){\n            if(aa[j]==bb[j]){\n                ans+=bb[j]*(1L << j);\n            }\n            else{\n                ans+=(1L << (j + 1))-1;\n                break;\n            }\n        }\n        return ans;\n    }\n\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}