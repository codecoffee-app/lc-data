{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 702895,
            "title": "Ishwar and his proposals",
            "titleSlug": "ishwar-and-his-proposals1140",
            "content": "<p><span style=\"font-size:18px\">Ishwar has got proposals from N girls. Each girl gives him a rose with a number written on it where the number represents the popularity of that&nbsp;girl. Ishwar decides that he&#39;ll accept the proposal of the second most popular and the second least popular girl only. Can you help him finding the popularity of those girls?<br />\nNote: The popularity of all the girls are unique.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\nN = 4\narr[] = {1 2 3 4}\n<strong>Output:</strong> 3 2\n<strong>Explanation</strong>: 3 represents the popularity\nof the second most popular girl and 2\nrepresents the popularity of second\nleast popular girl.\n</span></pre>\n\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\nN = 5\narr[] = {6 9 1 4 8}\n<strong>Output:</strong> 8 4\n<strong>Explanation</strong>: 8 represents the popularity\nof the second most popular girl and 4\nrepresents the popularity of second\nleast popular girl.</span></pre>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nYou don&#39;t need to read input or print anything. Your task is to complete the function&nbsp;<strong>acceptedProposals()&nbsp;</strong>which takes the array arr[] and its size N as inputs and returns an array of size 2 where the 0-th element represents the popularity of the second most popular girl and the 1-st element represents the popularity of the second least popular girl.</span></p>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Expected Time Complexity:&nbsp;</strong>O(N).<br />\n<strong>Expected Auxiliary Space:&nbsp;</strong>O(1).</span></p>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Constraint:</strong><br />\n2 &lt;= N &lt;= 10<sup>5</sup><br />\n1 &lt;= popularity &lt;= 10<sup>6</sup></span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Ishwar has received proposals from N girls, each offering a rose with a number representing her popularity. Ishwar will only accept the proposals from the second most popular and the second least popular girls. Given the popularity scores of all girls, can you determine the popularity scores of these two girls?",
                "constraints": [
                    "2 <= N <= 10^5",
                    "1 <= popularity <= 10^6"
                ],
                "testcases": [
                    {
                        "input": "N = 4\narr[] = {1 2 3 4}",
                        "output": "3 2",
                        "explanation": "The second most popular girl has a popularity of 3, and the second least popular girl has a popularity of 2."
                    },
                    {
                        "input": "N = 5\narr[] = {6 9 1 4 8}",
                        "output": "8 4",
                        "explanation": "The second most popular girl has a popularity of 8, and the second least popular girl has a popularity of 4."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>A naive approach would be to sort the array and then report the second minimum and the second maximum element of the array.<br />\nBut, can you do it without actually sorting the array in a single O(N) traversal?</p>\n\n<p>Store the 4 variables: mx, mx2, mn, mn2 where:<br />\nmx = maximum&nbsp;<br />\nmx2 = second maximum&nbsp;<br />\nmn = minimum<br />\nmn2 = second minimum</p>\n\n<p>How will you update the variables as you encounter new array elements?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "\nclass Solution\n{\n  public:\n    //Back-end complete function Template for C++\n\n    vector <int> acceptedProposals (vector <int> &arr, int n)\n    {\n        // mx = maximum \n        // mx2 = second maximum \n        // mn = minimum \n        // mn2 = second minimum\n        int mx = INT_MIN, mx2 = INT_MIN, mn = INT_MAX, mn2 = INT_MAX;\n    \n    \tfor (int i = 0; i < n; ++i)\n    \t{\n    \t\tif (arr[i] > mx)\n    \t\t{\n    \t\t\tmx2 = mx;\n    \t\t\tmx = arr[i];\n    \t\t}\n    \t\telse if (arr[i] > mx2)\n    \t\t\tmx2 = arr[i];\n    \n    \t\tif (arr[i] < mn)\n    \t\t{\n    \t\t\tmn2 = mn;\n    \t\t\tmn = arr[i];\n    \t\t}\n    \t\telse if (arr[i] < mn2)\n    \t\t\tmn2 = arr[i];\n    \t}\n    \n    \tvector <int> res (2);\n    \tres[0] = mx2;\n    \tres[1] = mn2;\n    \treturn res;\n    }\n\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\nclass Solution\n{\n    ArrayList <Integer> acceptedProposals (int arr[], int n)\n    {\n        // mx = maximum \n        // mx2 = second maximum \n        // mn = minimum \n        // mn2 = second minimum\n        int mx = -10000000, mx2 = -10000000, mn = 10000000, mn2 = 10000000;\n    \n    \tfor (int i = 0; i < n; ++i)\n    \t{\n    \t\tif (arr[i] > mx)\n    \t\t{\n    \t\t\tmx2 = mx;\n    \t\t\tmx = arr[i];\n    \t\t}\n    \t\telse if (arr[i] > mx2)\n    \t\t\tmx2 = arr[i];\n    \n    \t\tif (arr[i] < mn)\n    \t\t{\n    \t\t\tmn2 = mn;\n    \t\t\tmn = arr[i];\n    \t\t}\n    \t\telse if (arr[i] < mn2)\n    \t\t\tmn2 = arr[i];\n    \t}\n    \n    \tArrayList <Integer> res = new ArrayList <Integer> (0);\n    \tres.add (mx2);\n    \tres.add (mn2);\n    \treturn res;\n    }\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\nclass Solution:\n    def acceptedProposals (self, arr, n):\n        # mx = maximum \n        # mx2 = second maximum \n        # mn = minimum \n        # mn2 = second minimum\n        \n        mx = -10000000\n        mx2 = -10000000\n        mn = 10000000\n        mn2 = 10000000\n        \n        for i in range (n):\n            if arr[i] > mx:\n                mx2 = mx\n                mx = arr[i]\n            elif arr[i] > mx2:\n                mx2 = arr[i]\n                \n            if arr[i] < mn:\n                mn2 = mn\n                mn = arr[i]\n            elif arr[i] < mn2:\n                mn2 = arr[i]\n                \n        res = []\n        res.append (mx2)\n        res.append (mn2)\n        \n        return res",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n/**\n * @param {number[]} arr\n * @param {number} n\n * @returns {number[]}\n*/\n\nclass Solution\n{\n    //Function to find the maximum sum of any subarray of size K.\n    acceptedProposals(arr, n)\n    {\n        let mx = -10000000;\n        let mx2 = -10000000;\n        let mn = 10000000;\n        let mn2 = 10000000;\n\n        for(let i = 0; i < n; i++){\n            if(arr[i] > mx){\n                mx2 = mx;\n                mx = arr[i];\n            }else if(arr[i] > mx2){\n                mx2 = arr[i];\n            }\n            \n            if(arr[i] < mn){\n                mn2 = mn;\n                mn = arr[i];\n            }else if(arr[i] < mn2){\n                mn2 = arr[i];\n            }\n        }\n        \n        let res = [];\n        res.push(mx2);\n        res.push(mn2);\n        \n        return res;\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}