{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705891,
            "title": "Java Collection | Set 1 (ArrayList) Part-1",
            "titleSlug": "java-arraylist5312",
            "content": "<p><span style=\"font-size:18px\">ArrayList are dynamic size arrays. Try this problem using ArrayList.</span></p>\n\n<p><span style=\"font-size:18px\">Given a ArrayList of <strong>N</strong>&nbsp;elements and a integer <strong>Q</strong>&nbsp;defining the type of query(which will be either 1 or 2) :<br />\n<strong>Q = 1</strong> includes two integers <strong>p</strong> and <strong>r</strong>. Which means insert the&nbsp;value r at index p in the ArrayList and print the whole updated ArrayList.<br />\n<strong>Q =&nbsp;2</strong> includes one integer <strong>p</strong>. In this query print the index at which the value p is last found in the ArrayList. If the value p is not found in the ArrayList then print &quot;<strong>-1</strong>&quot;.&nbsp;</span></p>\n\n<p><span style=\"font-size:18px\"><strong>NOTE: Assume 0 based indexing</strong></span></p>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\n<span style=\"font-size:18px\">N = 5, Q = 1 </span>\n<span style=\"font-size:18px\">A[] = {1, 4, 5, 9, 3} </span>\n<span style=\"font-size:18px\">Query[] = {2, 6} </span>\n<span style=\"font-size:18px\"><strong>Output:</strong> </span>\n<span style=\"font-size:18px\">1 4 6 5 9 3 \n<strong>Explanation: </strong>\np=Query[0]=2 \nr=Query[1]=6 \nAfter inserting the element \nr=6 at index p=2 ,the updated \narraylist ={1,4,6,5,9,3}</span></pre>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\nN = 4 , Q = 2\nA[]= {1, 9, 2, 4}\nQuery[]= {4}\n<strong>Output:</strong>\n3 \n<strong>Explanation: \n</strong>p = 4 \nThe element 4 is last found\nin A at index = 3   </span></pre>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:&nbsp;</strong><br />\nYou don&#39;t need to read input or print anything. Your task is to complete the function<strong>&nbsp;solve()</strong>&nbsp;which takes the <strong>N&nbsp;</strong>(number of elements in Array A) ,ArrayList <strong>A</strong>, <strong>Q</strong>(Type of the&nbsp;of query)&nbsp;and the ArrayList <strong>Query</strong>. If the Q = 1 then return the updated ArrayList of integers. else return the ArrayList which contains the index at which the value p is last found in the ArrayList A&nbsp;(where p = Query[0] )&nbsp;,If the value of p is not found then return the ArrayList which contains -1.&nbsp;</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong>&nbsp;O(N)<br />\n<strong>Expected Auxiliary Space:</strong>&nbsp;O(N)</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\n1 &lt;= N &lt;= 10<sup>4</sup></span><br />\n<span style=\"font-size:18px\">1 &lt;= Q &lt;= 2</span><br />\n<span style=\"font-size:18px\">If Q = 1 then size of Query is 2 ,</span><br />\n<span style=\"font-size:18px\">where Query[0] represents the value of p and Query[0] represents the value of r.</span><br />\n<span style=\"font-size:18px\">If Q = 2 then size of Query is 1 ,</span><br />\n<span style=\"font-size:18px\">where Query[0] represents the value of p.</span><br />\n<span style=\"font-size:18px\">1 &lt;= A[i] &lt;= 10<sup>3</sup></span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "You are given a dynamic-size array (ArrayList) A of N integers and an integer Q representing a query type.  Implement a function `solve` that handles two types of queries:\n\n*   **Q = 1:**  Insert the integer `r` at index `p` in the ArrayList A. Return the updated ArrayList.\n*   **Q = 2:** Find the last occurrence of the integer `p` in the ArrayList A. Return an ArrayList containing the index of the last occurrence. If `p` is not found, return an ArrayList containing only -1.\n\n**Note:** Use 0-based indexing.",
                "constraints": [
                    "1 <= N <= 10<sup>4</sup>",
                    "1 <= Q <= 2",
                    "If Q = 1, then Query contains two integers: p (index) and r (value to insert).",
                    "If Q = 2, then Query contains one integer: p (value to search).",
                    "1 <= A[i] <= 10<sup>3</sup>"
                ],
                "testcases": [
                    {
                        "input": "N = 5, Q = 1\nA = [1, 4, 5, 9, 3]\nQuery = [2, 6]",
                        "output": "[1, 4, 6, 5, 9, 3]",
                        "explanation": "The query is of type 1. We insert the value 6 at index 2 in the ArrayList A. The updated ArrayList is [1, 4, 6, 5, 9, 3]."
                    },
                    {
                        "input": "N = 4, Q = 2\nA = [1, 9, 2, 4]\nQuery = [4]",
                        "output": "[3]",
                        "explanation": "The query is of type 2. We search for the last occurrence of the value 4 in the ArrayList A. The last occurrence is at index 3."
                    },
                    {
                        "input": "N = 3, Q = 2\nA = [1, 2, 3]\nQuery = [5]",
                        "output": "[-1]",
                        "explanation": "The query is of type 2. We search for the last occurrence of the value 5 in the ArrayList A. The value 5 is not found in the ArrayList A, so we return an ArrayList containing -1."
                    },
                    {
                        "input": "N = 3, Q = 1\nA = [1, 2, 3]\nQuery = [0, 5]",
                        "output": "[5, 1, 2, 3]",
                        "explanation": "The query is of type 1. We insert the value 5 at index 0 in the ArrayList A. The updated ArrayList is [5, 1, 2, 3]."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Use inbuilt function of ArrayList to add the element at particular index.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Java",
                "slug": "java"
            },
            {
                "name": "Java-Collections",
                "slug": "java-collections"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "Java",
                "full_func": "class Solution \n{ \n    // Method to solve the given problem\n    // Takes in the size of array N, initial array A,\n    // number of queries Q, and the query list Query\n    ArrayList<Integer> solve(int N, ArrayList<Integer> A, int Q, ArrayList<Integer> Query) \n    { \n        // Initializing the answer list\n        ArrayList<Integer> ans = new ArrayList<Integer>();\n        \n        // Check if there is only one query\n        if(Q==1)\n        {\n            // Get the position and value from the query list\n            int p=Query.get(0);\n            int r=Query.get(1);\n            \n            // Insert the value at the specified position in the array\n            A.add(p,r);\n            \n            // Add all the elements of the array to the answer list\n            for(int i=0;i<=N;i++)\n            {\n                ans.add(A.get(i));\n            }\n        }\n        else\n        {\n            // Get the value from the query list\n            int p=Query.get(0);\n            \n            // Add the last index of the value in the array to the answer list\n            ans.add(A.lastIndexOf(p));\n        }\n        \n        // Return the answer list\n        return ans;\n    }\n}",
                "lang_text": "java"
            }
        ],
        "platform": "GFG"
    }
}