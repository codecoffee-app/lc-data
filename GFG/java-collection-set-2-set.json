{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 700369,
            "title": "Java Collection | Set 2 (Set)",
            "titleSlug": "java-collection-set-2-set",
            "content": "<p><span style=\"font-size:18px\">Implement different operations on a set&nbsp;s&nbsp;.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Input:</strong><br />\r\nThe first line of input contains an integer <strong>T</strong> denoting the no of test cases . Then T test cases follow. The first line of input contains an integer <strong>Q</strong> denoting the no of queries . Then in the next line are <strong>Q</strong>&nbsp;space separated queries .<br />\r\nA query can be of&nbsp;four&nbsp;types&nbsp;<br />\r\n<strong>1.</strong> a x (inserts an element x to the set s)<br />\r\n<strong>2.</strong> b (prints the contents of the set s in increasing order)<br />\r\n<strong>3.</strong> c x&nbsp;(erases an element x from the set s)<br />\r\n<strong>4.</strong> d x (prints 1 if the element x is present in the set&nbsp;else print -1)<br />\r\n<strong>5.</strong> e (prints the size of the set s)</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Output:</strong><br />\r\nThe output for each test case will&nbsp;&nbsp;be space separated integers denoting the results of each query . </span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n1 &lt;= T &lt;= 100<br />\r\n1 &lt;= Q &lt;= 100</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example:</strong></span><br />\r\n<span style=\"font-size:18px\"><strong>Input:</strong><br />\r\n2<br />\r\n6<br />\r\na 1 a 2 a 3 b c 2 b<br />\r\n5<br />\r\na 1 a 5 e d 5 d 2</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Output</strong>:<br />\r\n1 2 3 1 3<br />\r\n2 1 -1</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Explanation :<br />\r\nTestcase 1:</strong><br />\r\nThere are six&nbsp;queries.&nbsp;Queries&nbsp;are&nbsp;performed in this order<br />\r\n1. a 1 &nbsp; &nbsp; { insert 1 to set now set has {1}&nbsp;}<br />\r\n2. a 2 &nbsp; &nbsp; {inserts 2&nbsp;to set now set has {1,2}&nbsp;}<br />\r\n3. a 3 &nbsp; &nbsp; {inserts 3 to set now set has {1,2,3}&nbsp;}<br />\r\n4. b &nbsp; &nbsp; &nbsp; &nbsp;{prints the set contents ie 1,2,3}<br />\r\n5. c 2 &nbsp; &nbsp; {removes 2 from the set&nbsp;}<br />\r\n6. b &nbsp; &nbsp; &nbsp; &nbsp;{prints the set contents ie 1,3}<br />\r\n<br />\r\n<strong>Testcase 2:</strong><br />\r\nThere are five&nbsp;queries.&nbsp;Queries&nbsp;are&nbsp;performed in this order<br />\r\n1. a 1&nbsp; &nbsp; &nbsp;{inserts 1 to set now set has {1}}<br />\r\n2. a 11 &nbsp; {inserts 11 to set now set has {1,11}}<br />\r\n3. e&nbsp; &nbsp; &nbsp; &nbsp; {prints the size of the set ie 2}<br />\r\n4. d 5&nbsp; &nbsp; &nbsp;{since five is present prints 1}<br />\r\n5. d 2 &nbsp; &nbsp; {since 2 is not present in the set prints -1}</span><br />\r\n&nbsp;</p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Java",
                "slug": "java"
            },
            {
                "name": "Java-Collections",
                "slug": "java-collections"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "Java",
                "full_func": "class GfG {\n    // method to insert an element into the set\n    void insert(Set<Integer> s, int x) {\n        s.add(x);\n    }\n\n    // method to print the contents of the set\n    void print_contents(Set<Integer> s) {\n        TreeSet<Integer> myTreeSet = new TreeSet<Integer>();\n        myTreeSet.addAll(s);\n        \n        // iterating over the set and printing each element\n        Iterator itr = myTreeSet.iterator();\n        while(itr.hasNext()) {\n            Object element = itr.next();\n            System.out.print(element + \" \");\n        }\n    }\n\n    // method to erase an element from the set\n    void erase(Set<Integer> s, int x) {\n        if(s.contains(x)) {\n            for(Iterator<Integer> itr = s.iterator(); itr.hasNext();) {\n                Integer element = itr.next();\n                \n                // removing the element if it matches the given value\n                if(element == x)\n                    itr.remove();\n            }\n        }\n    }\n\n    // method to get the size of the set\n    int size(Set<Integer> s) {\n        return s.size();\n    }\n\n    // method to find an element in the set\n    int find(Set<Integer> s, int x) {\n        Iterator itr = s.iterator();\n        \n        // checking if the set contains the given element and returning the result\n        if(s.contains(x))\n            return 1;\n        else \n            return -1;\n    }\n}",
                "lang_text": "java"
            }
        ],
        "platform": "GFG"
    }
}