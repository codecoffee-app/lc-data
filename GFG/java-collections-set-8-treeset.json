{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 700729,
            "title": "Java Collections | Set 8 (TreeSet)",
            "titleSlug": "java-collections-set-8-treeset",
            "content": "<p><span style=\"font-size: 18px;\">Given <strong>n</strong> strings added in a <strong>TreeSet</strong> and four characters <strong>a,b,c,d</strong>. Firstly print all the strings which are less than a , then print all the strings which are greater than or equal to b. In the end print all the strings which are greater than or equal to c and less than d i.e between c and d ( excluding d ).&nbsp;</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Example:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong></span><br /><br /><span style=\"font-size: 18px;\">1<br />3<br />sa ka da<br />s k c s</span><br /><br /><span style=\"font-size: 18px;\"><strong>Output:</strong></span><br /><br /><span style=\"font-size: 18px;\">[da, ka]<br />[ka, sa]<br />[da, ka]</span></pre>\n<p><strong>Your Task:</strong></p>\n<p>This is a function problem. The input is already taken care of by the driver code. You only need to complete the function task() that takes the an string arrray 'ts', and four characters i.e. 'a', 'b', 'c', and 'd' as input parameters and prints the TreeSet.</p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong></span></p>\n<p><span style=\"font-size: 18px;\">1&lt;=T&lt;=100<br />1&lt;=N&lt;=100<br />1&lt;=Length of string&lt;=100</span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a set of n strings stored in a TreeSet, and four characters a, b, c, and d, perform the following operations:\n\n1.  Print all strings in the TreeSet that are lexicographically less than 'a'.\n2.  Print all strings in the TreeSet that are lexicographically greater than or equal to 'b'.\n3.  Print all strings in the TreeSet that are lexicographically greater than or equal to 'c' and strictly less than 'd'.  This is essentially finding the strings between 'c' (inclusive) and 'd' (exclusive).",
                "constraints": [
                    "1 <= T <= 100 (Number of test cases)",
                    "1 <= N <= 100 (Number of strings in the TreeSet)",
                    "1 <= Length of string <= 100"
                ],
                "testcases": [
                    {
                        "input": "3\nsa ka da\ns k c s",
                        "output": "[da, ka]\n[ka, sa]\n[da, ka]",
                        "explanation": "The first line contains the number of strings and the characters. The strings are 'sa', 'ka', 'da'. The characters are 's', 'k', 'c', 's'.\n\nStrings less than 's': 'da', 'ka'.\nStrings greater than or equal to 'k': 'ka', 'sa'.\nStrings greater than or equal to 'c' and less than 's': 'da', 'ka'."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Java",
                "slug": "java"
            },
            {
                "name": "Java-Collections",
                "slug": "java-collections"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\nclass gfg1\n{\n    //Function to perform specific tasks with a TreeSet and four characters.\n    void task(TreeSet<String> ts,char a,char b,char c,char d)\n    {\n        //Converting characters to strings.\n        String A=String.valueOf(a);\n        String B=String.valueOf(b);\n        String C=String.valueOf(c);\n        String D=String.valueOf(d);\n        \n        //Printing the subset of elements in the TreeSet that are less than A.\n        System.out.println(ts.headSet(A));\n        \n        //Printing the subset of elements in the TreeSet that are greater than or equal to B.\n        System.out.println(ts.tailSet(B));\n        \n        //Printing the subset of elements in the TreeSet that are greater than C and less than D.\n        System.out.println(ts.subSet(C,D));\n    }\n}",
                "lang_text": "java"
            }
        ],
        "platform": "GFG"
    }
}