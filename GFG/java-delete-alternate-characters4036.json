{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703598,
            "title": "Delete alternate characters",
            "titleSlug": "java-delete-alternate-characters4036",
            "content": "<p><span style=\"font-size: 18px;\">Given a string <strong>s</strong> as input. Delete the characters at odd indices of the string. R</span><span style=\"font-size: 18px;\">eturn the final string after deletion of characters at odd indices.</span><br style=\"font-size: 18px;\" /><br /><span style=\"font-size: 18px;\"><strong>Examples :</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input</strong>: s = \"Geeks\"\n<strong>Output:</strong>&nbsp;\"Ges\"</span><span style=\"font-size: 18px;\">&nbsp;\n<strong>Explanation</strong>: Deleted \"e\" at index 1 and \"k\" at index 3.\n</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>s = \"GeeksforGeeks\"\n<strong>Output:&nbsp;</strong>\"GesoGes\"\n<strong>Explanation</strong>: Deleted e, k, f, r, e, k at index 1, 3, 5, 7, 9, 11.</span></pre>\n<p><span style=\"font-size: 18px;\"><br /><strong>Expected Time Complexity:</strong> O(|s|)<br /><strong>Expected Auxiliary Space:</strong> O(|s|)<br /><br /><strong>Constraints:</strong><br />1&lt;= |s| &lt;=1000</span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string **s** as input, remove all characters located at odd indices. Return the resulting string.",
                "constraints": [
                    "1 <= |s| <= 1000"
                ],
                "testcases": [
                    {
                        "input": "Geeks",
                        "output": "Ges",
                        "explanation": "Removing 'e' at index 1 and 'k' at index 3 results in 'Ges'."
                    },
                    {
                        "input": "GeeksforGeeks",
                        "output": "GesoGes",
                        "explanation": "Removing characters at odd indices (1, 3, 5, 7, 9, 11) which are 'e', 'k', 'f', 'r', 'e', and 'k' results in 'GesoGes'."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Only take those S[i] which are on even position of S.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Java",
                "slug": "java"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "// Back-end complete function Template for C++\nclass Solution {\n  public:\n    string delAlternate(string S) {\n        // store the resulting string in final_S\n        string final_S = \"\";\n        // go through whole string\n        for (int i = 0; i < S.length(); i++) {\n            // take S[i] for only odd position\n            if (i % 2 == 0) final_S += S[i];\n        }\n        // final string\n        return final_S;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "// Java program to demonstrate working of Scanner in Java\n// Back-end complete function for Java\n\nclass Solution {\n    static String delAlternate(String S) {\n        // store the resulting string in final_S\n        String final_S = new String();\n        // go through whole string\n        for (int i = 0; i < S.length(); i++) {\n            // take S[i] for only odd position\n            if (i % 2 == 0) final_S += S.charAt(i);\n        }\n        // final resulting string\n        return final_S;\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\npublic class Solution\n{\n    //Complete this function\n    public string delAlternate(string S)\n    {\n        // store the resulting string in final_S\n        string final_S = \"\";\n        // go through whole string\n        for (int i = 0; i < S.Length; i++)\n        {\n            // take S[i] for only odd position\n            if (i % 2 == 0)\n            {\n                final_S += S[i];\n            }\n        }\n        // final string\n        return final_S;\n    }\n}",
                "lang_text": "csharp"
            },
            {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n\n/**\n * @param {String} S\n * @returns {String}\n*/\n\nclass Solution{\n    delAlternate(S){\n        let final_S = \"\";\n        for (let i = 0; i < S.length; i++) {\n            if (i % 2 === 0) final_S += S[i];\n        }\n        return final_S;\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}