{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 700731,
            "title": "Java Exception Handling",
            "titleSlug": "java-exception-handling",
            "content": "<p><span style=\"font-size:18px\">Given two integers (positive , negative or even 0) say a and b. Find the minimum value of a$b where $ is&nbsp;any arithmetic operation&nbsp;like multiply(*), Divide(/), Addition(+),Substraction(-). Use Exception Handling in this problem.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Input:&nbsp;</strong><br />\r\nThe first line will&nbsp;contain&nbsp;an&nbsp;integer&nbsp;<strong>T&nbsp;</strong>(number of test cases). Each test case will contain two integers a and b.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Output:&nbsp;</strong><br />\r\nPrint the minimum value of a$b.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:&nbsp;</strong><br />\r\n1 &lt; =&nbsp;<strong>T</strong>&nbsp;&lt; = 100<br />\r\n-10<sup>3</sup>&lt;=a,b&lt;=10<sup>3</sup></span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example:<br />\r\n&nbsp;Input:</strong><br />\r\n2<br />\r\n5 -5<br />\r\n4 0</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Output:</strong><br />\r\n-25<br />\r\n0</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>EXPLANATION:</strong></span></p>\r\n\r\n<p><span style=\"font-size:18px\">In test case 1: 5*(-5) = -25<br />\r\nIn test case 2: 4*0 = 0</span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two integers, `a` and `b` (which can be positive, negative, or zero), find the minimum value resulting from applying any of the four basic arithmetic operations: multiplication (*), division (/), addition (+), and subtraction (-) to `a` and `b`. Implement exception handling to gracefully handle potential errors, such as division by zero.",
                "constraints": [
                    "1 <= T <= 100 (where T is the number of test cases)",
                    "-1000 <= a, b <= 1000"
                ],
                "testcases": [
                    {
                        "input": "5 -5",
                        "output": "-25",
                        "explanation": "The minimum value is achieved by multiplication: 5 * (-5) = -25"
                    },
                    {
                        "input": "4 0",
                        "output": "0",
                        "explanation": "The minimum value is achieved by multiplication: 4 * 0 = 0.  Division by zero is prevented by exception handling and does not result in a lower value."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Java",
                "slug": "java"
            },
            {
                "name": "OOP",
                "slug": "oop"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "Java",
                "full_func": "// Backend complete function Template for Java\n\nclass TestClass {\n    int a, b, Min;\n\n    TestClass(){}; // Default constructor\n\n    TestClass(int x, int y) { // Parameterized constructor\n        this.a = x;\n        this.b = y;\n        this.Min = Integer.MAX_VALUE; // Setting initial value of Min to maximum possible value\n    }\n\n    public void findMin() {\n        Min = Math.min(Min, a + b); // Finding minimum of current Min and sum of a and b\n        Min = Math.min(Min, a - b); // Finding minimum of current Min and difference of a and b\n        Min = Math.min(Min, a * b); // Finding minimum of current Min and product of a and b\n\n        try { // Trying to divide a by b\n            Min = Math.min(Min, a / b); // Finding minimum of current Min and division of a by b\n        } catch (Exception e) {\n            // Catching and ignoring any exception if it occurs during division\n        } finally { // Executed regardless of whether an exception occurred or not\n            System.out.println(Min); // Printing the final value of Min\n        }\n    }\n}",
                "lang_text": "java"
            }
        ],
        "platform": "GFG"
    }
}