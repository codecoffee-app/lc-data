{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 700725,
            "title": "Java Interface",
            "titleSlug": "java-interface",
            "content": "<p><span style=\"font-size: 18px;\">Like a class, an interface can have methods and variables, but the methods declared in interface are by default abstract (only method signature, no body). &nbsp;</span></p>\n<p><span style=\"font-size: 18px;\">Given an inteface in1 which includes a method display which takes an integer as input .</span></p>\n<pre><span style=\"font-size: 18px;\">interface in1\n{\n    void display(int p);\n}</span></pre>\n<p><span style=\"font-size: 18px;\">Task is to write a class testClass which implements interface in1 and has a method named display which takes an integer as input and output total number of prime numbers between 2 and integer k (including it). Main function in written for you in the editor.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Input:&nbsp;</strong><br />The first line will&nbsp;contain&nbsp;an&nbsp;integer&nbsp;<strong>T&nbsp;</strong>(number of test cases). Each test case consists of an integer n.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Output:&nbsp;</strong><br />Print total number of prime numbers between 2 and the given number ( including them ).</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:&nbsp;</strong><br />1 &lt; =&nbsp;<strong>T</strong>&nbsp;&lt; = 1000<br />2&lt;= n &lt;= 10<sup>4</sup></span></p>\n<p><span style=\"font-size: 18px;\"><strong>Example:<br />Input:</strong><br />2<br />13<br />19</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Output:</strong><br />6<br />8</span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Implement a class `testClass` that adheres to the `in1` interface. The `in1` interface declares a method `display(int p)`. Your `testClass` should implement the `display` method.  The `display` method should calculate and output the number of prime numbers between 2 and the input integer `p` (inclusive).  A main function is provided, so only implement the interface and the class.",
                "constraints": [
                    "1 <= T <= 1000 (where T is the number of test cases)",
                    "2 <= n <= 10^4 (where n is the input integer for each test case)"
                ],
                "testcases": [
                    {
                        "input": "13",
                        "output": "6",
                        "explanation": "The prime numbers between 2 and 13 (inclusive) are: 2, 3, 5, 7, 11, 13. There are 6 prime numbers."
                    },
                    {
                        "input": "19",
                        "output": "8",
                        "explanation": "The prime numbers between 2 and 19 (inclusive) are: 2, 3, 5, 7, 11, 13, 17, 19. There are 8 prime numbers."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Java",
                "slug": "java"
            },
            {
                "name": "OOP",
                "slug": "oop"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "Java",
                "full_func": "class testClass implements in1\n{\n    public void display(int k)\n    {   \n        // initialize the counter variable\n        int c=0;\n        // initialize the flag variable as false\n        boolean flag=false;\n        \n        // loop from 2 to k\n        for(int i=2;i<=k;i++)\n        {   \n            // set the flag as false\n            flag=false;\n            \n            // loop from 2 to i-1\n            for(int j=2;j<i;j++){\n                // check if i is divisible by j\n                if(i%j==0)\n                {\n                    // set the flag as true and break the inner loop\n                    flag=true;\n                    break;\n                }\n            }\n            \n            // if flag is false, increment the counter\n            if(!flag)\n                c++;\n        }\n        \n        // print the value of the counter\n        System.out.println(c);\n    }\n}",
                "lang_text": "java"
            }
        ],
        "platform": "GFG"
    }
}