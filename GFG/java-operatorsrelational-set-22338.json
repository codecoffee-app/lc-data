{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703946,
            "title": "Java Operators(Relational) | Set - 2",
            "titleSlug": "java-operatorsrelational-set-22338",
            "content": "<p>Complete the function <code>relationalOperators()</code> that compares two integers <code>a</code> and <code>b</code>. Print:</p>\n<ul>\n<li>\"a is greater than b\" if <code>a</code> is greater than <code>b</code></li>\n<li>\"a is less than b\" if <code>a</code> is less than <code>b</code></li>\n<li>\"a is equal to b\" if <code>a</code> equals <code>b</code></li>\n</ul>\n<p>Each output should be followed by a newline character.</p>\n<p><span style=\"font-size: 18px;\"><strong>Examples :<br /></strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>a = 90 b = 5</span>\n<span style=\"font-size: 18px;\"><strong>Output: </strong>90 is greater than 5.</span>\n<span style=\"font-size: 18px;\"><strong>Explanation: </strong>Since a &gt; b So we print 90 is greater than 5.</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>a = 182 b = 234</span>\n<span style=\"font-size: 18px;\"><strong>Output: </strong>182 is less than 234.</span>\n<span style=\"font-size: 18px;\"><strong>Explanation: </strong>Since a &lt; b So we print 182 is less than 234.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong> O(1)<br /><strong>Expected Auxiliary Space:</strong> O(1)</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1&lt;= a, b &lt;=10<sup>9</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Complete the function `relationalOperators()` to compare two integers, `a` and `b`. The function should print one of the following based on the relationship between `a` and `b`:\n\n*   \"a is greater than b\" if `a` > `b`\n*   \"a is less than b\" if `a` < `b`\n*   \"a is equal to b\" if `a` = `b`\n\nEnsure each output is followed by a newline character.",
                "constraints": [
                    "1 <= a, b <= 10^9",
                    "Expected Time Complexity: O(1)",
                    "Expected Auxiliary Space: O(1)"
                ],
                "testcases": [
                    {
                        "input": "a = 90 b = 5",
                        "output": "90 is greater than 5.\n",
                        "explanation": "Since 90 is greater than 5, the output is '90 is greater than 5.'"
                    },
                    {
                        "input": "a = 182 b = 234",
                        "output": "182 is less than 234.\n",
                        "explanation": "Since 182 is less than 234, the output is '182 is less than 234.'"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Use the nested If else statements</p>"
        ],
        "relatedTopics": [
            {
                "name": "Java",
                "slug": "java"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\nclass Solution\n{\npublic:\n    //Function to check the relationship between two numbers.\n    void relationalOperators(int A,int B)\n    {\n        //checking if A is less than B.\n        if(A<B)\n            cout<<A<<\" is less than \"<<B<<endl;\n        //checking if A is greater than B.\n        else if(A>B)\n            cout<<A<<\" is greater than \"<<B<<endl;\n        //if both A and B are equal.\n        else\n            cout<<A<<\" is equal to \"<<B<<endl;\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution{\n    static void relationalOperators(int A,int B){\n        // checks if A is less than B\n        if(A<B)\n            // prints the result if A is less than B\n            System.out.println(A+\" is less than \"+B);\n        // checks if A is greater than B\n        else if(A>B)\n            // prints the result if A is greater than B\n            System.out.println(A+\" is greater than \"+B);\n        // if the above two conditions are not met,\n        // it means A is equal to B\n        else\n            // prints the result if A is equal to B\n            System.out.println(A+\" is equal to \"+B);\n    }\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "#Back-end complete function Template for Python 3\nclass Solution:\n    #Function to compare two numbers using relational operators.\n    def relationalOperators(self, A, B):\n        #checking if A is greater than B.\n        if A>B:\n            print(str(A)+\" is greater than \"+str(B))\n        #checking if A is less than B.\n        elif A<B:\n            print(str(A)+\" is less than \"+str(B))\n        #if A is not greater or less than B, it means A is equal to B.\n        else:\n            print(str(A)+\" is equal to \"+str(B))",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "// Back-end complete function Template for JavaScript\n\nclass Solution {\n    // Function to compare two numbers using relational operators.\n    relationalOperators(A, B) {\n        // checking if A is greater than B\n        if (A > B) {\n            console.log(A + \" is greater than \" + B);\n        }\n        // checking if A is less than B\n        else if (A < B) {\n            console.log(A + \" is less than \" + B);\n        }\n        // if A is not greater or less than B, it means A is equal to B\n        else {\n            console.log(A + \" is equal to \" + B);\n        }\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}