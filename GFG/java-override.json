{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 700727,
            "title": "Java Override",
            "titleSlug": "java-override",
            "content": "<p><span style=\"font-size: 18px;\">In any object-oriented programming language, <strong>Overriding</strong> is a feature that allows a subclass or child class to provide a specific implementation of a method that is already provided by one of its super-classes or parent classes. When a method in a subclass has the same name, same parameters or signature and same return type(or sub-type) as a method in its super-class, then the method in the subclass is said to&nbsp;<strong><em>override</em></strong>&nbsp;the method in the super-class.</span></p>\n<p><span style=\"font-size: 18px;\">Consider the following parent class :</span></p>\n<pre><span style=\"font-size: 18px;\">class Parent\n{\n    void show(int p)\n    {\n     System.out.print(p+\" \");\n    }\n&nbsp;   void print(int q){\n&nbsp; &nbsp; &nbsp; &nbsp; System.out.println(q+\" \");\n&nbsp; &nbsp; }\n}</span></pre>\n<p><span style=\"font-size: 18px;\">Also given a class named child which inherits from Parent class&nbsp;</span></p>\n<pre><span style=\"font-size: 18px;\">class Child extends Parent\n{\n    @Override\n    void show(int p) { System.out.print(p+\" \"); }\n} </span></pre>\n<p><span style=\"font-size: 18px;\">Your task is to create a method named print (which takes one integer as input ) in class Child&nbsp;which overrides the method print of the Parent class such that its prints the square of the input integer.&nbsp;In Main function instance of both classes are made and all methods are called in the editor.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Input:</strong><br />The first line of input contains an integer T denoting the no of test cases then T test cases follow. First line of each test case contains four integers p,q,r,s.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Output:</strong><br />Print the required output.&nbsp;</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1&lt;=T&lt;=100<br />1&lt;=p,q,rs&lt;=10<sup>4</sup></span></p>\n<p><span style=\"font-size: 18px;\"><strong>Example:<br />Input:</strong><br />1<br />1 2 3 4</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Output:</strong><br />1 2 3 16</span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "In object-oriented programming, overriding allows a subclass to provide a specific implementation of a method already defined in its superclass.  When a subclass method has the same name, parameters, and return type as a superclass method, it overrides the superclass method.\n\nConsider the following parent class:\n\njava\nclass Parent {\n    void show(int p) {\n        System.out.print(p + \" \");\n    }\n\n    void print(int q) {\n        System.out.println(q + \" \");\n    }\n}\n\n\nAlso given a class named Child which inherits from Parent class:\n\njava\nclass Child extends Parent {\n    @Override\n    void show(int p) {\n        System.out.print(p + \" \");\n    }\n}\n\n\nYour task is to create a method named `print` (which takes one integer as input) in the `Child` class that overrides the `print` method of the `Parent` class. This overridden `print` method should print the square of the input integer. In the `Main` function, instances of both classes are created and all methods are called (this part is handled in the editor).",
                "constraints": [
                    "1 <= T <= 100",
                    "1 <= p, q, r, s <= 10000"
                ],
                "testcases": [
                    {
                        "input": "1\n1 2 3 4",
                        "output": "1 4 3 16",
                        "explanation": "The first line indicates one test case. The four numbers 1, 2, 3, and 4 are then used as inputs. The parent class's `show(1)` prints 1.  The child class overrides `print(2)` which calculates and prints the square of 2, which is 4. The parent class's `show(3)` prints 3. The child class overrides `print(4)` which calculates and prints the square of 4, which is 16."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Java",
                "slug": "java"
            },
            {
                "name": "OOP",
                "slug": "oop"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "Java",
                "full_func": "// This is a class that extends another class called Parent\n\nclass Child extends Parent\n{\n    // This is an overridden method from the parent class that takes an integer parameter and prints it\n    @Override\n    void show(int p) { System.out.print(p+\" \"); }\n\n    // This is an overridden method from the parent class that takes an integer parameter and prints its square\n    @Override\n    void print(int q){\n        System.out.println(q*q);\n    }\n}",
                "lang_text": "java"
            }
        ],
        "platform": "GFG"
    }
}