{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703612,
            "title": "Java Strings | Set 1",
            "titleSlug": "java-strings-set-15112",
            "content": "<p><span style=\"font-size:18px\">Given two strings S1 and S2 as input. Your task is to concatenate two strings and then reverse the string. Finally print the reversed string.</span><br />\n<br />\n<span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input</strong>: S1 = &quot;Geeks</span><span style=\"font-size:18px\">&quot; , S2 = &quot;forGeeks</span><span style=\"font-size:18px\">&quot;\n<strong>Output:</strong>&nbsp;&quot;skeeGrofskeeG</span><span style=\"font-size:18px\">&quot;&nbsp;\n<strong>Explanation</strong>: Concatenating S1 and S2 to \nget &quot;GeeksforGeeks&quot; then reversing it to \n&quot;skeeGrofskeeG&quot;.\n</span></pre>\n\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input: </strong>S1 = &quot;Practice&quot; , S2 = &quot;Geeks&quot;\n<strong>Output:&nbsp;</strong>&quot;skeeGecitcarP</span><span style=\"font-size:18px\">&quot;\n<strong>Explanation</strong>: Concatenating S1 and S2 to\nget &quot;PracticeGeeks&quot; then reversing it to\n&quot;skeegecitcarP&quot;.</span></pre>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Your Task:&nbsp;&nbsp;</strong><br />\nYou dont need to read input or print anything. Complete the function <strong>conRevstr</strong><strong>()&nbsp;</strong>which takes S1 and S2 as input parameter and returns the sting final_s after concatenating and reversing.<br />\n<br />\n<strong>Expected Time Complexity:</strong> O(|S1| + |S2|)<br />\n<strong>Expected Auxiliary Space:</strong> O(|S1| + |S2|)<br />\n<br />\n<strong>Constraints:</strong><br />\n1&lt;= |S1|&nbsp;&lt;=1000<br />\n1&lt;= |S2|&nbsp;&lt;=1000</span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two strings, S1 and S2, concatenate them and then reverse the resulting string. Return the reversed string.",
                "constraints": [
                    "1 <= |S1| <= 1000",
                    "1 <= |S2| <= 1000"
                ],
                "testcases": [
                    {
                        "input": "S1 = \"Geeks\", S2 = \"forGeeks\"",
                        "output": "skeeGrofskeeG",
                        "explanation": "Concatenating S1 and S2 results in \"GeeksforGeeks\". Reversing this gives \"skeeGrofskeeG\"."
                    },
                    {
                        "input": "S1 = \"Practice\", S2 = \"Geeks\"",
                        "output": "skeeGecitcarP",
                        "explanation": "Concatenating S1 and S2 results in \"PracticeGeeks\". Reversing this gives \"skeeGecitcarP\"."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Add two string and store it to a new string for concatenate and then reverse the string for the answer.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Java",
                "slug": "java"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "// Back-end complete function Template for C++\nclass Solution {\n  public:\n    string conRevstr(string S1, string S2) {\n        // store the resulting string in final_S\n        string final_S = \"\";\n        // store the string after concate in final_S\n        string concat_S = \"\";\n        concat_S = S1 + S2;\n        // go through whole string\n        for (int i = concat_S.length() - 1; i >= 0; i--) {\n            // take every S[i]\n            final_S += concat_S[i];\n        }\n        // final resulting string\n        return final_S;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution {\n    static String conRevstr(String S1, String S2) {\n        // store the resulting string in final_S\n        String final_S = new String();\n        // store the string after concate in final_S\n        String concat_S = new String();\n        concat_S = S1 + S2;\n        // go through whole string\n        for (int i = concat_S.length() - 1; i >= 0; i--) {\n            // take every S[i]\n            final_S += concat_S.charAt(i);\n        }\n        // final resulting string\n        return final_S;\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    public string conRevstr(string S1, string S2)\n    {\n        // store the resulting string in final_S\n        string final_S = \"\";\n        // store the string after concate in final_S\n        string concat_S = \"\";\n        concat_S = S1 + S2;\n        // go through whole string\n        for (int i = concat_S.Length - 1; i >= 0; i--)\n        {\n            // take every S[i]\n            final_S += concat_S[i];\n        }\n        // final resulting string\n        return final_S;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}