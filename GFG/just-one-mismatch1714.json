{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703564,
            "title": "Just One Mismatch",
            "titleSlug": "just-one-mismatch1714",
            "content": "<p><span style=\"font-size:18px\">Given a string S and array of strings, find whether the array contains a string with one character different from the given string.</span></p>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input :</strong>\nN = 4\narr[] = {&quot;bana&quot;,&quot;apple&quot;,&quot;banaba&quot;,&quot;bonanzo&quot;}\nS = &quot;banana&quot;\n<strong>Output :\n</strong>True\n<strong>Explanation: \n</strong>banana and banaba has only one character \ndifferent.</span></pre>\n\n<p><strong><span style=\"font-size:18px\">Example 2:</span></strong></p>\n\n<pre>\n<strong><span style=\"font-size:18px\">Input:\n</span></strong><span style=\"font-size:18px\">N = 4\narr[] = {&quot;bana&quot;,&quot;apple&quot;,&quot;banaba&quot;,&quot;bonanzo&quot;}</span>\n<span style=\"font-size:18px\">S = &quot;apple&quot;\n<strong>Output :</strong></span>\n<span style=\"font-size:18px\">False\n<strong>Explanation: \n</strong>No string in arr differ by one \ncharacter from S \n</span></pre>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;<span style=\"font-size:18px\"><strong>Your Task:&nbsp; </strong><br />\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>isStringExist()</strong> which takes the string array arr[], its size N<strong> </strong>and a string S<strong> </strong>as input parameters and returns &quot;True&quot; if a string exists in arr which has only one character different from S else return &quot;False&quot;.</span></p>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(N*Length of the string S)</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Expected Space Complexity:</strong> O(1)</span></p>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Constraints :</strong><br />\n1 &le; N &le; 100<br />\n1 &le;| arr[i] | &le; 1000</span><br />\n<span style=\"font-size:18px\">1 &le;| S | &le; 1000</span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string `S` and an array of strings `arr`, determine if the array contains a string that differs from `S` by only one character.",
                "constraints": [
                    "1 <= N <= 100 (where N is the size of the array `arr`)",
                    "1 <= |arr[i]| <= 1000 (where |arr[i]| is the length of the string arr[i])",
                    "1 <= |S| <= 1000 (where |S| is the length of the string S)"
                ],
                "testcases": [
                    {
                        "input": "N = 4\narr[] = {\"bana\",\"apple\",\"banaba\",\"bonanzo\"}\nS = \"banana\"",
                        "output": "True",
                        "explanation": "The string \"banaba\" differs from \"banana\" by only one character."
                    },
                    {
                        "input": "N = 4\narr[] = {\"bana\",\"apple\",\"banaba\",\"bonanzo\"}\nS = \"apple\"",
                        "output": "False",
                        "explanation": "No string in the array differs from \"apple\" by only one character."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Check whether the string contained in arr is of the same length as the target string. If yes, then check if there is only one character mismatch, if yes then return true else return false.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    string isStringExist(vector<string> arr, int N, string S) {\n        long long int i, j, k;\n        long long int diff = 1;\n        //for each string in arr\n        for (i = 0; i < N; i++) {\n            diff = 0;\n            //if length of ith string in the arr is equal to S length\n            if (arr[i].length() == S.length()) {\n                //if lengths are equal\n                for (j = 0; j < arr[i].length(); j++) {\n                    //if characters at jht poisition are different\n                    if (arr[i][j] != S[j]) {\n                        //if they are different\n                        // for the first occurence of distinct characters\n                        if (diff == 0) \n                            diff = 1;\n                        // for the second occurence of distinct characters\n                        else {\n                            diff = 0;\n                            break;\n                        }\n                    }\n                }\n            }\n            // if only once the character were different\n            if (diff == 1) return \"True\";\n        }\n        //if no string found in arr matching the condition\n        return \"False\";\n    }\n};\n",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\nclass Solution{\n    static String isStringExist(String[] arr,int N,String S){\n        int i, j, k;\n        int diff = 1;\n        //for each string in arr\n        for (i = 0; i < N; i++) {\n            diff = 0;\n            //if length of ith string in the arr is equal to S length\n            if (arr[i].length() == S.length()) {\n                //if lengths are equal\n                for (j = 0; j < arr[i].length(); j++) {\n                    //check if characters at jht poisition are different\n                    if (arr[i].charAt(j) != S.charAt(j)) {\n                        //if they are different\n                        // for the first occurence of distinct characters\n                        if (diff == 0) \n                            diff = 1;\n                        // for the second occurence of distinct characters\n                        else { \n                            diff = 0;\n                            break;\n                        }\n                    }\n                }\n            }\n             // if only once the character were different\n            if (diff == 1) return \"True\";\n        }\n        //if no string found in arr matching the condition\n        return \"False\";\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\nclass Solution:\n    def isStringExist (self, arr, N, S):\n        diff = 1;\n        #for each string in arr\n        for i in range(N):\n            diff = 0;\n            #check if length of ith string in the arr is equal to S length\n            if len(arr[i]) == len(S):\n                #if lengths are equal\n                for j in range(len(arr[i])):\n                    #check if characters at jtht poisition are different\n                    if arr[i][j] != S[j]:\n                        #if they are different\n                        #for the first occurence of distinct characters\n                        if diff == 0:\n                            diff = 1\n                        #for the second occurence of distinct characters\n                        else: \n                            diff = 0\n                            break\n            #if only once the character were different\n            if diff == 1: return \"True\";\n        #if no string found in arr matching the condition\n        return \"False\";",
                "lang_text": "py"
            }
        ],
        "platform": "GFG"
    }
}