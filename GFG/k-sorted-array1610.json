{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 702735,
            "title": "k sorted array",
            "titleSlug": "k-sorted-array1610",
            "content": "<p><span style=\"font-size: 18px;\">Given an array of&nbsp;<strong>n</strong>&nbsp;distinct elements. Check whether the given array is a <strong>k-sorted</strong>&nbsp;array or not. A <strong>k-sorted</strong>&nbsp;array is an array where each element is at most&nbsp;<strong>k</strong> distance away from its target position in the sorted array.&nbsp;<br />Return \"<strong>Yes</strong>\" if the array is a k-sorted array else return \"<strong>No</strong>\".</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>n=6, arr[] = {3, 2, 1, 5, 6, 4}, k = 2\n<strong>Output:</strong> Yes\n<strong>Explanation</strong>: Every element is at most <strong>2</strong> distance away from its target position in thesorted array.  </span>\n</pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>n=7, arr[] = {13, 8, 10, 7, 15, 14, 12}, k = 1\n<strong>Output:</strong> No</span>\n</pre>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong> O(nlogn).<br /><strong>Expected Auxiliary Space:</strong> O(n).</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &le; n &le; 10<sup>5</sup><br />0 &le; k &le; n</span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Copy elements elements of original array&nbsp;<strong>arr[]</strong>&nbsp;to an auxiliary array&nbsp;<strong>aux[]</strong>.<br />\nSort&nbsp;<strong>aux[]</strong>. Now, for each element at index&nbsp;<strong>i</strong>&nbsp;in&nbsp;<strong>arr[]</strong>, find its index&nbsp;<strong>j</strong>&nbsp;in&nbsp;<strong>aux[]</strong>&nbsp;using Binary Search. If for any element&nbsp;<strong>k &lt; abs(i-j)</strong>, then&nbsp;<strong>arr[]</strong>&nbsp;is not a&nbsp;<strong>k</strong>&nbsp;sorted array. Else it is a&nbsp;<strong>k</strong>&nbsp;sorted array. Here&nbsp;<strong>abs</strong>&nbsp;is the absolute value.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "// C++ implementation to check whether the given array\n// is a k sorted array or not\n\nclass Solution {\n  public:\n    // function to find index of element 'x' in sorted 'arr'\n    // uses binary search technique\n    int binarySearch(int arr[], int low, int high, int x)\n    {\n    \twhile (low <= high)\n    \t{\n    \t\tint mid = (low + high) / 2;\n    \t\t\n    \t\tif (arr[mid] == x)\n    \t\t\treturn mid;\n    \t\telse if (arr[mid] > x)\n    \t\t\thigh = mid - 1;\n    \t\telse\n    \t\t\tlow = mid + 1; \n    \t}\n    }\n\n    // function to check whether the given array is\n    // a 'k' sorted array or not\n    string isKSortedArray(int arr[], int n, int k)\n    {\n    \t// auxiliary array 'aux'\n    \tint aux[n];\n    \t\n    \t// copy elements of 'arr' to 'aux'\n    \tfor (int i = 0; i<n; i++)\n    \t\taux[i] = arr[i];\n    \t\n    \t// sort 'aux' \n    \tsort(aux, aux + n);\n    \t\n    \t// for every element of 'arr' at index 'i', \n    \t// find its index 'j' in 'aux'\n    \tfor (int i = 0; i<n; i++)\n    \t{\n    \t\t// index of arr[i] in sorted array 'aux'\n    \t\tint j = binarySearch(aux, 0, n-1, arr[i]);\n    \t\t\n    \t\t// if abs(i-j) > k, then that element is\n    \t\t// not at-most k distance away from its \n    \t\t// target position. Thus, 'arr' is not a \n    \t\t// k sorted array \n    \t\tif (abs(i - j) > k)\n    \t\t\treturn \"No\";\n    \t}\n    \t\n    \t// 'arr' is a k sorted array\n    \treturn \"Yes\"; \n    }\n};\n",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\nclass Solution\n{ \n    // Method to check whether the given array is \n    // a 'k' sorted array or not \n    static String isKSortedArray(int arr[], int n, int k) \n    { \n        // auxiliary array 'aux' \n        int aux[] = new int[n]; \n           \n        // copy elements of 'arr' to 'aux' \n        for (int i = 0; i<n; i++) \n            aux[i] = arr[i]; \n           \n        // sort 'aux'     \n        Arrays.sort(aux); \n           \n        // for every element of 'arr' at index 'i',  \n        // find its index 'j' in 'aux' \n        for (int i = 0; i<n; i++) \n        { \n            // index of arr[i] in sorted array 'aux' \n            int j = Arrays.binarySearch(aux,arr[i]); \n               \n            // if abs(i-j) > k, then that element is \n            // not at-most k distance away from its  \n            // target position. Thus,  'arr' is not a  \n            // k sorted array  \n            if (Math.abs(i - j) > k) \n                return \"No\"; \n        } \n           \n        // 'arr' is a k sorted array \n        return \"Yes\";     \n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\nclass Solution:\n    def binarySearch(self,arr, low, high, x): \n        while (low <= high): \n            mid = int((low + high) / 2) \n              \n            if (arr[mid] == x): \n                return mid \n            elif(arr[mid] > x): \n                high = mid - 1\n            else: \n                low = mid + 1\n      \n    # function to check whether the given  \n    # array is a 'k' sorted array or not \n    def isKSortedArray(self,arr, n, k): \n          \n        # auxiliary array 'aux' \n        aux = [0 for i in range(n)] \n          \n        # copy elements of 'arr' to 'aux' \n        for i in range(0, n, 1): \n            aux[i] = arr[i] \n          \n        # sort 'aux'  \n        aux.sort(reverse = False) \n          \n        # for every element of 'arr' at  \n        # index 'i', find its index 'j' in 'aux' \n        for i in range(0, n, 1): \n              \n            # index of arr[i] in sorted \n            # array 'aux' \n            j = self.binarySearch(aux, 0, n - 1, arr[i]) \n              \n            # if abs(i-j) > k, then that element is \n            # not at-most k distance away from its  \n            # target position. Thus, 'arr' is not a  \n            # k sorted array  \n            if (abs(i - j) > k): \n                return \"No\"\n          \n        # 'arr' is a k sorted array \n        return \"Yes\"",
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "//User function template for C#\n\nclass Solution {\n    //Complete this function\n    public string isKSortedArray(int[] arr, int n, int k)\n    {\n        // auxiliary array 'aux'\n    \tint[] aux = new int[n];\n    \t\n    \t// copy elements of 'arr' to 'aux'\n    \tfor (int i = 0; i<n; i++)\n    \t\taux[i] = arr[i];\n    \t\n    \t// sort 'aux' \n    \tArray.Sort(aux);\n    \t\n    \t// for every element of 'arr' at index 'i', \n    \t// find its index 'j' in 'aux'\n    \tfor (int i = 0; i<n; i++)\n    \t{\n    \t\t// index of arr[i] in sorted array 'aux'\n    \t\tint j = binarySearch(aux, 0, n-1, arr[i]);\n    \t\t\n    \t\t// if abs(i-j) > k, then that element is\n    \t\t// not at-most k distance away from its \n    \t\t// target position. Thus, 'arr' is not a \n    \t\t// k sorted array \n    \t\tif (Math.Abs(i - j) > k)\n    \t\t\treturn \"No\";\n    \t}\n    \t\n    \t// 'arr' is a k sorted array\n    \treturn \"Yes\"; \n    }\n\n    // function to find index of element 'x' in sorted 'arr'\n    // uses binary search technique\n    private int binarySearch(int[] arr, int low, int high, int x)\n    {\n    \twhile (low <= high)\n    \t{\n    \t\tint mid = (low + high) / 2;\n    \t\t\n    \t\tif (arr[mid] == x)\n    \t\t\treturn mid;\n    \t\telse if (arr[mid] > x)\n    \t\t\thigh = mid - 1;\n    \t\telse\n    \t\t\tlow = mid + 1; \n    \t}\n    \t\n    \treturn -1;\n    }\n}",
                "lang_text": "csharp"
            },
            {
                "lang": "Javascript",
                "full_func": "\nclass Solution {\n    binarySearch(arr, low, high, x){\n        while (low <= high)\n        {\n            let mid = Math.floor((low + high) / 2);\n        \n            if (arr[mid] === x)\n                return mid;\n            else if (arr[mid] > x)\n                high = mid - 1;\n            else\n                low = mid + 1; \n        }\n        return -1; // returning -1 if element is not found\n    }\n\n    isKSortedArray(arr, n, k) {\n        // auxiliary array 'aux'\n        let aux = new Array(n);\n    \t\n    \t// copy elements of 'arr' to 'aux'\n    \tfor (let i = 0; i<n; i++){\n    \t\taux[i] = arr[i];\n        }\n    \t\n    \t// sort 'aux' \n    \taux.sort((a,b)=> a-b);\n    \t\n    \t// for every element of 'arr' at index 'i', \n    \t// find its index 'j' in 'aux'\n    \tfor (let i = 0; i<n; i++){\n    \t\t// index of arr[i] in sorted array 'aux'\n    \t\tlet j = this.binarySearch(aux, 0, n-1, arr[i]);\n    \t\t\n    \t\t// if abs(i-j) > k, then that element is\n    \t\t// not at-most k distance away from its \n    \t\t// target position. Thus, 'arr' is not a \n    \t\t// k sorted array \n    \t\tif (Math.abs(i - j) > k)\n    \t\t\treturn \"No\";\n    \t}\n    \t\n    \t// 'arr' is a k sorted array\n    \treturn \"Yes\"; \n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}