{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703480,
            "title": "K-th missing element",
            "titleSlug": "k-th-missing-element3635",
            "content": "<p><span style=\"font-size: 18px;\">Given an increasing sequence <strong>arr</strong>, we need to find the K-th smallest missing element, taking the first element of the array as the starting point in the increasing sequence. If there is no k-th missing element then output -1.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Example:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong> arr[] = [1, 3, 4, 5, 7] and k = 2\n<strong>Output:</strong> 6\n<strong>Explanation: </strong>k = 2, Missing numbers are 2 and 6. So 2nd missing number is 6.\n</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong> arr[] = [2, 3, 4, 5, 6, 8] and k = 1<strong>\nOutput:</strong> 7<br /><strong>Explanation: </strong>k = 1, the first missing number in the array is 7.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong> O(n).<br /><strong>Expected Auxiliary Space:</strong>&nbsp;O(1).</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:<br /></strong></span><span style=\"font-size: 18px;\">1 &le;&nbsp; arr.size() &le; 10<sup>6</sup><br />0 &le;&nbsp; k, arr[i] &le; 10<sup>5</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an increasing sequence `arr`, find the K-th smallest missing element, assuming the sequence should start from the first element of `arr`. If the K-th missing element doesn't exist, return -1.",
                "constraints": [
                    "1 <= arr.size() <= 10^6",
                    "0 <= k, arr[i] <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "arr[] = [1, 3, 4, 5, 7], k = 2",
                        "output": "6",
                        "explanation": "The missing numbers are 2 and 6. The 2nd missing number is 6."
                    },
                    {
                        "input": "arr[] = [2, 3, 4, 5, 6, 8], k = 1",
                        "output": "7",
                        "explanation": "The first missing number in the array is 7."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span >Start iterating over the array elements, and for every element check if the next element is consecutive or not, if not, then take the difference between these two, and check if the difference is greater than or equal to given k, then calculate ans = a[i] + count, else iterate for next element.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [
            "amazon",
            "facebook",
            "apple",
            "google"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "// Function to find the kth missing element in the array.\nclass Solution {\n  public:\n    int KthMissingElement(vector<int> &arr, int &k) {\n        int n = arr.size();\n        bool flag = 0; // Flag to check if the kth missing element is found.\n        int ans = 0;   // Variable to store the kth missing element.\n        int count = k; // Variable to track the remaining count of missing elements.\n        int difference =\n            0; // Variable to store the difference between consecutive elements.\n\n        // Iterate over the array to find the kth missing element.\n        // Only iterate till n-1 to avoid accessing out of bounds memory.\n        for (int i = 0; i < n - 1; i++) {\n            difference =\n                0; // Reset the difference for each pair of consecutive elements.\n\n            // Check if there is a gap between the current element and the next element.\n            if ((arr[i] + 1) != arr[i + 1]) {\n                difference += (arr[i + 1] - arr[i]) -\n                              1; // Calculate the number of missing elements between the\n                                 // current and next element.\n\n                // Check if the difference is greater than or equal to the remaining\n                // count of missing elements.\n                if (difference >= count) {\n                    ans = arr[i] + count; // Calculate the kth missing element.\n                    flag = 1; // Set the flag to indicate that the kth missing element\n                              // is found.\n                    break;    // Exit the loop since the kth missing element is already\n                              // found.\n                } else\n                    count -=\n                        difference; // Update the remaining count of missing elements.\n            }\n        }\n\n        // Check if the kth missing element is found.\n        if (flag)\n            return ans; // Return the kth missing element.\n\n        return -1; // Return -1 if the kth missing element is not found.\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "// User function Template for Java\n\nclass Solution {\n\n    // Function to find the kth missing element in the array.\n    int KthMissingElement(int arr[], int k) {\n        // Initializing variables.\n        int n = arr.length;\n        boolean flag = false; // Flag to check if the kth missing element is found.\n        int ans = 0;          // Variable to store the kth missing element.\n        int count = k; // Variable to track the remaining count of missing elements.\n        int difference =\n            0; // Variable to store the difference between consecutive elements.\n\n        // Iterate over the array to find the kth missing element.\n        // Only iterate till n-1 to avoid accessing out of bounds memory.\n        for (int i = 0; i < n - 1; i++) {\n            difference =\n                0; // Reset the difference for each pair of consecutive elements.\n\n            // Check if there is a gap between the current element and the next element.\n            if ((arr[i] + 1) != arr[i + 1]) {\n                difference += (arr[i + 1] - arr[i]) -\n                              1; // Calculate the number of missing elements between the\n                                 // current and next element.\n\n                // Check if the difference is greater than or equal to the remaining\n                // count of missing elements.\n                if (difference >= count) {\n                    ans = arr[i] + count; // Calculate the kth missing element.\n                    flag = true; // Set the flag to indicate that the kth missing\n                                 // element is found.\n                    break; // Exit the loop since the kth missing element is already\n                           // found.\n                } else {\n                    count -=\n                        difference; // Update the remaining count of missing elements.\n                }\n            }\n        }\n\n        // Check if the kth missing element is found.\n        if (flag) {\n            return ans; // Return the kth missing element.\n        }\n\n        return -1; // Return -1 if the kth missing element is not found.\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#User function Template for python3\n\n\nclass Solution:\n\n    def KthMissingElement(self, arr, k):\n        #Complete the function\n        n = len(arr)\n        flag = False  # Flag to check if the kth missing element is found.\n        ans = 0  # Variable to store the kth missing element.\n        count = k  # Variable to track the remaining count of missing elements.\n        difference = 0  # Variable to store the difference between consecutive elements.\n\n        # Iterate over the array to find the kth missing element.\n        # Only iterate till n-1 to avoid accessing out of bounds memory.\n        for i in range(n - 1):\n            difference = 0  # Reset the difference for each pair of consecutive elements.\n\n            # Check if there is a gap between the current element and the next element.\n            if (arr[i] + 1) != arr[i + 1]:\n                difference += (\n                    arr[i + 1] - arr[i]\n                ) - 1  # Calculate the number of missing elements between the current and next element.\n\n                # Check if the difference is greater than or equal to the remaining count of missing elements.\n                if difference >= count:\n                    ans = arr[i] + count  # Calculate the kth missing element.\n                    flag = True  # Set the flag to indicate that the kth missing element is found.\n                    break  # Exit the loop since the kth missing element is already found.\n                else:\n                    count -= difference  # Update the remaining count of missing elements.\n\n        # Check if the kth missing element is found.\n        if flag:\n            return ans  # Return the kth missing element.\n\n        return -1  # Return -1 if the kth missing element is not found.\n",
                "lang_text": "py"
            },
            {
                "lang": "Javascript",
                "full_func": "// User function Template for javascript\n\nclass Solution {\n    KthMissingElement(arr, k) {\n        // code here\n        const n = arr.length;\n        let flag = false; // Flag to check if the kth missing element is found.\n        let ans = 0;      // Variable to store the kth missing element.\n        let count = k;    // Variable to track the remaining count of missing elements.\n        let difference =\n            0; // Variable to store the difference between consecutive elements.\n\n        // Iterate over the array to find the kth missing element.\n        // Only iterate till n-1 to avoid accessing out of bounds memory.\n        for (let i = 0; i < n - 1; i++) {\n            difference =\n                0; // Reset the difference for each pair of consecutive elements.\n\n            // Check if there is a gap between the current element and the next element.\n            if ((arr[i] + 1) !== arr[i + 1]) {\n                difference += (arr[i + 1] - arr[i]) -\n                              1; // Calculate the number of missing elements between the\n                                 // current and next element.\n\n                // Check if the difference is greater than or equal to the remaining\n                // count of missing elements.\n                if (difference >= count) {\n                    ans = arr[i] + count; // Calculate the kth missing element.\n                    flag = true; // Set the flag to indicate that the kth missing\n                                 // element is found.\n                    break; // Exit the loop since the kth missing element is already\n                           // found.\n                } else {\n                    count -=\n                        difference; // Update the remaining count of missing elements.\n                }\n            }\n        }\n\n        // Check if the kth missing element is found.\n        if (flag) {\n            return ans; // Return the kth missing element.\n        }\n\n        return -1; // Return -1 if the kth missing element is not found.\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}