{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705473,
            "title": "Kronecker Product",
            "titleSlug": "kronecker-product0918",
            "content": "<p><span style=\"font-size:18px\">Given a <strong>n*m</strong>&nbsp;matrix <strong>A</strong> and a <strong>p*q</strong>&nbsp;matrix <strong>B</strong>, their <strong>Kronecker product</strong> C = A tensor B, also called their matrix direct product, is an <strong>(np)*(mq)</strong>&nbsp;matrix.<br />\nA tensor B<br />\n=<br />\n|a<sub>11</sub>B &nbsp; &nbsp;a<sub>12</sub>B|&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />\n|a<sub>21</sub>B &nbsp; &nbsp;a<sub>22</sub>B|<br />\n=&nbsp; &nbsp;<br />\n|a<sub>11</sub>b<sub>11 &nbsp;&nbsp;</sub> a<sub>11</sub>b<sub>12 &nbsp;&nbsp;</sub> a<sub>12</sub>b<sub>11 &nbsp;&nbsp;</sub> a<sub>12</sub>b<sub>12</sub>|<br />\n|a<sub>11</sub>b<sub>21 &nbsp;&nbsp;</sub> a<sub>11</sub>b<sub>22 &nbsp;&nbsp;</sub> a<sub>12</sub>b<sub>21 &nbsp;&nbsp;</sub> a<sub>12</sub>b<sub>22</sub>|<br />\n|a<sub>11</sub>b<sub>31 &nbsp;&nbsp;</sub> a<sub>11</sub>b<sub>32 &nbsp;&nbsp;</sub> a<sub>12</sub>b<sub>31 &nbsp;&nbsp;</sub> a<sub>12</sub>b<sub>32</sub>|<br />\n|a<sub>21</sub>b<sub>11 &nbsp;&nbsp;</sub> a<sub>21</sub>b<sub>12 &nbsp;&nbsp;</sub> a<sub>22</sub>b<sub>11 &nbsp;&nbsp;</sub> a<sub>22</sub>b<sub>12</sub>|<br />\n|a<sub>21</sub>b<sub>21 &nbsp;&nbsp;</sub> a<sub>21</sub>b<sub>22 &nbsp;&nbsp;</sub> a<sub>22</sub>b<sub>21 &nbsp;&nbsp;</sub> a<sub>22</sub>b<sub>22</sub>|<br />\n|a<sub>21</sub>b<sub>31 &nbsp;&nbsp;</sub> a<sub>21</sub>b<sub>32 &nbsp;&nbsp;</sub> a<sub>22</sub>b<sub>31 &nbsp; </sub>&nbsp;a<sub>22</sub>b<sub>32</sub>|</span></p>\n\n<p>&nbsp;</p>\n\n<p><strong><span style=\"font-size:18px\">Example 1:</span></strong></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong> \nn = 2, m = 2 \np = 2, q = 2\nA = {{1, 2}, \n&nbsp;    {3, 4}}\nB = {{0, 5}, \n&nbsp;    {6, 7}}\n<strong>Output:</strong> {{0, 5, 0, 10}, \n&nbsp;\\t  {6, 7, 12, 14}, \n&nbsp;\\t  {0, 15, 0, 20}, \n&nbsp;\\t  {18, 21, 24, 28}}\n<strong>Explaination:</strong> If the multiplication process \nis followed then this will be the answer.</span></pre>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nYou do not need to read input or print anything. Your task is to complete the function <strong>kroneckerProduct()</strong> which takes n, m, p, q and A and B as input parameters and returns the resultant matrix.</span></p>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(n*m*p*q)<br />\n<strong>Expected Auxiliary Space:</strong> O(n*m*p*q)</span></p>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\n1 &le; n, m, p, q &le; 20<br />\n1 &le; A[i][j], B[i][j] &le; 100&nbsp;</span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an n*m matrix A and a p*q matrix B, compute their Kronecker product C, also known as the matrix direct product. The resulting matrix C will have dimensions (n*p)*(m*q). The Kronecker product is defined as follows:\n\nC = A \u2297 B \n\nWhere each element a<sub>ij</sub> of matrix A is multiplied by the entire matrix B to form a block in the resulting matrix C.\n\nExample:\n\nIf A = [[a11, a12], [a21, a22]] and B is any matrix, then\n\nA \u2297 B = [[a11*B, a12*B],\n         [a21*B, a22*B]]",
                "constraints": [
                    "1 <= n, m, p, q <= 20",
                    "1 <= A[i][j], B[i][j] <= 100"
                ],
                "testcases": [
                    {
                        "input": "n = 2, m = 2\np = 2, q = 2\nA = {{1, 2}, {3, 4}}\nB = {{0, 5}, {6, 7}}",
                        "output": "{{0, 5, 0, 10}, {6, 7, 12, 14}, {0, 15, 0, 20}, {18, 21, 24, 28}}",
                        "explanation": "The output is the Kronecker product of the given matrices A and B. Each element of A is multiplied by the matrix B, resulting in the output matrix."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Multiply every element of A with all the elements of B. You only need to adjust the position of the product in proper position of the resultant matrix.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "// Back-end complete function Template for C++\n\nclass Solution{\npublic:\n    // Function to perform the Kronecker product of two matrices.\n    vector<vector<int>> kroneckerProduct(int n, int m, int p, int q,\n                        vector<vector<int>> A, vector<vector<int>> B)\n    {\n        // Initialize the answer matrix with the appropriate dimensions.\n        vector<vector<int>> ans(n*p, vector<int>(m*q, 0));\n        \n        // Iterate over the rows of matrix A.\n        for(int i = 0;i < n;i++)\n\t        \n            // Iterate over the columns of matrix A.\n            for(int j = 0;j < m;j++)\n\t            \n                // Iterate over the rows of matrix B.\n                for(int k = 0;k < p;k++)\n\t                \n                    // Iterate over the columns of matrix B.\n                    for(int l = 0;l < q;l++)\n\t                    \n                        // Calculate the element at the current position of the answer matrix\n                        // by multiplying the corresponding elements of A and B.\n                        ans[i*p+k][j*q+l] = A[i][j]*B[k][l];\n                        \n        // Return the answer matrix.\n        return ans;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            }
        ],
        "platform": "GFG"
    }
}