{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 702692,
            "title": "Kth boom number",
            "titleSlug": "kth-boom-number5609",
            "content": "<p><span style=\"font-size: 18px;\">Boom numbers are numbers consisting only of digits <strong>2</strong> and <strong>3 </strong>only. Given an integer <strong>K</strong>, return the K-th Boom number.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>K = 5\n<strong>Output: </strong>32</span>\n<span style=\"font-size: 18px;\"><strong>Explanation: </strong>The Boom series is 2, 3, 22, 23, 32, 33, 222.... and, for K=5, answer = 32.</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>K = 100\n<strong>Output: </strong>322323</span>\n<span ><strong>Explanation: </strong>The 100th boom number is 322323.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong> O(logK)<br /><strong>Expected Auxiliary Space:</strong> O(logK)</span><br /><br /><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &le; K &le; 10<sup>12</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "A Boom number is defined as a number that consists only of the digits 2 and 3. Given an integer K, find and return the K-th Boom number in the sequence of Boom numbers.",
                "constraints": [
                    "1 <= K <= 10^12"
                ],
                "testcases": [
                    {
                        "input": "K = 5",
                        "output": "32",
                        "explanation": "The sequence of Boom numbers is 2, 3, 22, 23, 32, 33, 222, ...  The 5th Boom number in this sequence is 32."
                    },
                    {
                        "input": "K = 100",
                        "output": "322323",
                        "explanation": "The 100th Boom number is 322323."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span >Think using Power of 2.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function template for C++\n\nclass Solution{   \npublic:\n    //Function to convert a number to Boom Number representation.\n    string BoomNumber(long long int K) {\n        long long x = 2;\n        string s = \"\";\n        //loop to find the maximum power of 2 less than or equal to K.\n        while (true) {\n            if (K > x) {\n                K -= x;\n                x *= 2;\n            } \n            else\n                break;\n        }\n\n        //loop to convert the remaining value of K to Boom Number representation.\n        while (x > 1) {\n            x >>= 1;\n            if (K > x) {\n                s += '3';\n                K -= x;\n            } else\n                s += '2';\n        }\n        //returning the Boom Number representation of K.\n        return s;\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "// Function to generate BoomNumber based on input K\nclass Solution {\n    public static String BoomNumber(long K) {\n        // Initializing starting value for x and an empty string s\n        long x = 2;\n        String s = \"\";\n        \n        // Loop until K is greater than x\n        while (true) {\n            if (K > x) {\n                // Subtract x from K and multiply x by 2\n                K -= x;\n                x *= 2;\n            } else\n                break;\n        }\n        \n        // Iterate while x is greater than 1\n        while (x > 1) {\n            // Right shift x by 1\n            x >>= 1;\n            \n            if (K > x) {\n                // If K is greater than x, add '3' to string s\n                s += '3';\n                // Subtract x from K\n                K -= x;\n            } else\n                // If K is not greater than x, add '2' to string s\n                s += '2';\n        }\n        \n        // Return the final BoomNumber string\n        return s;\n    }\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "#Back-end complete function Template for Python 3\n\n#Class Solution contains the method BoomNumber\nclass Solution:\n    #Method to generate BoomNumber\n    def BoomNumber(self, K):\n        x, s = 2, \"\"\n        #Loop to find the appropriate value of x\n        while(True):\n            #If K is greater than x, subtract x from K and multiply x by 2\n            if(K>x):\n                K-=x\n                x*=2\n            else:\n                break\n\n        #Loop to generate the BoomNumber string\n        while(x>1):\n            #Right shift x by 1\n            x>>=1\n            #If K is greater than x, add '3' to the string and subtract x from K\n            if(K>x):\n                s+='3'\n                K-=x\n            #Otherwise, add '2' to the string\n            else:\n                s+='2'\n\n        #Return the BoomNumber string\n        return s",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n/**\n * @param {number} K\n * @returns {string}\n*/\n\nclass Solution {\n    //Function to find the nth bionic number.\n    BoomNumber(K) {\n        let x = 2;\n        let s = \"\";\n\n        //Loop to find the appropriate value of x\n        while (true) {\n            //If K is greater than x, subtract x from K and multiply x by 2\n            if (K > x) {\n                K -= x;\n                x *= 2;\n            } else {\n                break;\n            }\n        }\n\n        //Loop to generate the BoomNumber string\n        while (x > 1) {\n            //Right shift x by 1\n            x >>= 1;\n            //If K is greater than x, add '3' to the string and subtract x from K\n            if (K > x) {\n                s += '3';\n                K -= x;\n            } else {\n                s += '2';\n            }\n        }\n\n        //Return the BoomNumber string\n        return s;\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}