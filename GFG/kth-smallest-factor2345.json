{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704368,
            "title": "Kth Smallest Factor",
            "titleSlug": "kth-smallest-factor2345",
            "content": "<p><span style=\"font-size: 18px;\">Given two positive integers <strong>n </strong>and <strong>k</strong>. You have to find the k<sup>th</sup> smallest factor of n.&nbsp;</span><span style=\"font-size: 18px;\"><strong>&nbsp;</strong></span><span style=\"font-size: 20px;\">Output the k<sup>th</sup>&nbsp;smallest factor of n if it exists, otherwise print -1.</span></p>\n<p><span style=\"font-size: 18px;\">&nbsp;A factor of n is a positive integer that divides n perfectly, i.e., with remainder 0<strong>.</strong></span></p>\n<p><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input :</strong></span><strong> </strong><span style=\"font-size: 18px;\"><strong>n = </strong>4 , <strong>k = </strong>2</span>\n<span style=\"font-size: 18px;\"><strong>Output:</strong></span> <span style=\"font-size: 18px;\">2</span>\n<span style=\"font-size: 18px;\"><strong>Explanation:</strong></span>\n<span style=\"font-size: 18px;\">All factors of 4 are 1,2 and 4. Out of\nthese 2 is the 2nd smallest.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input :</strong></span><strong> </strong><span style=\"font-size: 18px;\"><strong>n = </strong>4 , <strong>k = </strong>3</span>\n<span style=\"font-size: 18px;\"><strong>Output:</strong></span> <span style=\"font-size: 18px;\">4</span>\n<span style=\"font-size: 18px;\"><strong>Explanation:</strong></span>\n<span style=\"font-size: 18px;\">All factors of 4 are 1,2 and 4. Out of\nthese 4 is the 3rd smallest.</span></pre>\n<p>&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Your Task:</strong><br />You don't need to read input or print anything. Your task is to complete the function <strong>kThSmallestFactor()</strong> which takes 2 Integers n and k as input and returns the answer.</span></p>\n<p>&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong> O(sqrt(n)log(sqrt(n))<br /><strong>Expected Auxiliary Space:</strong> O(sqrt(n))</span></p>\n<p>&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong></span><br /><span style=\"font-size: 18px;\">1 &lt;= n &lt;= 10<sup>8</sup><br />1 &lt;= k &lt;= 10<sup>8</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size: 18px;\">Run a loop until sqrt(n) and find out all the factors (along with complementary ones), store them in the array and sort them, and then find the k<sup>th</sup> number from the array.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function template in C++\n\nclass Solution {\n  public:\n    // Function to find Kth smallest factor of a given number N.\n    int kThSmallestFactor(int N, int K) {\n\n        // Creating a vector to store the factors of N.\n        vector<int> d;\n\n        // iterating over all numbers from 1 to sqrt(N).\n        for (int i = 1; i * i <= N; i++) {\n            // if i is a factor of N, adding it to the vector.\n            if (N % i == 0) {\n                d.push_back(i);\n                // if i*i is not equal to N, adding N/i to the vector.\n                if (i * i != N)\n                    d.push_back(N / i);\n            }\n        }\n\n        // sorting the vector in ascending order.\n        sort(d.begin(), d.end());\n\n        // if K is greater than the number of factors, returning -1.\n        if (K > d.size())\n            return -1;\n        else\n            // returning the Kth smallest factor.\n            return d[K - 1];\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": null,
                "lang_text": "csharp"
            },
            {
                "lang": "Javascript",
                "full_func": "//User function Template for javascripth\n\n/**\n * @param {number} N\n * @param {number} K\n * @return {number}\n */\nclass Solution {\n    kThSmallestFactor(N, K) {\n        let factors = [];\n        \n        for(let i = 1; i*i <= N; i++) {\n            if(N % i === 0) {\n                factors.push(i);\n                if(i !== Math.sqrt(N)) {\n                    factors.push(Math.floor(N/i));\n                }\n            }\n        }\n        \n        factors.sort((a, b) => a - b);\n        \n        if(K > factors.length) {\n            return -1;\n        } else {\n            return factors[K-1];\n        }\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}