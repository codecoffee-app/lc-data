{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704160,
            "title": "Ladoo problem",
            "titleSlug": "ladoo-problem2929",
            "content": "<p><span style=\"font-size:18px\">Bheem has <strong>N </strong>friends. And he has a ladoo for each day. Given an Array <strong>A</strong>[] denoting on which day ith friend wants a ladoo. If Bheem is unable to give a ladoo to a friend, he loses his friendship with them. Find out the maximum number of Friends he can have at the end.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\r\n<span style=\"font-size:18px\"><strong>N = </strong>5</span>\r\n<span style=\"font-size:18px\"><strong>A[] =</strong> {3, 3, 1, 2, 4}</span>\r\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\r\n<span style=\"font-size:18px\">4 </span>\r\n<span style=\"font-size:18px\"><strong>Explanation:\r\n</strong>He will lose either his 1st or 2nd\r\nfriend and therefore will be left\r\nwith 4 friends.</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\r\n<span style=\"font-size:18px\"><strong>N = </strong>2</span>\r\n<span style=\"font-size:18px\"><strong>A[] =</strong> {1, 2}</span>\r\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\r\n<span style=\"font-size:18px\">2</span>\r\n<span style=\"font-size:18px\"><strong>Explanation:\r\n</strong>He can give a ladoo to each of his friends,\r\nand will have 2 friends by the end.</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>divideLadoo()</strong> which takes an Integer N and an Array A as input and returns the answer.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(N)<br />\r\n<strong>Expected Auxiliary Space:</strong> O(N)</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong></span><br />\r\n<span style=\"font-size:18px\">1 &lt;= N &lt;= 10<sup>5</sup><br />\r\n1 &lt;= A[i] &lt;= 10<sup>5</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Count frequency of each requested day.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Hash",
                "slug": "hash"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "\r\nclass Solution {\r\n  public:\r\n    int divideLadoo(int N ,int A[]) {\r\n        \r\n        // Make an array to store frequency of each requested day\r\n        int freq[100005] = {0};\r\n\t\t\r\n\t\tfor(int i=0 ; i<N ; i++)\r\n\t\t    freq[A[i]]++;\r\n\t\t    \r\n\t\tint ans = 0;\r\n\t\t    \r\n\t\tfor(int i=0 ; i<100005 ; i++)\r\n\t\t{\r\n\t\t    if(freq[i]>=1)        // Add 1 on every requested day , cause he can give a ladoo\r\n\t\t        ans++;          // to one friend each day.\r\n\t\t}\r\n\t\t\r\n\t\treturn ans;\r\n    }\r\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "\r\nclass Solution {\r\n    static int divideLadoo(int N , int[] A) {\r\n        \r\n        // Make an array to store frequency of each requested day\r\n        int[] freq = new int[100005];\r\n\t\tArrays.fill(freq,0);\r\n\t\t\r\n\t\tfor(int i=0 ; i<N ; i++)\r\n\t\t    freq[A[i]]++;\r\n\t\t    \r\n\t\tint ans = 0;\r\n\t\t    \r\n\t\tfor(int i=0 ; i<100005 ; i++)\r\n\t\t{\r\n\t\t    if(freq[i]>=1)        // Add 1 on every requested day , cause he can give a ladoo\r\n\t\t        ans++;          // to one friend each day.\r\n\t\t}\r\n\t\t\r\n\t\treturn ans;\r\n    }\r\n};",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    public int divideLadoo(int N ,int[] A)\n    {\n        int[] freq = new int[100005];\n        \n        for(int i=0 ; i<N ; i++)\n        {\n            freq[A[i]]++;\n        }\n            \n        int ans = 0;\n            \n        for(int i=0 ; i<100005 ; i++)\n        {\n            if(freq[i]>=1)        \n            {\n                ans++;          \n            }\n        }\n        \n        return ans;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}