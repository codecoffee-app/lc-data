{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705706,
            "title": "Largest Divisibility Test",
            "titleSlug": "largest-divisibility-test3444",
            "content": "<p><span style=\"font-size:18px\">Babul&rsquo;s favourite number is 17. He likes the numbers which are divisible by 17. This time what he does is that he takes a number <strong>n</strong>&nbsp;and tries to find the largest number which is divisible by 17, by rearranging the digits. As the number increases he gets puzzled with his own task. So you as a programmer have to help him to accomplish his task.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Note: </strong>If the number is not divisible by rearranging the digits, then return&nbsp;&ldquo;Not Possible&rdquo;. <strong>n</strong>&nbsp;may have leading zeros.<br />\n<br />\n<strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input</strong>: n = 17\n<strong>Output: </strong>17\n<strong>Explanation</strong>: 17 is the largest number \nwhich is also divisible by 17. \n</span></pre>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input: </strong>n = 15\n<strong>Output:&nbsp;</strong>51\n<strong>Explanation</strong>: 51 is the largest number\nwhich is also divisible by 17.\n</span></pre>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Your Task:&nbsp;&nbsp;</strong><br />\nYou dont need to read input or print anything. Complete the function <strong>largestDivisible()&nbsp;</strong>which takes n&nbsp;as input parameter and returns&nbsp;the largest number which is divisible by 17.<br />\n<br />\n<strong>Expected Time Complexity:</strong> O(|n|*|n|!), where |n| denoting length of n.<br />\n<strong>Expected Auxiliary Space:</strong> O(1)<br />\n<br />\n<strong>Constraints:</strong><br />\n1&lt;= n&nbsp;&lt;=10<sup>10</sup></span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a number 'n', find the largest number that can be formed by rearranging its digits, such that the resulting number is divisible by 17. If no such rearrangement exists, return \"Not Possible\". The input number 'n' may contain leading zeros.",
                "constraints": [
                    "1 <= n <= 10^10"
                ],
                "testcases": [
                    {
                        "input": "17",
                        "output": "17",
                        "explanation": "17 is divisible by 17, and there is no other arrangement possible."
                    },
                    {
                        "input": "15",
                        "output": "51",
                        "explanation": "51 is the largest arrangement of digits that is divisible by 17."
                    },
                    {
                        "input": "0",
                        "output": "Not Possible",
                        "explanation": "No other arrangement is possible for 0 and it is not divisible by 17"
                    },
                    {
                        "input": "34",
                        "output": "43",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><u>Use permutation.</u></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "samsung"
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\nclass Solution {\n  public:\n    //Function to find the largest number that is divisible by 17.\n    string largestDivisible(string n){\n        int flag=0;\n        \n        //sorting the string in descending order\n        sort(n.begin(),n.end());\n        reverse(n.begin(),n.end());\n       \n        //iterating through all possible permutations of n.\n        do{\n            //checking if n is divisible by 17 and doesn't start with 0.\n            if(stoi(n)%17==0 && n[0]!='0')\n            {\n                \n                flag=1;\n                //returning the largest number divisible by 17.\n                return n;\n            }\n        }while (prev_permutation(n.begin(),n.end()));\n        \n        //if no divisible number is found, returning \"Not Possible\".\n        if(flag==0)\n        return \"Not Possible\";\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}