{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703297,
            "title": "Largest Element in Array",
            "titleSlug": "largest-element-in-array4009",
            "content": "<p><span >Given an array <strong>arr[].</strong><strong> </strong>The task is to find the <strong>largest</strong> element and return it.</span></p>\n<p><span ><strong>Examples:</strong></span></p>\n<pre><span ><strong>Input: </strong>arr[] = [1, 8, 7, 56, 90]\n<strong>Output: </strong>90\n<strong>Explanation: </strong>The largest element of the given array is 90.</span></pre>\n<pre><span ><strong>Input: </strong>arr[] = [5, 5, 5, 5]\n<strong>Output: </strong>5\n<strong>Explanation: </strong>The largest element of the given array is 5.</span></pre>\n<pre><span ><strong>Input: </strong>arr[] = [10]\n<strong>Output: </strong>10\n<strong>Explanation: </strong>There is only one element which is the largest.</span></pre>\n<p><span ><strong>Constraints:<br /></strong>1 &lt;= arr.size()&lt;= 10<sup>6</sup><br />0 &lt;= arr[i] &lt;= 10<sup>6</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array `arr[]`, find and return the largest element within the array.",
                "constraints": [
                    "1 <= arr.size() <= 10^6",
                    "0 <= arr[i] <= 10^6"
                ],
                "testcases": [
                    {
                        "input": "[1, 8, 7, 56, 90]",
                        "output": "90",
                        "explanation": "The largest element in the array [1, 8, 7, 56, 90] is 90."
                    },
                    {
                        "input": "[5, 5, 5, 5]",
                        "output": "5",
                        "explanation": "All elements in the array [5, 5, 5, 5] are equal to 5, therefore the largest element is 5."
                    },
                    {
                        "input": "[10]",
                        "output": "10",
                        "explanation": "The array [10] contains only one element, which is 10, and is therefore the largest element."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span >Traverse the array while keeping a max variable.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [
            "infosys",
            "oracle",
            "wipro",
            "morgan-stanley"
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    // Function to find the largest element in the array.\n    int largest(vector<int> &arr) {\n        int n = arr.size();\n        int max_no = arr[0];\n        // iterating through the array to find the maximum element.\n        for (int i = 1; i < n; i++) {\n            // if current element is greater than the maximum element found so far,\n            // update the maximum element.\n            if (arr[i] > max_no) {\n                max_no = arr[i];\n            }\n        }\n        return max_no;\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n    public static int largest(int[] arr) {\n        // Initialize max_no with the first element of the array\n        int max_no = arr[0];\n        // Iterate through the array to find the maximum element\n        for (int i = 1; i < arr.length; i++) {\n            // If the current element is greater than max_no, update max_no\n            if (arr[i] > max_no) {\n                max_no = arr[i];\n            }\n        }\n        return max_no;\n    }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": "from typing import List\n\n\nclass Solution:\n\n    def largest(self, arr):\n        # Initialize max_no with the first element of the array\n        max_no = arr[0]\n        # Iterate through the array to find the maximum element\n        for i in range(1, len(arr)):\n            # If the current element is greater than max_no, update max_no\n            if arr[i] > max_no:\n                max_no = arr[i]\n        return max_no\n",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "class Solution {\n    /**\n     * @param {number[]} arr\n     * @returns {number}\n     */\n    largest(arr) {\n        // Initialize max_no with the first element of the array\n        let max_no = arr[0];\n        // Iterate through the array to find the maximum element\n        for (let i = 1; i < arr.length; i++) {\n            // If the current element is greater than max_no, update max_no\n            if (arr[i] > max_no) {\n                max_no = arr[i];\n            }\n        }\n        return max_no;\n    }\n}\n",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}