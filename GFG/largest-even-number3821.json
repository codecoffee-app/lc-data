{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 702936,
            "title": "Largest Even Number",
            "titleSlug": "largest-even-number3821",
            "content": "<p><span style=\"font-size:18px\">Given an integer S. Find the largest even number that can be formed by rearranging the digits of S.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Note:</strong> In case the number does not contain any even digit then output the largest odd number possible.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\nS = &quot;1324&quot;\n<strong>Output:</strong> &quot;4312&quot;\n<strong>Explanation:</strong> Largest even number: 4312</span>\n</pre>\n\n<p><span style=\"font-size:18px\">Example 2:</span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\nS = &quot;3555&quot;\n<strong>Output:</strong> &quot;5553&quot;\n<strong>Explanation:</strong> No even number possible,\nSo we&#39;ll find largest odd number.</span>\n</pre>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:&nbsp;&nbsp;</strong><br />\nYou don&#39;t need to read input or print anything. Your task is to complete the function&nbsp;<strong>LargestEven()</strong>&nbsp;which takes the string <strong>S&nbsp;</strong>as inputs representing the integer&nbsp;and returns the answer.<br />\n<br />\n<strong>Expected Time Complexity:</strong>&nbsp;O(|S| * log |S|)<br />\n<strong>Expected Auxiliary Space:</strong>&nbsp;O(1)<br />\n<br />\n<strong>Constraints:</strong><br />\n1 &le; <strong>|S|</strong> &le; 10<sup>5</sup><br />\n<strong>S</strong> contains only digits from &#39;0&#39; to &#39;9&#39;.</span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an integer represented as a string S, rearrange its digits to form the largest possible even number. If no even number can be formed, return the largest possible odd number instead.",
                "constraints": [
                    "1 <= |S| <= 10^5",
                    "S contains only digits from '0' to '9'"
                ],
                "testcases": [
                    {
                        "input": "1324",
                        "output": "4312",
                        "explanation": "The largest even number that can be formed by rearranging the digits of '1324' is '4312'."
                    },
                    {
                        "input": "3555",
                        "output": "5553",
                        "explanation": "Since '3555' does not contain any even digits, the largest odd number that can be formed by rearranging the digits is '5553'."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Sort the string and check the last digit and if it&#39;s odd then swap with a even digit and again sort left portion.&nbsp;<br />\nIf no even digit present then finds the largest odd number by sorting the string.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "snapdeal"
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "\nclass Solution{\n    public:\n    string LargestEven(string s){\n        int i, j;\n        char a, b;\n        sort(s.begin(),s.end());\n        reverse(s.begin(),s.end());\n        j = s[s.length()-1]-'0';\n        if(j % 2 == 1){\n            for(i=s.length()-1; i>=0; i--){\n              j = s[i]-'0';\n              a = s[i];\n              if(j%2==0){\n                b = s[s.length()-1];\n                s[s.length()-1]=a;\n                s[i]=b;\n                sort(s.begin(),s.end()-1);\n                reverse(s.begin(),s.end()-1);\n                break;\n              }\n            }\n        }\n        return s;\n    }\n    \n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": null,
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": null,
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}