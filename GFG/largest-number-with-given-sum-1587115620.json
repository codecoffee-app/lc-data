{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 701366,
            "title": "Largest number with given sum",
            "titleSlug": "largest-number-with-given-sum-1587115620",
            "content": "<p><span style=\"font-size: 18px;\">Geek lost the password of his super locker.&nbsp;He remembers the number of digits <strong>N</strong> as well as the sum <strong>S</strong> of all the digits&nbsp;of his password.&nbsp;He know that his&nbsp;password is the largest number of <strong>N</strong> digits that can be made with given sum <strong>S</strong>. As he&nbsp;is busy doing his homework, help him&nbsp;retrieving his password.</span></p>\n<p><strong><span style=\"font-size: 18px;\">Example 1:</span></strong></p>\n<pre><strong><span style=\"font-size: 18px;\">Input:\n</span></strong><span style=\"font-size: 18px;\">N = 5, S = 12\n<strong>Output:\n</strong>93000<strong>\nExplanation:\n</strong>Sum of elements is 12. Largest possible \n5 digit number is 93000 with sum 12.</span>\n</pre>\n<p><strong><span style=\"font-size: 18px;\">Example 2:</span></strong></p>\n<pre><strong><span style=\"font-size: 18px;\">Input:\n</span></strong><span style=\"font-size: 18px;\">N = 3, S = 29\n<strong>Output:\n</strong>-1<strong>\nExplanation:\n</strong>There is no such three digit number \nwhose sum is 29.</span></pre>\n<p dir=\"ltr\"><strong><span style=\"font-size: 18px;\">Your Task :&nbsp;</span></strong><br /><span style=\"font-size: 18px;\">You don't need to read input or print anything. Your task is to complete the function l<strong>argestNumber()</strong> which takes 2 integers <strong>N</strong>&nbsp;and <strong>S</strong> as input parameters and returns the password in the form of&nbsp;string, else return \"-1\" in the form of string.</span></p>\n<p dir=\"ltr\"><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &le; N &le;&nbsp;10<sup>4</sup><br />0 &le;&nbsp;S &le; 9*10<sup>4</sup></span></p>\n<p dir=\"ltr\"><span style=\"font-size: 18px;\"><strong>Expected Time Complexity</strong> : O(N)<br /><strong>Expected Auxilliary Space </strong>: O(1)</span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Geek has lost the password to his super locker. He remembers the password has N digits and the sum of its digits is S. The password is the largest possible N-digit number with a digit sum of S. Help Geek retrieve his password.",
                "constraints": [
                    "1 <= N <= 10^4",
                    "0 <= S <= 9*10^4"
                ],
                "testcases": [
                    {
                        "input": "N = 5, S = 12",
                        "output": "93000",
                        "explanation": "The largest 5-digit number with a digit sum of 12 is 93000."
                    },
                    {
                        "input": "N = 3, S = 29",
                        "output": "-1",
                        "explanation": "It's impossible to create a 3-digit number with a digit sum of 29."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>&nbsp;</p>\n\n<ul>\n</ul>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "constructive algo",
                "slug": "constructive-algo"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "microsoft"
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "// Function to return Largest Number\n\nclass Solution\n{\n    public:\n    //Function to return the largest possible number of n digits\n    //with sum equal to given sum.\n    string largestNumber(int n, int sum)\n    {\n        //maximum achievable sum is 9*n. if given sum is \n        //greater than that, we return -1.\n        if(sum > 9*n)\n    \t\treturn \"-1\";\n        \n        int temp;\n        string str = \"\";\n    \tfor(int i=0;i<n;i++)\n    \t{\n    \t    temp = 0;\n    \t\tif(sum!=0)\n    \t\t    //if sum>9 we store 9 in temp as digit or we store the sum.\n    \t\t\ttemp = sum>9? 9 : sum;\n    \t\t\t\n    \t\t//storing the number in temp as character in final string.\n    \t\tstr += (char)(temp + '0');\n    \t\t//updating the sum.\n    \t\tsum -= temp;\n    \t}\n    \t//returning the final string.\n    \treturn str;\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "\nclass Solution \n{\n    //Function to return the largest possible number of n digits\n    //with sum equal to given sum.\n    static String largestNumber(int n, int sum)\n    {\n        //maximum achievable sum is 9*n. if given sum is \n        //greater than that, we return -1.\n        if(sum > 9*n)\n        {\n            return \"-1\";\n        } \n        String str = \"\";\n        for(int i=0; i<n; i++)\n        {\n            int temp = 0;\n            if(sum!=0)\n            //if sum>9 we store 9 in temp as digit or we store the sum.\n            temp = sum>9?9:sum;\n            \n            //storing the number in temp as character in final string.\n\t\t    str += (char)(temp+'0');\n\t\t    //updating the sum.\n\t\t    sum -= temp;\n        }\n        //returning the final string.\n        return str;    \n    }\n}\n\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\nclass Solution:\n    \n    #Function to return the largest possible number of n digits\n    #with sum equal to given sum.\n    def largestNum(self,n,s):\n        \n        #maximum achievable sum is 9*n. if given sum is \n        #greater than that, we return -1.\n        if(9*n<s):\n            return -1\n        else:\n            if n==1:\n                return s\n                \n            #calculating maximum number of nines we can get \n            #and adding them in string.\n            nines = s//9\n            s%=9 \n            ans = '9'*nines\n            \n             #adding \"0\" in the string for remaining digits.\n            if len(ans)<n:\n                ans+=str(s)\n                for i in range(n-nines-1): \n                    ans+='0' \n                    \n                    \n            #returning the final string.\n            return ans\n        \n        \n        ",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "//Back-end complete function Template for javascript\n\n/**\n * @param {number} n\n * @param {number} sum\n * @returns {string}\n*/\n\nclass Solution \n{\n    //Function to return the largest possible number of n digits\n    //with sum equal to given sum.\n    largestNumber(n, sum)\n    {\n        //maximum achievable sum is 9*n. if given sum is \n        if(sum > 9*n)\n    \t\treturn \"-1\";\n        \n        let temp;\n        let str = '';\n    \tfor(let i=0;i<n;i++)\n    \t{\n    \t    temp = 0;\n    \t\tif(sum !== 0)\n    \t\t{\n    \t\t    //if sum>9 we store 9 in temp as digit or we store the sum.\n    \t\t    if(sum>9){\n    \t\t        temp = 9;\n    \t\t    }\n    \t\t    else{\n    \t\t        temp = sum;\n    \t\t    }\n    \t\t}\n    \t\t//storing the number in temp as character in final string.\n    \t\tstr += temp;\n    \t\t//updating the sum.\n    \t\tsum -= temp;\n    \t}\n    \t//returning the final string.\n    \treturn str;\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}