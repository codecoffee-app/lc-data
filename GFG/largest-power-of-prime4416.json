{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704366,
            "title": "Largest power of prime",
            "titleSlug": "largest-power-of-prime4416",
            "content": "<p><span style=\"font-size:18px\">Given a positive integer <strong>N</strong> and a prime <strong>p</strong>, the task is to&nbsp;print the largest power of prime <strong>p</strong> that divides <strong>N!</strong>. Here N! means the factorial of N = 1 x 2 x 3 . . (N-1) x N.<br />\r\nNote that the largest power may be 0 too.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\r\n<span style=\"font-size:18px\"><strong>N = </strong>5 , <strong>p = </strong>2</span>\r\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\r\n<span style=\"font-size:18px\">3</span>\r\n<span style=\"font-size:18px\"><strong>Explanation:</strong></span>\r\n<span style=\"font-size:18px\">5! = 120. The highest x for which 2<sup>x</sup>\r\ndivides 120 is 3, as 120%8 = 0.\r\nSo, the Output is 3.</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\r\n<span style=\"font-size:18px\"><strong>N = </strong>3 , <strong>p = </strong>5</span>\r\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\r\n<span style=\"font-size:18px\">0</span>\r\n<span style=\"font-size:18px\"><strong>Explanation:</strong></span>\r\n<span style=\"font-size:18px\">3! = 6. The highest x for which 5<sup>x</sup>\r\ndivides 6 is 0, as 6%1 = 0.\r\nSo, the Output is 0.</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>largestPowerOfPrime()</strong> which takes 2 Integers N and p as input and returns the answer.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(log<sub>p</sub>(N))<br />\r\n<strong>Expected Auxiliary Space:</strong> O(1)</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong></span><br />\r\n<span style=\"font-size:18px\">1 &lt;=&nbsp;N &lt;= 10<sup>5</sup></span><br />\r\n<span style=\"font-size:18px\">2 &lt;= p &lt;= 5000</span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a positive integer N and a prime number p, determine the largest power of p that divides N! (N factorial). N! is defined as 1 * 2 * 3 * ... * (N-1) * N.  If p does not divide N!, the largest power is 0.",
                "constraints": [
                    "1 <= N <= 10^5",
                    "2 <= p <= 5000"
                ],
                "testcases": [
                    {
                        "input": "N = 5, p = 2",
                        "output": "3",
                        "explanation": "5! = 120. The largest power of 2 that divides 120 is 2^3 = 8, since 120 is divisible by 8 but not by 16.  Therefore, the answer is 3."
                    },
                    {
                        "input": "N = 3, p = 5",
                        "output": "0",
                        "explanation": "3! = 6.  Since 5 does not divide 6, the largest power of 5 that divides 6 is 5^0 = 1. Therefore, the answer is 0."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">The answer will be [N/p] + [N/p^2] + ...&nbsp;&nbsp; and so on. </span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "\r\nclass Solution {\r\n  public:\r\n    int largestPowerOfPrime(int N , int p) {\r\n        \r\n        int sum = 0;   // Initilaizing sum as 0.\r\n        while(N>0)\r\n        {\r\n            sum += (N/p);     // Adding sum with N/p\r\n            N /= p;           // Updating N = N/p\r\n        }\r\n        \r\n        return sum;\r\n    }\r\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\r\n\r\nclass Solution {\r\n    static int largestPowerOfPrime(int N, int p) {\r\n        \r\n        int sum = 0;   // Initilaizing sum as 0.\r\n        while(N>0)\r\n        {\r\n            sum += (N/p);     // Adding sum with N/p\r\n            N /= p;           // Updating N = N/p\r\n        }\r\n        \r\n        return sum;\r\n    }\r\n};",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\r\n\r\nclass Solution:\r\n    def largestPowerOfPrime(self, N, p):\r\n        \r\n        sum = 0     # Initilaizing sum as 0.\r\n        while(N>0):\r\n            sum += (N//p)     # Adding sum with N/p\r\n            N //= p           # Updating N = N/p\r\n        \r\n        return sum",
                "lang_text": "py"
            },
            {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\r\n/**\r\n * @param {number} N\r\n * @param {number} p\r\n * @returns {number}\r\n*/\r\n\r\nclass Solution {\r\n    //Function to find the largest power of prime p in n!\r\n    largestPowerOfPrime(N, p)\r\n    {\r\n        let sum = 0;     // Initializing sum as 0.\r\n        while(N>0){\r\n            sum += Math.floor(N/p);     // Adding sum with N/p\r\n            N = Math.floor(N/p);           // Updating N = N/p\r\n        }\r\n        \r\n        return sum;\r\n    }\r\n}",
                "lang_text": "javascript"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    public int largestPowerOfPrime(int N, int p)\n    {\n        int sum = 0;   // Initializing sum as 0.\n        while(N>0)\n        {\n            sum += (N/p);     // Adding sum with N/p\n            N /= p;           // Updating N = N/p\n        }\n\n        return sum;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}