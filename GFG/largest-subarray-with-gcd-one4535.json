{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704819,
            "title": "Largest subarray with GCD one",
            "titleSlug": "largest-subarray-with-gcd-one4535",
            "content": "<p><span style=\"font-size:18px\">Given an array with n elements. Find length of the largest sub-array having GCD equal to 1. If no such &nbsp;subarray exist with&nbsp;GCD 1, return&nbsp;-1.</span><br />\r\n<br />\r\n<span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input</strong>: n = 3, arr = [1, 3, 5]\r\n<strong>Output:</strong>&nbsp;3&nbsp;\r\n<strong>Explanation</strong>: GCD of 1, 3 and 5\r\nis equal to 1.So the length is 3. </span>\r\n</pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input: </strong>n = 3,<strong> </strong>arr = [2, 4, 6]\r\n<strong>Output:&nbsp;</strong>-1\r\n<strong>Explanation</strong>: No such &nbsp;subarray exist.\r\n</span></pre>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Your Task:&nbsp;&nbsp;</strong><br />\r\nYou dont need to read input or print anything. Complete the function <strong>findLargestSubarray</strong><strong>()&nbsp;</strong>which takes array <strong>arr</strong>&nbsp;of length <strong>n</strong>&nbsp;as input parameter and returns&nbsp;the<strong>&nbsp;</strong>length of the largest subarray and if no such subarray exist<br />\r\nreturns -1.&nbsp;<br />\r\n<br />\r\n<strong>Expected Time Complexity:</strong> O(nlogn)<br />\r\n<strong>Expected Auxiliary Space:</strong> O(1)<br />\r\n<br />\r\n<strong>Constraints:</strong><br />\r\n1&lt;= n&nbsp;&lt;=1000<br />\r\n1&lt;= arr[i] &lt;=1000</span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Gcd(A, B) will be 1 if A or B is 1.</span></p>"
        ],
        "relatedTopics": [],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "// Back-end complete function Template for C++\nclass Solution {\n  public:\n    // Function to find the largest subarray with gcd 1\n    int findLargestSubarray(int arr[], int n) {\n        /*If gcd of any subarray is 1 then gcd of\n         any number with the sub array will be 1.\n         so if we are getting any subarray with\n         gcd 1, then maximum number of element of\n          the subarray will be equal to the number\n          of elements of the array. Else it will be -1.*/\n         \n        // Initializing gcd with the first element of the array\n        int gcd = arr[0];\n        \n        // Finding gcd of all elements in the array\n        for (int i = 1; i < n; i++) gcd = __gcd(gcd, arr[i]);\n        \n        // Checking if gcd is 1 and returning the result\n        return (gcd == 1) ? n : -1;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\nclass Solution {\n    //Complete this function\n    public int findLargestSubarray(int []arr,int n) {\n        // Initializing gcd with the first element of the array\n        int gcd = arr[0];\n        \n        // Finding gcd of all elements in the array\n        for (int i = 1; i < n; i++) gcd = gcdOfTwoNumbers(gcd, arr[i]);\n        \n        // Checking if gcd is 1 and returning the result\n        return (gcd == 1) ? n : -1;\n    }\n    \n    // Function to find gcd of two numbers\n    public int gcdOfTwoNumbers(int a, int b) {\n        if (b == 0) return a;\n        return gcdOfTwoNumbers(b, a % b);\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}