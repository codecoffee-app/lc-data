{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704724,
            "title": "Largest sum of digits in all Divisors",
            "titleSlug": "largest-sum-of-digits-in-all-divisors5230",
            "content": "<p><span style=\"font-size: 18px;\">Given a integer number <strong>n</strong>, find largest sum of digits in all divisors of <strong>n</strong>.</span></p>\n<p>&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong></span>\n<span style=\"font-size: 18px;\"><strong>n = </strong>12</span>\n<span style=\"font-size: 18px;\"><strong>Output:</strong></span>\n<span style=\"font-size: 18px;\">6</span>\n<span style=\"font-size: 18px;\"><strong>Explanation:</strong></span>\n<span style=\"font-size: 18px;\">The divisors of 12 are: 1,2,3,4,6,12.</span>\n<span style=\"font-size: 18px;\">6 is the maximum digit-sum among all divisors.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong></span>\n<span style=\"font-size: 18px;\"><strong>n = </strong>34</span>\n<span style=\"font-size: 18px;\"><strong>Output:</strong></span>\n<span style=\"font-size: 18px;\">8</span>\n<span style=\"font-size: 18px;\"><strong>Explanation:</strong></span>\n<span style=\"font-size: 18px;\">The divisors of 34 are: 1,2,17,34.</span>\n<span style=\"font-size: 18px;\">8 is the maximum digit-sum among all divisors.</span> </pre>\n<p>&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Your Task:</strong><br />You don't need to read input or print anything. Your task is to complete the function <strong>getLargest()</strong> which takes an Integer n as input and returns the answer.</span></p>\n<p>&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong> O(sqrt(n)*log(n))<br /><strong>Expected Auxiliary Space:</strong> O(1)</span></p>\n<p>&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong></span><br /><span style=\"font-size: 18px;\">1 &lt;= n &lt;= 10<sup>6</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an integer `n`, find the largest sum of digits among all divisors of `n`.",
                "constraints": [
                    "1 <= n <= 10^6"
                ],
                "testcases": [
                    {
                        "input": "12",
                        "output": "6",
                        "explanation": "The divisors of 12 are 1, 2, 3, 4, 6, and 12. The digit sums are 1, 2, 3, 4, 6, and 1+2=3, respectively. The maximum digit sum is 6."
                    },
                    {
                        "input": "34",
                        "output": "8",
                        "explanation": "The divisors of 34 are 1, 2, 17, and 34. The digit sums are 1, 2, 1+7=8, and 3+4=7, respectively. The maximum digit sum is 8."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">The idea is simple, we find all divisors of a number one by one. For every divisor, we <a href=\"https://www.geeksforgeeks.org/program-for-sum-the-digits-of-a-given-number/\">compute sum of digits</a>.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "number-theory",
                "slug": "number-theory"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    /* Function to get sum of digits */\n    int getSum(int n)\n    { \n       int sum = 0;\n       while (n != 0)\n       {\n           sum = sum + n % 10;\n           n = n/10;\n       }\n       return sum;\n    }\n    \n    int getLargest(int n) {\n        \n        int res = 0; \n      \n        // traverse till sqrt(n)  \n        for (int i = 1; i <= sqrt(n); i++)  \n      \n            // if i is factor of \n            // n then push the \n            // divisor in the stack. \n            if (n % i == 0) \n            { \n                // check for both the divisors \n                res = max(res, getSum(i)); \n                res = max(res,getSum(n / i)); \n            }      \n      \n        return res; \n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}