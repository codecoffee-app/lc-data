{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 876296,
            "title": "Largest three distinct elements",
            "titleSlug": "largest-three-distinct-elements",
            "content": "<p><span >You are given an array arr[], you need to find the top three largest distinct integers present in the array and return an array of size three in <strong>descending </strong>order.</span></p>\n<p><span >Note: If there are less than three distinct elements in the array, then return the available distinct numbers in descending order.</span></p>\n<p><span ><strong>Examples:<br /></strong></span></p>\n<pre><span ><strong>Input:</strong> arr[] = [10, 4, 3, 50, 23, 90, 90]</span><br /><span ><strong>Output:</strong> [90, 50, 23]</span><br /><span ><strong>Explanation:</strong> Since 90 appears two times in the given array, hence it is only counted once. Therefore, the top 3 distinct largest numbers are 90, 50 and 23.</span></pre>\n<pre><span ><strong>Input:</strong> arr[] = [10, 10, 10]</span><br /><span ><strong>Output:</strong> [10]</span><br /><span ><strong>Explanation:</strong> Since there is only one distinct element, hence the answer is 10.<br /></span></pre>\n<pre><span ><strong>Input:</strong> arr[] = [6, 8, 9, 2, 1, 10]</span><br /><span ><strong>Output:</strong> [10, 9, 8]</span></pre>\n<p><span ><strong>Constraints:<br /></strong>1 &lt;= arr.size() &lt;= 10<sup>5</sup></span><br /><span >0 &lt;= arr[i] &lt;= 10<sup>5</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of integers, find the top three largest distinct integers present in the array. Return an array of size three containing these integers in descending order.\n\nIf the array contains fewer than three distinct elements, return an array containing the available distinct numbers, also in descending order.",
                "constraints": [
                    "1 <= arr.size() <= 10^5",
                    "0 <= arr[i] <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "[10, 4, 3, 50, 23, 90, 90]",
                        "output": "[90, 50, 23]",
                        "explanation": "The distinct elements are [10, 4, 3, 50, 23, 90]. The top three largest are 90, 50, and 23."
                    },
                    {
                        "input": "[10, 10, 10]",
                        "output": "[10]",
                        "explanation": "There is only one distinct element in the array, which is 10."
                    },
                    {
                        "input": "[6, 8, 9, 2, 1, 10]",
                        "output": "[10, 9, 8]",
                        "explanation": "The top three largest distinct elements are 10, 9 and 8."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to create variables for the top three largest elements</p>"
        ],
        "relatedTopics": [
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    vector<int> getThreeLargest(vector<int>& arr) {\n        int first = -1, second = -1, third = -1;\n\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr[i] > first) {\n                third = second;\n                second = first;\n                first = arr[i];\n            } else if (arr[i] > second && arr[i] < first) {\n                third = second;\n                second = arr[i];\n            } else if (arr[i] > third && arr[i] < second) {\n                third = arr[i];\n            }\n        }\n\n        if (first != -1 && second != -1 && third != -1)\n            return {{first, second, third}};\n        if (first != -1 && second != -1)\n            return {{first, second}};\n        if (first != -1)\n            return {{first}};\n\n        return {{-1}};\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution {\n    public int[] getThreeLargest(int arr[]) {\n        int first = -1, second = -1, third = -1;\n\n        for (int i = 0; i < arr.length; i++) {\n            if (arr[i] > first) {\n                third = second;\n                second = first;\n                first = arr[i];\n            } else if (arr[i] > second && arr[i] < first) {\n                third = second;\n                second = arr[i];\n            } else if (arr[i] > third && arr[i] < second) {\n                third = arr[i];\n            }\n        }\n\n        if (first != -1 && second != -1 && third != -1)\n            return new int[] {first, second, third};\n        if (first != -1 && second != -1) return new int[] {first, second};\n        if (first != -1) return new int[] {first};\n\n        return new int[] {-1};\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "class Solution:\n\n    def getThreeLargest(self, arr):\n\n        first = second = third = -1\n        # Traverse the array to find the three largest distinct elements\n        for i in range(len(arr)):\n            if arr[i] > first:\n                third = second\n                second = first\n                first = arr[i]\n            elif arr[i] > second and arr[i] < first:\n                third = second\n                second = arr[i]\n            elif arr[i] > third and arr[i] < second:\n                third = arr[i]\n\n        # Return the appropriate result based on how many distinct elements we found\n        if first != -1 and second != -1 and third != -1:\n            return [first, second, third]\n        if first != -1 and second != -1:\n            return [first, second]\n        if first != -1:\n            return [first]\n\n        return [-1]\n",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": null,
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}