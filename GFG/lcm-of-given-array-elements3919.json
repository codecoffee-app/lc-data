{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703856,
            "title": "LCM of given array elements",
            "titleSlug": "lcm-of-given-array-elements3919",
            "content": "<p><span style=\"font-size:18px\">Given an array <strong>A[ ]</strong>&nbsp;of <strong>N</strong>&nbsp;numbers, your task is to find&nbsp;LCM of it modulo 1000000007</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong> </span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\n<strong>N =</strong> 4\n<strong>A = </strong>{1 , 2 , 8 , 3}\n<strong>Output:</strong>\n24\n<strong>Explanation:</strong>\nLCM of the given array is 24.</span>\n<span style=\"font-size:18px\">24 % 1000000007 = 24</span></pre>\n\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong> </span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\n<strong>N =</strong> 2\n<strong>A = </strong>{1 , 8}\n<strong>Output:</strong>\n8\n<strong>Explanation:</strong>\nLCM of the given array is 8.</span>\n</pre>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>lcmOfArray()</strong> which takes an Integer N and an Array A as input and returns the answer.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(N*log(N))<br />\n<strong>Expected Auxiliary Space:</strong> O(1)</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\n1 &lt;= N &lt;= 10<sup>5</sup><br />\n1 &lt;= A[i] &lt;= 10<sup>5</sup></span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array `A` of `N` numbers, find the Least Common Multiple (LCM) of all elements in the array, modulo 1000000007.",
                "constraints": [
                    "1 <= N <= 10^5",
                    "1 <= A[i] <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "N = 4\nA = [1, 2, 8, 3]",
                        "output": "24",
                        "explanation": "The LCM of the given array {1, 2, 8, 3} is 24.  24 % 1000000007 = 24."
                    },
                    {
                        "input": "N = 2\nA = [1, 8]",
                        "output": "8",
                        "explanation": "The LCM of the given array {1, 8} is 8."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Be careful with Overflow of Integers.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    // helper function to get gcd of two numbers.\n    long long gcd(long a , long b)\n    {\n        if(a == 0)\n            return b;\n        return gcd(b%a, a);\n    }\n    \n    // helper function to get lcm of two numbers.\n    long long lcm(long long a , long long b)\n    {\n        return (a*b)/gcd(a,b);\n    }\n    \n    long long lcmOfArray(int N , int A[]) {\n        \n        long long ans = 1;     // Initializing ans as 1\n        for(int i=0 ; i<N ; i++)\n            ans = lcm(ans,A[i])%1000000007;     // Updating LCM with every element of Array.\n            \n        return ans;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            }
        ],
        "platform": "GFG"
    }
}