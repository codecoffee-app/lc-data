{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704963,
            "title": "LCM Triplet",
            "titleSlug": "lcm-triplet1501",
            "content": "<p><span style=\"font-size:18px\">Given a number&nbsp;N.Find the maximum possible LCM that can be attained by&nbsp;any three numbers less than or equal to N.<br />\r\nNote- LCM stands for Lowest Common Multiple. Also, Numbers can be repeated.</span></p>\r\n\r\n<p><strong><span style=\"font-size:18px\">Example 1:</span></strong></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong>\r\nN=9\r\n<strong>Output:</strong>\r\n504\r\n<strong>Explanation:</strong>\r\n504 is the maximum LCM that can be attained\r\nby any triplet of numbers less than or equal 9.\r\nThe triplet which has this LCM is {7,8,9}.</span></pre>\r\n\r\n<p><strong><span style=\"font-size:18px\">Example 2:</span></strong></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong>\r\nN=7\r\n<strong>Output:</strong>\r\n210\r\n<strong>Explanation:</strong>\r\n210 is the maximum LCM that can be attained\r\nby any triplet of numbers less than or equal 7.\r\nThe triplet which has this LCM is {5,6,7}.</span></pre>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>lcmTriplets() </strong>that takes a number N as input parameter and returns the maximum LCM that can be attained by any three numbers less than or equal to N.</span></p>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong>O(logN)<br />\r\n<strong>Expected Auxillary Space:</strong>O(logN)</span></p>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n1&lt;=N&lt;=10<sup>6</sup>&nbsp;</span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a number N, find the maximum possible Least Common Multiple (LCM) that can be obtained from any three numbers less than or equal to N. The numbers can be repeated.",
                "constraints": [
                    "1 <= N <= 10^6"
                ],
                "testcases": [
                    {
                        "input": "9",
                        "output": "504",
                        "explanation": "The maximum LCM attainable with numbers less than or equal to 9 is 504, achieved by the triplet {7, 8, 9}."
                    },
                    {
                        "input": "7",
                        "output": "210",
                        "explanation": "The maximum LCM attainable with numbers less than or equal to 7 is 210, achieved by the triplet {5, 6, 7}."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Take care of integer overflow.</span></p>\n\n<p>&nbsp;</p>",
            "<p><span style=\"font-size:18px\">There will be 4 different cases to be considered</span></p>\n\n<p>&nbsp;</p>",
            "<p><span style=\"font-size:18px\">First case is when N is less than 3.</span></p>",
            "<p><span style=\"font-size:18px\">Second Case is when N is Odd.</span></p>",
            "<p><span style=\"font-size:18px\">Third case is when N is even but not divisible by 3.</span></p>",
            "<p><span style=\"font-size:18px\">Last case will be when N is even and divisible by 3.</span></p>",
            "<p><span style=\"font-size:18px\">The difference between the maximum of the three numbers of the required triplets and the minimum will be at most 3.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "// Back-end complete function Template for C++\r\n\r\nclass Solution {\r\n  public:\r\n    long long lcmTriplets(long long N) {\r\n        long long ans;\r\n        // when N is less than 3\r\n        if (N < 3) {\r\n            ans = N;\r\n        }\r\n        // when N is odd\r\n        else if (N % 2) {\r\n            ans = N * (N - 1) * (N - 2);\r\n        }\r\n        // when N is even and not divisible by 3\r\n        else if (N % 3) {\r\n            ans = N * (N - 1) * (N - 3);\r\n        }\r\n        // when N is even and divisible by 3\r\n        else {\r\n            ans = (N - 1) * (N - 2) * (N - 3);\r\n        }\r\n        return ans;\r\n    }\r\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "// Back-end complete function Template for Java\r\n\r\nclass Solution {\r\n    long lcmTriplets(long N) {\r\n        long ans;\r\n        // when N is less than 3\r\n        if (N < 3) {\r\n            ans = N;\r\n        }\r\n        // when N is odd\r\n        else if (N % 2 > 0) {\r\n            ans = N * (N - 1) * (N - 2);\r\n        }\r\n        // when N is even and not divisible by 3\r\n        else if (N % 3 > 0) {\r\n            ans = N * (N - 1) * (N - 3);\r\n        }\r\n        // when N is even and divisible by 3\r\n        else {\r\n            ans = (N - 1) * (N - 2) * (N - 3);\r\n        }\r\n        return ans;\r\n    }\r\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "#Back-end complete function Template for Python 3\r\n\r\nclass Solution:\r\n    def lcmTriplets(self,N):\r\n        ans = 0\r\n        #when N is less than 3\r\n        if N < 3:\r\n            ans = N\r\n        #when N is odd    \r\n        elif N%2>0:\r\n            ans=N*(N-1)*(N-2)\r\n        #when N is even and not divisible by 3    \r\n        elif N%3>0:\r\n            ans=N*(N-1)*(N-3)\r\n        #when N is even and divisible by 3    \r\n        else:\r\n            ans=(N-1)*(N-2)*(N-3)\r\n        return ans    ",
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}