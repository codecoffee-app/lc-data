{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 888463,
            "title": "Lexicographical maximum substring of String",
            "titleSlug": "lexicographical-maximum-substring",
            "content": "<p><span style=\"background-color: #ffffff; color: #273239; font-family: Nunito, sans-serif; font-size: 14pt; letter-spacing: 0.162px;\">Given a string s we have to find the lexicographical maximum substring of a string.</span></p>\n<p><span ><span style=\"color: #222222; font-family: inherit; letter-spacing: 0.01px;\"><strong>Note:</strong> A </span><strong style=\"color: #222222; font-family: inherit; letter-spacing: 0.01px; box-sizing: border-box; margin: 0px; padding: 0px; outline: 0px; border: 0px; vertical-align: baseline; background-image: initial; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial; text-shadow: none;\">lexicographically maximum substring</strong><span style=\"color: #222222; font-family: inherit; letter-spacing: 0.01px;\"> of a string is the substring that appears last in lexicographical (dictionary) order among all possible substrings of the given string</span></span></p>\n<p><span ><strong><span style=\"color: #222222; font-family: inherit; letter-spacing: 0.01px;\">Examples:</span></strong></span></p>\n<pre style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 20px; border: 0px; font-size: 12pt; vertical-align: baseline; background-color: #e0e0e0; border-radius: 10px; color: rgba(0, 0, 0, 0.9); font-family: Consolas, monospace; overflow: auto; text-wrap-mode: wrap; overflow-wrap: break-word; letter-spacing: 0.162px;\"><span ><strong style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">Input :</strong> s = \"ababaa\"\n<strong style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">Output :</strong> babaa\n<strong style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">Explanation :</strong> \"babaa\" is the lexicographically maximum substring that can be formed from this string</span></pre>\n<pre style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; padding: 20px; border: 0px; font-size: 12pt; vertical-align: baseline; background-color: #e0e0e0; border-radius: 10px; color: rgba(0, 0, 0, 0.9); font-family: Consolas, monospace; overflow: auto; text-wrap-mode: wrap; overflow-wrap: break-word; letter-spacing: 0.162px;\"><span ><strong style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">Input :</strong> s = \"asdfaa\"</span><br /><span ><strong style=\"letter-spacing: 0.162px; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">Output :</strong><span style=\"letter-spacing: 0.162px;\"> sdfaa<br /></span><strong>Explanation : </strong>\"sdfaa\" is the lexicographically maximum substring that can be formed from this string</span></pre>\n<p><span style=\"box-sizing: border-box; font-weight: bolder; line-height: 1.7em; font-size: 14pt; color: #1e2229; background-color: #ffffff; font-family: var(--gfg-font-secondary) !important;\">Constraints:</span></p>\n<p><span style=\"box-sizing: border-box; line-height: 1.7em; font-size: 14pt; color: #1e2229; background-color: #ffffff; font-family: var(--gfg-font-secondary) !important;\">1&lt;= s.size() &lt;=1000<br />s contains only alphabetic lower characters</span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string `s`, find the lexicographically largest substring of `s`. A lexicographically largest substring is the substring that would appear last in a dictionary order among all possible substrings of the given string.",
                "constraints": [
                    "1 <= s.size() <= 1000",
                    "s contains only lowercase alphabetic characters"
                ],
                "testcases": [
                    {
                        "input": "ababaa",
                        "output": "babaa",
                        "explanation": "The substring \"babaa\" is the lexicographically largest substring of \"ababaa\"."
                    },
                    {
                        "input": "asdfaa",
                        "output": "sdfaa",
                        "explanation": "The substring \"sdfaa\" is the lexicographically largest substring of \"asdfaa\"."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size: 14pt;\">Generate all substring</span></p>",
            "<p><span style=\"font-size: 14pt;\">Find and return the lexicographically largest substring by comparing all possible substrings</span></p>"
        ],
        "relatedTopics": [],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\nclass Solution {\n  public:\n    string lexicographicalMaxString(string &s) {\n        string ans = \"\";\n        for (int i = 0; i < s.size(); i++) {\n            ans = max(ans, s.substr(i));\n        }\n        return ans;\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\nclass Solution {\n    public String lexicographicalMaxString(String s) {\n\n        String ans = \"\";\n        for (int i = 0; i < s.length(); i++) {\n            ans = ans.compareTo(s.substring(i)) > 0 ? ans : s.substring(i);\n        }\n        return ans;\n    }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "#Back-end complete function Template for Python 3\nclass Solution:\n\n    def lexicographicalMaxString(self, s: str) -> str:\n        ans = \"\"\n        for i in range(len(s)):\n            ans = max(ans, s[i:])\n        return ans\n",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "//Back-end complete function Template for javascript\nclass Solution {\n    lexicographicalMaxString(s) {\n\n        let ans = \"\";\n        for (let i = 0; i < s.length; i++) {\n            ans = ans > s.substring(i) ? ans : s.substring(i);\n        }\n        return ans;\n    }\n}\n",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}