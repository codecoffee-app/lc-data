{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 881766,
            "title": "Lexicographical Rank Of String",
            "titleSlug": "lexicographical-rank-of-string--121503",
            "content": "<p><span style=\"font-size: 18px;\">You are given a string <strong>s</strong> consisting of uppercase English letters. Find the rank of the string among all its permutations sorted in <strong>lexicographical order</strong>. The rank starts from 1.</span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Example:<br />Input:&nbsp;</strong>s = \"ABC\"<br /><strong>Output:</strong> 1<br /><strong>Explanation: </strong>The permutations in Lexicographic order are: \"ABC\". \"ACB\", \"BAC\", \"BCA\", \"CAB\", \"CBA\"</span><br /><br /><span style=\"font-size: 18px;\"><strong>Input:&nbsp;</strong>s = \"CAB\"<br /><strong>Output:</strong> 5</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:<br /></strong></span></p>\n<p><span style=\"font-size: 18px;\">1 &lt;= s.size() &lt;= 8</span></p>",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p>Use next_permutation function.</p>"
        ],
        "relatedTopics": [
            {
                "name": "STL",
                "slug": "stl"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nint RankMe(string &str) {\n\n    string temp = str;\n\n    sort(temp.begin(), temp.end());\n\n    int count = 1;\n\n    // returning 1 if the input string is already sorted.\n    if (str == temp)\n        return count;\n\n    // next_permutation function returns bool value if possible or not\n    while (next_permutation(temp.begin(), temp.end())) {\n\n        count++;\n\n        if (temp == str) {\n            break;\n        }\n    }\n\n    return count;\n}\n",
                "lang_text": "cpp"
            }
        ],
        "platform": "GFG"
    }
}