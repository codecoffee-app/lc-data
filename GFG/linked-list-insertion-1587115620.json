{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 700525,
            "title": "Linked List Insertion At End",
            "titleSlug": "linked-list-insertion-1587115620",
            "content": "<p><span style=\"font-size: 18px;\">Given the head of a Singly Linked List and a value x, insert that value x at the end of the LinkedList and return the modified Linked List.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples :</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>LinkedList: 1-&gt;2-&gt;3-&gt;4-&gt;5 , x = 6<br /><strong>Output: </strong>1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;6<strong>\nExplanation: <br /><img src=\"https://media.geeksforgeeks.org/img-practice/prod/addEditProblem/700525/Web/Other/blobid2_1720519928.png\" width=\"420\" height=\"84\" /><br /></strong>We can see that 6 is inserted at the end of the linkedlist<strong>.</strong></span>\n</pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>LinkedList: 5-&gt;4 , x = 1<br /></span><span style=\"font-size: 18px;\"><strong>Output: </strong>5-&gt;4-&gt;1<br /><strong>Explanation: <br /><img src=\"https://media.geeksforgeeks.org/img-practice/prod/addEditProblem/700525/Web/Other/blobid3_1720519937.png\" width=\"400\" height=\"80\" /><br /></strong>We can see that 1 is inserted at the end of the linkedlist<strong style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">.</strong><strong><br /></strong></span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:&nbsp;</strong>O(n)<br /><strong>Expected Auxiliary Space:&nbsp;</strong>O(1)</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />0 &lt;= number of nodes &lt;= 10<sup>5<br /></sup>1 &lt;= node-&gt;data , x &lt;= 10<sup>3</sup><sup><br /></sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given the head of a Singly Linked List and a value `x`, insert the value `x` at the end of the LinkedList and return the modified Linked List.",
                "constraints": [
                    "0 <= number of nodes <= 10^5",
                    "1 <= node->data, x <= 10^3"
                ],
                "testcases": [
                    {
                        "input": "LinkedList: 1->2->3->4->5 , x = 6",
                        "output": "1->2->3->4->5->6",
                        "explanation": "The value 6 is appended to the end of the linked list."
                    },
                    {
                        "input": "LinkedList: 5->4 , x = 1",
                        "output": "5->4->1",
                        "explanation": "The value 1 is appended to the end of the linked list."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Traverse to the end of the list and set the next pointer of the last node to the new node.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [
            "hike",
            "wipro",
            "tcs"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    Node *insertAtEnd(Node *head, int x) {\n        Node *temp = new Node(x);\n        // if the linked list is null we just return the new node.\n        if (head == NULL) {\n            return temp;\n        } else {\n            Node *ptr = head;\n            // we use a pointer to find the last node of list.\n            while (ptr->next != NULL)\n                ptr = ptr->next;\n\n            // we add the new node to the link part(next) of last node in the list.\n            // the new node gets inserted at end and becomes the last node.\n            ptr->next = temp;\n            temp->next = NULL;\n        }\n        // returning the linked list.\n        return head;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution {\n\n    // Function to insert a node at the end of the linked list.\n    Node insertAtEnd(Node head, int x) {\n        Node temp = new Node(x);\n\n        // if the linked list is null we just return the new node.\n        if (head == null) {\n            return temp;\n        } else {\n            Node ptr = head;\n            // we use a pointer to find the last node of list.\n            while (ptr.next != null) {\n                ptr = ptr.next;\n            }\n            // we add new node to the link part(next) of last node in the list.\n            // the new node gets inserted at end and becomes the last node.\n            ptr.next = temp;\n            temp.next = null;\n        }\n        // returning the linked list.\n        return head;\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "class Solution:\n    #Function to insert a node at the end of the linked list.\n    def insertAtEnd(self, head, x):\n        temp = Node(x)\n        #if the linked list is null we just return the new node.\n        if head is None:\n            return temp\n\n        ptr = head\n        #we use a pointer to find the last node of list.\n        while ptr.next:\n            ptr = ptr.next\n\n        #we add the new node to the link part(next) of last node in the list.\n        #the new node gets inserted at end and becomes the last node.\n        ptr.next = temp\n\n        #returning the linked list.\n        return head\n",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "//Back-end complete function Template for javascrip/**\n\nclass Solution {\n    insertAtEnd(head, x) {\n        let temp = new Node(x);\n        if (head === null) {\n            return temp;\n        } else {\n            let ptr = head;\n            while (ptr.next !== null) {\n                ptr = ptr.next;\n            }\n            ptr.next = temp;\n        }\n        return head;\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}