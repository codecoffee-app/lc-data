{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 869719,
            "title": "Linked List Insertion At Beginning",
            "titleSlug": "linked-list-insertion-at-beginning",
            "content": "<p><span style=\"font-size: 18px;\">Given the head of a Singly Linked List and a value x, insert that value x at the beginning of the LinkedList and return the modified Linked List.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples :</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>LinkedList: 1-&gt;2-&gt;3-&gt;4-&gt;5 , x = 6\n<strong>Output: </strong>6-&gt;1-&gt;2-&gt;3-&gt;4-&gt;5<strong>\nExplanation: <br /><img src=\"https://media.geeksforgeeks.org/img-practice/prod/addEditProblem/869719/Web/Other/blobid0_1720520025.png\" width=\"400\" height=\"80\" /><br /></strong>We can see that 6 is inserted at the beginning of the linkedlist<strong>.</strong></span>\n</pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>LinkedList: 5-&gt;4 , x = 1<br /></span><span style=\"font-size: 18px;\"><strong>Output: </strong>1-&gt;5-&gt;4<br /><strong>Explanation: <br /><img src=\"https://media.geeksforgeeks.org/img-practice/prod/addEditProblem/869719/Web/Other/blobid1_1720520049.png\" width=\"400\" height=\"80\" /><br /></strong>We can see that 1 is inserted at the beginning of the linkedlist<strong style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">.</strong><strong><br /></strong></span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:&nbsp;</strong>O(1)<br /><strong>Expected Auxiliary Space:&nbsp;</strong>O(1)</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &lt;= number of nodes &lt;= 10<sup>5<br /></sup>1 &lt;= node-&gt;data , x &lt;= 10<sup>3</sup><sup><br /></sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given the head of a Singly Linked List and a value `x`, insert the value `x` at the beginning of the LinkedList and return the modified Linked List.",
                "constraints": [
                    "1 <= number of nodes <= 10^5",
                    "1 <= node->data, x <= 10^3"
                ],
                "testcases": [
                    {
                        "input": "LinkedList: 1->2->3->4->5 , x = 6",
                        "output": "6->1->2->3->4->5",
                        "explanation": "Insert 6 at the beginning of the linked list 1->2->3->4->5 resulting in 6->1->2->3->4->5."
                    },
                    {
                        "input": "LinkedList: 5->4 , x = 1",
                        "output": "1->5->4",
                        "explanation": "Insert 1 at the beginning of the linked list 5->4 resulting in 1->5->4."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>To solve it in O(1) , You can think of creating a new Linkedlist</p>"
        ],
        "relatedTopics": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nclass Solution {\n  public:\n\n    // Function to insert a node at the begining of the linked list.\n    Node *insertAtBegining(Node *head, int x) {\n\n        // storing the new node with data in a pointer.\n        Node *temp = new Node(x);\n\n        // if the linked list is null we just return the new node.\n        if (head == NULL) {\n            return temp;\n        }\n        // else we just add the list head to the link part(next) of new node.\n        // the new node gets inserted at begining and becomes the first node.\n        temp->next = head;\n\n        // returning the linked list.\n        return temp;\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\nclass Solution {\n    public Node insertAtBegining(Node head, int x) {\n        Node temp = new Node(x);\n        if (head == null) {\n            return temp;\n        }\n        temp.next = head;\n        return temp;\n    }\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\n\nclass Solution:\n    # Function to insert a node at the beginning of the linked list\n    def insertAtBegining(self, head, x):\n        # Create a new node\n        temp = Node(x)\n\n        # If the linked list is empty, return the new node as head\n        if not head:\n            return temp\n\n        # Otherwise, make the new node point to the current head\n        temp.next = head\n\n        # Return the new head\n        return temp\n",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "//Back-end complete function Template for javascript\nclass Solution {\n    // Function to insert a node at the beginning of the linked list.\n    insertAtBeginning(head, x) {\n        // Creating a new node with data.\n        let temp = new Node(x);\n\n        // If the linked list is null, return the new node.\n        if (head === null) {\n            return temp;\n        }\n\n        // Add the list head to the link part (next) of new node.\n        // The new node gets inserted at beginning and becomes the first node.\n        temp.next = head;\n\n        // Returning the linked list.\n        return temp;\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}