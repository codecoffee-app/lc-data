{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 700573,
            "title": "Is Linked List Length Even?",
            "titleSlug": "linked-list-length-even-or-odd",
            "content": "<p><span >Given a linked list, your task is to complete the&nbsp;function <strong>isLengthEven() </strong>which contains the <strong>head</strong> of the linked list, and check whether the length of the linked list is even or not. Return true if it is even, otherwise false.</span></p>\n<p><span ><strong>Examples:</strong></span></p>\n<pre><span ><strong style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Input: </strong><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Linked list: 12-&gt;52-&gt;10-&gt;47-&gt;95-&gt;0<br /><img src=\"https://media.geeksforgeeks.org/img-practice/prod/addEditProblem/700573/Web/Other/blobid1_1720646145.png\" width=\"400\" height=\"80\" /><br /></span><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\"><strong>Output: </strong>true</span><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\"><br /></span><strong style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Explanation: </strong><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">The length of the linked list is 6 which is even, hence returned true.</span></span></pre>\n<pre><span ><strong style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Input: </strong><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Linked list: 9-&gt;4-&gt;3<br /><img src=\"https://media.geeksforgeeks.org/img-practice/prod/addEditProblem/700573/Web/Other/blobid0_1720646126.png\" width=\"400\" height=\"80\" /><br /></span><strong style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Output: </strong><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">false<br /></span><strong style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Explanation: </strong><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">The length of the linked list is 3 which is odd, hence returned false.</span></span></pre>\n<p><strong style=\"font-size: 14pt; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Constraints:<br /></strong><span style=\"font-size: 14pt; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">1 &lt;= number of nodes &lt;= 10<sup>5</sup></span><sup style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\"><br /></sup><span style=\"font-size: 14pt; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">1 &lt;= elements of the linked list &lt;= 10</span><sup>5</sup></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a linked list, determine if its length is even. Implement the `isLengthEven()` function, which takes the head of the linked list as input. Return `true` if the length of the list is even, and `false` otherwise.",
                "constraints": [
                    "1 <= number of nodes <= 10^5",
                    "1 <= elements of the linked list <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "Linked list: 12->52->10->47->95->0",
                        "output": "true",
                        "explanation": "The linked list has 6 nodes. Since 6 is an even number, the function should return true."
                    },
                    {
                        "input": "Linked list: 9->4->3",
                        "output": "false",
                        "explanation": "The linked list has 3 nodes. Since 3 is an odd number, the function should return false."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Traverse the Linked List to find the length.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    bool isLengthEven(struct Node **head) {\n        struct Node *curr = *head;\n        while (curr &&\n               curr->next) // Checking if the current node and the next node exist\n        {\n            curr = curr->next->next; // Moving the pointer two nodes ahead\n        }\n        if (!curr) // If the current node is NULL, i.e., reached the end of the list\n            return true; // Return true, indicating that the length is even\n        return false;    // Otherwise, return false, indicating that the length is odd\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\nclass Solution {\n    public boolean isLengthEven(Node head) {\n        while (head != null &&\n               head.next !=\n                   null) { // Checking if the current node and the next node exist\n            head = head.next.next; // Moving the pointer two nodes ahead\n        }\n        if (head ==\n            null) // If the current node is NULL, i.e., reached the end of the list\n            return true; // Return true, indicating that the length is even\n        return false;    // Otherwise, return false, indicating that the length is odd\n    }\n}\n",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "class Solution:\n\n    def isLengthEven(self, head):\n        # Code here\n\n        #We are traversing the linked list by moving 2 steps at a time.\n        #If head or head.next becomes None, it means the length of the linked list is even.\n        while head and head.next:\n            head = head.next.next\n\n        #If head is None, it means the length of the linked list is even.\n        if not head:\n            return True\n\n        #If head is not None, it means the length of the linked list is odd.\n        return False\n",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "//Back-end complete function Template for javascript\n\nclass Solution {\n    isLengthEven(head) {\n        let len =\n            0; // Initialize a variable \"len\" to store the length of the linked list.\n        while (head) {\n            len++;            // Increment the length for each node in the linked list.\n            head = head.next; // Move to the next node in the linked list.\n        }\n        return len % 2 == 0; // Return 0 if the length is even, 1 if the length is odd.\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}