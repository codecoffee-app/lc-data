{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 879144,
            "title": "Logical Operators",
            "titleSlug": "logical-operators-1597313687--171003",
            "content": "<p><span style=\"font-size: 18px;\">Logical operators <strong>and, or, not </strong>are used in condition checking. Like <strong>a and b</strong> checks if both a and b are True. First a is checked then b is checked. <strong>a or b</strong> checks if either of a or b is True. If one is True; it doesn't check for the other. <strong>not a</strong> complements the boolean value of a.</span><br /><span style=\"font-size: 18px;\"><strong>Note: </strong>0 and empty string are False and all other values are True.</span><br /><span style=\"font-size: 18px;\">In this question you basically need to do<br />a <strong>and </strong>b<br />a <strong>or </strong>b<br /><strong>not </strong>a</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input</strong></span><span ><strong>: </strong></span><span style=\"font-size: 18px;\">a = 0, b = 2\n<strong>Output:</strong> 0 2 True</span><span style=\"font-size: 18px;\">\n<strong>Explanation</strong>: 0 and 2 gives 0. 0 or 2 gives 2. not 0 give True as 0 is False.</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>a = 3, b = 4 \n<strong>Output:</strong> </span><span style=\"font-size: 18px;\">4 3 False</span>\n<span style=\"font-size: 18px;\"><strong>Explanation</strong>: 3 and 4 gives 4 as 3 is True and 4 is also True, so all conditions are passed. 3 or 4 gives 3 as or only checks if either of the condition is true and here 3 is True itself so it doesn't proceed forward. not 3 gives False as 3 was True.</span></pre>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Implement the logical operations 'and', 'or', and 'not' based on the following rules:\n\n*   'a and b': Returns 'b' if both 'a' and 'b' are considered True.  Otherwise, returns 'a' if 'a' is considered False (even if 'b' is True).  First 'a' is evaluated, then 'b'.\n*   'a or b': Returns 'a' if 'a' is considered True. Otherwise returns 'b'. Only evaluates 'b' if 'a' is considered False.\n*   'not a': Returns the boolean complement of 'a'.\n\nConsider 0 and an empty string as False; all other values are considered True.",
                "constraints": [],
                "testcases": [
                    {
                        "input": "a = 0, b = 2",
                        "output": "0 2 True",
                        "explanation": "'0 and 2' evaluates to 0, because 0 is considered False. '0 or 2' evaluates to 2, because 0 is considered False, and the expression continues to return 2. 'not 0' evaluates to True, because 0 is considered False."
                    },
                    {
                        "input": "a = 3, b = 4",
                        "output": "4 3 False",
                        "explanation": "'3 and 4' evaluates to 4, because 3 is considered True, and the expression continues to return 4. '3 or 4' evaluates to 3, because 3 is considered True. 'not 3' evaluates to False, because 3 is considered True."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>p = a and b<br />q = a or b<br />r = not a</p>"
        ],
        "relatedTopics": [
            {
                "name": "python-operators",
                "slug": "python-operators"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\na = int(input())\nb = int(input())\n\np = a and b\nq = a or b\nr = not a\n\nprint(p, q, r)\n",
                "lang_text": "python3"
            }
        ],
        "platform": "GFG"
    }
}