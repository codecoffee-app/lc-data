{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 700785,
            "title": "Logical Operators",
            "titleSlug": "logical-operators",
            "content": "<p><span style=\"font-size:18px\">Logical operators are used when we want to check the truth value of certain statements. Logical operators help us in checking multiple statements together for their truthness.</span></p>\r\n\r\n<p><span style=\"font-size:18px\">Here we will learn logical operators like <strong>AND(&amp;&amp;), OR(||), NOT(!)</strong>. These operators produce either a true or a false as an output.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:\r\n</strong>a = 6\r\nb = 7\r\n<strong>Output:</strong>1 1 0\r\n<strong>Explanation:</strong>a &amp;&amp; b = 1\r\na || b = 1\r\n</span><span style=\"font-size:18px\">(!a) &amp;&amp; (!b) = 0</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task: </strong><br />\r\nYour task is to complete the provided function.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n1 &lt;= a, b,&lt;= 100</span></p>\r\n\r\n<p><strong><span style=\"font-size:18px\">Video:</span></strong></p>\r\n\r\n<p><iframe frameborder=\"0\" height=\"315\" src=\"https://www.youtube.com/embed/WFy9SFJsAWQ\" width=\"560\"></iframe></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p>Print in single line a space separated result of logical operations</p>"
        ],
        "relatedTopics": [
            {
                "name": "cpp-operator",
                "slug": "cpp-operator"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\n//Function to perform logical AND, OR and NOT operations on two inputs.\nvoid logicOp(int a, int b)\n{\n    //printing logical AND, OR, and NOT results.\n    cout<<(a&&b)<<\" \"<<(a||b)<<\" \"<<((!a)&&(!b));\n    \n    //printing new line.\n    cout<<endl;\n}",
                "lang_text": "cpp"
            },
            {
                "lang": "Javascript",
                "full_func": "// Back-end complete function Template for javascript\n\nclass Solution {\n    utility(a, b) {\n        let x = (a && b); // Calculate the logical AND of a and b and store the result in x.\n        let y = (a || b); // Calculate the logical OR of a and b and store the result in y.\n        let z = ((!a) && (!b)); // Calculate the logical AND of the negations of a and b and store the result in z.\n        \n        if (x) // Check if x is true.\n            x = 1; // Set x to 1 if true.\n        else \n            x = 0; // Set x to 0 if false.\n        \n        if (y) // Check if y is true.\n            y = 1; // Set y to 1 if true.\n        else \n            y = 0; // Set y to 0 if false.\n        \n        if (z) // Check if z is true.\n            z = 1; // Set z to 1 if true.\n        else\n            z = 0; // Set z to 0 if false.\n            \n        return (x + \" \" + y + \" \" + z); // Return a string with the values of x, y, and z separated by spaces.\n    }\n}",
                "lang_text": "javascript"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    //Function to calculate output of logical operators.\n    public void logicOp(int a, int b)\n    {\n        /*output (a&&b), (a||b), and ((!a)&&(!b))separated by spaces*/\n        Console.WriteLine($\"{(a != 0 && b != 0 ? 1 : 0)} {(a != 0 || b != 0 ? 1 : 0)} {((a == 0 ? 1 : 0) != 0 && (b == 0 ? 1 : 0) != 0 ? 1 : 0)}\");\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}