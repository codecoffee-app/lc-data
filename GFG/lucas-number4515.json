{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703590,
            "title": "Lucas Number",
            "titleSlug": "lucas-number4515",
            "content": "<p><span style=\"font-size: 18px;\">A Lucas Number is a number which is represented by the following recurrence<br />L<sub>n</sub>&nbsp;= L<sub>n-1</sub>&nbsp;+ L<sub>n-2</sub>&nbsp;for<strong> n&gt;1</strong><br />L<sub>0</sub>&nbsp;= 2<br />L<sub>1</sub>&nbsp;= 1</span></p>\n<p><span style=\"font-size: 18px;\">Given a number <strong>n,</strong> find the n<strong><sup>th</sup></strong> lucas number.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Note:</strong>&nbsp;Since the output may be very large calculate the answer&nbsp;<strong>modulus 10^9+7.</strong></span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>n = 5\n<strong>Output:</strong> 11\n<strong>Explanation</strong>: L<sub>3</sub> + L<sub>4</sub> = L<sub>5, </sub>L<sub>3 </sub>= 4 and L<sub>4</sub> = 7</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input</strong>: n= 7\n<strong>Output:</strong> 29\n<strong>Explanation</strong>: L<sub>5</sub></span><span style=\"font-size: 18px;\">&nbsp;+ L<sub>6</sub></span><span style=\"font-size: 18px;\">&nbsp;= L<sub>7, </sub></span><span style=\"font-size: 18px;\">L<sub>5</sub></span><sub> </sub><span style=\"font-size: 18px;\">= 11 and L<sub>6</sub></span><span style=\"font-size: 18px;\"> = 18</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &lt;= n &lt;= 10<sup>6</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p>To solve in O(1) space, keep track of current, next, previous and previous-to-previous terms in the sequence.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "series",
                "slug": "series"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "\r\n\r\n#define m 1000000007\r\nclass Solution\r\n{\r\n    public:\r\n        long long lucas(int n)\r\n        {\r\n            // declaring base values\r\n            // for positions 0 and 1\r\n            long long a = 2, b = 1, c, i;\r\n         \r\n            if (n == 0)\r\n                return a;\r\n         \r\n            // generating number\r\n            for (i = 2; i <= n; i++)\r\n            {\r\n                c = (a%m + b%m)%m;\r\n                a = b%m;\r\n                b = c%m;\r\n            }\r\n            return b%m;\r\n        }\r\n        \r\n};\r\n",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\r\n\r\nclass Solution\r\n{\r\n    public long lucas(int n)\r\n        {\r\n            int m = 1000000007;\r\n            // declaring base values\r\n            // for positions 0 and 1\r\n            long a = 2, b = 1, c, i;\r\n         \r\n            if (n == 0)\r\n                return a;\r\n         \r\n            // generating number\r\n            for (i = 2; i <= n; i++)\r\n            {\r\n                c = (a%m + b%m)%m;\r\n                a = b%m;\r\n                b = c%m;\r\n            }\r\n            return b%m;\r\n        }\r\n        \r\n};\r\n",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\r\n\r\nclass Solution\r\n{\r\n    //Complete this function\r\n    public long lucas(int n)\r\n    {\r\n        long m = 1000000007;\r\n        long a = 2, b = 1, c, i;\r\n     \r\n        if (n == 0)\r\n            return a;\r\n     \r\n        // generating number\r\n        for (i = 2; i <= n; i++)\r\n        {\r\n            c = (a%m + b%m)%m;\r\n            a = b%m;\r\n            b = c%m;\r\n        }\r\n        return b%m;\r\n    }\r\n}",
                "lang_text": "csharp"
            },
            {
                "lang": "Javascript",
                "full_func": "//Back-end complete function Template for javascript\nconst m = 1000000007;\n\nclass Solution {\n    /**\n     * @param {number} n\n     * @returns {number}\n     */\n    lucas(n) {\n        // Declaring base values for positions 0 and 1\n        let a = 2, b = 1, c;\n\n        if (n === 0) return a;\n\n        // Generating Lucas number\n        for (let i = 2; i <= n; i++) {\n            c = (a % m + b % m) % m;\n            a = b % m;\n            b = c % m;\n        }\n\n        return b % m;\n    }\n}\n",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}