{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703467,
            "title": "Unique DigitSum",
            "titleSlug": "lucky-ishaan0443",
            "content": "<p><span >You are given an array of integers <strong>arr[]</strong>, You have to find the total unique sums of digits of elements in array <strong>arr[]</strong>.</span></p>\n<p><span ><strong>Examples:</strong></span></p>\n<pre><span ><strong>Input:</strong> arr[] = [123, 42, 45, 78, 12345]\n<strong>Output :</strong> 3\n<strong>Explanation: </strong>Sum of digits of elements of arrays are respectively 6, 6, 9, 15, 15 so total 3 unique sums.</span></pre>\n<pre><span ><strong>Input:</strong> arr[] = [1, 2, 1] \n<strong>Output:</strong> 2<br /><strong>Explanation: </strong>Sum of digits of elements of arrays are respectively 1, 2, 1 so total 2 unique sums.<strong style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\"> </strong></span></pre>\n<p><span ><strong>Expected Time Complexity:</strong> O(n * log10(arr[i])).<br /><strong>Expected Auxiliary Space:</strong>&nbsp;O(1).</span><br /><br /><span ><strong>Constraints :</strong><br />1 &le; arr.size() &le; 10<sup>5</sup><br />1 &le; arr[i] &le; 10<sup>6</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p><span >Get the digit sum of all the elements of the given array, then remove the duplicate occurrences of the sum.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    int sumOfDigits(int num) {\n        int sum = 0;\n        while (num > 0) {\n            sum += num % 10;\n            num /= 10;\n        }\n        return sum;\n    }\n\n    int uniqueDigitSums(vector<int> &arr) {\n        unordered_set<int> uniqueSums;\n        for (int num : arr) {\n            int digitSum = sumOfDigits(num);\n            uniqueSums.insert(digitSum);\n        }\n        return uniqueSums.size();\n    }\n};\n",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution {\n    private int sumOfDigits(int num) {\n        int sum = 0;\n        while (num > 0) {\n            sum += num % 10;\n            num /= 10;\n        }\n        return sum;\n    }\n\n    public int uniqueDigitSums(int[] arr) {\n        Set<Integer> uniqueSums = new HashSet<>();\n        for (int num : arr) {\n            int digitSum = sumOfDigits(num);\n            uniqueSums.add(digitSum);\n        }\n        return uniqueSums.size();\n    }\n}\n",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "class Solution:\n\n    def sumOfDigits(self, num):\n        sum_digits = 0\n        while num > 0:\n            sum_digits += num % 10\n            num //= 10\n        return sum_digits\n\n    def uniqueDigitSums(self, arr):\n        unique_sums = set()\n        for num in arr:\n            digit_sum = self.sumOfDigits(num)\n            unique_sums.add(digit_sum)\n        return len(unique_sums)\n",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "class Solution {\n    sumOfDigits(num) {\n        let sum = 0;\n        while (num > 0) {\n            sum += num % 10;\n            num = Math.floor(num / 10);\n        }\n        return sum;\n    }\n\n    uniqueDigitSums(arr) {\n        const uniqueSums = new Set();\n        for (let num of arr) {\n            const digitSum = this.sumOfDigits(num);\n            uniqueSums.add(digitSum);\n        }\n        return uniqueSums.size;\n    }\n}\n",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}