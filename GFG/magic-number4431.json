{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704150,
            "title": "Magic Number",
            "titleSlug": "magic-number4431",
            "content": "<p><span style=\"font-size: 20px;\">A magic number is defined as a number that can be expressed as a power of 5 or sum of unique powers of 5. First few magic numbers are 5, 25, 30(5 + 25), 125, 130(125 + 5), &hellip;<br />Given the value of n, find the n'th Magic number modulo </span><span style=\"font-size: 18px;\">10<sup>9</sup>+7</span><span style=\"font-size: 20px;\">.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>n = 1\n<strong>Output:</strong> 5\n<strong>Explanation</strong>: 1'st Magic number is 5.</span></pre>\n<p><span style=\"font-size: 18px;\">&acirc;&euro;&lsaquo;<strong>Example 2:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input</strong>: n = 2\n<strong>Output:</strong> 25\n<strong>Explanation</strong>: 2'nd Magic number is 25. </span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Your Task:&nbsp;&nbsp;</strong><br />You don't need to read input or print anything. Your task is to complete the function&nbsp;<strong>nthMagicNo</strong><strong>()</strong>&nbsp;which takes <strong>n</strong> input and returns the answer with </span><span style=\"font-size: 20px;\">modulo </span><span style=\"font-size: 18px;\">10<sup>9</sup>+7</span><span style=\"font-size: 18px;\">.<br /><br /><strong>Expected Time Complexity:</strong>&nbsp;O(log n)<br /><strong>Expected Auxiliary Space:</strong>&nbsp;O(1)</span><br /><br /><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &le; n &le; 10<sup>5</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "A magic number is a number that can be expressed as a power of 5 or the sum of unique powers of 5. Given an integer *n*, find the *n*th magic number modulo 10<sup>9</sup> + 7.",
                "constraints": [
                    "1 <= n <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "1",
                        "output": "5",
                        "explanation": "The first magic number is 5."
                    },
                    {
                        "input": "2",
                        "output": "25",
                        "explanation": "The second magic number is 25."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>If we notice carefully the magic numbers can be represented as 001, 010, 011, 100, 101, 110 etc, where 001 is 0*pow(5,3) + 0*pow(5,2) + 1*pow(5,1). So basically we need to add powers of 5 for each bit set in given integer n.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "amazon"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\nclass Solution{   \npublic:\n    //Function to find the nth magic number.\n    long long int nthMagicNo(int n) { \n        long long int pow = 1, answer = 0; \n        long long M = 1e9 + 7;\n        \n        //Iterating until n becomes zero.\n        while (n) { \n            \n           //Calculating pow as pow multiplied by 5.\n           pow = pow*5; \n           pow %= M;\n           \n           //Checking if n has a binary digit set.\n           if (n & 1) \n             //Adding pow to the answer.\n             answer += pow; \n           answer %= M;\n           \n           //Right shifting n by 1.\n           n >>= 1;  \n        } \n        \n        //Returning the answer.\n        return answer % M; \n    } \n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\nclass Solution\n{\n    //Complete this function\n    public long nthMagicNo(int n)\n    {\n        long pow = 1, answer = 0;\n        long M = 1000000007;\n\n        while (n != 0)\n        {\n            pow = pow * 5 % M;\n\n            if ((n & 1) == 1)\n                answer = (answer + pow) % M;\n\n            n >>= 1;\n        }\n\n        return answer % M;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}