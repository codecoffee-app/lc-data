{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704613,
            "title": "Magic numbers",
            "titleSlug": "magic-numbers3143",
            "content": "<p><span style=\"font-size:18px\">Given two function, one is<strong> h(x)</strong> which is the <strong>product</strong> of all the number in an&nbsp;array A[ ] having size N and another<br />\nfunction <strong>f(x)</strong> which denotes&nbsp;the <strong>GCD&nbsp;</strong>of all the numbers in an array. Your task is to find the value of &nbsp;<strong>h(x)<sup>f(x)</sup></strong>.</span><br />\n<span style=\"font-size:18px\"><strong>Note:&nbsp;</strong>Since the answer can be very large, use modulo 10<sup>9</sup>+7.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\n<span style=\"font-size:18px\"><strong>N = </strong>2, <strong>A[] = </strong>{2, 4}</span>\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\n<span style=\"font-size:18px\">64</span>\n<span style=\"font-size:18px\"><strong>Explanation:</strong></span>\n<span style=\"font-size:18px\">h(x) = 8, f(x) = 2, Therefore, the\nanswer is 8<sup>2</sup> = 64.</span></pre>\n\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\n<span style=\"font-size:18px\"><strong>N = </strong>3, <strong>A[] = </strong>{1, 3, 7}</span>\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\n<span style=\"font-size:18px\">21</span>\n<span style=\"font-size:18px\"><strong>Explanation:</strong></span>\n<span style=\"font-size:18px\">h(x) = 21, f(x) = 1, Therefore, the\nanswer is 21<sup>1</sup> = 21.</span>\n</pre>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>getVal()</strong> which takes an Integer N and an array of integers A[] as input and returns the answer.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(N)<br />\n<strong>Expected Auxiliary Space:</strong> O(1)</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong></span><br />\n<span style=\"font-size:18px\">1 &lt;= N &lt;= 10<sup>5</sup><br />\n1 &lt;= A[i] &lt;= 10<sup>5</sup></span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array `A` of size `N`, define two functions: `h(x)` as the product of all elements in `A`, and `f(x)` as the greatest common divisor (GCD) of all elements in `A`.  Calculate `h(x)` raised to the power of `f(x)`, i.e., `h(x)^f(x)`. Return the result modulo 10^9 + 7.",
                "constraints": [
                    "1 <= N <= 10^5",
                    "1 <= A[i] <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "N = 2, A[] = {2, 4}",
                        "output": "64",
                        "explanation": "The product of the array elements (h(x)) is 2 * 4 = 8. The GCD of the array elements (f(x)) is 2. Therefore, the result is 8^2 = 64."
                    },
                    {
                        "input": "N = 3, A[] = {1, 3, 7}",
                        "output": "21",
                        "explanation": "The product of the array elements (h(x)) is 1 * 3 * 7 = 21. The GCD of the array elements (f(x)) is 1. Therefore, the result is 21^1 = 21."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Use Modular Exponentiation to find h(x)<sup>f(x)</sup></span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function template in C++\n\nclass Solution {\n  public:\n    //Function to calculate the greatest common divisor of two numbers.\n    int gcd(int x,int y)\n    {\n    \tif(y==0)\n    \t\treturn x;\n    \telse\n    \t\treturn gcd(y,x%y);\n    }\n    \n    //Function to calculate the value of an expression using given inputs.\n    long long getVal(int N, int A[]) {\n        \n        long long int fx=1, gx=0, ans=1;\n        \n        // Get the product of all integers in the array.\n        for(int i=0 ; i<N ; i++)\n    \t{\n    \t\tfx=(fx*A[i])%1000000007;\n    \t\tgx=gcd(gx,A[i]);\n    \t}\n    \t\n    \t//Using modular exponentiation to find the final value.\n        while(gx!=0)\n        {\n        \tif(gx%2==1)\n        \t{\n        \t\tans=(ans*fx)%1000000007;\n        \t}\n        \tfx=(fx*fx)%1000000007;\n        \tgx/=2;\n        }\n        \n        return ans;\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "class Solution {\n    getVal(arr,n){\n        let fx = 1, gx = 0, ans = 1;\n        \n        // Get the product of all integers o the array.\n        for(let i=0; i<n; i++){\n            fx = (fx * arr[i]) % 1000000007;\n            gx = gcd(gx, arr[i]);\n        }\n        \n        // function to calculate gcd\n        function gcd(x, y){\n            if(y === 0){\n                return x;\n            }\n            else{\n                return gcd(y, x%y);\n            }\n        }\n        \n        // short method to find out the modular exponention\n        while(gx !== 0){\n            if(gx%2 === 1){\n                ans = (ans * fx) % 1000000007;\n            }\n            fx = (fx * fx) % 1000000007;\n            gx /= 2;\n        }\n        \n        return ans;\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}