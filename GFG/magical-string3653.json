{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703636,
            "title": "Magical String[Duplicate Problem]",
            "titleSlug": "magical-string3653",
            "content": "<p><span style=\"font-size:18px\">You are given a string S, convert it into a magical string.<br />\r\nA string can be made into a magical string if the alphabets are swapped in the given manner: a-&gt;z or z-&gt;a, b-&gt;y or y-&gt;b, and so on. &nbsp;</span><br />\r\n&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Note:&nbsp;</strong>All the alphabets in the string are in lowercase.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong><span style=\"font-size:18px\">Example 1:</span></strong></p>\r\n\r\n<pre>\r\n<strong><span style=\"font-size:18px\">Input:</span></strong>\r\n<span style=\"font-size:18px\">S = varun\r\n<strong>Output:</strong></span>\r\n<span style=\"font-size:18px\">ezifm</span>\r\n<strong><span style=\"font-size:18px\">Explanation:</span></strong>\r\n<span style=\"font-size:18px\">Magical string of &quot;varun&quot; \r\nwill be &quot;ezifm&quot; </span>\r\n<span style=\"font-size:18px\">since v-&gt;e , a-&gt;z , \r\nr-&gt;i , u-&gt;f and n-&gt;m.\r\n</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong><span style=\"font-size:18px\">Example 2:</span></strong></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\r\n<span style=\"font-size:18px\">S = akshay\r\n<strong>Output:</strong></span>\r\n<span style=\"font-size:18px\">zphszb</span>\r\n<strong><span style=\"font-size:18px\">Explanation:</span></strong>\r\n<span style=\"font-size:18px\">Magical string of &quot;akshay&quot; \r\nwill be &quot;zphszb&quot; </span>\r\n<span style=\"font-size:18px\">since a-&gt;z , k-&gt;p , s-&gt;h , \r\nh-&gt;s , a-&gt;z and y-&gt;b.\r\n</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong><span style=\"font-size:18px\">Your Task:</span></strong></p>\r\n\r\n<p><span style=\"font-size:18px\">You don&#39;t need to read input or print anything. Your task is to complete the function magicalString() which takes the string S and returns the magical string.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\">Expected Time Complexity: O(N)<br />\r\nExpected Auxiliary Space: O(1)</span><br />\r\n&nbsp;</p>\r\n\r\n<p><span style=\"font-size:20px\">&nbsp;</span><br />\r\n<span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n1&lt;=Length of String&lt;=100</span></p>\r\n\r\n<p>&nbsp;</p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Try pre-storing what&nbsp;character will be turned in the magical string.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "// Back-end complete function template for C++\n\nclass Solution{   \npublic:\n    // Function to convert given string into its magical string\n    string magicalString(string S){\n        \n        // Initialzing the magical string\n        string b = \"abcdefghijklmnopqrstuvwxyz\";\n        int len = S.size();\n        string ans = \"\";\n        \n        // Iterating over each character of the given string\n        for(int i=0; i<len; i++){\n            // Finding the position of the character in the magical string\n            int d = (S[i]-'a');\n            // Appending the corresponding character from the magical string to the answer string\n            ans += b[25-d];\n        }\n        // Returning the magical string\n        return ans;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\r\nclass Solution:\r\n    #Function to convert a string to its \"magical\" form.\r\n    def magicalString(ob,S):\r\n        \r\n        b=\"abcdefghijklmnopqrstuvwxyz\"\r\n\r\n        size=len(S)\r\n        ans=\"\"\r\n\r\n        #iterating over each character in the given string.\r\n        for i in range(size):\r\n\r\n            #calculating the difference between the ASCII value of the current character\r\n            #and the ASCII value of 'a' and using it to find the corresponding character\r\n            #in the \"magical\" string representation.\r\n            d=ord(S[i])-ord('a')\r\n            ans+=b[25-d]\r\n\r\n        #returning the \"magical\" string.\r\n        return ans\r\n        ",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n\nclass Solution {\n    //Function to convert a string to its \"magical\" form.\n    magicalString(S) {\n        //your code here\n        let ans = \"\";\n        for (let i = 0; i < S.length; i++) {\n            let d = S.charCodeAt(i) - 'a'.charCodeAt(0);\n            ans += String.fromCharCode('z'.charCodeAt(0) - d);\n        }\n        return ans;\n    }\n}",
                "lang_text": "javascript"
            },
            {
                "lang": "C#",
                "full_func": "class Solution\n{\n    public string magicalString(string S)\n    {\n        string b = \"abcdefghijklmnopqrstuvwxyz\";\n        int len = S.Length;\n        string ans = \"\";\n        \n        for(int i=0; i<len; i++){\n            int d = (S[i]-'a');\n            ans += b[25-d];\n        }\n        return ans;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}