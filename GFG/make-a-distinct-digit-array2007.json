{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704959,
            "title": "Make a Distinct Digit Array",
            "titleSlug": "make-a-distinct-digit-array2007",
            "content": "<p><span style=\"font-size: 18px;\">Given an array <strong>nums</strong> of positive integers of size <strong>N</strong>. Find&nbsp;all distinct digits present in <strong>nums</strong>.</span><br />&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>nums = [131, 11, 48]\n<strong>Output: </strong>1 3 4 8\n<strong>Explanation: </strong>1, 3, 4, and 8 are only distinct\ndigits that can be extracted from the numbers\nof the array.</span>\n</pre>\n<p><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>nums = [111, 222, 333, 4444, 666]\n<strong>Output: </strong>1 2 3 4 6\n<strong>Explanation: </strong>1, 2, 3, 4, and 6 are only distinct\ndigits that can be extracted from the numbers\nof the array.</span>\n</pre>\n<p>&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Your Task:&nbsp;</strong><br />You don't need to read or print anything. Your task is to complete the function&nbsp;<strong>common_digits()</strong>&nbsp;which takes <strong>nums </strong>as input parameter and returns a list of digits which can be extracted from the given array in ascending order.</span><br />&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:&nbsp;</strong>O(N)<br /><strong>Expected Space Complexity:&nbsp;</strong>O(N)</span><br />&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &lt;= N &lt;= 10<sup>5</sup><br />1 &lt;= nums<sub>i</sub>&nbsp;&lt;= 10<sup>9</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array `nums` of positive integers, find all the distinct digits present in `nums`. Return the digits in ascending order.",
                "constraints": [
                    "1 <= N <= 10^5",
                    "1 <= nums[i] <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "[131, 11, 48]",
                        "output": "[1, 3, 4, 8]",
                        "explanation": "The distinct digits present in the array are 1, 3, 4, and 8."
                    },
                    {
                        "input": "[111, 222, 333, 4444, 666]",
                        "output": "[1, 2, 3, 4, 6]",
                        "explanation": "The distinct digits present in the array are 1, 2, 3, 4, and 6."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Use hash map.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [
            "zoho",
            "amazon",
            "makemytrip"
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution{\n\tpublic:\n    // Function to find the common digits in the given array of numbers.\n   \tvector<int>  common_digits(vector<int>nums){\n   \t\t// Hash array to store the count of digits.\n   \t\tvector<int>hash(10,0);\n   \t\t\n   \t\t// Iterating over each number in the array.\n   \t\tfor(auto i: nums){\n   \t\t\tint x = i;\n   \t\t\t// Extracting digits from the number and updating the count in the hash array.\n   \t\t\twhile(x){\n   \t\t\t\thash[x%10]++;\n   \t\t\t\tx /= 10;\n   \t\t\t}\n   \t\t}\n   \t\t\n   \t\t// Array to store the common digits.\n   \t\tvector<int>res;\n   \t\t\n   \t\t// Adding digits with count greater than 0 to the result array.\n   \t\tfor(int i = 0; i <= 9; i++)\n   \t\t\tif(hash[i])\n   \t\t\t\tres.push_back(i);\n   \t\t\n   \t\t// Returning the result array.\n   \t\treturn res;\n   \t}    \n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}