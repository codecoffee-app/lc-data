{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 701601,
            "title": "Make pair",
            "titleSlug": "make-pair",
            "content": "<p><span style=\"font-size: 18px;\">Given two elements<strong> x and y</strong>. The task is to return the pair formed with given elements.</span></p>\n<p><span ><strong>Examples :</strong></span></p>\n<pre><strong style=\"font-size: 18px;\">Input:</strong><span style=\"font-size: 18px;\"> 4 5 <br /></span><span style=\"font-size: 18px;\"><strong>Output: </strong>(4,5)<br /></span></pre>\n<pre><strong><span style=\"font-size: 18px;\">Input:</span></strong><span style=\"font-size: 18px;\"> 1 0<br /><strong>Output: </strong>(1,0)</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &lt;= x, y &lt;= 1000</span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p>Declare a pair of int &nbsp;pair&lt;int, int&gt; ans</p>\n\n<p>then assign first to first num and second to second num</p>"
        ],
        "relatedTopics": [
            {
                "name": "STL",
                "slug": "stl"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\n/*\nX, Y: two numbers whose pair is to be returned\n*/\n\npair<int, int> makePair(int X, int Y) {\n    pair<int, int> ans;\n    ans.first = X;\n    ans.second = Y;\n    return ans;\n}",
                "lang_text": "cpp"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    \n    //Function to make a pair of X and Y.\n    public Tuple<int, int> makePair(int X, int Y)\n    {\n        Tuple<int, int> ans = new Tuple<int, int>(X, Y);\n        return ans;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}