{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704701,
            "title": "Make the hit in power game !",
            "titleSlug": "make-the-hit-in-power-game3729",
            "content": "<p><span style=\"font-size:18px\">There are two integers (<strong>X&nbsp;and N</strong>).&nbsp;You&nbsp;have to make a number in such a way&nbsp;that it contains the first digit and last digit occurring in <strong>X<sup>1&nbsp;</sup>, X<sup>2&nbsp;</sup>, X<sup>3</sup>, &nbsp;.... X<sup>N</sup></strong>.</span></p>\r\n\r\n<p><span style=\"font-size:18px\">For Example: let&#39;s take &nbsp;X=12&nbsp;and N=5.<br />\r\nlet l is last digit and f is first digit.<br />\r\n12<sup>1 &nbsp;</sup>= 12, the <strong>first </strong>digit of 12 is <strong>1</strong>(f1) and <strong>last&nbsp;</strong>digit is <strong>2</strong> (l1).<br />\r\n12<sup>2</sup>&nbsp;= 144, the <strong>first </strong>digit of 144 is <strong>1</strong> (f2) and <strong>last </strong>digit is <strong>4</strong> (l2).<br />\r\n12<sup>3</sup>&nbsp;= 1728, the <strong>first </strong>digit of 1728&nbsp;is <strong>1</strong> (f3) and <strong>last </strong>digit is <strong>8</strong> &nbsp;(l3).<br />\r\n12<sup>4</sup>&nbsp;= 20736, the <strong>first </strong>digit of 20736&nbsp;is <strong>2&nbsp;</strong>(f4) and <strong>last </strong>digit is <strong>6</strong> (l4).<br />\r\n12<sup>5</sup>&nbsp;= 248832, the <strong>first </strong>digit of 248832&nbsp;is <strong>2</strong>&nbsp;(f5) and <strong>last </strong>digit is <strong>2</strong> (l5).<br />\r\nWe made a number in the format f1 l1 f2 l2 f3 l3 f4 l4 f5 l5 .<br />\r\nso number becomes <strong>1214182622</strong>.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\r\n<strong><span style=\"font-size:18px\">X = </span></strong><span style=\"font-size:18px\">10, <strong>N = </strong>2</span>\r\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\r\n<span style=\"font-size:18px\">1010</span>\r\n<span style=\"font-size:18px\"><strong>Explanation:</strong></span>\r\n<span style=\"font-size:18px\">10<sup>1</sup> = 10. So, f1=1 and l1=0</span>\r\n<span style=\"font-size:18px\">10<sup>2</sup> = 100. So, f2=1 and l2=0</span>\r\n<span style=\"font-size:18px\">Therefore, Output is 1010.</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\r\n<strong><span style=\"font-size:18px\">X = </span></strong><span style=\"font-size:18px\">99, <strong>N = </strong>1</span>\r\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\r\n<span style=\"font-size:18px\">99</span>\r\n<span style=\"font-size:18px\"><strong>Explanation:</strong></span>\r\n<span style=\"font-size:18px\">99<sup>1</sup> = 99. So, f1=9 and l1=9</span>\r\n<span style=\"font-size:18px\">Therefore, Output is 99.</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>powerGame()</strong> which takes 2 Integers X and N as input and returns the answer.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(N*(Sum of number of digits in X<sup>1</sup>, X<sup>2</sup>..., X<sup>N</sup>))<br />\r\n<strong>Expected Auxiliary Space:</strong> O(1)</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong></span><br />\r\n<span style=\"font-size:18px\">10 &lt;= X &lt;= 100</span><br />\r\n<span style=\"font-size:18px\">1 &lt;= N &lt;= 8</span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two integers, X and N, construct a number by concatenating the first and last digits of X<sup>1</sup>, X<sup>2</sup>, X<sup>3</sup>, ..., X<sup>N</sup>.  For each power of X from 1 to N, extract the first and last digit and append them to the result string. Return the final concatenated string.",
                "constraints": [
                    "10 <= X <= 100",
                    "1 <= N <= 8"
                ],
                "testcases": [
                    {
                        "input": "X = 10, N = 2",
                        "output": "1010",
                        "explanation": "10<sup>1</sup> = 10, so the first digit is 1 and the last digit is 0.\n10<sup>2</sup> = 100, so the first digit is 1 and the last digit is 0.\nConcatenating these gives 1010."
                    },
                    {
                        "input": "X = 99, N = 1",
                        "output": "99",
                        "explanation": "99<sup>1</sup> = 99, so the first digit is 9 and the last digit is 9.\nConcatenating these gives 99."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">You can just find every power of X upto N and find the first and last digits of the numbers to get the required answer.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Numbers",
                "slug": "numbers"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\r\n\r\nclass Solution {\r\n  public:\r\n    long long powerGame(long long X, long N) {\r\n        \r\n        long long ans = 0;   // Initializing ans as 0\r\n        \r\n        long long d = X;    // Creating a duplicate of original X\r\n        \r\n        for(int i=1 ; i<=N ; i++)\r\n        {\r\n            long long dup = X;\r\n            long long c = dup%10;    // Last digit of (X power i)\r\n            // Loop to get the First digit of (X power i)\r\n            while(dup>=10)\r\n                dup/=10;\r\n            \r\n            ans+=dup;\r\n            ans*=10;\r\n            ans+=c;\r\n            ans*=10;\r\n            \r\n            X *= d;    // Changing X to it's next power\r\n        }\r\n        \r\n        ans/=10;\r\n        \r\n        return ans;\r\n    }\r\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}