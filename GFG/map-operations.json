{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 700916,
            "title": "Map Operations",
            "titleSlug": "map-operations",
            "content": "<p><span style=\"font-size: 18px;\">You are given an array<strong> arr</strong>. You need to <strong>insert </strong>the elements of <strong>arr</strong> into a map<strong>(element as key and index as value</strong>).&nbsp;<span ><span style=\"color: #1e2229; font-family: Nunito; background-color: #ffffff;\">Also, you need to</span><span style=\"box-sizing: border-box; font-weight: bolder; line-height: 1.7em; color: #1e2229; background-color: #ffffff; font-family: var(--gfg-font-secondary) !important;\">&nbsp;erase a given element x</span><span style=\"color: #1e2229; font-family: Nunito; background-color: #ffffff;\">&nbsp;from the map and print \"</span><span style=\"box-sizing: border-box; font-weight: bolder; line-height: 1.7em; color: #1e2229; background-color: #ffffff; font-family: var(--gfg-font-secondary) !important;\">erased x</span><span style=\"color: #1e2229; font-family: Nunito; background-color: #ffffff;\">\" if&nbsp;</span><span style=\"box-sizing: border-box; font-weight: bolder; line-height: 1.7em; color: #1e2229; background-color: #ffffff; font-family: var(--gfg-font-secondary) !important;\">successfully&nbsp;</span><span style=\"color: #1e2229; font-family: Nunito; background-color: #ffffff;\">erased, else print \"</span><span style=\"box-sizing: border-box; font-weight: bolder; line-height: 1.7em; color: #1e2229; background-color: #ffffff; font-family: var(--gfg-font-secondary) !important;\">not found</span><span style=\"color: #1e2229; font-family: Nunito; background-color: #ffffff;\">\".</span></span><br />Complete&nbsp;<strong>print()</strong> function to print the map.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Example :</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr[] = [9, 8, 7, 4, 4, 2, 1, 1, 9, 8], x = 1\n<strong>Output:</strong> \n1 7\n2 5\n4 4\n7 2\n8 9\n9 8<br />erased 1\n2 5\n4 4\n7 2\n8 9\n9 8</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &lt;= arr.size() &lt;= 1000<br />1 &lt;= arr[i] &lt;= 10<sup>6</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array `arr`, insert its elements into a map where the element is the key and its index is the value. After inserting all elements, attempt to erase a given element `x` from the map. Print \"erased x\" if the element is successfully erased, and \"not found\" otherwise. Finally, print the contents of the map.",
                "constraints": [
                    "1 <= arr.size() <= 1000",
                    "1 <= arr[i] <= 10^6"
                ],
                "testcases": [
                    {
                        "input": "arr = [9, 8, 7, 4, 4, 2, 1, 1, 9, 8], x = 1",
                        "output": "1 7\n2 5\n4 4\n7 2\n8 9\n9 8\nerased 1\n2 5\n4 4\n7 2\n8 9\n9 8",
                        "explanation": "The initial map contains all elements and their last seen index.  The value '1' is then removed and the map is printed again without the entry for '1'."
                    },
                    {
                        "input": "arr = [1, 2, 3], x = 4",
                        "output": "1 0\n2 1\n3 2\nnot found\n1 0\n2 1\n3 2",
                        "explanation": "The initial map contains 1->0, 2->1 and 3->2. x = 4 is not present in the array arr. Thus, after attempting deletion, \"not found\" is printed, and the map remains unchanged."
                    },
                    {
                        "input": "arr = [5,5,5], x = 5",
                        "output": "5 2\nerased 5",
                        "explanation": "The initial map contains 5->2 (last index of 5). Then 5 is erased and the map becomes empty."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:14px\">1. Concept of iteration and library method will be useful.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Map",
                "slug": "map"
            },
            {
                "name": "STL",
                "slug": "stl"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nmap<int, int> mapInsert(vector<int> &arr) {\n    int n = arr.size();\n    map<int, int> mp;\n    for (int i = 0; i < n; i++)\n        mp[arr[i]] = i; // inserting elements in map\n\n    return mp;\n}\n\nvoid mapDisplay(map<int, int> &mp) {\n    for (auto itr = mp.begin(); itr != mp.end(); itr++) {\n        cout << itr->first << \" \" << itr->second << endl; // printing elements of map\n    }\n}\n\nvoid mapErase(map<int, int> &mp, int x) {\n    // deleteing x if present\n    if (mp.count(x) != 0) {\n        mp.erase(x);\n        cout << \"erased \" << x;\n    } else\n        cout << \"not found\";\n\n    cout << endl;\n}",
                "lang_text": "cpp"
            }
        ],
        "platform": "GFG"
    }
}