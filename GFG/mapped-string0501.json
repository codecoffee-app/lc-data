{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703651,
            "title": "Mapped String",
            "titleSlug": "mapped-string0501",
            "content": "<p><span style=\"font-size: 18px;\">Given <strong>N</strong>&nbsp;unique characters (in infinite supply),&nbsp;find the number of possible mapped strings&nbsp;of length <strong>N</strong>.<br />A mapped string follows following properties:<br />1. Both left and right halves of the string contains same set of&nbsp;characters.<br />2. Each half contains <strong>N / 2 </strong>unique characters.<br />For example: &ldquo;<strong>abccba</strong>&rdquo; is Mapped string since the left and right halves&nbsp;contain unique characters and both halves contain same set of characters but \"<strong>abcbcd</strong>\" is not.<br />As the answer can be very large, find it modulo 10<sup>9</sup> + 7.<br /><strong>Note</strong>: <strong>N</strong> is always even.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input</strong>: N = 2\n<strong>Output:</strong>&nbsp;2&nbsp;\n<strong>Explanation</strong>: Suppose two unique characters\nare 'a' and 'b', then there will be two \nmapped strings - 'aa' and 'bb'.\n</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>N = 4\n<strong>Output:&nbsp;</strong>24\n<strong>Explanation</strong>: Suppose four unique characters\nare 'a', 'b', 'c' and 'd' and for each pair of\nthem there will be four mapped strings. Hence, \nthere are total 6 pairs so 6 * 4 = 24 total \nmapped strings.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Your Task:&nbsp;&nbsp;</strong><br />You dont need to read input or print anything. Complete the function <strong>mapStr()&nbsp;</strong>which takes N&nbsp;as input parameter and returns the number of possible mapped strings&nbsp;of length N.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong> O(N)<br /><strong>Expected Auxiliary Space:</strong> O(N)</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />2 &le; N&nbsp;&le; 100000</span></p>",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given N unique characters (in infinite supply), find the number of possible mapped strings of length N. A mapped string follows these properties:\n\n1.  Both left and right halves of the string contain the same set of characters.\n2.  Each half contains N / 2 unique characters.\n\nFor example, \"abccba\" is a mapped string because the left and right halves contain unique characters, and both halves contain the same set of characters. However, \"abcbcd\" is not a mapped string.\n\nCalculate the answer modulo 10<sup>9</sup> + 7. N is always even.",
                "constraints": [
                    "2 <= N <= 100000"
                ],
                "testcases": [
                    {
                        "input": "2",
                        "output": "2",
                        "explanation": "With two unique characters 'a' and 'b', the possible mapped strings are 'aa' and 'bb'."
                    },
                    {
                        "input": "4",
                        "output": "24",
                        "explanation": "With four unique characters 'a', 'b', 'c', and 'd', there are 6 possible pairs of characters for each half of the string.  For each pair, there are 4 possible mapped strings (e.g. if the pair is ab, we can form abba, baab, abab, baba), resulting in 6 * 4 = 24 total mapped strings."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Use permutations and combinations.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Combinatorial",
                "slug": "combinatorial"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "// Backend complete function template for c++\n\nclass Solution {\n  #define mod 1000000007\n  public:\n    // Function to map a number to the corresponding factorial.\n    long long int mapStr(long long int n) {\n        vector<long long int> v = pre(n);\n        return v[n];\n    }\n\n  private:\n    // Function to precompute factorial values.\n    vector<long long int> pre(long long int n) {\n        vector<long long int> fac(100005,0);\n        fac[0] = 1;\n        \n        // Calculating factorial values.\n        for (long long int i = 1; i < 100005; i++) {\n            fac[i] = (i * fac[i - 1])%mod ;\n        }\n        return fac;\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}