{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 706252,
            "title": "Marks Allotment",
            "titleSlug": "marks-allotment--141631",
            "content": "<p><span style=\"font-size: 18px;\">Given a integer <strong>a</strong>. Check if value of <strong>a</strong> lies between 0 to 100, as&nbsp;<strong>a</strong> is the marks alloted to a particular student in a subject and if that is then return the same value of <strong>a</strong> to <strong>marks()</strong> function. If not then code should throw an exception and return <strong>-1</strong>&nbsp;for such cases.&nbsp;Use exception handling to take care of&nbsp;undefined behaviour.</span></p>\n<p><strong><span style=\"font-size: 18px;\">Examples :</span></strong></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong> a = 5\n<strong>Output:</strong> 5\n</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong> a = 103\n<strong>Output:</strong> -1</span>\n</pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />-10<sup>3</sup> &le; a &le; 10<sup>3</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Use exception handling.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "CPP",
                "slug": "cpp"
            },
            {
                "name": "OOP",
                "slug": "oop"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nclass Solution {\n  public:\n    int marks(int A) {\n        try {\n            if (A < 0 || A > 100)\n                throw 0;\n        } catch (...) {\n            return -1;\n        }\n        return A;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    public int marks(int A)\n    {\n        try\n        {\n            if (A < 0 || A > 100)\n                throw new Exception();\n        }\n        catch (Exception)\n        {\n            return -1;\n        }\n        return A;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}