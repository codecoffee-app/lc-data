{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704202,
            "title": "Matching Pair",
            "titleSlug": "matching-pair5320",
            "content": "<p><span style=\"font-size: 18px;\">Given a set of numbers from 1 to n, each number is exactly present twice so there are n pairs. In the worst-case scenario, how many numbers X should be picked and removed from the set until we find a matching pair?</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>n = 1\n<strong>Output: </strong>2\n<strong>Explanation: </strong>There is one pair and a matching pair can be extracted in 2 Draws.\n</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>n = 2\n<strong>Output: </strong>3\n<strong>Explanation:</strong> There are 2 pairs, let them be {1,2,1,2} and a matching pair will be made in 3 draws.\n</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />0 &lt;= n &lt;= 10<sup>5</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Look out for a pattern.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    // Function to find the next number after N\n    int find(int N) {\n        // Return answer as N+1\n        return N + 1;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\nclass Solution {\n    static int find(int N) {\n        // return answer as N+1\n        return N + 1;\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "class Solution:\n\n    def find(self, N):\n        # return answer as N+1\n        return N + 1\n",
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "// User function Template for C#\n\nclass Solution {\n    // Complete this function\n    public int find(int N) {\n        // Return answer as N+1\n        return N + 1;\n    }\n}",
                "lang_text": "csharp"
            },
            {
                "lang": "Javascript",
                "full_func": "class Solution {\n\n    find(N) {\n        // code here\n        return N + 1;\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}