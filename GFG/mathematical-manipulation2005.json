{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705341,
            "title": "Mathematical manipulation",
            "titleSlug": "mathematical-manipulation2005",
            "content": "<p><span style=\"font-size:18px\">Given a number n, find the total numbers,&nbsp;less than or equal to n&nbsp;which have at-least one&nbsp;common factor with n&nbsp;other than 1.</span><br />\n&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input: </strong>n = 6\n<strong>Output: </strong>4\n<strong>Explanation: </strong>For n=6, the 4 numbers having \na common factor between them and 6 \nare : 2, 3, 4 &amp; 6</span>\n</pre>\n\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input: </strong>n = 15\n<strong>Output: </strong>7\n<strong>Explanation: </strong>For N=15, the 7&nbsp;numbers having a \ncommon factor between them and 15&nbsp;\nare : 3, 5, 6, 9, 10, 12, 15</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nYou don&#39;t need to read or print anything. Your task is to complete the function&nbsp;<strong>CommonFactor()&nbsp;</strong>which takes n as input parameter and returns total numbers. less than or equal to n which have atleast one common factor with n other&nbsp;than 1.</span><br />\n&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:&nbsp;</strong>O(nlog(n))<br />\n<strong>Expected Space Complexity:&nbsp;</strong>O(n)<br />\n<br />\n<strong>Constraints:</strong><br />\n1 &lt;= n &lt;= 10<sup>5</sup></span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a positive integer 'n', determine the count of numbers less than or equal to 'n' that share at least one common factor (greater than 1) with 'n'. In other words, find how many numbers from 1 to n are not co-prime with n.",
                "constraints": [
                    "1 <= n <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "6",
                        "output": "4",
                        "explanation": "The numbers less than or equal to 6 that share a common factor greater than 1 with 6 are 2, 3, 4, and 6.  Therefore, the count is 4."
                    },
                    {
                        "input": "15",
                        "output": "7",
                        "explanation": "The numbers less than or equal to 15 that share a common factor greater than 1 with 15 are 3, 5, 6, 9, 10, 12, and 15. Therefore, the count is 7."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Use sieve.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Prime Number",
                "slug": "prime-number"
            },
            {
                "name": "sieve",
                "slug": "sieve"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "\n\nclass Solution {\npublic:\n\tint CommonFactor(int n){\n\t\tvector<bool>prime(n+5, true);\n\t\tprime[0] = prime[1] = false;\n\t\tfor(int i = 2; i*i <= n; i++){\n\t\t\tif(prime[i]){\n\t\t\t\tfor(int j = i*i; j <= n; j+=i)\n\t\t\t\t\tprime[j] = false;\n\t\t\t}\n\t\t}\n\t\tvector<int>etf(n+5, 0);\n\t    etf[1]=1;\n\t    for(int i = 2; i <= n; i++){\n\t        if(prime[i]) etf[i] = i-1;\n\t        else etf[i] = i;\n\t    }\n\t    for(int i = 2; i <= n;i++)\n\t        if(prime[i]){\n\t        for(int j = 2*i; j <= n; j+=i)\n\t            etf[j] -= etf[j]/i;\n\t        }\n\t    return n - etf[n];\n\t}\n\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}