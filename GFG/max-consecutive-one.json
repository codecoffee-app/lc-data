{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 888216,
            "title": "Max consecutive one",
            "titleSlug": "max-consecutive-one",
            "content": "<p>Given an array<strong> arr[] </strong>consisting of only <strong>0&rsquo;s and 1&rsquo;s</strong>, return <strong>count</strong> of a maximum number of consecutive 1&rsquo;s or 0&rsquo;s present in the array.&nbsp;</p>\n<p><strong>Examples:</strong></p>\n<pre><strong>Input: </strong>arr[] = [1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1]<strong><br /></strong><strong>Output: </strong>4<strong><br /></strong><strong>Explanation: </strong>The maximum number of consecutive 1&rsquo;s in the array is 4 from index 8-11.</pre>\n<pre><strong>Input: </strong>arr[] = [0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1]<strong><br /></strong><strong>Output: </strong>2<strong><br /></strong><strong>Explanation: </strong>The maximum number of consecutive 0&rsquo;s in the array is 2 from index 0-1.</pre>\n<pre><strong>Input: </strong>arr[] = [0, 0, 0, 0]<strong><br /></strong><strong>Output: </strong>4<br /><strong>Explanation: </strong>The maximum number of consecutive 0&rsquo;s in the array is 4.</pre>\n<p><strong>Constraints:<br /></strong>1 &lt;= arr.size() &lt;= 10<sup>5</sup></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function template for C++\n\nclass Solution {\n  public:\n\n    int maxConsecutiveCount(vector<int> &arr) {\n        int maxCount = 0, count = 1;\n\n        for (int i = 1; i < arr.size(); i++) {\n            if (arr[i] == arr[i - 1]) {\n                count++;\n            } else {\n                maxCount = max(maxCount, count);\n                count = 1;\n            }\n        }\n\n        return max(maxCount, count);\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "\nclass Solution {\n    public int maxConsecutiveCount(int[] arr) {\n        int maxCount = 0, count = 1;\n\n        for (int i = 1; i < arr.length; i++) {\n            if (arr[i] == arr[i - 1]) {\n                count++;\n            } else {\n                maxCount = Math.max(maxCount, count);\n                count = 1;\n            }\n        }\n\n        return Math.max(maxCount, count);\n    }\n}\n",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "# User function Template for python3\nclass Solution:\n\n    def maxConsecutiveCount(self, arr):\n        maxCount, count = 0, 1\n\n        for i in range(1, len(arr)):\n            if arr[i] == arr[i - 1]:\n                count += 1\n            else:\n                maxCount = max(maxCount, count)\n                count = 1\n\n        return max(maxCount, count)\n",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "// User function Template for javascript\n\nclass Solution {\n    // Function returns the second largest element\n    maxConsecutiveCount(arr) {\n        let maxCount = 0, count = 1;\n\n        for (let i = 1; i < arr.length; i++) {\n            if (arr[i] === arr[i - 1]) {\n                count++;\n            } else {\n                maxCount = Math.max(maxCount, count);\n                count = 1;\n            }\n        }\n        return Math.max(maxCount, count);\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}