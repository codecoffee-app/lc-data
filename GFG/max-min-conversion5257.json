{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703099,
            "title": "Max-Min conversion",
            "titleSlug": "max-min-conversion5257",
            "content": "<p><span style=\"font-size:18px\">Given a number&nbsp;<strong>N</strong>. You can perform an&nbsp;operation on&nbsp;it multiple times, in which you can change&nbsp;digit 5 to 6 and&nbsp;vice versa.<br />\nYou have to return the sum of the maximum&nbsp;number&nbsp;and the minimum&nbsp;number which can be&nbsp;obtained by performing such operations.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong> N = 35\n<strong>Output:</strong> 71\n<strong>Explanation:</strong> The maximum number which can be\nformed is 36 and the minimum number which can\nbe formed is 35 itself.&nbsp;\n</span></pre>\n\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong> N = 22\n<strong>Output:</strong> 44\n<strong>Explanation: </strong>The maximum number and minimum\nnumber which can be formed is 22 itself.\n</span></pre>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nYou need not take any input or print anything. Your task is to complete the function&nbsp;<strong><code>performOperation()</code>&nbsp;</strong>which takes a single Number&nbsp;as input and returns the sum of maximum and minimum number.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong>&nbsp;O(Log<sub>10</sub>N)<br />\n<strong>Expected Auxiliary Space:</strong>&nbsp;O(Log<sub>10</sub>N)</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\n1 &le; N&nbsp;&le; 10<sup>18</sup></span><br />\n&nbsp;</p>\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a number N, you can perform an operation multiple times where you change any digit 5 to 6 and vice versa. Return the sum of the maximum and minimum numbers which can be obtained by performing these operations.",
                "constraints": [
                    "1 <= N <= 10^18"
                ],
                "testcases": [
                    {
                        "input": "35",
                        "output": "71",
                        "explanation": "The maximum number achievable is 36 (replacing 5 with 6), and the minimum is 35 (no change needed). Their sum is 36 + 35 = 71."
                    },
                    {
                        "input": "22",
                        "output": "44",
                        "explanation": "Since the number contains no 5 or 6, the maximum and minimum numbers are both 22. The sum is 22 + 22 = 44."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Change all 6 digits&nbsp;to 5 to get minimum number and all 5 digits&nbsp;to 6 to get maximum number.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "long long performOperation(long long n)\n{\n    string s , mmi=\"\" , mma=\"\";\n    // converted given number to string\n    s = to_string(n);\n    int i;\n    // generating minimum number's string\n    for(i=0;i<s.length();i++)\n        {\n            if(s[i]=='6')\n                mmi+='5';\n            else\n                mmi+=s[i];\n        }\n    // generating maximum number's string    \n    for(i=0;i<s.length();i++)\n        {\n            if(s[i]=='5')\n                mma+='6';\n            else\n                mma+=s[i];\n        }    \n   // converting strings to number\n    long long minn = stoll(mmi);\n    long long maxx = stoll(mma);\n    \n    // returning their sum.\n    return minn + maxx;\n    \n}\n",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\ndef performOperation(n):\n    s = str(n)\n    mmi = mma = ''  \n\n    for i in range(len(s)):\n        if s[i] == '6':\n            mmi += '5'    #replace 6 with 5 in mmi variable\n        else:\n            mmi += s[i]   #add the digit to mmi variable if it is not 6\n\n    for i in range(len(s)):\n        if s[i] == '5':\n            mma += '6'    #replace 5 with 6 in mma variable\n        else:\n            mma += s[i]   #add the digit to mma variable if it is not 5\n\n    return int(mmi) + int(mma)  #return the sum of mmi and mma as integer value.",
                "lang_text": "py"
            },
            {
                "lang": "C#",
                "full_func": "class Solution\n{\n    public long performOperation(long n)\n    {\n        string s , mmi=\"\" , mma=\"\";\n        s = n.ToString();\n        int i;\n        for(i=0;i<s.Length;i++)\n        {\n            if(s[i]=='6')\n                mmi+='5';\n            else\n                mmi+=s[i];\n        }\n        for(i=0;i<s.Length;i++)\n        {\n            if(s[i]=='5')\n                mma+='6';\n            else\n                mma+=s[i];\n        }\n        long minn = long.Parse(mmi);\n        long maxx = long.Parse(mma);\n        return minn + maxx;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}