{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 707314,
            "title": "Max Min",
            "titleSlug": "max-min",
            "content": "<p><span style=\"font-size:18px\">Given an array<strong> A</strong> of size <strong>N</strong> of integers. Your task is to find the sum of&nbsp;<strong>minimum and maximum </strong>element&nbsp;in the&nbsp;array.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong>\r\nN = 5\r\nA[] = {</span><span style=\"font-size:18px\">-2, 1, -4, 5, 3}\r\n<strong>Output: </strong>1\r\n<strong>Explanation:</strong> min = -4, max =  5. Sum = -4 + 5 = 1</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong>\r\nN = 4\r\nA[]  = {</span><span style=\"font-size:18px\">1, 3, 4, 1}\r\n<strong>Output: 5\r\nExplanation:</strong> min = 1, max = 4. Sum = 1 + 4 = 5\r\n</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:&nbsp;&nbsp;</strong><br />\r\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>findSum()</strong>&nbsp;which takes the array <strong>A[]</strong> and its size <strong>N</strong><strong> </strong>as inputs and returns the <strong>summation of</strong>&nbsp;<strong>minimum and maximum</strong> element of the&nbsp;array.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(N)<br />\r\n<strong>Expected Auxiliary Space:</strong> O(1)</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n1 &lt;= N &lt;= 10<sup>5</sup><br />\r\n-10<sup>9</sup> &lt;= A<sub>i</sub> &lt;= 10<sup>9</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array A of size N of integers, find the sum of the minimum and maximum elements in the array.",
                "constraints": [
                    "1 <= N <= 10^5",
                    "-10^9 <= A[i] <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "N = 5\nA[] = {-2, 1, -4, 5, 3}",
                        "output": "1",
                        "explanation": "The minimum element in the array is -4 and the maximum element is 5. Their sum is -4 + 5 = 1."
                    },
                    {
                        "input": "N = 4\nA[] = {1, 3, 4, 1}",
                        "output": "5",
                        "explanation": "The minimum element in the array is 1 and the maximum element is 4. Their sum is 1 + 4 = 5."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Calculate the maximum and minimum element of the array and return its sum.</span></p>\n\n<p><span style=\"font-size:18px\">Can you reduce the number of comparisions from&nbsp;<strong>N - 1</strong>?</span></p>\n\n<p><span style=\"font-size:18px\">Pick elements in pairs and compare.</span></p>",
            "<p><span style=\"font-size:18px\"><strong>Algorithm:</strong></span></p>\n\n<ol>\n\t<li><span style=\"font-size:18px\">Create max and min variables.</span></li>\n\t<li><span style=\"font-size:18px\">Check for the size of the array</span></li>\n</ol>\n\n<ul>\n\t<li><span style=\"font-size:18px\">If odd, initialize min and max to the first element</span></li>\n\t<li><span style=\"font-size:18px\">If even, compare the elements and set min to the smaller value and max to the bigger value</span></li>\n</ul>\n\n<p><span style=\"font-size:18px\">&nbsp; &nbsp; &nbsp; 3. Traverse the array in pairs</span></p>\n\n<p><span style=\"font-size:18px\">&nbsp; &nbsp; &nbsp; 4. For each pair, compare the two elements and then</span></p>\n\n<ul>\n\t<li><span style=\"font-size:18px\">Compare the bigger element with max, update max if required.</span></li>\n\t<li><span style=\"font-size:18px\">Compare the smaller element with min, update min if required.</span></li>\n</ul>\n\n<p><span style=\"font-size:18px\">&nbsp; &nbsp; &nbsp; 5. Return sum of max and min.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\r\n\r\nclass Solution\r\n{\r\n   public:\r\n    int findSum(int A[], int arr_size)\r\n    {\r\n    \tint max,min;\r\n    \tint i;\r\n    \tif(arr_size & 1){\r\n\t\t\tmax = A[0];\r\n\t\t\tmin = A[0];\r\n\t\t\ti = 1;\r\n\t\t}\r\n\t\telse{\r\n\t\t\tif ( A[0] < A[1] ){\r\n\t\t\t\tmax = A[1];\r\n\t\t\t\tmin = A[0];\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tmax = A[0];\r\n\t\t\t\tmin = A[1];\r\n\t\t\t}\r\n\t\t\ti = 2;\r\n\t\t}\r\n\t\twhile(i < arr_size){\r\n\t\t\tif ( A[i] < A[i+1] ){\r\n\t\t\t\tif ( A[i] < min )\r\n\t\t\t\t\tmin = A[i];\r\n\t\t\t\tif ( A[i+1] > max )\r\n\t\t\t\t\tmax = A[i+1];\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif ( A[i] > max )\r\n\t\t\t\t\tmax = A[i];\r\n\t\t\t\tif ( A[i+1] < min )\r\n\t\t\t\t\tmin = A[i+1];\r\n\t\t\t}\r\n\t\t\ti = i + 2;\r\n\t\t}\r\n\t\treturn min + max;\r\n    }\r\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\nclass Solution\n{ \n    /* Function to find the sum of the second largest \n    elements in the array */\n    public static int findSum(int arr[], int arr_size) \n    { \n        int max, min;\n        int i;\n\n        //Checking if the array size is odd or even\n        if(arr_size % 2 == 1){\n            max = arr[0];\n            min = arr[0];\n            i = 1;\n        }\n        else{\n            //Initializing max and min based on the first two elements\n            if ( arr[0] < arr[1] ){\n                max = arr[1];\n                min = arr[0];\n            }\n            else{\n                max = arr[0];\n                min = arr[1];\n            }\n            i = 2;\n        }\n\n        //Comparing pairs of elements to update max and min\n        while(i < arr_size){\n            if ( arr[i] < arr[i+1] ){\n                if ( arr[i] < min )\n                    min = arr[i];\n                if ( arr[i+1] > max )\n                    max = arr[i+1];\n            }\n            else{\n                if ( arr[i] > max )\n                    max = arr[i];\n                if ( arr[i+1] < min )\n                    min = arr[i+1];\n            }\n            i = i + 2;\n        }\n        \n        //Returning the sum of the second largest elements\n        return min + max;\n    } \n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": "class Solution:\r\n    # Function to find the sum of maximum and minimum elements in an array\r\n    def findSum(self,arr,arr_size): \r\n        max = 0\r\n        min = 0\r\n        i = 0\r\n        \r\n        # If the array size is odd, initialize max and min as the first element\r\n        if arr_size % 2 == 1:\r\n            max = arr[0]\r\n            min = arr[0]\r\n            i = 1\r\n        else:\r\n            # If the array size is even, compare the first two elements to determine max and min\r\n            if arr[0] < arr[1]:\r\n                max = arr[1]\r\n                min = arr[0]\r\n            else:\r\n                max = arr[0]\r\n                min = arr[1]\r\n            i = 2\r\n        \r\n        # Iterate through the array in pairs, comparing and updating max and min values\r\n        while i < arr_size:\r\n            if arr[i] < arr[i + 1]:\r\n                if arr[i] < min:\r\n                    min =arr[i]\r\n                if arr[i + 1] > max:\r\n                    max = arr[i + 1]\r\n            else:\r\n                if arr[i] > max:\r\n                    max = arr[i]\r\n                if arr[i + 1] < min:\r\n                    min = arr[i + 1]\r\n            i = i + 2\r\n        \r\n        # Return the sum of the maximum and minimum elements\r\n        return max + min",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n\n/**\n * @param {number[]} arr\n * @param {number} n\n * @returns {number}\n*/\n\nclass Solution{\n    findSum(A,N){\n        let max, min;\n        let i;\n        if(N & 1){\n            max = A[0];\n            min = A[0];\n            i = 1;\n        }\n        else{\n            if ( A[0] < A[1] ){\n                max = A[1];\n                min = A[0];\n            }\n            else\n            {\n                max = A[0];\n                min = A[1];\n            }\n            i = 2;\n        }\n        while(i < N){\n            if ( A[i] < A[i+1] ){\n                if ( A[i] < min )\n                    min = A[i];\n                if ( A[i+1] > max )\n                    max = A[i+1];\n            }\n            else\n            {\n                if ( A[i] > max )\n                    max = A[i];\n                if ( A[i+1] < min )\n                    min = A[i+1];\n            }\n            i = i + 2;\n        }\n        return min + max;\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}