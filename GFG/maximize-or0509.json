{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703801,
            "title": "Maximize OR",
            "titleSlug": "maximize-or0509",
            "content": "<p><span style=\"font-size:18px\">Given a number X find the total numbers A&nbsp;such that A OR X&nbsp;&gt;&nbsp;X, &nbsp;and 1&lt;=A&lt;=X.</span><br />\n<br />\n<span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input</strong>: X = 10\n<strong>Output:</strong>&nbsp;7&nbsp;\n<strong>Explanation</strong>: In the range [1,10] if the \nOR is taken of 10 and any number in the \nset {1,3,4,5,6,7,9} the resulting value \nwill be greater than&nbsp;10.</span><span style=\"font-size:18px\">\n</span></pre>\n\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input: </strong>X = 5\n<strong>Output:&nbsp;</strong>2\n<strong>Explanation</strong>: In the range [1,5] if the\nOR is taken of 5 and any number in the\nset {2,3} the resulting value\nwill be greater than&nbsp;5.</span></pre>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Your Task:&nbsp;&nbsp;</strong><br />\nYou dont need to read input or print anything. Complete the function <strong>getCount()&nbsp;</strong>which takes X&nbsp;as input parameter and returns the the total count of the different value of A possible.<br />\n<br />\n<strong>Expected Time Complexity:</strong> O(logn)<br />\n<strong>Expected Auxiliary Space:</strong> O(1)<br />\n<br />\n<strong>Constraints:</strong><br />\n1&lt;= X&nbsp;&lt;=10<sup>8</sup></span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a number X, find the total count of numbers A such that (A OR X) > X, where 1 <= A <= X.",
                "constraints": [
                    "1 <= X <= 10^8"
                ],
                "testcases": [
                    {
                        "input": "10",
                        "output": "7",
                        "explanation": "The numbers in the range [1, 10] that satisfy the condition (A OR X) > X are {1, 3, 4, 5, 6, 7, 9}.  For example, 1 OR 10 = 11 > 10.  There are 7 such numbers."
                    },
                    {
                        "input": "5",
                        "output": "2",
                        "explanation": "The numbers in the range [1, 5] that satisfy the condition (A OR X) > X are {2, 3}. For example, 2 OR 5 = 7 > 5. There are 2 such numbers."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Try to use bits methods or power of 2 formula.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Bit Magic",
                "slug": "bit-magic"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": null,
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "// Back-end complete function for Java\nclass Solution {\n    // Function to calculate the count of set bits in binary representation of a number\n    static int getCount(int X) {\n        int ans=1;\n        int m=X;\n        // calculating the count of set bits using bitwise operation\n        while(X!=0)\n        {\n            X = X&(X-1);\n            ans=ans*2;\n        }\n        // subtracting 1 from the count to get the actual number of set bits\n        ans--;\n        // calculating the count of unset bits by subtracting the count of set bits from the total number of bits\n        ans=m-ans;\n        // returning the count of unset bits\n        return ans;\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            }
        ],
        "platform": "GFG"
    }
}