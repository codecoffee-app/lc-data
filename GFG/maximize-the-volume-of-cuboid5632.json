{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703965,
            "title": "Maximize the volume of Cuboid",
            "titleSlug": "maximize-the-volume-of-cuboid5632",
            "content": "<p><span style=\"font-size:18px\">Given the sum of <strong>length, breadth</strong> and <strong>height</strong> of a cuboid. The task is to find the maximum volume that can be achieved such that the sum of sides is <strong>S</strong>.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\r\n<span style=\"font-size:18px\"><strong>S = </strong>8</span>\r\n<span style=\"font-size:18px\"><strong>Output:\r\n</strong>18</span>\r\n<span style=\"font-size:18px\"><strong>Explanation:</strong>\r\nAll possible edge dimensions:\r\n[1, 1, 6], volume = 6\r\n[1, 2, 5], volume = 10\r\n[1, 3, 4], volume = 12\r\n[2, 2, 4], volume = 16\r\n[2, 3, 3], volume = 18\r\nSo, Maximum possible Volume is 18.</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\r\n<span style=\"font-size:18px\"><strong>S = </strong>6</span>\r\n<span style=\"font-size:18px\"><strong>Output:</strong>\r\n8</span>\r\n<span style=\"font-size:18px\"><strong>Explanation:</strong>\r\nAll possible edge dimensions:\r\n[1, 1, 4], volume = 4\r\n[1, 2, 3], volume = 6\r\n[2, 2, 2], volume = 8\r\nSo, Maximum possible Volume is 8.</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>maximizeVolume()</strong> which takes an Integer S as input and returns the answer.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(1)<br />\r\n<strong>Expected Auxiliary Space:</strong> O(1)</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong></span><br />\r\n<span style=\"font-size:18px\">3 &lt;= S &lt;= 10<sup>6</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given the sum 'S' of the length, breadth, and height of a cuboid, find the maximum possible volume that can be achieved.",
                "constraints": [
                    "3 <= S <= 10^6"
                ],
                "testcases": [
                    {
                        "input": "8",
                        "output": "18",
                        "explanation": "Consider all possible integer dimensions that sum up to 8.  Some combinations and their volumes are: [1, 1, 6] -> volume = 6; [1, 2, 5] -> volume = 10; [1, 3, 4] -> volume = 12; [2, 2, 4] -> volume = 16; [2, 3, 3] -> volume = 18. The maximum volume among these is 18."
                    },
                    {
                        "input": "6",
                        "output": "8",
                        "explanation": "Consider all possible integer dimensions that sum up to 6.  Some combinations and their volumes are: [1, 1, 4] -> volume = 4; [1, 2, 3] -> volume = 6; [2, 2, 2] -> volume = 8. The maximum volume among these is 8."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">We can get the Maximum volume of the Cuboid by dividing edges as equally as possible. </span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Division",
                "slug": "division"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution {\r\n  public:\r\n    // Function to maximize the volume of a cuboid with given surface area\r\n    long long maximizeVolume(long long S) {\r\n        \r\n        long long l,b,h;\r\n        \r\n        // dividing the surface area equally among length, breadth, and height\r\n        l = b = h = S/3;\r\n        \r\n        long long r = S%3;\r\n        \r\n        // if the remaining surface area is 2, increment length and breadth by 1\r\n        if(r==2)\r\n        {\r\n            l++;\r\n            b++;\r\n        }\r\n        // if the remaining surface area is 1, increment length by 1\r\n        else if(r==1)\r\n            l++;\r\n        \r\n        // calculating the volume\r\n        long long ans = l*b*h;\r\n        \r\n        // returning the maximum volume\r\n        return ans;\r\n    }\r\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution {\r\n    static Long maximizeVolume(Long S) {\r\n        \r\n        Long l,b,h; //declaring variables for length, width, and height\r\n        \r\n        l = b = h = S/3; //divide S by 3 and assign the result to l, b, and h\r\n        \r\n        Long r = S%3; //calculate the remainder when S is divided by 3\r\n        \r\n        if(r==2) //if remainder is 2\r\n        {\r\n            l++; //increment l by 1\r\n            b++; //increment b by 1\r\n        }\r\n        else if(r==1) //if remainder is 1\r\n            l++; //increment l by 1\r\n        \r\n        Long ans = l*b*h; //calculate the volume using l, b, and h\r\n        \r\n        return ans; //return the volume\r\n    }\r\n};",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\r\n\r\nclass Solution:\r\n\r\n    # Function to maximize the volume of the cuboid\r\n    def maximizeVolume(self, S):\r\n        \r\n        # Dividing the sum equally among the length, breadth, and height\r\n        l = b = h = S//3\r\n        \r\n        # Calculating the remaining value after dividing equally\r\n        r = S%3\r\n        \r\n        # Adjusting the dimensions based on the remaining value\r\n        if r == 2:\r\n            l += 1\r\n            b += 1\r\n            \r\n        elif r == 1:\r\n            l += 1\r\n        \r\n        # Calculating the volume of the cuboid\r\n        ans = l * b * h\r\n        \r\n        # Returning the maximum volume\r\n        return ans;",
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\nclass Solution\n{\n    //Complete this function\n    public long maximizeVolume(long S)\n    {\n        long l, b, h;\n\n        // dividing the surface area equally among length, breadth, and height\n        l = b = h = S / 3;\n\n        long r = S % 3;\n\n        // if the remaining surface area is 2, increment length and breadth by 1\n        if (r == 2)\n        {\n            l++;\n            b++;\n        }\n        // if the remaining surface area is 1, increment length by 1\n        else if (r == 1)\n            l++;\n\n        // calculating the volume\n        long ans = l * b * h;\n\n        // returning the maximum volume\n        return ans;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}