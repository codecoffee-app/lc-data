{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 701702,
            "title": "Maximum Among Left",
            "titleSlug": "maximum-among-left",
            "content": "<p><span style=\"font-size: 18px;\">Given an array<strong> arr[]</strong>. We need to return the <strong>indices</strong>&nbsp;such that arr[i] is strictly greater than all the <strong>elements </strong>from<strong> 0 to i-1</strong>.&nbsp;<br /><strong>Note:</strong> The resultant list may be empty.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Example : </strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr[] = [4, 3, 5, 2, 6]\n<strong>Output: </strong>2 4\n<strong>Explanation:</strong>The given elements are&nbsp; {4, 3, 5, 2, 6}. 5 is greater than all elements to left (4 and 3). 6 is greater than all<br /></span><span style=\"font-size: 18px;\">elements to the left. So answer list contains indices of 5 and 6 <em>ie.</em>{2 4}<br /></span></pre>\n<p><strong><span style=\"font-size: 18px;\">Constraints:<br /></span></strong><span style=\"font-size: 18px;\">1&lt;= arr.size() &lt;= 10<sup>5</sup><br />1&lt;= arr[i] &lt;= 10<sup>5</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array `arr[]`, identify and return the indices where `arr[i]` is strictly greater than all elements from index 0 to `i-1`. If no such indices exist, the result should be an empty list.",
                "constraints": [
                    "1 <= arr.size() <= 10^5",
                    "1 <= arr[i] <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "[4, 3, 5, 2, 6]",
                        "output": "[2, 4]",
                        "explanation": "The element at index 2 (value 5) is greater than all preceding elements (4 and 3). The element at index 4 (value 6) is greater than all preceding elements (4, 3, 5, and 2)."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Maintain a variable which stores the maximum from 0 to i-1.<br />\nfor i from 1 to n:<br />\n&nbsp; &nbsp; &nbsp;if(A[i]&gt;maxi):<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; push i<br />\n&nbsp; &nbsp; &nbsp;update maxi</span></p>\n\n<p>&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "STL",
                "slug": "stl"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nvector<int> maximum_from_left(vector<int>& arr) {\n\n    int n;\n    n = arr.size();\n    int maxi;\n    maxi = arr[0];\n    vector<int> result;\n\n    for (int i = 1; i < n; i++) {\n        if (arr[i] > maxi) {\n            result.push_back(i);\n        }\n        maxi = max(maxi, arr[i]);\n    }\n\n    return result;\n}",
                "lang_text": "cpp"
            }
        },
        "platform": "GFG"
    }
}