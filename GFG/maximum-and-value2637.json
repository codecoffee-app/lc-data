{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 702736,
            "title": "Maximum AND Value",
            "titleSlug": "maximum-and-value2637",
            "content": "<p><span >You are given an array <strong>arr[]</strong> of positive integers. Your task is to find the maximum value that can be obtained by performing a bitwise AND operation on any two different elements in the array.</span><br /><span ><strong>Note:</strong> AND refers to the bitwise '&amp;' operator.</span></p>\n<h3><span >Examples:</span></h3>\n<pre><span ><strong>Input:</strong> arr[] = [4, 8, 12, 16]</span><br /><span ><strong>Output:</strong> 8</span><br /><span ><strong>Explanation: </strong></span><span >The pair {8, 12} has the maximum AND value of 8.</span></pre>\n<pre><span ><strong>Input:</strong> arr[] = [4, 8, 16, 2]</span><br /><span ><strong>Output:</strong> 0</span><br /><span ><strong>Explanation: </strong></span><span >No pair gives a non-zero AND value, so the output is 0.</span></pre>\n<p><span ><strong>Expected Time Complexity:</strong> </span><span >O(n)<br /></span><strong><span >Expected Auxiliary Space: </span></strong><span >O(1)</span></p>\n<p><span ><strong>Constraints:</strong><br /></span><span >1 &le; arr.size() &le; 5*10<sup>5</sup><br /></span><span >1 &le; arr[i] &le; 5*10<sup>5</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of positive integers, find the maximum value that can be obtained by performing a bitwise AND operation on any two distinct elements in the array.",
                "constraints": [
                    "1 <= arr.size() <= 5*10^5",
                    "1 <= arr[i] <= 5*10^5"
                ],
                "testcases": [
                    {
                        "input": "[4, 8, 12, 16]",
                        "output": "8",
                        "explanation": "The pair {8, 12} produces the largest AND value of 8."
                    },
                    {
                        "input": "[4, 8, 16, 2]",
                        "output": "0",
                        "explanation": "No pair has a non-zero bitwise AND value. Therefore, the result is 0."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to get the most significant bit then try the next most significant bit you can continue the same and you will get the answer.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Bit Magic",
                "slug": "bit-magic"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    int findMaxAnd(vector<int>& arr) {\n        int res = 0;\n\n        for (int bit = 31; bit >= 0; bit--) {\n            int count = 0;\n            int pattern = res | (1 << bit);\n\n            for (int num : arr) {\n                if ((pattern & num) == pattern) {\n                    count++;\n                }\n            }\n\n            if (count >= 2) {\n                res |= (1 << bit);\n            }\n        }\n\n        return res;\n    }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n    public int findMaxAnd(int[] arr) {\n        int res = 0;\n\n        for (int bit = 31; bit >= 0; bit--) {\n            int count = 0;\n            int pattern = res | (1 << bit);\n\n            for (int num : arr) {\n                if ((pattern & num) == pattern) {\n                    count++;\n                }\n            }\n\n            if (count >= 2) {\n                res |= (1 << bit);\n            }\n        }\n\n        return res;\n    }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": "class Solution:\n\n    def findMaxAnd(self, arr):\n        res = 0\n\n        for bit in range(31, -1, -1):\n            count = 0\n            pattern = res | (1 << bit)\n\n            for num in arr:\n                if (pattern & num) == pattern:\n                    count += 1\n\n            if count >= 2:\n                res |= (1 << bit)\n\n        return res\n",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "class Solution {\n    findMaxAnd(arr) {\n        let res = 0;\n\n        for (let bit = 31; bit >= 0; bit--) {\n            let count = 0;\n            const pattern = res | (1 << bit);\n\n            for (let num of arr) {\n                if ((pattern & num) === pattern) {\n                    count++;\n                }\n            }\n\n            if (count >= 2) {\n                res |= (1 << bit);\n            }\n        }\n\n        return res;\n    }\n}\n",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}