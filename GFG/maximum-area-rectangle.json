{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 700873,
            "title": "Maximum Area Rectangle",
            "titleSlug": "maximum-area-rectangle",
            "content": "<p><span style=\"font-size:18px\">Given <strong>N&nbsp;</strong>&nbsp;pairs of rectangles, where each pair denotes the length <strong>L</strong>&nbsp;and breadth <strong>B&nbsp;</strong>of the <strong>i<sup>th</sup></strong><sup>&nbsp;</sup>rectangle. The task is to return the maximum area of the rectangle.</span></p>\n\n<p><strong><span style=\"font-size:18px\">Example 1:</span></strong></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\nN = 3\nrect[] = {{1,2},\n&nbsp;\\t   {3,4},\n&nbsp;\\t   {5,6}}</span>\n<span style=\"font-size:18px\"><strong>Output:</strong>\n30</span>\n\n<span style=\"font-size:18px\"><strong>Explanation:\n</strong>1. Total area of Rect. 1 = 1 * 2 = 2\n2. Total area of Rect. 2 = 3 * 4 = 12\n3. Total area of Rect. 3 = 5 * 6 = 30\n4. Out of all rectangles, Rectangle 3 has the maximum area.<strong>\n</strong>\n</span></pre>\n\n<p><strong><span style=\"font-size:18px\">Example 2:</span></strong></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\nN = 2\nrect[] = {{12,3},\n&nbsp;\\t   {40,5}} </span>\n\n<span style=\"font-size:18px\"><strong>Output:</strong>\n200</span>\n\n<span style=\"font-size:18px\"><strong>Explanation:\n</strong>1. Total area of Rect. 1 = 12 * 3 = 36\n2. Total area of Rect. 2 = 40 * 5 = 200. \n3. Out of all rectangles, Rectangle 2 has the maximum area.\n</span></pre>\n\n<p><span style=\"font-size:18px\"><strong>User Task: </strong>Your task is to complete the function <strong>calculate_Area</strong>() which returns maximum area. Use <strong>area</strong>() function in Rectangle class.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\n1 &lt;= N &lt;= 10<sup>3</sup><br />\n1 &lt;= L, B &lt;= 10<sup>4</sup><br />\n1 &lt;= Area &lt;= 10<sup>8</sup></span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given N pairs of rectangles, where each pair represents the length (L) and breadth (B) of the i-th rectangle, determine and return the maximum area among all the rectangles.",
                "constraints": [
                    "1 <= N <= 10^3",
                    "1 <= L, B <= 10^4",
                    "1 <= Area <= 10^8"
                ],
                "testcases": [
                    {
                        "input": "N = 3\nrect[] = {{1,2},\n\t   {3,4},\n\t   {5,6}}",
                        "output": "30",
                        "explanation": "Rectangle 1 has area 1 * 2 = 2.\nRectangle 2 has area 3 * 4 = 12.\nRectangle 3 has area 5 * 6 = 30.\nThe maximum area is 30."
                    },
                    {
                        "input": "N = 2\nrect[] = {{12,3},\n\t   {40,5}}",
                        "output": "200",
                        "explanation": "Rectangle 1 has area 12 * 3 = 36.\nRectangle 2 has area 40 * 5 = 200.\nThe maximum area is 200."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Traverse the array and try to find the area each time.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Java-Class and Object",
                "slug": "java-class-and-object"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution{\n    public:\n    // Function to calculate the area of the rectangles\n    int calculate_Area(vector<pair<int, int>>&rect, int N)\n    {\n        // mx variable to store the maximum area\n        int mx = 0;\n        // iterating over each rectangle in the vector\n        for(auto it : rect){\n            // calculate the area of the current rectangle\n            int x = it.first * it.second;\n            // update the maximum area if necessary\n            mx = max(mx, x);\n        }\n        // return the maximum area\n        return mx;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\n/*Class maxArea to calculate Area of rectangles\n* arr : array containing rectangles\n* calculate_Area : function to calculate area\n* and return the maximum area\n*/\nclass maxArea{\n    \n    static int calculate_Area(Rectangle arr[]){\n        \n        //initializing max_Area to Minimum Value\n        int max_Area = Integer.MIN_VALUE;\n        \n        //multiplying length and breath\n        //and getting the max area\n        for(int i = 0; i< arr.length;i++){\n            int temp_area = arr[i].area();\n            if(temp_area > max_Area){\n                max_Area = temp_area;\n            }\n        }\n        \n        //returning the maximum area\n        return max_Area;\n    }\n    \n}",
                "lang_text": "java"
            }
        ],
        "platform": "GFG"
    }
}