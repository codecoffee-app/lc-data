{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704186,
            "title": "Maximum distance",
            "titleSlug": "maximum-distance3248",
            "content": "<p><span style=\"font-size:18px\">There are <strong>N </strong>bikes and each can cover 100 km when fully fueled. What is the maximum amount of distance you can go using N bikes?&nbsp;You may assume that all bikes are similar and a bike takes 1 litre to cover 1 km.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Note: </strong>The answer may contain decimal value but&nbsp;print the integer value of the float value obtained.</span></p>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\n<span style=\"font-size:18px\"><strong>N = </strong>2</span>\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\n<span style=\"font-size:18px\">150</span>\n<span style=\"font-size:18px\"><strong>Explanation:</strong></span>\n<span style=\"font-size:18px\">The 2 bikes can travel 50 Kms\ntogether and then, the fuel of\nthe First bike can be transferred\nto the Second, resulting in a full\ntank for the second bike. The 2nd bike\nwill be able to travel 100 Kms more.\nSo, the Ouput is 150.</span>\n</pre>\n\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\n<span style=\"font-size:18px\"><strong>N = </strong>3</span>\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\n<span style=\"font-size:18px\">183</span>\n<span style=\"font-size:18px\"><strong>Explanation:</strong></span>\n<span style=\"font-size:18px\">The 3 bikes can travel 33.33 Kms\ntogether and then, rest of the fuel of\nthe First bike can be transferred\nto the Second and Third bike, resulting in\na full tank for the second and third bike.\nThe 2nd and 3rd bike can travel 50 Kms more\ntogether. Now, both the bikes will have half\nfuel. The 2nd bike can transfer the fuel to\nthe 3rd. The 3rd will have a full tank and\ntravel 100 Kms more. So, the Distance\nwill be 183.33</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>maxDist()</strong> which takes an Integer N as input and returns the answer.</span></p>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(N)<br />\n<strong>Expected Auxiliary Space:</strong> O(1)</span></p>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong></span><br />\n<span style=\"font-size:18px\">1 &lt;= N &lt;= 10<sup>5</sup></span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Try to Maximize the Distance travelled by one Bike.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "\nclass Solution {\n  public:\n    int maxDist(int N) {\n        \n        double dist_covered = 0; \n  \n        while (N > 0) \n        { \n            // after ever fuel/n km we are discarding one bike and filling  \n            // all the other bikes with fuel/n liters of fuel i.e. to their \n            // maximum limit (100 litre) \n      \n            dist_covered += (double)100 / N; \n      \n            N -= 1;  // reduce number of bikes \n        } \n        return (int)dist_covered; \n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\nclass Solution {\n    static int maxDist(int N) {\n        \n        double dist_covered = 0; \n   \n        while (N > 0) \n        { \n            // after ever fuel/n km we are discarding one bike and filling  \n            // all the other bikes with fuel/n liters of fuel i.e. to their \n            // maximum limit (100 litre) \n   \n            dist_covered += (double)100 / N; \n   \n            N -= 1;  // reduce number of bikes \n        } \n        return (int)dist_covered; \n    }\n};",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\nclass Solution:\n    def maxDist(self, N):\n        \n        # dist_covered is the result \n    \t# of this function \n    \tdist_covered = 0\n    \n    \twhile (N > 0): \n    \t\t\n    \t\t# after ever fuel/n km we are \n    \t\t# discarding one bike and filling \n    \t\t# all the other bikes with fuel/n \n    \t\t# liters of fuel i.e. to their \n    \t\t# maximum limit (100 litre) \n    \t\tdist_covered = dist_covered + (100 / N) \n    \t\t\n    \t\t# reduce number of bikes \n    \t\tN -= 1\n    \n    \treturn int(dist_covered) ",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n/**\n * @param {number} N\n * @returns {number}\n */\nclass Solution {\n    //Function to find the maximum distance between two same elements\n    maxDist(N) {\n        // dist_covered is the result \n        // of this function \n        let dist_covered = 0;\n\n        while (N > 0) {\n            // after ever fuel/n km we are \n            // discarding one bike and filling \n            // all the other bikes with fuel/n \n            // liters of fuel i.e. to their \n            // maximum limit (100 litre) \n            dist_covered = dist_covered + (100 / N);\n\n            // reduce number of bikes \n            N -= 1;\n        }\n\n        return parseInt(dist_covered);\n    }\n}",
                "lang_text": "javascript"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    public int maxDist(int N)\n    {\n        double dist_covered = 0; \n\n        while (N > 0) \n        { \n            dist_covered += (double)100 / N; \n\n            N -= 1;  \n        } \n        return (int)dist_covered; \n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}