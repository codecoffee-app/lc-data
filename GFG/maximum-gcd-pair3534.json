{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704618,
            "title": "Maximum GCD Pair",
            "titleSlug": "maximum-gcd-pair3534",
            "content": "<p><span style=\"font-size:18px\">Given an array of integers find the pair in the array with maximum GCD. Find the maximum possible GCD.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input: </strong>N = 5, a[] = {1, 2, 3, 4, 5}\n<strong>Output:</strong> 2\n<strong>Explanation</strong>:<strong> </strong>Maximum gcd is GCD(2, 4)\n= 2.\n</span></pre>\n\n<p><span style=\"font-size:18px\">\u00e2\u20ac\u2039<strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input</strong>: N = 3, a[] = {3, 5, 2}\n<strong>Output:</strong> 1\n<strong>Explanation</strong>: Maximum gcd is 1.</span></pre>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:&nbsp;&nbsp;</strong><br />\nYour task is to complete the function&nbsp;<strong>MaxGcd()</strong>&nbsp;which takes the&nbsp;<strong>N</strong><strong>&nbsp;</strong>and list of <strong>N</strong> elements<strong>&nbsp;</strong>as inputs and returns the answer.</span></p>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong>&nbsp;O(N * log N)<br />\n<strong>Expected Auxiliary Space:</strong>&nbsp;O(max(a<sub>i</sub>))<br />\n<br />\n<strong>Constraints:</strong><br />\n1 &le; N &le; 10<sup>5</sup><br />\n1 &le; a<sub>i</sub>&nbsp;&le; 10</span><sup><span style=\"font-size:18px\">5</span></sup><br />\n&nbsp;</p>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of integers, find the largest possible Greatest Common Divisor (GCD) that can be achieved by any pair of numbers within the array.",
                "constraints": [
                    "1 <= N <= 10^5",
                    "1 <= a[i] <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "N = 5, a[] = {1, 2, 3, 4, 5}",
                        "output": "2",
                        "explanation": "The pair (2, 4) has a GCD of 2, which is the maximum possible GCD among all pairs in the array."
                    },
                    {
                        "input": "N = 3, a[] = {3, 5, 2}",
                        "output": "1",
                        "explanation": "The maximum GCD achievable with any pair from the array {3, 5, 2} is 1."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "sieve",
                "slug": "sieve"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nclass Solution{   \npublic:\n    int MaxGcd(int n, int a[]) { \n        int high = 0; \n        for (int i = 0; i < n; i++) \n            high = max(high, a[i]); \n  \n        // Maintaining count aay \n            int count[high + 1] = {0}; \n        for (int i = 0; i < n; i++) \n            count[a[i]]++; \n  \n        // Variable to store the \n        // multiples of a number \n        int counter = 0; \n  \n        // Iterating from MAX to 1 \n        // GCD is always between \n        // MAX and 1. The first \n        // GCD found will be the \n        // highest as we are  \n        // decrementing the potential \n        // GCD \n        for (int i = high; i >= 1; i--) \n        { \n            int j = i; \n           counter = 0; \n    \n            // Iterating from current \n            // potential GCD \n            // till it is less than \n            // MAX \n            while (j <= high) \n            { \n                // A multiple found \n    \n                if(count[j] >=2) \n                   return j; \n    \n               else if (count[j] == 1)          \n                    counter++;          \n  \n                // Incrementing potential \n                // GCD by itself \n                // To check i, 2i, 3i.... \n                j += i; \n    \n                // 2 multiples found, \n                // max GCD found \n                if (counter == 2)          \n                    return i; \n            } \n        }    \n    } \n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "\n\nclass Solution{\n    static int MaxGcd(int n, int a[]){\n        int high = 0; \n        for (int i = 0; i < n; i++) \n            high = Math.max(high, a[i]); \n      \n        // Maintaining count array \n        int count[]=new int[high + 1]; \n        for (int i = 0; i < n; i++) \n            count[a[i]]++; \n      \n        // Variable to store \n        // the multiples of \n        // a number \n        int counter = 0; \n      \n        // Iterating from MAX  \n        // to 1 GCD is always \n        // between MAX and 1 \n        // The first GCD found \n        // will be the highest  \n        // as we are decrementing  \n        // the potential GCD \n        for (int i = high; i >= 1; i--) \n        { \n            int j = i; \n      \n            // Iterating from current  \n            // potential GCD till it \n            // is less than MAX \n            while (j <= high) \n            { \n                // A multiple found \n                if (count[j]>0)      \n                    counter+=count[j];          \n      \n                // Incrementing potential \n                // GCD by itself \n                // To check i, 2i, 3i.... \n                j += i; \n      \n                // 2 multiples found,  \n                // max GCD found \n                if (counter == 2)          \n                    return i; \n            } \n            counter=0; \n        } \n    return 1; \n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            },
            {
                "lang": "C#",
                "full_func": "class Solution\n{\n    public int MaxGcd(int n, int[] a)\n    {\n        int high = 0;\n        for (int i = 0; i < n; i++)\n            high = Math.Max(high, a[i]);\n\n        int[] count = new int[high + 1];\n        for (int i = 0; i < n; i++)\n            count[a[i]]++;\n\n        int counter = 0;\n\n        for (int i = high; i >= 1; i--)\n        {\n            int j = i;\n            counter = 0;\n\n            while (j <= high)\n            {\n                if (count[j] >= 2)\n                    return j;\n\n                else if (count[j] == 1)\n                    counter++;\n\n                j += i;\n\n                if (counter == 2 || j > high) // add condition to break the loop\n                    break;\n            }\n        }\n\n        return -1;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}