{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 702791,
            "title": "Maximum Neighbours In ArrayList",
            "titleSlug": "maximum-neighbours-in-arraylist",
            "content": "<p><span style=\"font-size: 18px;\">Given an integer ArrayList <strong>arr[]</strong>. The task is to find the <strong>maximum</strong> for every adjacent pairs in the ArrayList.</span></p>\n<p><strong><span style=\"font-size: 18px;\">Examples:</span></strong></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>1 2 2 3 4 5</span>\n<span style=\"font-size: 18px;\"><strong>Output: </strong>2 2 3 4 5</span>\n<span style=\"font-size: 18px;\"><strong>Explanation: </strong>Maximum of arr[0] and arr[1] is 2, that of arr[1] and arr[2] </span><span style=\"font-size: 18px;\">is 2, ... and so on. For last two elements, maximum is 5.</span>\n</pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>5 5</span>\n<span style=\"font-size: 18px;\"><strong>Output: </strong>5</span>\n<span style=\"font-size: 18px;\"><strong>Explanation: </strong>We only have two elements so max of 5 and 5 is 5 only.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />2 &nbsp;&lt;= arr.size() &nbsp;&lt;= 10<sup>6</sup><br />1 &lt;= arr<sub>i</sub> &lt;= 10<sup>6</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:14px\">This problem is based on window sliding method. Take window of size 2 and iterate through whole ArrayList.</span></p>\n\n<p><span style=\"font-size:14px\"><strong>Algorithm:</strong></span></p>\n\n<ol>\n\t<li><span style=\"font-size:14px\">Start window of size two taking the first two elements of the ArrayList in the window. Lower index of window is at 0th index and higher is at 1st index.</span></li>\n\t<li><span style=\"font-size:14px\">Now, take maximum of the two.</span></li>\n\t<li><span style=\"font-size:14px\">Now, increase the lower index and higher index by 1, to keep window of size 2.</span></li>\n\t<li><span style=\"font-size:14px\">In this way, slide the window through whole ArrayList and each time store maximum of current window with max stored.</span></li>\n</ol>\n\n<p>&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Java",
                "slug": "java"
            },
            {
                "name": "Java-Collections",
                "slug": "java-collections"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\npublic static ArrayList<Integer> maxNeighbour(ArrayList<Integer> arr) {\n    // Declaring and Initalizing an ArrayList\n    ArrayList<Integer> ans = new ArrayList<>();\n\n    // Adding all the elements to the ArrayList ans according to the question\n    for (int i = 0; i < arr.size() - 1; i++) {\n        ans.add(Math.max(arr.get(i), arr.get(i + 1)));\n    }\n\n    // Returing ans\n    return ans;\n}\n",
                "lang_text": "java"
            }
        ],
        "platform": "GFG"
    }
}