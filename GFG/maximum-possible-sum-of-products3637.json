{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 702932,
            "title": "Maximum Possible Sum of Products",
            "titleSlug": "maximum-possible-sum-of-products3637",
            "content": "<p><span style=\"font-size:20px\">You will be given two arrays A and B of positive integers. The number of values in both the arrays will be the same say&nbsp;N. Your task is to find the maximum sum of products of their elements. Each element in A has to be multiplied with exactly one element in B and vice versa such that each element of both the arrays appears exactly once and the sum of product produced is maximum. </span></p>\n\n<p><span style=\"font-size:20px\">if A = {5,1,3,4,2} and B = {8,10,9,7,6} then a possible sum of product is 5*6 + 1*7 + 3*9 + 4*10 + 2*8.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\nN = 3\nA[] = {1, 2, 3}\nB[] = {4, 5, 1}\n<strong>Output:</strong> 24\n<strong>Explanation: </strong>5*3 + 4*2 + 1*1 = 24</span>\n</pre>\n\n<p><strong><span style=\"font-size:18px\">Example 2:</span></strong></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\nN = 2\nA[] = {1, 2}\nB[] = {4, 4}\n<strong>Output:</strong> 12\n</span><span style=\"font-size:18px\"><strong>Explanation:</strong> 4*2 + 4*1 = 12</span>\n</pre>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:&nbsp;&nbsp;</strong><br />\nYou don&#39;t need to read input or print anything. Your task is to complete the function&nbsp;<strong>MaxSum()</strong>&nbsp;which takes the array<strong> A[], B[],</strong>&nbsp;and&nbsp;<strong>N</strong><strong>&nbsp;</strong>as inputs and returns the answer.<br />\n<br />\n<strong>Expected Time Complexity:</strong>&nbsp;O(N</span><span style=\"font-size:15px\">&nbsp;* <span style=\"font-size:18px\">log N</span></span><span style=\"font-size:18px\">)</span><br />\n<span style=\"font-size:18px\"><strong>Expected Auxiliary Space:</strong>&nbsp;O(1)</span><br />\n<br />\n<span style=\"font-size:18px\"><strong>Constraints:</strong></span><br />\n<span style=\"font-size:18px\">1 &le; N &le; 10<sup>5</sup></span><br />\n<span style=\"font-size:18px\">1 &le; A[i], B[i] &le; 10<sup>5</sup></span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two arrays, A and B, of positive integers, each with N elements, find the maximum possible sum of products of their elements. Each element in A must be multiplied with exactly one element in B, and vice-versa, such that each element of both arrays appears exactly once in a product. The goal is to maximize the sum of these products.",
                "constraints": [
                    "1 <= N <= 10^5",
                    "1 <= A[i], B[i] <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "N = 3\nA[] = {1, 2, 3}\nB[] = {4, 5, 1}",
                        "output": "24",
                        "explanation": "Multiplying the largest elements together and the smallest elements together will provide the maximum sum: 3*5 + 2*4 + 1*1 = 24"
                    },
                    {
                        "input": "N = 2\nA[] = {1, 2}\nB[] = {4, 4}",
                        "output": "12",
                        "explanation": "Multiplying the largest elements together will provide the maximum sum: 2*4 + 1*4 = 12"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Sort the arrays and add product of each index i.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "accolite",
            "amazon"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "// Function to find the maximum sum of the product of corresponding elements in two arrays\nlong long MaxSum(long long int A[], long long int B[], long long int N){\n    // Sorting the arrays in ascending order\n    sort(A, A + N);\n    sort(B, B + N);\n    \n    // Initializing the sum of products\n    long long ans = 0;\n    \n    // Iterating through the arrays in descending order\n    for(int i = N - 1; i >= 0; i--){\n        // Calculating the product of corresponding elements and adding it to the sum\n        long long x = A[i] * B[i];\n        ans += x;\n    }\n    \n    // Returning the maximum sum of products\n    return ans;\n}",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\nclass Solution \n{ \n    //  Function to calculate the maximum sum of products of corresponding elements in two arrays\n    long MaxSum(long []A, long []B, int N) \n    { \n        // Sorting both arrays in ascending order\n        Arrays.sort(A);\n        Arrays.sort(B);\n        // Variable to store the maximum sum\n        long ans=0;\n        // Iterating over the arrays and calculating the sum of products of corresponding elements\n        for(int i=0;i<N;i++)\n            ans+=A[i]*B[i];\n        // Returning the maximum sum\n        return ans; \n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "class Solution:\n    # Function to calculate the maximum sum of products\n    def MaxSum(self, A, B, N):\n        ans = 0  # Initializing the answer variable\n\n        A = sorted(A)  # Sorting list A in ascending order\n        B = sorted(B)  # Sorting list B in ascending order\n\n        # Calculating the sum of products of elements at corresponding indices in A and B\n        for i in range(N):\n            ans += A[i] * B[i]\n\n        return ans  # Returning the maximum sum of products",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n/**\n * @param {number[]} A\n * @param {number[]} B\n * @param {number} N\n * @returns {number}\n*/\n\nclass Solution {\n    //Function to calculate the maximum sum of products\n    MaxSum(A, B, N) {\n        let ans = 0; // Initializing the answer variable\n\n        A.sort((a, b) => a - b); // Sorting array A\n        B.sort((a, b) => a - b); // Sorting array B\n\n        //Calculating the sum of products of corresponding elements in A and B\n        for (let i = 0; i < N; i++) {\n            ans += A[i] * B[i];\n        }\n\n        return ans; // Returning the maximum sum of products\n    }\n}",
                "lang_text": "javascript"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution{\n    public long MaxSum(long[] A, long[] B, long N){\n        // Sorting the arrays in descending order\n        Array.Sort(A);\n        Array.Reverse(A);\n        Array.Sort(B);\n        Array.Reverse(B);\n\n        // Initializing the sum of products\n        long ans = 0;\n\n        // Iterating through the arrays\n        for(int i = 0; i < N; i++){\n            // Calculating the product of corresponding elements and adding it to the sum\n            long x = A[i] * B[i];\n            ans += x;\n        }\n\n        // Returning the maximum sum of products\n        return ans;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}