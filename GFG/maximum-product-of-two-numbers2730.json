{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 702948,
            "title": "Maximum product of two numbers",
            "titleSlug": "maximum-product-of-two-numbers2730",
            "content": "<p><span style=\"font-size: 18px;\">Given an array <strong>a</strong><strong>rr </strong>of non-negative integers, return the maximum product of two numbers possible.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Example:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong> arr[] = [1, 4, 3, 6, 7, 0] \n<strong>Output:</strong> 42<br /><strong>Explanation: </strong>6 and 7 have the maximum product.</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input</strong>: arr[] = [1, 100, 42, 4, 23]\n<strong>Output</strong>: 4200<br /><strong>Explanation:</strong></span><strong style=\"font-size: 18px; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">  </strong><span style=\"font-size: 18px; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">42 and 100<span style=\"font-family: 'andale mono', monospace;\"> have the maximum product</span>.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />2 &le; arr.size &le; 10<sup>7</sup><br />0 &le; arr[i] &le; 10<sup>9</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of non-negative integers, find the maximum product of any two numbers within the array.",
                "constraints": [
                    "2 <= arr.size <= 10^7",
                    "0 <= arr[i] <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "[1, 4, 3, 6, 7, 0]",
                        "output": "42",
                        "explanation": "The numbers 6 and 7 yield the largest product: 6 * 7 = 42."
                    },
                    {
                        "input": "[1, 100, 42, 4, 23]",
                        "output": "4200",
                        "explanation": "The numbers 100 and 42 yield the largest product: 100 * 42 = 4200."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span >As the given numbers can't be negative, the expected answer is the product of the maximum and second maximum element from the array.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companies": [
            "amazon",
            "samsung"
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function template for C++\nclass Solution {\n  public:\n    // Function to find the maximum product of two elements in the array.\n    int maxProduct(vector<int> &arr) {\n        int n = arr.size();\n        int max = 0, secondMax = 0;\n        // iterating over the array.\n        for (int i = 0; i < n; i++) {\n            // checking if current element is greater than or equal to maximum element.\n            if (arr[i] >= max) {\n                // updating second maximum as old maximum and maximum as current\n                // element.\n                secondMax = max;\n                max = arr[i];\n            }\n            // checking if current element is greater than or equal to second maximum\n            // element.\n            else if (arr[i] >= secondMax) {\n                // updating second maximum as current element.\n                secondMax = arr[i];\n            }\n        }\n        // returning the product of maximum and second maximum elements.\n        return max * secondMax;\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "\nclass Solution {\n    public static int maxProduct(int[] arr) {\n        // code here\n        int max = 0;\n        int secondMax = 0;\n        int n = arr.length;\n\n        // iterating over the array.\n        for (int i = 0; i < n; i++) {\n            // checking if current element is greater than or equal to maximum element.\n            if (arr[i] >= max) {\n                // updating second maximum as old maximum and maximum as current\n                // element.\n                secondMax = max;\n                max = arr[i];\n            }\n            // checking if current element is greater than or equal to second maximum\n            // element.\n            else if (arr[i] >= secondMax) {\n                // updating second maximum as current element.\n                secondMax = arr[i];\n            }\n        }\n        // returning the product of maximum and second maximum elements.\n        return max * secondMax;\n    }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": "#User function Template for python3\nclass Solution:\n\n    def maxProduct(self, arr):\n        # code here\n        max_val = 0\n\n        second_max = 0\n        n = len(arr)\n\n        # Iterating over the array.\n        for i in range(n):\n            # Checking if current element is greater than or equal to maximum element.\n            if arr[i] >= max_val:\n                # Updating second maximum as old maximum and maximum as current element.\n                second_max = max_val\n                max_val = arr[i]\n            # Checking if current element is greater than or equal to second maximum element.\n            elif arr[i] >= second_max:\n                # Updating second maximum as current element.\n                second_max = arr[i]\n\n        # Returning the product of maximum and second maximum elements.\n        return max_val * second_max\n",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "// User function Template for javascript\n\nclass Solution {\n    maxProduct(arr) {\n        let n = arr.length;\n        let max = 0;\n        let secondMax = 0;\n        for (let i = 0; i < n; i++) {\n            if (arr[i] >= max) {\n                secondMax = max;\n                max = arr[i];\n            } else if (arr[i] >= secondMax) {\n                secondMax = arr[i];\n            }\n        }\n        return max * secondMax;\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}