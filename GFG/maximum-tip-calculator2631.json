{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703975,
            "title": "Maximum Tip Calculator",
            "titleSlug": "maximum-tip-calculator2631",
            "content": "<p dir=\"ltr\" style=\"line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;\"><span style=\"font-size: 14pt; font-family: Arial, sans-serif; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"><span style=\"vertical-align: super;\">In a restaurant, two waiters, <strong>A</strong> and <strong>B</strong>, receive n orders per day, earning tips as per arrays <strong>arr[i]</strong> and <strong>brr[i]</strong> respectively. If A takes the ith order, the tip is <strong>arr[i]</strong> rupees; if B takes it, the tip is <strong>brr[i]</strong> rupees.</span></span></p>\n<p dir=\"ltr\" style=\"line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;\"><span style=\"font-size: 14pt; font-family: Arial, sans-serif; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"><span style=\"vertical-align: super;\">To <strong>maximize </strong>total tips, they must distribute the orders such that:</span></span></p>\n<ul>\n<li><span >A can handle at most <strong>x</strong> orders</span></li>\n<li><span >B can handle at most <strong>y </strong>orders</span></li>\n</ul>\n<p><span ><span style=\"font-family: Arial, sans-serif; white-space-collapse: preserve;\">Given that <strong>x + y &ge; n</strong>, all orders can be managed by either A or B. </span><strong style=\"font-family: Arial, sans-serif; white-space-collapse: preserve;\">Return </strong><span style=\"font-family: Arial, sans-serif; white-space-collapse: preserve;\">the <strong>maximum </strong>possible total tip after processing all the orders.</span></span></p>\n<p><strong><span ><span style=\"font-family: Arial, sans-serif; white-space-collapse: preserve;\">Examples</span></span></strong></p>\n<pre dir=\"ltr\" style=\"line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;\"><span ><span style=\"font-family: Arial, sans-serif; color: #000000; background-color: transparent; font-weight: bold; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">Input: </span><span style=\"font-family: Arial, sans-serif; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">n = 5, x = 3, y = 3, arr = {1, 2, 3, 4, 5}, brr = {5, 4, 3, 2, 1}</span></span><br /><span ><span style=\"font-family: Arial, sans-serif; color: #000000; background-color: transparent; font-weight: bold; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">Output:</span><span style=\"font-family: Arial, sans-serif; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"> 21</span></span><br /><span ><span style=\"font-family: Arial, sans-serif; color: #000000; background-color: transparent; font-weight: bold; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">Explanation:</span><span style=\"font-family: Arial, sans-serif; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"> Person </span><span style=\"font-family: Arial, sans-serif; color: #000000; background-color: transparent; font-weight: bold; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">A</span><span style=\"font-family: Arial, sans-serif; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"> will serve the 3rd, 4th and 5th order while person </span><span style=\"font-family: Arial, sans-serif; color: #000000; background-color: transparent; font-weight: bold; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">B</span><span style=\"font-family: Arial, sans-serif; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"> will serve the rest so the total tip from A = 3+4+5 &amp; B = 5 + 4 i.e. 21. </span></span></pre>\n<p dir=\"ltr\" style=\"line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;\">&nbsp;</p>\n<pre dir=\"ltr\" style=\"line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;\"><span ><span style=\"font-family: Arial, sans-serif; color: #000000; background-color: transparent; font-weight: bold; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">Input: </span><span style=\"font-family: Arial, sans-serif; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">n = 8, x = 4, y = 4, arr = {1, 4, 3, 2, 7, 5, 9, 6}, brr = {1, 2, 3, 6, 5, 4, 9, 8}</span></span><br /><span ><span style=\"font-family: Arial, sans-serif; color: #000000; background-color: transparent; font-weight: bold; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">Output:</span><span style=\"font-family: Arial, sans-serif; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"> 43</span></span><br /><span ><span style=\"font-family: Arial, sans-serif; color: #000000; background-color: transparent; font-weight: bold; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">Explanation:</span><span style=\"font-family: Arial, sans-serif; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"> Person A will serve 1st, 2nd, 5th and 6th order while Person B will serve the rest &amp; the total tip will be 43.</span></span></pre>\n<p dir=\"ltr\" style=\"line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;\">&nbsp;</p>\n<pre dir=\"ltr\" style=\"line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;\"><span ><span style=\"font-family: Nunito, sans-serif; color: #273239; background-color: #f9f9f9; font-weight: bold; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">Input: </span><span style=\"font-family: Nunito, sans-serif; color: #273239; background-color: #f9f9f9; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">n = 7, x = 3, y = 4, arr[] = {8, 7, 15, 19, 16, 16, 18}, brr[] = {1, 7, 15, 11, 12, 31, 9}</span></span><br /><span ><span style=\"font-family: Nunito, sans-serif; color: #273239; background-color: #f9f9f9; font-weight: bold; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">Output</span><span style=\"font-family: Nunito, sans-serif; color: #273239; background-color: #f9f9f9; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">: 110</span></span><br /><span ><span style=\"font-family: Nunito, sans-serif; color: #273239; background-color: #f9f9f9; font-weight: bold; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">Explanation: </span><span style=\"font-family: Nunito, sans-serif; color: #273239; background-color: #f9f9f9; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">Person A will serve orders 8,19,18 while person B will serve 7,15, 12 &amp; 31.</span></span></pre>\n<p dir=\"ltr\" style=\"line-height: 1.38; margin-top: 12pt; margin-bottom: 12pt;\"><span ><span style=\"font-family: Roboto, sans-serif; color: #000000; background-color: transparent; font-weight: bold; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">Expected Time Complexity:</span><span style=\"font-family: Roboto, sans-serif; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"> O(n*logn)</span><span style=\"font-family: Roboto, sans-serif; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"><br /></span><span style=\"font-family: Roboto, sans-serif; color: #000000; background-color: transparent; font-weight: bold; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">Expected Auxiliary Space:</span><span style=\"font-family: Roboto, sans-serif; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"> O(n)</span></span></p>\n<p dir=\"ltr\" style=\"line-height: 1.38; margin-top: 12pt; margin-bottom: 12pt;\"><span ><span style=\"font-family: Roboto, sans-serif; color: #000000; background-color: transparent; font-weight: bold; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">Constraints:</span><span style=\"font-family: Roboto, sans-serif; color: #000000; background-color: transparent; font-weight: bold; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"><br /></span><span style=\"font-family: Roboto, sans-serif; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">1 &le; n &le; 10</span><span style=\"font-family: Roboto, sans-serif; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"><span style=\"vertical-align: super;\">5</span></span><span style=\"font-family: Roboto, sans-serif; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"><span style=\"vertical-align: super;\"><br /></span></span><span style=\"font-family: Roboto, sans-serif; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">1 &le; x, y &le; n</span><span style=\"font-family: Roboto, sans-serif; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"><br /></span><span style=\"font-family: Roboto, sans-serif; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\">1 &le; arr[i], brr[i] &le; 10</span><span style=\"font-family: Roboto, sans-serif; color: #000000; background-color: transparent; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;\"><span style=\"vertical-align: super;\">9</span></span></span></p>",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Two waiters, A and B, work at a restaurant. Each day, they receive 'n' orders. If waiter A takes the i-th order, he earns arr[i] rupees in tips. If waiter B takes the i-th order, he earns brr[i] rupees. The goal is to maximize the total tips earned by the two waiters, subject to the following constraints:\n\n*   Waiter A can handle at most 'x' orders.\n*   Waiter B can handle at most 'y' orders.\n\nGiven that x + y >= n, which guarantees that all orders can be handled by either A or B, determine the maximum possible total tip amount after processing all the orders.",
                "constraints": [
                    "1 <= n <= 10^5",
                    "1 <= x, y <= n",
                    "1 <= arr[i], brr[i] <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "n = 5, x = 3, y = 3, arr = {1, 2, 3, 4, 5}, brr = {5, 4, 3, 2, 1}",
                        "output": "21",
                        "explanation": "To maximize the total tip, A should serve orders 3, 4, and 5, earning 3 + 4 + 5 = 12 rupees. B serves the remaining orders 1 and 2, earning 5 + 4 = 9 rupees. The total tip is 12 + 9 = 21 rupees."
                    },
                    {
                        "input": "n = 8, x = 4, y = 4, arr = {1, 4, 3, 2, 7, 5, 9, 6}, brr = {1, 2, 3, 6, 5, 4, 9, 8}",
                        "output": "43",
                        "explanation": "A can serve orders that give him a higher tip compared to B. In this case, orders 1, 2, 5 and 6 can be best served by A and remaining by B."
                    },
                    {
                        "input": "n = 7, x = 3, y = 4, arr[] = {8, 7, 15, 19, 16, 16, 18}, brr[] = {1, 7, 15, 11, 12, 31, 9}",
                        "output": "110",
                        "explanation": "A serves orders that return maximum tips for him and all other orders are taken by B to maximize total tips."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size: 14pt;\">Sort the orders according to the descending order of |a[i] - b[i]|. Then assign orders to a or b so that they get the maximum tip from the i<sup>th</sup> person.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companies": [
            "amazon",
            "tcs"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nclass Solution {\n  public:\n    // Comparator function to sort the vectors in descending order based on the third\n    // element\n    static bool comp(vector<int> &v1, vector<int> &v2) { return v1[2] > v2[2]; }\n\n    // Function to calculate the maximum tip\n    long long maxTip(int n, int x, int y, vector<int> &arr, vector<int> &brr) {\n        // Creating a vector of vectors to store the elements from arrays a and b along\n        // with their differences\n        vector<vector<int>> v(n);\n        for (int i = 0; i < n; i++) {\n            vector<int> vv(3);\n            vv[0] = arr[i], vv[1] = brr[i], vv[2] = abs(arr[i] - brr[i]);\n\n            v[i] = vv;\n        }\n\n        // Sorting the vector of vectors in descending order based on the third element\n        sort(v.begin(), v.end(), comp);\n        long long ans = 0;\n\n        // Iterating through the sorted vector to calculate the maximum tip\n        for (int i = 0; i < n; i++) {\n            if (x == 0) {\n                ans += v[i][1];\n            } else if (y == 0) {\n                ans += v[i][0];\n            } else {\n                if (v[i][0] > v[i][1]) {\n                    ans += v[i][0];\n                    x--;\n                } else {\n                    ans += v[i][1];\n                    y--;\n                }\n            }\n        }\n        return ans;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution {\n    public static long maxTip(int n, int x, int y, int[] arr, int[] brr) {\n        // Create a 2D array to store elements from arrays a and b,\n        // and the absolute difference between them\n        Integer[][] temp_arr = new Integer[n][3];\n\n        // Fill in the 2D array with elements from arrays a and b\n        // and calculate the absolute difference between them\n        for (int i = 0; i < n; i++) {\n            temp_arr[i][0] = arr[i];\n            temp_arr[i][1] = brr[i];\n            temp_arr[i][2] = Math.abs(arr[i] - brr[i]);\n        }\n\n        // Sort the 2D array in descending order based on the absolute difference\n        Arrays.sort(temp_arr, new Comparator<Integer[]>() {\n            @Override\n            public int compare(Integer[] o1, Integer[] o2) {\n                return o2[2].compareTo(o1[2]);\n            }\n        });\n\n        long ans = 0;\n\n        // Iterate through the sorted array and calculate the maximum tip\n        for (int i = 0; i < n; i++) {\n            if (x == 0) {\n                ans += temp_arr[i][1];\n            } else if (y == 0) {\n                ans += temp_arr[i][0];\n            } else {\n                if (temp_arr[i][0] >= temp_arr[i][1]) {\n                    ans += temp_arr[i][0];\n                    x--;\n                } else {\n                    ans += temp_arr[i][1];\n                    y--;\n                }\n            }\n        }\n\n        return ans;\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "from typing import List\n\n\nclass Solution:\n\n    def maxTip(self, n: int, x: int, y: int, arr: List[int],\n               brr: List[int]) -> int:\n        # create a list l to store pairs of a, b, and the absolute difference between them\n        l = []\n        for i in range(n):\n            l.append([arr[i], brr[i], abs(arr[i] - brr[i])])\n        # sort the list l in reverse order based on the absolute difference\n        l.sort(reverse=True, key=lambda x: x[2])\n\n        # initialize the result variable\n        res = 0\n        # iterate through the list l\n        for i in range(n):\n            # check if x is 0, if so, add b[i] to the result\n            if x == 0:\n                res += l[i][1]\n            # check if y is 0, if so, add a[i] to the result\n            elif y == 0:\n                res += l[i][0]\n            else:\n                # if a[i] > b[i], add a[i] to the result and decrement x by 1\n                if l[i][0] > l[i][1]:\n                    res += l[i][0]\n                    x -= 1\n                # otherwise, add b[i] to the result and decrement y by 1\n                else:\n                    res += l[i][1]\n                    y -= 1\n        # return the final result\n        return res\n",
                "lang_text": "py"
            },
            {
                "lang": "Javascript",
                "full_func": "class Solution {\n    /**\n    * @param number n\n    * @param number x\n    * @param number y\n    * @param number[] a\n    * @param number[] b\n\n    * @returns number\n    */\n    maxTip(n, x, y, arr, brr) {\n        // create a list l to store pairs of a, b, and the absolute difference between\n        // them\n        let l = [];\n        for (let i = 0; i < n; i++) {\n            l.push([ arr[i], brr[i], Math.abs(arr[i] - brr[i]) ]);\n        }\n        // sort the list l in reverse order based on the absolute difference\n        l.sort((x, y) => y[2] - x[2]);\n\n        // initialize the result variable\n        let res = 0;\n        // iterate through the list l\n        for (let i = 0; i < n; i++) {\n            // check if x is 0, if so, add b[i] to the result\n            if (x == 0) {\n                res += l[i][1];\n            }\n            // check if y is 0, if so, add a[i] to the result\n            else if (y == 0) {\n                res += l[i][0];\n            } else {\n                // if a[i] > b[i], add a[i] to the result and decrement x by 1\n                if (l[i][0] > l[i][1]) {\n                    res += l[i][0];\n                    x -= 1;\n                }\n                // otherwise, add b[i] to the result and decrement y by 1\n                else {\n                    res += l[i][1];\n                    y -= 1;\n                }\n            }\n        }\n        // return the final result\n        return res;\n    }\n}\n",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}