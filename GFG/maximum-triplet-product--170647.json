{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 714123,
            "title": "Maximum Triplet product",
            "titleSlug": "maximum-triplet-product--170647",
            "content": "<p><span style=\"font-size:18px\">Given an array <strong>arr&nbsp;</strong>of size <strong>n</strong>, the task is to find the maximum triplet product in the array.</span></p>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:\r\n</strong>n = 4\r\narr[] = {1, 2, 3, 5}\r\n<strong>Output:\r\n</strong>30\r\n<strong>Explanation:</strong>\r\n5*3*2 gives 30. This is the maximum possible\r\ntriplet product in the array.</span>\r\n</pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:\r\n</strong>n = 7\r\narr[] = {-3, -5, 1, 0, 8, 3, -2} <strong>\r\nOutput:\r\n</strong>120\r\n<strong>Explanation:</strong> \r\n-3*-5*8 gives 120. This is the maximum possible triplet product in the array.</span>\r\n</pre>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou don&#39;t need to read input or print anything. Your task is to complete the function&nbsp;<strong>maxTripletProduct()</strong>&nbsp;which takes an integer n&nbsp;and an array&nbsp;arr&nbsp;and returns the maximum triplet product in the array.</span></p>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong>&nbsp;O(n)<br />\r\n<strong>Expected Auxiliary Space:</strong>&nbsp;O(1)</span></p>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n3 &le; N &le; 5*10<sup>5</sup><br />\r\n-10<sup>6</sup>&nbsp;&le; A[i] &le; 10<sup>6</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array `arr` of size `n`, find the maximum product of any three numbers (triplet) in the array.",
                "constraints": [
                    "3 <= N <= 5 * 10^5",
                    "-10^6 <= A[i] <= 10^6"
                ],
                "testcases": [
                    {
                        "input": "n = 4\narr[] = {1, 2, 3, 5}",
                        "output": "30",
                        "explanation": "The maximum triplet product is obtained by multiplying 5 * 3 * 2, which equals 30."
                    },
                    {
                        "input": "n = 7\narr[] = {-3, -5, 1, 0, 8, 3, -2}",
                        "output": "120",
                        "explanation": "The maximum triplet product is obtained by multiplying -3 * -5 * 8, which equals 120."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Scan the array and compute Maximum, second maximum, third maximum element, and minimum and second minimum element&nbsp;present in the array.</span></p>",
            "<p><span style=\"font-size:18px\">The answer will always be maximum of product of Maximum, second maximum and third maximum and product of Minimum, second minimum and Maximum element.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "vmware"
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\r\n\r\nclass Solution {\r\n  public:\r\n    long long maxTripletProduct(long long arr[], int n)\r\n    {\r\n    \t// Initialize Maximum, second maximum and third\r\n        // maximum element\r\n        long long maxA = (long long)-1e9, maxB = (long long)-1e9, maxC = (long long)-1e9;\r\n     \r\n        // Initialize Minimum and second mimimum element\r\n        long long minA = (long long)1e9, minB = (long long)1e9;\r\n     \r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            // Update Maximum, second maximum and third\r\n            // maximum element\r\n            if (arr[i] > maxA)\r\n            {\r\n                maxC = maxB;\r\n                maxB = maxA;\r\n                maxA = arr[i];\r\n            }\r\n     \r\n            // Update second maximum and third maximum element\r\n            else if (arr[i] > maxB)\r\n            {\r\n                maxC = maxB;\r\n                maxB = arr[i];\r\n            }\r\n     \r\n            // Update third maximum element\r\n            else if (arr[i] > maxC)\r\n                maxC = arr[i];\r\n     \r\n            // Update Minimum and second mimimum element\r\n            if (arr[i] < minA)\r\n            {\r\n                minB = minA;\r\n                minA = arr[i];\r\n            }\r\n     \r\n            // Update second mimimum element\r\n            else if(arr[i] < minB)\r\n                minB = arr[i];\r\n        }\r\n        \r\n        long long ans = max(minA * minB * maxA, maxA * maxB * maxC);\r\n        \r\n        return ans;\r\n    }\r\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\r\n\r\nclass Solution {\r\n    Long maxTripletProduct(Long arr[], int n)\r\n    {\r\n        // Initialize Maximum, second maximum\r\n        // and third maximum element\r\n        Long maxA = Long.MIN_VALUE,\r\n             maxB = Long.MIN_VALUE,\r\n             maxC = Long.MIN_VALUE;\r\n       \r\n        // Initialize Minimum and\r\n        // second mimimum element\r\n        Long minA = Long.MAX_VALUE,\r\n             minB = Long.MAX_VALUE;\r\n       \r\n        for(int i = 0; i < n; i++)\r\n        {\r\n              \r\n            // Update Maximum, second maximum\r\n            // and third maximum element\r\n            if (arr[i] > maxA)\r\n            {\r\n                maxC = maxB;\r\n                maxB = maxA;\r\n                maxA = arr[i];\r\n            }\r\n       \r\n            // Update second maximum and\r\n            // third maximum element\r\n            else if (arr[i] > maxB)\r\n            {\r\n                maxC = maxB;\r\n                maxB = arr[i];\r\n            }\r\n       \r\n            // Update third maximum element\r\n            else if (arr[i] > maxC)\r\n                maxC = arr[i];\r\n       \r\n            // Update Minimum and second\r\n            // mimimum element\r\n            if (arr[i] < minA)\r\n            {\r\n                minB = minA;\r\n                minA = arr[i];\r\n            }\r\n       \r\n            // Update second mimimum element\r\n            else if(arr[i] < minB)\r\n                minB = arr[i];\r\n        }\r\n        \r\n        Long ans = (long)Math.max(minA * minB * maxA, maxA * maxB * maxC);\r\n        \r\n        return ans;\r\n    }\r\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\r\n\r\nclass Solution:\r\n    def maxTripletProduct (self, arr,  n): \r\n        # Initialize Maximum, second\r\n        # maximum and third maximum\r\n        # element\r\n        maxA = -sys.maxsize - 1\r\n        maxB = -sys.maxsize - 1\r\n        maxC = -sys.maxsize - 1\r\n     \r\n        # Initialize Minimum and\r\n        # second mimimum element\r\n        minA = sys.maxsize\r\n        minB = sys.maxsize\r\n     \r\n        for i in range(n):\r\n     \r\n            # Update Maximum, second\r\n            # maximum and third maximum\r\n            # element\r\n            if (arr[i] > maxA):\r\n                maxC = maxB\r\n                maxB = maxA\r\n                maxA = arr[i]\r\n                 \r\n            # Update second maximum and\r\n            # third maximum element\r\n            elif (arr[i] > maxB):\r\n                maxC = maxB\r\n                maxB = arr[i]\r\n                 \r\n            # Update third maximum element\r\n            elif (arr[i] > maxC):\r\n                maxC = arr[i]\r\n     \r\n            # Update Minimum and second\r\n            # mimimum element\r\n            if (arr[i] < minA):\r\n                minB = minA\r\n                minA = arr[i]\r\n     \r\n            # Update second mimimum element\r\n            elif (arr[i] < minB):\r\n                minB = arr[i]\r\n     \r\n        return max(minA * minB * maxA,\r\n                   maxA * maxB * maxC)",
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}