{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703728,
            "title": "Maximum value of expression",
            "titleSlug": "maximum-value-of-expression2515",
            "content": "<p><span style=\"font-family: 'andale mono', monospace; font-size: 14pt;\">Given an array <strong>arr</strong>. The task is to find the maximum value of |arr[i] &ndash; arr[j]| + |i &ndash; j|, where 0 &lt;= i, j &lt;= arr.size() &ndash; 1 and arr[i], arr[j] belong to the array.</span></p>\n<p><span style=\"font-family: 'andale mono', monospace; font-size: 14pt;\"><strong>Examples:</strong></span></p>\n<pre><span style=\"font-family: 'andale mono', monospace; font-size: 14pt;\"><strong>Input: </strong>arr[] = [1, 2, 3, 1] <br /><strong>Output: </strong>4 <br /><strong>Explanation: </strong>Choose i = 0 and j = 3</span></pre>\n<pre><span style=\"font-family: 'andale mono', monospace; font-size: 14pt;\"><strong>Input: </strong>arr[] = [1, 1, 1]\n<strong>Output: </strong>2<br /><strong>Explaantion: </strong>Choose i = 0 and j = 2</span></pre>\n<p><span style=\"font-family: 'andale mono', monospace; font-size: 14pt;\"><strong>Expected Time Complexity:</strong> O(n)<br /><strong>Expected Auxiliary Space:</strong> O(1)</span></p>\n<p><span style=\"font-family: 'andale mono', monospace; font-size: 14pt;\"><strong>Constraints:</strong><br />1 &lt;= srr.size() &lt;= 10<sup>6</sup><br />1 &lt;= arr[i] &lt;= 10<sup>5</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p><span >Make four equations by removing the absolute value signs (&ldquo;|&rdquo;). The following 4 equations will be formed, and we need to find the maximum value of these equations and that will be our answer.</span></p>\n<ol>\n<li><span >arr[i] &ndash; arr[j] + i &ndash; j = (arr[i] + i) &ndash; (arr[j] + j)</span></li>\n<li><span >arr[i] &ndash; arr[j] &ndash; i + j = (arr[i] &ndash; i) &ndash; (arr[j] &ndash; j)</span></li>\n<li><span >-arr[i] + arr[j] + i &ndash; j = -(arr[i] &ndash; i) + (arr[j] &ndash; j)</span></li>\n<li><span >-arr[i] + arr[j] &ndash; i + j = -(arr[i] + i) + (arr[j] + j)</span></li>\n</ol>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    // Function to find the maximum value of the given expression.\n    int maxValueOfExpression(vector<int>& arr) {\n        int n = arr.size();\n        // Variables to store the minimum and maximum values.\n        int min1 = arr[0], max1 = arr[0], min2 = arr[0], max2 = arr[0];\n        // Variable to store the maximum value of the expression.\n        int ans = INT_MIN;\n\n        // Iterating over the array elements.\n        for (int i = 0; i < n; i++) {\n            // Updating the minimum and maximum values based on different expressions.\n            min1 = std::min(min1, arr[i] + i);\n            max1 = std::max(max1, arr[i] + i);\n            min2 = std::min(min2, arr[i] - i);\n            max2 = std::max(max2, arr[i] - i);\n\n            // Updating the maximum value of the expression.\n            ans = std::max(ans, max1 - min1);\n            ans = std::max(ans, max2 - min2);\n        }\n\n        // Returning the maximum value of the expression.\n        return ans;\n    }\n};\n",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution {\n    // Function to find the maximum value of the given expression.\n    public int maxValueOfExpression(int[] arr) {\n        int n = arr.length;\n        // Variables to store the minimum and maximum values.\n        int min1 = arr[0], max1 = arr[0], min2 = arr[0], max2 = arr[0];\n        // Variable to store the maximum value of the expression.\n        int ans = Integer.MIN_VALUE;\n\n        // Iterating over the array elements.\n        for (int i = 0; i < n; i++) {\n            // Updating the minimum and maximum values based on different expressions.\n            min1 = Math.min(min1, arr[i] + i);\n            max1 = Math.max(max1, arr[i] + i);\n            min2 = Math.min(min2, arr[i] - i);\n            max2 = Math.max(max2, arr[i] - i);\n\n            // Updating the maximum value of the expression.\n            ans = Math.max(ans, max1 - min1);\n            ans = Math.max(ans, max2 - min2);\n        }\n\n        // Returning the maximum value of the expression.\n        return ans;\n    }\n}\n",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "class Solution:\n    # Function to find the maximum value of the given expression.\n    def maxValueOfExpression(self, arr):\n        n = len(arr)\n        # Variables to store the minimum and maximum values.\n        min1 = max1 = arr[0]\n        min2 = max2 = arr[0]\n        # Variable to store the maximum value of the expression.\n        ans = float('-inf')\n\n        # Iterating over the array elements.\n        for i in range(n):\n            # Updating the minimum and maximum values based on different expressions.\n            min1 = min(min1, arr[i] + i)\n            max1 = max(max1, arr[i] + i)\n            min2 = min(min2, arr[i] - i)\n            max2 = max(max2, arr[i] - i)\n\n            # Updating the maximum value of the expression.\n            ans = max(ans, max1 - min1)\n            ans = max(ans, max2 - min2)\n\n        # Returning the maximum value of the expression.\n        return ans\n",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "//Back-end complete function Template for javascript\nclass Solution {\n    // Function to find the maximum value of the given expression.\n    maxValueOfExpression(arr) {\n        let n = arr.length;\n        // Variables to store the minimum and maximum values.\n        let min1 = arr[0], max1 = arr[0];\n        let min2 = arr[0], max2 = arr[0];\n        // Variable to store the maximum value of the expression.\n        let ans = Number.MIN_SAFE_INTEGER;\n\n        // Iterating over the array elements.\n        for (let i = 0; i < n; i++) {\n            // Updating the minimum and maximum values based on different expressions.\n            min1 = Math.min(min1, arr[i] + i);\n            max1 = Math.max(max1, arr[i] + i);\n            min2 = Math.min(min2, arr[i] - i);\n            max2 = Math.max(max2, arr[i] - i);\n\n            // Updating the maximum value of the expression.\n            ans = Math.max(ans, max1 - min1);\n            ans = Math.max(ans, max2 - min2);\n        }\n\n        // Returning the maximum value of the expression.\n        return ans;\n    }\n}\n",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}