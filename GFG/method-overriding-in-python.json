{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 879266,
            "title": "Method Overriding in Python",
            "titleSlug": "method-overriding-in-python",
            "content": "<p><span >Implement the following classes to understand method overriding in Python:</span></p>\n<p><span ><strong>Class Name:</strong> <code>Employee</code></span></p>\n<ul>\n<li>\n<p><span ><strong>Attributes</strong>:</span></p>\n<ul>\n<li><span ><code>id</code> (integer)</span></li>\n<li><span ><code>salary</code> (integer)</span></li>\n</ul>\n</li>\n<li>\n<p><span ><strong>Constructor</strong>:</span></p>\n<ul>\n<li><span ><code>__init__(self, id, salary)</code>: Initializes the <code>id</code> and <code>salary</code> attributes with the given values.</span></li>\n</ul>\n</li>\n<li>\n<p><span ><strong>Methods/Functions</strong>:</span></p>\n<ol>\n<li><span ><code>get_info(self)</code>:</span>\n<ul>\n<li><span ><strong>Parameters</strong>: None</span></li>\n<li><span ><strong>Task</strong>: Returns a string formatted as: <code>\"EmployeeID:{id} Salary:{salary}\"</code>.</span></li>\n</ul>\n</li>\n</ol>\n</li>\n</ul>\n<p><span ><strong>Class Name:</strong> <code>SalesEmployee</code> (Subclass of <code>Employee</code>)</span></p>\n<ul>\n<li>\n<p><span ><strong>Attributes</strong>:</span></p>\n<ul>\n<li><span >Inherited from <code>Employee</code>: <code>id</code>, <code>salary</code></span></li>\n<li><span >New attribute: <code>sales</code> (integer, optional, defaults to 0)</span></li>\n</ul>\n</li>\n<li>\n<p><span ><strong>Constructor</strong>:</span></p>\n<ul>\n<li><span ><code>__init__(self, id, salary, sales=0)</code>: Calls <code>super().__init__(id, salary)</code> to initialize the inherited attributes, and initializes the <code>sales</code> attribute. The <code>sales</code> parameter defaults to <code>0</code> if not provided.</span></li>\n</ul>\n</li>\n<li>\n<p><span ><strong>Methods/Functions</strong>:</span></p>\n<ol>\n<li><span ><code>get_info(self)</code>:</span>\n<ul>\n<li><span ><strong>Parameters</strong>: None</span></li>\n<li><span ><strong>Task</strong>: <strong>Overrides</strong> the <code>get_info</code> method to include the <code>sales</code> attribute in the output.</span></li>\n<li><span ><strong>Return Format</strong>: <code>\"EmployeeID:{id} Salary:{salary} Sales:{sales}\"</code>.</span></li>\n</ul>\n</li>\n</ol>\n</li>\n</ul>\n<p><strong><span >Examples:</span></strong></p>\n<pre><span ><strong>Input:</strong> <code>id = 103</code>, <code>salary = 70000</code>, <code>sales = 300</code><br /><strong>Output: <br /></strong><span style=\"white-space: normal; background-color: #b4d7ff;\">EmployeeID:103 Salary:70000<br /></span></span><span style=\"font-size: 18.6667px; white-space: normal;\">EmployeeID:103 Salary:70000 Sales:300</span></pre>",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [],
        "companies": [],
        "solutions": [
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n# Base class Employee\nclass Employee:\n\n    def __init__(self, id, salary):\n        self.id = id\n        self.salary = salary\n\n    # Method to get employee information\n    def get_info(self):\n        return f\"EmployeeID:{self.id} Salary:{self.salary}\"\n\n\n# Subclass SalesEmployee that inherits from Employee\nclass SalesEmployee(Employee):\n\n    def __init__(self, id, salary, sales=0):\n        # Initialize Employee attributes\n        super().__init__(id, salary)\n        # Initialize sales attribute with a default value of 0\n        self.sales = sales\n\n    # Overloaded method to include sales information\n    def get_info(self):\n        return f\"EmployeeID:{self.id} Salary:{self.salary} Sales:{self.sales}\"\n",
                "lang_text": "python3"
            }
        ],
        "platform": "GFG"
    }
}