{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703786,
            "title": "Midori and chocolates",
            "titleSlug": "midori-and-chocolates2438",
            "content": "<p><span style=\"font-size:18px\">Midori like chocolates and he loves to try different ones. There are <strong>N</strong> shops in a market labelled from <strong>1 </strong>to <strong>N</strong> and each shop offers a different variety of chocolate. Midori starts from <strong>ith </strong>shop and goes ahead to each and every shop. But as there are too many shops Midori would like to know how many more shops he has to visit. You have been given <strong>L</strong> denoting number of bits required to represent <strong>N</strong>. You need to return the maximum number of shops he can visit.</span><br />\r\n<br />\r\n<span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input</strong>: i = 2, L = 3\r\n<strong>Output:</strong>&nbsp;6\r\n<strong>Explanation</strong>: There are 3 bits So N&nbsp;= 8\r\nHence midori can visit 8 - 2 = 6 more shops.</span>\r\n</pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input: </strong>i = 1, L = 2\r\n<strong>Output:&nbsp;</strong>3\r\n<strong>Explanation</strong>: There are 2 bits so N =</span><span style=\"font-size:18px\"> 4\r\nHence midori can visit 4 - 1 = 3 more shops.</span></pre>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Your Task:&nbsp;&nbsp;</strong><br />\r\nYou dont need to read input or print anything. Complete the function <strong>leftShops()&nbsp;</strong>which takes i and L&nbsp;as input parameter and returns the maximum number of shops that midori can&nbsp;visit.<br />\r\n<br />\r\n<strong>Expected Time Complexity:</strong> O(1)<br />\r\n<strong>Expected Auxiliary Space:</strong> O(1)<br />\r\n<br />\r\n<strong>Constraints:</strong><br />\r\n1&lt;= i&nbsp;&lt;=N<br />\r\n1&lt;= L&nbsp;&lt;=30</span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Midori loves chocolates and wants to try them from various shops in a market. There are N shops, numbered from 1 to N. Midori starts at shop 'i' and wants to visit all remaining shops. Given 'L', the number of bits required to represent N, determine the maximum number of shops Midori can still visit.",
                "constraints": [
                    "1 <= i <= N",
                    "1 <= L <= 30"
                ],
                "testcases": [
                    {
                        "input": "i = 2, L = 3",
                        "output": "6",
                        "explanation": "With 3 bits, N = 2^3 = 8.  Starting at shop 2, Midori can visit 8 - 2 = 6 more shops."
                    },
                    {
                        "input": "i = 1, L = 2",
                        "output": "3",
                        "explanation": "With 2 bits, N = 2^2 = 4. Starting at shop 1, Midori can visit 4 - 1 = 3 more shops."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">First try to find N using given bits then calculate left shops using N and L.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Bit Magic",
                "slug": "bit-magic"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\nclass Solution {\n  public:\n    // Function to calculate the number of shops on the left side of a street.\n    long long int leftShops(long long int i, long long int L){\n        return (long long int)(pow(2, L) - i);\n    }\n \n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\r\n\r\n/**\r\n * @param {number} i\r\n * @param {number} L\r\n * @return {number}\r\n*/\r\n\r\nclass Solution {\r\n\r\n    leftShops(i,L){\r\n        return Math.pow(2, L) - i;\r\n    }\r\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}