{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703553,
            "title": "Minimize string value",
            "titleSlug": "minimize-string-value1010",
            "content": "<p><span style=\"font-size:18px\">Given a string of lowercase alphabets and a number k, the task is to find the&nbsp;minimum <strong>value</strong> of the string after&nbsp;removal of &lsquo;k&rsquo; characters.&nbsp;<br />\nThe <strong>value</strong>&nbsp;of a string is defined as the sum of squares of the count of each distinct character.<br />\nFor example consider the string &ldquo;geeks&rdquo;, here frequencies of characters are g -&gt; 1, e -&gt; 2, k -&gt; 1, </span><span style=\"font-size:18px\">s -&gt; 1 and value of the string is 1<sup>2 </sup>+ 2<sup>2 </sup>+ 1<sup>2 </sup>+ 1<sup>2</sup> = 7</span><br />\n&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input: </strong>S = &quot;abccc&quot;, K = 1\n<strong>Output:</strong> 6\n<strong>Explanation</strong>: Remove one &#39;c&#39;, then frequency\nwill be a -&gt; 1, b -&gt; 1, c -&gt; 2.\n1<sup>2 </sup>+ 1<sup>2 </sup>+ 2<sup>2 </sup>= 6</span>\n</pre>\n\n<p><span style=\"font-size:18px\">\u00e2\u20ac\u2039<strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input</strong>: S = &quot;aaab&quot;, K = 2\n<strong>Output:</strong> 2\n<strong>Explanation</strong>: Remove 2 &#39;a&#39;s, then frequency\nwill be a -&gt; 1, b -&gt; 1.\n1<sup>2 </sup>+ 1<sup>2</sup><sup> </sup>= 2</span>\n</pre>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:&nbsp;&nbsp;</strong><br />\nYou don&#39;t need to read input or print anything. Your task is to complete the function&nbsp;<strong>minValue()</strong>&nbsp;which takes the string&nbsp;<strong>s&nbsp;</strong>as inputs and returns the answer.<br />\n<br />\n<strong>Expected Time Complexity:</strong>&nbsp;O(K*log(|S|))<br />\n<strong>Expected Auxiliary Space:</strong>&nbsp;O(constant)<br />\n<br />\n<strong>Constraints:</strong><br />\n1 &le; K, |S| &le; 10<sup>4</sup></span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string of lowercase alphabets and an integer *k*, determine the minimum value of the string after removing *k* characters. The value of a string is calculated as the sum of the squares of the counts of each distinct character.",
                "constraints": [
                    "1 <= K <= 10^4",
                    "1 <= |S| <= 10^4"
                ],
                "testcases": [
                    {
                        "input": "S = \"abccc\", K = 1",
                        "output": "6",
                        "explanation": "After removing one 'c', the frequency of characters becomes: a -> 1, b -> 1, c -> 2. The value of the string is then 1^2 + 1^2 + 2^2 = 6."
                    },
                    {
                        "input": "S = \"aaab\", K = 2",
                        "output": "2",
                        "explanation": "After removing two 'a's, the frequency of characters becomes: a -> 1, b -> 1. The value of the string is then 1^2 + 1^2 = 2."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>1. Count the frequency of each charachter and minimize the maximum frequency</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [
            "amazon",
            "microsoft",
            "factset"
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function template for C++\n\nclass Solution{\npublic:\n\tint minValue(string S, int K)\n\t{\n\t\tint l = S.length(); // find length of string \n\t  \n\t    // if K is greater than length of string \n\t    // so reduced string will become 0 \n\t    if (K >= l) \n\t        return 0; \n\n\t    int MAX_CHAR = 26;\n\t  \n\t    // Else find Frequency of each character and \n\t    // store in an array \n\t    int frequency[MAX_CHAR] = {0}; \n\t    for (int i = 0; i < l; i++) \n\t        frequency[S[i]-'a']++; \n\t  \n\t    // Push each char frequency into a priority_queue \n\t    priority_queue<int> q; \n\t    for (int i=0; i < MAX_CHAR; i++) \n\t        q.push(frequency[i]); \n\t  \n\t  \n\t    // Removal of K characters \n\t    while (K--) \n\t    { \n\t        // Get top element in priority_queue, \n\t        // remove it. Decrement by 1 and again \n\t        // push into priority_queue \n\t        int temp = q.top(); \n\t        q.pop(); \n\t        temp = temp-1; \n\t        q.push(temp); \n\t    } \n\t  \n\t    // After removal of K characters find sum \n\t    // of squares of string Value \n\t    int result = 0; // Initialize result \n\t    while (!q.empty()) \n\t    { \n\t        int temp = q.top(); \n\t        result += temp*temp; \n\t        q.pop(); \n\t    } \n\t  \n\t    return result; \n\t}\n  \n\n   \n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}