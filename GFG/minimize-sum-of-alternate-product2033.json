{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703045,
            "title": "Sum of alternate product",
            "titleSlug": "minimize-sum-of-alternate-product2033",
            "content": "<p><span style=\"font-size: 18px;\">Given an array <strong>arr</strong> of even size consisting of positive integers. After sorting the array, find the sum of the product of i-th element from starting and i-th element from last.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr[] = [9, 2, 8, 4, 5, 7, 6, 0]\n<strong>Output: </strong>74\n<strong>Explanation: </strong>Required sum can be obtained as 9*0 + 8*2 + 7*4 + 6*5 which is equal to 74.</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr[] = [1, 2, 3, 4]\n<strong>Output: </strong>10\n<strong>Explanation: </strong>array is already sorted 1*4 + 2*3 = 10</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong> O(nlogn)<br /><strong>Expected Auxiliary Space:</strong> O(1)</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />2 &le; arr.size() &le; 10<sup>5</sup><br />1 &le; arr[i] &le; 10<sup>3</sup><br /></span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p><span >Sort the array then take the alternate element's product and add.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "// Function to calculate the alternate product of the array elements\nclass Solution {\n  public:\n    int altProduct(vector<int>& arr) {\n        int n = arr.size();\n        // Sorting the array in ascending order\n        sort(arr.begin(), arr.end());\n\n        // Initializing the sum variable\n        int sum = 0;\n\n        // Calculating the sum of alternate products\n        for (int i = 0; i < n / 2; i++)\n            sum += (arr[i] * arr[n - i - 1]);\n\n        // Returning the final sum\n        return sum;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution {\n    public int altProduct(int[] arr) {\n        int n = arr.length;\n\n        // Sorting the array in ascending order\n        Arrays.sort(arr);\n\n        // Initializing the sum variable\n        int sum = 0;\n\n        // Calculating the sum of alternate products\n        for (int i = 0; i < n / 2; i++) {\n            sum += arr[i] * arr[n - i - 1];\n        }\n\n        // Returning the final sum\n        return sum;\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "class Solution:\n\n    def altProduct(self, arr):\n        n = len(arr)\n\n        # Sorting the array in ascending order\n        arr.sort()\n\n        # Initializing the sum variable\n        sum_ = 0\n\n        # Calculating the sum of alternate products\n        for i in range(n // 2):\n            sum_ += arr[i] * arr[n - i - 1]\n\n        # Returning the final sum\n        return sum_\n",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "//Back-end complete function Template for javascript\nclass Solution {\n    altProduct(arr) {\n        let n = arr.length;\n\n        // Sorting the array in ascending order\n        arr.sort((a, b) => a - b);\n\n        // Initializing the sum variable\n        let sum = 0;\n\n        // Calculating the sum of alternate products\n        for (let i = 0; i < Math.floor(n / 2); i++) {\n            sum += arr[i] * arr[n - i - 1];\n        }\n\n        // Returning the final sum\n        return sum;\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}