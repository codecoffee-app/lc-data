{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 702669,
            "title": "Minimum Product of k Integers",
            "titleSlug": "minimum-product-of-k-integers2553",
            "content": "<p><span style=\"font-size: 18px;\">Given an array <strong>arr </strong>of <strong>&nbsp;</strong>positive integers. You need to return the minimum product of <strong>k </strong>integers of the given array.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong> arr[] = [1, 2, 3, 4, 5], k = 2<br /><strong>Output:</strong> 2\n<strong>Explanation: </strong>We will get the minimum product after multiplying 1 and 2 that is 2. So, the answer is 2.\n</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong> arr[] = [9, 10, 8], k = 3\n<strong>Output:</strong> 720<br /></span><strong style=\"font-size: 18px; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Explanation: </strong><span >We have to multiply all the numbers.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &le; k, arr.size() &le; 10<sup>5<br /></sup></span><span style=\"font-size: 18px;\">1 &le; arr[i] &le; 10<sup>5</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p><span >The idea is simple, we find the smallest k elements and print multiplication of them.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Modular Arithmetic",
                "slug": "modular-arithmetic"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    // Function to find the minimum product of k elements in the array\n    int minProduct(vector<int> &arr, int k) {\n        int mod = 1e9 + 7;\n        int n = arr.size();\n        // Sorting the array in ascending order\n        sort(arr.begin(), arr.end());\n\n        // Updating the value of n to the minimum of n and k\n        n = min(n, k);\n\n        // Initializing the answer variable as 1\n        unsigned long long ans = 1;\n\n        // Calculating the product of the first n elements in the array\n        for (int i = 0; i < n; i++) {\n            ans = (ans * arr[i]) % mod;\n        }\n\n        // Returning the minimum product\n        return ans;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\nclass Solution {\n\n    // Function to find the minimum product of k elements in an array\n    int minProduct(int arr[], int k) {\n        int mod = 1000000007;\n        int n = arr.length;\n        // Sorting the array in ascending order\n        Arrays.sort(arr);\n\n        // Setting n to the minimum value between n and k\n        n = Math.min(n, k);\n\n        // Initializing the answer to 1\n        long ans = 1;\n\n        // Calculating the product of the first n elements in the sorted array\n        for (int i = 0; i < n; i++) {\n            ans = (ans * arr[i]) % mod;\n        }\n\n        // Casting the answer to int and returning it\n        return (int)ans;\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\n\nclass Solution:\n    # Function to find the minimum product of first k elements of array.\n    def minProduct(self, arr, k):\n        # Sorting the array in ascending order.\n        n = len(arr)\n        arr.sort()\n\n        # Initializing the modulo.\n        mod = 1000000007\n\n        # Initializing the product.\n        s = 1\n\n        # Taking minimum of n and k.\n        n = min(n, k)\n\n        # Calculating the product of first k elements.\n        for i in range(n):\n            s = arr[i] * s\n\n            # Taking the modulo.\n            s = s % mod\n\n        return s % mod\n",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "// User function Template for javascript\n\nclass Solution {\n    // Function to find the minimum product of first k elements of array.\n    minProduct(arr, k) {\n        // Sorting the array in ascending order.\n        let n = arr.length;\n        arr.sort(function(a, b) { return a - b });\n\n        // Initializing the modulo.\n        const mod = 1000000007;\n\n        // Initializing the product.\n        let s = 1;\n\n        // Taking minimum of n and k.\n        n = Math.min(n, k);\n\n        // Calculating the product of first k elements.\n        for (let i = 0; i < n; i++) {\n            s = arr[i] * s;\n\n            // Taking the modulo.\n            s = s % mod;\n        }\n\n        return s % mod;\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}