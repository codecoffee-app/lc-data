{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703694,
            "title": "Minimum product pair",
            "titleSlug": "minimum-product-pair3608",
            "content": "<p><span style=\"font-family: arial, helvetica, sans-serif; font-size: 14pt;\">Given an array of positive integers. The task is to print the minimum product of any two numbers of the given array.</span></p>\n<p><span style=\"font-family: arial, helvetica, sans-serif; font-size: 14pt;\"><strong>Examples:</strong></span></p>\n<pre><span style=\"font-family: arial, helvetica, sans-serif; font-size: 14pt;\"><strong>Input : </strong>arr[] = [2, 7, 3, 4]\n<strong>Output : </strong>6\n<strong>Explanation : </strong>The minimum product of any two numbers will be 2 * 3 = 6.</span></pre>\n<pre><span style=\"font-family: arial, helvetica, sans-serif; font-size: 14pt;\"><strong>Input : </strong>arr[] = [198, 76, 544, 123, 154, 675]\n<strong>Output :  </strong>9348\n<strong>Explanation : </strong>The minimum product of any two numbers will be 76 * 123 = 9348.</span></pre>\n<p><span style=\"font-family: arial, helvetica, sans-serif; font-size: 14pt;\"><strong>Expected Time Complexity:</strong> O(n)<br /><strong>Expected Auxiliary Space:</strong> O(1)</span></p>\n<p><span style=\"font-family: arial, helvetica, sans-serif; font-size: 14pt;\"><strong>Constraints:</strong><br />2&lt;= arr.size() &lt;=10<sup>6</sup><br />1&lt;= arr[i] &lt;=10<sup>6</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of positive integers, find the minimum product that can be obtained by multiplying any two distinct numbers in the array.",
                "constraints": [
                    "The array size is between 2 and 10^6 (inclusive).",
                    "Each element in the array is between 1 and 10^6 (inclusive)."
                ],
                "testcases": [
                    {
                        "input": "[2, 7, 3, 4]",
                        "output": "6",
                        "explanation": "The minimum product is achieved by multiplying 2 and 3, resulting in 6."
                    },
                    {
                        "input": "[198, 76, 544, 123, 154, 675]",
                        "output": "9348",
                        "explanation": "The minimum product is achieved by multiplying 76 and 123, resulting in 9348."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span ><strong>Best Approach:</strong> The idea is to linearly traverse a given array and keep track of minimum two elements. Finally return product of two minimum elements.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    long long printMinimumProduct(vector<int> &arr) {\n        // Initialize mn1 and mn2 to the maximum possible integer value.\n        // mn1 will store the smallest number, and mn2 will store the second smallest\n        // number.\n        int mn1 = INT_MAX;\n        int mn2 = INT_MAX;\n\n        int n = arr.size(); // Get the size of the array\n\n        // Iterate through the array to find the two smallest numbers\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < mn1) {        // If current element is smaller than mn1\n                mn2 = mn1;             // Update mn2 to the previous smallest (mn1)\n                mn1 = arr[i];          // Update mn1 to the current element\n            } else if (arr[i] < mn2) { // If current element is not smaller than mn1 but\n                                       // smaller than mn2\n                mn2 = arr[i];          // Update mn2 to the current element\n            }\n        }\n\n        // Return the product of the two smallest numbers in the array\n        // Cast to long long to handle large products\n        return static_cast<long long>(mn1) * mn2;\n    }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "\nclass Solution {\n    public long printMinimumProduct(int[] arr) {\n        int mn1 = Integer.MAX_VALUE;\n        int mn2 = Integer.MAX_VALUE;\n\n        int n = arr.length;\n\n        // Iterate through the array to find the two smallest numbers\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < mn1) {\n                mn2 = mn1;\n                mn1 = arr[i];\n            } else if (arr[i] < mn2) {\n                mn2 = arr[i];\n            }\n        }\n\n        // Return the product of the two smallest numbers\n        return (long)mn1 * mn2;\n    }\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": "class Solution:\n\n    def printMinimumProduct(self, arr):\n        mn1 = float('inf')\n        mn2 = float('inf')\n\n        n = len(arr)\n\n        # Iterate through the array to find the two smallest numbers\n        for i in range(n):\n            if arr[i] < mn1:\n                mn2 = mn1\n                mn1 = arr[i]\n            elif arr[i] < mn2:\n                mn2 = arr[i]\n\n        # Return the product of the two smallest numbers\n        return mn1 * mn2\n",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "class Solution {\n    printMinimumProduct(a) {\n        let mn1 =\n            Infinity; // Initialize the first minimum element to positive infinity.\n        let mn2 =\n            Infinity; // Initialize the second minimum element to positive infinity.\n\n        const n = a.length; // Get the length of the input array.\n\n        for (let i = 0; i < n; i++) {\n            if (a[i] <\n                mn1) { // Check if current element is smaller than the first minimum.\n                mn2 = mn1;  // Update the second minimum to previous first minimum.\n                mn1 = a[i]; // Update the first minimum to current element.\n            } else if (a[i] < mn2) { // Check if current element is smaller than the\n                                     // second minimum.\n                mn2 = a[i];          // Update the second minimum to current element.\n            }\n        }\n\n        return mn1 * mn2; // Return the product of the two minimum elements.\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}