{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 702771,
            "title": "Minimum Vertical Sum",
            "titleSlug": "minimum-vertical-sum-1593518814",
            "content": "<p><span style=\"font-size: 18px;\">Given an ArrayList of ArrayLists <strong>arr[][]</strong>. Find the <strong>minimum vertical sum.</strong> ArrayLists inside the ArrayList <strong>arr </strong>may not be of the same size.</span></p>\n<p><strong><span style=\"font-size: 18px;\">Example:</span></strong></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr = [[2, 3, 5], [1, 2], [1, 4, 5, 1]]</span>\n<span style=\"font-size: 18px;\"><strong>Output: </strong>1</span>\n<strong><span style=\"font-size: 18px;\">Explanation:</span></strong><span style=\"font-size: 18px;\">\n2 3 5\n1 2\n1 4 5 1\nSo, the vertical sums are [2+1+1], [3+2+4], [5+5], [1]. 1 is the minimum vertical sum.</span></pre>\n<pre><strong><span style=\"font-size: 18px;\">Input: </span></strong><span style=\"font-size: 18px;\">arr = [[1, 2, 3, 4], [3, 3], [1, 2, 5, 9]]<br /><strong>Output:</strong> 5<br /><strong>Explanation:</strong><br />1 2 3 4<br />3 3<br />1 2 5 9<br />So, the vertical sums are [1+3+1], [2+3+2], [3+5], [4+9]. 5 is the minimum vertical sum.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &nbsp;&lt;= &nbsp;arr.size() &nbsp;&lt;= &nbsp;10<sup>3</sup><br />1 &nbsp;&lt;= &nbsp;arr.get(i).size() &nbsp;&lt;= &nbsp;10<sup>3</sup><br />1 &nbsp;&lt;= &nbsp;arr<sub>ij</sub>&nbsp; &lt;= &nbsp;10<sup>5</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an ArrayList of ArrayLists `arr[][]`, find the minimum vertical sum. Note that the ArrayLists inside the ArrayList `arr` may not be of the same size.",
                "constraints": [
                    "1 <= arr.size() <= 10^3",
                    "1 <= arr.get(i).size() <= 10^3",
                    "1 <= arr[i][j] <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "[[2, 3, 5], [1, 2], [1, 4, 5, 1]]",
                        "output": "1",
                        "explanation": "Consider the input array: [[2, 3, 5], [1, 2], [1, 4, 5, 1]]. The vertical sums are calculated as follows:\n- Column 1: 2 + 1 + 1 = 4\n- Column 2: 3 + 2 + 4 = 9\n- Column 3: 5 + 5 = 10\n- Column 4: 1\nThe minimum of these sums is 1."
                    },
                    {
                        "input": "[[1, 2, 3, 4], [3, 3], [1, 2, 5, 9]]",
                        "output": "5",
                        "explanation": "Consider the input array: [[1, 2, 3, 4], [3, 3], [1, 2, 5, 9]]. The vertical sums are calculated as follows:\n- Column 1: 1 + 3 + 1 = 5\n- Column 2: 2 + 3 + 2 = 7\n- Column 3: 3 + 5 = 8\n- Column 4: 4 + 9 = 13\nThe minimum of these sums is 5."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Simple Implementation&nbsp;<br />\nFor each column find the sum of each arrayList element and then find the minimum among them.<br />\nfor j&nbsp;0 to maximum column:<br />\n&nbsp; &nbsp; &nbsp;sum=0<br />\n&nbsp; &nbsp; &nbsp;for i 0 to n:<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;sum=sum+arr.get(i).get(j) //syntax of arraylist is get<br />\n&nbsp; &nbsp; ans update<br />\nreturn sum</p>\n\n<p>&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Java",
                "slug": "java"
            },
            {
                "name": "Java-Collections",
                "slug": "java-collections"
            }
        ],
        "companies": [],
        "solutions": {
            "java": {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\npublic static int minimumVerticalSum(ArrayList<ArrayList<Integer>> arr) {\n    int n;\n    n = arr.size();\n    int i, j;\n\n    // taking a variable ans and assigning it the Maximum Integer value\n    int ans = Integer.MAX_VALUE;\n\n    // Iterating through all possible columns\n    for (i = 0; i < 1001; i++) {\n        int sum = 0;\n        // Itaerating through each row\n        for (j = 0; j < n; j++) {\n            if (arr.get(j).size() > i) {\n                // Taking sum of each row of same column\n                sum += arr.get(j).get(i);\n            }\n        }\n\n        // If sum is less than ans and not 0 then assigning it to the ans variable\n        if (sum > 0) {\n            ans = Math.min(ans, sum);\n        }\n    }\n\n    // returing the minimum column sum\n    return ans;\n}",
                "lang_text": "java"
            }
        },
        "platform": "GFG"
    }
}