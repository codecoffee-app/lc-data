{
  "status": 200,
  "message": "Question Data fetched successfully",
  "data": {
    "question": {
      "questionFrontendId": 701889,
      "title": "Missing in Array",
      "titleSlug": "missing-number-in-array1416",
      "content": "<p><span >You are given an array <strong><code>arr</code></strong> of size <code>n - 1</code> that contains distinct integers in the range from <code>1</code> to <code>n</code> (inclusive). This array represents a permutation of the integers from <code>1</code> to <code>n</code> with one element missing. Your task is to identify and return the missing element.</span></p>\n<p><span ><strong>Examples:</strong></span></p>\n<pre><span ><strong>Input: </strong>arr[] = [1, 2, 3, 5]\n<strong>Output: </strong>4\n<strong>Explanation: </strong>All the numbers from 1 to 5 are present except 4.<br /></span></pre>\n<pre><span ><strong>Input: </strong>arr[] = [8, 2, 4, 5, 3, 7, 1]\n<strong>Output:</strong> 6\n<strong>Explanation: </strong>All the numbers from 1 to 8 are present except 6.</span></pre>\n<pre><span ><strong>Input: </strong>arr[] = [1]\n<strong>Output: </strong>2\n<strong>Explanation: </strong>Only 1 is present so the missing element is 2.<br /></span></pre>\n<p><span ><strong>Constraints:</strong><br />1 &le; arr.size() &le; 10<sup>6</sup><br />1 &le; arr[i] &le; arr.size() + 1</span></p>",
      "isPaidOnly": false,
      "difficulty": "Easy",
      "likes": "NA",
      "dislikes": "NA",
      "rephrased": {
        "body": "Given an array `arr` of size `n - 1` containing distinct integers in the range from 1 to `n` (inclusive), find the missing integer.  The array represents a permutation of integers from 1 to `n` with one element missing.",
        "constraints": [
          "1 <= arr.size() <= 10^6",
          "1 <= arr[i] <= arr.size() + 1"
        ],
        "testcases": [
          {
            "input": "[1, 2, 3, 5]",
            "output": "4",
            "explanation": "The numbers 1, 2, 3, and 5 are present. The missing number in the range 1 to 5 is 4."
          },
          {
            "input": "[8, 2, 4, 5, 3, 7, 1]",
            "output": "6",
            "explanation": "The numbers 1, 2, 3, 4, 5, 7, and 8 are present. The missing number in the range 1 to 8 is 6."
          },
          {
            "input": "[1]",
            "output": "2",
            "explanation": "The array contains only 1.  The missing number in the range 1 to 2 is 2."
          }
        ]
      }
    },
    "similar": [],
    "hints": [
      "<p><span >Use the sum formula for 1 to n and compare it with the sum of the array to find the missing number.</span></p>"
    ],
    "relatedTopics": [
      {
        "name": "Arrays",
        "slug": "arrays"
      },
      {
        "name": "Searching",
        "slug": "searching"
      },
      {
        "name": "Bit Magic",
        "slug": "bit-magic"
      },
      {
        "name": "Data Structures",
        "slug": "data-structures"
      },
      {
        "name": "Algorithms",
        "slug": "algorithms"
      }
    ],
    "companies": [
      "flipkart",
      "morgan-stanley",
      "accolite",
      "amazon",
      "microsoft",
      "de-shaw",
      "ola-cabs",
      "payu",
      "visa",
      "intuit",
      "adobe",
      "cisco",
      "qualcomm",
      "tcs"
    ],
    "solutions": [
      {
        "lang": "C++",
        "full_func": "//Back-end complete function template for C++\nclass Solution {\n  public:\n    int missingNumber(vector<int>& arr) {\n        int n = arr.size() + 1;\n        int xor1 = 0, xor2 = 0;\n\n        // XOR all array elements\n        for (int i = 0; i < n - 1; i++) {\n            xor2 ^= arr[i];\n        }\n\n        // XOR all numbers from 1 to n\n        for (int i = 1; i <= n; i++) {\n            xor1 ^= i;\n        }\n\n        // Missing number is the XOR of xor1 and xor2\n        return xor1 ^ xor2;\n    }\n};",
        "lang_text": "cpp"
      },
      {
        "lang": "Java",
        "full_func": "\n\nclass Solution {\n    int missingNumber(int arr[]) {\n        int xor1 = 0, xor2 = 0;\n        int n = arr.length + 1;\n\n        // XOR all array elements\n        for (int i = 0; i < n - 1; i++) {\n            xor2 ^= arr[i];\n        }\n\n        // XOR all numbers from 1 to n\n        for (int i = 1; i <= n; i++) {\n            xor1 ^= i;\n        }\n\n        // Missing number is the XOR of xor1 and xor2\n        return xor1 ^ xor2;\n    }\n}\n",
        "lang_text": "java"
      },
      {
        "lang": "Python3",
        "full_func": "# Back-end complete function Template for Python 3\n\n\nclass Solution:\n    # Function to find the missing number in the array\n    def missingNumber(self, arr):\n        n = len(arr) + 1\n        xor1 = 0\n        xor2 = 0\n\n        # XOR all array elements\n        for num in arr:\n            xor2 ^= num\n\n        # XOR all numbers from 1 to n\n        for i in range(1, n + 1):\n            xor1 ^= i\n\n        # Missing number is the XOR of xor1 and xor2\n        return xor1 ^ xor2\n",
        "lang_text": "py"
      },
      {
        "lang": "Javascript",
        "full_func": "\n\nclass Solution {\n    missingNumber(arr) {\n        const n = arr.length + 1;\n        let xor1 = 0;\n        let xor2 = 0;\n\n        // XOR all array elements\n        for (let i = 0; i < n - 1; i++) {\n            xor2 ^= arr[i];\n        }\n\n        // XOR all numbers from 1 to n\n        for (let i = 1; i <= n; i++) {\n            xor1 ^= i;\n        }\n\n        // Missing number is the XOR of xor1 and xor2\n        return xor1 ^ xor2;\n    }\n}\n",
        "lang_text": "javascript"
      }
    ],
    "platform": "GFG"
  }
}
