{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705038,
            "title": "Money Division",
            "titleSlug": "money-division3219",
            "content": "<p><span style=\"font-size: 18px;\">Given an array where each element is the money a person have and there is only Rs. 3 note. We need to check whether it is possible to divide the money equally among all the persons or not. If it is possible then find Minimum number of transactions needed.</span><br />&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>nums = [5, 8, 11]\n<strong>Output: </strong>1\n<strong>Explanation: </strong>3rd person can give Rs. 3\nthen all person would have Rs. 8</span>\n</pre>\n<p><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>nums = [1, 2, 3, 4]\n<strong>Output: </strong>-1\n<strong>Explanation: </strong>1 + 2 + 3 + 4 = 10. Rs. 10 \ncan not be distributed among 4 persons.</span>\n</pre>\n<p>&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Your Task:</strong><br />You don't need to read or print anything. Your task is to complete the function&nbsp;<strong>MinimumTransaction()</strong>&nbsp;which takes the array as input parameter and returns the minimum number of transactions needed to distribute the money equally. If not possible returns -1.</span><br />&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:&nbsp;</strong>O(n) where n is length of array<br /><strong>Expected Space Complexity:&nbsp;</strong>O(1)</span><br />&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &lt;= n &lt;= 10<sup>5</sup><br />1 &lt;= elements of array &lt;= 10<sup>6</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p>Optimize your solution.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Misc",
                "slug": "misc"
            }
        ],
        "companies": [
            "snapdeal"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "\n\nclass Solution{\n\tpublic:\n\tint MinimumTransaction(vector<int>nums) {\n\t\tint tot = 0;\n\t\tint n = nums.size();\n\t\tfor(auto i: nums)\n\t\t\ttot += i;\n\t\tif(tot % n != 0)\n\t\t\treturn -1;\n\t\tint temp = tot / n;\n\t\tint ans = 0;\n\t\tfor(int i = 0; i < nums.size(); i++){\n\t\t\tif(nums[i] > temp){\n\t\t\t\tif((nums[i] - temp) % 3 != 0)\n\t\t\t\t\treturn -1;\n\t\t\t\tans += (nums[i] - temp)/3;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif((temp - nums[i]) % 3 != 0)\n\t\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t\treturn ans;\n\t}\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "// User function Template for C#\n\nclass Solution {\n    // Complete this function\n    public int MinimumTransaction(List<int> nums) {\n        int tot = 0;\n        int n = nums.Count;\n        foreach (int i in nums) tot += i;\n        if (tot % n != 0) return -1;\n        int temp = tot / n;\n        int ans = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            if (nums[i] > temp) {\n                if ((nums[i] - temp) % 3 != 0) return -1;\n                ans += (nums[i] - temp) / 3;\n            } else {\n                if ((temp - nums[i]) % 3 != 0) return -1;\n            }\n        }\n        return ans;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}