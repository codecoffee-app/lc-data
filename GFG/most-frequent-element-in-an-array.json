{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 889398,
            "title": "Most Frequent Element in an Array",
            "titleSlug": "most-frequent-element-in-an-array",
            "content": "<p><span >You are given an integer array <strong>arr[]</strong>. You need to return the element which <strong>occurs maximum times</strong> in <strong>arr[]</strong>.</span><br /><span >Note: If multiple such elements exists return the maximum element.</span></p>\n<p><span ><strong>Example:&nbsp;</strong></span></p>\n<pre><span ><strong>Input:</strong> arr[] = [1, 2, 2, 2, 4, 1]<br /><strong>Output: </strong>2<br /><strong>Explanation: </strong>2 is most frequent element of this array with 3 occurrences.</span></pre>\n<pre><span ><strong>Input:</strong> arr[] = [1, -5, 8, 1]<br /><strong>Output: </strong>1<br /><strong>Explanation: </strong>1 is most frequent element of this array with 2 occurrences.</span></pre>\n<pre><span ><strong>Input:</strong> arr[] = [3, 0, 0, 3, 8]</span><br /><span ><strong>Output: </strong>3</span><br /><span ><strong>Explanation: </strong>0 and 3 are two most frequent elements of this array. 3 is the maximum, so 3 is the answer.</span></pre>\n<p><span ><strong>Constraints:</strong><strong><br /></strong>1&lt;=arr.size()&lt;=10<sup>5</sup></span><br /><span >-10<sup>5</sup>&lt;=arr[i]&lt;=10<sup>5</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an integer array `arr`, find the element that occurs most frequently. If multiple elements have the same highest frequency, return the largest of those elements.",
                "constraints": [
                    "1 <= arr.length <= 10^5",
                    "-10^5 <= arr[i] <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "[1, 2, 2, 2, 4, 1]",
                        "output": "2",
                        "explanation": "The element 2 appears 3 times, which is the highest frequency in the array. Therefore, the output is 2."
                    },
                    {
                        "input": "[1, -5, 8, 1]",
                        "output": "1",
                        "explanation": "The element 1 appears 2 times, which is the highest frequency in the array. Therefore, the output is 1."
                    },
                    {
                        "input": "[3, 0, 0, 3, 8]",
                        "output": "3",
                        "explanation": "Both 0 and 3 appear 2 times, which is the highest frequency. Since 3 is greater than 0, the output is 3."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    int mostFreqEle(vector<int>& arr) {\n        int ele = arr[0], freq = 1;\n        unordered_map<int, int> mp;\n        for (auto it : arr) {\n            mp[it]++;\n        }\n        for (auto it : mp) {\n            if (freq < it.second) {\n                freq = it.second;\n                ele = it.first;\n            } else if (freq == it.second) {\n                ele = max(ele, it.first);\n            }\n        }\n        return ele;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution {\n    public int mostFreqEle(int[] arr) {\n        int ele = arr[0], freq = 1;\n        HashMap<Integer, Integer> mp = new HashMap<>();\n        for (int num : arr) {\n            mp.put(num, mp.getOrDefault(num, 0) + 1);\n        }\n        for (Map.Entry<Integer, Integer> entry : mp.entrySet()) {\n            if (freq < entry.getValue()) {\n                freq = entry.getValue();\n                ele = entry.getKey();\n            } else if (freq == entry.getValue()) {\n                ele = Math.max(ele, entry.getKey());\n            }\n        }\n        return ele;\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "class Solution:\n\n    def mostFreqEle(self, arr):\n        ele, freq = arr[0], 1\n        mp = defaultdict(int)\n        for num in arr:\n            mp[num] += 1\n        for key, value in mp.items():\n            if freq < value:\n                freq = value\n                ele = key\n            elif freq == value:\n                ele = max(ele, key)\n        return ele\n",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "class Solution {\n    mostFreqEle(arr) {\n        let ele = arr[0];\n        let freq = 1;\n        let mp = new Map();\n\n        for (let num of arr) {\n            if (mp.has(num)) {\n                mp.set(num, mp.get(num) + 1);\n            } else {\n                mp.set(num, 1);\n            }\n        }\n\n        for (let [key, value] of mp) {\n            if (freq < value) {\n                freq = value;\n                ele = key;\n            } else if (freq === value) {\n                ele = Math.max(ele, key);\n            }\n        }\n\n        return ele;\n    }\n}\n",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}