{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705802,
            "title": "Moving on grid",
            "titleSlug": "moving-on-grid1135",
            "content": "<p><span style=\"font-size: 18px;\">Given a grid on XY plane with dimensions r&nbsp;x c, the two&nbsp;players (say JON&nbsp;and ARYA&nbsp;) can move the coin over the grid satisfying the following rules:</span></p>\n<ul>\n<li><span style=\"font-size: 18px;\">There is a coin on (1,1) cell initially.</span></li>\n<li><span style=\"font-size: 18px;\">JON&nbsp;will move first.</span></li>\n<li><span style=\"font-size: 18px;\">Both will play on alternate moves.</span></li>\n<li><span style=\"font-size: 18px;\">In each move they can place coin on following positions if current position of coin is x,y<br />(x+1,y), (x+2,y), (x+3,y), (x,y+1), (x,y+2), (x,y+3), (x,y+4), (x,y+5), (x,y+6)</span></li>\n<li><span style=\"font-size: 18px;\">They can't go outside the grid.</span></li>\n<li><span style=\"font-size: 18px;\">Player who cannot make any move will lose this game.</span></li>\n<li><span style=\"font-size: 18px;\">Both play optimally.</span></li>\n</ul>\n<p><br /><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input</strong>: r = 1, c = 2\n<strong>Output:</strong>&nbsp;JON&nbsp;\n<strong>Explanation</strong>: ARYA lost the game because\nhe won't able to move after JON's move.  </span>\n</pre>\n<p><br /><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>r = 2, c = 2\n<strong>Output:&nbsp;</strong>ARYA\n<strong>Explanation</strong>: After first move by JON(1,2 or 2,1)\nand second move by ARYA(2,2) JON won't able to\nmove so ARYA wins.   </span>\n</pre>\n<p><br /><span style=\"font-size: 18px;\"><strong>Your Task:&nbsp;&nbsp;</strong><br />You dont need to read input or print anything. Complete the function <strong>movOnGrid()&nbsp;</strong>which takes r&nbsp;and c&nbsp;as input parameter and returns the name of the winner ( either JON&nbsp;or ARYA)</span><span style=\"font-size: 18px;\">.<br /><br /><strong>Expected Time Complexity:</strong> O(1)<br /><strong>Expected Auxiliary Space:</strong> O(1)<br /><br /><strong>Constraints:</strong><br />1 &lt;= r, c&nbsp;&lt;=10<sup>5</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Two players, JON and ARYA, play a game on a grid of size r x c. They start with a coin placed at position (1, 1). JON moves first, and they alternate turns.  In each move, a player can move the coin from its current position (x, y) to one of the following positions: (x+1, y), (x+2, y), (x+3, y), (x, y+1), (x, y+2), (x, y+3), (x, y+4), (x, y+5), (x, y+6).  The coin cannot be moved outside the grid boundaries. The player who cannot make a valid move loses the game.  Both players play optimally. Determine the winner of the game.",
                "constraints": [
                    "1 <= r <= 10^5",
                    "1 <= c <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "r = 1, c = 2",
                        "output": "JON",
                        "explanation": "JON moves the coin to (1,2). ARYA cannot make any further move, so JON wins."
                    },
                    {
                        "input": "r = 2, c = 2",
                        "output": "ARYA",
                        "explanation": "JON moves to either (1,2) or (2,1).  ARYA can then move to (2,2), leaving JON with no valid moves. ARYA wins."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Use Maths.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Game Theory",
                "slug": "game-theory"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\nclass Solution {\n  public:\n    //Function to return the result of the game.\n    string movOnGrid(int r, int c){\n        //Checking if the remainder of (r-1) divided by 7 is equal to \n        //the remainder of (c-1) divided by 4.\n        //If true, return \"ARYA\", else return \"JON\".\n        if(((r-1)%7)==((c-1)%4)) return \"ARYA\";\n        else return \"JON\";\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "class Solution:\n\n    def movOnGrid(self, r, c):\n        # check if the row index modulo 7 is equal to the column index modulo 4\n        if (r - 1) % 7 == (c - 1) % 4:\n            # if the condition is true, return 'ARYA'\n            return 'ARYA'\n        else:\n            # if the condition is false, return 'JON'\n            return 'JON'\n",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n/**\n * @param {number} r\n * @param {number} c\n * @returns {string}\n*/\n\nclass Solution {\n    //Function to move on a grid.\n    movOnGrid(r, c)\n    {\n        // check if the row index modulo 7 is equal to the column index modulo 4\n        if ((r-1)%7 === (c-1)%4) {\n            // if the condition is true, return 'ARYA'\n            return 'ARYA';\n        } else {\n            // if the condition is false, return 'JON'\n            return 'JON';\n        }\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}