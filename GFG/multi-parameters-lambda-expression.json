{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703395,
            "title": "Multi Parameters Lambda Expression",
            "titleSlug": "multi-parameters-lambda-expression",
            "content": "<p><span style=\"font-size: 18px;\">You need to use lambda expression to add two numbers <strong>a</strong> and <strong>b.</strong><br /></span><span style=\"font-size: 18px;\">You need to complete the function&nbsp;<strong>helperFunction&nbsp;</strong>that does not take any&nbsp;<strong>argument</strong>. This function expects an object of Add as a return&nbsp;<strong>type</strong>. Add is an interface that has the member function addParameters. Your&nbsp;<strong>helperFunction</strong>&nbsp;uses&nbsp;<strong>lambda expression</strong>&nbsp;to implement the&nbsp;<strong>addParameters&nbsp;</strong>within&nbsp;<strong>helperFunction&nbsp;</strong>itself. Then you&nbsp;<strong>return&nbsp;</strong>the object. The&nbsp;<strong>driver code&nbsp;</strong>will call the addParameters method and print the result using it.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples :</strong>&nbsp;&nbsp;</span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>a =<strong> </strong>5, b = 7</span>\n<span style=\"font-size: 18px;\"><strong>Output: </strong>12</span>\n<strong><span style=\"font-size: 18px;\">Explanation:</span> </strong><span style=\"font-size: 18px;\">5+7 = 12</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>a =<strong> </strong>1, b = 5</span>\n<span style=\"font-size: 18px;\"><strong>Output: </strong>6</span>\n<strong><span style=\"font-size: 18px;\">Explanation:</span> </strong><span style=\"font-size: 18px;\">1+5 = 6</span>\n</pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:<br /></strong></span><span style=\"font-size: 18px;\">1 &lt;= a, b &lt;= 10<sup>3</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Implement a function `helperFunction` that returns an object of type `Add`. The `Add` interface has a method `addParameters` that takes two integer arguments and returns their sum.  Within `helperFunction`, use a lambda expression to implement the `addParameters` method. The `helperFunction` should not take any arguments.",
                "constraints": [
                    "1 <= a, b <= 1000"
                ],
                "testcases": [
                    {
                        "input": "a = 5, b = 7",
                        "output": "12",
                        "explanation": "The sum of 5 and 7 is 12."
                    },
                    {
                        "input": "a = 1, b = 5",
                        "output": "6",
                        "explanation": "The sum of 1 and 5 is 6."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Add a = (x,y)-&gt;{return x+y;};<br />\nThen return a</p>"
        ],
        "relatedTopics": [
            {
                "name": "Java",
                "slug": "java"
            },
            {
                "name": "Java-Collections",
                "slug": "java-collections"
            }
        ],
        "companies": [],
        "solutions": {
            "java": {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\npublic static Add helperFunction() {\n    Add ans = (a, b) -> {\n        return a + b;\n    };\n    return ans;\n}\n",
                "lang_text": "java"
            }
        },
        "platform": "GFG"
    }
}