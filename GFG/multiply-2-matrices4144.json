{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705143,
            "title": "Multiply 2 matrices",
            "titleSlug": "multiply-2-matrices4144",
            "content": "<p><span style=\"font-size: 18px;\">For 2 given matrices&nbsp;of size n x n. Your task is to multiply them.</span><br />&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span><span style=\"font-size: 18px;\"><strong>&acirc;&euro;&lsaquo;</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>&acirc;&euro;&lsaquo;Input: \n</strong>matrixA = {{1, 1, 1}, {1, 1, 1}, \n\\t     {1, 1, 1}}\nmatrixB = {{1, 1, 1}, {1, 1, 1},\n\\t     {1, 1, 1}}\n<strong>Output: </strong>{{3, 3, 3}, {3, 3, 3}, {3, 3, 3}}</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: \n</strong>matrixA = {{1, 2}, {3, 4}},\nmatrixB = {{4, 3}, {2, 1}}\n<strong>Output: </strong>{{8, 5}, {20, 13}}</span>\n</pre>\n<p>&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Your Task:</strong><br />You don't need to read or print anything. Your task is to complete the function&nbsp;<strong>Multiply()&nbsp;</strong>which takes two matrices matrixA amd matrixB as input parameter and multiply the two matrices. You don't have to return anything. Copy the values of output matrix into matrixA.</span><br />&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Compelxity:&nbsp;</strong>O(n<sup>3</sup>)<br /><strong>Expected Space Complexity:&nbsp;</strong>O(n<sup>2</sup>)</span><br />&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &lt;= n &lt;= 100<br />1 &lt;= elements of matrices &lt;= 100</span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two square matrices, `matrixA` and `matrixB`, of size n x n, calculate their matrix product. The result should be stored back into `matrixA`.  You are given the matrices as input parameters to the `Multiply()` function.  Do not return anything; modify `matrixA` in place.",
                "constraints": [
                    "1 <= n <= 100",
                    "1 <= elements of matrices <= 100"
                ],
                "testcases": [
                    {
                        "input": "matrixA = {{1, 1, 1}, {1, 1, 1}, {1, 1, 1}}\nmatrixB = {{1, 1, 1}, {1, 1, 1}, {1, 1, 1}}",
                        "output": "{{3, 3, 3}, {3, 3, 3}, {3, 3, 3}}",
                        "explanation": "Each element in the resulting matrix is the dot product of a row from matrixA and a column from matrixB.  For example, the first element (0,0) is (1*1 + 1*1 + 1*1) = 3."
                    },
                    {
                        "input": "matrixA = {{1, 2}, {3, 4}}\nmatrixB = {{4, 3}, {2, 1}}",
                        "output": "{{8, 5}, {20, 13}}",
                        "explanation": "The element at (0,0) of the resulting matrix is (1*4 + 2*2) = 8. The element at (0,1) is (1*3 + 2*1) = 5. The element at (1,0) is (3*4 + 4*2) = 20. The element at (1,1) is (3*3 + 4*1) = 13."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Do simple maths.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "// Function to multiply two matrices\nclass Solution {\npublic:\n    void Multiply(vector<vector<int> >& matrixA, vector<vector<int>>&matrixB) {\n        int n = matrixA.size(); // Get the size of the matrix\n\n        // Create a result matrix filled with 0s\n        vector<vector<int>>res(n, vector<int>(n,0));\n\n        // Iterate over rows of matrixA\n        for(int i = 0; i < n; i++){\n\n        \t// Iterate over columns of matrixB\n        \tfor(int j = 0; j < n; j++){\n\n        \t\t// Iterate over elements of common dimension (n)\n        \t\tfor(int k = 0; k < n; k++){\n\n        \t\t\t// Multiply corresponding elements and add to result matrix\n        \t\t\tres[i][j] += matrixA[i][k] * matrixB[k][j];\n        \t\t}\n           \t}\n        }\n\n        // Update matrixA with the result matrix\n        for(int i = 0; i < n; i++)\n        \tfor(int j = 0; j < n; j++)\n        \t\tmatrixA[i][j] = res[i][j];\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}