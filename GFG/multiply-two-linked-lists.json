{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 700336,
            "title": "Multiply two linked lists",
            "titleSlug": "multiply-two-linked-lists",
            "content": "<p><span style=\"font-size: 18px;\">Given elements as nodes of the two singly linked lists. The task is to multiply these two linked lists, say L1 and L2.</span></p>\n<p><span style=\"font-size: 18px;\"><span style=\"font-size: 18px;\"><em>Note:</em> The output could be large take modulo 10^9+7.</span></span></p>\n<p><strong><span style=\"font-size: 18px;\">Examples :</span></strong></p>\n<pre><strong><span style=\"font-size: 18px;\">Input: </span></strong><span style=\"font-size: 18px;\">LinkedList L1 : 3-&gt;2 , LinkedList L2 : 2<br /><strong>Output: </strong>64<strong>\nExplanation: <br /><img src=\"https://media.geeksforgeeks.org/img-practice/prod/addEditProblem/700336/Web/Other/blobid0_1721108424.png\" width=\"181\" height=\"205\" /><br /></strong>Multiplication of 32 and 2 gives 64.</span>\n</pre>\n<pre><strong><span style=\"font-size: 18px;\">Input: </span></strong><span style=\"font-size: 18px;\">LinkedList L1: 1-&gt;0-&gt;0 , LinkedList L2 : 1-&gt;0<br /><strong>Output: </strong>1000<strong>\nExplanation: <br /><img src=\"https://media.geeksforgeeks.org/img-practice/prod/addEditProblem/700336/Web/Other/blobid1_1721108436.png\" width=\"301\" height=\"188\" /><br /></strong>Multiplication of 100 and 10 gives 1000.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity</strong>: O(max(n,m))<br /><strong>Expected Auxilliary Space</strong>: O(1)<br /></span><span style=\"font-size: 18px;\">where n is the size of L1 and m is the size of L2</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &lt;= number of nodes &lt;= 10<sup>5</sup><br />1 &lt;= node-&gt;data &lt;= 10<sup>3</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two singly linked lists, L1 and L2, where each node represents a digit. Multiply the numbers represented by these linked lists.  The result should be calculated modulo 10^9 + 7.",
                "constraints": [
                    "1 <= number of nodes <= 10^5",
                    "1 <= node->data <= 10^3"
                ],
                "testcases": [
                    {
                        "input": "LinkedList L1 : 3->2 , LinkedList L2 : 2",
                        "output": "64",
                        "explanation": "The first linked list represents the number 32 and the second represents 2. Their product, 32 * 2, is 64."
                    },
                    {
                        "input": "LinkedList L1: 1->0->0 , LinkedList L2 : 1->0",
                        "output": "1000",
                        "explanation": "The first linked list represents the number 100 and the second represents 10. Their product, 100 * 10, is 1000."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size: 16px;\"><strong>For Modular Arithmetic addition&nbsp;</strong><br />Use (A+B)%mod = (A%mod + B%mod)%mod</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Modular Arithmetic",
                "slug": "modular-arithmetic"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "amazon"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "/* Multiply contents of two linked lists */\nclass solution {\n  public:\n    long long multiplyTwoLists(Node *first, Node *second) {\n        long long num1 = 0, num2 = 0;\n        int mod = 1000000007;\n        while (first || second) {\n            if (first) {\n                num1 = ((num1 * 10) % mod + (first->data) % mod) % mod;\n                first = first->next;\n            }\n            if (second) {\n                num2 = ((num2 * 10) % mod + second->data % mod) % mod;\n                second = second->next;\n            }\n        }\n\n        return (num1 % mod * num2 % mod) % mod;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution {\n    public long multiplyTwoLists(Node first, Node second) {\n        long num1 = 0, num2 = 0;\n        int mod = 1000000007;\n\n        while (first != null || second != null) {\n            if (first != null) {\n                num1 = ((num1 * 10) % mod + (first.data) % mod) % mod;\n                first = first.next;\n            }\n            if (second != null) {\n                num2 = ((num2 * 10) % mod + (second.data) % mod) % mod;\n                second = second.next;\n            }\n        }\n\n        return (num1 % mod * num2 % mod) % mod;\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "class Solution:\n\n    def multiply_two_lists(self, first, second):\n        num1, num2 = 0, 0\n        mod = 1000000007\n\n        while first or second:\n            if first:\n                num1 = ((num1 * 10) % mod + first.data % mod) % mod\n                first = first.next\n            if second:\n                num2 = ((num2 * 10) % mod + second.data % mod) % mod\n                second = second.next\n\n        return (num1 % mod * num2 % mod) % mod\n",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "class Solution {\n    multiplyTwoLists(first, second) {\n        let num1 = BigInt(0), num2 = BigInt(0);\n        const mod = BigInt(1000000007);\n\n        while (first || second) {\n            if (first) {\n                num1 = (num1 * BigInt(10) + BigInt(first.data)) % mod;\n                first = first.next;\n            }\n            if (second) {\n                num2 = (num2 * BigInt(10) + BigInt(second.data)) % mod;\n                second = second.next;\n            }\n        }\n        let ans = (num1 * num2) % mod;\n        return ans;\n    }\n}\n",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}