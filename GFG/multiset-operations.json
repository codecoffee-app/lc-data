{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 700917,
            "title": "Multiset Operations",
            "titleSlug": "multiset-operations",
            "content": "<p><span style=\"font-size:18px\">You are given an array<strong> A </strong>of size<strong> N</strong>. you need to <strong>insert </strong>the elements of A into a multiset and <strong>display </strong>the results. Also, you need to<strong> erase a given element x</strong> from the multiset and print &quot;<strong>erased x</strong>&quot; if <strong>successfully </strong>erased, else print &quot;<strong>not found</strong>&quot;.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong>\r\nN = 10\r\nA[] = 9 8 7 4 4 2 1 1 9 8\r\nx = 1\r\n<strong>Output:</strong> \r\n1 1 2 4 4 7 8 8 9 9\r\nerased 1\r\n2 4 4 7 8 8 9 9</span>\r\n</pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nSince this is a function problem, you don&#39;t need to take any input. Just complete the provided functions. In a new line, print the required output.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n1 &lt;= N &lt;= 1000<br />\r\n1 &lt;= A<sub>i</sub> &lt;= 10<sup>6</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array **A** of size **N**, insert all elements of **A** into a multiset. Display the sorted multiset. Then, attempt to erase a given element **x** from the multiset. If the element **x** is successfully erased, print \"erased x\". Otherwise, print \"not found\". Finally, display the updated sorted multiset (after the attempted erasure).",
                "constraints": [
                    "1 <= N <= 1000",
                    "1 <= A[i] <= 10^6"
                ],
                "testcases": [
                    {
                        "input": "N = 10\nA[] = 9 8 7 4 4 2 1 1 9 8\nx = 1",
                        "output": "1 1 2 4 4 7 8 8 9 9\nerased 1\n2 4 4 7 8 8 9 9",
                        "explanation": "The multiset initially contains: {1, 1, 2, 4, 4, 7, 8, 8, 9, 9}. The element '1' is present, so it's erased, and the message 'erased 1' is printed. The updated multiset is {2, 4, 4, 7, 8, 8, 9, 9}."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:14px\">1. Concept of iteration and library method will be useful.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "set",
                "slug": "set"
            },
            {
                "name": "STL",
                "slug": "stl"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\r\n\r\n\r\nmultiset<int> multisetInsert(int arr[],int n)\r\n{\r\n    multiset<int>s;\r\n    for(int i=0;i<n;i++)\r\n        s.insert(arr[i]); //adding elements to multiset\r\n    \r\n    return s;\r\n    \r\n}\r\n\r\n\r\nvoid multisetDisplay(multiset<int>s)\r\n{\r\n    for(auto itr=s.begin();itr!=s.end();itr++)\r\n    {\r\n        cout<<*itr<<\" \";   //printing elements of multiset\r\n    }\r\n    cout<<endl;\r\n}\r\n\r\n\r\nvoid multisetErase(multiset<int>&s,int x)\r\n{\r\n    //deleting x if present\r\n    if(s.count(x)!=0)\r\n    {\r\n        s.erase(x);\r\n        cout<<\"erased \"<<x;\r\n    }\r\n    else\r\n    cout<<\"not found\";\r\n    \r\n    \r\n    cout<<endl;\r\n}",
                "lang_text": "cpp"
            }
        },
        "platform": "GFG"
    }
}