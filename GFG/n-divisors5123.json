{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704209,
            "title": "N-divisors",
            "titleSlug": "n-divisors5123",
            "content": "<p><span style=\"font-size:20px\">Given three integers A, B, N. Your task is to print the number of numbers between A and B including them,&nbsp;which have N-divisors. A number is called N-divisor if it has total N divisors including 1 and itself.</span><br />\n&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\nA = 1\nB = 7\nN = 2\n<strong>Output:</strong>\n4\n<strong>Explanation:</strong>\n2,3,5,7 have 2-divisors</span></pre>\n\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\nA = 1\nB = 25\nN = 3\n<strong>Output:</strong>\n3\n<strong>Explanation:</strong>\n4,9,25 are the numbers\nhaving 3-divisors\n</span></pre>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>count()</strong>&nbsp;which takes&nbsp;integer <strong>A, B </strong>and&nbsp;<strong>N</strong>&nbsp;as input parameters and returns an integer, the number of N-divisor number in between A and B inclusive.</span><br />\n&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O((B-A) sqrt (B))<br />\n<strong>Expected Space Complexity:</strong> O(1)</span><br />\n&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\n1&lt;=A&lt;=B&lt;=10<sup>4</sup><br />\n1 &lt;= N &lt;= 16</span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given three integers A, B, and N, determine the count of numbers within the range [A, B] (inclusive) that possess exactly N divisors. A number is considered an 'N-divisor' if it has a total of N divisors, including 1 and itself.",
                "constraints": [
                    "1 <= A <= B <= 10^4",
                    "1 <= N <= 16"
                ],
                "testcases": [
                    {
                        "input": "A = 1, B = 7, N = 2",
                        "output": "4",
                        "explanation": "The numbers 2, 3, 5, and 7 each have exactly 2 divisors."
                    },
                    {
                        "input": "A = 1, B = 25, N = 3",
                        "output": "3",
                        "explanation": "The numbers 4, 9, and 25 each have exactly 3 divisors."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Calculate the number of factors in sqrt(B) time complexity.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "\nclass Solution{\npublic:\n    int count(int A,int B,int N){ \n        int count = 0;\n        // loop for every number from A to B\n        for(int i = A;i<=B;i++)\n        {\n            int c = 0;\n            // count how many factors number i have\n            for(int j = 1;j*j<=i;j++)\n            {\n                if(i%j == 0)\n                {\n                    c++;\n                    if((i/j)!=j)\n                        c++;\n                }\n            }\n            // if number of factors of i equals N increase count\n            if(c == N)\n                count++;\n        }\n        // return answer\n        return count;\n    } \n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\nclass Solution{\n    static int count(int A,int B,int N){  \n        int count = 0;\n        // loop for every number from A to B\n        for(int i = A;i<=B;i++)\n        {\n            int c = 0;\n            // count how many factors number i have\n            for(int j = 1;j*j<=i;j++)\n            {\n                if(i%j == 0)\n                {\n                    c++;\n                    if((i/j)!=j)\n                        c++;\n                }\n            }\n            // if number of factors of i equals N increase count\n            if(c == N)\n                count++;\n        }\n        // return answer\n        return count;\n    } \n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\nclass Solution:\n    def count(self,A,B,N): \n        count = 0\n        # loop for every number from A to B\n        for i in range(A,B+1):\n            c = 0\n            j = 1\n            # count how many factors number i have\n            while(j*j<=i):\n                if(i%j == 0): \n                    c+=1\n                    if((i/j)!=j):\n                        c+=1\n                j+=1\n            # if number of factors of i equals N increase count\n            if(c == N):\n                count+=1\n        # return answer\n        return count",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n/**\n * @param {number} A\n * @param {number} B\n * @param {number} N\n * @returns {number}\n*/\n\nclass Solution\n{\n    //Function to count the number of N-divisor number in between A and B inclusive.\n    count(A, B, N)\n    {\n        let count = 0;\n        // loop for every number from A to B\n        for (let i = A; i <= B; i++) {\n            let c = 0;\n            let j = 1;\n            // count how many factors number i have\n            while (j * j <= i) {\n                if (i % j == 0) {\n                    c += 1;\n                    if ((i / j) != j) {\n                        c += 1;\n                    }\n                }\n                j += 1;\n            }\n            // if number of factors of i equals N increase count\n            if (c === N) {\n                count += 1;\n            }\n        }\n        // return answer\n        return count;\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}