{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704563,
            "title": "Narcissistic number",
            "titleSlug": "narcissistic-number4852",
            "content": "<p><span style=\"font-size:18px\">Given N, check whether it is a Narcissistic number or not.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Note:&nbsp;</strong>Narcissistic Number is a number that is the sum of its own digits each raised to the power of the number of digits</span><br />\n&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\nN = 407\n<strong>Output:</strong>\n1\n<strong>Explanation:</strong>\n4<sup>3</sup>+0<sup>3</sup>+7<sup>3</sup> = 64+0+343 \n= 407 equals to N.</span></pre>\n\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\nN = 111\n<strong>Output:</strong>\n0\n<strong>Explanation:</strong>\n1<sup>3</sup>+1<sup>3</sup>+1<sup>3</sup> = 1+1+1\n= 3 not equals to N.\n</span></pre>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>isNarcissistic()</strong>&nbsp;which takes&nbsp;an integer <strong>N</strong>&nbsp;as input parameters&nbsp;and returns an integer, 1 if N is a narcissistic number or 0 otherwise.</span><br />\n&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(log N)<br />\n<strong>Expected Space Complexity:</strong> O(1)</span><br />\n&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\n1 &lt;= N &lt;= 10<sup>5</sup></span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Use brute force.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "number-theory",
                "slug": "number-theory"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution{\npublic:\n    int isNarcissistic(int N)\n    {\n        // count the number of digits\n        int l = 0;\n        int x = N;\n        while(x!=0)\n        {\n            x=x/10;\n            l++;\n        }\n        int dup = N;\n        int sum = 0;\n     \n        // calculates the sum of digits\n        // raised to power\n        while (dup!=0) {\n            sum += pow(dup % 10, l);\n            dup /= 10;\n        }\n     \n        if(N == sum) return 1;\n        else return 0;\n    }\n};\n",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\nclass Solution{\n\n    static int isNarcissistic(int N)\n    {\n        // count the number of digits\n        int l = 0;\n        int x = N;\n        while(x!=0)\n        {\n            x=x/10;\n            l++;\n        }\n        int dup = N;\n        int sum = 0;\n     \n        // calculates the sum of digits\n        // raised to power\n        while (dup!=0) {\n            sum += Math.pow(dup % 10, l);\n            dup /= 10;\n        }\n     \n        if(N == sum) return 1;\n        else return 0;\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\nclass Solution:\n\n    def isNarcissistic(self, N):\n        # count the number of digits\n        l = 0\n        x = N\n        while(x):\n            x=x//10\n            l+=1\n        dup = N\n        sum = 0\n     \n        # calculates the sum of digits\n        # raised to power\n        while dup:\n            sum += pow(dup % 10, l)\n            dup //= 10\n     \n        if(N == sum): return 1\n        else: return 0",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n/**\n * @param {number} N\n * @returns {number}\n*/\n\nclass Solution {\n    //Function to check whether the given number is narcissistic or not.\n    isNarcissistic(N)\n    {\n        // count the number of digits\n        let l = 0;\n        let x = N;\n        while(x){\n            x=Math.floor(x/10);\n            l++;\n        }\n        let dup = N;\n        let sum = 0;\n     \n        // calculates the sum of digits\n        // raised to power\n        while (dup) {\n            sum += Math.pow(dup % 10, l);\n            dup = Math.floor(dup/10);\n        }\n     \n        if(N == sum) {\n            return 1;\n        } else {\n            return 0;\n        }\n    }\n}",
                "lang_text": "javascript"
            },
            {
                "lang": "C#",
                "full_func": "class Solution\n{\n    public int isNarcissistic(int N)\n    {\n        int l = 0;\n        int x = N;\n        while(x!=0)\n        {\n            x=x/10;\n            l++;\n        }\n        int dup = N;\n        int sum = 0;\n\n        while (dup!=0) {\n            sum += (int)Math.Pow(dup % 10, l);\n            dup /= 10;\n        }\n\n        if(N == sum) return 1;\n        else return 0;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}