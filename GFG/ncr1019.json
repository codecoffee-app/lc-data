{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704542,
            "title": "nCr",
            "titleSlug": "ncr1019",
            "content": "<p dir=\"ltr\" style=\"box-sizing: border-box; margin: 0px 0px 10px; padding: 0px; border: 0px; font-size: 18px; vertical-align: baseline; color: #273239; font-family: Nunito, sans-serif; letter-spacing: 0.162px; background-color: #ffffff;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">Given two integer values </span><strong style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">n </strong><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">and </span><strong style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">r</strong><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">, the task is to find the value of&nbsp;Binomial Coefficient</span><strong style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">&nbsp;</strong><strong><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><sup style=\"color: #000000; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif; font-weight: 400; letter-spacing: normal;\">n</sup></span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><span style=\"color: #000000; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif; font-size: 18.6667px; letter-spacing: normal;\">C</span><sub style=\"color: #000000; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif; font-weight: 400; letter-spacing: normal;\">r</sub></span></strong></p>\n<ul style=\"box-sizing: border-box; margin: 0px 0px 24px; padding: 0px; border: 0px; font-size: 18px; vertical-align: baseline; list-style-position: outside; list-style-image: initial; display: flex; flex-direction: column; color: #273239; font-family: Nunito, sans-serif; letter-spacing: 0.162px; background-color: #ffffff;\">\n<li style=\"box-sizing: border-box; margin: 0px 0px 0px 24px; padding: 0px; border: 0px; vertical-align: baseline; text-align: left; line-height: 1.58; color: var(--color-black);\" value=\"1\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">A&nbsp;</span><a style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; outline: none; display: inline;\" href=\"https://www.geeksforgeeks.org/coefficient-in-binomial-expansion/\" target=\"_blank\" rel=\"noopener\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">binomial coefficient</span></a> <strong style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><strong style=\"letter-spacing: 0.162px;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><sup style=\"color: #000000; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif; font-weight: 400; letter-spacing: normal;\">n</sup></span></strong></strong><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><span style=\"letter-spacing: 0.162px;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><span style=\"color: #000000; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif; font-size: 18.6667px; letter-spacing: normal;\">C</span></span></span></span><strong style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><strong style=\"letter-spacing: 0.162px;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><sub style=\"color: #000000; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif; font-weight: 400; letter-spacing: normal;\">r</sub></span></strong>&nbsp;</strong><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">can be defined as the coefficient of</span><strong style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"> x^r </strong><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">in the expansion of&nbsp;</span><strong style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">(1 + x)^n </strong><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">that gives the number of ways, disregarding order, that </span><strong style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">r </strong><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">objects&nbsp;can be chosen from among&nbsp;</span><strong style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">n.&nbsp;</strong></li>\n<li style=\"box-sizing: border-box; margin: 0px 0px 0px 24px; padding: 0px; border: 0px; vertical-align: baseline; text-align: left; line-height: 1.58; color: var(--color-black);\" value=\"1\"><strong style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">The</span></strong><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"> </span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">binomial coefficient</span><span style=\"font-weight: 400; letter-spacing: 0.162px;\">&nbsp;</span></span><strong style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><strong style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><strong style=\"letter-spacing: 0.162px;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><sup style=\"color: #000000; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif; font-weight: 400; letter-spacing: normal;\">n</sup></span></strong></strong><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><span style=\"letter-spacing: 0.162px;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><span style=\"color: #000000; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif; font-size: 18.6667px; letter-spacing: normal;\">C</span></span></span></span><strong style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><strong style=\"letter-spacing: 0.162px;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><sub style=\"color: #000000; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif; font-weight: 400; letter-spacing: normal;\">r&nbsp;</sub></span></strong></strong></strong><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><span style=\"letter-spacing: 0.162px; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><span style=\"letter-spacing: 0.162px;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">is calculated as : C(n,r) = n! / r! * (n-r) !</span></span></span></span></li>\n</ul>\n<p><span >Note: If r is greater than n, return <strong>0</strong>.</span></p>\n<p><span ><strong>Examples:</strong></span></p>\n<pre><span ><strong>Input:</strong> n = 5, r = 2\n<strong>Output:</strong> 10\n<strong>Explaination:</strong> The value of <sup>5</sup>C<sub>2</sub> is calculated as 5!/(5&minus;2)!*2! = 5!/3!*2! = 10.</span></pre>\n<pre><span ><strong>Input:</strong> n = 2, r = 4\n<strong>Output:</strong> 0\n<strong>Explaination:</strong> Since r is greater than n, thus </span><strong style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><strong style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><strong style=\"letter-spacing: 0.162px;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><sup style=\"color: #000000; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif; font-weight: 400; letter-spacing: normal;\">2</sup></span></strong></strong></strong><span style=\"color: #273239; font-family: Nunito, sans-serif; font-size: 18px; letter-spacing: 0.162px; background-color: #ffffff; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><span style=\"letter-spacing: 0.162px;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><span style=\"color: #000000; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif; font-size: 18.6667px; letter-spacing: normal;\">C</span></span></span></span></span><strong style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><strong style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><strong style=\"letter-spacing: 0.162px;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><sub style=\"color: #000000; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif; font-weight: 400; letter-spacing: normal;\">4</sub> </span></strong></strong></strong><span style=\"color: #273239; font-family: Nunito, sans-serif; font-size: 18px; letter-spacing: 0.162px; background-color: #ffffff; box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\"><span style=\"letter-spacing: 0.162px;\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">= 0</span></span></span></span></pre>\n<pre><span ><strong>Input:</strong> n = 5, r = 0<br /><strong>Output:</strong> 1\n<strong>Explaination:</strong> The value of 5C0 is calculated as 5!/(5&minus;0)!*0! = 5!/5!*0! = 1. </span></pre>\n<p><span ><strong>Constraints:</strong><br />1 &le; n &le; 33<br />1 &le; r &le; 32</span></p>",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two integer values `n` and `r`, calculate the binomial coefficient  nCr. The binomial coefficient represents the number of ways to choose `r` items from a set of `n` items without regard to order.  It is calculated as n! / (r! * (n-r)!).  If `r` is greater than `n`, return 0.",
                "constraints": [
                    "1 <= n <= 33",
                    "1 <= r <= 32"
                ],
                "testcases": [
                    {
                        "input": "n = 5, r = 2",
                        "output": "10",
                        "explanation": "5C2 = 5! / (3! * 2!) = (5 * 4 * 3 * 2 * 1) / ((3 * 2 * 1) * (2 * 1)) = 120 / (6 * 2) = 120 / 12 = 10"
                    },
                    {
                        "input": "n = 2, r = 4",
                        "output": "0",
                        "explanation": "Since r (4) is greater than n (2), the binomial coefficient is 0."
                    },
                    {
                        "input": "n = 5, r = 0",
                        "output": "1",
                        "explanation": "5C0 = 5! / (5! * 0!) = 1.  Note that 0! is defined as 1."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span >Use Pascal's Triangle or dynamic programming to compute nCr efficiently without recalculating previous values.</span></p>",
            "<p><span >The value of&nbsp;<sup>n</sup>C<sub>r</sub>%p is generally needed for large values of n when&nbsp;<sup>n</sup>C<sub>r</sub>&nbsp;cannot fit in a variable, and causes overflow. So computing&nbsp;<sup>n</sup>C<sub>r</sub>&nbsp;and then using modular operator is not a good idea as there will be overflow even for slightly larger values of n and r.&nbsp;</span></p>\n<p><span >The idea is to compute&nbsp;<sup>n</sup>C<sub>r</sub>&nbsp;using below formula</span></p>\n<pre><span >   C(n, r) = C(n-1, r-1) + C(n-1, r)\n   C(n, 0) = C(n, n) = 1\n</span></pre>\n<p><span ><strong>Extension of above formula for modular arithmetic:</strong><br />We can use distributive property of modulor operator to find nCr % p using above formula.</span></p>\n<pre><span >   C(n, r)%p = [ C(n-1, r-1)%p + C(n-1, r)%p ] % p\n   C(n, 0) = C(n, n) = 1\n</span></pre>\n<p><span >So, let's take an example of 4C3. Pascal's triangle for 4C3 is as:<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1&nbsp; &nbsp; 1<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp; 1<br />&nbsp;&nbsp;&nbsp;&nbsp; 1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 3&nbsp;&nbsp;&nbsp; 3&nbsp;&nbsp;&nbsp; 1<br />&nbsp; 1&nbsp;&nbsp;&nbsp;&nbsp; 4&nbsp;&nbsp;&nbsp;&nbsp; 6&nbsp;&nbsp;&nbsp;&nbsp; 4&nbsp;&nbsp;&nbsp;&nbsp; 1</span></p>\n<p><span >Rows in Pascal's triangle decides the value of given nCr. So, try to fill the entries of current row using the previous row values (nCj = (n-1)Cj + (n-1)C(j-1) ). Try to think of doing this using 1D array.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nclass Solution {\n  public:\n    int nCr(int n, int r) {\n        if (r > n)\n            return 0; // Handle cases where r is greater than n\n\n        vector<int> binomialCoeff(r + 1, 0);\n        binomialCoeff[0] = 1; // Base case for Pascal's Triangle\n\n        // Build the binomial coefficient values\n        for (int i = 1; i <= n; i++) {\n            for (int j = min(i, r); j > 0; j--) {\n                binomialCoeff[j] = (binomialCoeff[j] + binomialCoeff[j - 1]);\n            }\n        }\n\n        return binomialCoeff[r]; // nCr result\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution {\n    public int nCr(int n, int r) {\n        // Edge case where r is greater than n\n        if (r > n) {\n            return 0;\n        }\n\n        // Create a 1D array to store binomial coefficients\n        int[] binomialCoeff = new int[r + 1];\n        binomialCoeff[0] = 1; // Base case for Pascal's Triangle\n\n        // Build the binomial coefficient values\n        for (int i = 1; i <= n; i++) {\n            // Update the array in reverse to use previous row's values\n            for (int j = Math.min(i, r); j > 0; j--) {\n                binomialCoeff[j] = binomialCoeff[j] + binomialCoeff[j - 1];\n            }\n        }\n\n        return binomialCoeff[r]; // nCr result\n    }\n}\n",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "class Solution:\n\n    def nCr(self, n, r):\n        # Edge case where r is greater than n\n        if r > n:\n            return 0\n\n        # Use a 1D array to store binomial coefficients\n        binomialCoeff = [0] * (r + 1)\n        binomialCoeff[0] = 1  # Base case for Pascal's Triangle\n\n        # Build the binomial coefficient values\n        for i in range(1, n + 1):\n            for j in range(min(i, r), 0, -1):\n                binomialCoeff[j] = binomialCoeff[j] + binomialCoeff[j - 1]\n\n        return binomialCoeff[r]  # nCr result\n",
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "class Solution {\n    public int nCr(int n, int r) {\n        // Edge case where r is greater than n\n        if (r > n) return 0;\n\n        // Use a 1D array to store binomial coefficients\n        int[] binomialCoeff = new int[r + 1];\n        binomialCoeff[0] = 1; // Base case for Pascal's Triangle\n\n        // Build the binomial coefficient values\n        for (int i = 1; i <= n; i++) {\n            for (int j = Math.Min(i, r); j > 0; j--) {\n                binomialCoeff[j] = binomialCoeff[j] + binomialCoeff[j - 1];\n            }\n        }\n\n        return binomialCoeff[r]; // nCr result\n    }\n}\n",
                "lang_text": "csharp"
            },
            {
                "lang": "Javascript",
                "full_func": "\nclass Solution {\n    // Method to calculate nCr (Binomial Coefficient)\n    nCr(n, r) {\n        // Handle base case where r is greater than n\n        if (r > n) return 0;\n\n        // We use a 1D array to store the current row of Pascal's Triangle\n        let binomialCoeff = new Array(r + 1).fill(0);\n\n        // The first value in every row of Pascal's Triangle is 1\n        binomialCoeff[0] = 1;\n\n        // Build the binomial coefficient row by row\n        for (let i = 1; i <= n; i++) {\n            // Update the array in reverse to ensure that we use values from the\n            // previous row\n            for (let j = Math.min(i, r); j > 0; j--) {\n                binomialCoeff[j] = binomialCoeff[j] + binomialCoeff[j - 1];\n            }\n        }\n\n        // Return the final result for nCr\n        return binomialCoeff[r];\n    }\n}\n",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}