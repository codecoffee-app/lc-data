{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704120,
            "title": "nCr",
            "titleSlug": "ncr2132",
            "content": "<p><span style=\"font-size:18px\">Find <strong><sup>n</sup>C<sub>r</sub>&nbsp;</strong>for given <strong>n</strong> and <strong>r</strong>.<br />\nAs answer can be very large, compute it modulo 10<sup>9</sup> + 7.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input: </strong>n = 3, r = 2\n<strong>Output:</strong> 3\n<strong>Explanation</strong>: <sup>3</sup>C<sub>2</sub>&nbsp;= 3 </span></pre>\n\n<p><span style=\"font-size:18px\">\u00e2\u20ac\u2039<strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input</strong>: n = 4, r = 2\n<strong>Output:</strong> 6\n<strong>Explanation</strong>: <sup>4</sup>C<sub>2</sub>&nbsp;= 6 </span></pre>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:&nbsp;&nbsp;</strong><br />\nYou don&#39;t need to read input or print anything. Your task is to complete the function&nbsp;<strong>ncr()</strong>&nbsp;which takes <strong>n</strong> and<strong> r&nbsp;</strong>as inputs and returns the answer modulo&nbsp;10<sup>9</sup> + 7.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong>&nbsp;O(n * log n)<br />\n<strong>Expected Auxiliary Space:</strong>&nbsp;O(n)</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\n1 &le; r, n &le; 10<sup>5</sup></span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Calculate the binomial coefficient <sup>n</sup>C<sub>r</sub> (n choose r) for given integers n and r. Since the result can be very large, compute it modulo 10<sup>9</sup> + 7.",
                "constraints": [
                    "1 <= r <= 10<sup>5</sup>",
                    "1 <= n <= 10<sup>5</sup>"
                ],
                "testcases": [
                    {
                        "input": "n = 3, r = 2",
                        "output": "3",
                        "explanation": "<sup>3</sup>C<sub>2</sub> = 3"
                    },
                    {
                        "input": "n = 4, r = 2",
                        "output": "6",
                        "explanation": "<sup>4</sup>C<sub>2</sub> = 6"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Use modular arithmetic to find inverse of denominator&nbsp;modulo 10<sup>9</sup> + 7 and multiply it with numerator.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nclass Solution{   \npublic:\n    //Function to calculate power using recursion.\n    long long int power(long long int x,long long int y,long long int m){\n        if (y == 0)\n            return 1;\n        long long int p = power(x, y/2, m) % m;\n        p = (p * p) % m;\n     \n        return (y%2 == 0)? p : (x * p) % m;\n    }\n\n    //Function to calculate nCr using modulo arithmetic.\n    long int ncr(int n, int r){\n        long int M = 1e9 + 7;\n        long int f[n + 1];\n        f[0] = 1;\n\n        //calculating factorial values.\n        for(int i = 1; i <= n; i++){\n            f[i] = (i * f[i - 1]) % M;\n        }\n\n        //if r is greater than n, return 0.\n        if(r > n) return 0;\n\n        //calculating nCr using modulo arithmetic.\n        //using power function to calculate modulo inverse.\n        long long int up = f[n], down = (f[r] * f[n - r]) % M;\n        long long int ans = (up * power(down, M - 2, M)) % M;\n        long deep = ans;\n            \n        //returning the result.\n        return deep;\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}