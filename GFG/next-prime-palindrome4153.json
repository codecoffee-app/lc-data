{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705254,
            "title": "Next Prime Palindrome",
            "titleSlug": "next-prime-palindrome4153",
            "content": "<p><span style=\"font-size: 18px;\">You will be given a positive integer <strong>N</strong>. Your task is to find the smallest number greater than or equal to <strong>N</strong> that is a prime and a palindrome.</span><br />&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>N = 12\n<strong>Output: </strong>101\n</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>N = 4\n<strong>Output: </strong>5\n</span></pre>\n<p>&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Your Task:</strong><br />You don't need to read or print anything. Your task is to complete the function&nbsp;<strong>PrimePalindrome()</strong>&nbsp;which takes N as input parameter and returns the smallest number greater than equal to N that is prime and palindrome.<br /><br /><strong>Expected Time Complexity:&nbsp;</strong>O(N)<br /><strong>Expected Space Complexity:&nbsp;</strong>O(1)</span><br />&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &lt;= N &lt;= 10<sup>6</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a positive integer N, find the smallest integer greater than or equal to N that is both a prime number and a palindrome.",
                "constraints": [
                    "1 <= N <= 10^6"
                ],
                "testcases": [
                    {
                        "input": "12",
                        "output": "101",
                        "explanation": "The smallest prime palindrome greater than or equal to 12 is 101."
                    },
                    {
                        "input": "4",
                        "output": "5",
                        "explanation": "The smallest prime palindrome greater than or equal to 4 is 5."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Use maths.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Prime Number",
                "slug": "prime-number"
            },
            {
                "name": "palindrome",
                "slug": "palindrome"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Class Solution\nclass Solution {\n\t//Function to find the next prime palindrome number greater than N.\n\tpublic:\n\t\tint PrimePalindrome(int N){\n\t\t\twhile(true){\n\t\t\t\t//Checking if N is a palindrome and prime.\n\t\t\t\tif(N == reverse(N) and isPrime(N))\n\t\t\t\t\treturn N;\n\t\t\t\tN++;\n\t\t\t\t\n\t\t\t\t//Checking if N is in the range [10000000, 100000000) to skip some numbers.\n\t            if (10000000 < N && N < 100000000)\n\t                N = 100000000;\n\t\t\t}\n\t\t\treturn N;\n\t\t}\n\t\t\n\t\t//Function to check if a number is prime or not.\n\t\tbool isPrime(int N){\n\t\t\tif(N < 2)\n\t\t\t\treturn false;\n\t\t\tfor(int i = 2; i*i <= N; i++){\n\t\t\t\tif(N % i == 0)\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\t\n\t\t//Function to reverse a number.\n\t\tint reverse(int N){\n\t\t\tint ans = 0;\n\t\t\twhile(N){\n\t\t\t\tans  = 10*ans + (N%10);\n\t\t\t\tN /= 10;\n\t\t\t}\n\t\t\treturn ans;\n\t\t}\n\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}