{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704780,
            "title": "Number of Factors of N!",
            "titleSlug": "no-of-factors-of-n4833",
            "content": "<p><span style=\"font-size:18px\">Given a positive integer<strong> N</strong>, find the number of factors in N! ( N factorial).</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Example :</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:\n</strong>N = 5</span>\n<span style=\"font-size:18px\"><strong>Output:\n</strong>16</span>\n<span style=\"font-size:18px\"><strong>Explanation:\n</strong>5! is 120 and the number of factors of\n120 are 1 2 3 4 5 6 8 10 12 15 20 24 30\n40 60 120 So the number of factors are 16.</span></pre>\n\n<p><strong><span style=\"font-size:18px\">Example 2:</span></strong></p>\n\n<pre>\n<strong><span style=\"font-size:18px\">Input:\n</span></strong><span style=\"font-size:18px\">N = 4</span>\n<strong><span style=\"font-size:18px\">Output:\n</span></strong><span style=\"font-size:18px\">8</span>\n<strong><span style=\"font-size:18px\">Explanation:\n</span></strong><span style=\"font-size:18px\">4! is 24 and the number of factors of\n24 are 1 2 3 4 6 8 12 24\nSo the number of factors are 8.</span></pre>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong>&nbsp;&nbsp;<br />\nYou don&#39;t need to read input or print anything. Your task is to complete the function&nbsp;<strong>factorsOfFactorial</strong>()&nbsp;which takes an integer <strong>N</strong> as an input parameter and <strong>return</strong>&nbsp;the number of factors of N factorial.</span></p>\n\n<p><span style=\"font-size:18px\">Expected Time Complexity:&nbsp;O(NLogLogN)<br />\nExpected Auxiliary Space:&nbsp;O(N)</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\n1 &lt;= N &lt;= 100</span><br />\n&nbsp;</p>\n\n<p>&nbsp;</p>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a positive integer N, determine the number of factors in N! (N factorial).",
                "constraints": [
                    "1 <= N <= 100"
                ],
                "testcases": [
                    {
                        "input": "5",
                        "output": "16",
                        "explanation": "5! equals 120. The factors of 120 are 1, 2, 3, 4, 5, 6, 8, 10, 12, 15, 20, 24, 30, 40, 60, and 120. Therefore, the total number of factors is 16."
                    },
                    {
                        "input": "4",
                        "output": "8",
                        "explanation": "4! equals 24. The factors of 24 are 1, 2, 3, 4, 6, 8, 12, and 24. Therefore, the total number of factors is 8."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Try to find the number of prime factors and using it find the total number of factors.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "// Function to implement Sieve of Eratosthenes and mark primes\nvoid sieve(int n, bool prime[])\n{\n    // Initializing all elements as prime\n    for (int i=1; i<=n; i++)\n        prime[i] = 1;\n\n    // Marking 1 as not prime\n    prime[1] = 0;\n\n    // Marking all multiples of primes as not prime\n    for (int i=2; i*i<=n; i++)\n    {\n        if (prime[i])\n        {\n            for (int j=i*i; j<=n; j += i)\n                prime[j] = 0;\n        }\n    }\n}\n\n// Function to calculate the exponent of a prime in the factorial\nint expFactor(int n, int p)\n{\n    int x = p;\n    int exponent = 0;\n    \n    // Counting the number of times the prime factor appears\n    while ((n/x) > 0)\n    {\n        exponent += n/x;\n        x *= p;\n    }\n    \n    return exponent;\n}\n\n\nclass Solution\n{\npublic:\n    // Function to calculate the factors of factorial of a number\n    long long factorsOfFactorial(int N)\n    {\n        long long ans = 1;\n\n        // Array to store whether a number is prime or not\n        bool prime[N+1];\n\n        // Marking primes using sieve\n        sieve(N, prime);\n\n        // Calculating factors using prime factors\n        for (int p=1; p<=N; p++)\n        {\n            // Checking if the number is prime\n            if (prime[p]==1)\n                // Multiplying the factor by the exponent plus 1\n                ans *= (expFactor(N, p) + 1);\n        }\n\n        return ans;\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}