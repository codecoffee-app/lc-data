{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705470,
            "title": "Nth character in Concatenated Decimal String",
            "titleSlug": "nth-character-in-concatenated-decimal-string0245",
            "content": "<p><span style=\"font-size:18px\">If all decimal numbers are concatenated in a string then we will get a string which looks like string P as shown below. We need to tell <strong>Nth</strong> character of this string.<br />\r\nP = &ldquo;12345678910111213141516171819202122232425262728293031&hellip;.&rdquo;</span></p>\r\n\r\n<p><strong><span style=\"font-size:18px\">Example 1:</span></strong></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong> N = 10\r\n<strong>Output:</strong> 1\r\n<strong>Explaination:</strong> From the given portion of the \r\nstring you can see that the 10th character is \r\n&#39;1&#39;.</span></pre>\r\n\r\n<p><strong><span style=\"font-size:18px\">Example 1:</span></strong></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong> N = 11\r\n<strong>Output:</strong> 10\r\n<strong>Explaination:</strong> From the given portion of the \r\nstring yuou can see that the 11th character is \r\n&#39;0&#39;.</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou do not need to read input or print anything. Your task is to complete the function <strong>NthCharacter()</strong> which takes N as input parameter and returns the Nth character of the string P.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(logN)<br />\r\n<strong>Expected Auxiliary Space:</strong> O(1)</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n1 &le;&nbsp;N &le; 10<sup>5</sup>&nbsp;&nbsp;</span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an infinitely long string P formed by concatenating all decimal numbers (1, 2, 3, ...), determine the Nth character of the string P.\nP = \"12345678910111213141516171819202122232425262728293031...\"",
                "constraints": [
                    "1 <= N <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "10",
                        "output": "1",
                        "explanation": "The 10th character in the concatenated string is '1' (from the number 10)."
                    },
                    {
                        "input": "11",
                        "output": "0",
                        "explanation": "The 11th character in the concatenated string is '0' (from the number 10)."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Find the digit which contains the Nth character.</span></p>",
            "<p><span style=\"font-size:18px\">9 numbers have 1 digit. Next 90 numbers have 2 digits. Next 900 numbers have 3 digits. And it goes on.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "// Back-end complete function Template for C++\n\nclass Solution{\npublic:\n    // Function to find the Nth character\n    char NthCharacter(int N){\n        \n        int sum = 0, dig = 0, nine = 9, c = 1;\n        string s;\n        \n        // Loop until the sum is less than N\n        while(sum < N){\n            \n            // Check if the sum plus nine times the number of digits (c) is greater than N\n            if(sum + nine*c > N){\n                \n                // Find the number of digits required\n                int x = (N-sum)/c;\n                dig += x;\n                \n                // Check if there is a remainder after dividing by c\n                int y = (N-sum)%c;\n                if(y) \n                    dig++;\n                \n                // Update N to the remaining value\n                N = N - sum - x*c;\n                if(N == 0) \n                    N += c;\n                \n                // Convert dig to a string\n                s = to_string(dig);\n            }\n            \n            // Update the sum and digit values\n            sum += nine*c;\n            dig += nine;\n            nine *= 10;\n            c++;\n        }\n        \n        // Return the Nth character in the string\n        return s[N-1];\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    public char NthCharacter(int N)\n    {\n        int sum = 0, dig = 0, nine = 9, c = 1;\n        string s = \"\";\n        \n        // Loop until the sum is less than N\n        while(sum < N)\n        {\n            // Check if the sum plus nine times the number of digits (c) is greater than N\n            if(sum + nine*c > N)\n            {\n                // Find the number of digits required\n                int x = (N-sum)/c;\n                dig += x;\n                \n                // Check if there is a remainder after dividing by c\n                int y = (N-sum)%c;\n                if(y != 0) \n                    dig++;\n                \n                // Update N to the remaining value\n                N = N - sum - x*c;\n                if(N == 0) \n                    N += c;\n                \n                // Convert dig to a string\n                s = dig.ToString();\n            }\n            \n            // Update the sum and digit values\n            sum += nine*c;\n            dig += nine;\n            nine *= 10;\n            c++;\n        }\n        \n        // Return the Nth character in the string\n        return s[N-1];\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}