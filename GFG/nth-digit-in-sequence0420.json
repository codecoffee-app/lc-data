{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705030,
            "title": "Nth digit in sequence",
            "titleSlug": "nth-digit-in-sequence0420",
            "content": "<p><span style=\"font-size: 18px;\">You are given the sequence: 0123456789101112131415...<br />The 0th digit of this sequence is 0, the 1st digit of this sequence is 1, the 2nd digit of this sequence is 2 and so on. You are given <strong>n</strong>, find the <strong>nth </strong>digit of the sequence.</span><br />&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>n = 12\n<strong>Output: 1</strong>\n<strong>Explanation: 1</strong> is the 12th digit of the\ngiven sequence.</span>\n</pre>\n<p><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>n = 20\n<strong>Output: </strong>4\n<strong>Explanation: </strong>4 is the 20th digit of the\ngiven sequence.</span>\n</pre>\n<p>&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Your Task:</strong><br />You don't need to read or write anything. Your task is to complete the function&nbsp;<strong>NthDigit()</strong>&nbsp;which takes <strong>n</strong> as input parameter and <strong>returns</strong> the nth digit of the sequence.</span><br />&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:&nbsp;</strong>O(log<sub>10</sub>(n)</span><span style=\"font-size: 18px;\">)<br /><strong>Expected Space Compelxity:&nbsp;</strong>O(1)</span><br />&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &lt;= n &lt;= 10<sup>9</sup>&nbsp;</span></p>",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an infinite sequence of digits formed by concatenating the natural numbers in order (0123456789101112131415...), find the digit at the nth position in this sequence. The 0th digit is '0', the 1st digit is '1', and so on.",
                "constraints": [
                    "1 <= n <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "12",
                        "output": "1",
                        "explanation": "The 12th digit in the sequence 0123456789101112131415... is '1'."
                    },
                    {
                        "input": "20",
                        "output": "4",
                        "explanation": "The 20th digit in the sequence 0123456789101112131415... is '4'."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Find the number in which the nth digit lies.&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "\r\n//Back-end complete function template\r\n\r\nclass Solution{\r\n\tpublic:\r\n\t//Function to convert an integer to a string.\r\n\tstring int_to_string(int x){\r\n\t\tstring s = \"\";\r\n\r\n\t\t//converting the integer to a string by extracting digits.\r\n\t\twhile(x){\r\n\t\t\ts += char((x%10) + '0');\r\n\t\t\tx /= 10;\r\n\t\t}\r\n\r\n\t\t//reversing the string.\r\n\t\treverse(s.begin(), s.end());\r\n\t\treturn s;\r\n\t}\r\n\r\n\t//Function to find the sum of digits for each level/range.\r\n\tlong long int find(int x){\r\n\t\tlong long int tot = 1;\r\n\t\tint p = 1;\r\n\t\tint q = 9;\r\n\t\tint cnt = 0;\r\n\r\n\t\t//iterating until cnt is less than x.\r\n\t\twhile(cnt < x){\r\n\r\n\t\t\t//calculating sum of digits for given level.\r\n\t\t\ttot += p * q;\r\n\t\t\tp++;\r\n\t\t\tq *= 10; \r\n\t\t\tcnt++;\r\n\t\t}\r\n\t\treturn tot;\r\n\t}\r\n\r\n\t//Function to find the Nth digit.\r\n\tint NthDigit(int n) {\r\n\r\n\t\t//incrementing n by 1.\r\n\t\tn++;\r\n\r\n\t\t//returning the digit if n is less than or equal to 10.\r\n\t\tif(n <= 10)\r\n\t\t\treturn n - 1;\r\n\r\n\t\tint low = 1, high = 9;\r\n\t\tint mid;\r\n\t\tint k = 0;\r\n\r\n\t\t//binary search to find the range/level of Nth digit.\r\n\t\twhile(low <= high){\r\n\t\t\tmid = (low + high)/2;\r\n\r\n\t\t\t//finding the sum of digits for each level.\r\n\t\t\tlong long int x = find(mid);\r\n\r\n\t\t\t//if sum is less than or equal to n, update k and move to right.\r\n\t\t\tif(x <= n){\r\n\t\t\t\tk = mid;\r\n\t\t\t\tlow = mid + 1;\r\n\t\t\t}\r\n\t\t\t//if sum is greater than n, move to left.\r\n\t\t\telse high = mid - 1;\r\n\t\t}\r\n\r\n\t\t//calculating the remaining digit position.\r\n\t\tint x = n - find(k);\r\n\r\n\t\t//if remaining digit is 0, return 9.\r\n\t\tif(x == 0)\r\n\t\t\treturn 9;\r\n\r\n\t\tint lower = 0;\r\n\r\n\t\t//calculating lower limit for the range.\r\n\t\tfor(int i = 1; i <= k; i++)\r\n\t\t\tlower = lower * 10 + 9;\r\n\r\n\t\tlower++;\r\n\t\tk++;\r\n\t\tint p = x / k ;\r\n\t\tint rem = x % k;\r\n\r\n\t\t//calculating the current number.\r\n\t\tint cur = (lower + p);\r\n\r\n\t\t//calculating the digit at the required position.\r\n\t\tstring s = (rem == 0) ? int_to_string(cur - 1) : int_to_string(cur);\r\n\r\n\t\t//returning the digit at the required position.\r\n\t\treturn (rem == 0) ? s[k - 1] - '0' : s[rem - 1] - '0';\r\n\t}\r\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}