{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703855,
            "title": "nth digit of Fibonacci ",
            "titleSlug": "nth-digit-of-fibonacci1449",
            "content": "<p><span style=\"font-size:18px\">A Fibonacci series (starting from 1) written in order without any spaces in between, thus producing a sequence of digits. Find the nth digit in the sequence.</span><br />\r\n<br />\r\n<span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input</strong>: n = 3\r\n<strong>Output:</strong>&nbsp;2&nbsp;\r\n<strong>Explanation</strong>: 3rd digit of fibonacci \r\nseries is 2(1123.....).\r\n</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input: </strong>n = 7\r\n<strong>Output:&nbsp;</strong>1\r\n<strong>Explanation</strong>: 7th digit of fibonacci\r\nseries is 1(11235811.....).\r\n</span></pre>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Your Task:&nbsp;&nbsp;</strong><br />\r\nYou dont need to read input or print anything. Complete the function <strong>nthFibonacciDigit()&nbsp;</strong>which takes n&nbsp;as input parameter and returns nth digit of fabonacci series.<strong>&nbsp;</strong><br />\r\n<br />\r\n<strong>Expected Time Complexity:</strong> O(n</span><span style=\"font-size:15px\"><span style=\"font-size:18px\"><strong>*</strong>m</span></span><span style=\"font-size:18px\">)</span><br />\r\n<span style=\"font-size:18px\"><strong>Expected Auxiliary Space:</strong> O(n)</span><br />\r\n<br />\r\n<span style=\"font-size:18px\"><strong>Constraints:</strong></span><br />\r\n<span style=\"font-size:18px\">1&lt;= n&nbsp;&lt;=100</span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "The Fibonacci sequence starts with 1 and continues by adding the two previous numbers. If we write out the Fibonacci sequence without any spaces (11235813...), find the digit at the nth position in this combined sequence.",
                "constraints": [
                    "1 <= n <= 100"
                ],
                "testcases": [
                    {
                        "input": "3",
                        "output": "2",
                        "explanation": "The 3rd digit in the concatenated Fibonacci sequence (1123...) is 2."
                    },
                    {
                        "input": "7",
                        "output": "1",
                        "explanation": "The 7th digit in the concatenated Fibonacci sequence (1123581...) is 1."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Store the series in a string and then find nth from the string.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "series",
                "slug": "series"
            },
            {
                "name": "Fibonacci",
                "slug": "fibonacci"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\r\nclass Solution {\r\n  public:\r\n    char nthFibonacciDigit(long long int n) {\r\n        string result = \"1\";\r\n        //prestoring\r\n        long long int dp[n+5];\r\n        //initializing dp[0] as 0\r\n        dp[0]=0;\r\n        //initializing dp[1] as 1\r\n        dp[1]=1;\r\n        for(int i=2;i<=n;i++){\r\n            //as same as fibonacci formula f(i)=f(i-1)+f(i-2)\r\n            dp[i]=dp[i-1] + dp[i-2];\r\n            result+=to_string(dp[i]);\r\n        }\r\n        //returning nth value\r\n        return result[n-1];\r\n    }\r\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}