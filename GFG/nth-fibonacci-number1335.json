{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703841,
            "title": "Nth Fibonacci Number",
            "titleSlug": "nth-fibonacci-number1335",
            "content": "<p><span >Given a non-negative integer <strong>n</strong>, your task is to find the <strong>nth</strong> <strong>Fibonacci</strong> <strong>number</strong>.</span></p>\n<p><span ><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; color: #273239; font-family: Nunito, sans-serif; letter-spacing: 0.162px; background-color: #ffffff;\">The&nbsp;</span><a style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; outline: none; display: inline; word-break: break-word; font-family: Nunito, sans-serif; letter-spacing: 0.162px; background-color: #ffffff;\" href=\"https://www.geeksforgeeks.org/fibonacci-series/\" target=\"_blank\" rel=\"noopener\"><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline;\">Fibonacci sequence</span></a><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; vertical-align: baseline; color: #273239; font-family: Nunito, sans-serif; letter-spacing: 0.162px; background-color: #ffffff;\">&nbsp;is a sequence where the next term is the sum of the previous two terms. The first two terms of the Fibonacci sequence are 0 followed by 1. The Fibonacci sequence: 0, 1, 1, 2, 3, 5, 8, 13, 21</span></span></p>\n<p><span >The Fibonacci sequence is defined as follows:</span></p>\n<ul>\n<li><span >F(0) = 0</span></li>\n<li><span >F(1) = 1</span></li>\n<li><span >F(n) = F(n - 1) + F(n - 2) for n &gt; 1</span></li>\n</ul>\n<p><span ><strong>Examples :</strong></span></p>\n<pre><span ><strong>Input: </strong>n = 5\n<strong>Output: </strong>5\n<strong>Explanation</strong>: The 5th Fibonacci number is 5.</span></pre>\n<pre><span ><strong>Input</strong>: n = 0\n<strong>Output:</strong> 0&nbsp;\n<strong>Explanation</strong>: The 0th Fibonacci number is 0.\n</span></pre>\n<pre><span ><strong>Input: </strong>n = 1\n<strong>Output: </strong>1\n<strong>Explanation</strong>: The 1st Fibonacci number is 1.</span></pre>\n<p><span ><strong>Constraints:</strong><br />0 &le; n &le; 30</span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a non-negative integer `n`, determine the `nth` Fibonacci number. The Fibonacci sequence starts with 0 and 1, and each subsequent number is the sum of the previous two. Therefore, F(0) = 0, F(1) = 1, and F(n) = F(n-1) + F(n-2) for n > 1.",
                "constraints": [
                    "0 <= n <= 30"
                ],
                "testcases": [
                    {
                        "input": "5",
                        "output": "5",
                        "explanation": "The 5th Fibonacci number in the sequence (0, 1, 1, 2, 3, 5, ...) is 5."
                    },
                    {
                        "input": "0",
                        "output": "0",
                        "explanation": "The 0th Fibonacci number is defined as 0."
                    },
                    {
                        "input": "1",
                        "output": "1",
                        "explanation": "The 1st Fibonacci number is defined as 1."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span >Start with <strong><code>f(0) = 0</code>, <code>f(1) = 1</code></strong>. Use a loop or recursion to calculate <strong><code>f(n) = f(n-1) + f(n-2)</code></strong>.</span></p>",
            "<p><span >Use dynamic programming or memoization to avoid redundant calculations.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Fibonacci",
                "slug": "fibonacci"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "amazon",
            "microsoft",
            "oyo-rooms",
            "snapdeal",
            "makemytrip",
            "goldman-sachs",
            "maq-software",
            "adobe"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    int nthFibonacci(int n) {\n        if (n == 0)\n            return 0; // F(0)\n        if (n == 1)\n            return 1; // F(1)\n\n        int a = 0; // F(0)\n        int b = 1; // F(1)\n        int c;     // To store F(n)\n\n        for (int i = 2; i <= n; i++) {\n            c = a + b; // Compute F(i)\n            a = b;     // Update a to F(i-1)\n            b = c;     // Update b to F(i)\n        }\n        return b; // Return F(n)\n    }\n};\n",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution {\n    public int nthFibonacci(int n) {\n        if (n == 0) return 0; // F(0)\n        if (n == 1) return 1; // F(1)\n\n        int a = 0; // F(0)\n        int b = 1; // F(1)\n        int c;     // To store F(n)\n\n        for (int i = 2; i <= n; i++) {\n            c = a + b; // Compute F(i)\n            a = b;     // Update a to F(i-1)\n            b = c;     // Update b to F(i)\n        }\n        return b; // Return F(n)\n    }\n}\n",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "class Solution:\n\n    def nthFibonacci(self, n: int) -> int:\n        if n == 0:\n            return 0  # F(0)\n        if n == 1:\n            return 1  # F(1)\n\n        a, b = 0, 1  # F(0) and F(1)\n        for _ in range(2, n + 1):\n            c = a + b  # Compute F(i)\n            a = b  # Update a to F(i-1)\n            b = c  # Update b to F(i)\n\n        return b  # Return F(n)\n",
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "// User function Template for C#\n\nclass Solution {\n    // Function to find the nth Fibonacci number.\n    public int nthFibonacci(int n) {\n        if (n == 0) return 0; // Base case F(0)\n        if (n == 1) return 1; // Base case F(1)\n\n        int a = 0; // F(0)\n        int b = 1; // F(1)\n        int c;     // To store F(n)\n\n        for (int i = 2; i <= n; i++) {\n            c = a + b; // Compute F(i)\n            a = b;     // Update a to F(i-1)\n            b = c;     // Update b to F(i)\n        }\n        return b; // Return F(n)\n    }\n}\n",
                "lang_text": "csharp"
            },
            {
                "lang": "Javascript",
                "full_func": "// User function Template for javascript\n\n/**\n * @param {number} n\n * @returns {number}\n */\n\nclass Solution {\n    nthFibonacci(n) {\n        if (n === 0) return 0; // Base case F(0)\n        if (n === 1) return 1; // Base case F(1)\n\n        let a = 0; // F(0)\n        let b = 1; // F(1)\n        let c;     // To store F(n)\n\n        for (let i = 2; i <= n; i++) {\n            c = a + b; // Compute F(i)\n            a = b;     // Update a to F(i-1)\n            b = c;     // Update b to F(i)\n        }\n        return b; // Return F(n)\n    }\n}\n",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}