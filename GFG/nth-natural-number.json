{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704822,
            "title": "Nth Natural Number",
            "titleSlug": "nth-natural-number",
            "content": "<p><span style=\"font-size: 18px;\">Given a positive integer n. You have to find <strong>n<sup>th</sup></strong> natural number after removing all the numbers containing the digit <strong>9</strong>.</span></p>\n<p><strong><span style=\"font-size: 18px;\">Examples :</span></strong></p>\n<pre><strong><span style=\"font-size: 18px;\">Input: </span></strong><span style=\"font-size: 18px;\">n = 8\n<strong>Output: </strong>8\n<strong>Explanation: </strong>After removing natural numbers which contains digit 9, first 8 numbers are 1,2,3,4,5,6,7,8 and 8<sup>th</sup> number is 8.</span></pre>\n<pre><strong><span style=\"font-size: 18px;\">Input:</span> </strong><span style=\"font-size: 18px;\">n = 9\n<strong>Output: </strong>10\n<strong>Explanation: </strong>After removing natural numbers which contains digit 9, first 9 numbers are 1,2,3,4,5,6,7,8,10 and 9<sup>th</sup> number is 10.\n</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &le; n &le; 10<sup>9</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Find the nth natural number after removing all numbers that contain the digit 9.",
                "constraints": [
                    "1 <= n <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "8",
                        "output": "8",
                        "explanation": "The first 8 natural numbers without the digit 9 are 1, 2, 3, 4, 5, 6, 7, and 8. Therefore, the 8th number is 8."
                    },
                    {
                        "input": "9",
                        "output": "10",
                        "explanation": "The first 9 natural numbers without the digit 9 are 1, 2, 3, 4, 5, 6, 7, 8, and 10. Therefore, the 9th number is 10."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Observe&nbsp;carefully,&nbsp;base of the given sequence after changes.</span></p>",
            "<ul>\n\t<li><span style=\"font-size:18px\">It is known that, digits of base&nbsp;<strong>2&nbsp;</strong>numbers varies from&nbsp;<strong>0&nbsp;</strong>to&nbsp;<strong>1</strong>. Similarly, digits of base&nbsp;<strong>10&nbsp;</strong>numbers varies from&nbsp;<strong>0&nbsp;</strong>to&nbsp;<strong>9</strong>.</span></li>\n\t<li><span style=\"font-size:18px\">Therefore, the digits of base&nbsp;<strong>9&nbsp;</strong>numbers will vary from&nbsp;<strong>0&nbsp;</strong>to&nbsp;<strong>8</strong>.</span></li>\n\t<li><span style=\"font-size:18px\">It can be observed that&nbsp;<strong>N<sup>th</sup></strong>&nbsp;number in base&nbsp;<strong>9&nbsp;</strong>is equal to<strong>&nbsp;N<sup>th</sup></strong>&nbsp;number after skipping numbers containing digit&nbsp;<strong>9</strong>.</span></li>\n\t<li><span style=\"font-size:18px\">So the task is reduced to find the base&nbsp;<strong>9</strong>&nbsp;equivalent of the number&nbsp;<strong>N.</strong></span></li>\n</ul>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "google"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nclass Solution {\n  public:\n    // function to change n\n    // from base10 to base9\n    long long findNth(long long n) {\n        long long base10num = n;\n        long long base9num = 0;\n        long long pos = 1;\n        while (base10num > 0) {\n            // taking remainder with 9\n            base9num += pos * (base10num % 9);\n            // dividing number with 9\n            base10num /= 9;\n            // multiplying position with 10\n            pos *= 10;\n        }\n\n        return base9num;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\nclass Solution {\n    // function to change n\n    // from base10 to base9\n    long findNth(long n) {\n        long result = 0;\n        long p = 1;\n        while (n > 0) {\n            result += (p * (n % 9));\n            n = n / 9;\n            p = p * 10;\n        }\n        return result;\n    }\n}\n",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\n\n# function to change N\n# from base10 to base9\nclass Solution:\n\n    def findNth(self, n):\n        result = 0\n        p = 1\n        while (n > 0):\n            result += (p * (n % 9))\n            n = n // 9\n            p = p * 10\n\n        return result\n",
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "// User function Template for C#\n\nclass Solution {\n    // Complete this function\n    // Function to find the nth natural number.\n    public long findNth(long n) {\n        long base10num = n;\n        long base9num = 0;\n        long pos = 1;\n        while (base10num > 0) {\n            // taking remainder with 9\n            base9num += pos * (base10num % 9);\n            // dividing number with 9\n            base10num /= 9;\n            // multiplying position with 10\n            pos *= 10;\n        }\n\n        return base9num;\n    }\n}",
                "lang_text": "csharp"
            },
            {
                "lang": "Javascript",
                "full_func": "class Solution {\n    // function to change n\n    // from base10 to base9\n    findNth(n) {\n        let s = \"\";\n        var result = 0\n        var p = 1\n        // taking remainders by 9\n        // till n become 0\n        while (n > 0) {\n            result += (p * (n % 9));\n            n = Math.floor(n / 9);\n            p = p * 10;\n        }\n        return result;\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}