{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704777,
            "title": "Nth Smart Number",
            "titleSlug": "nth-smart-number5909",
            "content": "<p><span style=\"font-size:18px\">Smart number is a number which has at least three distinct prime factors.&nbsp;Given a number <strong>n</strong>, find the n&rsquo;th smart number.</span></p>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1: </strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\n<span style=\"font-size:18px\"><strong>n = </strong>1</span>\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\n<span style=\"font-size:18px\">30</span>\n<span style=\"font-size:18px\"><strong>Explanation:</strong></span>\n<span style=\"font-size:18px\">30 is the first number which has 3 prime\nfactors. So, it&#39;s the first Smart Number.</span></pre>\n\n<p><span style=\"font-size:18px\"><strong>Example 2: </strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\n<span style=\"font-size:18px\"><strong>n = </strong>2</span>\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\n<span style=\"font-size:18px\">42</span>\n<span style=\"font-size:18px\"><strong>Explanation:</strong></span>\n<span style=\"font-size:18px\">42 = 2*3*7, 42 is the second number which\nhas 3 prime factors or more. So, it&#39;s the\nsecond Smart Number.</span></pre>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>nthSmartNum()</strong> which takes an Integer n as input and returns the n&#39;th Smart Number.</span></p>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(nloglogn</span><span style=\"font-size:18px\">)<br />\n<strong>Expected Auxiliary Space:</strong> O(n)</span></p>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong></span><br />\n<span style=\"font-size:18px\">1 &lt;= n &lt;= 10<sup>5</sup></span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "A smart number is defined as a number having at least three distinct prime factors. Given an integer `n`, find the `n`th smart number.",
                "constraints": [
                    "1 <= n <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "1",
                        "output": "30",
                        "explanation": "The first smart number is 30, as it's the smallest number with at least three distinct prime factors (2, 3, and 5)."
                    },
                    {
                        "input": "2",
                        "output": "42",
                        "explanation": "The second smart number is 42, as it is the next smallest number after 30 with at least three distinct prime factors (2, 3, and 7)."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Use Sieve of Eratosthenes and mark all the numbers with how many prime divisors they have.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function template in C++\n\nclass Solution {\n  public:\n    //Function to find nth smart number.\n    int nthSmartNum(int n) {\n        \n        //creating an array of primes and initializing with 0.\n        int primes[100001]={0};\n        //creating a vector to store the result.\n        vector<int> result;\n        \n        //looping from 2 to 100000.\n        for (int i=2; i<=100000; i++)\n        {\n            //checking if the current number is prime\n            if (primes[i] == 0)\n            {\n                //marking the current number as prime.\n                primes[i] = 1;\n                //looping through multiples of current number and updating the primes array\n                //by subtracting 1 from each multiple.\n                for (int j=i*2; j<=100000; j+=i)\n                {\n                    primes[j] -= 1;\n                    //if the sum of current value and 3 is 0, it is a smart number\n                    //so we add it to the result vector.\n                    if ( (primes[j] + 3) == 0)\n                        result.push_back(j);\n                }\n            }\n        }\n        //sorting the result vector in ascending order.\n        sort(result.begin(), result.end());\n        \n        //returning the nth smart number.\n        return result[n-1];\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}