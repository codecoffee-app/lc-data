{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704962,
            "title": "Number of 1's in smallest repunits",
            "titleSlug": "number-of-1s-in-smallest-repunits3114",
            "content": "<p><span style=\"font-size:18px\">Every number whose unit&rsquo;s digit is 3 has a repunit as its multiple. A repunit is a number which has only ones. It is of the form (10<sup>n</sup> &ndash; 1)/9. Example: 3 divides 111, 13 divides 111111.<br />\nA positive integer <strong>N</strong> will be given whose unit&rsquo;s digit is 3. The task is to find the number of 1s in the smallest repunit which is divisible by the given number N.</span></p>\n\n<p><strong><span style=\"font-size:18px\">Example 1:</span></strong></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong> N = 3\n<strong>Output:</strong> 3\n<strong>Explaination:</strong> The number 111 is the first \nrepunit which is divisible by 3.</span></pre>\n\n<p><strong><span style=\"font-size:18px\">Example 2:</span></strong></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong> N = 13\n<strong>Output:</strong> 6\n<strong>Explaination:</strong> The first repunit is 111111 \nwhich divisible by 13.</span></pre>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nYou do not need to read input or print anything. Your task is to complete the function <strong>repUnit()</strong> which takes N as input parameter and returns the number of 1 in the smallest repunit which is divisible by N.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(N)<br />\n<strong>Expected Auxiliary Space:</strong> O(1)</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\n1 &le; N &le; 10<sup>6</sup>&nbsp;&nbsp;</span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "A repunit is a number consisting only of the digit '1'. For a given positive integer N (where the unit digit of N is 3), find the smallest repunit that is divisible by N. Return the number of '1's in this repunit.",
                "constraints": [
                    "1 <= N <= 10^6"
                ],
                "testcases": [
                    {
                        "input": "3",
                        "output": "3",
                        "explanation": "The number 111 is the smallest repunit divisible by 3."
                    },
                    {
                        "input": "13",
                        "output": "6",
                        "explanation": "The number 111111 is the smallest repunit divisible by 13."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Assume we are at a repunit say 1111, the next repunit will be 1111*10 + 1. </span></p>\n\n<p><span style=\"font-size:18px\">Let us say x = 1111%n ,then (1111*10 + 1)%n will be (x*10 + 1)%n</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "amazon",
            "adobe"
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "// Back-end complete function Template for C++\n\nclass Solution{\npublic:\n    // Function to find the repetitive unit of a number N\n    int repUnit(int N){\n        int count = 1, rem = 1;\n        // Loop to calculate the repetitive unit\n        while(rem != 0){\n            rem = (rem*10 + 1) % N;\n            count++;\n        }\n        return count;\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}