{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704465,
            "title": "Number of Days",
            "titleSlug": "number-of-days4543",
            "content": "<p><span style=\"font-size:18px\">Find the number of days required to reach the top of the staircase of <strong>Q </strong>stairs if one moves <strong>R </strong>stairs upwards during daytime and <strong>S </strong>stairs downwards during night.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\r\n<span style=\"font-size:18px\"><strong>R = </strong>5, <strong>S = </strong>1, <strong>Q = </strong>6</span>\r\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\r\n<span style=\"font-size:18px\">2</span>\r\n<span style=\"font-size:18px\"><strong>Explanation:</strong></span>\r\n<span style=\"font-size:18px\">After end of whole first day he will\r\nend up at Stair number 4. Then the next\r\nday, he will reach the top by climbing 2\r\nmore stairs.</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\r\n<span style=\"font-size:18px\"><strong>R = </strong>2, <strong>S = </strong>1, <strong>Q = 3</strong></span>\r\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\r\n<span style=\"font-size:18px\">2</span>\r\n<span style=\"font-size:18px\"><strong>Explanation:</strong></span>\r\n<span style=\"font-size:18px\">After end of whole first day he will\r\nend up at Stair number 1. Then the next\r\nday, he will reach the top by climbing 2\r\nmore stairs.</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>noOfDays()</strong> which takes 3 Integers R,S and Q as input and returns the answer.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(1)<br />\r\n<strong>Expected Auxiliary Space:</strong> O(1)</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong></span><br />\r\n<span style=\"font-size:18px\">1 &lt;= S &lt; R &lt;= Q &lt;= 10<sup>9</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "A person is climbing a staircase with Q stairs. During the daytime, they climb R stairs upwards, and during the night, they slide down S stairs. Determine the number of days required to reach the top of the staircase.",
                "constraints": [
                    "1 <= S < R <= Q <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "R = 5, S = 1, Q = 6",
                        "output": "2",
                        "explanation": "On the first day, the person climbs 5 stairs and slides down 1 stair, ending up at stair 4. On the second day, they climb the remaining 2 stairs to reach the top."
                    },
                    {
                        "input": "R = 2, S = 1, Q = 3",
                        "output": "2",
                        "explanation": "On the first day, the person climbs 2 stairs and slides down 1 stair, ending up at stair 1. On the second day, they climb the remaining 2 stairs to reach the top."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Calculate the Effective steps a person takes after a complete day. It will be R-S.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nclass Solution {\n  public:\n    //Function to calculate the number of days needed to reach the destination.\n    long long noOfDays(long long R, long long S, long long Q) {\n        \n        long long days;\n        \n        //If R is greater than or equal to Q, the top can be reached in one day.\n        if(R>=Q)\n            days = 1;\n        else\n            //Calculating the number of days needed based on the given formula.\n            days = ceil((double)(Q-R)/(double)(R-S)) + 1;\n            \n        return days;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\nclass Solution:\n    def noOfDays(self, R, S, Q):\n        \n        # If R>=Q, the top can be reached in one day.\n        if(R>=Q):\n            days = 1\n        else:\n            # Calculate the number of days needed to reach the top.\n            # ceil((Q-R)/(R-S)) gives the number of jumps needed,\n            # adding 1 to account for the last jump from R to Q.\n            days = (math.ceil((Q-R)/(R-S)) + 1)\n        \n        return days",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n/**\n * @param {number} R\n * @param {number} S\n * @param {number} Q\n * @returns {number}\n*/\n\nclass Solution {\n    //Function to calculate the number of days.\n    noOfDays(R, S, Q)\n    {\n        let days;\n        \n        // If R>=Q, the top can be reached in one day.\n        if(R>=Q){\n            days = 1;\n        }else{\n            // Calculate the number of days needed to reach the top.\n            // ceil((Q-R)/(R-S)) gives the number of jumps needed,\n            // adding 1 to account for the last jump from R to Q.\n            days = Math.ceil((Q-R)/(R-S)) + 1;\n        }\n        \n        return days;\n    }\n}",
                "lang_text": "javascript"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    //Function to find the number of days needed to produce N products.\n    public long noOfDays(long R, long S, long Q)\n    {\n        long days;\n        \n        //If R is greater than or equal to Q, the top can be reached in one day.\n        if(R>=Q)\n            days = 1;\n        else\n            //Calculating the number of days needed based on the given formula.\n            days = (long)Math.Ceiling((double)(Q-R)/(double)(R-S)) + 1;\n            \n        return days;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}