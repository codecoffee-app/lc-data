{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703889,
            "title": "Number of factors",
            "titleSlug": "number-of-factors1435",
            "content": "<p><span style=\"font-size:18px\">Find the number of factors for a given integer <strong>N</strong>.</span><br />\n&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\nN = 5\n<strong>Output:</strong>\n2\n<strong>Explanation:</strong>\n5 has 2 factors 1 and 5</span></pre>\n\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\nN = 25\n<strong>Output:</strong>\n3\n<strong>Explanation:</strong>\n25 has 3 factors 1, 5, 25</span>\n</pre>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>countFactors()</strong>&nbsp;which takes&nbsp;an integer <strong>N</strong>&nbsp;as input parameters&nbsp;and returns an integer, total number factor of N.</span><br />\n&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(sqrt(N))<br />\n<strong>Expected Space Complexity:</strong> O(1)</span><br />\n&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\n1 &lt;= N &lt;= 100000</span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an integer N, find the number of its factors (divisors).",
                "constraints": [
                    "1 <= N <= 100000"
                ],
                "testcases": [
                    {
                        "input": "5",
                        "output": "2",
                        "explanation": "The factors of 5 are 1 and 5, so it has 2 factors."
                    },
                    {
                        "input": "25",
                        "output": "3",
                        "explanation": "The factors of 25 are 1, 5, and 25, so it has 3 factors."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">You have to check for factors till root(N) to find all its factor.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Misc",
                "slug": "misc"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution{\npublic:\n    int countFactors(int N){\n        int i,fact=0;\n        // loop from 1 to N\n        for(i=1;i*i<=N;i++)\n        {\n            // if N is divisible by i count 1 factor\n            if(N%i==0)\n            {\n                fact++;\n                // check if N/i is same as i or not if not then count that too\n                // once because it will also divide N\n                if(N/i != i)\n                 fact++;\n            }\n        }\n        return fact;\n    }\n};\n",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\nclass Solution{\n    static int countFactors(int N) \n    { \n        int i,fact=0;\n        // loop from 1 to N\n        for(i=1;i*i<=N;i++)\n        {\n            // if N is divisible by i count 1 factor\n            if(N%i==0)\n            {\n                fact++;\n                // check if N/i is same as i or not if not then count that too\n                // once because it will also divide N\n                if(N/i != i)\n                 fact++;\n            }\n        }\n        return fact;\n    } \n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\nclass Solution:\n    def countFactors (self, N):\n        i=1\n        fact=0\n        # loop from 1 to N\n        while(i*i<=N):\n            #  if N is divisible by i count 1 factor\n            if(N%i==0):\n                fact+=1\n                # check if N/i is same as i or not if not then count that too\n                # once because it will also divide N\n                if(N/i != i):\n                    fact+=1\n            i=i+1;\n        return fact;",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n/**\n * @param {number} N\n * @returns {number}\n*/\n\nclass Solution {\n    //Function to count the number of factors of N.\n    countFactors(N) {\n        let i=1;\n        let fact=0;\n        // loop from 1 to N\n        while(i*i<=N) {\n            //  if N is divisible by i count 1 factor\n            if(N%i===0) {\n                fact+=1;\n                // check if N/i is same as i or not, if not then count that too\n                // once because it will also divide N\n                if(N/i !== i) {\n                    fact+=1;\n                }\n            }\n            i++;\n        }\n        return fact;\n    }\n}",
                "lang_text": "javascript"
            },
            {
                "lang": "C#",
                "full_func": "public class Solution\n{\n    public int countFactors(int N)\n    {\n        int i,fact=0;\n\n        for(i=1;i*i<=N;i++)\n        {\n            if(N%i==0)\n            {\n                fact++;\n                if(N/i != i)\n                 fact++;\n            }\n        }\n        return fact;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}