{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704460,
            "title": "Number of Groups",
            "titleSlug": "number-of-groups3920",
            "content": "<p><span style=\"font-size:18px\">Given an array <strong>Arr[]</strong> of <strong>N</strong> distinct integers. Write a program to find the count of groups of 2 or 3 integers that can be formed by choosing integers from the given array such that sum of integers in each of the group is divisible by three.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\r\n<span style=\"font-size:18px\"><strong>N = </strong>4</span>\r\n<span style=\"font-size:18px\"><strong>Arr[] = </strong>{1, 2, 3, 5}</span>\r\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\r\n<span style=\"font-size:18px\">4</span>\r\n<span style=\"font-size:18px\"><strong>Explanation:</strong></span>\r\n<span style=\"font-size:18px\">There are only 4 possible groups: (1,2,3);\r\n(1,2) ; (1,5) ; (1,3,5)</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\r\n<span style=\"font-size:18px\"><strong>N = </strong>3</span>\r\n<span style=\"font-size:18px\"><strong>Arr[] = </strong>{1, 1, 1}</span>\r\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\r\n<span style=\"font-size:18px\">1</span>\r\n<span style=\"font-size:18px\"><strong>Explanation:</strong></span>\r\n<span style=\"font-size:18px\">There is only 1 possible group: (1,1,1).</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>noOfGroups()</strong> which takes an Integer N and an array Arr as input and returns the answer.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(N)<br />\r\n<strong>Expected Auxiliary Space:</strong> O(N)</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong></span><br />\r\n<span style=\"font-size:18px\">1 &lt;= N &lt;= 10<sup>5</sup><br />\r\n1 &lt;= Arr[i] &lt;= 10<sup>5</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array Arr[] of N distinct integers, find the count of groups of 2 or 3 integers that can be formed by choosing integers from the given array such that the sum of integers in each group is divisible by three.",
                "constraints": [
                    "1 <= N <= 10^5",
                    "1 <= Arr[i] <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "N = 4\nArr[] = {1, 2, 3, 5}",
                        "output": "4",
                        "explanation": "The possible groups with a sum divisible by 3 are: (1, 2) [sum=3], (1, 5) [sum=6], (1, 2, 3) [sum=6], and (3, 5, 1) [sum=9]."
                    },
                    {
                        "input": "N = 3\nArr[] = {1, 1, 1}",
                        "output": "1",
                        "explanation": "The only possible group with a sum divisible by 3 is: (1, 1, 1) [sum = 3]."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Now, for groups of two being divisible by 3, either both number have to belong to be divisible by 3, or one number should leave a remainder 1, and the other a remainder 2. This way the remainders add up to 3, making the sum divisible by 3. </span> <span style=\"font-size:18px\">To form a group of three, either all three numbers should give the same remainder, or one should give remainder 0, another should give 1, and the last should give 2. </span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "amazon"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "\r\n\r\nclass Solution {\r\n  public:\r\n    // Function to calculate the number of groups.\r\n    long long noOfGroups(int N , int Arr[]) {\r\n        \r\n        // Create an array to store the frequency of remainders.\r\n        long long C[3] = {0, 0, 0};\r\n        \r\n        // Store the frequency of the remainders when the numbers are divided by 3.\r\n        for (int i = 0; i < N; ++i)\r\n            ++C[Arr[i] % 3];\r\n            \r\n         // Calculate the number of groups using the frequencies.\r\n         return (C[1] * C[2] + C[0] * (C[0] - 1) / 2 +\r\n                    C[0] * (C[0] - 1) * (C[0] - 2) / 6 +\r\n                        C[1] * (C[1] - 1) * (C[1] - 2) / 6 +\r\n                            C[2] * (C[2] - 1) * (C[2] - 2) / 6 +\r\n                                C[0] * C[1] * C[2]);\r\n    }\r\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            },
            {
                "lang": "C#",
                "full_func": "// User function Template for Csharp\n\nclass Solution{\n    // Function to count the number of groups\n    public long noOfGroups(int N, int[] Arr){\n        // Create an array to store the frequency of remainders.\n        long[] C = new long[3] {0, 0, 0};\n\n        // Store the frequency of the remainders when the numbers are divided by 3.\n        for (int i = 0; i < N; i++)\n            C[Arr[i] % 3]++;\n\n        // Calculate the number of groups using the frequencies.\n        return (C[1] * C[2] + C[0] * (C[0] - 1) / 2 +\n                C[0] * (C[0] - 1) * (C[0] - 2) / 6 +\n                C[1] * (C[1] - 1) * (C[1] - 2) / 6 +\n                C[2] * (C[2] - 1) * (C[2] - 2) / 6 +\n                C[0] * C[1] * C[2]);\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}