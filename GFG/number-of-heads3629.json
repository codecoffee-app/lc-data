{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704425,
            "title": "Number of Heads",
            "titleSlug": "number-of-heads3629",
            "content": "<p><span style=\"font-size:18px\">There are N&nbsp;coins&nbsp;numbered from 1&nbsp;to N, all turned tails.N&nbsp;persons flip&nbsp;these coins. When the ith&nbsp;person enters, he&nbsp;flips&nbsp;all coins&nbsp;whose number is divisible by i.Calculate&nbsp;the number of coins that will remain heads&nbsp;after N&nbsp;persons enter and perform fliping&nbsp;operation.</span></p>\n\n<p><strong><span style=\"font-size:18px\">Example 1:</span></strong></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\nN=3\n<strong>Output:</strong>\n1\n<strong>Explanation:</strong>\ninitially the configuration is TTT\nPerson 1 flips all coins divisible\nby 1.Now,Configuration is HHH.\nPerson 2 flips all coins divisible by\n2.Now,Configuration is HTH.\nPerson 3 flips all coins divisible by \n3.Now,finally configuration is HTT.\nThus,Number of heads is 1.</span></pre>\n\n<p><strong><span style=\"font-size:18px\">Example 2:</span></strong></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\nN=5\n<strong>Output:</strong>\n2\n<strong>Explanation:</strong>\nInitial configuration=TTTTT\nThe configuration changes as follows:\nTTTTT-&gt;HHHHH-&gt;HTHTH-&gt;HTTTH-&gt;\nHTTHH-&gt;HTTHT.\nSo, finally number of heads is 2.</span></pre>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nYou don&#39;t need to read input or print anything.Your task is to complete the function <strong>numberOfHeads()</strong> which takes the number N as input parameter and returns the number of coins that show heads after N persons have performed the flipping peration.</span></p>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong>O(LogN)<br />\n<strong>Expected Auxillary Space:</strong>O(1)</span></p>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Constraints:</strong><br />\n1&lt;=N&lt;=10<sup>18</sup></span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "There are N coins numbered from 1 to N, all initially tails. N persons flip these coins. The i-th person flips all coins whose number is divisible by i. Calculate the number of coins that will be heads after all N persons have performed their flipping operation.",
                "constraints": [
                    "1 <= N <= 10^18"
                ],
                "testcases": [
                    {
                        "input": "3",
                        "output": "1",
                        "explanation": "Initially all coins are tails (TTT). Person 1 flips coins divisible by 1, resulting in (HHH). Person 2 flips coins divisible by 2, resulting in (HTH). Person 3 flips coins divisible by 3, resulting in (HTT).  Therefore, 1 coin is heads."
                    },
                    {
                        "input": "5",
                        "output": "2",
                        "explanation": "Initially all coins are tails (TTTTT). The configurations change as follows: TTTTT -> HHHHH -> HTHTH -> HTTTH -> HTTHH -> HTTHT.  Therefore, 2 coins are heads."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Observe a pattern from which a relation between N and the answer can be easily found,</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "// Back-end complete function Template for C++\n\nclass Solution {\n  public:\n    // Function to calculate the number of heads remaining.\n    long long numberOfHeads(long long N) {\n        // Because only numbers that are perfect squares remain heads.\n        return sqrtl(N);\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "// Back-end complete function Template for Java\n\nclass Solution {\n    long numberOfHeads(long N) {\n        // using the square root function to find the number of heads\n        // because only numbers that are perfect squares remain heads.\n        return (long)(Math.sqrt(N));\n    }\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\nimport math\nclass Solution:\n    #Function to find the number of heads based on the given number of coins.\n    def numberOfHeads(self,N):\n        #because only numbers that are perfect squares remain heads.\n        return (int)(math.sqrt(N))",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n/**\n * @param {number} N\n * @returns {number}\n*/\n\nclass Solution {\n    //Function to find the number of heads.\n    numberOfHeads(N)\n    {\n        //because only numbers that are perfect squares remain heads.\n        return Math.floor(Math.sqrt(N));\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}