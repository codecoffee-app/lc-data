{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704790,
            "title": "Number of solutions",
            "titleSlug": "number-of-solutions4523",
            "content": "<p><span style=\"font-size:18px\">Given two integers <strong>b </strong>and <strong>p</strong>. Find the number of integral solutions to x<sup>2</sup> = 1 (mod p) in the closed interval [1, b].</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\r\n<span style=\"font-size:18px\"><strong>b = </strong>5, <strong>p = </strong>7</span>\r\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\r\n<span style=\"font-size:18px\">1</span>\r\n<span style=\"font-size:18px\"><strong>Explanation:</strong></span>\r\n<span style=\"font-size:18px\">1<sup>2</sup> = 1%7 = 1. 1 is the only possible\r\nsolution in the range [1,5].</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\r\n<span style=\"font-size:18px\"><strong>b = </strong>8, <strong>p = </strong>6</span>\r\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\r\n<span style=\"font-size:18px\">3</span>\r\n<span style=\"font-size:18px\"><strong>Explanation:</strong></span>\r\n<span style=\"font-size:18px\">There are 3 possible solutions.\r\n1<sup>2</sup> = 1%6 = 1\r\n5<sup>2</sup> = 25%6 = 1\r\n7<sup>2</sup> = 49%6 = 1</span>\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>noOfSol()</strong> which takes 2 Integers b, and p as input and returns count of numbers in the range [1,b] that give a reamainder of 1 when the squared number is divided with p.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(p)<br />\r\n<strong>Expected Auxiliary Space:</strong> O(1)</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong></span><br />\r\n<span style=\"font-size:18px\">1 &lt;= b &lt;= 10<sup>9</sup><br />\r\n1 &lt;= p &lt;= 10<sup>5</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two integers `b` and `p`, find the number of integers `x` in the range [1, b] such that x<sup>2</sup> is congruent to 1 modulo p (x<sup>2</sup> \u2261 1 (mod p)). In simpler terms, count the integers `x` between 1 and `b` inclusive, for which x<sup>2</sup> leaves a remainder of 1 when divided by `p`.",
                "constraints": [
                    "1 <= b <= 10<sup>9</sup>",
                    "1 <= p <= 10<sup>5</sup>"
                ],
                "testcases": [
                    {
                        "input": "b = 5, p = 7",
                        "output": "1",
                        "explanation": "Only 1 satisfies the condition. 1<sup>2</sup> = 1 % 7 = 1."
                    },
                    {
                        "input": "b = 8, p = 6",
                        "output": "3",
                        "explanation": "The integers 1, 5, and 7 satisfy the condition:\n 1<sup>2</sup> = 1 % 6 = 1\n 5<sup>2</sup> = 25 % 6 = 1\n 7<sup>2</sup> = 49 % 6 = 1"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Whenever we find a solution say m, then we know that every number of the form p*k + m will be a solution to (k can be any integer, until the value of the equation is less than or equal to b, i.e. b &lt;= p*k+m ).</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function template in C++\n\nclass Solution {\n  public:\n    //Function to count the number of solutions.\n    long long noOfSol(long long b, long long p) {\n        \n        //Initializing variables.\n        long long a = 1;\n        long long ans=0;\n        \n        //Iterating from 1 to p-1.\n        for(long long i=1; i<p; i++)\n        {\n            //Checking if (i*i)%p equals 1.\n            if((i*i)%p==1)\n            {\n                //Calculating the first and last values.\n                long long first=a/p*p+i;\n                if(first<a)\n                    first+=p;\n                long long last=b/p*p+i;\n                if(last>b)\n                    last-=p;\n                \n                //If first is greater than last, continue to the next iteration.\n                if(first>last)\n                    continue;\n                \n                //Updating ans by adding the number of solutions in the range.\n                ans+=(last-first)/p+1;\n            }\n        }\n        \n        //Returning the total number of solutions.\n        return ans;\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}