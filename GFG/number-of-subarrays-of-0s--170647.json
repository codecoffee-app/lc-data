{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 714132,
            "title": "Number of Subarrays of 0's",
            "titleSlug": "number-of-subarrays-of-0s--170647",
            "content": "<p><span style=\"font-size:18px\">You are given an array <strong>arr</strong>&nbsp; of length<strong> N</strong> of 0&#39;s and 1&#39;s. Find the total number of subarrays of 0&#39;s</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:\r\n</strong>N = 4</span>\r\n<span style=\"font-size:18px\">arr[] = {0, 0, 1, 0}</span>\r\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\r\n<span style=\"font-size:18px\">4</span>\r\n<span style=\"font-size:18px\"><strong>Explanation:</strong></span>\r\n<span style=\"font-size:18px\">Following are the subarrays of</span>\r\n<span style=\"font-size:18px\">length 1: {0}, {0}, {0} - 3</span>\r\n<span style=\"font-size:18px\">length 2: {0, 0} - 1</span>\r\n<span style=\"font-size:18px\">Total Subarrays: 3 + 1 = 4</span></pre>\r\n\r\n<p><strong><span style=\"font-size:18px\">Example 2:</span></strong></p>\r\n\r\n<pre>\r\n<strong><span style=\"font-size:18px\">Input:\r\n</span></strong><span style=\"font-size:18px\">N = 4</span>\r\n<span style=\"font-size:18px\">arr[] = {0, 0, 0, 0}</span>\r\n<strong><span style=\"font-size:18px\">Output:</span></strong>\r\n<span style=\"font-size:18px\">10</span>\r\n<strong><span style=\"font-size:18px\">Explanation:</span></strong>\r\n<span style=\"font-size:18px\">Following are the subarrays of</span>\r\n<span style=\"font-size:18px\">length 1: {0}, {0}, {0}, {0} - 4</span>\r\n<span style=\"font-size:18px\">length 2: {0, 0}, {0, 0}, {0, 0} - 3</span>\r\n<span style=\"font-size:18px\">length 3: {0, 0, 0}, {0, 0, 0} - 2</span>\r\n<span style=\"font-size:18px\">length 4: {0, 0, 0, 0} - 1</span>\r\n<span style=\"font-size:18px\">Total Subarrays: 4 + 3 + 2 + 1 = 10</span>\r\n</pre>\r\n\r\n<p><strong><span style=\"font-size:18px\">Your Task:</span></strong></p>\r\n\r\n<p><span style=\"font-size:18px\">Your task is to complete the function <strong>no_of_subarrays(),</strong> which takes an integer <strong>N </strong>and an integer array <strong>arr </strong>as the input parameters&nbsp;and returns an integer denoting the total number of subarrays of 0&#39;s.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong>&nbsp;O(N)<br />\r\n<strong>Expected Auxiliary Space:</strong>&nbsp;O(1)</span></p>\r\n\r\n<p><strong><span style=\"font-size:18px\">Constraints:</span></strong></p>\r\n\r\n<ul>\r\n\t<li><span style=\"font-size:18px\">1 &lt;= N &lt;= 10<sup>6</sup></span></li>\r\n\t<li><span style=\"font-size:18px\">0 &lt;= arr[i] &lt;= 1</span></li>\r\n</ul>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array `arr` of length `N` containing only 0s and 1s, find the total number of subarrays consisting entirely of 0s.",
                "constraints": [
                    "1 <= N <= 10^6",
                    "0 <= arr[i] <= 1"
                ],
                "testcases": [
                    {
                        "input": "N = 4\narr[] = {0, 0, 1, 0}",
                        "output": "4",
                        "explanation": "The subarrays of 0s are: {0}, {0}, {0}, {0, 0}.  Therefore, the total count is 4."
                    },
                    {
                        "input": "N = 4\narr[] = {0, 0, 0, 0}",
                        "output": "10",
                        "explanation": "The subarrays of 0s are: {0}, {0}, {0}, {0}, {0, 0}, {0, 0}, {0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0, 0}. Therefore, the total count is 10."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:14px\">Suppose there are <strong>n</strong> number of contiguous 0&#39;s, then the total number of subarrays of 0&#39;s&nbsp;is ((n+1) * (n))/2.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "// Back-end complete function Template for C++\n\nlong long int no_of_subarrays(int n, vector<int> &arr) {\n\n    long long int count = 0;\n    long long int answer = 0;\n\n    // iterating over the array\n    for (int i = 0; i < n; i++) {\n        \n        // if the current element is 0, increment the count\n        if(arr[i] == 0) {\n            count++;\n        }\n        // if the current element is not 0, calculate the number of subarrays\n        // that can be formed using the count of 0s and add it to the answer\n        else {\n            answer += (count*(count+1))/2;\n            count= 0;\n        }\n    }\n    // calculate the number of subarrays for the remaining count of 0s\n    answer += (count*(count+1))/2;\n    return answer;\n}",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution{\r\n\tlong no_of_subarrays(int N, int [] arr) {\r\n\t\tlong count = 0, answer = 0;\r\n\t\tfor(int i = 0; i < N; i++) {\r\n\t\t\tif(arr[i] == 0) {\r\n\t\t\t\tcount++;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tanswer += ((count*(count+1))/2);\r\n\t\t\t\tcount = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\tanswer += ((count*(count+1))/2);\r\n\t\treturn answer;\r\n\t}\r\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": "class Solution():\r\n    # Function to count the number of subarrays\r\n    def no_of_subarrays(self, n, arr):\r\n        count = 0\r\n        answer = 0\r\n        for i in range(n):\r\n            # If current element is 0, increment count\r\n            if arr[i] == 0:\r\n                count += 1\r\n            else:\r\n                # Calculate the number of subarrays with consecutive 0s\r\n                answer += int((count*(count+1))/2)\r\n                count = 0\r\n        # Add the number of subarrays at the end\r\n        answer += int((count*(count+1))/2)\r\n        return answer",
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}