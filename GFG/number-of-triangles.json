{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 710262,
            "title": "Number of Triangles",
            "titleSlug": "number-of-triangles",
            "content": "<p><span style=\"font-size:18px\">Given a 2D matrix <strong>g </strong>contains only <strong>1</strong> and<strong> 0</strong>, count the number of triangles in it.<br />\r\nTake 3 index i,j,k (0&lt;=i,j,k&lt;n). {i,j}, {j,k}, {k,i} will form a triangle if&nbsp;i!=j and&nbsp;i!=k and j!=k and g[i][j]=1 and g[j][k]=1 and g[k][i]=1.</span></p>\r\n\r\n<p><strong><span style=\"font-size:18px\">Example 1:</span></strong></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong>\r\nN=4\r\ngraph[][]={{0, 0, 1, 0}, \r\n\\t     {1, 0, 0, 1},\r\n&nbsp;\\t    {0, 1, 0, 0}, \r\n&nbsp;\\t    {0, 0, 1, 0}}\r\n<strong>Output:</strong>\r\n2\r\n<strong>Explanation;\r\n</strong>Triangle 1: {{0,2}, {2,1}, {1,0}}\r\ngraph[][]={{0, 0, <span style=\"color:#FF0000\">1</span>, 0},\r\n\\t     {<span style=\"color:#FF0000\">1</span>, 0, 0, 1},\r\n&nbsp;\\t    {0, <span style=\"color:#FF0000\">1</span>, 0, 0},\r\n&nbsp;\\t    {0, 0, 1, 0}}.  \r\n\r\nTriangle 2: {{1,3}, {3,2}, {2,1}}\r\ngraph[][]={{0, 0, 1, 0},\r\n\\t     {1, 0, 0, <span style=\"color:#FF0000\">1</span>},\r\n&nbsp;\\t    {0, <span style=\"color:#FF0000\">1</span>, 0, 0},\r\n&nbsp;\\t    {0, 0, <span style=\"color:#FF0000\">1</span>, 0}}. \r\n</span>\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>numberOfTriangles()</strong>&nbsp;which takes the 2D matrix&nbsp;g[][], it&#39;s number of nodes&nbsp;N<strong>&nbsp;</strong>as input parameters&nbsp;and returns the number of triangles in it.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong>&nbsp;O(N*N*N)<br />\r\n<strong>Expected Auxiliary Space:</strong>&nbsp;O(1)</span><br />\r\n&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n1&lt;=N&lt;=100<br />\r\n0&lt;=g[i][j]&lt;=1</span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a 2D matrix `g` containing only 1s and 0s, count the number of triangles present in it. A triangle is formed by three distinct indices i, j, and k (0 <= i, j, k < N) such that i != j, i != k, j != k, and g[i][j] = 1, g[j][k] = 1, and g[k][i] = 1.",
                "constraints": [
                    "1 <= N <= 100",
                    "0 <= g[i][j] <= 1"
                ],
                "testcases": [
                    {
                        "input": "N=4\ngraph[][]={{0, 0, 1, 0},\n\t     {1, 0, 0, 1},\n \t    {0, 1, 0, 0},\n \t    {0, 0, 1, 0}}",
                        "output": "2",
                        "explanation": "Triangle 1: {{0,2}, {2,1}, {1,0}}\nTriangle 2: {{1,3}, {3,2}, {2,1}}"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Nested For loops.</span></p>"
        ],
        "relatedTopics": [],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nclass Solution\n{\n    public:\n        //Function to find the number of triangles in the given graph.\n        int numberOfTriangles(vector<vector<int>> &g,int n)\n        {\n            int ans=0;\n            \n            //iterating over all the vertices.\n            for(int i=0;i<n;i++)\n            {\n                for(int j=0;j<n;j++)\n                {\n                    for(int k=0;k<n;k++)\n                    {\n                        //checking if the three vertices are distinct.\n                        if(i!=j && i!=k && j!=k)\n                        {\n                            //checking if there is an edge between the three vertices.\n                            if(g[i][j]==1 && g[j][k]==1 && g[k][i]==1)\n                                ans++;  //incrementing the count of triangles.\n                        }\n                    }\n                }\n            }\n            //returning the count of triangles.\n            return ans/3;\n        }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}