{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703788,
            "title": "Number Series",
            "titleSlug": "number-series3015",
            "content": "<p><span style=\"font-size:18px\">Find the <strong>Nth</strong> term of the following series :<br />\n<strong>N&nbsp;&nbsp; &nbsp;Nth term</strong><br />\n1&nbsp;&nbsp; &nbsp;0<br />\n2&nbsp;&nbsp; &nbsp;1<br />\n3&nbsp;&nbsp; &nbsp;0<br />\n4&nbsp;&nbsp; &nbsp;2<br />\n5&nbsp; &nbsp; 0<br />\n6&nbsp; &nbsp; 1<br />\n7&nbsp; &nbsp; 0<br />\n8&nbsp; &nbsp; 3<br />\n9&nbsp; &nbsp; 0<br />\n10&nbsp;&nbsp; &nbsp;1</span><br />\n<span style=\"font-size:18px\">and so on.......<br />\n<br />\n<strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input</strong>: N = 8\n<strong>Output:</strong>&nbsp;3&nbsp;\n<strong>Explanation</strong>: According to the series\nfor N = 8 Nth term is 3.\n</span>\n</pre>\n\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input: </strong>N = 5\n<strong>Output:&nbsp;</strong>0\n<strong>Explanation</strong>: According to the series\nfor N = 5 Nth term is 0.</span></pre>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Your Task:&nbsp;&nbsp;</strong><br />\nYou dont need to read input or print anything. Complete the function <strong>findNth()&nbsp;</strong>which takes N&nbsp;as input parameter and returns the Nth term.<br />\n<br />\n<strong>Expected Time Complexity:</strong> O(logn)<br />\n<strong>Expected Auxiliary Space:</strong> O(1)<br />\n<br />\n<strong>Constraints:</strong><br />\n1&lt;= N&nbsp;&lt;=10<sup>9</sup></span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given the series: \n\nN   Nth term\n1   0\n2   1\n3   0\n4   2\n5   0\n6   1\n7   0\n8   3\n9   0\n10  1\nand so on, find the Nth term of the series.",
                "constraints": [
                    "1 <= N <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "8",
                        "output": "3",
                        "explanation": "The 8th term in the series is 3."
                    },
                    {
                        "input": "5",
                        "output": "0",
                        "explanation": "The 5th term in the series is 0."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Try to find the pattern of the series using even odd concept.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Bit Magic",
                "slug": "bit-magic"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\nclass Solution {\n  public:\n    //Function to find the position of the only set bit in N.\n    int findNth(int n){\n        int c=0;\n        //iterating until n is divisible by 2\n        while(n%2==0){\n            c++;\n            n/=2;\n        }\n        //returning the position of the only set bit\n        return c;\n    }\n \n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            },
            {
                "lang": "C#",
                "full_func": "class Solution\n{\n    //Complete this function\n    //Function to find the position of the only set bit in N.\n    public int findNth(int n)\n    {\n        int c = 0;\n        //iterating until n is divisible by 2\n        while (n % 2 == 0)\n        {\n            c++;\n            n /= 2;\n        }\n        //returning the position of the only set bit\n        return c;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}