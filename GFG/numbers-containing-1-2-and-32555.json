{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 701757,
            "title": "Numbers containing 1, 2 and 3",
            "titleSlug": "numbers-containing-1-2-and-32555",
            "content": "<p><span style=\"font-size: 18px;\">You are given an array&nbsp;<strong>arr[]</strong>&nbsp;of integers. Your task is to find all the numbers in the array whose digits consist only of {1, 2, 3}.</span></p>\n<p><span style=\"font-size: 18px;\">Return an array containing only those numbers from arr[]. The order of the numbers in the output array should be the same as their order in the input array.<br />If there is no such element in arr[]. Return {-1}.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr[] = [4, 6, 7]\n<strong>Output: </strong>[-1]<strong>\nExplanation: </strong>No elements are there in the array which contains digits 1, 2 or 3.</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr[] = [1, 2, 13, 4] <br /><strong>Output: </strong>[1, 2, 13]<strong><br />Explanation: </strong>1, 2 and 13 are the only elements in the array which contains digits as 1, 2 or 3.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &lt;= arr.size &lt;= 10<sup>5</sup><br />1 &lt;= arr[i] &lt;= 10<sup>6</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of integers `arr[]`, identify and return all numbers within the array that are composed exclusively of the digits 1, 2, and 3. The order of the numbers in the returned array must match their original order in the input array. If no such numbers exist in `arr[]`, return an array containing only the integer -1.",
                "constraints": [
                    "1 <= arr.size <= 10^5",
                    "1 <= arr[i] <= 10^6"
                ],
                "testcases": [
                    {
                        "input": "[4, 6, 7]",
                        "output": "[-1]",
                        "explanation": "None of the numbers in the input array contain only the digits 1, 2, or 3."
                    },
                    {
                        "input": "[1, 2, 13, 4]",
                        "output": "[1, 2, 13]",
                        "explanation": "The numbers 1, 2, and 13 are the only numbers in the input array that consist solely of the digits 1, 2, and 3."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>To find the floor and ceiling of <code>x</code> in an array <code>arr[]</code>, iterate through the array and track the closest smaller or equal element (floor) and the closest larger or equal element (ceil) to <code>x</code>.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Hash",
                "slug": "hash"
            },
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "goldman-sachs"
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    // Function to filter numbers based on digits 1, 2, and 3\n    vector<int> filterByDigits(const vector<int>& arr) {\n        vector<int> result;\n\n        // Iterate through each number in the input array\n        for (int num : arr) {\n            bool isValid = true;\n            int temp = num;\n\n            // Check each digit of the number\n            while (temp > 0) {\n                int digit = temp % 10;\n                // If digit is not 1, 2, or 3, mark number as invalid\n                if (digit != 1 && digit != 2 && digit != 3) {\n                    isValid = false;\n                    break;\n                }\n                temp /= 10;\n            }\n\n            // If the number is valid, add it to the result\n            if (isValid) {\n                result.push_back(num);\n            }\n        }\n\n        return result;\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n    public List<Integer> filterByDigits(List<Integer> arr) {\n        List<Integer> result = new ArrayList<>();\n\n        for (int num : arr) {\n            boolean isValid = true;\n            int temp = num;\n\n            while (temp > 0) {\n                int digit = temp % 10;\n                if (digit != 1 && digit != 2 && digit != 3) {\n                    isValid = false;\n                    break;\n                }\n                temp /= 10;\n            }\n\n            if (isValid) {\n                result.add(num);\n            }\n        }\n\n        return result;\n    }\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n\n    def filterByDigits(self, arr):\n        result = []\n\n        for num in arr:\n            isValid = True\n            temp = num\n\n            while temp > 0:\n                digit = temp % 10\n                if digit not in {1, 2, 3}:\n                    isValid = False\n                    break\n                temp //= 10\n\n            if isValid:\n                result.append(num)\n\n        return result\n",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "class Solution {\n    filterByDigits(arr) {\n        let result = [];\n\n        for (let num of arr) {\n            let isValid = true;\n            let temp = num;\n\n            while (temp > 0) {\n                let digit = temp % 10;\n                if (![1, 2, 3].includes(digit)) {\n                    isValid = false;\n                    break;\n                }\n                temp = Math.floor(temp / 10);\n            }\n\n            if (isValid) {\n                result.push(num);\n            }\n        }\n\n        return result;\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}