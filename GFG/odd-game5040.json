{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704897,
            "title": "Odd Game",
            "titleSlug": "odd-game5040",
            "content": "<p><span style=\"font-size:18px\">Given an array of length <strong>N</strong>, starting from 1 to N. At each iteration, you remove all elements at odd positions, until only one element is left. Find the last remaining element.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\r\n<span style=\"font-size:18px\"><strong>N = </strong>5</span>\r\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\r\n<span style=\"font-size:18px\">4</span>\r\n<span style=\"font-size:18px\"><strong>Explanation:</strong></span>\r\n<span style=\"font-size:18px\">Initial Array- {1,2,3,4,5}.\r\nAfter 1st Iteration- {2,4}.\r\nAfter 2nd Interation- {4}\r\nThrefore, the answer is 4.</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\r\n<span style=\"font-size:18px\"><strong>N = </strong>3</span>\r\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\r\n<span style=\"font-size:18px\">2</span>\r\n<span style=\"font-size:18px\"><strong>Explanation:</strong></span>\r\n<span style=\"font-size:18px\">Initial Array- {1,2,3}.\r\nAfter 1st Iteration- {2}.\r\nThrefore, the answer is 2.</span>\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>oddGame()</strong> which takes an Integer N as input and returns the last remaining element.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(log(N))<br />\r\n<strong>Expected Auxiliary Space:</strong> O(1)</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong></span><br />\r\n<span style=\"font-size:18px\">1 &lt;= N &lt;= 10<sup>9</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of integers from 1 to N, in each iteration, remove all elements at odd positions. Repeat this process until only one element remains. Find this last remaining element.",
                "constraints": [
                    "1 <= N <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "5",
                        "output": "4",
                        "explanation": "Initial array: {1, 2, 3, 4, 5}. After the first iteration: {2, 4}. After the second iteration: {4}. Therefore, the last remaining element is 4."
                    },
                    {
                        "input": "3",
                        "output": "2",
                        "explanation": "Initial array: {1, 2, 3}. After the first iteration: {2}. Therefore, the last remaining element is 2."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">The last element will always be on a position which is a power of 2.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\r\n\r\nclass Solution {\r\n  public:\r\n    long long oddGame(long long N) {\r\n        \r\n        long long a = floor(log2(N));   // Finding log2 of N\r\n        long long ans = pow(2,a);      // Finding 2 power log2(N)\r\n        \r\n        return ans;\r\n    }\r\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "#Back-end complete function Template for Python 3\r\n\r\nclass Solution:\r\n    def oddGame(self, N):\r\n        \r\n        a = int((math.log2(N)))       # Finding log2 of N\r\n        ans = int(math.pow(2,a))      # Finding 2 power log2(N)\r\n        \r\n        return ans",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\r\n/**\r\n * @param {number} N\r\n * @returns {number}\r\n*/\r\n\r\nclass Solution\r\n{\r\n    //Function to find the winner of the game under the given rules.\r\n    oddGame(N)\r\n    {\r\n        let a = Math.floor(Math.log2(N));       // Finding log2 of N\r\n        let ans = Math.pow(2,a);      // Finding 2 power log2(N)\r\n        \r\n        return ans;\r\n    }\r\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}