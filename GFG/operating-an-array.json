{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 700522,
            "title": "Operating an array",
            "titleSlug": "operating-an-array",
            "content": "<p><span style=\"font-size: 18px;\">Given an array <strong>arr</strong>, complete the following three functions:<br /></span><span style=\"font-size: 18px;\"><strong>searchEle</strong>: This function searches for an element <strong>x</strong> in the array <strong>arr</strong>. It should return a boolean value - <strong>true</strong> if the element is found, and <strong>false</strong> otherwise.<br /></span><span style=\"font-size: 18px;\"><strong>insertEle</strong>: This function inserts an element <strong>y</strong> at index <strong>yi</strong> in the array. <strong>true</strong> will be printed if the insertion is done correctly, and <strong>false</strong> otherwise.<br /></span><strong style=\"font-size: 18px;\">deleteEle</strong><span style=\"font-size: 18px;\">: This function deletes the first occurrence of an element <strong>z</strong> in the array. <strong>true</strong></span><span style=\"font-size: 18px;\"> will be printed if the deletion is done correctly, and <strong>false</strong> otherwise.</span></p>\n<p><span style=\"font-size: 18px;\">&nbsp;</span><span style=\"font-size: 18px;\"><strong>Note</strong>: 0-based indexing is followed.</span></p>\n<p><strong><span style=\"font-size: 18px;\">Example:</span><span style=\"font-size: 18px;\"> </span></strong></p>\n<pre><strong><span style=\"font-size: 18px;\">Input:</span> </strong><span style=\"font-size: 18px;\">arr[] = [2, 4, 1, 0, 2], x=</span><span style=\"font-size: 18px;\">1, y=2, yi=2, z=0<br /></span><strong><span style=\"font-size: 18px;\">Ouput: </span></strong><span style=\"font-size: 18px;\">true</span><span > true true<br /></span><span style=\"font-size: 18px;\"><strong>Explanation: </strong>As x=1 is present in the array, so return 1. After inserting y=2 at yi=2th index, the array becomes 2,4,2,1,0,2. After deleting z=0, the array becomes 2,4,2,1,2</span></pre>\n<pre><strong><span style=\"font-size: 18px;\">Input:</span> </strong><span style=\"font-size: 18px;\">arr[] = [17, 15, 8, 9, 12], x=</span><span style=\"font-size: 18px;\">10, y=6, yi=2, z=5<br /></span><strong><span style=\"font-size: 18px;\">Ouput: </span></strong><span style=\"font-size: 18px;\">false</span><span > true true<br /></span><span style=\"font-size: 18px;\"><strong>Explanation: </strong>As x=10 is not present in the array, so return 0. After inserting y=6 at yi=2th index, the array becomes 17,15,6,8,9,12. As z=5 not present, the arrays stays as 17,15,6,8,9,12.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong> O(n)<br /><strong>Expected Auxiliary Space:</strong> O(1)</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &lt;= arr.size() &lt;= 1500<br />1 &lt;= x, y, z&lt;= 10<sup>3</sup><br />0 &lt;= y</span><sub>i</sub><span style=\"font-size: 18px;\">&lt; arr.size()<br /></span><span style=\"font-size: 18px;\">0 &lt;= arr<sub>i</sub> &lt;= 10<sup>5</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array `arr`, implement the following three functions:\n\n*   **searchEle(arr, x):** Searches for an element `x` in the array `arr`. Returns `true` if the element is found, and `false` otherwise.\n*   **insertEle(arr, y, yi):** Inserts an element `y` at index `yi` in the array. Returns `true` if the insertion is successful, and `false` otherwise (e.g., if `yi` is out of bounds).\n*   **deleteEle(arr, z):** Deletes the first occurrence of an element `z` in the array. Returns `true` if the deletion is successful (element `z` was found and deleted), and `false` otherwise (element `z` was not found).\n\n**Note:** 0-based indexing is used.",
                "constraints": [
                    "1 <= arr.size() <= 1500",
                    "1 <= x, y, z <= 1000",
                    "0 <= yi < arr.size()",
                    "0 <= arr[i] <= 100000"
                ],
                "testcases": [
                    {
                        "input": "arr = [2, 4, 1, 0, 2], x = 1, y = 2, yi = 2, z = 0",
                        "output": "true true true",
                        "explanation": "x = 1 is present in the array, so searchEle returns true.  Inserting y = 2 at index yi = 2 results in a successful insertion, so insertEle returns true. z = 0 is present in the array, so deleteEle returns true."
                    },
                    {
                        "input": "arr = [17, 15, 8, 9, 12], x = 10, y = 6, yi = 2, z = 5",
                        "output": "false true true",
                        "explanation": "x = 10 is not present in the array, so searchEle returns false. Inserting y = 6 at index yi = 2 results in a successful insertion, so insertEle returns true. z = 5 is not present in the array, but it got inserted so deleteEle returns true"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>This can be solved by following steps, for <strong>searchEle()&nbsp;</strong>iterate through array if found return 1 else return 0, for <strong>insertEle() </strong>and <strong>deleteEle()</strong> try using the inbuilt function.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Searching",
                "slug": "searching"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    bool searchEle(vector<int>& arr, int x) {\n        return find(arr.begin(), arr.end(), x) != arr.end();\n    }\n\n    void insertEle(vector<int>& arr, int y, int yi) {\n        if (yi >= 0 && yi <= arr.size()) {\n            arr.insert(arr.begin() + yi, y);\n        }\n    }\n\n    void deleteEle(vector<int>& arr, int z) {\n        auto it = find(arr.begin(), arr.end(), z);\n        if (it != arr.end()) {\n            arr.erase(it);\n        }\n    }\n};\n",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution {\n\n    public boolean searchEle(List<Integer> arr, int x) {\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) == x) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    public void insertEle(List<Integer> arr, int y, int yi) { arr.add(yi, y); }\n\n    public void deleteEle(List<Integer> arr, int z) {\n        int index = arr.indexOf(z);\n        if (index != -1) {\n            arr.remove(index);\n        }\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "class Solution:\n\n    def searchEle(self, arr, x):\n        return x in arr\n\n    def insertEle(self, arr, y, yi):\n        arr.insert(yi, y)\n\n    def deleteEle(self, arr, z):\n        if z in arr:\n            arr.remove(z)\n",
                "lang_text": "py"
            },
            {
                "lang": "Javascript",
                "full_func": "class Solution {\n    searchEle(arr, x) { return arr.includes(x); }\n\n    insertEle(arr, y, yi) { arr.splice(yi, 0, y); }\n\n    deleteEle(arr, z) {\n        const index = arr.indexOf(z);\n        if (index !== -1) {\n            arr.splice(index, 1);\n        }\n    }\n}\n",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}