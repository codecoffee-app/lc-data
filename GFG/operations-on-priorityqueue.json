{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 700895,
            "title": "Operations on PriorityQueue",
            "titleSlug": "operations-on-priorityqueue",
            "content": "<p><span style=\"font-size: 18px;\">Given an integer array <strong>a[]</strong>, your task is to <strong>add </strong>these elements to the <strong>PriorityQueue</strong>. Also, given an array <strong>b[]</strong>, the task is to check<strong> if the given element is present in the PriorityQueue</strong> or not.<br />If the element is present, <strong>then 1 is printed by the driver code, after that the</strong> <strong>max element </strong>of priority queue is printed. Then the driver code deletes the max element.<br /><strong>Note:</strong> Here the driver code has implemented the PriorityQueue as a max-heap.</span></p>\n<p><strong><span style=\"font-size: 18px;\">Example:</span></strong></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>a[] = [1, 2, 3, 4, 5, 2, 3, 1], b[] = [1, 3, 2, 9, 10]</span>\n<span style=\"font-size: 18px;\"><strong>Output: </strong>1 5 1 4 1 3 -1 -1</span>\n<span style=\"font-size: 18px;\"><strong>Explanation: </strong>After inserting elements present in A, when we find B[0]=1, which is present, so 1 gets printed, and then the top element of the PriorityQueue which is 5 gets printed, and then it gets deleted. Similarly, when element is not present,<strong> just -1 is printed.<br /></strong></span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>a[] = [1, 2, 3, 4], b[] = [1, 10]</span>\n<span style=\"font-size: 18px;\"><strong>Output: </strong>1 4 -1</span>\n<span style=\"font-size: 18px;\"><strong>Explanation: </strong>After inserting elements present in A, when we find B[0]=1, which is present, so 1 gets printed, and then the top element of the PriorityQueue which is 4 gets printed, and then it gets deleted. Similarly, when element is not present,<strong> just -1 is printed.</strong></span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &lt;= a.size() &lt;= 10<sup>3</sup><br />1 &lt;= b.size() &lt;= 10<sup>3</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an integer array `a[]`, add all elements to a max-heap PriorityQueue.  Then, given an array `b[]`, check if each element in `b[]` is present in the PriorityQueue.\n\nIf an element from `b[]` is found in the PriorityQueue:\n1.  Print `1`.\n2.  Print the maximum element currently in the PriorityQueue.\n3.  Remove the maximum element from the PriorityQueue.\n\nIf an element from `b[]` is not found in the PriorityQueue, print `-1`.",
                "constraints": [
                    "1 <= a.size() <= 10^3",
                    "1 <= b.size() <= 10^3"
                ],
                "testcases": [
                    {
                        "input": "a[] = [1, 2, 3, 4, 5, 2, 3, 1], b[] = [1, 3, 2, 9, 10]",
                        "output": "1 5 1 4 1 3 -1 -1",
                        "explanation": "The elements of `a` are added to the PriorityQueue. `b[0]` (1) is found, so 1 and the max (5) are printed. 5 is removed. `b[1]` (3) is found, so 1 and the new max (4) are printed. 4 is removed. `b[2]` (2) is found, so 1 and the new max (3) are printed. 3 is removed. `b[3]` (9) and `b[4]` (10) are not found, so -1 is printed for each."
                    },
                    {
                        "input": "a[] = [1, 2, 3, 4], b[] = [1, 10]",
                        "output": "1 4 -1",
                        "explanation": "The elements of `a` are added to the PriorityQueue. `b[0]` (1) is found, so 1 and the max (4) are printed. 4 is removed. `b[1]` (10) is not found, so -1 is printed."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:20px\">You simple need to use the following methods</span></p>\n\n<p><span style=\"font-size:20px\">add()</span></p>\n\n<p><span style=\"font-size:20px\">contains()</span></p>\n\n<p><span style=\"font-size:20px\">poll()</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Java",
                "slug": "java"
            },
            {
                "name": "Java-Collections",
                "slug": "java-collections"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Heap",
                "slug": "heap"
            }
        ],
        "companies": [],
        "solutions": {
            "java": {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\n// Helper class Geeks to implement\n// insert() and findFrequency()\nclass Geeks {\n\n    // Function to insert element into the queue\n    static void insert(PriorityQueue<Integer> q, int k) { q.add(k); }\n\n    // Function to check if k is in q\n    static boolean find(PriorityQueue<Integer> q, int k) { return q.contains(k); }\n\n    // Function to delete the max element from queue\n    static int delete(PriorityQueue<Integer> q) { return q.poll(); }\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": "import heapq\n\n\nclass Geeks:\n\n    # Function to insert element into the queue (max heap)\n    def insert(self, q, k):\n        heapq.heappush(q, -k)\n\n    # Function to check if k is in q\n    def find(self, q, k):\n        return -k in q\n\n    # Function to delete the max element from queue\n    def delete(self, q):\n        return -heapq.heappop(q)\n",
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}