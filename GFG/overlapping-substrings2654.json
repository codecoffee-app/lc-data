{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703628,
            "title": "Overlapping Substrings",
            "titleSlug": "overlapping-substrings2654",
            "content": "<p><span style=\"font-size:18px\">Given a string S and you need to check whether S contains two non overlapping substrings &quot;XY&quot; and &quot;YX&quot; in any order or not.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Note : </strong>All letters of the String are Uppercased.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong>\r\n<strong>S = </strong>&quot;XYYX&quot;\r\n<strong>Output:</strong>\r\nYES\r\n<strong>Explanation: </strong>\r\nFrom stated input string &quot;XY&quot;\r\nsubstring(1,2) and &quot;YX&quot; substring(3,4)\r\ncan be easily separated without overlap.\r\nSo output is &quot;YES&quot;.</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong>\r\n<strong>S = </strong>&quot;XYX&quot;\r\n<strong>Output:</strong>\r\nNO\r\n<strong>Explanation: </strong>\r\n&quot;XY&quot; and &quot;YX&quot; substrings are present.\r\nBut they overlap with each other.\r\nSo, Output is &quot;NO&quot;.</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>overlapPresent()</strong> which takes a String S and returns the answer.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(|S|)<br />\r\n<strong>Expected Auxiliary Space:</strong> O(1)</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n1 &lt;= |S| &lt;= 10<sup>5</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Traverse through the String and find the first occurence of &quot;XY&quot; or &quot;YX&quot;. If you get &quot;XY&quot; at<sub> </sub>positon i, check for substring &quot;YX&quot; from position i+2 and do the same for &quot;YX&quot; and &quot;XY&quot;. If you find both, then answer is &quot;YES&quot;, else &quot;NO&quot;.</span></p>"
        ],
        "relatedTopics": [],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution {\r\n  public:\r\n    string overlapPresent(string S) {\r\n        \r\n        int flag = 0;\r\n        \r\n        for(int i=0 ; i<S.length()-1 ; i++)\r\n        {\r\n            // We find the first occurence of substring \"XY\".\r\n            if(S[i]=='X' && S[i+1]=='Y')\r\n            {\r\n                for(int j=i+2 ; j<S.length()-1 ; j++)\r\n                {\r\n                    // After finding substring \"XY\", we search for a \r\n                    // non-overlapping substring \"YX\".\r\n                    if(S[j]=='Y' && S[j+1]=='X')\r\n                    {\r\n                        flag=1;      // We mark flag as 1 if we find nonoverlappping \r\n                        break;       // substrings \"XY\" and \"YX\".\r\n                    }\r\n                }\r\n            break;\r\n            }\r\n        }\r\n        \r\n        for(int i=0 ; i<S.length()-1 ; i++)\r\n        {\r\n            // We find the first occurence of substring \"YX\".\r\n            if(S[i]=='Y' && S[i+1]=='X')\r\n            {\r\n                for(int j=i+2 ; j<S.length()-1 ; j++)\r\n                {\r\n                    // After finding substring \"YX\", we search for a \r\n                    // non-overlapping substring \"XY\".\r\n                    if(S[j]=='X' && S[j+1]=='Y')\r\n                    {\r\n                        flag=1;      // We mark flag as 1 if we find nonoverlappping\r\n                        break;       // substrings \"XY\" and \"YX\".\r\n                    }\r\n                }\r\n            break;\r\n            }\r\n        }\r\n\r\n        if(flag)\r\n            return \"YES\";\r\n        else\r\n            return \"NO\";\r\n    }\r\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\r\n\r\nclass Solution {\r\n    static String overlapPresent(String S) {\r\n\r\n        int flag = 0;\r\n        \r\n        for(int i=0 ; i<S.length()-1 ; i++)\r\n        {\r\n            // We find the first occurence of substring \"XY\".\r\n            if(S.charAt(i)=='X' && S.charAt(i+1)=='Y')\r\n            {\r\n                for(int j=i+2 ; j<S.length()-1 ; j++)\r\n                {\r\n                    // After finding substring \"XY\", we search for a \r\n                    // non-overlapping substring \"YX\".\r\n                    if(S.charAt(j)=='Y' && S.charAt(j+1)=='X')\r\n                    {\r\n                        flag = 1;   // We mark flag as 1 if we find nonoverlappping \r\n                        break;      // substrings \"XY\" and \"YX\".\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        \r\n        for(int i=0 ; i<S.length()-1 ; i++)\r\n        {\r\n            // We find the first occurence of substring \"YX\".\r\n            if(S.charAt(i)=='Y' && S.charAt(i+1)=='X')\r\n            {\r\n                for(int j=i+2 ; j<S.length()-1 ; j++)\r\n                {\r\n                    // After finding substring \"YX\", we search for a \r\n                    // non-overlapping substring \"XY\".\r\n                    if(S.charAt(j)=='X' && S.charAt(j+1)=='Y')\r\n                    {\r\n                        flag = 1;     // We mark flag as 1 if we find nonoverlappping\r\n                        break;        // substrings \"XY\" and \"YX\".\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        \r\n        if(flag == 1)\r\n            return \"YES\";\r\n        else\r\n            return \"NO\";\r\n    }\r\n};",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\nclass Solution:\n    def overlapPresent(self, S):\n        \n        flag = 0\n        \n        #Checking for overlap pattern XYXY\n        #If found, set flag to 1 and break out of the loop\n        for i in range(len(S)-1):\n            if S[i]=='X' and S[i+1]=='Y':\n                for j in range(i+2,len(S)-1):\n                    if S[j]=='Y' and S[j+1]=='X':\n                        flag=1 \n                        break\n                break\n            \n        #Checking for overlap pattern YXYX\n        #If found, set flag to 1 and break out of the loop\n        for i in range(len(S)-1):\n            if S[i]=='Y' and S[i+1]=='X':\n                for j in range(i+2,len(S)-1):\n                    if S[j]=='X' and S[j+1]=='Y':\n                        flag=1 \n                        break\n                break\n            \n        #If flag is 1, return \"YES\", else return \"NO\" indicating no overlap\n        if flag==1:\n            return \"YES\"\n        else:\n            return \"NO\"",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n/**\n * @param {string} S\n * @returns {string}\n*/\n\nclass Solution {\n    //Function to check whether the given string contains overlapping parts.\n    overlapPresent(S)\n    {\n        let flag = 0;\n        \n        //Checking for overlap pattern XYXY\n        //If found, set flag to 1 and break out of the loop\n        for (let i = 0; i < S.length - 1; i++) {\n            if (S[i] === 'X' && S[i + 1] === 'Y') {\n                for (let j = i + 2; j < S.length - 1; j++) {\n                    if (S[j] === 'Y' && S[j + 1] === 'X') {\n                        flag = 1;\n                        break;\n                    }\n                }\n                break;\n            }\n        }\n        \n        //Checking for overlap pattern YXYX\n        //If found, set flag to 1 and break out of the loop\n        for (let i = 0; i < S.length - 1; i++) {\n            if (S[i] === 'Y' && S[i + 1] === 'X') {\n                for (let j = i + 2; j < S.length - 1; j++) {\n                    if (S[j] === 'X' && S[j + 1] === 'Y') {\n                        flag = 1;\n                        break;\n                    }\n                }\n                break;\n            }\n        }\n        \n        //If flag is 1, return \"YES\", else return \"NO\" indicating no overlap\n        if (flag === 1) {\n            return \"YES\";\n        } else {\n            return \"NO\";\n        }\n    }\n}",
                "lang_text": "javascript"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    //Function to check if there is an overlap present in the string.\n    public string overlapPresent(string S)\n    {\n        int flag = 0;\n\n        for(int i=0 ; i<S.Length-1 ; i++)\n        {\n            // We find the first occurence of substring \"XY\".\n            if(S[i]=='X' && S[i+1]=='Y')\n            {\n                for(int j=i+2 ; j<S.Length-1 ; j++)\n                {\n                    // After finding substring \"XY\", we search for a \n                    // non-overlapping substring \"YX\".\n                    if(S[j]=='Y' && S[j+1]=='X')\n                    {\n                        flag=1;      // We mark flag as 1 if we find nonoverlappping \n                        break;       // substrings \"XY\" and \"YX\".\n                    }\n                }\n            break;\n            }\n        }\n\n        for(int i=0 ; i<S.Length-1 ; i++)\n        {\n            // We find the first occurence of substring \"YX\".\n            if(S[i]=='Y' && S[i+1]=='X')\n            {\n                for(int j=i+2 ; j<S.Length-1 ; j++)\n                {\n                    // After finding substring \"YX\", we search for a \n                    // non-overlapping substring \"XY\".\n                    if(S[j]=='X' && S[j+1]=='Y')\n                    {\n                        flag=1;      // We mark flag as 1 if we find nonoverlappping\n                        break;       // substrings \"XY\" and \"YX\".\n                    }\n                }\n            break;\n            }\n        }\n\n        if(flag==1)\n            return \"YES\";\n        else\n            return \"NO\";\n    }\n\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}