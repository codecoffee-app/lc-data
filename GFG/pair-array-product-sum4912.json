{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 702761,
            "title": "Pair array product sum",
            "titleSlug": "pair-array-product-sum4912",
            "content": "<p><span >Given an array <strong>arr[]</strong> of non-negative integers. Count the number of pairs <strong>{i, j}</strong> in the array such that <strong>arr[i]</strong> + <strong>arr[j]</strong> &lt; <strong>arr[i] </strong>* <strong>arr[j]</strong>.<br /><strong>Note: </strong>the pair <strong>{i, j}</strong> and <strong>{j, i}</strong> are considered the same and <strong>i</strong> should not be equal to <strong>j</strong>.</span></p>\n<p><span ><strong>Examples:</strong></span></p>\n<pre><span ><strong>Input: </strong>arr[] = [3, 4, 5]\n<strong>Output:</strong> 3\n<strong>Explanation</strong>: Pairs are {3, 4}, {4, 5}, and {3,5}.  <br /></span></pre>\n<pre><span ><strong>Input: </strong>arr[] = [1, 1, 1]\n<strong>Output:</strong> 0\n<strong>Explanation</strong>: No pairs can be formed which satisfy the condition. </span></pre>\n<p><span ><strong>Expected Time Complexity:</strong> O(n).<br /><strong>Expected Auxiliary Space:</strong> O(1).</span></p>\n<p><span ><strong>Constraints:</strong><br />1 &le; arr.size() &le; 10<sup>6<br /></sup>0 &le; arr[i] &le; 10<sup>6</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array `arr` of non-negative integers, find the number of distinct pairs (i, j) such that `arr[i] + arr[j] < arr[i] * arr[j]`. Note that the order of the pair does not matter (i.e., (i, j) and (j, i) are considered the same pair), and i should not be equal to j.",
                "constraints": [
                    "1 <= arr.size() <= 10^6",
                    "0 <= arr[i] <= 10^6"
                ],
                "testcases": [
                    {
                        "input": "[3, 4, 5]",
                        "output": "3",
                        "explanation": "The pairs that satisfy the condition are {3, 4}, {4, 5}, and {3, 5} since: 3 + 4 < 3 * 4 (7 < 12), 4 + 5 < 4 * 5 (9 < 20), and 3 + 5 < 3 * 5 (8 < 15)."
                    },
                    {
                        "input": "[1, 1, 1]",
                        "output": "0",
                        "explanation": "No pairs can be formed which satisfy the given condition since 1 + 1 < 1 * 1 (2 < 1) is false."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span >Almost all pairs will satisfy the conditions except, pairs with 0s,1s, and some pairs with 2s.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n\n    // returns the number of valid pairs\n    long long countPairs(vector<int> &arr) {\n        int n = arr.size();\n        // traversing the array, counting the\n        // number of 2s and greater than 2\n        // in array\n        long long twoCount = 0, twoGrCount = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr[i] == 2)\n                twoCount++;\n            else if (arr[i] > 2)\n                twoGrCount++;\n        }\n        return twoCount * twoGrCount + (twoGrCount * (twoGrCount - 1)) / 2;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\nclass Solution {\n    // Returns the number of valid pairs\n    public long countPairs(int[] arr) {\n        long twoCount = 0;\n        long twoGrCount = 0;\n\n        for (int num : arr) {\n            if (num == 2) {\n                twoCount++;\n            } else if (num > 2) {\n                twoGrCount++;\n            }\n        }\n\n        return twoCount * twoGrCount + (twoGrCount * (twoGrCount - 1)) / 2;\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\n\nclass Solution:\n\n    def countPairs(self, arr):\n        two_count = 0\n        two_gr_count = 0\n\n        for num in arr:\n            if num == 2:\n                two_count += 1\n            elif num > 2:\n                two_gr_count += 1\n\n        return two_count * two_gr_count + (two_gr_count *\n                                           (two_gr_count - 1)) // 2\n",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "class Solution {\n    // Returns the number of valid pairs\n    countPairs(arr) {\n        let twoCount = 0;\n        let twoGrCount = 0;\n\n        for (let num of arr) {\n            if (num === 2) {\n                twoCount++;\n            } else if (num > 2) {\n                twoGrCount++;\n            }\n        }\n\n        return twoCount * twoGrCount + (twoGrCount * (twoGrCount - 1)) / 2;\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}