{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 869923,
            "title": "Largest Pair Sum",
            "titleSlug": "pair-sum--120604",
            "content": "<p><span style=\"font-size: 12pt;\">Find the largest pair sum in an array of&nbsp;<strong>distinct</strong> integers.</span></p>\n<p><span style=\"font-size: 12pt;\"><strong>Examples :</strong></span></p>\n<pre><span style=\"font-size: 12pt;\"><strong>Input: </strong>arr[] = [12, 34, 10, 6, 40]\n<strong>Output</strong>: 74\n<strong>Explanation</strong>: Sum of 34 and 40 is the largest, i.e, 34 + 40 = 74.</span></pre>\n<pre><span style=\"font-size: 12pt;\"><strong>Input</strong>: arr[] = [10, 20, 30]<strong>\nOutput</strong>: 50<strong>\nExplanation</strong>: 20 + 30 = 50.</span></pre>\n<p><span style=\"font-size: 12pt;\"><strong>Expected Time Complexity</strong>: O(n)<br /><strong>Expected Auxiliary Space</strong>: O(1)</span></p>\n<p><span style=\"font-size: 12pt;\"><strong>Constraints</strong>:<br />2 &le; arr.size() &le; 10<sup>6</sup><br />0 &le; arr[i] &le; 10<sup>6</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of distinct integers, find the largest possible sum of any two numbers within the array.",
                "constraints": [
                    "2 <= arr.size() <= 10^6",
                    "0 <= arr[i] <= 10^6"
                ],
                "testcases": [
                    {
                        "input": "[12, 34, 10, 6, 40]",
                        "output": "74",
                        "explanation": "The two largest numbers in the array are 34 and 40. Their sum, 34 + 40, equals 74."
                    },
                    {
                        "input": "[10, 20, 30]",
                        "output": "50",
                        "explanation": "The two largest numbers in the array are 20 and 30. Their sum, 20 + 30, equals 50."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span >Think of an approach in linear time and constant space. Only the two largest numbers are required.</span></p>",
            "<p><span >Traverse the array and keep track of the two largest numbers encountered till now.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "two-pointer-algorithm",
                "slug": "two-pointer-algorithm"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Searching",
                "slug": "searching"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C",
                "full_func": "//Back-end complete function Template for C\n\nint pairsum(int arr[], int n) {\n    int first, second;\n\n    // Initialize first and second largest element\n    if (arr[0] > arr[1]) {\n        first = arr[0];\n        second = arr[1];\n    } else {\n        first = arr[1];\n        second = arr[0];\n    }\n\n    // Traverse remaining array and find first and second\n    // largest elements in overall array\n    for (int i = 2; i < n; i++) {\n        /* If current element is greater than first then\n           update both first and second */\n        if (arr[i] > first) {\n            second = first;\n            first = arr[i];\n        }\n        /* If arr[i] is in between first and second then\n         * update second */\n        else if (arr[i] > second) {\n            second = arr[i];\n        }\n    }\n    return (first + second);\n}\n",
                "lang_text": "c"
            },
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nclass Solution {\n  public:\n    int pairsum(vector<int> &arr) {\n        // code here\n        // Initialize first and second largest element\n        int n = arr.size();\n        int first, second;\n        if (arr[0] > arr[1]) {\n            first = arr[0];\n            second = arr[1];\n        } else {\n            first = arr[1];\n            second = arr[0];\n        }\n\n        // Traverse remaining array and find first and second\n        // largest elements in overall array\n        for (int i = 2; i < n; i++) {\n            /* If current element is greater than first then\n              update both first and second */\n            if (arr[i] > first) {\n                second = first;\n                first = arr[i];\n            }\n\n            /* If arr[i] is in between first and second then\n             * update second  */\n            else if (arr[i] > second)\n                second = arr[i];\n        }\n        return (first + second);\n    }\n};\n",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "\nclass Solution {\n    public static int pairsum(int[] arr) {\n        // code here\n        // Initialize first and second largest element\n        int first, second, n = arr.length;\n        if (arr[0] > arr[1]) {\n            first = arr[0];\n            second = arr[1];\n        } else {\n            first = arr[1];\n            second = arr[0];\n        }\n\n        // Traverse remaining array and find first and\n        // second largest elements in overall array\n        for (int i = 2; i < n; i++) {\n            /* If current element is greater than first then\n              update both first and second */\n            if (arr[i] > first) {\n                second = first;\n                first = arr[i];\n            }\n\n            /* If arr[i] is in between first and second then\n             * update second  */\n            else if (arr[i] > second)\n                second = arr[i];\n        }\n        return (first + second);\n    }\n}\n",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "from typing import List\n\n\nclass Solution:\n\n    def pairsum(self, arr: List[int]) -> int:\n        # code here\n        # Initialize first and second\n        # largest element\n        n = len(arr)\n        if arr[0] > arr[1]:\n            first = arr[0]\n            second = arr[1]\n\n        else:\n            first = arr[1]\n            second = arr[0]\n\n        # Traverse remaining array and\n        # find first and second largest\n        # elements in overall array\n        for i in range(2, n):\n\n            # If current element is greater\n            # than first then update both\n            # first and second\n            if arr[i] > first:\n                second = first\n                first = arr[i]\n\n            # If arr[i] is in between first\n            # and second then update second\n            elif arr[i] > second:\n                second = arr[i]\n\n        return (first + second)\n",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "\nclass Solution {\n    /**\n    * @param number[] arr\n\n    * @returns number\n    */\n    pairsum(arr) {\n        // code here\n        // Initialize first and\n        // second largest element\n        let first, second;\n        if (arr[0] > arr[1]) {\n            first = arr[0];\n            second = arr[1];\n        } else {\n            first = arr[1];\n            second = arr[0];\n        }\n\n        // Traverse remaining array and\n        // find first and second largest\n        // elements in overall array\n        for (let i = 2; i < arr.length; i++) {\n            /* If current element is greater\n               than first then update both\n               first and second */\n            if (arr[i] > first) {\n                second = first;\n                first = arr[i];\n            }\n\n            /* If arr[i] is in between first\n               and second then update second */\n            else if (arr[i] > second)\n                second = arr[i];\n        }\n        return (first + second);\n    }\n}\n",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}