{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705148,
            "title": "Pairs of Adjacent elements",
            "titleSlug": "pairs-of-adjacent-elements4814",
            "content": "<p><span style=\"font-size: 12pt;\">Given an array <strong>arr[]</strong> of positive integers. The task is to count consecutive pairs of adjacent elements. A pair is said to be consecutive if the second element in the pair is greater than the first element by 1. For example, (4,5) is a pair of consecutive elements.</span></p>\n<p><span style=\"font-size: 12pt;\"><strong>Examples:</strong></span></p>\n<pre><span style=\"font-size: 12pt;\"><strong>Input:</strong> arr = [5, 7, 6, 7, 4]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> (6, 7) pair is the only such pair.</span></pre>\n<pre><span style=\"font-size: 12pt;\"><strong>Input: </strong>arr = [1, 2, 3, 4]\n<strong>Output:</strong> 3\n<strong>Explaination:</strong> (1, 2), (2, 3), (3, 4) are the pairs.</span></pre>\n<p><span style=\"font-size: 12pt;\"><strong>Expected Time Complexity:</strong> O(n)<br /><strong>Expected Auxilary Space:</strong> O(1)</span></p>\n<p><span style=\"font-size: 12pt;\"><strong>Constraints:</strong><br />1 &le; arr.size &le; 10<sup>6</sup><br />1 &le; arr[i] &le; 10<sup>6</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of positive integers, count the number of consecutive pairs where the second element is exactly one greater than the first element in the pair.",
                "constraints": [
                    "1 <= arr.size <= 10^6",
                    "1 <= arr[i] <= 10^6"
                ],
                "testcases": [
                    {
                        "input": "[5, 7, 6, 7, 4]",
                        "output": "1",
                        "explanation": "The only consecutive pair is (6, 7), as 7 is one greater than 6."
                    },
                    {
                        "input": "[1, 2, 3, 4]",
                        "output": "3",
                        "explanation": "The consecutive pairs are (1, 2), (2, 3), and (3, 4)."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span >For each position check if it satisfies the condition with any of its adjacent element.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nclass Solution {\n  public:\n    // Function to count adjacent pairs where the difference is 1\n    int adjacentPairs(vector<int> arr) {\n        int count = 0; // Initialize count to 0\n        // Loop through the array starting from the second element\n        for (int i = 1; i < arr.size(); i++) {\n            // Check if the current element and the previous element have a difference\n            // of 1\n            if (arr[i] - arr[i - 1] == 1)\n                count++; // Increment count if condition is met\n        }\n        return count; // Return the total count of adjacent pairs\n    }\n};\n",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\nclass Solution {\n    // Static method to count adjacent pairs where the difference is 1\n    static int adjacentPairs(int arr[]) {\n        int N = arr.length; // Get the length of the array\n        int count = 0;      // Initialize count to 0\n        // Loop through the array starting from the second element\n        for (int i = 1; i < N; i++) {\n            // Check if the current element and the previous element have a difference\n            // of 1\n            if (arr[i] - arr[i - 1] == 1)\n                count++; // Increment count if condition is met\n        }\n        return count; // Return the total count of adjacent pairs\n    }\n}\n",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "# User function Template for Python3\n\n\nclass Solution:\n    # Method to count adjacent pairs where the difference is 1\n    def adjacentPairs(self, arr):\n        count = 0  # Initialize count to 0\n        # Loop through the array starting from the second element\n        for i in range(1, len(arr)):\n            # Check if the current element and the previous element have a difference of 1\n            if arr[i] - arr[i - 1] == 1:\n                count += 1  # Increment count if condition is met\n        return count  # Return the total count of adjacent pairs\n",
                "lang_text": "py"
            },
            {
                "lang": "Javascript",
                "full_func": "// User function Template for JavaScript\n\nclass Solution {\n    // Method to count adjacent pairs where the difference is 1\n    adjacentPairs(arr) {\n        let count = 0; // Initialize count to 0\n        // Loop through the array starting from the second element\n        for (let i = 1; i < arr.length; i++) {\n            // Check if the current element and the previous element have a difference\n            // of 1\n            if (arr[i] - arr[i - 1] == 1) {\n                count += 1; // Increment count if condition is met\n            }\n        }\n        return count; // Return the total count of adjacent pairs\n    }\n}\n",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}