{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704895,
            "title": "Pairs of prime number",
            "titleSlug": "pairs-of-prime-number2612",
            "content": "<p><span style=\"font-size: 18px;\">Find all pairs (sets) of prime numbers<strong> (p,q)</strong> such that <strong>p*q &lt;= n</strong>, where <strong>n</strong> is the given number.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>n = 4\n<strong>Output: </strong>2 2\n<strong>Explanation: </strong>Pair (2, 2) which has both prime numbers as well as satisfying the condition 2*2 &lt;= 4.</span>\n</pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>n = 8\n<strong>Output: </strong>2 2 2 3 3 2\n<strong>Explanation: </strong>Pairs(2, 2), (2, 3) and (3, 2) which has both prime numbers and satisfying the given condition.</span> </pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &lt;= n &lt;= 400</span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p>Search for prime numbers that follow this property and check if product of any two prime number is less than or equal to n. Same numbers can be multiplied with itself to form pair.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "amazon"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    bool isprime(int x) {\n        if (x <= 1)\n            return false;\n        for (int i = 2; i * i <= x; i++) {\n            if (x % i == 0)\n                return false;\n        }\n        return true;\n    }\n\n    vector<int> primePairs(int n) {\n        vector<int> res;\n        for (int i = 2; i <= n; i++) {\n            if (isprime(i)) {\n                for (int j = 2; j <= n / i; j++) {\n                    if (isprime(j)) {\n                        res.push_back(i);\n                        res.push_back(j);\n                    }\n                }\n            }\n        }\n        return res;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution {\n    public boolean isPrime(int x) {\n        if (x <= 1) return false;\n        for (int i = 2; i * i <= x; i++) {\n            if (x % i == 0) return false;\n        }\n        return true;\n    }\n\n    public int[] prime_pairs(int n) {\n        List<Integer> res = new ArrayList<>();\n        boolean[] primes = new boolean[n + 1];\n\n        // Mark primes using Sieve of Eratosthenes\n        for (int i = 2; i <= n; i++) {\n            primes[i] = isPrime(i);\n        }\n\n        for (int i = 2; i <= n; i++) {\n            if (primes[i]) {\n                for (int j = 2; j <= n / i; j++) {\n                    if (primes[j]) {\n                        res.add(i);\n                        res.add(j);\n                    }\n                }\n            }\n        }\n        int[] result = new int[res.size()];\n        for (int i = 0; i < res.size(); i++) {\n            result[i] = res.get(i);\n        }\n        return result;\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Function to check if a number is prime or not.\n    public bool is_prime(int x)\n    {\n        if(x <= 1)\n            return false;\n        for(int i = 2; i*i <= x; i++)\n        {\n            if(x % i == 0)\n                return false;\n        }\n        return true;\n    }\n    \n    //Function to return the list of prime pairs.\n    public List<int> prime_pairs(int n)\n    {\n        List<int> res = new List<int>();\n        for(int i = 2; i <= n; i++)\n        {\n            if(is_prime(i))\n            {\n                for(int j = 2; j <= n/i; j++)\n                {\n                    if(is_prime(j))\n                    {\n                        res.Add(i);\n                        res.Add(j);\n                    }\n                }\n            }\n        }\n        return res;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}