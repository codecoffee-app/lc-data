{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 702863,
            "title": "Pairs with difference k",
            "titleSlug": "pairs-with-difference-k1713",
            "content": "<p><span style=\"font-size: 18px;\">Given an array <strong>arr[]</strong> of positive integers. Find the number of pairs of integers whose absolute difference equals to a given number <strong>k</strong>.<br /><strong>Note:</strong> (a, b) and (b, a) are considered the same. Also, the same numbers at different indices are considered different.</span></p>\n<p><span style=\"font-size: 18px;\">The answer is guaranteed to fit in a 32-bit integer.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong> arr[] = [1, 4, 1, 4, 5], k = 3\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> There are 4 pairs with absolute difference 3, the pairs are {1, 4}, {1, 4}, {4, 1} and {1, 4}.</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong> arr[] = [8, 16, 12, 16, 4, 0], k = 4\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> There are 5 pairs with absolute difference 4, the pairs are {8, 12}, {8, 4}, {16, 12}, {12, 16}, {4, 0}.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &lt;= arr.size() &lt;= 2*10<sup>5</sup><br />1 &lt;= k &lt;= 2*10<sup>5</sup><br />0 &lt;= arr[i] &lt;= 10<sup>5</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p><span >Use a hash table to count occurrences of each element, then iterate through the array to count pairs with the specified difference by leveraging the hash table. </span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [
            "adobe"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    /* Returns count of pairs with difference k  */\n    int countPairs(vector<int>& arr, int k) {\n        int n = arr.size();\n        unordered_map<int, int> freq;\n        int cnt = 0;\n\n        for (int i = 0; i < n; i++) {\n\n            // Check if the complement (arr[i] + k)\n            // exists in the map. If yes, increment count\n            if (freq.find(arr[i] + k) != freq.end())\n                cnt += freq[arr[i] + k];\n\n            // Check if the complement (arr[i] - k)\n            // exists in the map. If yes, increment count\n            if (freq.find(arr[i] - k) != freq.end())\n                cnt += freq[arr[i] - k];\n\n            // Increment the frequency of arr[i]\n            freq[arr[i]]++;\n        }\n        return cnt;\n    }\n};\n",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "// User function Template for Java\nclass Solution {\n    int countPairs(int[] arr, int k) {\n        int n = arr.length;\n        HashMap<Integer, Integer> freq = new HashMap<>();\n        int cnt = 0;\n\n        for (int i = 0; i < n; i++) {\n\n            // Check if the complement (arr[i] + k)\n            // exists in the map. If yes, increment count\n            if (freq.containsKey(arr[i] + k)) cnt += freq.get(arr[i] + k);\n\n            // Check if the complement (arr[i] - k)\n            // exists in the map. If yes, increment count\n            if (freq.containsKey(arr[i] - k)) cnt += freq.get(arr[i] - k);\n\n            // Increment the frequency of arr[i]\n            freq.put(arr[i], freq.getOrDefault(arr[i], 0) + 1);\n        }\n        return cnt;\n    }\n}\n",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "# User function Template for python3\nclass Solution:\n\n    def countPairs(self, arr, k):\n        n = len(arr)\n        freq = {}\n        cnt = 0\n\n        for i in range(n):\n\n            # Check if the complement (arr[i] + k)\n            # exists in the map. If yes, increment count\n            if (arr[i] + k) in freq:\n                cnt += freq[arr[i] + k]\n\n            # Check if the complement (arr[i] - k)\n            # exists in the map. If yes, increment count\n            if (arr[i] - k) in freq:\n                cnt += freq[arr[i] - k]\n\n            # Increment the frequency of arr[i]\n            freq[arr[i]] = freq.get(arr[i], 0) + 1\n        return cnt\n",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "class Solution {\n    countPairs(arr, k) {\n        const n = arr.length;\n        const freq = {};\n        let cnt = 0;\n\n        for (let i = 0; i < n; i++) {\n\n            // Check if the complement (arr[i] + k)\n            // exists in the map. If yes, increment count\n            if ((arr[i] + k) in freq) cnt += freq[arr[i] + k];\n\n            // Check if the complement (arr[i] - k)\n            // exists in the map. If yes, increment count\n            if ((arr[i] - k) in freq) cnt += freq[arr[i] - k];\n\n            // Increment the frequency of arr[i]\n            freq[arr[i]] = (freq[arr[i]] || 0) + 1;\n        }\n        return cnt;\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}