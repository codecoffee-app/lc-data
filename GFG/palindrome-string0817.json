{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703439,
            "title": "Palindrome String",
            "titleSlug": "palindrome-string0817",
            "content": "<p><span >You are given a string&nbsp;<strong><code>s</code></strong>. Your task is to determine if the string is a palindrome. A string is considered a palindrome if it reads the same forwards and backwards.</span></p>\n<p><span ><strong>Examples :</strong></span></p>\n<pre><span ><strong>Input: </strong>s = \"abba\"\n<strong>Output: </strong>true\n<strong>Explanation: </strong>\"abba\"<span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\"> reads the same forwards </span><span class=\"hljs-built_in\" style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">and</span><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\"> backwards, so it </span><span class=\"hljs-built_in\" style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">is</span><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\"> a palindrome.</span></span></pre>\n<pre><span ><strong>Input:</strong> s = \"abc\" \n<strong>Output:</strong> false\n<strong>Explanation: </strong>\"abc\"<span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\"> does </span><span class=\"hljs-built_in\" style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">not</span><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\"> read the same forwards </span><span class=\"hljs-built_in\" style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">and</span><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\"> backwards, so it </span><span class=\"hljs-built_in\" style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">is</span><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\"> </span><span class=\"hljs-built_in\" style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">not</span><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\"> a palindrome.</span></span></pre>\n<pre><span ><strong>Input: </strong>s = \"a\"\n<strong>Output: </strong>true\n<strong>Explanation: </strong>A <span class=\"hljs-type\" style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">single</span><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">-character </span><span class=\"hljs-type\" style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">string</span><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\"> </span><span class=\"hljs-built_in\" style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">is</span><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\"> always a palindrome.<br /></span></span></pre>\n<pre><span ><strong>Input: </strong>s = \"acbca\"<br /><strong>Output: </strong>true\n<strong>Explanation: </strong>\"acbca\"<span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\"> reads the same forwards </span><span class=\"hljs-built_in\" style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">and</span><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\"> backwards, so it </span><span class=\"hljs-built_in\" style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">is</span><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\"> a palindrome.</span></span></pre>\n<p><span ><strong>Constraints:</strong><br />1 &le; s.size() &le; 10<sup>6</sup><br />The string&nbsp;<code>s</code>&nbsp;contains only lowercase letters (a-z).</span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string `s` consisting of lowercase English letters, determine if the string is a palindrome. A palindrome is a string that reads the same forwards and backwards.",
                "constraints": [
                    "1 <= s.size() <= 10^6",
                    "The string `s` contains only lowercase letters (a-z)."
                ],
                "testcases": [
                    {
                        "input": "abba",
                        "output": "true",
                        "explanation": "The string 'abba' reads the same forwards and backwards, therefore it is a palindrome."
                    },
                    {
                        "input": "abc",
                        "output": "false",
                        "explanation": "The string 'abc' does not read the same forwards and backwards, therefore it is not a palindrome."
                    },
                    {
                        "input": "a",
                        "output": "true",
                        "explanation": "A single-character string is always a palindrome."
                    },
                    {
                        "input": "acbca",
                        "output": "true",
                        "explanation": "The string 'acbca' reads the same forwards and backwards, therefore it is a palindrome."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span >Compare characters from both ends of the string.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [
            "paytm",
            "zoho",
            "morgan-stanley",
            "amazon",
            "de-shaw",
            "factset",
            "cisco",
            "facebook"
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function template for C++\n\nclass Solution {\n  public:\n    // Function to check if a string is a palindrome.\n    bool isPalindrome(string& s) {\n        // Iterating only over the first half of the string.\n        // If the characters don't match at symmetric positions,\n        // return false.\n        for (int i = 0; i < s.size() / 2; i++) {\n            if (s[i] != s[s.size() - i - 1]) {\n                return false; // Not a palindrome\n            }\n        }\n        return true; // Is a palindrome\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "\nclass Solution {\n    boolean isPalindrome(String s) {\n        for (int i = 0; i < s.length() / 2; i++) {\n            if (s.charAt(i) != s.charAt(s.length() - i - 1)) {\n                return false; // Not a palindrome\n            }\n        }\n        return true; // Is a palindrome\n    }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": "class Solution:\n\n    def isPalindrome(self, s: str) -> bool:\n        for i in range(len(s) // 2):\n            if s[i] != s[len(s) - i - 1]:\n                return False  # Return False if not a palindrome\n        return True  # Return True if it is a palindrome\n",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "\n//Back-end complete function Template for JavaScript\nclass Solution {\n    // Function to check if a given string is a palindrome.\n    isPalindrome(s) {\n        let l = 0;               // Initialize a pointer to the start of the string.\n        let r = s.length - 1;    // Initialize a pointer to the end of the string.\n        while (l < r) {          // Iterate until the pointers meet in the middle.\n            if (s[l] !== s[r]) { // If the characters at the pointers are not equal, the\n                                 // string is not a palindrome.\n                return false;    // Return false to indicate that the string is not a\n                                 // palindrome.\n            }\n            l++; // Move the left pointer to the right.\n            r--; // Move the right pointer to the left.\n        }\n        return true; // Return true to indicate that the string is a palindrome.\n    }\n}\n",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}