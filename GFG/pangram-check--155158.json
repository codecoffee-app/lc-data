{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 881884,
            "title": "Pangram check",
            "titleSlug": "pangram-check--155158",
            "content": "<p><span style=\"font-size: 18px;\">You are given a string <strong>s</strong>. Your task is to determine if the string is a Pangram. </span><span style=\"font-size: 18px;\">A Pangram is a string that contains every letter of the English alphabet at least once, regardless of case (uppercase or lowercase).</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples:</strong></span></p>\n<p><span style=\"font-size: 18px;\"><strong> Input:&nbsp;</strong>s = \"Vexednymphsgoforquickwaltzjob\"<br /></span><span style=\"font-size: 18px;\"><strong>Output</strong>: true</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Input:&nbsp;</strong>s = \"hvlvlealtymfbufugtqvgeijrg\"<br /><strong>Output</strong>: false</span></p>\n<p><strong style=\"font-size: 18px;\">Constraints:</strong><br style=\"font-size: 18px;\" /><span style=\"font-size: 18px;\">26 &lt;= s.size() &lt;= 50</span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p>1. Create a visited[] array of Boolean type. We iterate through all the characters of our string and whenever we see a character we mark it. Lowercase and Uppercase are considered the same. So &lsquo;A&rsquo; and &lsquo;a&rsquo; are marked in index 0 and similarly &lsquo;Z&rsquo; and &lsquo;z&rsquo; are marked in index 25.<br />\n<br />\nAfter iterating through all the characters we check whether all the characters are marked or not. If not then return false as this is not a pangram else return true.<br />\n<br />\nComplete solutin as been provided in next hint</p>",
            "<p>bool checkPangram(string str)<br />\n{<br />\n&nbsp;&nbsp;&nbsp; vector&lt;int&gt; vec(26, false);<br />\n&nbsp;&nbsp;&nbsp; int ind;<br />\n&nbsp;&nbsp;&nbsp; for(int i = 0; i &lt; str.length(); i++)<br />\n&nbsp;&nbsp;&nbsp; {<br />\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(str[i] &gt;= &#39;a&#39; &amp;&amp; str[i] &lt;= &#39;z&#39;)<br />\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ind = str[i] - &#39;a&#39;;<br />\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else if(str[i] &gt;= &#39;A&#39; &amp;&amp; str[i] &lt;= &#39;Z&#39;)<br />\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ind = str[i] - &#39;A&#39;;<br />\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; vec[ind] = true;<br />\n&nbsp;&nbsp;&nbsp; }<br />\n&nbsp;&nbsp; &nbsp;<br />\n&nbsp;&nbsp;&nbsp; for(int i = 0; i &lt;= 25; i++)<br />\n&nbsp;&nbsp;&nbsp; {<br />\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(vec[i] == false)<br />\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return false;<br />\n&nbsp;&nbsp;&nbsp; }<br />\n&nbsp;&nbsp;&nbsp; return true;<br />\n}</p>\n\n<p>&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "STL",
                "slug": "stl"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nbool checkPangram(string &str) {\n    vector<int> vec(26, false);\n    int ind;\n    for (int i = 0; i < str.length(); i++) {\n\n        if (str[i] >= 'a' && str[i] <= 'z')\n            ind = str[i] - 'a';\n        else if (str[i] >= 'A' && str[i] <= 'Z')\n            ind = str[i] - 'A';\n        vec[ind] = true;\n    }\n\n    for (int i = 0; i <= 25; i++) {\n        if (vec[i] == false)\n            return false;\n    }\n    return true;\n}\n",
                "lang_text": "cpp"
            }
        ],
        "platform": "GFG"
    }
}