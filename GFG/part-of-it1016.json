{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704619,
            "title": "Part of it.",
            "titleSlug": "part-of-it1016",
            "content": "<p><span style=\"font-size:18px\">A given series <strong>3, 5, 9, 11, 15, 17, 21, 27, 29, ...</strong> and so on. You need to identify the pattern and determine whether the input number&nbsp; ( <strong>n&nbsp;</strong>) is a part of the given series or not. If yes then return &quot;Yes&quot;, otherwise &quot;No&quot;.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input: </strong>n = 9\r\n<strong>Output:</strong> Yes\r\n<strong>Explanation</strong>: 9 is the part of\r\nthe sequence.</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input</strong>: n = 8\r\n<strong>Output:</strong> No\r\n<strong>Explanation</strong>: 8 is not the part\r\nof the sequence</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:&nbsp;&nbsp;</strong><br />\r\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>isPart()</strong>&nbsp;which takes&nbsp;<strong>n&nbsp;</strong>as inputs and returns the answer.<br />\r\n<br />\r\n<strong>Expected Time Complexity:</strong>&nbsp;O(sqrt(n))<br />\r\n<strong>Expected Auxiliary Space:</strong>&nbsp;O(1)<br />\r\n<br />\r\n<strong>Constraints:</strong><br />\r\n1 &le; n &le; 10<sup>6</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Determine if a given number `n` is part of the series 3, 5, 9, 11, 15, 17, 21, 27, 29, ... and so on.  The series follows a pattern that alternates between adding 2 and adding 4 (with occasional additions of 6 or more).",
                "constraints": [
                    "1 <= n <= 10^6"
                ],
                "testcases": [
                    {
                        "input": "9",
                        "output": "Yes",
                        "explanation": "The number 9 is present in the sequence."
                    },
                    {
                        "input": "8",
                        "output": "No",
                        "explanation": "The number 8 is not present in the sequence."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Find the pattern in the difference between two consecutive number of the series.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "series",
                "slug": "series"
            },
            {
                "name": "logical-thinking",
                "slug": "logical-thinking"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nclass Solution{   \npublic:\n    // Function to check if a number is prime\n    string isPart(int n) { \n        n += 2;\n        // iterating up to the square root of n to check for factors\n        for(int i = 2; i * i <= n; i++){\n            // if n is divisible by i, then it is not prime\n            if(n % i == 0){\n                return \"No\";\n            }\n        }\n        // if no factors found, then it is prime\n        return \"Yes\";\n    } \n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}