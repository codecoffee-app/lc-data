{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 702859,
            "title": "Part Sort",
            "titleSlug": "part-sort2851",
            "content": "<p><span style=\"font-size: 18px;\">Given an array <strong>arr</strong> of size <strong>N</strong> and two integers <strong>l</strong> and <strong>r</strong>, the task is to sort the given array in non - decreasing order in the index range from <strong>l</strong> to <strong>r</strong>.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Example 1:</strong> </span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:\n</strong>N = 4<span style=\"font-size: 18px;\">\narr[] = {1, 5, 3, 2}\nl = 2, r = 3\n</span><span style=\"font-size: 18px;\"><strong>Output:</strong> {1, 5, 2, 3}\n<strong>Explanation</strong>: After sorting array\nwill look like {1, 5, 2, 3}</span> </span>\n</pre>\n<p><span style=\"font-size: 18px;\"><span style=\"font-size: 18px;\">&acirc;&euro;&lsaquo;<strong>Example 2:</strong> </span></span></p>\n<pre><span style=\"font-size: 18px;\"><span style=\"font-size: 18px;\"><strong>Input</strong>: </span></span><span style=\"font-size: 18px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 18px;\">\nN = 3\narr[] = {2, 3, 4}\nl = 0, r = 2\n<strong>Output:</strong> {2, 3, 4}\n<strong>Explanation</strong>: Array is already sorted</span></span></span>\n</pre>\n<p><span style=\"font-size: 18px;\"><span style=\"font-size: 18px;\"><span style=\"font-size: 18px;\"><strong>Your Task:&nbsp;&nbsp;</strong><br />You don't need to read input or print anything. Your task is to complete the function <strong>partSort()</strong>&nbsp;which takes the array <strong>arr[]</strong>, <strong>N, l </strong>and<strong> r</strong><strong> </strong>as inputs and sorts the given the array in given range.<br /><br /><strong>Expected Time Complexity:</strong> O(NlogN)<br /><strong>Expected Auxiliary Space:</strong> O(1)</span></span></span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints :</strong><br />1 &le; N &le; 10^5<br />0 &le; l, r &le; N-1</span></p>\n<p>&nbsp;</p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array `arr` of size `N` and two integers `l` and `r`, sort the subarray of `arr` from index `l` to `r` (inclusive) in non-decreasing order.",
                "constraints": [
                    "1 <= N <= 10^5",
                    "0 <= l, r <= N-1"
                ],
                "testcases": [
                    {
                        "input": "N = 4\narr[] = {1, 5, 3, 2}\nl = 2, r = 3",
                        "output": "{1, 5, 2, 3}",
                        "explanation": "The subarray from index 2 to 3 (inclusive) is {3, 2}. Sorting this subarray results in {2, 3}. Therefore, the modified array becomes {1, 5, 2, 3}."
                    },
                    {
                        "input": "N = 3\narr[] = {2, 3, 4}\nl = 0, r = 2",
                        "output": "{2, 3, 4}",
                        "explanation": "The subarray from index 0 to 2 (inclusive) is {2, 3, 4}. This subarray is already sorted in non-decreasing order, so the array remains unchanged."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>1. Use standard sort function</p>"
        ],
        "relatedTopics": [
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function template for C++\n\nclass Solution{\npublic:\n\t//Function to sort a portion of the array between indices l and r.\n\tvoid partSort(vector<int> &arr, int n, int l, int r)\n\t{\n\t\t//Swapping l and r if l is greater than r.\n\t\tif(l > r)\n\t\t\tswap(l, r);\n\n\t\t//Sorting the portion of the array between indices l and r.\n\t\tsort(arr.begin() + l, arr.begin() + r + 1);\n\t}\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            }
        ],
        "platform": "GFG"
    }
}