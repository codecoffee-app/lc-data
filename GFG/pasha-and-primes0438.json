{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704973,
            "title": "Pasha and Primes",
            "titleSlug": "pasha-and-primes0438",
            "content": "<p><span style=\"font-size:18px\">Given an array of N integers and another array R containing Q queries(of l and r). Answer all Q queries asking the number of primes in the subarray ranging from l to r (both inclusive).<br />\nNote: A is 0-based but the queries will be 1-based.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\nN=5,Q=3\nA={2,5,6,7,8}\nR={{1,3},{2,5},{3,3}}\n<strong>Output:</strong>\n2 2 0\n<strong>Explanation:</strong>\nThere are 2 primes in the range [1,3], \nwhich are 2 and 5.\nThere are 2 primes in the range [2,5],\nwhich are 5 and 7.\nThere are no primes in the range [3,3].</span></pre>\n\n<p><strong><span style=\"font-size:18px\">Example 2:</span></strong></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\nN=5,Q=3\nA={1,2,3,4,5}\nR={{1,4},{2,5},{2,3}}\n<strong>Output:</strong>\n2 3 2\n<strong>Explanation:</strong>\nThere are 2 primes in range [1,4],\nwhich are 2 and 3.\nThere are 3 primes in the range [2,5],\nwhich are 2,3 and 5.\nThere are 2 primes in the range [3,3],\nwhich are 2 and 3.</span></pre>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nYou don&#39;t need to read input or print anything. Your task is to complete the function primeRange() which takes the two numbers N and Q as well as the two arrays A and Q as input parameters and returns the answers of all Q queries.</span></p>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong>O(Max(A[i])*Log(Log (Max(A[i]) )))<br />\n<strong>Expected Auxillary Space:</strong>O(Max(A[i]))</span></p>\n\n<p><span style=\"font-size:18px\">Note:&nbsp;&nbsp;Max(A[i]) represents the maximum value in the array A</span><br />\n<span style=\"font-size:18px\"><strong>Constraints:</strong><br />\n1&lt;=N,Q,A[i]&lt;=10<sup>6</sup><br />\n1&lt;=l&lt;=r&lt;=N</span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array `A` of `N` integers and an array `R` containing `Q` queries, where each query consists of a left index `l` and a right index `r`. For each query, determine the number of prime numbers present in the subarray of `A` ranging from index `l` to `r` (inclusive). Note that the array `A` is 0-indexed, but the query indices `l` and `r` are 1-indexed.",
                "constraints": [
                    "1 <= N, Q, A[i] <= 10^6",
                    "1 <= l <= r <= N"
                ],
                "testcases": [
                    {
                        "input": "N=5, Q=3\nA=[2, 5, 6, 7, 8]\nR=[[1, 3], [2, 5], [3, 3]]",
                        "output": "2 2 0",
                        "explanation": "Query 1: Range [1, 3] (A[0] to A[2]) contains 2, 5, and 6. Primes: 2, 5. Count: 2.\nQuery 2: Range [2, 5] (A[1] to A[4]) contains 5, 6, 7, and 8. Primes: 5, 7. Count: 2.\nQuery 3: Range [3, 3] (A[2]) contains 6. Primes: None. Count: 0."
                    },
                    {
                        "input": "N=5, Q=3\nA=[1, 2, 3, 4, 5]\nR=[[1, 4], [2, 5], [2, 3]]",
                        "output": "2 3 2",
                        "explanation": "Query 1: Range [1, 4] (A[0] to A[3]) contains 1, 2, 3, and 4. Primes: 2, 3. Count: 2.\nQuery 2: Range [2, 5] (A[1] to A[4]) contains 2, 3, 4, and 5. Primes: 2, 3, 5. Count: 3.\nQuery 3: Range [2, 3] (A[1] to A[2]) contains 2 and 3. Primes: 2, 3. Count: 2."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Use sieve of erasthothenes to reduce time complexity of checking prime numbers.</span></p>",
            "<p><span style=\"font-size:18px\">Use prefix array to answer the queries.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "sieve",
                "slug": "sieve"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "// Back-end complete function Template for C++\n\nclass Solution {\n  public:\n    vector<int> primeRange(int N, int Q, vector<int> A,\n                           vector<pair<int, int>> R) {\n        int sieve[1000005] = {0};\n        int i, j;\n        sieve[0] = 1;\n        sieve[1] = 1;\n        // using sieve of erasthothenes\n        for (i = 2; i < 1000005; i++)\n            if (!sieve[i])\n                for (j = 2 * i; j < 1000005; j += i) sieve[j] = 1;\n        vector<int> temp(N + 1);\n        for (i = 0; i < N; i++)\n            if (!sieve[A[i]]) temp[i + 1] = 1;\n        // using prefix array\n        for (i = 1; i <= N; i++) temp[i] += temp[i - 1];\n        vector<int> ans;\n        for (i = 0; i < Q; i++) {\n            int l = R[i].first;\n            int r = R[i].second;\n            ans.push_back(temp[r] - temp[l - 1]);\n        }\n        return ans;\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "// Back-end complete function Template for Java\n\nclass Solution {\n    ArrayList<Integer> primeRange(int N, int Q, int A[], int R[][]) {\n        int sieve[] = new int[1000005];\n        int i, j;\n        sieve[0] = 1;\n        sieve[1] = 1;\n        // using sieve of erasthothenes\n        for (i = 2; i < 1000005; i++)\n            if (sieve[i] == 0)\n                for (j = 2 * i; j < 1000005; j += i) sieve[j] = 1;\n        int temp[] = new int[N + 1];\n        for (i = 0; i < N; i++)\n            if (sieve[A[i]] == 0) temp[i + 1] = 1;\n        // using prefix array\n        for (i = 1; i <= N; i++) temp[i] += temp[i - 1];\n        ArrayList<Integer> ans = new ArrayList<Integer>();\n        for (i = 0; i < Q; i++) {\n            int l = R[i][0];\n            int r = R[i][1];\n            ans.add(temp[r] - temp[l - 1]);\n        }\n        return ans;\n    }\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\nclass Solution:\n    def primeRange(self,N,Q,A,R):\n        sieve=[0]*1000005\n        sieve[0]=1\n        sieve[1]=1\n        #using sieve of erasthothenes\n        for i in range(2,1000005):\n            if sieve[i]==0:\n                j=2*i\n                while j<1000005:\n                    sieve[j]=1\n                    j+=i\n        temp=[0]*(N+1)\n        #using prefix array\n        for i in range(N):\n            if sieve[A[i]]==0:\n                temp[i+1]=1\n        for i in range(1,N+1):\n            temp[i]+=temp[i-1]\n        ans=[]    \n        for i in range(Q):\n            l=R[i][0]\n            r=R[i][1]\n            ans.append(temp[r]-temp[l-1])\n        return ans",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n/**\n * @param {number} N\n * @param {number} Q\n * @param {number[]} A\n * @param {number[][]} R\n * @returns {number[]}\n*/\n\nclass Solution {\n    //Function to find the prime numbers in a given range.\n    primeRange(N, Q, A, R)\n    {\n        //R is a 2D array of dimensions Qx2\n        let sieve = new Array(1000005).fill(0);\n        sieve[0] = 1;\n        sieve[1] = 1;\n        \n        //using sieve of erasthothenes\n        for(let i = 2; i < 1000005; i++) {\n            if(sieve[i] == 0) {\n                for(let j = 2 * i; j < 1000005; j += i) {\n                    sieve[j] = 1;\n                }\n            }\n        }\n        \n        let temp = new Array(N + 1).fill(0);\n        \n        //using prefix array\n        for(let i = 0; i < N; i++) {\n            if(sieve[A[i]] == 0) {\n                temp[i+1] = 1;\n            }\n        }\n        \n        for(let i = 1; i <= N; i++) {\n            temp[i] += temp[i-1];\n        }\n        \n        let ans = [];    \n        for(let i = 0; i < Q; i++) {\n            let l = R[i][0];\n            let r = R[i][1];\n            ans.push(temp[r] - temp[l-1]);\n        }\n        \n        return ans;\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}