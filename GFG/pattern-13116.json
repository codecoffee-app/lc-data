{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705598,
            "title": "Pattern-1",
            "titleSlug": "pattern-13116",
            "content": "<p><span style=\"font-size:18px\">Given a number <strong>N</strong>, identify the pattern from&nbsp; the given Examples and print the Output.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\r\n<span style=\"font-size:18px\"><strong>N = </strong>4</span>\r\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\r\n<span style=\"font-size:18px\">ABCD</span>\r\n<span style=\"font-size:18px\">E$$F</span>\r\n<span style=\"font-size:18px\">G$$H</span>\r\n<span style=\"font-size:18px\">IJKL</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\r\n<span style=\"font-size:18px\"><strong>N = </strong>6</span>\r\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\r\n<span style=\"font-size:18px\">ABCDEF</span>\r\n<span style=\"font-size:18px\">G$$$$H</span>\r\n<span style=\"font-size:18px\">I$$$$J</span>\r\n<span style=\"font-size:18px\">K$$$$L\r\nM$$$$N</span>\r\n<span style=\"font-size:18px\">OPQRST</span>\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>findThePattern()</strong> which takes an Integer N as input and returns a vector of strings where each line represents lines of the pattern. For example, if N = 4, the vector v = {&quot;ABCD&quot;, &quot;E$$F&quot;, &quot;G$$H&quot;, &quot;IJKL&quot;}.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(N)<br />\r\n<strong>Expected Auxiliary Space:</strong> O(N)</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong></span><br />\r\n<span style=\"font-size:18px\">1 &lt;= N &lt;= 6</span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an integer N, generate a pattern of strings as described below and return the result as a vector of strings.\n\nThe pattern consists of the following rules:\n\n1.  The first and last rows are strings containing the first N and last N letters of the alphabet, respectively.\n2.  The intermediate rows (if any) have the format: [Next letter of alphabet]$$$...$[Next letter of alphabet]. The number of '$' characters is N-2.\n\nFor example:\n\nIf N = 4:\n[\"ABCD\", \"E$$F\", \"G$$H\", \"IJKL\"]\n\nIf N = 6:\n[\"ABCDEF\", \"G$$$$H\", \"I$$$$J\", \"K$$$$L\", \"M$$$$N\", \"OPQRST\"]",
                "constraints": [
                    "1 <= N <= 6"
                ],
                "testcases": [
                    {
                        "input": "4",
                        "output": "[\"ABCD\", \"E$$F\", \"G$$H\", \"IJKL\"]",
                        "explanation": null
                    },
                    {
                        "input": "6",
                        "output": "[\"ABCDEF\", \"G$$$$H\", \"I$$$$J\", \"K$$$$L\", \"M$$$$N\", \"OPQRST\"]",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">The first and last line always have all characters.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "pattern-printing",
                "slug": "pattern-printing"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nclass Solution {\n  public:\n    //Function to find the pattern based on the given number N.\n    vector<string> findThePattern(int N) {\n        \n        vector<string> ans; //Initializing vector to store the pattern\n        \n        char ch = 'A'; //Initializing character variable\n        \n        for(int i=0; i<N; i++) //Looping through N times to create the pattern\n        {\n            string s; //Initializing string variable\n            \n            //If it is the first or last row of the pattern\n            if(i==0 || i==N-1)\n            {\n                for(int j=0; j<N; j++) //Looping through N times to create each row of the pattern\n                {\n                    s += ch; //Adding character 'ch' to the string\n                    ch++; //Incrementing character\n                    \n                   \n                }\n            }\n            \n            else\n            {\n                s += ch; //Adding character 'ch' to the string\n                ch ++; //Incrementing character\n                \n                for(int j=0; j<N-2; j++) //Looping through N-2 times to add '$' in the middle of the row\n                    s += '$'; //Adding '$' to the string\n                    \n                s += ch; //Adding character 'ch' to the string\n                ch ++; //Incrementing character\n            }\n            \n            ans.push_back(s); //Adding the string to the vector\n        }\n        \n        return ans; //Returning the vector of patterns\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}