{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704165,
            "title": "Pattern Printing",
            "titleSlug": "pattern-printing1347",
            "content": "<p><span style=\"font-size: 18px;\">Given a number <strong>N</strong>. The task is to print a series of asterisk(<strong>*</strong>) from <strong>1 till N</strong> terms with increasing order and difference being 1.</span></p>\n<p><strong><span style=\"font-size: 18px;\">Example 1:</span></strong></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong>\nN = 3</span>\n<span style=\"font-size: 18px;\"><strong>Output:</strong>\n* ** ***</span>\n<span style=\"font-size: 18px;\"><strong>Explanation:</strong>\nFirst, print 1 asterisk then space after\nthat print 2 asterisk and space after that \nprint 3 asterisk now stop as N is 3.</span>\n</pre>\n<p><strong><span style=\"font-size: 18px;\">Example 2:</span></strong></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong>\nN = 5</span>\n<span style=\"font-size: 18px;\"><strong>Output:</strong>\n* ** *** **** ***** </span>\n<span style=\"font-size: 18px;\"><strong>Explanation:</strong>\nFirst, print 1 asterisk then space after\nthat print 2 asterisk and space and do this\n3 more times.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Your Task:&nbsp;&nbsp;</strong><br />You don't need to read input. Your task is to complete the function&nbsp;<strong>printPattern()</strong>&nbsp;which takes an integer N as an input parameter and print the above pattern.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong>&nbsp;O(N^2)<br /><strong>Expected Auxiliary Space:</strong>&nbsp;O(1)</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &lt;= N &lt;= 1000</span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a number N, print a series of asterisks (*) from 1 to N terms. Each term should have an increasing number of asterisks, with the difference between consecutive terms being 1. Separate each term with a space.",
                "constraints": [
                    "1 <= N <= 1000"
                ],
                "testcases": [
                    {
                        "input": "3",
                        "output": "* ** ***",
                        "explanation": "Print 1 asterisk, followed by a space. Then, print 2 asterisks, followed by a space. Finally, print 3 asterisks. Since N is 3, stop here."
                    },
                    {
                        "input": "5",
                        "output": "* ** *** **** *****",
                        "explanation": "Print 1 asterisk, followed by a space. Then print 2 asterisks and space. Repeat the process by incrementing the asterisk count by 1 at each step until N=5."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Write the loops after observing the pattern.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "pattern-printing",
                "slug": "pattern-printing"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution\n{\npublic:\n    void printPattern(int N)\n    {\n        for(int i=0;i<N;i++)\n        {\n            for(int j=0;j<i+1;j++){\n                cout<<\"*\";\n            }\n            cout<<\" \"; \n        }\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution{\n    //Method to print a pattern of stars\n    static void printPattern(int N){\n        //Outer loop for rows\n        for(int i=0 ; i<N ; i++){\n            //Inner loop for columns\n            for(int j=0 ; j<i+1; j++){\n                //Print a star\n                System.out.print(\"*\");\n            }\n            //Print a space after each row\n            System.out.print(\" \");\n        }\n    }\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": null,
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "// Class definition for Solution\nclass Solution {\n  \n  // Function to print the pattern\n  printPattern(N) {\n    let pat = \"*\"; // Initialize a variable with a star pattern\n    let s = \"\"; // Initialize an empty string\n    for (let i = 0; i < N; i++) { // Loop to iterate N times\n      s += pat; // Concatenate the pattern to the string\n      s += \" \"; // Add a space after each pattern\n      pat += \"*\"; // Add an extra star to the pattern\n    }\n    console.log(s); // Print the final string\n  }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}