{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704478,
            "title": "Pell Number",
            "titleSlug": "pell-number1424",
            "content": "<p><span style=\"font-size:18px\">Pell numbers are numbers that are similar to the Fibonacci numbers and are generated by below formula<br />\r\nP<sub>n</sub> = 2*P<sub>n-1</sub> + P<sub>n-2</sub><br />\r\nwith seeds P<sub>0</sub> = 0 and P<sub>1</sub> = 1<br />\r\nYour task is to print Nth pell number.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\r\n<span style=\"font-size:18px\"><strong>N = </strong>3</span>\r\n<strong><span style=\"font-size:18px\">Output:</span></strong>\r\n<span style=\"font-size:18px\">5</span>\r\n<span style=\"font-size:18px\"><strong>Explanation:</strong></span>\r\n<span style=\"font-size:18px\">P<sub>0</sub> = 0, P<sub>1</sub> = 1, P<sub>2</sub> = 2*1+0 = 2,\r\nP<sub>3</sub> = 2*2+1 = 5</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\r\n<span style=\"font-size:18px\"><strong>N = </strong>4</span>\r\n<strong><span style=\"font-size:18px\">Output:</span></strong>\r\n<span style=\"font-size:18px\">12</span>\r\n<span style=\"font-size:18px\"><strong>Explanation:</strong></span>\r\n<span style=\"font-size:18px\">P<sub>0</sub> = 0, P<sub>1</sub> = 1, P<sub>2</sub> = 2*1+0 = 2,\r\nP<sub>3</sub> = 2*2+1 = 5, P<sub>4</sub> = 2*5+2 = 12</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>getNthPell()</strong> which takes an Integer N as input and returns the answer modulo (10<sup>9</sup>+7).</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(N)<br />\r\n<strong>Expected Auxiliary Space:</strong> O(N)</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong></span><br />\r\n<span style=\"font-size:18px\">1 &lt;= N &lt;= 10<sup>5</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given the recurrence relation for Pell numbers: P(n) = 2*P(n-1) + P(n-2), with initial values P(0) = 0 and P(1) = 1, your task is to calculate the Nth Pell number. Return the result modulo (10^9 + 7).",
                "constraints": [
                    "1 <= N <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "3",
                        "output": "5",
                        "explanation": "The Pell sequence starts with P(0) = 0, P(1) = 1. Then, P(2) = 2*P(1) + P(0) = 2*1 + 0 = 2. Finally, P(3) = 2*P(2) + P(1) = 2*2 + 1 = 5."
                    },
                    {
                        "input": "4",
                        "output": "12",
                        "explanation": "Following the same pattern: P(0) = 0, P(1) = 1, P(2) = 2, P(3) = 5.  Therefore, P(4) = 2*P(3) + P(2) = 2*5 + 2 = 12."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Make an Array of size N+1. Initialize the 0th and 1st term as 0 and 1. And keep on calculating from 2 to N.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\r\n\r\nclass Solution {\r\n  public:\r\n    long long getNthPell(int N) {\r\n        \r\n        long long pell[N+1];\r\n        \r\n        // Initilaizing 0th and 1st pell numbers.\r\n        pell[0] = 0;\r\n        pell[1] = 1;\r\n        \r\n        // Calculating every pell number to N\r\n        for(int i=2 ; i<=N ; i++)\r\n            pell[i] = (2*pell[i-1] + pell[i-2]) % 1000000007;\r\n            \r\n        return pell[N];\r\n    }\r\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution {\n    // Function to calculate the Nth Pell number\n    static Long getNthPell(int N) {\n        // Array to store the Pell numbers\n        Long[] pell = new Long[N+1];\n        \n        // Initializing the first two Pell numbers\n        pell[0] = 0L;\n        pell[1] = 1L;\n        \n        // Calculating the remaining Pell numbers up to N\n        for(int i=2 ; i<=N ; i++)\n            pell[i] = (2*pell[i-1] + pell[i-2]) % 1000000007;\n            \n        // Returning the Nth Pell number\n        return pell[N];\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\r\n\r\nclass Solution:\r\n    def getNthPell(self, N):\r\n        \r\n        pell = [0]*(N+1)\r\n        \r\n        # Initilaizing 0th and 1st pell numbers.\r\n        pell[0] = 0\r\n        pell[1] = 1\r\n        \r\n        # Calculating every pell number to N\r\n        for i in range(2,N+1):\r\n            pell[i] = (2*pell[i-1] + pell[i-2]) % 1000000007\r\n            \r\n        return pell[N]",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n/**\n * @param {number} N\n * @returns {number}\n*/\n\nclass Solution {\n    //Function to calculate the Nth pell number.\n    getNthPell(N) {\n        let pell = new Array(N+1).fill(0);\n        \n        // Initializing 0th and 1st pell numbers.\n        pell[0] = 0;\n        pell[1] = 1;\n        \n        // Calculating every pell number up to N.\n        for(let i=2; i<=N; i++){\n            pell[i] = (2*pell[i-1] + pell[i-2]) % 1000000007;\n        }\n        \n        return pell[N];\n    }\n}",
                "lang_text": "javascript"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    public long getNthPell(int N)\n    {\n        long[] pell = new long[N + 1];\n        \n        // Initilaizing 0th and 1st pell numbers.\n        pell[0] = 0;\n        pell[1] = 1;\n        \n        // Calculating every pell number to N\n        for(int i = 2 ; i <= N ; i++)\n            pell[i] = (2 * pell[i - 1] + pell[i - 2]) % 1000000007;\n            \n        return pell[N];\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}