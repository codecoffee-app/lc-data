{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 702680,
            "title": "Palindrome Array",
            "titleSlug": "perfect-arrays4645",
            "content": "<p><span style=\"font-size: 18px;\">Given an array <strong>arr</strong>, the task is to find whether the <strong>arr</strong> is&nbsp;</span><span style=\"font-size: 18px;\">palindrome</span><span style=\"font-size: 18px;\"> or not.&nbsp;</span><span style=\"font-size: 18px;\">If the&nbsp;</span><strong style=\"font-size: 18px;\">arr&nbsp;</strong><span style=\"font-size: 18px;\">is palindrome then return</span><strong style=\"font-size: 18px;\">&nbsp;true&nbsp;</strong><span style=\"font-size: 18px;\">else return</span><strong style=\"font-size: 18px;\"> false.</strong></p>\n<blockquote>\n<p><span style=\"font-size: 18px;\">An array is said to be&nbsp;</span><span style=\"font-size: 18px;\">palindrome</span><span style=\"font-size: 18px;\"> if its reverse array matches the original array.&nbsp;</span></p>\n</blockquote>\n<p><span style=\"font-size: 18px;\"><strong>Examples:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr = [1, 2, 3, 2, 1]\n<strong>Output:</strong> true\n<strong>Explanation: </strong>Here we can see we have [1, 2, 3, 2, 1] if we reverse it we can find [1, 2, 3, 2, 1] which is the same as before. So, the answer is <strong>true</strong>.\n</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr = [1, 2, 3, 4, 5]\n<strong>Output:</strong> false<br /><strong style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Explanation: </strong>Here we can see we have [1, 2, 3, 4, 5] if we reverse it we find [5, 4, 3, 2, 1] which is the not same as before. So, the answer <strong style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">false</strong><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">.</span></span><span style=\"font-size: 18px;\"><br /></span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong> O(n)<br /><strong>Expected Auxiliary Space:</strong> O(1)</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &le; arr.size &le; 10<sup>6</sup><br />1 &le; arr[i] &le; 10<sup>9</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array `arr`, determine if it is a palindrome. An array is a palindrome if it reads the same forwards and backward.",
                "constraints": [
                    "1 <= arr.length <= 10^6",
                    "1 <= arr[i] <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "[1, 2, 3, 2, 1]",
                        "output": "true",
                        "explanation": "The array [1, 2, 3, 2, 1] is a palindrome because its reverse, [1, 2, 3, 2, 1], is the same as the original."
                    },
                    {
                        "input": "[1, 2, 3, 4, 5]",
                        "output": "false",
                        "explanation": "The array [1, 2, 3, 4, 5] is not a palindrome because its reverse, [5, 4, 3, 2, 1], is different from the original."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Reverse the array and check whether it is equal or not.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    bool isPerfect(vector<int> &arr) {\n        int n = arr.size();\n        // iterating over the first half of the array.\n        for (int i = 0; i < n / 2; i++) {\n            // checking if the element at current index is equal to the element\n            // at index n - i - 1, if not then array is not perfect and we return false.\n            if (arr[i] != arr[n - i - 1])\n                return false;\n        }\n        // if all elements in the array are equal to their corresponding elements from\n        // opposite end, then the array is perfect and we return true.\n        return true;\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n    public static boolean isPerfect(int[] arr) {\n        int n = arr.length;\n        // Checking elements from both ends of the array\n        for (int i = 0; i < n / 2; i++) {\n            // If any two elements are not equal, array is not perfect\n            if (arr[n - i - 1] != arr[i]) return false;\n        }\n        // If all elements checked and they are equal, array is perfect\n        return true;\n    }\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": "from typing import List\n\n\nclass Solution:\n\n    def isPerfect(self, arr: List[int]) -> bool:\n        n = len(arr)\n        #loop through half of the array\n        for i in range(0, n // 2):\n            #check if the element at the current index is equal to the element at the opposite index\n            if (arr[n - i - 1] != arr[i]):\n                #return False if the elements are not equal\n                return False\n        #return True if all elements are equal\n        return True\n",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "\nclass Solution {\n    /**\n    * @param number n - the length of the array\n    * @param number[] arr - the input arr\n\n    * @returns boolean\n    */\n    isPerfect(arr) {\n        let n = arr.length;\n        for (let i = 0; i < n / 2; i++) {\n            if (arr[i] !== arr[n - i - 1])\n                return false; // If elements at symmetric positions are not equal,\n                              // return false\n        }\n        return true; // If all elements are symmetric, return true\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}