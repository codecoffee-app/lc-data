{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704974,
            "title": "Perfect Cubes in a Range",
            "titleSlug": "perfect-cubes-in-a-range3933",
            "content": "<p><span style=\"font-size:18px\">Given two given numbers a and b where 1&lt;= <strong>a</strong> &lt;= <strong>b</strong>, find the&nbsp;perfect cubes&nbsp;between a and b (a and b inclusive).</span></p>\n\n<p><strong><span style=\"font-size:18px\">Example 1:</span></strong></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong> a = 1, b = 100\n<strong>Output:</strong> 1 8 27 64\n<strong>Explaination:</strong> These are the proper cubes between \n1 and 100.</span></pre>\n\n<p><strong><span style=\"font-size:18px\">Example 2:</span></strong></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong> a = 24, b = 576\n<strong>Output:</strong> 27 64 125 216 343 512\n<strong>Explaination:</strong> These are the proper cubes between \n24 and 576.</span></pre>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nYou do not need to read input or print anything. Your task is to complete the function <strong>properCubes()</strong> which takes a and b as input parameters and returns the proper cubes between a and b. The function returns -1 if there is no proper cube between the given values.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(cuberoot(b))<br />\n<strong>Expected Auxiliary Space:</strong> O(1)</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\n1 &le; a &le; b &le; 10<sup>4</sup></span>&nbsp;</p>\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two integers `a` and `b` where 1 <= `a` <= `b`, find all perfect cubes between `a` and `b` (inclusive). Return -1 if no perfect cubes exist within the range.",
                "constraints": [
                    "1 <= a <= b <= 10^4"
                ],
                "testcases": [
                    {
                        "input": "a = 1, b = 100",
                        "output": "1 8 27 64",
                        "explanation": "The perfect cubes between 1 and 100 are 1 (1^3), 8 (2^3), 27 (3^3), and 64 (4^3)."
                    },
                    {
                        "input": "a = 24, b = 576",
                        "output": "27 64 125 216 343 512",
                        "explanation": "The perfect cubes between 24 and 576 are 27 (3^3), 64 (4^3), 125 (5^3), 216 (6^3), 343 (7^3), and 512 (8^3)."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Find out which numbers between a and b are proper cubes.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "// Back-end complete function Template for C++\n\nclass Solution{\npublic:\n    // Function to find all the proper cubes within the given range.\n    vector<int> properCubes(int a, int b){\n        // Finding the cube root of 'a' and 'b'.\n        int x = cbrt(a), y = cbrt(b);\n        vector<int> ans;\n        // Iterating from x to y+1 to check for proper cubes.\n        for(int i = x;i <= y+1;i++){\n            // If i^3 is within the given range, adding it to the answer vector.\n            if(i*i*i >= a && i*i*i <= b)\n                ans.emplace_back(i*i*i);\n        }\n        // If no proper cubes are found, adding -1 to the answer vector.\n        if(ans.size() == 0)\n            ans.emplace_back(-1);\n        return ans;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    //Function to find all proper cubes between the given range.\n    public List<int> properCubes(int a, int b)\n    {\n        // Finding the cube root of 'a' and 'b'.\n        int x = (int)Math.Ceiling(Math.Pow(a, 1.0/3.0));\n        int y = (int)Math.Floor(Math.Pow(b, 1.0/3.0));\n        List<int> ans = new List<int>();\n        \n        // Iterating from x to y+1 to check for proper cubes.\n        for(int i = x;i <= y+1;i++)\n        {\n            // If i^3 is within the given range, adding it to the answer list.\n            if(i*i*i >= a && i*i*i <= b)\n                ans.Add(i*i*i);\n        }\n        \n        // If no proper cubes are found, adding -1 to the answer list.\n        if(ans.Count == 0)\n            ans.Add(-1);\n        \n        return ans;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}