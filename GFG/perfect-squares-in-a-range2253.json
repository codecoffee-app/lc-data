{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704925,
            "title": "Perfect Squares in a Range",
            "titleSlug": "perfect-squares-in-a-range2253",
            "content": "<p><span style=\"font-size: 18px;\">Given two given numbers <strong>a</strong> and <strong>b</strong> where 1&lt;=a&lt;=b, find the number of perfect squares between a and b (a and b inclusive).</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Example:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong></span><span style=\"font-size: 18px;\">a = 3, b = 8</span>\n<span style=\"font-size: 18px;\"><strong><span style=\"font-size: 18px;\">Output:</span> </strong></span><span style=\"font-size: 18px;\">1</span>\n<span style=\"font-size: 18px;\"><strong><span style=\"font-size: 18px;\">Explanation:</span> </strong></span><span style=\"font-size: 18px;\">There is only 1 perfect square between 3 and 8. i.e. 4</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong style=\"font-size: 18px;\">Input:</strong> </span><span style=\"font-size: 18px;\">a = 9, b = 25</span>\n<span style=\"font-size: 18px;\"><strong><span style=\"font-size: 18px;\">Output:</span> </strong></span><span style=\"font-size: 18px;\">3</span>\n<span style=\"font-size: 18px;\"><strong><span style=\"font-size: 18px;\">Explanation:</span> </strong></span><span style=\"font-size: 18px;\">There are 3 perfect squares between 9 and 25. i.e. 9, 16, and 25.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong></span><br /><span style=\"font-size: 18px;\">1 &lt;= a &lt;= b &lt;= 10<sup>5</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two integers `a` and `b`, where 1 <= a <= b <= 10^5, find the number of perfect squares between `a` and `b` (inclusive).",
                "constraints": [
                    "1 <= a <= b <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "a = 3, b = 8",
                        "output": "1",
                        "explanation": "The only perfect square between 3 and 8 (inclusive) is 4."
                    },
                    {
                        "input": "a = 9, b = 25",
                        "output": "3",
                        "explanation": "The perfect squares between 9 and 25 (inclusive) are 9, 16, and 25. Therefore, the count is 3."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">A Linear Solution (O(n)) won&#39;t work and will exceed time limits.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "wipro"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    // Function to count the number of perfect squares between a and b\n    int numOfPerfectSquares(int a, int b) {\n        // Return the difference between the floor of the square root of b and the ceil of the square root of a, plus one\n        return (floor(sqrt(b)) - ceil(sqrt(a)) + 1); \n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\nclass Solution {\n    // function to count the number of perfect squares between 'a' and 'b'\n    static int numOfPerfectSquares(int a, int b) {\n        // calculating the number of perfect squares by taking the difference between the floor of square root of 'b' and the ceiling of square root of 'a' and adding 1\n        return (int)(Math.floor(Math.sqrt(b)) - Math.ceil(Math.sqrt(a)) + 1);\n    }\n};",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\nclass Solution:\n    #Function to find the number of perfect squares between two given integers.\n    def numOfPerfectSquares(self, a, b):\n        return (math.floor(math.sqrt(b)) - math.ceil(math.sqrt(a)) + 1)",
                "lang_text": "py"
            },
            {
                "lang": "C#",
                "full_func": "class Solution\n{\n    public int numOfPerfectSquares(int a, int b)\n    {\n        int count = 0;\n        for (int i = a; i <= b; i++)\n        {\n            if (isPerfectSquare(i))\n            {\n                count++;\n            }\n        }\n        return count;\n    }\n    \n    private bool isPerfectSquare(int num)\n    {\n        int sqrt = (int)Math.Sqrt(num);\n        return sqrt * sqrt == num;\n    }\n}",
                "lang_text": "csharp"
            },
            {
                "lang": "Javascript",
                "full_func": "class Solution {\n    numOfPerfectSquares( a,  b) {\n        return (Math.floor(Math.sqrt(b)) - Math.ceil(Math.sqrt(a)) + 1); // Calculate the number of perfect squares between 'a' and 'b' (inclusive) using the formula: square root of 'b' rounded down minus square root of 'a' rounded up plus 1.\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}