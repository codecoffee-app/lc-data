{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 702867,
            "title": "Permutations in array",
            "titleSlug": "permutations-in-array1747",
            "content": "<p><span style=\"font-size: 18px;\">Given two arrays <strong>arr1[]</strong>, <strong>arr2[]</strong>, and an integer <strong>k</strong>. The task is to check if after permuting both arrays in such a way, we get the sum of their corresponding element greater than or equal to <strong>k</strong> i.e. <strong>arr1<sub>i</sub> + arr2<sub>i</sub> &gt;= k </strong>for all i (from <strong>0</strong> to <strong>n-1</strong>). Return <strong>true</strong> if possible, else <strong>false</strong>.</span>&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Examples:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>k = 10, arr1[] = [2, 1, 3], arr2[] = [7, 8, 9]. \n<strong>Output: </strong>true\n<strong>Explanation: </strong>Permutation  arr1[] = [1, 2, 3] and arr2[] = [9, 8, 7] satisfy the condition arr1[i] + arr2[i] &gt;= k</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>k = 5, arr1[] = [1, 2, 2, 1], arr2[] = [3, 3, 3, 4].\n<strong>Output: </strong>false</span>\n<span style=\"font-size: 18px;\"><strong><span style=\"font-size: 18px;\">Explanation:</span> </strong></span><span style=\"font-size: 18px;\">Since any permutation won't give the answer.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong> O(n*log(n))<br /><strong>Expected Auxiliary Space:</strong> O(1)</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &le; arr.size() &le; 10<sup>5</sup></span><br /><span style=\"font-size: 18px;\">0 &le; k &le; 10<sup>5</sup><br />0 &le; arr1<sub>i</sub>, arr2<sub>i</sub> &le; 2*10<sup>5</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p>The idea is to pair up elements in such a way that it barely passes the condition <strong>arr1[i]</strong> + <strong>arr2[j]</strong> &gt;= <strong>k</strong>. If still, you cannot pair up <strong>sum</strong>&gt;=<strong>k</strong> then return false.&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    bool isPossible(int k, vector<int> &arr1, vector<int> &arr2) {\n        int n = arr1.size();\n        sort(arr1.begin(), arr1.end());\n        sort(arr2.rbegin(), arr2.rend());\n\n        for (int i = 0; i < n; i++) {\n            if (arr1[i] + arr2[i] < k) {\n                return false;\n            }\n        }\n        return true;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution {\n    public boolean isPossible(int k, int[] arr1, int[] arr2) {\n        Arrays.sort(arr1);\n        Arrays.sort(arr2);\n        int n = arr1.length;\n\n        for (int i = 0; i < n; i++) {\n            if (arr1[i] + arr2[n - 1 - i] < k) {\n                return false;\n            }\n        }\n        return true;\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "class Solution:\n\n    def isPossible(self, k, arr1, arr2):\n        arr1.sort()\n        arr2.sort(reverse=True)\n\n        for a, b in zip(arr1, arr2):\n            if a + b < k:\n                return False\n        return True\n",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "//Back-end complete function Template for javascript\nclass Solution {\n    isPossible(k, arr1, arr2) {\n        let n = arr1.length;\n        arr1.sort((a, b) => a - b);\n        arr2.sort((a, b) => b - a);\n\n        for (let i = 0; i < n; i++) {\n            if (arr1[i] + arr2[i] < k) {\n                return false;\n            }\n        }\n        return true;\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}