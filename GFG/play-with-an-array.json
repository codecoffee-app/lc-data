{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 700542,
            "title": "Play with an array",
            "titleSlug": "play-with-an-array",
            "content": "<p><span >Given an unsorted array <strong>arr</strong>, rearrange the array elements such that the number at the <strong>odd</strong> index is greater than the number at the <strong>previous even</strong> index.</span></p>\n<p><span ><strong>Note: </strong></span><span >If the array can be rearranged according to condition, then return true else return false.</span></p>\n<p><span ><strong>Examples:</strong></span></p>\n<pre><span ><strong>Input:</strong> arr[] = [5, 4, 3, 2, 1]\n<strong>Output:</strong> true\n<strong>Explanation: </strong>The given array after modification will be as such: 4 5 2 3 1.\n</span></pre>\n<pre><span ><strong>Input:</strong> arr[] = [4, 3, 1, 1]\n<strong>Output:</strong> false<br /></span><strong style=\"font-size: 14pt; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Explanation: </strong><span style=\"font-size: 14pt; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">The given array cannot be modified.</span></pre>\n<p><strong><span style=\"font-size: 14pt; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Expected Time Complexity:</span></strong><span style=\"font-size: 14pt; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\"> O(nlogn</span><span style=\"font-size: 14pt; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">)<br /><strong>Expected Auxilary Space:&nbsp;</strong>O(1)<br /></span></p>\n<p><span ><strong>Constraints:</strong><br />1 &lt;= arr.size() &lt;= 10<sup>5</sup><br />1 &lt;= arr[i] &lt;= 10<sup>6</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an unsorted array `arr`, rearrange the array elements such that the element at each odd index is greater than the element at the preceding even index. Determine if the array can be rearranged to satisfy this condition.",
                "constraints": [
                    "1 <= arr.length <= 10^5",
                    "1 <= arr[i] <= 10^6"
                ],
                "testcases": [
                    {
                        "input": "[5, 4, 3, 2, 1]",
                        "output": "true",
                        "explanation": "The array can be rearranged to [4, 5, 2, 3, 1], where each element at an odd index is greater than its preceding even index element."
                    },
                    {
                        "input": "[4, 3, 1, 1]",
                        "output": "false",
                        "explanation": "It is not possible to rearrange this array such that every element at an odd index is greater than the element at the previous even index."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span >Any two numbers that are different can be rearranged as per the condition.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "// Function to format the array\nclass Solution {\n  public:\n    string formatArray(vector<int> &arr) {\n        // Loop through the array,\n        int n = arr.size();\n        sort(arr.begin(), arr.end());\n        int count = 1;\n        int cur = arr[n - 1];\n        for (int i = n - 2; i >= 0; i--) {\n            if (cur == arr[i]) {\n                count++;\n            } else {\n                count--;\n                if (count == 0) {\n                    count = 1;\n                    cur = arr[i];\n                }\n            }\n        }\n\n        if (count <= 1) {\n            return \"true\";\n        } else {\n            return \"false\";\n        }\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution {\n\n    // Function to format the array by swapping elements in pairs.\n    String formatArray(int[] arr) {\n        // Looping through the array with a step size of 2.\n        int n = arr.length;\n        Arrays.sort(arr);\n        int count = 1;\n        int cur = arr[n - 1];\n        for (int i = n - 2; i >= 0; i--) {\n            if (cur == arr[i]) {\n                count++;\n            } else {\n                count--;\n                if (count == 0) {\n                    count = 1;\n                    cur = arr[i];\n                }\n            }\n        }\n\n        if (count <= 1) {\n            return \"true\";\n        } else {\n            return \"false\";\n        }\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "# Given a function that takes an array 'a' and an integer 'n'\nclass Solution:\n\n    def formatArray(self, arr):\n        # Loop through the array from index 1 to n with a step of 2\n        arr.sort()\n        n = len(arr)\n        count = 1\n        cur = arr[-1]\n\n        # Loop through the array from the second last element to the first\n        for i in range(n - 2, -1, -1):\n            if cur == arr[i]:\n                count += 1\n            else:\n                count -= 1\n                if count == 0:\n                    count = 1\n                    cur = arr[i]\n\n        if count <= 1:\n            return \"true\"\n        else:\n            return \"false\"\n",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "// User function Template for javascript\n\nclass Solution {\n    formatArray(arr) {\n        // code here\n        arr.sort((a, b) => a - b);\n        const n = arr.length;\n        let count = 1;\n        let cur = arr[n - 1];\n\n        // Loop through the array from the second last element to the first\n        for (let i = n - 2; i >= 0; i--) {\n            if (cur === arr[i]) {\n                count++;\n            } else {\n                count--;\n                if (count === 0) {\n                    count = 1;\n                    cur = arr[i];\n                }\n            }\n        }\n\n        if (count <= 1) {\n            return \"true\";\n        } else {\n            return \"false\";\n        }\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}