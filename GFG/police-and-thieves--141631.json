{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705822,
            "title": "Police and Thieves",
            "titleSlug": "police-and-thieves--141631",
            "content": "<p><span style=\"font-size: 18px;\">Given an array <strong>arr[]</strong>, where each element contains either a <strong>'P'</strong> for policeman or a <strong>'T'</strong> for thief. Find the <strong>maximum number of thieves </strong>that can be caught by the police.&nbsp;<br />Keep in mind the following conditions :</span></p>\n<ol>\n<li><span style=\"font-size: 18px;\">Each policeman can catch only one thief.</span></li>\n<li><span style=\"font-size: 18px;\">A policeman cannot catch a thief who is more than <strong>k</strong> units away from him.</span></li>\n</ol>\n<p><strong><span style=\"font-size: 18px;\">Examples:</span></strong></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr[] = [P, T, T, P, T], k = 1\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> Maximum 2 thieves can be caught. First policeman catches first thief and second police man can catch either second or third thief.</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr[] = [T, T, P, P, T, P], k = 2\n<strong>Output:</strong> 3\n<strong>Explanation: </strong>Maximum 3 thieves can be caught.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &le; arr.size() &le; 10<sup>5</sup><br />1 &le; k &le; 1000<br />arr[i] = 'P' or 'T'</span></p>",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array `arr[]` containing 'P' (policeman) and 'T' (thief), find the maximum number of thieves that can be caught by the police, subject to the following conditions:\n\n1. Each policeman can catch only one thief.\n2. A policeman can only catch a thief within a distance of `k` units from them.",
                "constraints": [
                    "1 <= arr.size() <= 10^5",
                    "1 <= k <= 1000",
                    "arr[i] = 'P' or 'T'"
                ],
                "testcases": [
                    {
                        "input": "arr[] = [P, T, T, P, T], k = 1",
                        "output": "2",
                        "explanation": "The first policeman catches the first thief. The second policeman can catch either the second or third thief. Therefore, a maximum of 2 thieves can be caught."
                    },
                    {
                        "input": "arr[] = [T, T, P, P, T, P], k = 2",
                        "output": "3",
                        "explanation": "A maximum of 3 thieves can be caught."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">If traversing from the left assigning each thief to the leftmost idle&nbsp;police will lead to the optimal solution. Don&#39;t you think?</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "microsoft"
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nclass Solution {\n  public:\n    int catchThieves(vector<char> &arr, int k) {\n        int n = arr.size();\n\n        // Two pointers for policemen and thieves\n        int i = 0, j = 0;\n        int count = 0;\n\n        while (i < n && j < n) {\n\n            // Move i to the next policeman\n            while (i < n && arr[i] != 'P')\n                i++;\n\n            // Move j to the next thief\n            while (j < n && arr[j] != 'T')\n                j++;\n\n            // If both policeman and thief exist and are within range k\n            if (i < n && j < n && abs(i - j) <= k) {\n\n                // Catch the thief\n                count++;\n\n                // Move to the next policeman\n                i++;\n\n                // Move to the next thief\n                j++;\n            }\n\n            // If the thief is too far left, move the thief pointer\n            else if (j < n && j < i) {\n                j++;\n            }\n\n            // If the policeman is too far left,\n            // move the policeman pointer\n            else if (i < n && i < j) {\n                i++;\n            }\n        }\n        return count;\n    }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n    public int catchThieves(char[] arr, int k) {\n        int n = arr.length;\n\n        // Two pointers for policemen and thieves\n        int i = 0, j = 0;\n        int count = 0;\n\n        while (i < n && j < n) {\n\n            // Move i to the next policeman\n            while (i < n && arr[i] != 'P') i++;\n\n            // Move j to the next thief\n            while (j < n && arr[j] != 'T') j++;\n\n            // If both policeman and thief exist\n            // and are within range k\n            if (i < n && j < n && Math.abs(i - j) <= k) {\n\n                // Catch the thief\n                count++;\n\n                // Move to the next policeman\n                i++;\n\n                // Move to the next thief\n                j++;\n            }\n\n            // If the thief is too far left,\n            // move the thief pointer\n            else if (j < n && j < i) {\n                j++;\n            }\n\n            // If the policeman is too far left,\n            // move the policeman pointer\n            else if (i < n && i < j) {\n                i++;\n            }\n        }\n        return count;\n    }\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "def catchThieves(arr, k):\n    n = len(arr)\n\n    # Two pointers for policemen and thieves\n    i, j = 0, 0\n    count = 0\n\n    while i < n and j < n:\n\n        # Move i to the next policeman\n        while i < n and arr[i] != 'P':\n            i += 1\n\n        # Move j to the next thief\n        while j < n and arr[j] != 'T':\n            j += 1\n\n        # If both policeman and thief exist\n        # and are within range k\n        if i < n and j < n and abs(i - j) <= k:\n\n            # Catch the thief\n            count += 1\n\n            # Move to the next policeman\n            i += 1\n\n            # Move to the next thief\n            j += 1\n\n        # If the thief is too far left,\n        # move the thief pointer\n        elif j < n and j < i:\n            j += 1\n\n        # If the policeman is too far left,\n        # move the policeman pointer\n        elif i < n and i < j:\n            i += 1\n\n    return count\n",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "const catchThieves = (arr, k) => {\n    let n = arr.length;\n\n    // Two pointers for policemen and thieves\n    let i = 0, j = 0;\n    let count = 0;\n\n    while (i < n && j < n) {\n\n        // Move i to the next policeman\n        while (i < n && arr[i] !== 'P') i++;\n\n        // Move j to the next thief\n        while (j < n && arr[j] !== 'T') j++;\n\n        // If both policeman and thief exist and are within range k\n        if (i < n && j < n && Math.abs(i - j) <= k) {\n\n            // Catch the thief\n            count++;\n\n            // Move to the next policeman\n            i++;\n\n            // Move to the next thief\n            j++;\n        }\n\n        // If the thief is too far left, move the thief pointer\n        else if (j < n && j < i) {\n            j++;\n        }\n\n        // If the policeman is too far left, move the policeman pointer\n        else if (i < n && i < j) {\n            i++;\n        }\n    }\n    return count;\n};",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}