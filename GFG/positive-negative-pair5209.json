{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 701762,
            "title": "Positive Negative Pair",
            "titleSlug": "positive-negative-pair5209",
            "content": "<p><span style=\"font-size:18px\">Given an array of distinct integers, find all the pairs having both negative and positive values of a number in the array.</span></p>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:\r\n</strong>n = 8\r\narr[] = {1,3,6,-2,-1,-3,2,7}\r\n<strong>Output: </strong>-1 1 -3 3 -2 2<strong>\r\nExplanation: </strong>1, 3 and 2 are present \r\npairwise positive and negative. 6 and \r\n7 have no pair.</span>\r\n</pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:\r\n</strong>n = 3\r\narr[] = {3,2,1}\r\n<strong>Output: </strong>0<strong>\r\nExplanation: </strong>No such pair exists so the \r\noutput is 0.</span></pre>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou do not need to read input or print anything. Complete the function <strong>findPairs()</strong> which takes the array A[] and the size of the array, n, as input parameters and returns a&nbsp;list&nbsp;of integers denoting the pairs. The pair that appears first(i.e. second element of the pair appears first)&nbsp;in A[] should appear first in the returning list and within the pair, the negative integer should appear before the positive integer. Return an empty integer list if no such pair exists. </span></p>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Expected Time Complexity: </strong>O(n)<br />\r\n<strong>Expected Auxiliary Space:</strong> O(n)</span></p>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n1 &lt;= n&nbsp;&lt;= 10<sup>6</sup><br />\r\n-10<sup>6</sup> &lt;= arr[i] &lt;= 10<sup>6</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of distinct integers, find all pairs where both the negative and positive values of a number are present in the array. Return the pairs in the order they appear in the original array, with the negative value preceding the positive value in each pair.",
                "constraints": [
                    "1 <= n <= 10^6",
                    "-10^6 <= arr[i] <= 10^6"
                ],
                "testcases": [
                    {
                        "input": "n = 8\narr[] = {1,3,6,-2,-1,-3,2,7}",
                        "output": "-1 1 -3 3 -2 2",
                        "explanation": "The numbers 1, 3, and 2 each have both positive and negative counterparts within the input array.  The output lists these pairs with the negative number first."
                    },
                    {
                        "input": "n = 3\narr[] = {3,2,1}",
                        "output": "0",
                        "explanation": "No number in the input array has both a positive and negative representation. Therefore, the output is 0."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            ""
        ],
        "relatedTopics": [
            {
                "name": "Hash",
                "slug": "hash"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [
            "amazon"
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "// Back-end complete function tempalte for C++\r\n\r\nclass Solution{\r\n  public:\r\n    //Function to return list containing all the pairs having both\r\n    //negative and positive values of a number in the array.\r\n    vector <int> findPairs(int arr[], int n) \r\n    { \r\n    \tvector<int> result; \r\n    \t//using map to store the count of absolute value of numbers.\r\n    \tunordered_map<int, int> ump; \r\n    \r\n        //iterating over the array.\r\n    \tfor (int i = 0; i < n; i++) { \r\n    \t    \r\n    \t    //if the count of absolute value of current element is 0 in\r\n    \t    //map, we store that element in map with 1 as count.\r\n    \t    ump[arr[i]] = 1; \r\n    \t\tif (ump[-1*arr[i]] == 0 || arr[i]==0) {\r\n    \t\t\tump[arr[i]] = 1; \r\n    \t\t}\r\n            //else the absolute value of current element is present twice \r\n            //so the pair of positive and negative number is present.\r\n    \t\telse { \r\n    \t\t    \r\n    \t\t    //we store the pair in the list.\r\n    \t\t\tresult.push_back((-1)*abs(arr[i])); \r\n    \t\t\tresult.push_back(abs(arr[i])); \r\n    // \t\t\tump[abs(arr[i])] = 0;\r\n    \r\n    \t\t} \r\n    \t} \r\n    \t//returning the list.\r\n    \treturn result;\r\n    }\r\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution\r\n{\r\n    //Function to return list containing all the pairs having both\r\n    //negative and positive values of a number in the array.\r\n    public static ArrayList<Integer>findPairs(int arr[], int n) \r\n    { \r\n    \t// code here.\r\n    \t ArrayList<Integer> res=new ArrayList<Integer>();\r\n\t\t  HashMap<Integer,Integer> map=new HashMap<Integer, Integer>();\r\n\t\t  for(int i=0;i<n;i++) {\r\n\t\t\t  map.put(arr[i],1);\r\n\t\t\t  if(!map.containsKey(-1*arr[i]) || arr[i]==0) {\r\n\t\t\t\t  map.put(arr[i], 1);\t\r\n\t\t\t  }\r\n\t\t\t  else {\r\n\t\t\t\t  res.add(-1*Math.abs(arr[i]));\r\n\t\t\t\t  res.add(Math.abs(arr[i]));\r\n\t\t\t  }\r\n\t\t  }\r\n\t\t  return res;\r\n    }\r\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "class Solution {\r\n    // Function to return list containing all the pairs having both\r\n    // negative and positive values of a number in the array.\r\n    findPairs(arr, n) {\r\n        let res = []; // Initialize an empty array to store the pairs.\r\n        let map = new Map(); // Create a new map to store the elements.\r\n        \r\n        for (let i = 0; i < n; i++) { // Iterate through the array.\r\n            map.set(arr[i], 1); // Add the element to the map.\r\n            // Check if the negation of the current element is present \r\n            // in the map or if the current element is zero.\r\n            if (!map.has(-1 * arr[i]) || arr[i] == 0) {\r\n                map.set(arr[i], 1); // Add the current element to the map.\r\n            }\r\n            else {\r\n                // If the negation of the current element is present in the map,\r\n                // add the negation and the absolute value of the current element \r\n                // to the result array.\r\n                res.push(-1 * Math.abs(arr[i]));\r\n                res.push(Math.abs(arr[i]));\r\n            }\r\n        }\r\n        \r\n        return res; // Return the array containing the pairs.\r\n    }\r\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}