{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704602,
            "title": "Possible Pairs",
            "titleSlug": "possible-pairs1550",
            "content": "<p><span style=\"font-size:18px\">Given X and Y as the GCD and LCM of two numbers A and B. Find all possible pairs of (A,B).<br />\r\n<strong>Note:</strong> (a, b) and (b, a) are considered as two different pairs.</span></p>\r\n\r\n<p><strong><span style=\"font-size:18px\">Example 1:</span></strong></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong> x = 2, y = 12\r\n<strong>Output:</strong> 4\r\n<strong>Explaination:</strong> The pairs are (2, 12), \r\n(4, 6), (6, 4) and (12, 2).</span></pre>\r\n\r\n<p><br />\r\n<strong><span style=\"font-size:18px\">Example 2:</span></strong></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong> x = 3, y = 6\r\n<strong>Output:</strong> 2\r\n<strong>Explaination:</strong> The pairs are (3, 6) and \r\n(6, 3).</span></pre>\r\n\r\n<p><br />\r\n<strong><span style=\"font-size:18px\">Example 3:</span></strong></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong> x = 6, y = 4\r\n<strong>Output:</strong> 0\r\n<strong>Explaination:</strong> There is no such pair such \r\nthat gcd is 6 and lcm is 4.</span></pre>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou do not need to read input or print anything. Your task is to complete the function <strong>pairCount()</strong> which takes x&nbsp;and y&nbsp;as input parameters and returns the number of possibe pairs.</span></p>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(sqrt(N)*LogN)&nbsp; &nbsp; [N is maximum of x&nbsp;and y]<br />\r\n<strong>Expected Auxiliary Space:</strong> O(1)</span></p>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n1 &le; x, y&nbsp;&le; 10<sup>4</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given the Greatest Common Divisor (GCD) `X` and the Least Common Multiple (LCM) `Y` of two numbers `A` and `B`, determine the number of possible ordered pairs (A, B). Note that (a, b) and (b, a) are considered distinct pairs.",
                "constraints": [
                    "1 <= X, Y <= 10^4"
                ],
                "testcases": [
                    {
                        "input": "X = 2, Y = 12",
                        "output": "4",
                        "explanation": "The possible pairs (A, B) are (2, 12), (4, 6), (6, 4), and (12, 2)."
                    },
                    {
                        "input": "X = 3, Y = 6",
                        "output": "2",
                        "explanation": "The possible pairs (A, B) are (3, 6) and (6, 3)."
                    },
                    {
                        "input": "X = 6, Y = 4",
                        "output": "0",
                        "explanation": "There are no pairs (A, B) where the GCD is 6 and the LCM is 4. This is because GCD must divide LCM."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Use the mathematical property : <strong>(LCM * GCD) = (a*b)</strong>&nbsp;</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Factorization",
                "slug": "factorization"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "// Back-end complete function Template for C++\n\nclass Solution{\npublic:\n    // Function to count the number of pairs\n    int pairCount(int x, int y){\n        int n = 0, count = 0;\n        // Check if y is divisible by x\n        if(y%x == 0)\n            n = y/x;\n        // If n is 1, there is only 1 pair\n        if(n == 1)\n            count = 1;\n        // Iterate up to the square root of n\n        for(int i = 1;i <= sqrt(n);i++){\n            // Check if i is a factor of n\n            if(n%i == 0){\n                // Check if both x*(n/i) and x*i have gcd equal to x\n                if(n/i != i && __gcd(x*(n/i), x*i) == x)\n                    count += 2;\n            }\n        }\n        // Return the total count of pairs\n        return count;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            },
            {
                "lang": "C#",
                "full_func": "class Solution\n{\n    public int pairCount(int x, int y)\n    {\n        int n = 0, count = 0;\n        \n        if(y % x == 0)\n            n = y / x;\n        \n        if(n == 1)\n            count = 1;\n        \n        for(int i = 1; i <= Math.Sqrt(n); i++)\n        {\n            if(n % i == 0)\n            {\n                if(n/i != i && gcd(x * (n/i), x * i) == x)\n                    count += 2;\n            }\n        }\n        \n        return count;\n    }\n    \n    private int gcd(int a, int b)\n    {\n        if(b == 0)\n            return a;\n        return gcd(b, a % b);\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}