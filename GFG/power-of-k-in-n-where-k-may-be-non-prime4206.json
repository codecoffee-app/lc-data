{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705234,
            "title": "Power of K in N! where K may be Non Prime",
            "titleSlug": "power-of-k-in-n-where-k-may-be-non-prime4206",
            "content": "<p><span style=\"font-size:18px\">Find the power of K in the factorial of&nbsp;N.</span><br />\n<br />\n<span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input</strong>: N = 7, K = 2\n<strong>Output:</strong>&nbsp;4\n<strong>Explanation</strong>: 7! = 5040\nThe largest power of 2 that\ndivides 5040 is 2<sup>4</sup>.</span></pre>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input: </strong>N = 10, K = 9\n<strong>Output:&nbsp;</strong>2\n<strong>Explanation</strong>: The largest power of 9 that\ndivides 10! is 9<sup>2.</sup></span></pre>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Your Task:&nbsp;&nbsp;</strong><br />\nYou dont need to read input or print anything. Complete the function <strong>largestPowerOfK()&nbsp;</strong>which takes N&nbsp;and K&nbsp;as input parameter and returns the power of K in the factorial of&nbsp;N.<br />\n<br />\n<strong>Expected Time Complexity:</strong> O(nlogn)<br />\n<strong>Expected Auxiliary Space:</strong> O(n)<br />\n<br />\n<strong>Constraints:</strong><br />\n1 &lt;= N&nbsp;&lt;=10<sup>5</sup><br />\n1 &lt;= K&nbsp;&lt;=100</span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two positive integers, N and K, determine the highest power of K that divides N! (N factorial).",
                "constraints": [
                    "1 <= N <= 10^5",
                    "1 <= K <= 100"
                ],
                "testcases": [
                    {
                        "input": "N = 7, K = 2",
                        "output": "4",
                        "explanation": "7! = 5040. The largest power of 2 that divides 5040 is 2^4."
                    },
                    {
                        "input": "N = 10, K = 9",
                        "output": "2",
                        "explanation": "The largest power of 9 that divides 10! is 9^2."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>https://www.geeksforgeeks.org/print-all-prime-factors-of-a-given-number/</p>"
        ],
        "relatedTopics": [
            {
                "name": "number-theory",
                "slug": "number-theory"
            },
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\nclass Solution {\n  public:\n// To find the power of a prime p in \n// factorial N \nint findPowerOfP(int n, int p) \n{ \n    int count = 0; \n    int r=p; \n    while (r <= n) { \n  \n        // calculating floor(n/r) \n        // and adding to the count \n        count += (n / r); \n  \n        // increasing the power of p \n        // from 1 to 2 to 3 and so on \n        r = r * p; \n    } \n    return count; \n} \n  \n// returns all the prime factors of k \nvector<pair<int, int> > primeFactorsofK(int k) \n{ \n    // vector to store all the prime factors \n    // along with their number of occurrence \n    // in factorization of k \n    vector<pair<int, int> > ans; \n  \n    for (int i = 2; k != 1; i++) { \n        if (k % i == 0) { \n            int count = 0; \n            while (k % i == 0) { \n                k = k / i; \n                count++; \n            } \n  \n            ans.push_back(make_pair(i, count)); \n        } \n    } \n    return ans; \n} \n  \n// Returns largest power of k that \n// divides n! \nint largestPowerOfK(int N, int K) \n{ \n    vector<pair<int, int> > vec; \n    vec = primeFactorsofK(K); \n    int ans = INT_MAX; \n    for (int i = 0; i < vec.size(); i++) \n  \n        // calculating minimum power of all \n        // the prime factors of k \n        ans = min(ans, findPowerOfP(N,  \n              vec[i].first) / vec[i].second); \n  \n    return ans; \n} \n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}