{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703937,
            "title": "Power of Pow | Odd Numbers",
            "titleSlug": "power-of-pow-odd-numbers1103",
            "content": "<p><span style=\"font-size:18px\">Given a single integer <strong>N</strong>, your task is to find the sum of the square of the first <strong>N odd&nbsp;natural Numbers</strong>.</span><br />\r\n&nbsp;</p>\r\n\r\n<h1><span style=\"font-size:18px\"><strong>Example 1:</strong></span></h1>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input: </strong>2\r\n<strong>Output: </strong>10\r\n<strong>Explanation: </strong>1<sup>2 + </sup>3<sup>2</sup><sup> </sup>= 10</span></pre>\r\n\r\n<h1><span style=\"font-size:18px\"><strong>Example 2:&nbsp;</strong></span></h1>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input: </strong>3\r\n<strong>Output: </strong>35\r\n<strong>Explanation: </strong>1<sup>2</sup> + 3<sup>2</sup> + 5<sup>2</sup> = 35</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou don&#39;t need to read or print anything. Your task is to complete the function&nbsp;<strong>sum_of_square_oddNumbers()</strong>&nbsp;which takes N as the input parameter and returns the sum of the first N odd&nbsp;natural numbers.</span><br />\r\n&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:&nbsp;</strong>O(1)<br />\r\n<strong>Expected Space Complexity:&nbsp;</strong>O(1)</span><br />\r\n&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n1 &lt;= N &lt;= 10000</span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a single integer N, your task is to find the sum of the squares of the first N odd natural numbers.",
                "constraints": [
                    "1 <= N <= 10000"
                ],
                "testcases": [
                    {
                        "input": "2",
                        "output": "10",
                        "explanation": "The first 2 odd natural numbers are 1 and 3.  1 squared is 1 and 3 squared is 9.  Their sum is 1 + 9 = 10."
                    },
                    {
                        "input": "3",
                        "output": "35",
                        "explanation": "The first 3 odd natural numbers are 1, 3, and 5. 1 squared is 1, 3 squared is 9, and 5 squared is 25.  Their sum is 1 + 9 + 25 = 35."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Use formula.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Numbers",
                "slug": "numbers"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "\r\nclass Solution\r\n{\r\n\tpublic:\r\n\t\tlong long int sum_of_square_oddNumbers(long long int n)\r\n\t\t{\r\n\t\t\t// Using formula\r\n\t\t\tlong long int ans = (n * (2 * n + 1) * (2 * n - 1))/3;\r\n\t\t\treturn ans;\r\n\t\t}\r\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    public long sum_of_square_oddNumbers(long n)\n    {\n        // Using formula\n        long ans = (n * (2 * n + 1) * (2 * n - 1))/3;\n        return ans;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}