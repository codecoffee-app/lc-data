{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 884385,
            "title": "Implement Pow",
            "titleSlug": "powx-n",
            "content": "<p><span >Implement the function <strong>power(b, e)</strong>, which calculates <strong>b</strong> raised to the power of <strong>e</strong> (i.e. b<sup>e</sup>).</span></p>\n<p><span ><strong>Examples:</strong></span></p>\n<pre><span ><strong>Input:</strong> b = 3.00000, e = 5</span><br /><span ><strong>Output:</strong> 243.00000</span></pre>\n<pre><span ><strong>Input:</strong> b = 0.55000, e = 3</span><br /><span ><strong>Output:</strong> 0.16638</span></pre>\n<pre><span ><strong>Input:</strong> b = -0.67000, e = -7</span><br /><span ><strong>Output:</strong> -16.49971</span></pre>\n<p><span ><strong>Constraints:</strong></span></p>\n<ul>\n<li><span >-100.0 &lt; b &lt; 100.0</span></li>\n<li><span >-10<sup>9</sup> &lt;= e &lt;= 10<sup>9</sup></span></li>\n<li><span >Either b is not zero or e &gt; 0.</span></li>\n<li><span >-10<sup>4</sup> &lt;= b<sup>e</sup> &lt;= 10<sup>4</sup></span></li>\n</ul>",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Implement a function `power(b, e)` that calculates `b` raised to the power of `e` (b<sup>e</sup>).  In other words, compute the result of b multiplied by itself e times.",
                "constraints": [
                    "-100.0 < b < 100.0",
                    "-10<sup>9</sup> <= e <= 10<sup>9</sup>",
                    "Either b is not zero or e > 0.",
                    "-10<sup>4</sup> <= b<sup>e</sup> <= 10<sup>4</sup>"
                ],
                "testcases": [
                    {
                        "input": "b = 3.00000, e = 5",
                        "output": "243.00000",
                        "explanation": null
                    },
                    {
                        "input": "b = 0.55000, e = 3",
                        "output": "0.16638",
                        "explanation": null
                    },
                    {
                        "input": "b = -0.67000, e = -7",
                        "output": "-16.49971",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\nclass Solution {\n  public:\n    double power(double b, int e) {\n        // Base case: any number raised to the power of 0 is 1\n        if (e == 0) {\n            return 1.0;\n        }\n\n        // If the e is negative, compute the reciprocal of the b\n        // raised to the positive e\n        if (e < 0) {\n            return 1.0 / power(b, -e);\n        }\n\n        // Recursively compute the power for half of the e\n        double halfPower = power(b, e / 2);\n\n        // If the e is odd, multiply the b once more\n        if (e & 1) {\n            return b * halfPower * halfPower;\n        }\n        // If the e is even, simply square the half power\n        else {\n            return halfPower * halfPower;\n        }\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\nclass Solution {\n    double power(double b, int e) {\n        // Base case: any number raised to the power of 0 is 1\n        if (e == 0) {\n            return 1.0;\n        }\n\n        // If the exponent is negative, compute the reciprocal of the base\n        // raised to the positive exponent\n        if (e < 0) {\n            return 1.0 / power(b, -e);\n        }\n\n        // Recursively compute the power for half of the exponent\n        double halfPower = power(b, e / 2);\n\n        // If the exponent is odd, multiply the base once more\n        if ((e & 1) != 0) {\n            return b * halfPower * halfPower;\n        }\n        // If the exponent is even, simply square the half power\n        else {\n            return halfPower * halfPower;\n        }\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\nclass Solution:\n\n    def power(self, b: float, e: int) -> float:\n        # Base case: any number raised to the power of 0 is 1\n        if e == 0:\n            return 1.0\n\n        # If the exponent is negative, compute the reciprocal\n        if e < 0:\n            return 1.0 / self.power(b, -e)\n\n        # Recursively compute the power for half of the exponent\n        half_power = self.power(b, e // 2)\n\n        # If the exponent is odd, multiply by the base once more\n        if e % 2 == 1:\n            return b * half_power * half_power\n        # If the exponent is even, square the half power\n        else:\n            return half_power * half_power\n",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "//Back-end complete function Template for javascript\nclass Solution {\n    /**\n     * Computes b raised to the power e recursively.\n     * @param {number} b - The base.\n     * @param {number} e - The exponent.\n     * @returns {number} - The result of b^e.\n     */\n    power(b, e) {\n        // Base case: any number raised to the power of 0 is 1\n        if (e === 0) {\n            return 1.0;\n        }\n\n        // If the exponent is negative, compute the reciprocal of the positive exponent\n        if (e < 0) {\n            return 1.0 / this.power(b, -e);\n        }\n\n        // Recursively compute the power for half of the exponent\n        const halfPower = this.power(b, Math.floor(e / 2));\n\n        // If the exponent is odd, multiply the base once more\n        if (e % 2 === 1) {\n            return b * halfPower * halfPower;\n        } else {\n            // If the exponent is even, simply square the half power\n            return halfPower * halfPower;\n        }\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}