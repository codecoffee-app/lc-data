{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705529,
            "title": "Prime Factorization",
            "titleSlug": "prime-factorization",
            "content": "<p><span style=\"font-size: 18px;\">Given a number <strong>n </strong>find the prime factorization of the number.</span></p>\n<p><span style=\"font-size: 18px;\">Note: Print the prime factors in non-decreasing order.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>n = 100<strong>\nOutput: </strong>2 2 5 5\n<strong>E</strong><strong>xplanation: </strong>100 = 2 * 2 * 5 * 5</span>\n</pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>n = 27<strong>\nOutput: </strong>3 3 3\n<strong>Explanation: </strong>27 = 3 * 3 * 3</span>&nbsp;</pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraint:<br /></strong></span><span style=\"font-size: 18px;\">2 &lt;= n &lt;= 200</span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an integer 'n', determine its prime factorization. The prime factors should be printed in non-decreasing order.",
                "constraints": [
                    "2 <= n <= 200"
                ],
                "testcases": [
                    {
                        "input": "100",
                        "output": "2 2 5 5",
                        "explanation": "The prime factorization of 100 is 2 * 2 * 5 * 5."
                    },
                    {
                        "input": "27",
                        "output": "3 3 3",
                        "explanation": "The prime factorization of 27 is 3 * 3 * 3."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Check if the number is prime and divides n.&nbsp;</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "CPP",
                "slug": "cpp"
            },
            {
                "name": "Java",
                "slug": "java"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nbool isPrime(int n){\n    for(int i = 2; i < n; i++){\n        if(n % i == 0){\n            return false;\n        }\n    }\n    return true;\n\n}\n\nvoid printPrimeFactorization(int n){\n        \n    for(int i = 2; i <= n; i++){\n        if( isPrime(i) ){\n            int x = i;\n            while(n % x == 0){\n                cout<<i<<\" \";\n                x = x * i;\n            }\n        }\n    }\n}",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\npublic static boolean isPrime(int n) {\n\n    for (int i = 2; i < n; i++) {\n        if (n % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\npublic static void printPrimeFactorization(int n) {\n\n    for (int i = 2; i <= n; i++) {\n        if (isPrime(i)) {\n            int x = i;\n            while (n % x == 0) {\n                System.out.print(i + \" \");\n                x = x * i;\n            }\n        }\n    }\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "#Back-end complete function Template for Python 3\nclass Solution:\n\n    def isPrime(self, n):\n        for i in range(2, n):\n            if n % i == 0:\n                return False\n        return True\n\n    def printPrimeFactorization(self, n):\n        # Your code here\n        for i in range(2, n + 1):\n            if self.isPrime(i):\n                x = i\n                while n % x == 0:\n                    print(i, end=\" \")\n                    x *= i\n",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "//Back-end complete function Template for javascript\n\nclass Solution {\n    isPrime(n) {\n        for(let i=2; i<n; i++) {\n            if(n%i == 0) {\n                return false;\n            }\n        }\n        \n        return true;\n    }\n    \n    printPrimeFactorization(n) {\n        let ans = \"\";\n        for(let i=2; i<=n; i++) {\n            if(this.isPrime(i)) {\n                let x = i;\n                while(n%x == 0) {\n                    if(ans.length > 0) ans += \" \";\n                    ans += i.toString();\n                    x *= i;\n                }\n            }\n        }\n        console.log(ans);\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}