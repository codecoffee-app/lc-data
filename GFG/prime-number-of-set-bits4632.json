{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705280,
            "title": "Prime number of set bits",
            "titleSlug": "prime-number-of-set-bits4632",
            "content": "<p><span style=\"font-size:18px\">Given two integers <strong>L</strong>&nbsp;and <strong>R</strong>, write a program that finds the count of numbers having prime number of set bits in their binary representation in the range [L, R].</span><br />\n<br />\n<span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input</strong>: L = 6, R = 10\n<strong>Output:</strong>&nbsp;4\n<strong>Explanation</strong>: 6, 7, 9, 10 having\nprime set bits between 6 and 10. </span>\n</pre>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input: </strong>L = 10, R = 15\n<strong>Output:&nbsp;</strong>5\n<strong>Explanation</strong>: 10, 11, 12, 13, 14 having\nprime set bits between 10 and 15.</span></pre>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Your Task:&nbsp;&nbsp;</strong><br />\nYou dont need to read input or print anything. Complete the function <strong>primeSetBits()&nbsp;</strong>which takes L&nbsp;and R&nbsp;as input parameter and returns the&nbsp;count of numbers having prime number of set bits in their binary representation.<br />\n<br />\n<strong>Expected Time Complexity:</strong> O(nlog(n)sqrt(n))<br />\n<strong>Expected Auxiliary Space:</strong> O(1)<br />\n<br />\n<strong>Constraints:</strong><br />\n1 &lt;= L&nbsp;&lt;= R&nbsp;&lt;=1000</span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p>BruteForce.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Prime Number",
                "slug": "prime-number"
            },
            {
                "name": "sieve",
                "slug": "sieve"
            }
        ],
        "companies": [
            "amazon",
            "adobe"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\nclass Solution {\n  public:\n    // Function to check if a number is prime\n    bool isprime(int n){\n        if(n<=1) return false;\n        for(int i = 2; i*i <= n ;i++){ \n            if(n%i == 0){ \n                return false; \n            } \n        }\n        return true;\n    }\n\n    // Function to check if the number of set bits in a number is prime\n    bool binary(int a){   \n        int c=0;\n        while(a)\n        {\n            if(a%2==1)\n            c++;\n            a/=2;\n        }\n        if(isprime(c))\n        return true;\n        else\n        return false;\n    }\n\n    // Main function to count the number of integers with prime number of set bits\n    int primeSetBits(int L, int R){\n        int cnt=0;\n        for(int i=L;i<=R;i++){\n            if(binary(i))cnt++;\n        }\n        return cnt;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    // Function to check if a number is prime\n    public bool IsPrime(int n)\n    {\n        if (n <= 1)\n            return false;\n        for (int i = 2; i * i <= n; i++)\n        {\n            if (n % i == 0)\n            {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    // Function to check if the number of set bits in a number is prime\n    public bool Binary(int a)\n    {\n        int c = 0;\n        while (a > 0)\n        {\n            if (a % 2 == 1)\n                c++;\n            a /= 2;\n        }\n        return IsPrime(c);\n    }\n\n    // Main function to count the number of integers with prime number of set bits\n    public int primeSetBits(int L, int R)\n    {\n        int cnt = 0;\n        for (int i = L; i <= R; i++)\n        {\n            if (Binary(i))\n                cnt++;\n        }\n        return cnt;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}