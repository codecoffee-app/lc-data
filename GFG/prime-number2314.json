{
  "status": 200,
  "message": "Question Data fetched successfully",
  "data": {
    "question": {
      "questionFrontendId": 703954,
      "title": "Prime Number",
      "titleSlug": "prime-number2314",
      "content": "<p><span >Given a number <strong>n</strong>, determine whether it is a prime number or not. </span></p>\n<p><span >A prime number is a number greater than 1 that has no positive divisors other than 1 and itself.</span></p>\n<p><span ><strong>Examples :<br /></strong></span></p>\n<pre><span ><strong>Input: </strong>n = 7\n<strong>Output: </strong>true\n<strong>Explanation: </strong>7 has exactly two divisors: 1 and 7, making it a prime number.</span></pre>\n<pre><span ><strong>Input: </strong>n = 25\n<strong>Output: </strong>false\n<strong>Explanation: </strong>25 has more than two divisors: 1, 5, and 25, so it is not a prime number.</span></pre>\n<pre><span ><strong>Input: </strong>n = 1\n<strong>Output: </strong>false\n<strong>Explanation: </strong>1 has only one divisor (1 itself), which is not sufficient for it to be considered prime.</span></pre>\n<p><span ><strong>Constraints:</strong><br />1 &le; n &le; 10<sup>9</sup></span></p>",
      "isPaidOnly": false,
      "difficulty": "Basic",
      "likes": "NA",
      "dislikes": "NA",
      "rephrased": {
        "body": "Given a number, determine whether it is a prime number. A prime number is a natural number greater than 1 that is not a product of two smaller natural numbers. A natural number greater than 1 that is not prime is called a composite number.",
        "constraints": ["1 <= n <= 10^9"],
        "testcases": [
          {
            "input": "7",
            "output": "true",
            "explanation": "7 is divisible only by 1 and itself, therefore it is a prime number."
          },
          {
            "input": "25",
            "output": "false",
            "explanation": "25 is divisible by 1, 5, and 25. Since it has divisors other than 1 and itself, it is not a prime number."
          },
          {
            "input": "1",
            "output": "false",
            "explanation": "1 is not considered a prime number because it only has one divisor (itself)."
          }
        ]
      }
    },
    "similar": [],
    "hints": [
      "<p><span >Check divisibility from 2 to &radic;n, return false if any divisor is found, otherwise return true.</span></p>"
    ],
    "relatedTopics": [
      {
        "name": "Mathematical",
        "slug": "mathematical"
      },
      {
        "name": "Prime Number",
        "slug": "prime-number"
      },
      {
        "name": "Algorithms",
        "slug": "algorithms"
      }
    ],
    "companies": ["vmware", "amazon", "sap"],
    "solutions": [
      {
        "lang": "C++",
        "full_func": "class Solution {\n  public:\n    bool isPrime(int n) {\n        if (n == 1)\n            return false;\n\n        // Loop from 2 to sqrt(n) to check for divisibility\n        for (int i = 2; i * i <= n; i++) {\n            if (n % i == 0)\n                return false;\n        }\n\n        return true;\n    }\n};\n",
        "lang_text": "cpp"
      },
      {
        "lang": "Java",
        "full_func": "class Solution {\n    static boolean isPrime(int n) {\n        if (n == 1) return false;\n\n        // Loop from 2 to sqrt(n) to check for divisibility\n        for (int i = 2; i * i <= n; i++) {\n            if (n % i == 0) return false;\n        }\n\n        return true;\n    }\n}",
        "lang_text": "java"
      },
      {
        "lang": "Python3",
        "full_func": "# Back-end complete function Template for Python 3\nclass Solution:\n\n    def isPrime(self, n):\n        if n == 1:\n            return False\n        i = 2\n        # Loop from 2 to sqrt(n)\n        while i * i <= n:\n            if n % i == 0:\n                return False\n            i += 1\n        return True\n",
        "lang_text": "python3"
      },
      {
        "lang": "C#",
        "full_func": "// User function Template for C#\nclass Solution {\n    // Function to check if a number is prime or not.\n    public bool isPrime(int n) {\n        if (n == 1) // If n = 1, return false (1 is not a prime number)\n            return false;\n\n        for (int i = 2; i * i <= n; i++) // Loop from 2 to sqrt(n)\n        {\n            if (n % i ==\n                0) // If n is divisible by any number other than 1 and n, return false\n                return false;\n        }\n\n        return true; // Return true if n is prime (no divisors found)\n    }\n}\n",
        "lang_text": "csharp"
      },
      {
        "lang": "Javascript",
        "full_func": "//Back-end complete function Template for JavaScript\n\nclass Solution {\n    isPrime(n) {\n        if (n === 1) {\n            return false;\n        }\n\n        for (let i = 2; i * i <= n; i++) {\n            // Loop from 2 to sqrt(n)\n            if (n % i === 0) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n}\n",
        "lang_text": "javascript"
      }
    ],
    "platform": "GFG"
  }
}
