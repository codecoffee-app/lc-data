{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704166,
            "title": "Print  1 to n without using loops",
            "titleSlug": "print-1-to-n-without-using-loops3621",
            "content": "<p><span >Given an positive integer <strong><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"mord mathnormal\">n</span></span></span></span></strong>, print numbers from 1 to <strong><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"mord mathnormal\">n</span></span></span></span></strong> <strong>without using loops</strong>. </span></p>\n<p><span >Implement the function <code><strong>printTillN()</strong></code> to print the numbers from 1 to <strong><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"mord mathnormal\">n</span></span></span></span></strong> as space-separated integers.</span></p>\n<p><span ><strong>Examples <br /></strong></span></p>\n<pre><span ><strong>Input: </strong>n = 5\n<strong>Output: </strong>1 2 3 4 5\n<strong>Explanation: </strong>We have to print numbers from 1 to 5.</span></pre>\n<pre><span ><strong>Input: </strong>n = 10\n<strong>Output: </strong>1 2 3 4 5 6 7 8 9 10\n<strong>Explanation: </strong>We have to print numbers from 1 to 10.</span></pre>\n<p><span ><strong>Constraints:</strong><br />1 &le; n &le; 1000</span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Use recursion.</span></p>",
            "<p><strong>Algorithm:</strong><br />\nvoid printNos(unsigned int n)<br />\n{<br />\n&nbsp; if(n &gt; 0)<br />\n&nbsp; {<br />\n&nbsp;&nbsp;&nbsp; printNos(n-1)<br />\n&nbsp;&nbsp;&nbsp; print n<br />\n&nbsp; }</p>\n\n<p>return<br />\n}</p>"
        ],
        "relatedTopics": [
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C",
                "full_func": "\nvoid printTillN(int n) {\n    // Base case: if n becomes zero, return\n    if (n == 0)\n        return;\n    // Recursive call to print numbers from 1 to n-1\n    printTillN(n - 1);\n\n    // Print the current number\n    printf(\"%d \", n);\n}",
                "lang_text": "c"
            },
            {
                "lang": "C++",
                "full_func": "// Including necessary header files\n\n#include <bits/stdc++.h>\nusing namespace std;\n\n// Class Solution\nclass Solution {\n  public:\n    // Recursive function to print numbers from 1 to n\n    void printTillN(int n) {\n        // Base case: If n becomes 0, return\n        if (n == 0)\n            return;\n\n        // Recursively call the function with n-1\n        printTillN(n - 1);\n\n        // Print the current number\n        cout << n << \" \";\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    //Function to print all numbers till N.\n    public void printTillN(int N)\n    {\n        if (N == 0)\n            return;\n        else\n        {\n            printTillN(N - 1);\n            Console.Write(N + \" \");\n        }\n    }\n}",
                "lang_text": "csharp"
            },
            {
                "lang": "Javascript",
                "full_func": null,
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}