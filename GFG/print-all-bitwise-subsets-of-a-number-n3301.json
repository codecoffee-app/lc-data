{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704800,
            "title": "Print all bitwise subsets of a number N",
            "titleSlug": "print-all-bitwise-subsets-of-a-number-n3301",
            "content": "<p><span style=\"font-size:18px\">Given a number <strong>N</strong>, print all the numbers which are a bitwise subset of the binary representation of N. Bitwise subset of a number <strong>N</strong> will be the numbers <strong>i</strong> in the range <strong>0 </strong>&le;<strong> i </strong>&le; <strong>N</strong> which satisfy the below condition:<br />\r\n<strong>N &amp; i == i</strong></span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input</strong>:\r\nN = 5\r\n<strong>Output:</strong>&nbsp;5 4 1 0\r\n<strong>Explanation</strong>:\r\n   0 &amp; 5 = 0\r\n&nbsp; &nbsp;1&nbsp;&amp; 5 = 1\r\n&nbsp; &nbsp;2 &amp; 5 = 0\r\n&nbsp; &nbsp;3 &amp; 5 = 1\r\n&nbsp; &nbsp;4 &amp; 5 = 4\r\n&nbsp; &nbsp;5 &amp; 5 = 5\r\n&nbsp;&nbsp;</span>\r\n</pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong>\r\nN = 9\r\n<strong>Output: </strong>9 8 1 0\r\n</span></pre>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Your Task:&nbsp;&nbsp;</strong><br />\r\nYou don&#39;t need to read input or print anything. Your task is to complete the function&nbsp;<strong>printSubsets()</strong>&nbsp;which takes the integer N as input parameters and returns the&nbsp;array of integers that satisfy the above condition.<br />\r\n<br />\r\n<strong>Expected Time Complexity:</strong> </span>&nbsp;<span style=\"font-size:18px\">O(K), where K is the number of bitwise subsets of N.</span><br />\r\n<span style=\"font-size:18px\"><strong>Expected Auxiliary Space:</strong> O(1)</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n1 &le; N &le; 10000</span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a non-negative integer N, find all integers 'i' (where 0 <= i <= N) such that 'i' is a bitwise subset of N. A number 'i' is considered a bitwise subset of N if the bitwise AND of N and i is equal to i (N & i == i). Return these numbers in descending order.",
                "constraints": [
                    "1 <= N <= 10000"
                ],
                "testcases": [
                    {
                        "input": "5",
                        "output": "5 4 1 0",
                        "explanation": "The binary representation of 5 is 101.  We check the condition N & i == i for each i from 0 to 5:\n\t0 & 5 = 0\n\t1 & 5 = 1\n\t2 & 5 = 0\n\t3 & 5 = 1\n\t4 & 5 = 4\n\t5 & 5 = 5\nThe numbers that satisfy the condition are 0, 1, 4, and 5."
                    },
                    {
                        "input": "9",
                        "output": "9 8 1 0",
                        "explanation": "The binary representation of 9 is 1001. We check the condition N & i == i for each i from 0 to 9:\n\t0 & 9 = 0\n\t1 & 9 = 1\n\t2 & 9 = 0\n\t3 & 9 = 1\n\t4 & 9 = 0\n\t5 & 9 = 1\n\t6 & 9 = 0\n\t7 & 9 = 1\n\t8 & 9 = 8\n\t9 & 9 = 9\nThe numbers that satisfy the condition are 0, 1, 8, and 9."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">An efficient solution is to use bitwise operators to find the subsets. Instead of iterating for every i, we can simply iterate for the bitwise subsets only. Iterating backward for&nbsp;<strong>i=(i-1)&amp;n</strong>&nbsp;gives us every bitwise subset, where i starts from n and ends at 1.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Bit Magic",
                "slug": "bit-magic"
            },
            {
                "name": "Binary Representation",
                "slug": "binary-representation"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "// Function to find bitwise subsets\n// Efficient approach\nclass Solution {\npublic:\n    vector<int> printSubsets(int n) {\n        vector<int> v;\n        \n        // using bitwise AND operation to generate subsets\n        for (int i = n; i > 0; i = (i - 1) & n)\n        \tv.push_back(i);\n        \n        // adding the full set to the subsets vector\n        v.push_back(0);\n        \n        return v;\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}