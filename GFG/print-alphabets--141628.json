{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705376,
            "title": "Print Alphabets",
            "titleSlug": "print-alphabets--141628",
            "content": "<p><span style=\"font-size: 18px;\">Given two char <strong>c1</strong> and <strong>c2.&nbsp;</strong>&nbsp;you need to print all the alphabet starting from <strong>c1</strong>&nbsp;to <strong>c2</strong> in a single line.<br />Note: Print all characters with a single space after it and all in a single line. Don't add a new line after printing.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples:</strong></span> <span style=\"font-size: 18px;\"><strong> </strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input</strong>: c1 = 'a', c2 = 'z'\n<strong>Output:</strong> \"a b c d e f g h i j k l m n o p q r s t u v w x y z \"\n<strong>Explanation</strong>: Printed alphabets from <strong>a </strong>to <strong>z</strong>.</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>c1 = \"h\", c2 = \"u\"\n<strong>Output: \"</strong>h i j k l m n o p q r s t u \"\n<strong>Explanation</strong>: Printed alphabets from <strong>h </strong>to <strong>u</strong>.</span></pre>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two characters, `c1` and `c2`, print all the alphabet characters starting from `c1` to `c2` (inclusive) in a single line, separated by spaces.  Do not add a newline character at the end.",
                "constraints": [],
                "testcases": [
                    {
                        "input": "c1 = 'a', c2 = 'z'",
                        "output": "a b c d e f g h i j k l m n o p q r s t u v w x y z ",
                        "explanation": "Prints all alphabets from 'a' to 'z'."
                    },
                    {
                        "input": "c1 = 'h', c2 = 'u'",
                        "output": "h i j k l m n o p q r s t u ",
                        "explanation": "Prints all alphabets from 'h' to 'u'."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Traverse through the characters from c1 to c2.</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>",
            "<p><strong>Python:</strong></p>\n\n<pre>\nAlphabets have sequential increasing (by 1)  ord number (ASCII code) .\n\nrun a loop from the ord number of <strong>c1</strong> to <strong>c2.</strong>\n\n       convert ord number to char and print</pre>\n\n<p><strong>Java/CPP:</strong></p>\n\n<pre>\nTraverse through the characters from <strong>c1</strong> to <strong>c2</strong> using a for loop.</pre>"
        ],
        "relatedTopics": [
            {
                "name": "Java-Strings",
                "slug": "java-strings"
            },
            {
                "name": "CPP",
                "slug": "cpp"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nvoid alphabets(char c1, char c2){\n    \n    for(char c = c1; c <= c2;c++){\n        cout << c << \" \";\n    }\n}",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\npublic static void alphabets(char c1, char c2){\n    \n    for(char c = c1; c <= c2;c++){\n        System.out.print(c + \" \");\n    }\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "#Back-end complete function Template for Python 3\n\n\ndef alphabets(c1,c2):\n    \n    for i in range(ord(c1),ord(c2)+1):\n        \n        print(chr(i),end=' ')\n    ",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "//Back-end complete function Template for javascript\n\nclass Solution {\n    alphabets(c1, c2) {\n        let ans = \"\";\n        for(let c=c1.charCodeAt(0); c<=c2.charCodeAt(0); c++) {\n            ans += String.fromCharCode(c) + \" \";\n        }\n        console.log(ans);\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}