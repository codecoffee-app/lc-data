{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 700712,
            "title": "Alternates in an Array",
            "titleSlug": "print-alternate-elements-of-an-array",
            "content": "<p><span style=\"font-size: 18px;\">You are given an array<strong> arr[]</strong>, the task is to return a list elements of arr in alternate order (starting from index 0).</span></p>\n<p><strong style=\"font-size: 18px; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Examples:</strong></p>\n<pre><strong style=\"font-size: 18px;\">Input: </strong><span style=\"font-size: 18px;\">arr[] = [1, 2, 3, 4]<br /></span><span style=\"font-size: 18px;\"><strong>Output: </strong></span><span style=\"font-size: 18px;\">1 3<br /><strong>Explanation:<br /></strong>Take first element: 1<br />Skip second element: 2<br />Take third element: 3<br />Skip fourth element: 4</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr[] = [1, 2, 3, 4, 5]<strong>\nOutput: </strong>1 3 5<br /><strong>Explanation:<br /></strong>Take first element: 1<br />Skip second element: 2<br />Take third element: 3<br />Skip fourth element: 4<br />Take fifth element: 5</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong></span><br /><span style=\"font-size: 18px;\">1 &lt;=&nbsp; arr.size &lt;= 10<sup>5</sup></span><br /><span style=\"font-size: 18px;\">1 &lt;= arr[i] &lt;= 10<sup>5</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array `arr[]`, return a list of elements in alternate order, starting from index 0.  This means including the element at index 0, skipping the element at index 1, including the element at index 2, and so on.",
                "constraints": [
                    "1 <= arr.length <= 10^5",
                    "1 <= arr[i] <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "[1, 2, 3, 4]",
                        "output": "1 3",
                        "explanation": "The elements at indices 0 and 2 (1 and 3) are selected."
                    },
                    {
                        "input": "[1, 2, 3, 4, 5]",
                        "output": "1 3 5",
                        "explanation": "The elements at indices 0, 2, and 4 (1, 3, and 5) are selected."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>use a loop with a jump of 2</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nclass Solution {\n  public:\n    vector<int> getAlternates(vector<int> &arr) {\n        int n = arr.size();\n        vector<int> list;\n        // Iterating over the array with increments of 2 to access alternate elements.\n        for (int i = 0; i < n; i += 2)\n            list.push_back(arr[i]);\n        return list;\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\nclass Solution {\n    // function to print alternate elements of an array\n    public ArrayList<Integer> getAlternates(int arr[]) {\n        ArrayList<Integer> list = new ArrayList<>();\n        // iterating over the array with step size of 2\n        for (int i = 0; i < arr.length; i = i + 2) list.add(arr[i]);\n        return list;\n    }\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\nclass Solution:\n\n    def getAlternates(self, arr):\n        # Slicing the array to get alternate elements starting from index 0\n        n = len(arr)\n        ls = arr[0:n:2]\n        return ls\n",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "//Back-end complete function Template for javascript\n\nclass Solution {\n    getAlternates(arr) {\n        let n = arr.length;\n        let list = [];\n        for (let i = 0; i < n; i += 2) list.push(arr[i]); // Add the current element\n        return list;\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}