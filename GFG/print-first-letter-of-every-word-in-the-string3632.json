{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703512,
            "title": "Print first letter of every word in the string",
            "titleSlug": "print-first-letter-of-every-word-in-the-string3632",
            "content": "<div class=\"entry-content\">\n<p><span style=\"font-size: 18px;\">Given a string <strong>S</strong>, the task is to create a string with the first letter of every word in the string.</span><br />&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong> \nS = \"geeks for geeks\"\n<strong>Output:</strong> gfg\n\n</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong> \nS = \"bad is good\"\n<strong>Output:</strong> big\n\n</span></pre>\n<p><span style=\"font-size: 20px;\"><strong>Your&nbsp;Task:</strong><br />You don't need to read input or print anything. Your task is to complete the function </span><strong><span style=\"font-size: 18px;\"><code>firstAlphabet</code></span></strong><span style=\"font-size: 20px;\"><strong>()&nbsp;</strong>which takes string S as input parameter and returns a string that contains the first letter of every word in S.</span></p>\n<p><br /><span style=\"font-size: 20px;\"><strong>Expected Time Complexity:&nbsp;</strong>O(|S|)<br /><strong>Expected Auxiliary Space:&nbsp;</strong>O(|S|)</span></p>\n<p><br /><span style=\"font-size: 20px;\"><strong>Constraints:</strong><br />1 &lt;= |S| &lt;= 10<sup>5</sup></span><br /><span style=\"font-size: 18px;\">S contains lower case English alphabets<br />Words have a single space between them. </span></p>\n</div>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string S, construct a new string consisting of the first letter of each word in S.",
                "constraints": [
                    "1 <= |S| <= 10^5",
                    "S contains lowercase English alphabets only.",
                    "Words in S are separated by a single space."
                ],
                "testcases": [
                    {
                        "input": "geeks for geeks",
                        "output": "gfg",
                        "explanation": "The first letters of 'geeks', 'for', and 'geeks' are 'g', 'f', and 'g' respectively. Concatenating these gives 'gfg'."
                    },
                    {
                        "input": "bad is good",
                        "output": "big",
                        "explanation": "The first letters of 'bad', 'is', and 'good' are 'b', 'i', and 'g' respectively. Concatenating these gives 'big'."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>1. Traverse through the string and add first character in the answer string</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [
            "amazon"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function template for C++\n\nclass Solution{\npublic:\n\n    //Function to find the first alphabet of each word in a given string.\n    string firstAlphabet(string S)\n    {\n        //initializing the result string.\n        string res =\"\";\n\n        //appending the first character of the string to the result, if it is not a space.\n        if(S[0]!=' ')\n            res+=S[0];\n\n        //iterating over the characters of the string.\n        for(int i = 0;i<S.size();i++)\n        {\n            //checking if the current character is a space and the next character is not a space.\n            //If true, then appending the next character to the result.\n            if(i!=S.length() - 1 && S[i]==' ' && S[i + 1]!=' ')\n                res+=S[i + 1];\n        }\n\n        //returning the result string.\n        return res; \n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "\r\n//User function Template for Java\r\n\r\nclass Solution {\r\n    // Function to extract the first alphabet of each word in the given string\r\n    String firstAlphabet(String S) {\r\n        // code here\r\n        StringBuilder sb=new StringBuilder();\r\n        sb.append(S.charAt(0));\r\n        // Loop through the string to find the first alphabet of each word\r\n        for(int i=0;i<S.length();i++)\r\n        {\r\n            // Check for space to identify the start of a new word\r\n            if(S.charAt(i)==' ')\r\n            {\r\n                // Append the alphabet of the new word to the result\r\n                sb.append(S.charAt(i+1));\r\n            }\r\n        }\r\n        // Return the final result\r\n        return sb.toString();\r\n    }\r\n};",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#User function Template for python3\nclass Solution:\n\n    def firstAlphabet(self, S):\n        #Initializing an empty string to store the first alphabet\n        c = \"\"\n        #Iterating over the input string\n        for i in range(len(S)):\n            #Checking if it is the first character, then adding it to the result string\n            if i == 0:\n                c += S[i]\n            #Checking if the current character is a space and not the last character\n            #then adding the next character to the result string\n            elif S[i] == \" \" and i != len(S) - 1:\n                c += S[i + 1]\n        return c\n",
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "//User function template for Csharp\nclass Solution{\n    \n    //Function to return the first character of a string.\n    public string firstAlphabet(string S)\n    {\n        //initializing the result string.\n        string res =\"\";\n\n        //appending the first character of the string to the result, if it is not a space.\n        if(S[0]!=' ')\n            res+=S[0];\n\n        //iterating over the characters of the string.\n        for(int i = 0;i<S.Length;i++)\n        {\n            //checking if the current character is a space and the next character is not a space.\n            //If true, then appending the next character to the result.\n            if(i!=S.Length - 1 && S[i]==' ' && S[i + 1]!=' ')\n                res+=S[i + 1];\n        }\n\n        //returning the result string.\n        return res; \n    }\n};",
                "lang_text": "csharp"
            },
            {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n\n\n\n/**\n * @param {string} str\n * @returns {str}\n*/\n\nclass Solution{\n    firstAlphabet(str){\n        //code here\n\t\tlet res = \"\";\n\t    if(str[0] != ' ')\n\t    \tres += str[0];\n\t    for(let i = 0; i < str.length; i++){\n\t    \tif(i != str.length - 1 && str[i] == ' ' && str[i + 1] != ' ')\n\t    \t\tres += str[i + 1];\n\t    }\n\t    return res;\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}