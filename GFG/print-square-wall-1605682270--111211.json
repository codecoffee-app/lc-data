{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 878902,
            "title": "Print Square wall",
            "titleSlug": "print-square-wall-1605682270--111211",
            "content": "<p><span style=\"font-size: 18px;\">Given an integer&nbsp;<strong>n,&nbsp;</strong>&nbsp;write a program to print the square wall of size&nbsp;<strong>n&nbsp;</strong>using a single loop and string multiplication.&nbsp;</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>n = 5\n<strong>Output:\n</strong>* * * * *<br />* * * * *<br />* * * * *<br />* * * * *<br />* * * * *\n<strong>Explanation: </strong>Its perfect square wall. </span></pre>\n<pre><span style=\"font-size: 18px;\"><strong style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Input: </strong><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">n = 4<br /></span></span><span style=\"font-size: 18px;\"><strong style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Output:<br /></strong>* * * * <br />* * * * <br />* * * * <br />* * * * <br /><strong style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Explanation: </strong><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Its perfect square wall. </span></span></pre>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an integer `n`, write a program to print a square wall of size `n` using a single loop and string multiplication.  The wall should be composed of asterisks (*) separated by spaces.",
                "constraints": [],
                "testcases": [
                    {
                        "input": "5",
                        "output": "* * * * *\n* * * * *\n* * * * *\n* * * * *\n* * * * *",
                        "explanation": "A square wall of size 5 is printed, with each row containing 5 asterisks separated by spaces."
                    },
                    {
                        "input": "4",
                        "output": "* * * *\n* * * *\n* * * *\n* * * *",
                        "explanation": "A square wall of size 4 is printed, with each row containing 4 asterisks separated by spaces."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Use two&nbsp;loops:(Example if s=5)</span></p>\n\n<p><span style=\"font-size:18px\">One to generate a string as&quot;*&nbsp; * * * *&quot; and another to genrate the whole square wall.&nbsp;</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "CPP",
                "slug": "cpp"
            },
            {
                "name": "Java",
                "slug": "java"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C",
                "full_func": "#include <stdio.h>\n#include <string.h>\n\nint main() {\n    int n;\n    scanf(\"%d\", &n);\n    // code here\n    char aLine[1000] = \"\"; // Use a sufficiently large array for the line\n    for (int i = 0; i < n; i++) {\n        strcat(aLine, \"* \"); // Concatenate \"* \" to the string\n    }\n\n    for (int i = 0; i < n; i++) {\n        printf(\"%s\\n\", aLine);\n    }\n\n    return 0;\n}\n",
                "lang_text": "c"
            },
            {
                "lang": "C++",
                "full_func": "#include <iostream>\nusing namespace std;\n\nint main() {\n    int n;\n    cin >> n;\n    string aLine = \"\";\n    for (int i = 0; i < n; i++) {\n        aLine += \"* \";\n    }\n    for (int i = 0; i < n; i++) {\n        cout << aLine << endl;\n    }\n\n    return 0;\n}",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\nimport java.util.*;\n\npublic class Main {\n    public static void main(String args[]) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        String aLine = \"\";\n        for (int i = 0; i < n; i++) {\n            aLine += \"* \";\n        }\n        for (int i = 0; i < n; i++) {\n            System.out.println(aLine);\n        }\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\nn = int(input())\n\n# Your code here\nfor i in range(n):\n    print('* ' * n)\n",
                "lang_text": "py"
            }
        ],
        "platform": "GFG"
    }
}