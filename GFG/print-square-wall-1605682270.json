{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705359,
            "title": "Print Square wall",
            "titleSlug": "print-square-wall-1605682270",
            "content": "<p><span style=\"font-size: 18px;\">Given an integer <strong>S,&nbsp;</strong> write a program to print the square wall of size <strong>S&nbsp;</strong>using a single loop and string multiplication. Try not to use nested loops (</span><span style=\"font-size: 18px;\">Use string multiplication for Python)</span><span style=\"font-size: 18px;\">.<br /></span><span style=\"font-size: 18px;\"><strong>Note: </strong>Add a single \" \" after each \"<span style=\"font-size: 18pt;\"><strong>*</strong></span>\". Add a new line after printing the square.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples:</strong><strong> </strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>S = 5\n<strong>Output:\n</strong>* * * * *<br />* * * * *<br />* * * * *<br />* * * * *<br />* * * * *\n<strong>Explanation: </strong>Its perfect square wall. </span></pre>\n<pre><span style=\"font-size: 18px;\"><strong style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Input: </strong><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">S = 4<br /></span></span><span style=\"font-size: 18px;\"><strong style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Output:<br /></strong>* * * * <br />* * * * <br />* * * * <br />* * * * <br /><strong style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Explanation: </strong><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Its perfect square wall. </span><br /></span></pre>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an integer S, write a program to print a square wall of size S using a single loop and string multiplication.  Avoid nested loops.  Each '*' should be followed by a single space. Print a newline after the entire square.",
                "constraints": [],
                "testcases": [
                    {
                        "input": "5",
                        "output": "* * * * *\n* * * * *\n* * * * *\n* * * * *\n* * * * *",
                        "explanation": "Creates a 5x5 square of '*' characters separated by spaces."
                    },
                    {
                        "input": "4",
                        "output": "* * * *\n* * * *\n* * * *\n* * * *",
                        "explanation": "Creates a 4x4 square of '*' characters separated by spaces."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Use two&nbsp;loops:(Example if s=5)</span></p>\n\n<p><span style=\"font-size:18px\">One to generate a string as&quot;*&nbsp; * * * *&quot; and another to genrate the whole square wall.&nbsp;</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "CPP",
                "slug": "cpp"
            },
            {
                "name": "Java",
                "slug": "java"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\r\n\r\nvoid squareWall(int s){\r\n    string aLine=\"\";\r\n    for(int i=0;i<s;i++){\r\n        aLine+=\"* \";\r\n    }\r\n    for(int i=0;i<s;i++){\r\n        cout<<aLine<<endl;\r\n    }\r\n}",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\npublic static void squareWall(int s) {\n    String aLine = \"\";\n    for (int i = 0; i < s; i++) {\n        aLine += \"* \";\n    }\n    for (int i = 0; i < s; i++) {\n        System.out.println(aLine);\n    }\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\ndef squareWall(s):\n    for i in range(s):\n        print('* ' * s)\n",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "//Back-end complete function Template for javascript\r\n\r\nclass Solution {\r\n  squareWall(s) {\r\n    let count=s;\r\n    for(let i=0;i<s;i++){\r\n        count=s;\r\n        while(count > 0){\r\n            process.stdout.write(\"* \");\r\n            count = count-1;\r\n        } \r\n        process.stdout.write(\"\\n\");\r\n    }\r\n  }\r\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}