{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705360,
            "title": "Print Square Wall Using Nested Loops",
            "titleSlug": "print-square-wall-2-1605683124",
            "content": "<p><span style=\"font-size: 18px;\">Given an integer&nbsp;<strong>S,&nbsp;</strong>&nbsp;write a program to print the square wall of size&nbsp;<strong>S&nbsp;</strong>using nested loops. Try not to use String multiplication.<br />Note: Add a single \" \" after each \"<span style=\"font-size: 18pt;\"><strong>*</strong></span>\". Add a new line after printing the square.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>S = 5\n<strong>Output:\n</strong>* * * * *<br />* * * * *<br />* * * * *<br />* * * * *<br />* * * * *\n<strong>Explanation: </strong>Its perfect square wall. </span></pre>\n<pre><span style=\"font-size: 18px;\"><strong style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Input: </strong><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">S = 4<br /></span></span><span style=\"font-size: 18px;\"><strong style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Output:<br /></strong>* * * * <br />* * * * <br />* * * * <br />* * * * <br /><strong style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Explanation: </strong><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Its perfect square wall. </span></span></pre>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an integer S, write a program to print a square wall of size S using nested loops. Each row should consist of S asterisks separated by spaces. Print a new line after each row.",
                "constraints": [],
                "testcases": [
                    {
                        "input": "5",
                        "output": "* * * * *\n* * * * *\n* * * * *\n* * * * *\n* * * * *",
                        "explanation": "A square wall of size 5 is printed, with each row containing five asterisks separated by spaces."
                    },
                    {
                        "input": "4",
                        "output": "* * * *\n* * * * \n* * * *\n* * * * ",
                        "explanation": "A square wall of size 4 is printed, with each row containing four asterisks separated by spaces."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">for(int i=0;i&lt;s;i++){<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for(int j=0;j&lt;s;j++){<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;//print &quot;* &quot;;<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br />\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //print a new line<br />\n&nbsp; &nbsp; &nbsp; &nbsp; }</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "CPP",
                "slug": "cpp"
            },
            {
                "name": "Java",
                "slug": "java"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C",
                "full_func": "//Back-end complete function Template for C\n\nvoid squareWall(int s) {\n    for (int i = 0; i < s; i++) {\n        for (int j = 0; j < s; j++) {\n            printf(\"* \");\n        }\n        printf(\"\\n\");\n    }\n}",
                "lang_text": "c"
            },
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nvoid squareWall(int s) {\n    for (int i = 0; i < s; i++) {\n        for (int j = 0; j < s; j++) {\n            cout << \"* \";\n        }\n        cout << endl;\n    }\n}",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\npublic static void squareWall(int s) {\n    for (int i = 0; i < s; i++) {\n        for (int j = 0; j < s; j++) {\n            System.out.print(\"* \");\n        }\n        System.out.println();\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\ndef squareWall(s):\n    for i in range(s):\n\n        for j in range(s):\n            print('*', end=' ')\n        print()\n",
                "lang_text": "py"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n    {\n        //Complete this function\n        public void squareWall(int s)\n        {\n            for (int i = 0; i < s; i++)\n            {\n                for (int j = 0; j < s; j++)\n                {\n                    Console.Write(\"* \");\n                }\n                Console.WriteLine();\n            }\n        }\n\n    }",
                "lang_text": "csharp"
            },
            {
                "lang": "Javascript",
                "full_func": "//Back-end complete function Template for javascript\r\n\r\nclass Solution {\r\n  squareWall(s) {\r\n    let count=s;\r\n    for(let i=0;i<s;i++){\r\n        count=s;\r\n        while(count > 0){\r\n            process.stdout.write(\"* \");\r\n            count = count-1;\r\n        } \r\n        process.stdout.write(\"\\n\");\r\n    }\r\n  }\r\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}