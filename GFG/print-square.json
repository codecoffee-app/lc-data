{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704355,
            "title": "Print Square",
            "titleSlug": "print-square",
            "content": "<p><span style=\"font-size: 18px;\">Given an integer <strong>s</strong>, write a program to print the square of size <strong>s&nbsp;</strong>using \"<strong><span style=\"font-size: 18pt;\">*</span></strong>\"<strong>&nbsp;</strong>character<strong>.&nbsp;<br /></strong>Note: Make sure to add a \" \" between two \"<span style=\"font-size: 18pt;\"><strong>*</strong></span>\". Add a new line after printing the square</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples :</strong></span><span style=\"font-size: 18px;\"><strong> </strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>s = 4\n<strong>Output:</strong>\n<span style=\"font-size: 18pt;\"><strong>* * * *</strong></span><br /><span style=\"font-size: 18pt;\"><strong>*     *</strong></span><br /></span><span style=\"font-size: 18px;\"><span style=\"font-size: 18pt;\"><strong>*     *</strong></span><br /><span style=\"font-size: 18pt;\"><strong>* * * *</strong></span>\n<strong>Explanation: </strong>It's a square! Each side contains s = 4 *.<br /></span></pre>\n<pre><span ><strong>Input: </strong>s = 3\n<strong>Output:</strong></span>\n<span style=\"font-size: 18pt;\"><strong>* * * </strong></span><br /><span style=\"font-size: 18pt;\"><strong>*   *</strong></span><br /><span style=\"font-size: 18pt;\"><strong>* * *</strong></span>\n<strong>Explanation: </strong>It's a square! Each side contains s = 3 *.</pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &le; s &le; 10</span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">You&#39;d need to use the multi printing method to complete one horizontal line</span></p>",
            "<p>As there&#39;s space b/w horizontal lines.&nbsp; so put space between &#39;*&#39; of first and last&nbsp;line</p>"
        ],
        "relatedTopics": [
            {
                "name": "python-conditionals",
                "slug": "python-conditionals"
            },
            {
                "name": "python-loops",
                "slug": "python-loops"
            },
            {
                "name": "CPP",
                "slug": "cpp"
            },
            {
                "name": "Java",
                "slug": "java"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C",
                "full_func": "//Back-end complete function Template for C\n\nvoid square(int s) {\n    int count = s;\n    for (int i = 0; i < s; i++) {\n        if (i == 0) {\n            count = s;\n            while (count-- > 0)\n                printf(\"* \");\n        } else if (i == s - 1) {\n            count = s;\n            while (count-- > 0)\n                printf(\"* \");\n        } else {\n            count = 2 * s - 3;\n            printf(\"*\");\n            while (count-- > 0)\n                printf(\" \");\n            printf(\"*\");\n        }\n        printf(\"\\n\");\n    }\n}",
                "lang_text": "c"
            },
            {
                "lang": "C++",
                "full_func": "void square(int s) {\n    int count = s;\n    for (int i = 0; i < s; i++) {\n        if (i == 0) {\n            count = s;\n            while (count-- > 0)\n                cout << \"* \";\n        } else if (i == s - 1) {\n            count = s;\n            while (count-- > 0)\n                cout << \"* \";\n        } else {\n            count = 2 * s - 3;\n            cout << \"*\";\n            while (count-- > 0)\n                cout << \" \";\n            cout << \"*\";\n        }\n        cout << endl;\n    }\n}",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\npublic static void square(int s) {\n    int count = s;\n    for (int i = 0; i < s; i++) {\n        if (i == 0) {\n            count = s;\n            while (count-- > 0) System.out.print(\"* \");\n        } else if (i == s - 1) {\n            count = s;\n            while (count-- > 0) System.out.print(\"* \");\n        } else {\n            count = 2 * s - 3;\n            System.out.print(\"*\");\n            while (count-- > 0) System.out.print(\" \");\n            System.out.print(\"*\");\n        }\n        System.out.println();\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\n\ndef square(s):\n    for i in range(s):\n        if i == 0:\n            print('* ' * s)\n        elif i == s - 1:\n            print('* ' * s)\n        else:\n            print('*', ' ' * (2 * s - 3), '*', sep='')\n",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "\nclass Solution {\n    square(s) {\n        let count = s;\n        for (let i = 0; i < s; i++) {\n            if (i == 0) {\n                count = s;\n                while (count-- > 0) process.stdout.write(\"* \");\n            } else if (i == s - 1) {\n                count = s;\n                while (count-- > 0) process.stdout.write(\"* \");\n            } else {\n                count = s - 2;\n                process.stdout.write(\"* \");\n                while (count-- > 0) process.stdout.write(\"  \");\n                process.stdout.write(\"* \");\n            }\n            process.stdout.write(\"\\n\");\n        }\n    }\n}\n",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}