{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703156,
            "title": "Find the left over element",
            "titleSlug": "print-the-left-element2009",
            "content": "<p><span style=\"font-size: 18px;\">Given an array <strong>arr[]</strong>, the size is reduced by 1 element at each step. In the first step, the maximum element would be removed, while in the second step, the minimum element of the remaining array would be removed, in the third step again the maximum, and so on. Continue this till the array contains only one element. And find the final element remaining in the array.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr[] = [7, 8, 3, 4, 2, 9, 5]\n<strong>Ouput: </strong>5\n<strong>Explanation:</strong>In first step '9' would be removed, in 2nd step '2' will be removed, in third step '8' will be removed and so on. So the last remaining element would be '5'.  </span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr[] = [8, 1, 2, 9, 4, 3, 7, 5]\n<strong>Ouput: </strong>4<br /><strong style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Explanation: </strong></span><span style=\"font-family: 'andale mono', monospace;\"><span >In fi</span><span style=\"font-size: 18px;\">rst ste</span><span style=\"font-size: 18px;\">p '9' would be removed, in 2nd step </span></span><span >'1' will be removed, in third step '8' will be </span><span >removed and so on. So the last remaining </span><span >element would be '4'. </span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &le; arr.size() &le; 10<sup>5</sup><br />1 &le; arr[i] &le; 10<sup>6</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of integers, iteratively reduce its size by removing elements until only one element remains. In each step, either the maximum or minimum element of the remaining array is removed. The removal alternates between maximum and minimum, starting with the maximum element.  Determine the final remaining element after this process.",
                "constraints": [
                    "1 <= arr.size() <= 10^5",
                    "1 <= arr[i] <= 10^6"
                ],
                "testcases": [
                    {
                        "input": "[7, 8, 3, 4, 2, 9, 5]",
                        "output": "5",
                        "explanation": "Initially, the array is [7, 8, 3, 4, 2, 9, 5].\n1. Remove the maximum element (9): [7, 8, 3, 4, 2, 5].\n2. Remove the minimum element (2): [7, 8, 3, 4, 5].\n3. Remove the maximum element (8): [7, 3, 4, 5].\n4. Remove the minimum element (3): [7, 4, 5].\n5. Remove the maximum element (7): [4, 5].\n6. Remove the minimum element (4): [5].\nThe last remaining element is 5."
                    },
                    {
                        "input": "[8, 1, 2, 9, 4, 3, 7, 5]",
                        "output": "4",
                        "explanation": "Initially, the array is [8, 1, 2, 9, 4, 3, 7, 5].\n1. Remove the maximum element (9): [8, 1, 2, 4, 3, 7, 5].\n2. Remove the minimum element (1): [8, 2, 4, 3, 7, 5].\n3. Remove the maximum element (8): [2, 4, 3, 7, 5].\n4. Remove the minimum element (2): [4, 3, 7, 5].\n5. Remove the maximum element (7): [4, 3, 5].\n6. Remove the minimum element (3): [4, 5].\n7. Remove the maximum element (5): [4].\nThe last remaining element is 4."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span >Sort the array. If the value of n is odd then simply print the mid(n/2) element in the new array. If the value of n is even then print a[n/2-1] in the new array.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\nclass Solution {\n  public:\n    int leftElement(vector<int> arr) {\n        int n = arr.size();\n        sort(arr.begin(), arr.end());\n        if (n % 2 == 0) {\n            return arr[(n / 2) - 1];\n        } else {\n            return arr[n / 2];\n        }\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\nclass Solution {\n    public int leftElement(int[] arr) {\n        Arrays.sort(arr);\n        int n = arr.length;\n        if (n % 2 == 0) {\n            return arr[(n / 2) - 1];\n        } else {\n            return arr[n / 2];\n        }\n    }\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n\n    def leftElement(self, arr):\n        arr.sort()\n        n = len(arr)\n        if n % 2 == 0:\n            return arr[(n // 2) - 1]\n        else:\n            return arr[n // 2]",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "class Solution {\n    leftElement(arr) {\n        // code here\n        let n = arr.length;\n        arr.sort((a, b) => a - b);\n        if (n % 2 === 0) {\n            return arr[(n / 2) - 1];\n        } else {\n            return arr[Math.floor(n / 2)];\n        }\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}