{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704738,
            "title": "Print this pattern!",
            "titleSlug": "print-this-pattern0709",
            "content": "<p><span style=\"font-size:18px\">Given an integer <strong>N</strong>, you need to print the following pattern.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:\n</strong>N = 3</span>\n<span style=\"font-size:18px\"><strong>Output:\n</strong>33333\n32223\n32123\n32223\n33333</span>\n\n<strong><span style=\"font-size:18px\">Explanation:\n</span></strong><span style=\"font-size:18px\">When N = 3 then there will be three boundaries.\nOuter boundary contains only 3.\nMiddle boundary contains only 2.\nAnd the inner boundary contains only 1.</span></pre>\n\n<p><strong><span style=\"font-size:18px\">Example 2:</span></strong></p>\n\n<pre>\n<strong><span style=\"font-size:18px\">Input:\n</span></strong><span style=\"font-size:18px\">N = 4</span>\n<strong><span style=\"font-size:18px\">Output:\n</span></strong><span style=\"font-size:18px\">4444444\n4333334\n4322234\n4321234\n4322234\n4333334\n4444444</span></pre>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong>&nbsp;&nbsp;<br />\nYou don&#39;t need to read input. Your task is to complete the function&nbsp;<strong>printPattern</strong>()&nbsp;which takes an integer N as an input parameter and print the pattern for it.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong>&nbsp;O(N<sup>2</sup>)<br />\n<strong>Expected Auxiliary Space:</strong>&nbsp;O(1)</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\n1 &lt;= N &lt;= 9</span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Observe the pattern and write the loops accordingly.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "pattern-printing",
                "slug": "pattern-printing"
            }
        ],
        "companies": [
            "adobe"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution\n{\npublic:\n    void printPattern(int N)\n    {\n        for(int i = 0 ; i < 2 * N - 1 ; i++)\n        {\n            for(int j = 0 ; j < 2 * N - 1 ; j++)\n            {\n               cout << (1 + max(abs(N - i - 1), abs(N - j - 1)));\n            }\n            \n            cout << endl;\n        }\n    }\n};\n",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n\n\n/**\n * @param {number} n\n * @returns {void}\n*/\n\nclass Solution{\n    printPattern(n){\n        for(let i = 0 ; i < 2 * n - 1 ; i++){\n            let row = \"\";\n            for(let j = 0 ; j < 2 * n - 1 ; j++){\n               row += (1 + Math.max(Math.abs(n - i - 1), Math.abs(n - j - 1))).toString();\n            }\n            \n            console.log(row);\n        }\n    }\n}",
                "lang_text": "javascript"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    //Function to print the given pattern for N number of rows.\n    public void printPattern(int N)\n    {\n        for(int i = 0 ; i < 2 * N - 1 ; i++)\n        {\n            for(int j = 0 ; j < 2 * N - 1 ; j++)\n            {\n               Console.Write((1 + Math.Max(Math.Abs(N - i - 1), Math.Abs(N - j - 1))));\n            }\n            \n            Console.WriteLine();\n        }\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}