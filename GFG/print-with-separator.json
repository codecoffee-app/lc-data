{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704101,
            "title": "Print With Separator",
            "titleSlug": "print-with-separator",
            "content": "<p><span style=\"font-size: 18px;\">You'll be given two strings <strong>a</strong> and <strong>b,</strong> a separator symbol, and you need to print <strong>a</strong> and <strong>b</strong> such that a and b are separated by the separator symbol followed by a new line.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input</strong></span>: <span style=\"font-size: 18px;\">a = \"Hello\", b = \"World\", separator = \"@\"\n<strong>Output:</strong> Hello@World\n<strong>Explanation</strong>: a and b are printed with the separator symbol in between.\n</span></pre>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two strings, `a` and `b`, and a separator symbol, concatenate the strings with the separator in between, and print the result to standard output.",
                "constraints": [],
                "testcases": [
                    {
                        "input": "a = \"Hello\", b = \"World\", separator = \"@\"",
                        "output": "Hello@World",
                        "explanation": "The string 'Hello' is concatenated with the string 'World' using '@' as the separator."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\"><strong>For Java:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\">a + separator + b</span></pre>\n\n<p><span style=\"font-size:18px\"><strong>For Python:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\">a, b, sep=separator</span></pre>\n\n<p><span style=\"font-size:18px\"><strong>For CPP:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\">a &lt;&lt; separator &lt;&lt;b</span>\n</pre>\n\n<p><span style=\"font-size:18px\"><strong>For C:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\">&quot;%s%s%s\\n&quot;, a, separator, b</span></pre>"
        ],
        "relatedTopics": [
            {
                "name": "python-io",
                "slug": "python-io"
            },
            {
                "name": "CPP",
                "slug": "cpp"
            },
            {
                "name": "Java",
                "slug": "java"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C",
                "full_func": "//Back-end complete function Template for C\nvoid utility() {\n    char a[50], b[50], separator[50];\n    scanf(\"%s%s%s\", &a, &b, &separator);\n    // Your code here\n    printf(\"%s%s%s\\n\", a, separator, b);\n}",
                "lang_text": "c"
            },
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\nvoid utility() {\n    string a, b, separator;\n    cin >> a >> b >> separator;\n    // Your code here\n    cout << a << separator << b << endl;\n}",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\npublic static void utility() {\n    String a = scn.nextLine();\n    String b = scn.nextLine();\n    String separator = scn.nextLine();\n    // Your code below\n    System.out.println(a + separator + b);\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\n\ndef utility():\n    a = input()\n    b = input()\n    separator = input()\n    print(a, b, sep=separator)\n",
                "lang_text": "py"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    public void utility(string a, string b, string separator)\n    {\n        Console.WriteLine(a + separator + b);\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}