{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 702792,
            "title": "PriorityQueue Inserion - 1",
            "titleSlug": "priorityqueue-inserion",
            "content": "<p><span style=\"font-size: 18px;\">Given an integer ArrayList <strong>arr[]</strong>, you need to insert the given elements into a PriorityQueue.<br /><strong>Note: </strong>PriorityQueue in Java is implemented as a min heap.</span></p>\n<p><strong><span style=\"font-size: 18px;\">Examples:</span></strong></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr[] = [5, 4, 2, 99, 5, 3]</span>\n<span style=\"font-size: 18px;\"><strong>Output: </strong>2 3 4 5 5 99</span>\n<span style=\"font-size: 18px;\"><strong>Explanation: </strong>After inserting given elements in a PQ, they get arranged in a min heap way. So when we print it we get in sorted order.</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr[] = [5, 5]</span>\n<span style=\"font-size: 18px;\"><strong>Output: </strong>5 5</span>\n<span style=\"font-size: 18px;\"><strong>Explanation: </strong>After inserting given elements in a PQ, they get arranged in a min heap way. So when we print it we get in sorted order.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &lt;= arr.size() &lt;= 10<sup>3</sup><br />1 &lt;= arr<sub>i</sub> &lt;= 10<sup>7</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:20px\">Traverse the ArrayList&nbsp;and add the elements to the PriorityQueue.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Java",
                "slug": "java"
            },
            {
                "name": "Java-Collections",
                "slug": "java-collections"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\npublic static PriorityQueue<Integer> insertion(ArrayList<Integer> arr) {\n    // Creating a new PriorityQueue\n    PriorityQueue<Integer> pq = new PriorityQueue<>();\n\n    // adding all the elements of the\n    // ArrayList to the PriorityQueue\n    for (int i : arr) pq.add(i);\n\n    // returining the PriorityQueue\n    return pq;\n}",
                "lang_text": "java"
            }
        ],
        "platform": "GFG"
    }
}