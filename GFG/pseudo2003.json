{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704781,
            "title": "Psuedobinary Numbers",
            "titleSlug": "pseudo2003",
            "content": "<p><span style=\"font-size: 18px;\">You are given a number <strong>N</strong>, you have to represent this number as the sum of the minimum number of possible pseudo-binary numbers. A number is said to be a pseudo-binary number if its decimal number consists of only two digits (0 and 1).<br />Few examples of&nbsp;pseudo-binary numbers are 0, 1, 10, 11, 101, 110 etc&nbsp;</span></p>\n<p><strong><span style=\"font-size: 18px;\">Example:</span></strong></p>\n<pre><strong><span style=\"font-size: 18px;\">Input:\n</span></strong><span style=\"font-size: 18px;\">N = 31</span>\n\n<strong><span style=\"font-size: 18px;\">Output:\n</span></strong><span style=\"font-size: 18px;\">11 10 10</span>\n\n<strong><span style=\"font-size: 18px;\">Explanation: \n</span></strong><span style=\"font-size: 18px;\">31 can be represented as the sum of\nminimum 3 pseudo-binary numbers as 11+10+10.</span></pre>\n<p><strong><span style=\"font-size: 18px;\">Example:</span></strong></p>\n<pre><strong><span style=\"font-size: 18px;\">Input:\n</span></strong><span style=\"font-size: 18px;\">N = 12</span>\n\n<strong><span style=\"font-size: 18px;\">Output:\n</span></strong><span style=\"font-size: 18px;\">11 1</span>\n\n<strong><span style=\"font-size: 18px;\">Explanation: \n</span></strong><span style=\"font-size: 18px;\">12 can be represented as sum of\nminimum 2 psuedo-binary numbers as 11+1.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Your Task:&nbsp;&nbsp;</strong><br />You don't need to read input or print anything. Your task is to complete the function&nbsp;<strong>minimumPseudo</strong><strong>Binary()</strong>&nbsp;which takes an integer N as an input parameter and return&nbsp;the list of the minimum number of&nbsp;pseudo-binary&nbsp;numbers in non-increasing order that sums up to N.<br /><br /><strong>Expected Time Complexity:</strong>&nbsp;O(NLogN)<br /><strong>Expected Auxiliary Space:</strong>&nbsp;O(1)</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &lt;= N &lt;= 10<sup>6</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Try to do greedily and find the maximum pseudo-binary number less than equal to N then subtract that number from N and do this again while N &gt; 0.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function template in C++\n\nclass Solution\n{\npublic:\n    //Function to convert a number into its corresponding pseudo-binary representation.\n    void psuedoBinary(int n,vector<int>& ans)\n    {\n        while(n>0)\n        {\n            long long int temp = n, m=0, p=1, re, i, j; \n            \n            //Extracting each digit from the number and converting it into pseudo-binary form.\n            while(temp)\n            {\n                re = temp%10; \n                temp = temp/10; \n                \n                //If digit is not zero, add corresponding powers of 10 to 'm'.\n                if(re!=0)\n                m = m + p; \n                \n                p*=10; \n            }\n            ans.push_back(m);\n            \n            //Updating 'n' by subtracting the value of 'm'.\n            n= n-m; \n        }\n    }\n\n    //Function to find the minimum pseudo-binary representation of a given number.\n    vector<int> minimumPseudoBinary(int N)\n    {\n        vector<int> ans;\n        //Calling the helper function to convert 'N' into its pseudo-binary representation.\n        psuedoBinary(N,ans);\n        \n        //Returning the resultant pseudo-binary representation.\n        return ans;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "// User function Template for C#\n\npublic class Solution {\n    // Complete this function\n    public List<int> minimumPseudoBinary(int N) {\n        List<int> ans = new List<int>();\n\n        while (N > 0) {\n            long temp = N;\n            long m = 0;\n            long p = 1;\n            long re;\n\n            while (temp > 0) {\n                re = temp % 10;\n                temp = temp / 10;\n\n                if (re != 0) m = m + p;\n\n                p *= 10;\n            }\n\n            ans.Add((int)m);\n\n            N = (int)(N - m);\n        }\n\n        return ans;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}