{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 881357,
            "title": "Queue Push & Pop",
            "titleSlug": "queue-designer--104629",
            "content": "<div class=\"problemQuestion\">\n<p><span style=\"font-size: 18px;\">You are given an integer array <strong>arr</strong>[]. Your task is to perform the following operations:</span></p>\n<ul>\n<li><span style=\"font-size: 18px;\">The function <strong>_push()</strong> takes the array as parameters and returns a queue formed using the array.</span></li>\n<li><span style=\"font-size: 18px;\">The function <strong>_pop()</strong>, takes the queue as the input parameter and prints the queue elements.</span></li>\n</ul>\n<p><strong><span style=\"font-size: 18px;\">Examples:</span></strong></p>\n<pre><span style=\"font-size: 18px;\"><strong><span style=\"font-size: 18px;\">Input:</span> </strong></span><span style=\"font-size: 18px;\">arr[] = [1, 2, 3, 4, 5] </span>\n<span style=\"font-size: 18px;\"><strong>Output: </strong>1 2 3 4 5</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr[] = [1, 6, 43, 1, 2, 0, 5]\n<strong>Output: </strong>1 6 43 1 2 0 5</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &lt;= arr.size() &lt;= 100<br />1 &lt;= arr[i] &lt;= 10<sup>7</sup></span></p>\n</div>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an integer array `arr`, implement the following functions:\n\n*   `_push(arr)`: This function takes the array `arr` as input and returns a queue containing the elements of the array in the same order.\n*   `_pop(queue)`: This function takes a queue as input and prints the elements of the queue, separated by spaces.",
                "constraints": [
                    "1 <= arr.size() <= 100",
                    "1 <= arr[i] <= 10^7"
                ],
                "testcases": [
                    {
                        "input": "[1, 2, 3, 4, 5]",
                        "output": "1 2 3 4 5",
                        "explanation": null
                    },
                    {
                        "input": "[1, 6, 43, 1, 2, 0, 5]",
                        "output": "1 6 43 1 2 0 5",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>1. Basically enque operation in queue is insertion in queue and deque is deletion from queue. Moreover, enque and deque operation can be performed from front and rear end of the queue respectively. This is&nbsp;called as FIFO(First In First Out).</p>"
        ],
        "relatedTopics": [
            {
                "name": "Queue",
                "slug": "queue"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\n//Back-end complete function Template for C++\n\nqueue<int> _push(vector<int> &arr) {\n    queue<int> s;\n    int n = arr.size();\n    // adding elements in queue\n    for (int i = 0; i < n; i++) {\n        s.push(arr[i]);\n    }\n    return s;\n}\n\nvoid _pop(queue<int> &q) {\n    while (!q.empty()) {\n        cout << q.front() << \" \";\n        q.pop();\n    }\n}",
                "lang_text": "cpp"
            }
        ],
        "platform": "GFG"
    }
}