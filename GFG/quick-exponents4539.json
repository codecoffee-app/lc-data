{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704806,
            "title": "Quick Exponents",
            "titleSlug": "quick-exponents4539",
            "content": "<p><span style=\"font-size:18px\">Given two numbers <strong>a</strong> and <strong>b</strong>. Find the last digit of a raised to the power b.</span></p>\n\n<p><strong><span style=\"font-size:18px\">Example 1:</span></strong></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\na = 3\nb = 4</span>\n\n<span style=\"font-size:18px\"><strong>Output:</strong>\n1</span>\n\n<span style=\"font-size:18px\"><strong>Explanation:</strong>\n3<sup>4</sup> = 81 so the last digit is 1.</span></pre>\n\n<p><strong><span style=\"font-size:18px\">Example 2:</span></strong></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\na = 2\nb = 8</span>\n\n<span style=\"font-size:18px\"><strong>Output:</strong>\n6</span>\n\n<span style=\"font-size:18px\"><strong>Explanation:</strong>\n2<sup>8</sup> = 256 so the last digit is 6.</span></pre>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:&nbsp;&nbsp;</strong><br />\nYou don&#39;t need to read input or print anything. Your task is to complete the function&nbsp;<strong>quickExponents()</strong>&nbsp;which take two integers a and b and returns the last digit of a raise to the power b.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong>&nbsp;O(Log(b))<br />\n<strong>Expected Auxiliary Space:</strong>&nbsp;O(1)</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\n1 &lt;= a, b&nbsp;&lt;= 10<sup>18</sup></span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two numbers, `a` and `b`, find the last digit of `a` raised to the power of `b` (a<sup>b</sup>).",
                "constraints": [
                    "1 <= a <= 10^18",
                    "1 <= b <= 10^18"
                ],
                "testcases": [
                    {
                        "input": "a = 3, b = 4",
                        "output": "1",
                        "explanation": "3 raised to the power of 4 is 81. The last digit of 81 is 1."
                    },
                    {
                        "input": "a = 2, b = 8",
                        "output": "6",
                        "explanation": "2 raised to the power of 8 is 256. The last digit of 256 is 6."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Observe the pattern of how does the last digit repeats.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution\n{\npublic:\n    // Function to calculate the result of quick exponents.\n    int quickExponents(long long a, long long b)\n    {\n        // Taking the remainder of a and b when divided by 10.\n\t    a = a%10;\n\t    b = b%4;\n\n\t    // Checking if b is 0, if so, setting b to 4.\n\t    b= (b == 0) ? 4 : b;\n\n\t    // Calculating the result using pow function and taking the remainder when divided by 10.\n\t    long long int ans=(long long)(pow(a,b));\n\t    ans = ans % 10;\n\n\t    // Returning the result.\n\t    return ans;\n\t    \n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}