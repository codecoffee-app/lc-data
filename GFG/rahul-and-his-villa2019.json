{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703145,
            "title": "Find the maximum area",
            "titleSlug": "rahul-and-his-villa2019",
            "content": "<p><span >You are given an array <strong>arr&nbsp;</strong>denoting the side length of the squares. You have to return the maximum area that can be formed.</span></p>\n<p><span ><strong>Examples:</strong></span></p>\n<pre><span ><strong>Input: </strong>arr[] = [1, 2, 4]\n<strong>Output: </strong>16\n<strong>Explanation: </strong>The maximum area that can be formed is 16 by square side of length 4.</span></pre>\n<pre><span ><strong>Input: </strong>arr[] = [3, 4, 6]\n<strong>Output: </strong>36<br /><strong>Explanation:<span > </span></strong>The maximum area that can be formed is 36 by square side of length 6.</span></pre>\n<p><span ><strong>Expected Time Complexity:</strong> O(n)<br /><strong>Expected Auxiliary Space:</strong> O(1)</span></p>\n<p><span ><strong>Constraints:</strong><br />1 &le; &thinsp;arr.size() &le;&thinsp;10<sup>6</sup><br />1 &le; &thinsp;arr[i] &le;&thinsp;10<sup>3</sup><br /></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array `arr` where each element represents the side length of a square, find the maximum area that can be formed by any of these squares.",
                "constraints": [
                    "1 <= arr.length <= 10^6",
                    "1 <= arr[i] <= 10^3"
                ],
                "testcases": [
                    {
                        "input": "[1, 2, 4]",
                        "output": "16",
                        "explanation": "The square with the largest side length is 4.  Its area is 4 * 4 = 16."
                    },
                    {
                        "input": "[3, 4, 6]",
                        "output": "36",
                        "explanation": "The square with the largest side length is 6. Its area is 6 * 6 = 36."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span >Traverse the array and find maximum side length and then find area.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Hash",
                "slug": "hash"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    int maxArea(vector<int>& arr) {\n        int n = arr.size();\n        // initialising max area to 0\n        int mx = 0;\n        // traverse the array\n        for (int i = 0; i < n; i++) {\n            // updating mx with area\n            int a = arr[i] * arr[i];\n            if (mx < a) {\n                mx = a;\n            }\n        }\n        return mx;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution {\n    public int maxArea(int[] arr) {\n        int n = arr.length;\n        // Initialize max area to 0\n        int mx = 0;\n\n        // Traverse the array\n        for (int i = 0; i < n; i++) {\n            // Updating mx with the area\n            int a = arr[i] * arr[i];\n            if (mx < a) {\n                mx = a;\n            }\n        }\n\n        return mx;\n    }\n}\n",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "class Solution:\n\n    def maxArea(self, arr):\n        n = len(arr)\n        # Initialize max area to 0\n        mx = 0\n\n        # Traverse the array\n        for i in range(n):\n            # Updating mx with the area\n            a = arr[i] * arr[i]\n            if mx < a:\n                mx = a\n\n        return mx\n",
                "lang_text": "py"
            },
            {
                "lang": "Javascript",
                "full_func": "//Back-end complete function Template for javascript\nclass Solution {\n    maxArea(arr) {\n        let n = arr.length;\n        // Initialize max area to 0\n        let mx = 0;\n\n        // Traverse the array\n        for (let i = 0; i < n; i++) {\n            // Updating mx with the area\n            let a = arr[i] * arr[i];\n            if (mx < a) {\n                mx = a;\n            }\n        }\n\n        return mx;\n    }\n}\n",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}