{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704433,
            "title": "Reach the Nth point",
            "titleSlug": "reach-the-nth-point5433",
            "content": "<p><span style=\"font-size: 18px;\">There are<strong> N </strong>points on the road, you can step ahead by 1 or 2 . If you start from a point 0, and can only move from point <strong>i</strong> to point <strong>i+1</strong> after taking a step of length one, find the number of ways you can reach at point <strong>N.</strong>&nbsp;</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: <br /></strong>N =<strong> </strong>4\n<strong>Output: <br /></strong>5\n<strong>Explanation:</strong> Number of ways to reach at 4th\npoint are {1, 1, 1, 1}, {1, 1, 2},\n{1, 2, 1} {2, 1, 1}, {2, 2}.\n</span>\n</pre>\n<p><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>N = 5\n<strong>Output: </strong>8\n<strong>Explanation: </strong>Number of ways to reach at 5th\npoint are {1, 1, 1, 1, 1},\n{1, 1, 1, 2}, {1, 1, 2, 1}, {1, 2, 1, 1},\n{2, 1, 1, 1}{1, 2, 2}, {2, 1, 2}, {2, 2, 1}</span>\n</pre>\n<p><span style=\"font-size: 18px;\"><strong>Your Task:</strong><br />You don't need to read or print anyhting. Your task is to complete the function&nbsp;<strong>nthPoint()</strong>&nbsp;which takes <strong>N</strong> as input parameter and returns the total number of ways <strong>modulo 10<sup>9</sup>&nbsp;+ 7 </strong>to reach at <strong>N<sup>th</sup> </strong>point.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:&nbsp;</strong>O(N)<br /><strong>Expected Space Complexity:&nbsp;</strong>O(N)</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &le; N &le; 10<sup>5</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Think about fibonacci series.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "morgan-stanley",
            "amazon",
            "intel"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution{\r\n\tpublic:\r\n\t\tint nthPoint(int n){\r\n\t\t\tint mod = 1000000007;\r\n\t\t\tint dp[n+1]={0};\r\n\t\t\tdp[0] = 1; \r\n\t\t\tdp[1] = 1; // ways to reach at 1st stair.\r\n\t\t\tdp[2] = 2; // ways to reach at 2nd stair.\r\n\t\t\tfor(int i = 3; i <= n; i++)\r\n\t\t\t\t// Adding the answers from previous two stairs\r\n\t\t\t\tdp[i] = (dp[i-1] % mod + dp[i-2] % mod) % mod;\r\n\t\t\treturn dp[n];\r\n\t\t}\r\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution\n{\n    public int nthPoint(int n)\n    {\n        int mod = 1000000007;\n        int []dp = new int[n+10];\n        dp[0]=1;dp[1]=1;dp[2]=2;\n        for(int i=3;i<=n;i++)\n        {\n            dp[i]=(dp[i]+dp[i-1])%mod;\n            dp[i]=(dp[i]+dp[i-2])%mod;\n        }\n        return dp[n];\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "class Solution:\n\n    def nthPoint(self, n):\n        mod = 1000000007\n        dp = [0] * (n + 1)\n        dp[0] = 1\n        dp[1] = 1  # ways to reach the 1st stair\n        for i in range(2, n + 1):\n            dp[i] = (dp[i - 1] % mod + dp[i - 2] % mod) % mod\n        return dp[n]\n",
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    public int nthPoint(int n)\n    {\n        int mod = 1000000007;\n        List<int> dp = new List<int>();\n        dp.Add(1);\n        dp.Add(1); // ways to reach at 1st stair.\n        dp.Add(2); // ways to reach at 2nd stair.\n        for(int i = 3; i <= n; i++)\n            // Adding the answers from previous two stairs\n            dp.Add((dp[i-1] % mod + dp[i-2] % mod) % mod);\n        return dp[n];\n    }\n}",
                "lang_text": "csharp"
            },
            {
                "lang": "Javascript",
                "full_func": "class Solution {\n    nthPoint(N){\n        let mod = 1000000007;\n        let dp = new Array(N+1).fill(0);\n        dp[0] = 1;\n        dp[1] = 1;\n        dp[2] = 2;\n        for(let i = 3; i <= N; i++){\n            dp[i] = (dp[i-1] % mod + dp[i-2] % mod) % mod;\n        }\n        return dp[N];\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}