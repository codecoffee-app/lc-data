{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 702920,
            "title": "Even Greater than Odd",
            "titleSlug": "rearrange-array-such-that-even-positioned-are-greater-than-odd4804",
            "content": "<p><span >Given an array <strong>arr</strong>, rearrange the array according to the following relations :</span></p>\n<blockquote>\n<p><span >arr[i] &gt;= arr[i-1], if i is even.<br />arr[i] &lt;= arr[i-1], if i is odd.<br /></span><span >[Considering <strong>1-base</strong> indexed array]</span></p>\n</blockquote>\n<p><span style=\"font-size: 18.6667px;\">Return the rearranged array.</span></p>\n<p><span style=\"font-size: 18.6667px;\"><strong>Note:</strong> The driver code will print \"true\" if your output array satisfies the conditions; otherwise, it will print \"false\".</span></p>\n<p><span ><strong>Example:</strong></span></p>\n<pre><span ><strong>Input: </strong>arr[] =<strong> </strong>[1, 2, 2, 1]<strong>\nOutput: </strong>[1, 2, 1, 2]<strong>\nExplanation: </strong>Both 2s are at even positions and 1s at odd positions, satisfying the given conditions.</span></pre>\n<pre><span ><strong>Input: </strong>arr[] <strong>= </strong>[1, 3, 2]\n<strong>Output: </strong>[1, 3, 2]\n<strong>Explanation: </strong>The array is already arranged according to the conditions.</span></pre>\n<p><span ><strong>Constraints:<br /></strong>1 &le; arr.size() &le; 10<sup>5</sup></span><br /><span >1 &le; arr[i] &le; 10<sup>4</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array `arr`, rearrange it such that elements at even indices are greater than or equal to the preceding element, and elements at odd indices are less than or equal to the preceding element. The array is 1-based indexed.",
                "constraints": [
                    "1 <= arr.size() <= 10^5",
                    "1 <= arr[i] <= 10^4"
                ],
                "testcases": [
                    {
                        "input": "[1, 2, 2, 1]",
                        "output": "[1, 2, 1, 2]",
                        "explanation": "The rearranged array satisfies the condition that elements at even indices are greater than or equal to the preceding element, and elements at odd indices are less than or equal to the preceding element."
                    },
                    {
                        "input": "[1, 3, 2]",
                        "output": "[1, 3, 2]",
                        "explanation": "The input array already satisfies the required conditions."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span >Observe that the array consists of [n/2] even-positioned elements. If we assign the largest [n/2] elements to the even positions and the rest of the elements to the odd positions, our problem is solved. Because the element at an odd position will always be less than the element at an even position as it is a maximum element and vice versa. Sort the array and assign the first [n/2] elements at even positions.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    vector<int> rearrangeArray(vector<int>& arr) {\n        int n = arr.size();\n\n        // Sort the array\n        sort(arr.begin(), arr.end());\n\n        vector<int> ans(n);\n        int p = 0, q = n - 1;\n\n        for (int i = 0; i < n; i++) {\n            // Assign even indexes with maximum elements\n            if ((i + 1) % 2 == 0) {\n                ans[i] = arr[q--];\n            }\n            // Assign odd indexes with remaining elements\n            else {\n                ans[i] = arr[p++];\n            }\n        }\n\n        return ans;\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "\n\nclass Solution {\n    // Method to rearrange the array\n    public ArrayList<Integer> rearrangeArray(ArrayList<Integer> arr) {\n        // Sort the array\n        Collections.sort(arr);\n\n        int n = arr.size();\n        ArrayList<Integer> ans =\n            new ArrayList<>(Collections.nCopies(n, 0)); // Initialize with 0s\n\n        int p = 0, q = n - 1;\n\n        for (int i = 0; i < n; i++) {\n            // Assign even indexes with maximum elements\n            if ((i + 1) % 2 == 0) {\n                ans.set(i, arr.get(q--));\n            }\n            // Assign odd indexes with remaining elements\n            else {\n                ans.set(i, arr.get(p++));\n            }\n        }\n\n        return ans;\n    }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n\n    def rearrangeArray(self, arr):\n        n = len(arr)\n\n        # Sort the array in ascending order\n        arr.sort()\n\n        # If there are only 1 or 2 elements, return the array as it is\n        if n == 1 or n == 2:\n            return arr\n\n        # If the number of elements is even\n        if n % 2 == 0:\n            # Swapping adjacent elements starting from the second element\n            for i in range(1, n - 1, 2):\n                arr[i], arr[i + 1] = arr[i + 1], arr[i]\n        # If the number of elements is odd\n        else:\n            # Swapping adjacent elements starting from the second element\n            for i in range(1, n, 2):\n                arr[i], arr[i + 1] = arr[i + 1], arr[i]\n\n        return arr\n",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "// Solution class\nclass Solution {\n    rearrangeArray(arr) {\n        let n = arr.length;\n\n        // Sort the array in ascending order\n        arr.sort((a, b) => a - b);\n\n        // If there are fewer than 2 elements, return the array as it is\n        if (n <= 2) {\n            return arr;\n        }\n\n        // If the number of elements is even\n        if (n % 2 === 0) {\n            // Swapping adjacent elements starting from the second element\n            for (let i = 1; i < n - 1; i += 2) {\n                [arr[i], arr[i + 1]] = [ arr[i + 1], arr[i] ];\n            }\n        } else {\n            // If the number of elements is odd\n            // Swapping adjacent elements starting from the second element\n            for (let i = 1; i < n; i += 2) {\n                [arr[i], arr[i + 1]] = [ arr[i + 1], arr[i] ];\n            }\n        }\n\n        // Return the modified array\n        return arr;\n    }\n}\n",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}