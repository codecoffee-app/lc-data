{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703005,
            "title": "Rearrange string as alternate x and y occurences",
            "titleSlug": "rearrange-string-as-alternate-x-and-y-occurences3835",
            "content": "<p><span style=\"font-size: 20px;\">Given a binary string <strong>s</strong> and two integers <strong>x</strong> and <strong>y</strong>. Arrange the given string in such a way so that '0' comes X-times then '1' comes Y-times and so on until one of the '0' or '1' is finished. Then concatenate the rest of the string and find the final string.</span></p>\n<p><strong><span style=\"font-size: 18px;\">Example 1:</span></strong></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong>\nX = 1, Y = 1, S = \"0011\"\n<strong>Output: </strong>\"0101\"\n<strong>Explanation:</strong> we put 1 '0' and 1 '1'\nalternatively.\n</span></pre>\n<p><strong><span style=\"font-size: 18px;\">Example 2:</span></strong></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong>\nX = 1, Y = 1, S = \"1011011\"\n<strong>Output:</strong> \"0101111\"\n<strong>Explanation:</strong> We put '0' and '1' \nalternatively and in last we have to\nput all '1' as there is no '0' left.</span>\n</pre>\n<p><br /><span style=\"font-size: 18px;\"><strong>Your Task:&nbsp;&nbsp;</strong><br />You don't need to read input or print anything. Your task is to complete the function&nbsp;<strong>arrangeString()</strong>&nbsp;which takes the string <strong>S</strong> and <strong>X, Y&nbsp;</strong>as inputs, and returns modified string.<br /><br /><strong>Expected Time Complexity:</strong>&nbsp;O(|S|)<br /><strong>Expected Auxiliary Space:</strong>&nbsp;O(1)<br /><br /><strong>Constraints:</strong><br />1 &le; X, Y &le; 10<sup>3</sup><br />1 &le; |S| &le; 10<sup>5</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a binary string `s` and two integers `x` and `y`, rearrange the string such that `x` consecutive '0's are followed by `y` consecutive '1's, and so on, until either all '0's or all '1's are exhausted.  Concatenate any remaining '0's or '1's to the end of the string. Return the resulting string.",
                "constraints": [
                    "1 <= X, Y <= 10^3",
                    "1 <= |S| <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "X = 1, Y = 1, S = \"0011\"",
                        "output": "\"0101\"",
                        "explanation": "We alternate between one '0' and one '1' until all possible pairs are formed."
                    },
                    {
                        "input": "X = 1, Y = 1, S = \"1011011\"",
                        "output": "\"0101111\"",
                        "explanation": "We alternate '0' and '1' as before. Since we run out of '0's, the remaining '1's are appended to the end of the string."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Count frequency of 0 and 1 first and then place X &#39;0&#39; and Y &#39;1&#39; alternatively.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function template in C++\n\nclass Solution\n{\n  public:\n    //Function to arrange the string according to given conditions.\n    string arrangeString(string str, int x, int y)\n    {\n        string ans = \"\";\n        int count_0 = 0;\n        int count_1 = 0;\n        int len = str.length();\n\n        //counting the number of 0s and 1s in the string.\n        for (int i = 0; i < len; i++) {\n            if (str[i] == '0')\n                count_0++;\n            else\n                count_1++;\n        }\n\n        //arranging the string according to given conditions,\n        //until there are remaining 0s or 1s.\n        while (count_0 > 0 || count_1 > 0) {\n         for (int j = 0; j < x && count_0 > 0; j++) {\n            //adding 0 to the answer string x times if count_0 is greater than 0.\n            if (count_0 > 0) {\n               ans += \"0\";\n               count_0--;\n            }\n         }\n         for (int j = 0; j < y && count_1 > 0; j++) {\n            //adding 1 to the answer string y times if count_1 is greater than 0.\n            if (count_1 > 0) {\n               ans += \"1\";\n               count_1--;\n            }\n          }\n        }\n\n        //returning the final arranged string.\n        return ans;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution\n{\n    \n    public String arrangeString(String str, int x, int y)\n    {\n        StringBuilder ans = new StringBuilder();\n        int count_0 = 0;\n        int count_1 = 0;\n        int len = str.length();\n\n        //counting the number of 0s and 1s in the string.\n        for (int i = 0; i < len; i++) {\n            if (str.charAt(i) == '0')\n                count_0++;\n            else\n                count_1++;\n        }\n\n        //arranging the string according to given conditions,\n        //until there are remaining 0s or 1s.\n        while (count_0 > 0 || count_1 > 0) {\n         for (int j = 0; j < x && count_0 > 0; j++) {\n            //adding 0 to the answer string x times if count_0 is greater than 0.\n            if (count_0 > 0) {\n               ans.append(0);\n               count_0--;\n            }\n         }\n         for (int j = 0; j < y && count_1 > 0; j++) {\n            //adding 1 to the answer string y times if count_1 is greater than 0.\n            if (count_1 > 0) {\n               ans.append(1);\n               count_1--;\n            }\n          }\n        }\n\n        //returning the final arranged string.\n        return ans.toString();\n    }\n\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            },
            {
                "lang": "C#",
                "full_func": "\npublic class Solution {\n    public string arrangeString(string str, int x, int y) {\n        int count_0 = 0;\n        int count_1 = 0;\n        int len = str.Length;\n\n        // counting the number of 0s and 1s in the string\n        foreach (char c in str) {\n            if (c == '0')\n                count_0++;\n            else\n                count_1++;\n        }\n\n        StringBuilder ans = new StringBuilder();\n\n        // arranging the string according to given conditions\n        while (count_0 > 0 || count_1 > 0) {\n            for (int j = 0; j < x && count_0 > 0; j++) {\n                ans.Append('0');\n                count_0--;\n            }\n            for (int j = 0; j < y && count_1 > 0; j++) {\n                ans.Append('1');\n                count_1--;\n            }\n        }\n\n        return ans.ToString();\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}