{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 702689,
            "title": "Rearranging array",
            "titleSlug": "rearranging-array1648",
            "content": "<p><span style=\"font-size: 18px;\">Given an array&nbsp;</span><strong style=\"font-size: 18px;\">arr&nbsp;</strong><span style=\"font-size: 18px;\">of&nbsp;</span><strong style=\"font-size: 18px;\">distinct</strong><span style=\"font-size: 18px;\"> integers. Rearrange the array in such a way that the first element is the smallest and the second element is the largest, the third element is the second smallest and the fourth element is the second largest, and so on.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr[] = [4, 5, 1, 2, 3]\n<strong>Output: </strong>[1, 5, 2, 4, 3]\n</span><strong><span style=\"font-size: 18px;\">Explanation:</span> </strong><span style=\"font-size: 18px;\">The minimum element is 1, maximum element is 5, second minimum is 2 and so on, thus the rearranged array is [1, 5, 2, 4, 3]</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr[] = [1, 2, 3, 4]\n<strong>Output: </strong>[1, 4, 2, 3]<br /></span><strong style=\"font-size: 18px; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Explanation: </strong><span style=\"font-size: 18px;\">The minimum element is 1, maximum element is 4, second minimum is 2 and so on, thus the rearranged array is [1, 4, 2, 3]</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong> O(n*logn)<br /><strong>Expected Auxiliary Space:</strong> O(n)</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &le; arr.size() &le; 10<sup>5</sup><br />1 &le; arr[i] &le; 10<sup>6</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p><span >The idea is to <strong>sort</strong> the list in ascending order first. Then we start popping elements from both ends of the list alternatively and insert them into their correct position in the <strong>answer[]</strong> array.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function template in C++\n\nclass Solution {\n  public:\n    // Function to rearrange the array elements\n    vector<int> Rearrange(vector<int> arr) {\n        int n = arr.size();\n        vector<int> answer(n);\n        // Sorting the array in ascending order\n        sort(arr.begin(), arr.end());\n\n        // Initializing minimum and maximum indices\n        int mini = 0, maxi = n - 1;\n\n        // Looping through the array\n        for (int i = 0; i < n; i++) {\n            // If index is even\n            if (i % 2 == 0) {\n                // Assigning minimum value to answer array and updating minimum index\n                answer[i] = arr[mini];\n                mini++;\n            }\n            // If index is odd\n            else {\n                // Assigning maximum value to answer array and updating maximum index\n                answer[i] = arr[maxi];\n                maxi--;\n            }\n        }\n        return answer;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\n// Function to rearrange the elements in array a[] based on given conditions\nclass Solution {\n\n    // Function to rearrange the elements in array a[] based on given conditions\n    public static ArrayList<Integer> Rearrange(int[] arr) {\n        // Sorting the input array in ascending order\n        int n = arr.length;\n        Arrays.sort(arr);\n        ArrayList<Integer> answer = new ArrayList<>();\n        // Initializing variables to keep track of the minimum and maximum indices in\n        // the answer array\n        int mini = 0, maxi = n - 1;\n\n        // Looping through the input array and rearranging the elements based on their\n        // indices\n        for (int i = 0; i < n; i++) {\n            // If the index is even, add the smallest remaining element from the sorted\n            // array to the answer array\n            if (i % 2 == 0) {\n                answer.add(arr[mini]);\n                mini++;\n            }\n            // If the index is odd, add the largest remaining element from the sorted\n            // array to the answer array\n            else {\n                answer.add(arr[maxi]);\n                maxi--;\n            }\n        }\n        return answer;\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\n\nclass Solution:\n    #Function to rearrange the array elements alternatively.\n    def Rearrange(self, arr):\n        n = len(arr)\n        #sorting the array in non-decreasing order.\n        answer = []\n        arr.sort()\n        mini, maxi = 0, n - 1\n\n        #iterating over the array.\n        for i in range(0, n):\n\n            #if index is even, assigning minimum element to answer array.\n            if (i % 2 == 0):\n                answer.append(arr[mini])\n                mini += 1\n\n            #if index is odd, assigning maximum element to answer array.\n            else:\n                answer.append(arr[maxi])\n                maxi -= 1\n\n        return answer\n",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "// User function Template for javascript\n\nclass Solution {\n    // Function to find sum of prime elements of an array.\n    Rearrange(arr) {\n        let n = arr.length;\n        // sorting the array in non-decreasing order.\n        arr.sort((a, b) => a - b);\n        let mini = 0, maxi = n - 1;\n        const answer = new Array(n);\n        // iterating over the array.\n        for (let i = 0; i < n; i++) {\n            // if index is even, assigning minimum element to answer array.\n            if (i % 2 === 0) {\n                answer[i] = arr[mini];\n                mini++;\n            }\n\n            // if index is odd, assigning maximum element to answer array.\n            else {\n                answer[i] = arr[maxi];\n                maxi--;\n            }\n        }\n        return answer;\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}