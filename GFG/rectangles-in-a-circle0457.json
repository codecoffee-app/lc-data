{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705422,
            "title": "Number of Rectangles in a Circle",
            "titleSlug": "rectangles-in-a-circle0457",
            "content": "<p><span style=\"font-size: 18px;\">Given a circular sheet of radius, <strong>r</strong>. Find the total number of rectangles with integral length and width that can be cut from the sheet </span><span style=\"font-size: 18px;\">that can fit on the circle</span><span style=\"font-size: 18px;\">, one at a time.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples :</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: r</strong>=1\n<strong>Output: </strong>1\n<strong>Explanation: </strong>Only 1 rectangle of dimensions 1x1.</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: r</strong>=2\n<strong>Output: </strong>8\n<strong>Explanation: </strong>The 8 possible rectangles are \n(1x1)(1x2)(1x3)(2x1)(2x2)(2x3)(3x1)(3x2).</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity: </strong>O(r<sup>2</sup>)<br /><strong>Expected Auxillary Space: </strong>O(1)</span></p>\n<p><br /><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1&lt;=r&lt;=1000&nbsp;</span></p>",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">The largest rectangle that can fit in the circle is a square.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Geometric",
                "slug": "geometric"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nclass Solution {\n  public:\n    // Function to count the number of rectangles that can fit inside a circle.\n    int rectanglesInCircle(int R) {\n        int ans = 0;\n        // iterating over all possible values of length and breadth of rectangle.\n        for (int i = 1; i < 2 * R + 1; i++)\n            for (int j = 1; j < 2 * R + 1; j++)\n                // checking if the length and breadth values form a rectangle\n                // that can fit inside the given circle.\n                if (i * i + j * j <= 2 * R * 2 * R)\n                    ans++;\n        // returning the count of rectangles.\n        return ans;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\nclass Solution {\n    // function to count the number of rectangles in a circle\n    int rectanglesInCircle(int R) {\n        int ans = 0; // initialize the count of rectangles to 0\n        // loop through all possible values of i and j\n        for (int i = 1; i < 2 * R + 1; i++)\n            for (int j = 1; j < 2 * R + 1; j++)\n                // if the sum of squares of i and j is less than or equal to 2R^2,\n                // increment the count of rectangles\n                if (i * i + j * j <= 2 * R * 2 * R) ans++;\n        return ans; // return the final count of rectangles\n    }\n};",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python\n\n\n# Function to count the number of rectangles in a circle\nclass Solution:\n\n    def rectanglesInCircle(self, R):\n\n        ans = 0\n        # Loop through all possible pairs of lengths\n        for i in range(1, 2 * R + 1):\n            for j in range(1, 2 * R + 1):\n\n                # Check if the square of the lengths is less than or equal to the square of the diameter of the circle\n                if i * i + j * j <= 2 * R * 2 * R:\n\n                    # Increment the count of rectangles\n                    ans += 1\n        return ans\n",
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": null,
                "lang_text": "csharp"
            },
            {
                "lang": "Javascript",
                "full_func": "// User function Template for javascript\n/**\n * @param {number} R\n * @returns {number}\n */\n\nclass Solution {\n    // Function to count the number of rectangles that can be circumscribed in a circle.\n    rectanglesInCircle(R) {\n        let ans = 0;\n        // Loop through all possible pairs of lengths\n        for (let i = 1; i <= 2 * R; i++) {\n            for (let j = 1; j <= 2 * R; j++) {\n\n                // Check if the square of the lengths is less than or equal to the\n                // square of the diameter of the circle\n                if (i * i + j * j <= 4 * R * R) {\n\n                    // Increment the count of rectangles\n                    ans += 1;\n                }\n            }\n        }\n        return ans;\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}