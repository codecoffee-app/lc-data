{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704615,
            "title": "Recursively find sum of digits",
            "titleSlug": "recursively-find-sum-of-digits3558",
            "content": "<p><span style=\"font-size: 18px;\">Given two numbers A and B, the task is to find f(A<sup>B</sup>). f(n) which takes a positive integer n as input and does the following:</span></p>\n<p><span style=\"font-size: 18px;\"><em>f(n):</em></span></p>\n<p><span style=\"font-size: 18px;\"><em>if n <span style=\"font-family: arial,helvetica,sans-serif;\">&lt; 10 </span><span style=\"font-family: arial,helvetica,sans-serif;\"> </span></em></span></p>\n<p><span style=\"font-size: 18px;\"><em><span style=\"font-family: arial,helvetica,sans-serif;\">&nbsp;&nbsp;&nbsp; return n</span></em></span></p>\n<p><span style=\"font-size: 18px;\"><em><span style=\"font-family: arial,helvetica,sans-serif;\">else return f( sum_of_digits(n) )</span></em></span></p>\n<p>&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>A = 6, B = 6\n<strong>Output: </strong>9\n<strong>Explanation: </strong>\nf(6<sup>6</sup>) = f(46656) = f(27) = f(9) = 9</span>\n</pre>\n<p><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>A = 7, B = 3\n<strong>Output: </strong>1\n<strong>Explanation: </strong>\nf(7<sup>3</sup>) = f(343) = f(10) = f(1) = 1</span>\n</pre>\n<p>&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Your Task:</strong><br />You don't need to read or print anything. Your task is to complete the function&nbsp;<strong>SumofDigits()</strong> which takes A and B as input parameters and returns f(A<sup>B</sup>).</span><br />&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity: </strong>O(Log(B))<br /><strong>Expected Space Complexity:&nbsp;</strong>O(1)</span><br />&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &lt;= A, B &lt;= 10<sup>9</sup>&nbsp;</span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two numbers A and B, find f(A<sup>B</sup>), where f(n) is defined as follows:\n\n*   If n < 10, return n.\n*   Otherwise, return f(sum_of_digits(n)).\n\nIn essence, f(n) repeatedly calculates the sum of digits until the result is a single-digit number. Your task is to implement the `SumofDigits()` function to efficiently compute this value.",
                "constraints": [
                    "1 <= A <= 10<sup>9</sup>",
                    "1 <= B <= 10<sup>9</sup>"
                ],
                "testcases": [
                    {
                        "input": "A = 6, B = 6",
                        "output": "9",
                        "explanation": "A<sup>B</sup> = 6<sup>6</sup> = 46656.  f(46656) = f(4+6+6+5+6) = f(27) = f(2+7) = f(9) = 9."
                    },
                    {
                        "input": "A = 7, B = 3",
                        "output": "1",
                        "explanation": "A<sup>B</sup> = 7<sup>3</sup> = 343. f(343) = f(3+4+3) = f(10) = f(1+0) = f(1) = 1."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Use Modular&nbsp;exponentiation</p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "\r\nclass Solution{\r\n\tpublic:\r\n\tint power(int x, int y)\r\n\t{\r\n\t    long long int  res = 1;      // Initialize result\r\n\r\n\t    x = x % 9;  // Update x if it is more than or\r\n\t                // equal to p\r\n\r\n\t    while (y > 0)\r\n\t    {\r\n\t        // If y is odd, multiply x with result\r\n\t        if (y & 1)\r\n\t            res = (res*x) % 9;\r\n\r\n\t        // y must be even now\r\n\t        y = y>>1; // y = y/2\r\n\t        x = (x*x) % 9;\r\n\t    }\r\n\t    return res;\r\n\t}\r\n\tint SumofDigits(int A, int B)\r\n\t{\r\n\t\tint x = power(A, B);\r\n\t\tif(x == 0)\r\n\t\t\treturn 9;\r\n\t\treturn x;\r\n\t}\r\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}