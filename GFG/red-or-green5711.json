{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703562,
            "title": "Red OR Green",
            "titleSlug": "red-or-green5711",
            "content": "<p><span style=\"font-size:18px\">Given a string of length N, made up of only uppercase characters &#39;R&#39; and &#39;G&#39;, where &#39;R&#39; stands for Red and &#39;G&#39; stands for Green.Find out the minimum number of characters you need to change to make the whole string of the same colour.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\nN=5\nS=&quot;RGRGR&quot;\n<strong>Output:</strong>\n2\n<strong>Explanation:\n</strong>We need to change only the 2nd and \n4th(1-index based) characters to &#39;R&#39;, \nso that the whole string becomes \nthe same colour.</span></pre>\n\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\nN=7\nS=&quot;GGGGGGR&quot;\n<strong>Output:</strong>\n1\n<strong>Explanation:\n</strong>We need to change only the last \ncharacter to &#39;G&#39; to make the string \nsame-coloured.</span></pre>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>RedOrGreen()&nbsp;</strong>which takes the Integer N and the string&nbsp;S&nbsp;as input parameters and returns the minimum number of characters that have to be swapped to make the string same-coloured.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:&nbsp;</strong>O(N)<br />\n<strong>Expected Auxiliary Space:&nbsp;</strong>O(1)</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\n1&lt;=N&lt;=10<sup>5</sup><br />\nS consists only of characters &#39;R&#39; and &#39;G&#39;.</span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string `S` of length `N` consisting only of uppercase characters 'R' and 'G', determine the minimum number of character changes required to make the entire string a single color (either all 'R' or all 'G').",
                "constraints": [
                    "1 <= N <= 10^5",
                    "S consists only of characters 'R' and 'G'."
                ],
                "testcases": [
                    {
                        "input": "N = 5\nS = \"RGRGR\"",
                        "output": "2",
                        "explanation": "To make the string all 'R', we need to change the characters at indices 1 and 3 (0-indexed) from 'G' to 'R'. Alternatively, to make the string all 'G', we need to change the characters at indices 0, 2, and 4 from 'R' to 'G'. The minimum changes needed are 2."
                    },
                    {
                        "input": "N = 7\nS = \"GGGGGGR\"",
                        "output": "1",
                        "explanation": "To make the string all 'G', we need to change only the last character from 'R' to 'G'. To make the string all 'R', we would need to change the first 6 characters to 'R', which requires 6 changes. Thus, the minimum number of changes required is 1."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Think about counting. :)</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n//Function to count the minimum number of characters to change.\n\nclass Solution {\n  public:\n       int RedOrGreen(int N,string S) {\n           int Red=0,Green=0;\n           //iterating through the string to count the number of red and green characters.\n           for(int i=0;i<N;i++){\n               if(S[i]=='R')\n                Red++;\n               else\n                Green++;\n           }\n           //returning the minimum count between red and green.\n           return min(Red,Green);\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "//backend complete function template for Java\n\nclass Solution {\n    static int RedOrGreen(int N, String S) {\n        int Red = 0, Green = 0;\n        for (int i = 0; i < N; i++) {\n            if (S.charAt(i) == 'R')\n                Red++;\n            else\n                Green++;\n        }\n        return Math.min(Red, Green);\n    }\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "#Back-end complete function Template for Python 3\n\nclass Solution:\n    #Function to find the minimum count of 'R' and 'G' characters\n    def RedOrGreen(self,N,S):\n        Red,Green=0,0\n        #Traversing through the given string S\n        for i in range(N):\n            #if the current character is 'R', increment Red count\n            if(S[i]=='R'):\n                Red=Red+1\n            #if the current character is 'G', increment Green count\n            else:\n                Green=Green+1\n        #returning the minimum count of 'R' and 'G' characters\n        return min(Red,Green)",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n\n\n/**\n * @param {number} N\n * @param {string} S\n * @returns {number}\n*/\n\nclass Solution{\n    RedOrGreen(N, S){\n        let Red=0,Green=0;\n        for(let i=0;i<N;i++){\n            if(S[i]=='R')\n                Red++;\n            else\n                Green++;\n        }\n        return Math.min(Red, Green);\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}