{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 700954,
            "title": "Regex - Python",
            "titleSlug": "regex-python",
            "content": "<p><span style=\"font-size:18px\">Regular expressions are extremely helpful in extracting useful information from loads of text. Regular expressions work on pattern-matching techniques. Extracting phone-number, validating passwords, and extracting images from web-pages are but a few examples of regex usage.</span></p>\n\n<p><span style=\"font-size:18px\">In this question, we&#39;ll learn the use of Regex in Python. You will be provided a string <strong>str </strong>in which you have to find all the <strong>numbers </strong>and print them.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Note:</strong> In Python, you need to import re module to use regex</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Example:</strong> </span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong> </span>\n<span style=\"font-size:18px\">str = asdasd123asmdasdk34234kfdsd34sdfk5</span>\n<span style=\"font-size:18px\"><strong>Output:</strong> </span>\n<span style=\"font-size:18px\">123 34234 34 5</span></pre>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nThis is a function problem. Do not take any input. just Complete the function <strong>numberMatcher()</strong> that takes <strong>str</strong> as input and print numbers in it, If there are no numbers then print <strong>-1</strong>.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\n1 &lt;= |str|&nbsp;&lt;= 10<sup>5</sup></span></p>\n\n<p><iframe frameborder=\"0\" height=\"315\" src=\"https://www.youtube.com/embed/JKNLy55G2z0\" width=\"560\"></iframe></p>\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string, extract all the numbers present in it. You need to use Regular Expressions in Python to achieve this. Remember to import the 're' module.",
                "constraints": [
                    "1 <= |str| <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "asdasd123asmdasdk34234kfdsd34sdfk5",
                        "output": "123 34234 34 5",
                        "explanation": "The input string contains four numbers: 123, 34234, 34, and 5. These are extracted and printed, separated by spaces."
                    },
                    {
                        "input": "abcdefg",
                        "output": "-1",
                        "explanation": "The input string contains no numbers. Therefore, -1 is printed."
                    },
                    {
                        "input": "1a2b3c",
                        "output": "1 2 3",
                        "explanation": "The input string contains the numbers 1, 2, and 3 interspersed with letters. These numbers are extracted and printed separated by spaces."
                    },
                    {
                        "input": "1234567890",
                        "output": "1234567890",
                        "explanation": "The input string is a single number. Therefore, the entire string is extracted and printed."
                    },
                    {
                        "input": "a1b2c3d4e5f6g7h8i9j0",
                        "output": "1 2 3 4 5 6 7 8 9 0",
                        "explanation": "Each digit from 0-9 appears in the input string seperated by letters. Each number is extracted and printed, separated by spaces."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:14px\">For more then one digit, use.</span></p>\n\n<p><span style=\"font-size:14px\">pat=r&quot;(\\d+)&quot;</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "python-strings",
                "slug": "python-strings"
            },
            {
                "name": "python",
                "slug": "python"
            }
        ],
        "companies": [],
        "solutions": {
            "py": {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\n\n\ndef numberMatcher(str):\n    pat = r\"(\\d+)\"\n    match=re.findall(pat, str)\n    if(match):\n        for i in match:\n            print(i, end=\" \")\n    else:\n        print(-1, end=\"\")\n",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "/**\n * @param {string} str\n * @returns {void}\n */\nclass Solution {\n    numberMatcher(str) {\n        const pat = /[0-9]+/g;\n        const match = str.match(pat);\n        if (match) {\n            console.log(match.join(\" \"));\n        } else {\n            console.log(\"-1\");\n        }\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}