{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 714011,
            "title": "Remainder on dividing by 11",
            "titleSlug": "remainder-on-dividing-by-11--170647",
            "content": "<p><span style=\"font-size:18px\">Given a big positive number <strong>x</strong> represented as string, find value of x % 11 or x mod 11. Output is expected as an integer.</span></p>\r\n\r\n<p><strong><span style=\"font-size:18px\">Example 1:</span></strong></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input: </strong>x = 1345</span>\r\n<span style=\"font-size:18px\"><strong>Output: </strong>3\r\n<strong>Explanation:</strong> 1345 % 11 = 3 </span>\r\n</pre>\r\n\r\n<p><strong><span style=\"font-size:18px\">Example 1:</span></strong></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input: </strong>x = 231456786543567898765</span>\r\n<span style=\"font-size:18px\"><strong>Output: </strong>1\r\n<strong>Explanation:</strong> 231456786543567898765 % 11 = 1</span>\r\n</pre>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Your Task:</strong>&nbsp;&nbsp;<br />\r\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>xmod11</strong>()&nbsp;which takes string<strong> x </strong>as the input parameter&nbsp;and returns the <strong>integer value of&nbsp;x%11</strong>.</span></p>\r\n\r\n<p><strong><span style=\"font-size:18px\">Expected Time Complexity: </span></strong><span style=\"font-size:18px\">O(length of string x)<br />\r\n<strong>Expected Space Complexity: </strong>O(1)</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong></span><br />\r\n<span style=\"font-size:18px\">1 &le; length of string x &le; 100000</span></p>\r\n\r\n<p>&nbsp;</p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a large positive number `x` represented as a string, calculate the value of `x` modulo 11 (x % 11). Return the result as an integer.",
                "constraints": [
                    "1 <= length of string x <= 100000"
                ],
                "testcases": [
                    {
                        "input": "1345",
                        "output": "3",
                        "explanation": "1345 divided by 11 leaves a remainder of 3."
                    },
                    {
                        "input": "231456786543567898765",
                        "output": "1",
                        "explanation": "231456786543567898765 divided by 11 leaves a remainder of 1."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">The idea is to process all digits one by one and use the property that xy (mod a) &equiv; ((x (mod a) * y) (mod a))</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Modular Arithmetic",
                "slug": "modular-arithmetic"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "amazon"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nclass Solution\n{\n\npublic:\n   \n    //Function to find remainder when a given number represented\n    //as a string is divided by 11.\n    int xmod11(string x)\n    {\n        int len = x.length(); \n        int num, rem = 0; \n  \n        //iterating over each digit of the number.\n        for (int i = 0; i < len; i++) { \n            //calculating the number formed by the current digit\n            //and the remainder from the previous digit.\n            num = rem * 10 + (x[i] - '0');\n            rem = num % 11; \n        } \n  \n        //returning the remainder.\n        return rem; \n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\r\n\r\nclass Solution \r\n{ \r\n    static int xmod11(String x)\r\n\t{    \r\n\t    int len = x.length(); \r\n  \r\n    int num, rem = 0; \r\n \r\n    for (int i = 0; i < len; i++) { \r\n        num = rem * 10 + (x.charAt(i) - '0'); \r\n        rem = num % 11; \r\n    } \r\n  \r\n    return rem; \r\n        \r\n\t}\r\n} \r\n\r\n",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\r\n\r\nclass Solution:\r\n    def xmod11(self,x):\r\n        l = len(x)\r\n        num = 0\r\n        rem = 0\r\n        for i in range(0,len(x)):\r\n            num = rem*10 + int(x[i])\r\n            rem = num % 11\r\n            \r\n        return rem\r\n        \r\n       \r\n#This function calculates the remainder when a given number x is divided by 11.\r\n#The function takes a number x as input.\r\n#First, it initializes variables l, num, and rem to 0.\r\n#Then it iterates through each digit in the number x.\r\n#In each iteration, it calculates the new number by multiplying the previous remainder by 10 and adding the current digit.\r\n#It then calculates the new remainder by taking the modulus of the new number with 11.\r\n#Finally, it returns the remainder.\r\n#The purpose of this function is not clear from the provided code.",
                "lang_text": "py"
            },
            {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\r\n/**\r\n * @param {string} x\r\n * @returns {number}\r\n*/\r\n\r\nclass Solution {\r\n    xmod11(x) {\r\n        let l = x.length;\r\n        let num = 0;\r\n        let rem = 0;\r\n        for(let i = 0; i < l; i++) {\r\n            num = rem * 10 + Number(x[i]);\r\n            rem = num % 11;\r\n        }\r\n        return rem;\r\n    }\r\n}",
                "lang_text": "javascript"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    public int xmod11(string x)\n    {\n        int len = x.Length; \n        int num, rem = 0; \n  \n        //iterating over each digit of the number.\n        for (int i = 0; i < len; i++) { \n            //calculating the number formed by the current digit\n            //and the remainder from the previous digit.\n            num = rem * 10 + (x[i] - '0');\n            rem = num % 11; \n        } \n  \n        //returning the remainder.\n        return rem; \n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}