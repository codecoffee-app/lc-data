{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 700377,
            "title": "Remainder with 7",
            "titleSlug": "remainder-with-7",
            "content": "<p>Given a number as&nbsp;string(n) , find the remainder of the number when it is divided by 7<br />\r\n<br />\r\n<strong>Example 1:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong>\r\n5\r\n<strong>Output:</strong>\r\n5</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Example 2:</strong></p>\r\n\r\n<pre>\r\n<strong>Input:</strong>\r\n8\r\n<strong>Output:</strong>\r\n1\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Your Task: </strong></p>\r\n\r\n<p>You only need to complete the function <strong>remainderwith7()</strong> that takes string n as parameter and returns an integer which denotes&nbsp;the remainder of the number when its divided by 7</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong>Constraints:</strong><br />\r\n1&lt;=length of n &lt;=105<br />\r\n&nbsp;</p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a number represented as a string (n), determine the remainder when this number is divided by 7.",
                "constraints": [
                    "1 <= length of n <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "5",
                        "output": "5",
                        "explanation": null
                    },
                    {
                        "input": "8",
                        "output": "1",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Observe reults of 1%7,10%7, 100%7,1000%7,10000%7 and so on.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution{\r\n    public:\r\n        int remainderWith7(string n)\r\n    {\r\n        // This series is used to find remainder with 7\r\n        int series[] = {1, 3, 2, -1, -3, -2};\r\n     \r\n        // Index of next element in series\r\n        int series_index = 0;\r\n     \r\n        int result = 0;  // Initialize result\r\n     \r\n        // Traverse num from end\r\n        for (int i=n.size()-1; i>=0; i--)\r\n        {\r\n            /* Find current digit of nun */\r\n            int digit = n[i] - '0';\r\n     \r\n            // Add next term to result\r\n            result += digit * series[series_index];\r\n     \r\n            // Move to next term in series\r\n            series_index = (series_index + 1) % 6;\r\n     \r\n            // Make sure that result never goes beyond 7.\r\n            result %= 7;\r\n        }\r\n     \r\n        // Make sure that remainder is positive\r\n        if (result < 0)\r\n          result = (result + 7) % 7;\r\n     \r\n        return result;\r\n    }\r\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution\r\n{\r\n\t// method to calculate remainder with 7 based on a given number\r\n\tint remainderWith7(String num)\r\n\t{\r\n\t\tchar ch[] = num.toCharArray(); // convert the given number into a character array\r\n\t\t\r\n\t\tint series[] ={1,3,2,-1,-3,-2}; // define the series of values used in the calculation\r\n\t\t\r\n\t\tint series_index = 0; // initialize the index of the series\r\n\t\t\r\n\t\tint result = 0; // initialize the result variable to store the remainder\r\n\t\t\r\n\t\t// iterate through each digit in the number from right to left\r\n\t\tfor(int i=(ch.length)-1; i>=0; i--)\r\n\t\t{\r\n\t\t\tint digit =  Character.getNumericValue(ch[i]); // convert the character into numeric value\r\n\t\t\t\r\n\t\t\t// calculate the remainder with 7 using the digit and the current value in the series\r\n\t\t\tresult = result + digit * series[series_index];\r\n\t\t\t\r\n\t\t\tseries_index = (series_index+1)%6; // increment the series index and loop back to the beginning if necessary\r\n\t\t\t\r\n\t\t\tresult = result%7; // calculate the remainder with 7 for the current step\r\n\t\t}\r\n\t\t\r\n\t\tif(result<0) // if the remainder is negative, adjust it to a positive value between 0 and 6\r\n\t\t\tresult = (result+7)%7;\r\n\t\t\r\n\t\treturn result; // return the final remainder with 7\r\n\t}\r\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n    def remainderWith7(self, str):\n        # Converts the input string to an integer\n        n = int(str)\n\n        # Returns the remainder of n divided by 7\n        return n%7",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": null,
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}