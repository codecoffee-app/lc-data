{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 702946,
            "title": "Remaining String",
            "titleSlug": "remaining-string3515",
            "content": "<p><span style=\"font-size: 18px;\">Given a string <strong>s</strong> without spaces, a character <strong>ch </strong>and an integer <strong>count. </strong>Your task is to return the substring that remains after the character <strong>ch </strong>has appeared <strong>count </strong>number of times.<br /><strong>Note:&nbsp;</strong> Assume upper case and lower case alphabets are different. &ldquo;&rdquo;(<strong>Empty string</strong>) should be returned if it is not possible, or the remaining substring is empty.<br /></span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>s = \"Thisisdemostring\", ch = 'i', count = 3\n<strong>Output:</strong> ng\n<strong>Explanation: </strong>The remaining substring of s after the 3rd\noccurrence of 'i' is \"ng\", hence the output is ng.</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>s = \"Thisisdemostri\", ch = 'i', count = 3\n<strong>Output: </strong>\"\"\n<strong>Explanation:</strong> The 3rd occurence of 'i' is at the last index. In this case the remaining substring is empty, hence we return empty string.</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>s = \"abcd\", ch = 'x', count = 2\n<strong>Output: </strong>\"\"\n<strong>Explanation:</strong> The character x is not present in the string, hence we return empty string.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:&nbsp;</strong>O(|s|)<br /><strong>Expected Auxiliary Space:&nbsp;</strong>O(1)</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1&lt;= s.length()&lt;=10<sup>5</sup><br />1&lt;=count&lt;=s.length()<br />s[i] is both upper case and lower case</span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p>&nbsp;Iterate through <code>S</code>, decrementing <code>count</code> each time <code>ch</code> is found. Return the substring after the <code>count</code> occurrences, or \"Empty string\" if the result is empty.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "zoho",
            "oracle"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function template for C++\n\nclass Solution {\n  public:\n    string printString(string &str, char ch, int count) {\n        int occ = 0, i;\n\n        // Start traversing the string\n        for (i = 0; i < str.size(); i++) {\n\n            // Increment occ if current char is equal\n            // to given character\n            if (str[i] == ch)\n                occ++;\n\n            // Break the loop if given character has\n            // been occurred given no. of times\n            if (occ == count)\n                break;\n        }\n\n        // Print the string after the occurrence\n        // of given character given no. of times\n        if (i < str.length() - 1)\n            return str.substr(i + 1, str.length() - (i + 1));\n\n        // Otherwise string is empty\n        else\n            return \"\";\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution {\n    public String printString(String s, char ch, int count) {\n        String str = \"\";\n        int i = 0;\n        while (i < s.length() && count != 0) {\n\n            if (s.charAt(i) == ch) {\n                count--;\n                i++;\n            } else if (s.charAt(i) != ch) {\n                i++;\n            }\n        }\n\n        if (count == 0) {\n            str = s.substring(i);\n        }\n\n        return s.substring(i).equals(\"\") ? \"\" : s.substring(i);\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "class Solution:\n\n    def printString(self, s, ch, count):\n        i = 0\n        while i < len(s) and count != 0:\n            if s[i] == ch:\n                count -= 1\n            i += 1\n\n        result = s[i:]\n\n        return result if result != \"\" else \"\"\n",
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "// User function Template for C#\n\npublic class Solution {\n    // Complete this function\n    public string printString(string s, char ch, int count) {\n        int occ = 0, i;\n\n        // If given count is 0\n        // print the given string and return\n        if (count == 0) {\n            return s;\n        }\n\n        // Start traversing the string\n        for (i = 0; i < s.Length; i++) {\n\n            // Increment occ if current char is equal\n            // to given character\n            if (s[i] == ch) occ++;\n\n            // Break the loop if given character has\n            // been occurred given no. of times\n            if (occ == count) break;\n        }\n\n        // Print the string after the occurrence\n        // of given character given no. of times\n        if (i < s.Length - 1) return s.Substring(i + 1, s.Length - (i + 1));\n\n        // Otherwise string is empty\n        else\n            return \"\";\n    }\n}",
                "lang_text": "csharp"
            },
            {
                "lang": "Javascript",
                "full_func": "class Solution {\n    printString(s, ch, count) {\n        let occ = 0, i;\n\n        if (count == 0) {\n            return s;\n        }\n\n        for (i = 0; i < s.length; i++) {\n            if (s[i] == ch) occ++;\n\n            if (occ == count) break;\n        }\n\n        if (i < s.length - 1)\n            return s.substring(i + 1, s.length);\n\n        else\n            return \"\";\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}