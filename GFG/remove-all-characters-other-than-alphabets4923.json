{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 702947,
            "title": "Remove all characters other than alphabets",
            "titleSlug": "remove-all-characters-other-than-alphabets4923",
            "content": "<p><span style=\"font-size:20px\">Given a string S,&nbsp;remove all the characters other than the alphabets.</span><br />\r\n<br />\r\n<strong><span style=\"font-size:18px\">Example 1:</span></strong></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input: </strong>S = &quot;</span><span style=\"font-size:20px\">$Gee*k;s..fo, r&#39;Ge^eks?</span><span style=\"font-size:18px\">&quot;\r\n<strong>Output:</strong> GeeksforGeeks\r\n<strong>Explanation:</strong> </span><span style=\"font-size:18px\">Removed charcters other than\r\nalphabets. </span>\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong><span style=\"font-size:18px\">Example 2:</span></strong></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong>  S = &quot;{{{}}&gt; *&amp; ^%*)&quot;\r\n<strong>Output:</strong> -1\r\n<strong>Explanation:</strong> There are no alphabets.</span>\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:20px\"><strong>Your Task:</strong><br />\r\nYou don&#39;t need to read input or print anything.&nbsp;Your task is to complete the function&nbsp;</span><strong><span style=\"font-size:18px\"><code>removeSpecialCharacter</code></span></strong><span style=\"font-size:20px\"><strong>()&nbsp;</strong>which takes&nbsp;string S as input parameter and returns the resultant string. Return &quot;-1&quot; if no alphabets remain.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:20px\"><strong>Expected Time Complexity:&nbsp;</strong>O(|s|)<br />\r\n<strong>Expected Auxiliary Space:&nbsp;</strong>O(|s|)</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:20px\"><strong>Constraints:</strong><br />\r\n1 &lt;= |S| &lt;= 10<sup>5</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string S, remove all characters that are not alphabets (a-z, A-Z). If the resulting string contains no alphabets, return \"-1\".",
                "constraints": [
                    "1 <= |S| <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "$Gee*k;s..fo, r'Ge^eks?",
                        "output": "GeeksforGeeks",
                        "explanation": "The string after removing special characters is 'GeeksforGeeks'."
                    },
                    {
                        "input": "{{{}}> *& ^%*)&",
                        "output": "-1",
                        "explanation": "The input string contains no alphabets after removing special characters."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Create an empty string and then traverse through the given string. For each character check if it is an alphabet and add it to the empty string.&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "// Class for removing special characters from a string\n\nclass Solution{\npublic:\n    // Function to remove special characters from a string\n    string removeSpecialCharacter(string s)\n    {\n        // Flag to check if any valid character is found\n        bool flag = 0;\n        \n        // Initialize an empty string for the result\n        string ans = \"\";\n        \n        // Iterate through the string\n        for (int i = 0; i < s.length(); i++) {\n            \n            // Check if the character is a letter\n            if ((s[i] <= 'z' && s[i] >= 'a') || (s[i] >= 'A' && s[i] <= 'Z')) {\n                // Append the character to the result string\n                ans += s[i];\n                \n                // Set flag to 1 to indicate that a valid character is found\n                flag = 1;\n            }\n        }\n        \n        // If no valid character is found, set the result string to \"-1\"\n        if (flag == 0) ans = \"-1\";\n        \n        // Return the result string\n        return ans;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            },
            {
                "lang": "C#",
                "full_func": "//User function template for C#\n\nclass Solution{\n    public string removeSpecialCharacter(string s) {\n        // Flag to check if any valid character is found\n        bool flag = false;\n    \n        // Initialize an empty string builder for the result\n        StringBuilder ans = new StringBuilder();\n    \n        // Iterate through the string\n        for (int i = 0; i < s.Length; i++) {\n            \n            // Check if the character is a letter\n            if ((s[i] >= 'a' && s[i] <= 'z') || (s[i] >= 'A' && s[i] <= 'Z')) {\n                // Append the character to the result string builder\n                ans.Append(s[i]);\n                \n                // Set flag to true to indicate that a valid character is found\n                flag = true;\n            }\n        }\n    \n        // If no valid character is found, set the result string to \"-1\"\n        if (!flag) ans.Append(\"-1\");\n    \n        // Return the result string\n        return ans.ToString();\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}