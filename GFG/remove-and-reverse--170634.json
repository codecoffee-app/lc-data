{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 709208,
            "title": "Remove and Reverse",
            "titleSlug": "remove-and-reverse--170634",
            "content": "<p><span style=\"font-size:18px\">Given a string&nbsp;<strong>S </strong>which consists of only lowercase English alphabets, you have to perform the below&nbsp;operations:<br />\r\nIf the string <strong>S</strong> contains any repeating character, remove the first repeating&nbsp;character and reverse the string&nbsp;and again perform the above operation on the modified string, otherwise, you stop.<br />\r\nYou have to find the final string.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong> S = &quot;abab&quot;\r\n<strong>Output:</strong> ba\r\n<strong>Explanation:</strong>\r\n<strong>In 1st operation:</strong> The first repeating \r\ncharacter is a. After Removing the first \r\ncharacter, S = &quot;bab&quot;. After Reversing the \r\nstring, S = &quot;bab&quot;.\r\n<strong>In 2nd operation:</strong> The first repeating \r\ncharacter is b. After Removing the first \r\ncharacter, S = &quot;ab&quot;. After Reversing the \r\nstring, S = &quot;ba&quot;.\r\nNow the string S does not contain any \r\nrepeating character.</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong> S = &quot;dddd&quot;\r\n<strong>Output:</strong> d\r\n<strong>Explanation:\r\nIn 1st operation:</strong> The first repeating character \r\nis d. After Removing the first character, \r\nS = &quot;ddd&quot;. After Reversing the string, S = &quot;ddd&quot;. \r\n<strong>In 2nd operation:</strong> Similarly, S=&quot;dd&quot;.\r\n<strong>In 3rd operation:</strong> Similarly, S=&quot;d&quot;.\r\nNow the string S does not contain any repeating character.</span>\r\n</pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:&nbsp;&nbsp;</strong><br />\r\nYou don&#39;t need to read input or print anything. Your task is to complete the function&nbsp;<strong>removeReverse( )</strong>&nbsp;which accepts a string <strong>S</strong>&nbsp;input parameter and returns the modified string.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong>&nbsp;O(|S|)<br />\r\n<strong>Expected Auxiliary Space:</strong>&nbsp;O(K), K &lt;= 26.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\nThe string contains only lowercase English alphabets.<br />\r\n1 <u>&lt;</u>&nbsp;|S|&nbsp;<u>&lt;</u>&nbsp;10<sup>5</sup><br />\r\n|S| denotes the length of the string S.</span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p>Two pointer approach instead of reversing string every time a character is removed.</p>"
        ],
        "relatedTopics": [
            {
                "name": "two-pointer-algorithm",
                "slug": "two-pointer-algorithm"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "// Back-end complete function template for C++\n\nclass Solution {\n  public:\n    // Function to remove duplicate characters in a string\n    // and reverse the characters alternatively\n    string removeReverse(string S) {\n        // Array to store the frequency of each character\n        int freq[26] = {0};\n\n        // Calculate the frequency of each character\n        for (auto i : S)\n            freq[i - 'a']++;\n\n        // Pointers to track the left and right ends of the string\n        int l = 0, r = S.size() - 1;\n\n        // Flag to indicate which end to process next\n        int f = 0;\n\n        // Loop until the left and right ends meet\n        while (l <= r) {\n            // If the flag is 0, process the left end\n            if (f == 0) {\n                // If the frequency of the character at the\n                // left end is 1, move the left pointer ahead\n                if (freq[S[l] - 'a'] == 1) {\n                    l++;\n                }\n                // If the frequency is greater than 1, decrease the frequency\n                // and mark the character at the left end with '#'\n                // Then move the left pointer ahead and flip the flag\n                else {\n                    freq[S[l] - 'a']--;\n                    S[l] = '#';\n                    l++;\n                    f ^= 1;\n                }\n            }\n            // If the flag is 1, process the right end\n            else {\n                // If the frequency of the character at the\n                // right end is 1, move the right pointer back\n                if (freq[S[r] - 'a'] == 1) {\n                    r--;\n                }\n                // If the frequency is greater than 1, decrease the frequency\n                // and mark the character at the right end with '#'\n                // Then move the right pointer back and flip the flag\n                else {\n                    freq[S[r] - 'a']--;\n                    S[r] = '#';\n                    r--;\n                    f ^= 1;\n                }\n            }\n        }\n\n        // Remove the marked characters '#' from the string\n        string ans = \"\";\n        for (auto i : S) {\n            if (i != '#')\n                ans.push_back(i);\n        }\n\n        // Reverse the string if the flag is 1\n        if (f)\n            reverse(ans.begin(), ans.end());\n        \n        // Return the modified string\n        return ans;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\r\n\r\nclass Solution \r\n{ \r\n    String removeReverse(String S) \r\n    { \r\n        StringBuffer s = new StringBuffer(S);\r\n        int freq[] = new int[26];\r\n        Arrays.fill(freq,0);\r\n        for(int i=0;i<s.length();i++){\r\n            char ch = s.charAt(i);\r\n            freq[ch-'a']++;\r\n        }\r\n        int l=0,r=s.length()-1,f=0;\r\n        while(l<=r)\r\n        {\r\n            if(f==0)\r\n            {\r\n                char ch=s.charAt(l);      \r\n                if(freq[ch-'a']==1)\r\n                {\r\n                    l++;\r\n                }\r\n                else{\r\n                    freq[ch-'a']--;\r\n                    s.replace(l,l+1,\"#\");\r\n                    l++;\r\n                    f^=1;\r\n                }\r\n            }\r\n            else{\r\n                char ch=s.charAt(r);\r\n                if(freq[ch-'a']==1)\r\n                {\r\n                    r--;\r\n                }\r\n                else{\r\n                    freq[ch-'a']--;\r\n                    s.replace(r,r+1,\"#\");\r\n                    r--;\r\n                    f^=1;\r\n                }\r\n            }\r\n        }\r\n        \r\n        if(f==1)\r\n            s.reverse();\r\n        String ans=\"\";\r\n        for(int i=0;i<s.length();i++)\r\n        {\r\n            if(s.charAt(i)!='#')\r\n                ans+=s.charAt(i);\r\n        }\r\n        return ans;\r\n    }\r\n} ",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\r\nclass Solution:\r\n    def removeReverse(self, S): \r\n        #code here\r\n        s=[]\r\n        s[:0]=S \r\n        freq = [0]*26\r\n        for i in s:\r\n            freq[ord(i)-ord('a')]+=1\r\n        l=0\r\n        r=len(s)-1\r\n        f=0\r\n        while l<=r:\r\n            if f==0:\r\n                if freq[ord(s[l])-ord('a')]==1:\r\n                    l+=1\r\n                else:\r\n                    freq[ord(s[l])-ord('a')]-=1\r\n                    s[l]='#'\r\n                    l+=1\r\n                    f^=1\r\n            else:\r\n                if freq[ord(s[r])-ord('a')]==1:\r\n                    r-=1\r\n                else:\r\n                    freq[ord(s[r])-ord('a')]-=1\r\n                    s[r]='#'\r\n                    r-=1\r\n                    f^=1\r\n        if f==1:\r\n            s.reverse()\r\n        ans=\"\"\r\n        for i in s:\r\n            if i!='#':\r\n                ans+=i\r\n        return ans",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\r\n/**\r\n * @param {string} S\r\n * @returns {string}\r\n*/\r\n\r\nclass Solution {\r\n    //Function to reverse a string and return it.\r\n    removeReverse(S)\r\n    {\r\n        //code here\r\n        let s = [];\r\n        s = s.concat([...S]);\r\n        let freq = new Array(26).fill(0);\r\n      \r\n        for(let i = 0; i < s.length; i++){\r\n            freq[s[i].charCodeAt(0) - 'a'.charCodeAt(0)] += 1;\r\n        }\r\n        \r\n        let l = 0;\r\n        let r = s.length - 1;\r\n        let f = 0;\r\n        \r\n        while(l <= r){\r\n            if(f === 0){\r\n                if(freq[s[l].charCodeAt(0) - 'a'.charCodeAt(0)] === 1){\r\n                    l += 1;\r\n                }else{\r\n                    freq[s[l].charCodeAt(0) - 'a'.charCodeAt(0)] -= 1;\r\n                    s[l] = '#';\r\n                    l += 1;\r\n                    f ^= 1;\r\n                }\r\n            }else{\r\n                if(freq[s[r].charCodeAt(0) - 'a'.charCodeAt(0)] === 1){\r\n                    r -= 1;\r\n                }else{\r\n                    freq[s[r].charCodeAt(0) - 'a'.charCodeAt(0)] -= 1;\r\n                    s[r] = '#';\r\n                    r -= 1;\r\n                    f ^= 1;\r\n                }\r\n            }\r\n        }\r\n        \r\n        if(f === 1){\r\n            s.reverse();\r\n        }\r\n        \r\n        let ans = \"\";\r\n        for(let i = 0; i < s.length; i++){\r\n            if(s[i] !== '#'){\r\n                ans += s[i];\r\n            }\r\n        }\r\n        \r\n        return ans;\r\n    }\r\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}