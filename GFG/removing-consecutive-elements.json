{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 701745,
            "title": "Removing Consecutive Elements",
            "titleSlug": "removing-consecutive-elements",
            "content": "<p><span style=\"font-size: 18px;\">Given an array&nbsp;<strong>arr[]&nbsp;</strong>of positive<strong>&nbsp;</strong>elements and two special numbers<strong>&nbsp;x and y</strong>. Remove all consecutive same special numbers. The final array should be free from any consecutive same special elements.<br /><strong>Note:</strong>&nbsp;The final array may be empty.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples&nbsp;</strong>:</span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr[] = [2, 1, 2, 2, 2, 5], x = 1, y = 2\n<strong>Output: </strong>2 1 2 5</span>\n<span style=\"font-size: 18px;\"><strong>Explanation: </strong>x = 1 and y = 2. Now, we traverse the array from left to right and remove all consecutive 1s and 2s. \nFirst, we remove 2 1 <strong>2 2</strong> 2 5. \nNow we are left with 2 1 2 5. \nNow,there is no consecutive 1 or 2.\nWe are left with 2 1 2 5.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &lt;= arr.size() &lt;= 10<sup>5</sup><br />1 &lt;= arr[i] &lt;= 10<sup>5</sup><br />1 &lt;= x, y &lt;= 10<sup>5</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array `arr[]` of positive integers and two special numbers `x` and `y`, remove all consecutive occurrences of either `x` or `y` from the array. The final array should not contain any consecutive elements that are equal to either `x` or `y`. The final array may be empty.",
                "constraints": [
                    "1 <= arr.length <= 10^5",
                    "1 <= arr[i] <= 10^5",
                    "1 <= x, y <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "[2, 1, 2, 2, 2, 5], x = 1, y = 2",
                        "output": "[2, 1, 2, 5]",
                        "explanation": "Initially, the array is [2, 1, 2, 2, 2, 5]. Since '2' appears consecutively, we reduce it to a single '2', resulting in [2, 1, 2, 5]. There are no more consecutive special numbers (1 or 2), so the final array is [2, 1, 2, 5]."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>use stack to remove adjacent special elements.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "STL",
                "slug": "stl"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nvector<int> remove_special_consecutive(vector<int>& arr, int x, int y) {\n    vector<int> result;\n    stack<int> st;\n\n    int i;\n    int n;\n    n = arr.size();\n    for (i = 0; i < n; i++) {\n        if (st.size() == 0) {\n            st.push(arr[i]);\n        } else {\n            if (!st.empty() && st.top() == arr[i] && (arr[i] == x || (arr[i] == y))) {\n                continue;\n            } else {\n                st.push(arr[i]);\n            }\n        }\n    }\n    while (st.size()) {\n        result.push_back(st.top());\n        st.pop();\n    }\n    reverse(result.begin(), result.end());\n\n    return result;\n}",
                "lang_text": "cpp"
            }
        },
        "platform": "GFG"
    }
}