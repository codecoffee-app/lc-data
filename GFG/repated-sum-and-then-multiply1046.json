{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705611,
            "title": "Repeated Sum and then Multiply",
            "titleSlug": "repated-sum-and-then-multiply1046",
            "content": "<p><span style=\"font-size:18px\">You are given a natural number. Repeatedly sum its digits until the smallest possible two-digit number remains. Then multiply the digits of the remaining two-digit number and return it.</span><br />\r\n<br />\r\n<span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input</strong>: n = 19\r\n<strong>Output:</strong>&nbsp;0&nbsp;\r\n<strong>Explanation</strong>: 1+9 = 1+0 = 1 and 1 came from 10 \r\nthus 1*0 = 0.</span>\r\n</pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input: </strong>n = 129\r\n<strong>Output:&nbsp;</strong>2\r\n<strong>Explanation</strong>: 1+2+9 = 1+2 = 3 and 3 came from 12\r\nthus 1*2 = 2.\r\n</span></pre>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Your Task:&nbsp;&nbsp;</strong><br />\r\nYou don&#39;t need to read input or print anything. Complete the function <strong>repeatedSumMul()&nbsp;</strong>which takes n&nbsp;as the input parameter and returns the product of the digits of the value before the single digit.<br />\r\n<br />\r\n<strong>Expected Time Complexity:</strong> O(logn)<br />\r\n<strong>Expected Auxiliary Space:</strong> O(1)<br />\r\n<br />\r\n<strong>Constraints:</strong><br />\r\n1&lt;= N&nbsp;&lt;=2<sup>32</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Brute implementation.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Misc",
                "slug": "misc"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\r\nclass Solution {\r\n  public:\r\n    \r\n    // Function to calculate the product of digits until the sum is less than 10\r\n    int repeatedSumMul(int n){\r\n        int sum=0, out, temp;\r\n        int prod= 1;\r\n        \r\n        temp=n;\r\n        \r\n        while(true)\r\n        {\r\n            prod=1;\r\n            sum=0;\r\n            \r\n            // Calculate the sum and product of digits\r\n            while(temp)\r\n            {\r\n                sum= sum+ (temp%10);\r\n                prod= prod* (temp%10);\r\n                temp= temp/10;\r\n            }\r\n            \r\n            // If the sum is less than 10, return the product\r\n            if(sum<10)\r\n            {\r\n                return prod;\r\n            }\r\n            \r\n            // Update temp and prod\r\n            temp= sum;\r\n            prod=1;\r\n        }\r\n    } \r\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    public int repeatedSumMul(int n)\n    {\n        int sum = 0;\n        int temp = n;\n        int prod = 1;\n\n        while (true)\n        {\n            prod = 1;\n            sum = 0;\n\n            // Calculate the sum and product of digits\n            while (temp != 0)\n            {\n                sum = sum + (temp % 10);\n                prod = prod * (temp % 10);\n                temp = temp / 10;\n            }\n\n            // If the sum is less than 10, return the product\n            if (sum < 10)\n            {\n                return prod;\n            }\n\n            // Update temp and prod\n            temp = sum;\n            prod = 1;\n        }\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}