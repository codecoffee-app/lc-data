{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704424,
            "title": "Repeated sum of digits",
            "titleSlug": "repeated-sum-of-digits3955",
            "content": "<p><span style=\"font-size:18px\">Given an integer N, recursively sum digits of N until we get a single digit.&nbsp; The process can be described below</span></p>\n\n<pre>\n<span style=\"font-size:18px\">If N &lt; 10    \n    digSum(N) = N\nElse\\t   \n    digSum(N) = Sum(digSum(N))\n</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong><span style=\"font-size:18px\">Example 1:</span></strong></p>\n\n<pre>\n<strong><span style=\"font-size:18px\">Input:</span></strong>\n<span style=\"font-size:18px\">N = 1234</span>\n<strong><span style=\"font-size:18px\">Output:</span></strong>\n<span style=\"font-size:18px\">1</span>\n<strong><span style=\"font-size:18px\">Explanation:</span></strong>\n<span style=\"font-size:18px\">The sum of 1+2+3+4 = 10, \ndigSum(x) == 10 Hence \nans will be 1+0 = 1</span></pre>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p><strong><span style=\"font-size:18px\">Example 2:</span></strong></p>\n\n<pre>\n<strong><span style=\"font-size:18px\">Input:</span></strong>\n<span style=\"font-size:18px\">N = 9999</span>\n<strong><span style=\"font-size:18px\">Output:</span></strong>\n<span style=\"font-size:18px\">9</span>\n<strong><span style=\"font-size:18px\">Explanation:</span></strong>\n<span style=\"font-size:18px\">Check it yourself.</span></pre>\n\n<p>&nbsp;</p>\n\n<p><strong><span style=\"font-size:18px\">Your Task:</span></strong></p>\n\n<p><span style=\"font-size:18px\">You don&#39;t need to read input or print anything. Your task is to complete the function repeatedSumOfDigits() which takes an integer N and returns the repeated sum of digits of N.</span></p>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(1)<br />\n<strong>Expected Auxiliary Space:</strong> O(1)</span></p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Constraints: </strong></span></p>\n\n<p><span style=\"font-size:18px\">1 &le; N &le; 1000000</span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an integer N, repeatedly sum its digits until a single-digit number is obtained. This involves iteratively summing the digits of the number until the result is less than 10. If the number is already a single digit, return it directly.",
                "constraints": [
                    "1 <= N <= 1000000"
                ],
                "testcases": [
                    {
                        "input": "1234",
                        "output": "1",
                        "explanation": "The sum of the digits 1, 2, 3, and 4 is 10. Then, the sum of the digits of 10 is 1, so the final result is 1."
                    },
                    {
                        "input": "9999",
                        "output": "9",
                        "explanation": "The sum of the digits 9, 9, 9, and 9 is 36. Then, the sum of the digits of 36 is 9. Since 9 is a single digit, the final result is 9."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Try observing the divisibility of 9 and the answer to the problem.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "number-theory",
                "slug": "number-theory"
            },
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function template for C++\n\nclass Solution{   \npublic:\n    //Function to find the repeated sum of digits.\n    int repeatedSumOfDigits(int N){\n        //Calculating the remainder of N divided by 9.\n        int res = (N % 9 == 0) ? 9 : (N % 9);        \n        //Returning the result.\n        return res;        \n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    //Function to find sum of digits of a number.\n    public int repeatedSumOfDigits(int N)\n    {\n        //Calculating the remainder of N divided by 9.\n        int res = (N % 9 == 0) ? 9 : (N % 9);\n        //Returning the result.\n        return res;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}