{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704616,
            "title": "Repeating GCD",
            "titleSlug": "repeating-gcd4659",
            "content": "<p><span style=\"font-size: 18px;\">Given three &nbsp;integers N, x and y,&nbsp;a number A is formed by repeating N x times and another number B is formed by&nbsp;repeating N y times. You need to find the GCD(A,B).&nbsp;</span></p>\n<p>&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>N = 1, x = 1, y = 1\n<strong>Output: </strong>1\n<strong>Explanation: </strong>A = 1, B = 1, GCD(1, 1)  = 1\n</span>\n</pre>\n<p><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>N = 2, x = 2, y = 3\n<strong>Output: </strong>2\n<strong>Explanation: </strong>A = 22, B = 222, GCD(22, 222) = 2</span>\n</pre>\n<p>&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Your Task:</strong><br />You don't need to read or print anything. Your task is to complete the function&nbsp;<strong>FindGcd()</strong>&nbsp;which takes N, x and y as input parameter and returns GCD(A, B) in string form.</span><br />&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:&nbsp;</strong>O(Log<sub>10</sub>(N) * GCD(x, y))<br /><strong>Expected Space Complexity:&nbsp;</strong>O(Log<sub>10</sub>(N) * GCD(x, y))</span><br />&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &lt;= x, y &lt;= 100000<br />1 &lt;= N &lt;= 10<sup>18</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given three integers N, x, and y, let A be the number formed by repeating N x times, and B be the number formed by repeating N y times.  Determine the greatest common divisor (GCD) of A and B.",
                "constraints": [
                    "1 <= x, y <= 100000",
                    "1 <= N <= 10^18"
                ],
                "testcases": [
                    {
                        "input": "N = 1, x = 1, y = 1",
                        "output": "1",
                        "explanation": "A = 1, B = 1, GCD(1, 1) = 1"
                    },
                    {
                        "input": "N = 2, x = 2, y = 3",
                        "output": "2",
                        "explanation": "A = 22, B = 222, GCD(22, 222) = 2"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Find GCD before multiplying.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "\n\nclass Solution{\n\tpublic:\n\tstring FindGcd(long long int  N, int x, int y)\n\t{\n\t\tint times = __gcd(x, y);\n\t\tstring ans = \"\";\n\t\tstring n = \"\";\n\t\twhile(N){\n\t\t\tn += char(N % 10 + '0');\n\t\t\tN /= 10;\n\t\t}\n\t\treverse(n.begin(),n.end());\n\t\tfor(int  i = 0; i < times; i++)\n\t\t\tans += n;\n\t\treturn ans;\n\t}\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}