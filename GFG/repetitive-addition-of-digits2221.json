{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704807,
            "title": "Repetitive Addition Of Digits",
            "titleSlug": "repetitive-addition-of-digits2221",
            "content": "<p><span >You are given a positive integer <strong>n</strong>,<strong> </strong>you need to&nbsp;add all the digits of <strong>n </strong>and create a new number. Perform this operation until the resultant number has only one digit in it. Return the final number obtained after performing the given operation.<br /></span></p>\n<p><span ><strong>Examples:</strong></span></p>\n<pre><span ><strong>Input: </strong>n = 1234\n<strong>Output: </strong>1\n<strong>Explanation: </strong></span><span style=\"font-size: 18.6667px;\">Step 1: 1 + 2 + 3 + 4 = 10. Step 2: 1 + 0 = 1</span></pre>\n<pre><span ><strong>Input: </strong>n = 5674\n<strong>Output: </strong>4</span><span >\n<strong>Explanation: </strong></span><span style=\"font-size: 18.6667px;\">Step 1: 5 + 6 + 7 + 4 = 22. Step 2: 2 + 2 = 4</span></pre>\n<pre><span ><strong>Input: </strong>n = 9\n<strong>Output: </strong>9</span><span >\n<strong>Explanation: </strong>Since 9 is a single-digit number hence we return 9.</span></pre>\n<p><span ><strong>Constraints:</strong><br />1 &lt;= n &lt;= 10<sup>9</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a positive integer `n`, repeatedly sum its digits until the result is a single-digit number. Return this final single-digit number.",
                "constraints": [
                    "1 <= n <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "1234",
                        "output": "1",
                        "explanation": "The sum of the digits of 1234 is 1 + 2 + 3 + 4 = 10.  The sum of the digits of 10 is 1 + 0 = 1.  Therefore, the final result is 1."
                    },
                    {
                        "input": "5674",
                        "output": "4",
                        "explanation": "The sum of the digits of 5674 is 5 + 6 + 7 + 4 = 22. The sum of the digits of 22 is 2 + 2 = 4. Therefore, the final result is 4."
                    },
                    {
                        "input": "9",
                        "output": "9",
                        "explanation": "Since 9 is already a single-digit number, the result is 9."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span >Try to observe the pattern, the last single digit depends on the last digit of initial n.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "amazon"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    // Function to get the single digit equivalent of a number\n    int singleDigit(int n) {\n        // Calculate the remainder when the number is divided by 9\n        int dig = n % 9;\n\n        // If the remainder is not 0, return the remainder, otherwise return 9\n        int ans = dig ? dig : 9;\n\n        // Return the single digit equivalent\n        return ans;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution {\n    // Function to get the single digit equivalent of a number\n    public int singleDigit(int n) {\n        // Calculate the remainder when the number is divided by 9\n        int dig = (int)(n % 9);\n\n        // If the remainder is not 0, return the remainder, otherwise return 9\n        int ans = (dig != 0) ? dig : 9;\n\n        // Return the single digit equivalent\n        return ans;\n    }\n}\n",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "class Solution:\n    # Function to get the single digit equivalent of a number\n    def singleDigit(self, n: int) -> int:\n        # Calculate the remainder when the number is divided by 9\n        dig = n % 9\n\n        # If the remainder is not 0, return the remainder, otherwise return 9\n        ans = dig if dig != 0 else 9\n\n        # Return the single digit equivalent\n        return ans\n",
                "lang_text": "py"
            },
            {
                "lang": "Javascript",
                "full_func": "class Solution {\n    // Function to get the single-digit equivalent of a number\n    singleDigit(n) {\n        // Calculate the remainder when the number is divided by 9\n        let dig = n % 9;\n\n        // If the remainder is not 0, return the remainder, otherwise return 9\n        let ans = (dig !== 0) ? dig : 9;\n\n        // Return the single-digit equivalent\n        return ans;\n    }\n}\n",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}