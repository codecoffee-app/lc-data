{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 700570,
            "title": "Reverse Using Stack",
            "titleSlug": "reverse-a-string-using-stack",
            "content": "<p><span style=\"font-size: 18px;\">You are given a string <strong>S</strong>, the task is to reverse the string using stack.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong></span> <span style=\"font-size: 18px;\">S=\"GeeksforGeeks\"</span>\n<span style=\"font-size: 18px;\"><strong>Output:</strong></span><span style=\"font-size: 18px;\"> skeeGrofskeeG</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong></span> <span style=\"font-size: 18px;\">S=\"Geek\"</span>\n<span style=\"font-size: 18px;\"><strong>Output:</strong></span><span style=\"font-size: 18px;\"> keeG</span></pre>\n<p><strong><span style=\"font-size: 18px;\">Your Task:</span></strong><br /><span style=\"font-size: 18px;\">You don't need to read input or print anything. Your task is to complete the function<strong>&nbsp;reverse()</strong>&nbsp;which takes the string <strong>S&nbsp;</strong>as an input parameter and returns the reversed string.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong></span><br /><span style=\"font-size: 18px;\">1 &le; length of the string &le; 100</span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string `S`, reverse the string using a stack data structure.",
                "constraints": [
                    "1 <= Length of the string <= 100"
                ],
                "testcases": [
                    {
                        "input": "GeeksforGeeks",
                        "output": "skeeGrofskeeG",
                        "explanation": "The string 'GeeksforGeeks' reversed is 'skeeGrofskeeG'."
                    },
                    {
                        "input": "Geek",
                        "output": "keeG",
                        "explanation": "The string 'Geek' reversed is 'keeG'."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Use the propery of Stack to reverse the string.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Function to reverse a character array\nchar* reverse(char *S, int len)\n{\n    stack<char> st; //create a stack to store characters\n\n    //push each character from the array to the stack\n    for(int i = 0; i < len;i++)\n        st.push(S[i]);\n\n    //pop characters from the stack and assign them back to the array\n    for(int i = 0; i < len; i++)\n    {\n        S[i] = st.top();\n        st.pop();\n    }\n    return S; //return the reversed character array\n}",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution {\n    \n    // Method to reverse a string\n    public String reverse(String str){\n        String ans=\"\"; // Initialize an empty string to store the reversed string\n        Stack<Character> s = new Stack<>(); // Create a stack to store the characters of the string\n        \n        // Push each character of the string onto the stack\n        for (int i=0; i<str.length(); i++) {\n            s.push(str.charAt(i));\n        }\n        \n        // Pop each character from the stack and append it to the result string\n        while(!s.isEmpty()){\n            ans+=s.pop();\n        }\n        \n        // Return the reversed string\n        return ans;\n    }\n\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "def createStack(): \n\tstack=[] \n\treturn stack \n\n# Function to determine the size of the stack \ndef size(stack): \n\treturn len(stack) \n\n# Stack is empty if the size is 0 \ndef isEmpty(stack): \n\tif size(stack) == 0: \n\t\treturn true \n\n# Function to add an item to stack . \n# It increases size by 1 \ndef push(stack,item): \n\tstack.append(item) \n\n#Function to remove an item from stack. \n# It decreases size by 1 \ndef pop(stack): \n\tif isEmpty(stack): return\n\treturn stack.pop() \n\n# A stack based function to reverse a string \ndef reverse(string): \n\tn = len(string) \n\t\n\t# Create a empty stack \n\tstack = createStack() \n\n\t# Push all characters of string to stack \n\tfor i in range(0,n,1): \n\t\tpush(stack,string[i]) \n\n\t# Making the string empty since all \n\t#characters are saved in stack \n\tstring=\"\" \n\n\t# Pop all characters of string and \n\t# put them back to string \n\tfor i in range(0,n,1): \n\t\tstring+=pop(stack) \n\t\t\n\treturn string ",
                "lang_text": "py"
            },
            {
                "lang": "C#",
                "full_func": "class Solution\n{\n    //Complete this function\n    public string reverse(string S)\n    {\n        Stack<char> st = new Stack<char>(); //create a stack to store characters\n\n        //push each character from the string to the stack\n        for(int i = 0; i < S.Length; i++)\n            st.Push(S[i]);\n\n        //pop characters from the stack and append them to a new string\n        string reversedString = \"\";\n        for(int i = 0; i < S.Length; i++)\n        {\n            reversedString += st.Pop();\n        }\n\n        return reversedString; //return the reversed string\n    }\n}",
                "lang_text": "csharp"
            },
            {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n\n/**\n * @param {string} S\n * @return {string}\n*/\n\nclass Solution {\n    \n    reverse(S){\n       let stack = [];\n       let reversed = '';\n       \n       for(let i = 0; i < S.length; i++){\n           stack.push(S[i]);\n       }\n       \n       while(stack.length > 0){\n           reversed += stack.pop();\n       }\n       \n       return reversed;\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}