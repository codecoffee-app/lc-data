{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703148,
            "title": "Reverse a string with spaces intact",
            "titleSlug": "reverse-a-string-with-spaces-intact5213",
            "content": "<p><span style=\"font-size:18px\">Given a string, your task is to reverse the string keeping the spaces intact to their positions.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong>\r\nS = &quot;Help others&quot;\r\n<strong>Output:</strong> sreh topleH\r\n<strong>Explanation</strong>: The space is intact at index 4\r\nwhile all other characters are reversed.</span>\r\n</pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input</strong>: \r\nS = &quot;geeksforgeeks&quot;\r\n<strong>Output:</strong> skeegrofskeeg\r\n<strong>Explanation</strong>: No space present, hence the\r\nentire string is reversed.</span>\r\n</pre>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou don&#39;t need to read input or print anything. Your task is to complete the function&nbsp;<strong>reverseWithSpacesIntact()&nbsp;</strong>which takes the string S as input and returns the resultant string by reversing the string while keeping all the spaces intact.</span></p>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Expected Time Complexity:&nbsp;</strong>O(|S|).<br />\r\n<strong>Expected Auxiliary Space:&nbsp;</strong>O(1).</span></p>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n1&lt;=|S|&lt;=10<sup>5</sup></span></p>\r\n\r\n<p>&nbsp;</p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string, reverse it while maintaining the original positions of spaces. For example, if a string has a space at index 4, the reversed string should also have a space at index 4.",
                "constraints": [
                    "1 <= |S| <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "Help others",
                        "output": "sreht topleH",
                        "explanation": "The space remains at index 4, while all other characters are reversed."
                    },
                    {
                        "input": "geeksforgeeks",
                        "output": "skeegrofskeeg",
                        "explanation": "No spaces are present in the input, therefore the entire string is reversed."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Maintain two pointers. Start traversing one from the beginning and one from the end of the string. Ignore if any of these positions in the string has a space, else swap the two characters.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "two-pointer-algorithm",
                "slug": "two-pointer-algorithm"
            },
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "zoho"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "\r\nclass Solution\r\n{\r\n  public:\r\n    //Back-end complete function Template for C++\r\n\r\n        string reverseWithSpacesIntact (string s)\r\n        {\r\n            int i = 0, j = s.length () - 1;\r\n        \r\n            while (i < j)\r\n            {\r\n                // ignoring the white spaces\r\n                if (s[i] == ' ') i++;\r\n                else if (s[j] == ' ') j--;\r\n                // if both the characters are not white spaces,\r\n                // swap them\r\n                else\r\n                {\r\n                    swap (s[i], s[j]);\r\n                    i++;\r\n                    j--;\r\n                }\r\n            }\r\n            return s;\r\n        }\r\n        // Contributed By: Pranay Bansal\r\n\r\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            }
        ],
        "platform": "GFG"
    }
}