{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 701595,
            "title": "Reverse a String",
            "titleSlug": "reverse-a-string",
            "content": "<p><span >You are given a string <strong><code>s</code></strong>, and your task is to reverse the string.</span></p>\n<p><span ><strong>Examples:</strong></span></p>\n<pre><span ><strong>Input: </strong>s = \"Geeks\"\n<strong>Output: </strong>\"skeeG\"\n</span></pre>\n<pre><span ><strong>Input: </strong>s = \"for\"\n<strong>Output: </strong>\"rof\"</span></pre>\n<pre><span ><strong>Input: </strong>s = \"a\"\n<strong>Output: </strong>\"a\"</span></pre>\n<p><span ><strong>Constraints:</strong><br />1 &lt;= s.size() &lt;= 10<sup>6<br /></sup>s contains only alphabetic characters (both uppercase and lowercase).</span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string `s` consisting of alphabetic characters, reverse the string and return the reversed string.",
                "constraints": [
                    "1 <= s.size() <= 10^6",
                    "s contains only alphabetic characters (both uppercase and lowercase)."
                ],
                "testcases": [
                    {
                        "input": "Geeks",
                        "output": "skeeG",
                        "explanation": "The reverse of 'Geeks' is 'skeeG'."
                    },
                    {
                        "input": "for",
                        "output": "rof",
                        "explanation": "The reverse of 'for' is 'rof'."
                    },
                    {
                        "input": "a",
                        "output": "a",
                        "explanation": "The reverse of 'a' is 'a'."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span >Create an empty variable to store reverseString. Now iterate the string from back to front and keep adding the characters to our reverseString.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C",
                "full_func": "char* reverseString(char* s) {\n    // Get the length of the string\n    int length = strlen(s);\n\n    // Loop through half of the string\n    for (int i = 0; i < length / 2; i++) {\n        // Store the current character\n        char temp = s[i];\n\n        // Swap the current character with the corresponding character from the end\n        s[i] = s[length - i - 1];\n\n        // Assign the stored character to the end position\n        s[length - i - 1] = temp;\n    }\n\n    // Return the reversed string\n    return s;\n}",
                "lang_text": "c"
            },
            {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    // Function to reverse a word in-place.\n    string reverseString(string& s) {\n        int n = s.size();\n        // Loop to swap characters from the start with the end\n        for (int i = 0; i < n / 2; i++) {\n            // Swapping characters\n            swap(s[i], s[n - i - 1]);\n        }\n        // Returning the original string which is now reversed\n        return s;\n    }\n};\n",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution {\n    // Function to reverse a string in-place\n    public static String reverseString(String s) {\n        // Convert string to char array for in-place modification\n        char[] charArray = s.toCharArray();\n        int n = charArray.length;\n\n        // Loop to swap characters from start and end\n        for (int i = 0; i < n / 2; i++) {\n            // Swapping characters\n            char temp = charArray[i];\n            charArray[i] = charArray[n - i - 1];\n            charArray[n - i - 1] = temp;\n        }\n\n        // Convert the char array back to a string and return it\n        return new String(charArray);\n    }\n}\n",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "class Solution:\n\n    # Function to reverse a string in-place\n    def reverseString(self, s: str) -> str:\n        # Convert string to a list of characters\n        char_list = list(s)\n        n = len(char_list)\n\n        # Loop to swap characters from start and end\n        for i in range(n // 2):\n            # Swapping characters\n            char_list[i], char_list[n - i - 1] = char_list[n - i -\n                                                           1], char_list[i]\n\n        # Convert list back to string and return\n        return ''.join(char_list)\n",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "class Solution {\n\n    reverseString(s) {\n        // Convert the string into a character array\n        let charArray = s.split('');\n        let n = charArray.length;\n\n        // Loop to swap characters from start to end\n        for (let i = 0; i < n / 2; i++) {\n            // Swap characters\n            let temp = charArray[i];\n            charArray[i] = charArray[n - i - 1];\n            charArray[n - i - 1] = temp;\n        }\n\n        // Convert the array back to a string and return it\n        return charArray.join('');\n    }\n}\n",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}