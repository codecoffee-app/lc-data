{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 700889,
            "title": "Reverse an Array",
            "titleSlug": "reverse-an-array",
            "content": "<p><span >You are given an array of integers&nbsp;<strong>arr[]</strong>. Your task is to&nbsp;<strong>reverse</strong> the given array.</span></p>\n<p><span >Note:<span style=\"background-color: #ffffff; color: #1e2229; font-family: Nunito;\">&nbsp;</span>Modify the array in place.</span></p>\n<p><span ><strong>Examples:<br /></strong></span></p>\n<pre><span ><strong>Input: </strong>arr = [1, 4, 3, 2, 6, 5]\n<strong>Output: </strong>[5, 6, 2, 3, 4, 1]</span><br /><span ><strong>Explanation: </strong>The elements of the array are 1 4 3 2 6 5. After reversing the array, the first element goes to the last position, the second element goes to the second last position and so on. Hence, the answer is 5 6 2 3 4 1.</span></pre>\n<pre><span ><strong>Input</strong>: arr = [4, 5, 2]\n<strong>Output: </strong>[2, 5, 4]</span><br /><span ><strong style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Explanation: </strong>The elements of the array are 4 5 2. The reversed array will be 2 5 4.<br /></span></pre>\n<pre><span ><strong>Input</strong>: arr = [1]\n<strong>Output: </strong>[1]</span><br /><span ><strong style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Explanation: </strong>The array has only single element, hence the reversed array is same as the original.</span></pre>\n<p><span ><strong>Constraints:<br /></strong>1&lt;=arr.size()&lt;=10<sup>5</sup></span><br /><span >0&lt;=arr[i]&lt;=10<sup>5</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of integers `arr[]`, reverse the array in-place.",
                "constraints": [
                    "1 <= arr.size() <= 10^5",
                    "0 <= arr[i] <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "[1, 4, 3, 2, 6, 5]",
                        "output": "[5, 6, 2, 3, 4, 1]",
                        "explanation": "The original array [1, 4, 3, 2, 6, 5] is reversed such that the first element becomes the last, the second element becomes the second to last, and so on, resulting in [5, 6, 2, 3, 4, 1]."
                    },
                    {
                        "input": "[4, 5, 2]",
                        "output": "[2, 5, 4]",
                        "explanation": "Reversing the array [4, 5, 2] results in [2, 5, 4]."
                    },
                    {
                        "input": "[1]",
                        "output": "[1]",
                        "explanation": "Since the array [1] contains only a single element, reversing it results in the same array [1]."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Try to run the loop n/2 times and swap the elements</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [
            "bloomberg",
            "facebook",
            "tcs",
            "adobe",
            "google",
            "infosys",
            "capgemini",
            "morgan-stanley",
            "amazon",
            "microsoft",
            "apple",
            "yahoo",
            "paypal",
            "uber"
        ],
        "solutions": [
            {
                "lang": "C",
                "full_func": "//Back-end complete function Template for C\n\nvoid reverseArray(int arr[], int n) {\n    // Loop through the first half of the array\n    for (int i = 0; i < n / 2; i++) {\n        // Temporary variable to hold the current element\n        int t = arr[i];\n        // Replace the current element with the element from the end\n        arr[i] = arr[n - i - 1];\n        // Replace the element from the end with the current element\n        arr[n - i - 1] = t;\n    }\n}",
                "lang_text": "c"
            },
            {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    void reverseArray(vector<int> &arr) {\n        // Get the size of the input vector\n        int n = arr.size();\n\n        // Loop through the first half of the vector\n        for (int i = 0; i < n / 2; i++) {\n            // Swap the current element with the corresponding element from the end of\n            // the vector\n            // Temporary variable to hold the current element\n            int t = arr[i];\n            // Replace the current element with the element from the end\n            arr[i] = arr[n - i - 1];\n            // Replace the element from the end with the current element\n            arr[n - i - 1] = t;\n        }\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution {\n    public void reverseArray(int arr[]) {\n        // Get the length of the input array\n        int n = arr.length;\n\n        // Loop through the first half of the array\n        for (int i = 0; i < n / 2; i++) {\n            // Swap the current element with the corresponding element from the end of\n            // the array\n            // Temporary variable to hold the current element\n            int t = arr[i];\n            // Replace the current element with the element from the end\n            arr[i] = arr[n - i - 1];\n            // Replace the element from the end with the current element\n            arr[n - i - 1] = t;\n        }\n    }\n}\n",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "class Solution:\n\n    def reverseArray(self, arr):\n        # Get the size of the input list\n        n = len(arr)\n\n        # Loop through the first half of the list\n        for i in range(n // 2):\n            # Swap the current element with the corresponding element from the end of the list\n            # Temporary variable to hold the current element\n            t = arr[i]\n            # Replace the current element with the element from the end\n            arr[i] = arr[n - i - 1]\n            # Replace the element from the end with the current element\n            arr[n - i - 1] = t\n",
                "lang_text": "py"
            },
            {
                "lang": "C#",
                "full_func": "//Back-end complete function Template for csharp\n\nclass Solution {\n    public void ReverseArray(int[] arr) {\n        // Get the size of the input array\n        int n = arr.Length;\n\n        // Loop through the first half of the array\n        for (int i = 0; i < n / 2; i++) {\n            // Swap the current element with the corresponding element from the end of\n            // the array\n            int t = arr[i]; // Temporary variable to hold the current element\n            // Replace the current element with the element from the end\n            arr[i] = arr[n - i - 1];\n            // Replace the element from the end with the current element\n            arr[n - i - 1] = t;\n        }\n    }\n}\n",
                "lang_text": "csharp"
            },
            {
                "lang": "Javascript",
                "full_func": "\nclass Solution {\n    // Function to reverse the array.\n    reverseArray(arr) {\n        // Get the size of the input array\n        let n = arr.length;\n\n        // Loop through the first half of the array\n        for (let i = 0; i < Math.floor(n / 2); i++) {\n            // Swap the current element with the corresponding element from the end of\n            // the array\n            let t = arr[i]; // Temporary variable to hold the current element\n            // Replace the current element with the element from the end\n            arr[i] = arr[n - i - 1];\n            // Replace the element from the end with the current element\n            arr[n - i - 1] = t;\n        }\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}