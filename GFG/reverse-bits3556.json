{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703831,
            "title": "Reverse Bits",
            "titleSlug": "reverse-bits3556",
            "content": "<p><span style=\"font-size: 18px;\">Given a <strong>number x</strong>, <strong>reverse </strong>its binary form and return the answer in <strong>decimal</strong>.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong>\nx =<strong> </strong>1\n<strong>Output:</strong>\n2147483648 \n<strong>Explanation:</strong>\nBinary of 1 in 32 bits representation-\n00000000000000000000000000000001\nReversing the binary form we get, \n10000000000000000000000000000000,\nwhose decimal value is 2147483648.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong>\nx =<strong> </strong>5\n<strong>Output:</strong>\n</span><span style=\"font-size: 18px;\">2684354560</span> <span style=\"font-size: 18px;\">\n<strong>Explanation:</strong>\nBinary of 5 in 32 bits representation-\n00000000000000000000000000000101\nReversing the binary form we get, \n10100000000000000000000000000000,\nwhose decimal value is 2684354560.</span>\n</pre>\n<p><span style=\"font-size: 18px;\"><strong>Your Task:</strong></span><br /><span style=\"font-size: 18px;\">You don't need to read input or print anything. Your task is to complete the function <strong>reversedBits()</strong> which takes an Integer&nbsp;<strong>x</strong> as input and returns the reverse binary form of <strong>x </strong>in decimal form.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong> O(log (x))<br /><strong>Expected Auxiliary Space:</strong> O(1)</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong></span><br /><span style=\"font-size: 18px;\">0&nbsp; &lt;=&nbsp; x&nbsp; &lt;&nbsp; 2<sup>32</sup> </span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a non-negative integer `x`, reverse its 32-bit binary representation and return the resulting number in decimal form.",
                "constraints": [
                    "0 <= x < 2^32"
                ],
                "testcases": [
                    {
                        "input": "1",
                        "output": "2147483648",
                        "explanation": "The 32-bit binary representation of 1 is 00000000000000000000000000000001. Reversing this gives 10000000000000000000000000000000, which is 2147483648 in decimal."
                    },
                    {
                        "input": "5",
                        "output": "2684354560",
                        "explanation": "The 32-bit binary representation of 5 is 00000000000000000000000000000101. Reversing this gives 10100000000000000000000000000000, which is 2684354560 in decimal."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size: 18px;\">Try to change x to binary and then reverse the binary String.&nbsp;</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Bit Magic",
                "slug": "bit-magic"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "amazon",
            "cisco",
            "qualcomm",
            "hcl",
            "nvidia"
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\r\n  public:\r\n    long long reversedBits(long long x) {\r\n        \r\n        if(x==0)\r\n            return 0;\r\n        string s = bitset<32>(x).to_string(); \r\n        s = s.substr(s.find('1')); // Remove leading zeros\r\n        \r\n        long long y = 32 - s.length();\r\n        \r\n        s = string(y, '0') + s; // Adding leading zeroes to fill 32 bits\r\n        \r\n        // Reverse the binary\r\n        reverse(s.begin(), s.end());\r\n        \r\n        // Change binary to its Integer Form\r\n        long long ans = bitset<32>(s).to_ulong(); \r\n        return ans;\r\n    }\r\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n    // Function to reverse the bits of a Long integer\n    static Long reversedBits(Long X) {\n        if (X == 0) return 0L;\n\n        // Convert Long to binary string\n        String s = Long.toBinaryString(X);\n        while (s.length() < 32) // to ensure we have 32 bits representation\n            s = \"0\" + s;\n\n        // Reverse the binary string\n        s = new StringBuilder(s).reverse().toString();\n\n        // Parse binary string to Long integer\n        Long ans = Long.parseLong(s, 2); // Parsing from binary to decimal\n        return ans;\n    }\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": "class Solution:\r\n    def reversedBits(self, x):\r\n        \r\n        # Change the Integer to it's Binary Form\r\n        s=bin(x) \r\n        s=s[2:]\r\n        \r\n        y=32-len(s)\r\n        \r\n        s='0'*y+s     # Adding leading zeroes to fill 32 bits\r\n        \r\n        #Reverse the binary\r\n        s=s[::-1]\r\n        \r\n        ans=int(s,2)     # Change binary to it's Integer Form.\r\n        \r\n        return ans",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": null,
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}