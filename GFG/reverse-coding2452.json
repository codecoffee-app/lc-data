{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704983,
            "title": "Sum of First N Natural Numbers",
            "titleSlug": "reverse-coding2452",
            "content": "<p><span >Given an integer <strong>n</strong>, your task is to compute the sum of all natural numbers from 1 to n (inclusive). If n is 0, the sum should be 0.</span></p>\n<p><span ><strong>Examples:</strong></span></p>\n<pre><span ><strong>Input: </strong>n = 6\n<strong>Output: </strong>21<strong><br /></strong><strong>Explanation: </strong>The sum of natural numbers up to 6 is: 1 + 2 + 3 + 4 + 5 + 6 = 21</span></pre>\n<pre><span ><strong>Input:</strong> n = 4\n<strong>Output: </strong>10\n<strong>Explanation: </strong>The sum of natural numbers up to 4 is: 1 + 2 + 3 + 4 = 10</span></pre>\n<pre><span ><strong>Input:</strong> n = 0\n<strong>Output: </strong>0\n<strong>Explanation: </strong>Since n is 0, the sum is 0.</span></pre>\n<p><span ><strong>Constraints:</strong></span><br /><span >0 &le; n &le; 10<sup>4</sup><br /></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Calculate the sum of all natural numbers from 1 to a given integer 'n' (inclusive). If 'n' is 0, the sum is 0.",
                "constraints": [
                    "0 <= n <= 10000"
                ],
                "testcases": [
                    {
                        "input": "6",
                        "output": "21",
                        "explanation": "The sum of natural numbers from 1 to 6 is 1 + 2 + 3 + 4 + 5 + 6, which equals 21."
                    },
                    {
                        "input": "4",
                        "output": "10",
                        "explanation": "The sum of natural numbers from 1 to 4 is 1 + 2 + 3 + 4, which equals 10."
                    },
                    {
                        "input": "0",
                        "output": "0",
                        "explanation": "When n is 0, the sum is defined as 0."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span >Consider series of natural numbers as an Arithmetic Progression</span></p>",
            "<p>According to Arithmetic Progression, if a series of numbers has a difference <strong>d&nbsp;</strong>between its consecutive number, and has its first number&nbsp;<strong>a,&nbsp;</strong>then sum of&nbsp;<strong>n&nbsp;</strong>such numbers is n( 2a + (n-1)*d )/2</p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function template in C++\n\nclass Solution {\n  public:\n    // Function to calculate the sum of natural numbers up to n.\n    int sumOfNaturals(int n) {\n\n        int sum =\n            ((n * (n + 1)) / 2); // Computing (n*(n+1))/2 and applying modulo operation.\n\n        return (int)sum; // Returning the computed sum as an integer.\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\nclass Solution {\n    static int sumOfNaturals(int n) {\n        int sum = ((n * (n + 1)) / 2); // Computing (n * (n + 1)) / 2\n\n        return (int)sum; // Return the result\n    }\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "#Back-end complete function Template for Python 3\n\n\nclass Solution:\n\n    def sumOfNaturals(self, n):\n\n        Sum = ((n * (n + 1)) // 2)  # Computing (n*(n+1))/2\n\n        return Sum\n",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "class Solution {\n    sumOfNaturals(n) {\n        let sum = (n * (n + 1)) /\n                  2; // Calculate the sum of natural numbers up to n using the formula.\n        return sum;  // Return the calculated sum.\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}