{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705821,
            "title": "Reverse Spiral Form of Matrix",
            "titleSlug": "reverse-spiral-form-of-matrix4033",
            "content": "<p><span style=\"font-size:18px\">Given a matrix as 2D array. Find the reverse&nbsp;spiral traversal of the matrix.&nbsp;<br />\r\n<br />\r\n<strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input</strong>: R = 3, C = 3\r\n  a = {{9, 8, 7},\r\n\\t {6, 5, 4},\r\n&nbsp;\\t{3, 2, 1}}\r\n<strong>Output: </strong>5 6 3 2 1 4 7 8 9\r\n<strong>Explanation</strong>: Spiral form of the matrix\r\nin reverse order starts from the centre \r\nand goes outward.\r\n<img alt=\"\" src=\"https://media.geeksforgeeks.org/img-practice/ScreenShot2022-10-17at10-1665981362.png\" style=\"height:181px; width:200px\" /></span>\r\n\r\n</pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input: </strong>R = 4, C = 4<strong> \r\n</strong>  a = {{1, 2, 3, 4},\r\n\\t {5, 6, 7, 8},\r\n&nbsp;\\t{9, 10, 11, 12}, \r\n&nbsp;\\t{13, 14, 15, 16}}\r\n<strong>Output: </strong>10 11 7 6 5 9 13 14 15 16 12 8 4 3 2 1\r\n<strong>Explanation</strong>: \r\n<img alt=\"\" src=\"https://media.geeksforgeeks.org/img-practice/ScreenShot2022-10-17at10-1665981582.png\" />\r\n</span></pre>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Your Task:&nbsp;&nbsp;</strong><br />\r\nYou dont need to read input or print anything. Complete the function <strong>reverseSpiral()&nbsp;</strong>which takes <strong>R, C </strong>and<strong> a</strong>&nbsp;as input parameters and returns the matrix in reverse spiral form.</span><br />\r\n<br />\r\n<span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(R*C)<br />\r\n<strong>Expected Auxiliary Space:</strong> O(R*C)<br />\r\n<br />\r\n<strong>Constraints:</strong><br />\r\n1&nbsp;&lt;= R,C&nbsp;&lt;=100<br />\r\n1&nbsp;&lt;= a[R][C] &lt;=100</span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a matrix (2D array), find the reverse spiral traversal of the matrix. The spiral traversal starts from the center and moves outward in a clockwise direction. The reverse spiral traversal outputs the elements in the reverse order of this spiral.",
                "constraints": [
                    "1 <= R, C <= 100",
                    "1 <= a[R][C] <= 100"
                ],
                "testcases": [
                    {
                        "input": "R = 3, C = 3\na = {{9, 8, 7},\n\t {6, 5, 4},\n\t{3, 2, 1}}",
                        "output": "5 6 3 2 1 4 7 8 9",
                        "explanation": "The reverse spiral traversal starts from the center element 5, then goes to 6, 3, 2, 1, 4, 7, 8, and finally 9."
                    },
                    {
                        "input": "R = 4, C = 4\na = {{1, 2, 3, 4},\n\t {5, 6, 7, 8},\n\t{9, 10, 11, 12},\n\t{13, 14, 15, 16}}",
                        "output": "10 11 7 6 5 9 13 14 15 16 12 8 4 3 2 1",
                        "explanation": "The reverse spiral traversal starts from the center elements 10, then goes to 11, 7, 6, 5, 9, 13, 14, 15, 16, 12, 8, 4, 3, 2, and finally 1."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Try to store the spiral form first, then reverse the list.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\r\nclass Solution {\r\n  public:\r\n    // Function that print matrix in reverse spiral form. \r\nvector<int> reverseSpiral(int R, int C, vector<vector<int>>&a) \r\n{ \r\n    vector<int>ans;\r\n    // Large array to initialize it \r\n    // with elements of matrix \r\n    long int b[R*C+1]; \r\n      \r\n    /* k - starting row index \r\n    l - starting column index*/\r\n    int i, k = 0, l = 0; \r\n      \r\n    // Counter for single dimension array \r\n    //in which elements will be stored \r\n    int z = 0; \r\n      \r\n    // Total elements in matrix \r\n    int size = R*C; \r\n  \r\n    while (k < R && l < C) \r\n    { \r\n        // Variable to store value of matrix. \r\n        int val; \r\n          \r\n        /* Print the first row from the remaining rows */\r\n        for (i = l; i < C; ++i) \r\n        { \r\n            // printf(\"%d \", a[k][i]); \r\n            val = a[k][i]; \r\n            b[z] = val; \r\n            ++z; \r\n        } \r\n        k++; \r\n  \r\n        /* Print the last column from the remaining columns */\r\n        for (i = k; i < R; ++i) \r\n        { \r\n            // printf(\"%d \", a[i][n-1]); \r\n            val = a[i][C-1]; \r\n            b[z] = val; \r\n            ++z; \r\n        } \r\n        C--; \r\n  \r\n        /* Print the last row from the remaining rows */\r\n        if ( k < R) \r\n        { \r\n            for (i = C-1; i >= l; --i) \r\n            { \r\n                // printf(\"%d \", a[m-1][i]); \r\n                val = a[R-1][i]; \r\n                b[z] = val; \r\n                ++z; \r\n            } \r\n            R--; \r\n        } \r\n  \r\n        /* Print the first column from the remaining columns */\r\n        if (l < C) \r\n        { \r\n            for (i = R-1; i >= k; --i) \r\n            { \r\n                // printf(\"%d \", a[i][l]); \r\n                val = a[i][l]; \r\n                b[z] = val; \r\n                ++z; \r\n            } \r\n            l++; \r\n        } \r\n    } \r\n    for (int i=size-1 ; i>=0 ; --i) \r\n    { \r\n        ans.push_back(b[i]); \r\n    }\r\n    return ans; \r\n}\r\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution\r\n{\r\n    public int[] reverseSpiral(int R, int C, int[][] a)\r\n    {\r\n        // code here\r\n        \r\n        //Storing the spiral form first\r\n        int p=0,q=0; //p is handling the range of columns and q is handling the range of rows.\r\n        int ans[]=new int[R*C];\r\n        int in=0;\r\n        while(p<(C+1)/2 && q<(R+1)/2)\r\n        {\r\n            int l=p,r=C-p;\r\n            for(int i=l;i<r;i++){\r\n                ans[in++]=a[p][i];\r\n            }\r\n            for(int i=q+1;i<R-q;i++){\r\n                ans[in++]=a[i][C-p-1];\r\n            }\r\n            if(p!=R-q-1)\r\n            for(int i=C-p-2;i>=p;i--){\r\n                ans[in++]=a[R-q-1][i];\r\n            }\r\n            if(C-q-1!=p)\r\n            for(int i=R-q-2;i>q;i--){\r\n                ans[in++]=a[i][p];\r\n            }\r\n            p++;\r\n            q++;\r\n        }\r\n        \r\n        //Rversing the whole array \"ans\".\r\n        int i=0,j=R*C-1;\r\n        while(i<j){\r\n            int temp=ans[i];\r\n            ans[i]=ans[j];\r\n            ans[j]=temp;\r\n            i++;\r\n            j--;\r\n        }\r\n        return ans;\r\n    }\r\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\r\n\tdef reverseSpiral(self, R, C, a):\r\n\t\t# code here\r\n\t\tans=[]\r\n# \t  Large array to initialize it \r\n#     with elements of matrix \r\n\t\tb=[0]*(R*C+1)\r\n# \t\tk - starting row index \r\n        # l - starting column index\r\n\t\tk=l=z=0\r\n# \t\tCounter for single dimension array \r\n#       in which elements will be stored\r\n#       Total elements in matrix \r\n\t\tsize=R*C \r\n\t\twhile k<R and l<C:\r\n\t\t  #  Print the first row from the remaining rows \r\n\t\t  \r\n\t\t    for i in range(l,C):\r\n\t\t        val=a[k][i]\r\n\t\t        b[z]=val\r\n\t\t        z+=1\r\n\t\t    k+=1\r\n\t\t  #Print the last column from the remaining columns\r\n\t\t    for i in range(k,R):\r\n\t\t        val=a[i][C-1]\r\n\t\t        b[z]=val\r\n\t\t        z+=1\r\n\t\t    C-=1\r\n\t\t  #  Print the last row from the remaining rows\r\n\t\t    if (k<R):\r\n\t\t        for i in range(C-1,l-1,-1):\r\n\t\t            val=a[R-1][i]\r\n\t\t            b[z]=val\r\n\t\t            z+=1\r\n\t\t        R-=1\r\n\t\t  #Print the first column from the remaining columns\r\n\t\t    if (l<C):\r\n\t\t        for i in range(R-1,k-1,-1):\r\n\t\t            val=a[i][l]\r\n\t\t            b[z]=val\r\n\t\t            z+=1\r\n\t\t        l+=1\r\n\t\tb=b[:-1]\r\n\t\treturn b[::-1]\r\n",
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}