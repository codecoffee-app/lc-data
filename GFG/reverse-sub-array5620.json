{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703049,
            "title": "Reverse sub array",
            "titleSlug": "reverse-sub-array5620",
            "content": "<p><span style=\"font-size: 18px;\">Given an array <strong>a</strong><strong>rr</strong>, you need to reverse a subarray of that array. The range of this subarray is given by indices <strong>l </strong>and<strong> r </strong>(1-based indexing).</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr[] = [1, 2, 3, 4, 5, 6, 7], l = 2, r = 4\n<strong>Output: </strong>[1, 4, 3, 2, 5, 6, 7]\n<strong>Explanation:</strong> After reversing the elements in range 2 to 4 (2, 3, 4), modified array is 1, <strong>4, 3, 2</strong>, 5, 6, 7.</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong> arr[] = [1, 6, 7, 4], l = 1, r = 4\n<strong>Output: </strong>[4, 7, 6, 1]\n<strong>Explanation: </strong>After reversing the elements in range 1 to 4 (1, 6, 7, 4), modified array is <strong>4, 7, 6, 1</strong>.\n</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &le; arr.size() &le; 10<sup>6</sup><br />1 &le; arr[i] &le; 10<sup>6</sup><br />1 &le; l &le; r &le; arr.size()</span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array `arr`, reverse the subarray within the range defined by indices `l` and `r` (1-based indexing). Return the modified array after the reversal.",
                "constraints": [
                    "1 <= arr.size() <= 10^6",
                    "1 <= arr[i] <= 10^6",
                    "1 <= l <= r <= arr.size()"
                ],
                "testcases": [
                    {
                        "input": "arr = [1, 2, 3, 4, 5, 6, 7], l = 2, r = 4",
                        "output": "[1, 4, 3, 2, 5, 6, 7]",
                        "explanation": "Reversing the subarray from index 2 to 4 (inclusive) results in [2, 3, 4] becoming [4, 3, 2]. The resulting array is [1, 4, 3, 2, 5, 6, 7]."
                    },
                    {
                        "input": "arr = [1, 6, 7, 4], l = 1, r = 4",
                        "output": "[4, 7, 6, 1]",
                        "explanation": "Reversing the entire array from index 1 to 4 (inclusive) results in [1, 6, 7, 4] becoming [4, 7, 6, 1]."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Let mid be the middle position of the range [l, r]. Then swap&nbsp;[l, mid] and&nbsp;[mid, r].</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [
            "amazon"
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function template for C++\n\nclass Solution {\n  public:\n    // Function to reverse a subarray in the given array.\n    vector<int> reverseSubArray(vector<int> &arr, int l, int r) {\n        // Calculating the length of the subarray.\n        int len = r - l + 1;\n\n        // Loop to reverse the subarray by swapping elements.\n        for (int i = 0; i < len / 2; i++) {\n            swap(arr[l + i - 1], arr[r - i - 1]);\n        }\n        return arr;\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "// User function Template for Java\n\nclass Solution {\n    public static ArrayList<Integer> reverseSubArray(ArrayList<Integer> arr, int l,\n                                                     int r) {\n        // Calculating the length of the subarray.\n        int len = r - l + 1;\n\n        // Loop to reverse the subarray by swapping elements.\n        for (int i = 0; i < len / 2; i++) {\n            // Swap elements\n            int temp = arr.get(l + i - 1);\n            arr.set(l + i - 1, arr.get(r - i - 1));\n            arr.set(r - i - 1, temp);\n        }\n        return arr;\n    }\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": "#User function Template for python3\nclass Solution:\n\n    def reverseSubArray(self, arr, l, r):\n        # Convert l and r to 0-based indices\n        l -= 1\n        r -= 1\n        # Calculating the length of the subarray\n        len_subarray = r - l + 1\n        # Loop to reverse the subarray by swapping elements\n        for i in range(len_subarray // 2):\n            arr[l + i], arr[r - i] = arr[r - i], arr[l + i]\n        return arr\n",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "// User function Template for javascript\n\nclass Solution {\n    reverseSubArray(arr, l, r) {\n        let len = r - l + 1;\n        for (let i = 0; i < len / 2; i++) {\n            let temp = arr[l + i - 1];\n            arr[l + i - 1] = arr[r - i - 1];\n            arr[r - i - 1] = temp;\n        }\n        return arr;\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}