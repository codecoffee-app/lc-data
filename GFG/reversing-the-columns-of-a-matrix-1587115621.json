{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 701270,
            "title": "Reversing the columns of a Matrix",
            "titleSlug": "reversing-the-columns-of-a-matrix-1587115621",
            "content": "<p><span style=\"font-size: 18px;\">Given a matrix of dimensions n1 x m1. Reverse its columns in-place such that the last column will become the first column and so on.&nbsp;</span></p>\n<p><strong><span style=\"font-size: 18px;\">Example 1:</span></strong></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:\n</strong>n1 = 4, m1 = 3\nmatrix[][] = {{ 1,  2,  3},\n\\t\\t  { 5,  6,  7},\n\\t\\t  {11, 10,  9},\n\\t\\t  {13, 14, 15}}\n<strong>Output: </strong>3 2 1 7 6 5 9 10 11 15 14 13\n<strong>Explanation:\n</strong>Array after exchanging columns:\n3 2 1\n7 6 5\n9 10 11\n15 14 13</span></pre>\n<p><strong><span style=\"font-size: 18px;\">Example 2:</span></strong></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:\n</strong>n1 = 2, m1 = 5\nmatrix[][] = {{ 1, 2, 3, 4, 5},\n\\t\\t  { 6, 7, 8, 9, 10}}\n<strong>Output:</strong> 5 4 3 2 1 10 9 8 7 6\n<strong>Explanation:</strong>\nAfter reversing the column of matrix\n 5 4 3 2 1\n10 9 8 7 6</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Your Task:</strong><br />You dont need to read input or print anything. Complete the function <strong>reverseCol()</strong> that takes matrix as input parameter and modifies it in-place such that the last column will become the first column and so on.&nbsp;</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong> O(n1 * m1)<br /><strong>Expected Auxiliary Space: </strong>O(1)&nbsp;</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &lt;= n1, m1 &lt;= 100<br />0 &lt;= matrix[i][j] &lt;= 1000</span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            ""
        ],
        "relatedTopics": [
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C",
                "full_func": "//Back-end complete function Template for C\r\n\r\n//Function to reverse the columns of a matrix.\r\n//n: number of rows in matrix\r\n//m: number of columns in matrix\r\nvoid reverseCol(int n, int m, int matrix[][m])\r\n{\r\n\tfor (int i = 0; i < n; i++)\r\n\t\tfor (int j = 0; j < m / 2; j++)\r\n\t\t{\r\n\t\t\t//swapping the elements (element at 1st column with element\r\n\t\t\t//at last column, element at 2nd column with element at\r\n\t\t\t//second last column and so on).\r\n\t\t\tint temp = matrix[i][j];\r\n\t\t\tmatrix[i][j] = matrix[i][m - j - 1];\r\n\t\t\tmatrix[i][m - j - 1] = temp;\r\n\t\t}\r\n}",
                "lang_text": "c"
            },
            {
                "lang": "C++",
                "full_func": "class Solution\r\n{   \r\n    public:\r\n    //Function to reverse the columns of a matrix. \r\n    void reverseCol(vector<vector<int> > &matrix)\r\n    {\r\n        int n1 = matrix.size();\r\n        int m1 = matrix[0].size();\r\n        for(int i = 0; i < n1; i++)\r\n            for(int j = 0; j < m1 / 2; j++)\r\n            {\r\n                //swapping the elements (element at 1st column with element\r\n                //at last column, element at 2nd column with element at \r\n                //second last column and so on).\r\n                swap(matrix[i][j], matrix[i][m1-j-1]);\r\n            }\r\n    }\r\n};\r\n\r\n",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution\r\n{\r\n    //Function to reverse the columns of a matrix.\r\n    static void reverseCol(int matrix[][])\r\n    {\r\n        int n1 = matrix.length;\r\n        int m1 = matrix[0].length;\r\n        for(int i= 0; i< n1; i++)\r\n        {\r\n            for(int j = 0; j < m1/2; j++)\r\n            {\r\n                //swapping the elements (element at 1st column with element\r\n                //at last column, element at 2nd column with element at \r\n                //second last column and so on).\r\n                int temp = matrix[i][j];\r\n                matrix[i][j] = matrix[i][m1-1-j];\r\n                matrix[i][m1-1-j]= temp;\r\n            }\r\n        }\r\n    }\r\n}\r\n",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\r\n\r\nclass Solution:\r\n    \r\n    #Function to reverse the columns of a matrix.\r\n    def reverseCol(self,matrix):\r\n        \r\n        n1 = len(matrix)\r\n        m1 = len(matrix[0])\r\n        \r\n        for i in range(n1):\r\n            for j in range(m1//2):\r\n                \r\n                #swapping the elements (element at 1st column with element\r\n                #at last column, element at 2nd column with element at \r\n                #second last column and so on).\r\n                temp = matrix[i][j]\r\n                matrix[i][j] = matrix[i][m1-1-j]\r\n                matrix[i][m1-1-j] = temp",
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "//Back-end complete function Template for csharp\r\n\r\n    class Solution\r\n    {\r\n        \r\n        //Function to reverse the columns of a matrix.\r\n        public void reverseCol(List<List<int>> matrix)\r\n        {\r\n            int n1 = matrix.Count;\r\n            int m1 = matrix[0].Count;\r\n            for(int i = 0; i < n1; i++){\r\n                for(int j = 0; j < m1 / 2; j++)\r\n                {\r\n                    //swapping the elements (element at 1st column with element\r\n                    //at last column, element at 2nd column with element at \r\n                    //second last column and so on).\r\n                    int temp = matrix[i][j];\r\n                    matrix[i][j] =  matrix[i][m1-j-1];\r\n                    matrix[i][m1-j-1] = temp;\r\n                }\r\n            \r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}",
                "lang_text": "csharp"
            },
            {
                "lang": "Javascript",
                "full_func": "//Back-end complete function Template for javascript\r\n/**\r\n * @param {number[][]} matrix\r\n*/\r\nclass Solution \r\n{\r\n    //Function to reverse the columns of a matrix.\r\n    reverseCol(matrix)\r\n    {\r\n        let n1 = matrix.length;\r\n        let m1 = matrix[0].length;\r\n        for(let i = 0; i < n1; i++)\r\n            for(let j = 0; j < Math.floor(m1 / 2); j++)\r\n            {\r\n                //swapping the elements (element at 1st column with element\r\n                //at last column, element at 2nd column with element at \r\n                //second last column and so on).\r\n                let tmp = matrix[i][j];\r\n                matrix[i][j] = matrix[i][m1-1-j];\r\n                matrix[i][m1-1-j] = tmp;\r\n            }\r\n    }\r\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}