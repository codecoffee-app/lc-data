{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 701268,
            "title": "Interchanging the rows of a Matrix",
            "titleSlug": "reversing-the-rows-of-a-matrix-1587115621",
            "content": "<p><span style=\"font-size:18px\">Given a matrix of dimensions n1 x m1. Interchange its rows&nbsp;in-place such that the first&nbsp;row&nbsp;will become the last&nbsp;row&nbsp;and so on.&nbsp;</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input</strong>:\r\nn1 = 4, m1 = 4\r\nmatrix[][] = {{1, 2, 3, 4},\r\n&nbsp;\\t\\t{5, 6, 7, 8},\r\n    &nbsp;\\t  {9, 10, 11, 12},\r\n    &nbsp;\\t  {13, 14, 15,16}}\r\n<strong>Output</strong>: \r\n13 14 15 16 9 10 11 12 5 6 7 8 1 2 3 4\r\n<strong>Explanation</strong>:\r\nMatrix after exchanging rows:\r\n13 14 15 16\r\n 9 10 11 12\r\n 5  6  7  8\r\n 1  2  3  4\r\n<strong>Note</strong>: Output is printed row-wise linearly. \r\n</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input</strong>:\r\nn1 = 5, m1 = 3\r\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\r\nmatrix[][] = {{1, 2, 3},\r\n&nbsp;\\t\\t{4, 5, 6},\r\n    &nbsp;\\t  {7, 8, 9},\r\n    &nbsp;\\t  {10, 11, 12},\r\n&nbsp;\\t\\t{13, 14, 15}}\r\n<strong>Output</strong>: \r\n13 14 15 10 11 12 7 8 9 4 5 6 1 2 3\r\n<strong>Explanation</strong>:\r\nAfter interchanging rows:\r\n13 14 15\r\n10 11 12\r\n 7  8  9\r\n 4  5  6\r\n 1  2  3\r\n\r\n</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou dont need to read input or print anything.&nbsp;Complete the function<strong> interchangeRows()&nbsp;</strong>that takes matrix<strong> </strong>as input parameter&nbsp;and modifies<strong> </strong>the matrix in-place such that the first row becomes the last row and so on.<br />\r\n<br />\r\n<strong>Expected Time Complexity:</strong> O(n1 * m1)<br />\r\n<strong>Expected Auxiliary Space:</strong> O(1)<br />\r\n<br />\r\n<strong>Constraints:</strong><br />\r\n1 &lt;= n<sub>1</sub>, m<sub>1</sub> &lt;= 100<br />\r\n1 &lt;= matrix[i][j]&nbsp;&lt;= 1000</span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a matrix of dimensions n1 x m1, interchange its rows in-place such that the first row becomes the last row, the second row becomes the second-to-last row, and so on.  Essentially, reverse the order of the rows in the matrix.",
                "constraints": [
                    "1 <= n1, m1 <= 100",
                    "1 <= matrix[i][j] <= 1000"
                ],
                "testcases": [
                    {
                        "input": "n1 = 4, m1 = 4\nmatrix[][] = {{1, 2, 3, 4},\n\t\t{5, 6, 7, 8},\n    \t  {9, 10, 11, 12},\n    \t  {13, 14, 15,16}}",
                        "output": "13 14 15 16 9 10 11 12 5 6 7 8 1 2 3 4",
                        "explanation": "The matrix rows are reversed: the first row becomes the last, the second becomes the second-to-last, and so on."
                    },
                    {
                        "input": "n1 = 5, m1 = 3\nmatrix[][] = {{1, 2, 3},\n\t\t{4, 5, 6},\n    \t  {7, 8, 9},\n    \t  {10, 11, 12},\n\t\t{13, 14, 15}}",
                        "output": "13 14 15 10 11 12 7 8 9 4 5 6 1 2 3",
                        "explanation": "The matrix rows are reversed: the first row becomes the last, the second becomes the second-to-last, and so on."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            ""
        ],
        "relatedTopics": [
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "    \r\n\r\nclass Solution\r\n{   \r\n    public:\r\n    //Function to interchange the rows of a matrix.\r\n    void interchangeRows(vector<vector<int> > &matrix)\r\n    {\r\n        int n1 = matrix.size();\r\n        int m1 = matrix[0].size();\r\n        for(int i = 0; i < n1/2; i++)\r\n        {\r\n            //swapping the elements (element at 1st row with element\r\n            //at last row, element at 2nd row with element at \r\n            //second last row and so on).\r\n            swap(matrix[i], matrix[n1-i-1]);\r\n        }\r\n    }\r\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution\r\n{\r\n    //Function to interchange the rows of a matrix.\r\n    static void interchangeRows(int matrix[][])\r\n    {\r\n        int n1 = matrix.length;\r\n        int m1 = matrix[0].length;\r\n        \r\n        for(int i= 0; i< n1/2; i++)\r\n        {\r\n            for(int j = 0; j < m1; j++)\r\n            {\r\n                //swapping the elements (element at 1st row with element\r\n                //at last row, element at 2nd row with element at \r\n                //second last row and so on).\r\n                int temp = matrix[i][j];\r\n                matrix[i][j] = matrix[n1-1-i][j];\r\n                matrix[n1-1-i][j] = temp;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "#Back-end complete function Template for Python 3\r\n\r\nclass Solution:\r\n    \r\n    #Function to interchange the rows of a matrix.\r\n    def interchangeRows(self,matrix):\r\n        \r\n        n1 = len(matrix)\r\n        m1 = len(matrix[0])\r\n        \r\n        for i in range(n1//2):\r\n            for j in range(m1):\r\n                \r\n                #swapping the elements (element at 1st row with element\r\n                #at last row, element at 2nd row with element at \r\n                #second last row and so on).\r\n                temp = matrix[i][j]\r\n                matrix[i][j] = matrix[n1-1-i][j];\r\n                matrix[n1-1-i][j] = temp\r\n        \r\n            \r\n           ",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "//Back-end complete function Template for javascript\r\n\r\n/**\r\n * @param {number[][]} matrix\r\n*/\r\nclass Solution \r\n{\r\n    //Function to interchange the rows of a matrix.\r\n    interchangeRows(matrix)\r\n    {\r\n        let n1 = matrix.length;\r\n        let m1 = matrix[0].length;\r\n        for(let i = 0; i < n1/2; i++)\r\n            for(let j = 0; j < m1; j++)\r\n            {\r\n                //swapping the elements (element at 1st row with element\r\n                //at last row, element at 2nd row with element at \r\n                //second last row and so on).\r\n                let temp = matrix[i][j];\r\n                matrix[i][j] = matrix[n1-1-i][j];\r\n                matrix[n1-1-i][j] = temp;\r\n            }\r\n    }\r\n}\r\n",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}