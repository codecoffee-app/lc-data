{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703094,
            "title": "Reversing the vowels",
            "titleSlug": "reversing-the-vowels5304",
            "content": "<p><span style=\"font-size: 18px;\">Given a string consisting of lowercase English alphabets, reverse only the vowels present in it and print the resulting string.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>s = \"geeksforgeeks\"\n<strong>Output:</strong> \"geeksforgeeks\"\n<strong>Explanation</strong>: The vowels are: e, e, o, e, e. Reverse of these is also e, e, o, e, e.</span>\n</pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input</strong>: s = \"practice\"\n<strong>Output:</strong> \"prectica\"\n<strong>Explanation</strong>: The vowels are a, i, e. Reverse of these is e, i, a.</span>\n</pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input</strong>: s = \"bcdfg\"\n<strong>Output:</strong> \"bcdfg\"\n<strong>Explanation</strong>: There are no vowels in s.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1&lt;=|s|&lt;=10<sup>5</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string `s` consisting of lowercase English alphabets, reverse only the vowels present in it and return the resulting string.",
                "constraints": [
                    "1 <= |s| <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "geeksforgeeks",
                        "output": "geeksforgeeks",
                        "explanation": "The vowels are e, e, o, e, e. Reversing them results in e, e, o, e, e, so the string remains unchanged."
                    },
                    {
                        "input": "practice",
                        "output": "prectica",
                        "explanation": "The vowels are a, i, e. Reversing them results in e, i, a. Replacing the original vowels with the reversed vowels produces 'prectica'."
                    },
                    {
                        "input": "bcdfg",
                        "output": "bcdfg",
                        "explanation": "There are no vowels in the input string, so the string remains unchanged."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size: 18px;\">Just store the vowels in a separate string <strong>vow</strong> in the order in which they appear in string <strong>S</strong>. Then, traverse the string S in reverse while placing the vowels that you stored in <strong>vow</strong>.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [
            "zoho",
            "flipkart"
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    string modify(string s) {\n        string vow = \"\";\n        for (int i = 0; i < s.length(); ++i) {\n            // removing the vowels from s and adding them to the string vow\n            if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' ||\n                s[i] == 'u') {\n                vow += s[i];\n                s[i] = '.'; // to indicate that the current position is now empty\n            }\n        }\n\n        // traversing s in reverse order and placing the vowels at empty locations\n        int i = s.length() - 1;\n        int j = 0;\n        while (i >= 0) {\n            if (s[i] == '.')\n                s[i] = vow[j++];\n            i--;\n        }\n        return s;\n    }\n\n    // Contributed By: Pranay Bansal\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "class Solution {\n    modify(s) {\n        let vow = \"\";\n        for (let i = 0; i < s.length; ++i) {\n            // removing the vowels from s and adding them to the string vow\n            if (s[i] === 'a' || s[i] === 'e' || s[i] === 'i' || s[i] === 'o' || s[i] === 'u') {\n                vow += s[i];\n                // to indicate that the current position is now empty\n                s = s.substring(0, i) + '.' + s.substring(i + 1);\n            }\n        }\n\n        // traversing s in reverse order and placing the vowels at empty locations\n        let i = s.length - 1;\n        let j = 0;\n        while (i >= 0) { \n            if (s[i] === '.') {\n                s = s.substring(0, i) + vow[j++] + s.substring(i + 1);\n            }\n            i--;\n        }\n        return s;\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}