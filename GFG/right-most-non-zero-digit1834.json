{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704462,
            "title": "Right most non zero digit",
            "titleSlug": "right-most-non-zero-digit1834",
            "content": "<p><span style=\"font-size:18px\">You will be given an array <strong>A</strong> of <strong>N</strong> non-negative integers. Your task is to find the rightmost non-zero digit&nbsp;in the&nbsp;product of array elements.</span></p>\r\n\r\n<p><br />\r\n<strong><span style=\"font-size:18px\">Example 1:</span></strong></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong>\r\nN = 4, A = {3, 23, 30, 45}</span>\r\n<strong><span style=\"font-size:18px\">Output:</span></strong>\r\n<span style=\"font-size:18px\">5</span>\r\n<strong><span style=\"font-size:18px\">Explanation:</span></strong>\r\n<span style=\"font-size:18px\">Product of these numbers \r\nare 93150.</span><span style=\"font-size:18px\">Rightmost \r\nnon-zero digit is 5.</span></pre>\r\n\r\n<p><strong><span style=\"font-size:18px\">Example 2:</span></strong></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong>\r\nN = 5, A = {1, 2, 3, 4, 5}</span>\r\n<strong><span style=\"font-size:18px\">Output:</span></strong>\r\n<span style=\"font-size:18px\">2</span>\r\n<strong><span style=\"font-size:18px\">Explanation:</span></strong>\r\n<span style=\"font-size:18px\">Product of these numbers \r\nare 120. </span><span style=\"font-size:18px\">Rightmost \r\nnon-zero digit is 2.</span></pre>\r\n\r\n<p><br />\r\n<strong><span style=\"font-size:18px\">Your Task:</span></strong></p>\r\n\r\n<p><span style=\"font-size:18px\">You don&#39;t need to read input or print anything. Your task is to complete the function rightmostNonZeroDigit() which takes an array A and returns the rightmost non-zero digit&nbsp;in the&nbsp;product of array elements, if there is no right most non zero digit, then return -1.</span></p>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(N*logN)<br />\r\n<strong>Expected Auxiliary Space:</strong> O(N)</span></p>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n1 &le; N &le; 10<sup>5</sup><br />\r\n0 &le; A[i] &le; 10<sup>5</sup>&nbsp; </span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array **A** of **N** non-negative integers, find the rightmost non-zero digit in the product of the array elements. If no non-zero digit exists, return -1.",
                "constraints": [
                    "1 \u2264 N \u2264 10^5",
                    "0 \u2264 A[i] \u2264 10^5"
                ],
                "testcases": [
                    {
                        "input": "N = 4, A = {3, 23, 30, 45}",
                        "output": "5",
                        "explanation": "The product of the array elements is 3 * 23 * 30 * 45 = 93150. The rightmost non-zero digit is 5."
                    },
                    {
                        "input": "N = 5, A = {1, 2, 3, 4, 5}",
                        "output": "2",
                        "explanation": "The product of the array elements is 1 * 2 * 3 * 4 * 5 = 120. The rightmost non-zero digit is 2."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">The question is too simple if you know basic maths. It is given that you have to find the rightmost positive digit. Now a digit is made multiple of 10 if there are 2 and 5. They produce a number with last digit 0.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Modular Arithmetic",
                "slug": "modular-arithmetic"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "amazon"
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function template for C++\r\n\r\nclass Solution {   \r\n  public:\r\n    int rightmostNonZeroDigit(int N, int A[]){\r\n        \r\n        // To store the count of times 5 can \r\n        // divide the array elements \r\n        int c5 = 0; \r\n        int n= N;\r\n        // Divide the array elements by 5 \r\n        // as much as possible \r\n        for (int i = 0; i < n; i++) { \r\n            while (A[i] > 0 && A[i] % 5 == 0) { \r\n                A[i] /= 5; \r\n                // increase count of 5 \r\n                c5++; \r\n            } \r\n        } \r\n      \r\n        // Divide the array elements by \r\n        // 2 as much as possible \r\n        for (int i = 0; i < n; i++) { \r\n            while (c5 && A[i] > 0 && !(A[i] & 1)) { \r\n                A[i] >>= 1; \r\n      \r\n                // Decrease count of 5, because a '2' and \r\n                // a '5' makes a number with last digit '0' \r\n                c5--; \r\n            } \r\n        } \r\n        int ans = 1; \r\n        for (int i = 0; i < n; i++) { \r\n            ans = (ans * A[i] % 10) % 10; \r\n        } \r\n      \r\n        // If c5 is more than the multiplier \r\n        // should be taken as 5 \r\n        if (c5) \r\n            ans = (ans * 5) % 10; \r\n      \r\n        if (ans) \r\n            return ans; \r\n      \r\n        return -1;\r\n        \r\n    }\r\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "//Backend complete function Template for Java\r\n\r\nclass Solution{\r\n    static int rightmostNonZeroDigit(int N, int[] A){\r\n        \r\n        // To store the count of times 5 can \r\n        // divide the array elements \r\n        int c5 = 0; \r\n        // Divide the array elements by 5 \r\n        // as much as possible \r\n        for (int i = 0; i < N; i++) { \r\n            while (A[i] > 0 && A[i] % 5 == 0) { \r\n                A[i] /= 5; \r\n                // increase count of 5 \r\n                c5++; \r\n            } \r\n        } \r\n      \r\n        // Divide the array elements by \r\n        // 2 as much as possible \r\n        for (int i = 0; i < N; i++) { \r\n            while (c5>0 && A[i] > 0 && (A[i] % 2 == 0)) { \r\n                A[i] /= 2; \r\n      \r\n                // Decrease count of 5, because a '2' and \r\n                // a '5' makes a number with last digit '0' \r\n                c5--; \r\n            } \r\n        } \r\n        int ans = 1; \r\n        for (int i = 0; i < N; i++) { \r\n            ans = (ans * (A[i] % 10)) % 10; \r\n        } \r\n      \r\n        // If c5 is more than the multiplier \r\n        // should be taken as 5 \r\n        if (c5>0) \r\n            ans = (ans * 5) % 10; \r\n      \r\n        if (ans!=0) \r\n            return ans; \r\n      \r\n        return -1;\r\n    }\r\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": "#Backend complete function Template for python3\r\n\r\nclass Solution:\r\n    def rightmostNonZeroDigit (self, N, A):\r\n        # To store the count of times 5 can \r\n        # divide the array elements \r\n        c5 = 0 \r\n        # Divide the array elements by 5 \r\n        # as much as possible \r\n        for i in range(N):\r\n            while (A[i] > 0 and A[i] % 5 == 0):\r\n                A[i] //= 5 \r\n                # increase count of 5 \r\n                c5 += 1 \r\n      \r\n        # Divide the array elements by \r\n        # 2 as much as possible \r\n        for i in range(N):\r\n            while (c5 and A[i] > 0 and (A[i] % 2 == 0)):\r\n                A[i] //= 2\r\n      \r\n                # Decrease count of 5, because a '2' and \r\n                # a '5' makes a number with last digit '0' \r\n                c5 -= 1 \r\n                \r\n        ans = 1\r\n        for i in range(N):\r\n            ans = (ans * A[i] % 10) % 10\r\n      \r\n        # If c5 is more than the multiplier \r\n        # should be taken as 5 \r\n        if c5: \r\n            ans = (ans * 5) % 10\r\n            \r\n        if ans: \r\n            return ans \r\n      \r\n        return -1",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "//User function Template for JavaScript\n\n\n\nclass Solution{\n    rightmostNonZeroDigit(arr,n){\n        let c5 = 0; \n        // Divide the array elements by 5 \n        // as much as possible \n        for (let i = 0; i < n; i++) { \n            while (arr[i] > 0 && arr[i] % 5 === 0) { \n                arr[i] /= 5; \n                // increase count of 5 \n                c5++; \n            } \n        } \n  \n        // Divide the array elements by \n        // 2 as much as possible \n        for (let i = 0; i < n; i++) { \n            while (c5 && arr[i] > 0 && !(arr[i] & 1)) { \n                arr[i] >>= 1; \n  \n                // Decrease count of 5, because a '2' and \n                // a '5' makes a number with last digit '0' \n                c5--; \n            } \n        } \n        let ans = 1; \n        for (let i = 0; i < n; i++) { \n            ans = (ans * arr[i] % 10) % 10; \n        } \n  \n        // If c5 is more than the multiplier \n        // should be taken as 5 \n        if (c5) \n            ans = (ans * 5) % 10; \n  \n        if (ans) \n            return ans; \n  \n        return -1;\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}