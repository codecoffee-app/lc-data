{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 711625,
            "title": "Pattern 2",
            "titleSlug": "right-triangle",
            "content": "<p><span style=\"font-size: 18px;\">Geek is very fond of patterns. Once, his teacher gave him a pattern of triangle to solve. He gave Geek an integer n and asked him to build a pattern.</span></p>\n<p><span style=\"font-size: 18px;\">Help Geek to build a triangle pattern using stars(*).</span></p>\n<p>&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input</strong>:<br />n = 5<br /><strong>Output:</strong><br />*&nbsp;<br />* *&nbsp;<br />* * *&nbsp;<br />* * * *&nbsp;<br />* * * * *</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input</strong>: <br />n = 6<br /><strong>Output:</strong><br />*&nbsp;<br />* *&nbsp;<br />* * *&nbsp;<br />* * * *&nbsp;<br />* * * * *<br />* * * * * *</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Your Task:<br /></strong></span><span style=\"font-size: 18px;\">You don't need to input anything. Complete the function <strong>printTriangle()&nbsp;</strong>which takes an integer <strong>n</strong> <strong>&nbsp;</strong>as the input parameter and prints the pattern accordingly.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity : </strong>O(n<sup>2</sup>)<strong><br />Expected Auxilary Space :</strong> O(1)</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:<br /></strong></span><span style=\"font-size: 18px;\">1&lt;= n &lt;= 1000</span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Geek has been challenged by his teacher to create a triangle pattern using stars (*). Given an integer 'n', construct a triangle where the i-th row contains 'i' stars.",
                "constraints": [
                    "1 <= n <= 1000"
                ],
                "testcases": [
                    {
                        "input": "5",
                        "output": "*\n* *\n* * *\n* * * *\n* * * * *",
                        "explanation": "The pattern consists of 5 rows, with the number of stars increasing by one in each subsequent row."
                    },
                    {
                        "input": "6",
                        "output": "*\n* *\n* * *\n* * * *\n* * * * *\n* * * * * *",
                        "explanation": "The pattern consists of 6 rows, with the number of stars increasing by one in each subsequent row."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>the sequence of the number of stars in each line in Natural numbers from 1 to n.&nbsp;</p>",
            "<p>Use nested loops</p>"
        ],
        "relatedTopics": [],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution {\r\n    // function to return sum of elements\r\n    // in an array of size n\r\n  public:\r\n    void printTriangle(int n) {\r\n        for (int i = 1; i <= n; i++) {\r\n            for (int j = 1; j <= i; j++) {\r\n                cout << \"* \";\r\n            }\r\n            cout << endl;\r\n        }\r\n    }\r\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": " \n\nclass Solution {\n\n    void printTriangle(int n) {\n        // iterating through each row of the triangle\n        for (int i = 1; i <= n; i++) {\n            // iterating through each column of the current row\n            for (int j = 1; j <= i; j++) {\n                // printing the '*' character and a space\n                System.out.print(\"* \");\n            }\n            // printing a new line after each row\n            System.out.println();\n        }\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\r\n\r\nclass Solution:\r\n    # Function to print the pattern of a triangle\r\n    def printTriangle(self, N):\r\n        for i in range(1, 1 + N):\r\n            for j in range(1, i + 1):\r\n                print('* ', end = '')\r\n            print()",
                "lang_text": "py"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    public void printTriangle(int n)\n    {\n        for (int i = 1; i <= n; i++)\n        {\n            for (int j = 1; j <= i; j++)\n            {\n                Console.Write(\"* \");\n            }\n            Console.WriteLine();\n        }\n    }\n}",
                "lang_text": "csharp"
            },
            {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\r\n/**\r\n * @param {number} N\r\n * @returns {void}\r\n*/\r\n\r\nclass Solution {\r\n    // Function to print the pattern of a triangle\r\n    printTriangle(N) {\r\n        for (let i = 1; i <= N; i++) {\r\n            for (let j = 1; j <= i; j++) {\r\n                process.stdout.write('* ');\r\n            }\r\n            console.log();\r\n        }\r\n    }\r\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}