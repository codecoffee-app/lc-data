{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 702022,
            "title": "Roman Number to Integer",
            "titleSlug": "roman-number-to-integer3201",
            "content": "<p><span style=\"font-size: 18px;\">Given a string in Roman number format (s), your task is to convert it to an integer. Various symbols and their values are given below.<br /><strong>Note: </strong>I = 1, V = 5, X = 10, L = 50, C = 100, D = 500, M = 1000</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>s = \"IX\"\n<strong>Output: </strong>9<br /><strong>Explanation: </strong>IX is a Roman symbol which represents 10 &ndash; 1 = 9.</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>s = \"XL\"&nbsp;\n<strong>Output: </strong>40<br /><strong>Explanation: </strong>XL is a Roman symbol which represents 50 &ndash; 10 = 40.</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>s = \"MCMIV\"</span><span style=\"font-size: 18px;\">&nbsp;<br /></span><span style=\"font-size: 18px;\"><strong>Output: </strong>1904<br /><strong>Explanation: </strong>M is 1000, CM is 1000 &ndash; 100 = 900, and IV is 4. So we have total as 1000 + 900 + 4 = 1904.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1&lt;= roman number &lt;=3999<br />s[i] belongs to [I, V, X, L, C, D, M]</span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Convert a Roman numeral string to its integer equivalent. The following values are assigned to each Roman numeral symbol: I = 1, V = 5, X = 10, L = 50, C = 100, D = 500, M = 1000.  Subtractive notation is used where a smaller value preceding a larger value indicates subtraction (e.g., IV = 4, IX = 9).",
                "constraints": [
                    "1 <= Roman numeral value <= 3999",
                    "Each character in the input string s belongs to the set [I, V, X, L, C, D, M]"
                ],
                "testcases": [
                    {
                        "input": "IX",
                        "output": 9,
                        "explanation": "IX represents 10 - 1 = 9."
                    },
                    {
                        "input": "XL",
                        "output": 40,
                        "explanation": "XL represents 50 - 10 = 40."
                    },
                    {
                        "input": "MCMIV",
                        "output": 1904,
                        "explanation": "M is 1000, CM is 1000 - 100 = 900, and IV is 4. Therefore, 1000 + 900 + 4 = 1904."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span >To convert a Roman numeral to an integer, iterate through the string and add the value of each symbol, but if a symbol is smaller than the one that follows, subtract it instead.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [
            "zoho",
            "amazon",
            "microsoft",
            "facebook",
            "twitter",
            "uber"
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "// Backend Complete function template for C++\n\nclass Solution {\n  public:\n    // This function returns value of a Roman symbol\n    int value(char r) {\n        if (r == 'I')\n            return 1;\n        if (r == 'V')\n            return 5;\n        if (r == 'X')\n            return 10;\n        if (r == 'L')\n            return 50;\n        if (r == 'C')\n            return 100;\n        if (r == 'D')\n            return 500;\n        if (r == 'M')\n            return 1000;\n    }\n\n    // Returns decimal value of roman numeral\n    int romanToDecimal(string &s) {\n        // Initialize result\n        int res = 0;\n\n        // Traverse given input\n        for (int i = 0; i < s.length(); i++) {\n            // Getting value of symbol s[i]\n            int s1 = value(s[i]);\n\n            if (i + 1 < s.length()) {\n                // Getting value of symbol s[i+1]\n                int s2 = value(s[i + 1]);\n\n                // Comparing both values\n                if (s1 >= s2) {\n                    // Value of current symbol is greater\n                    // or equal to the next symbol\n                    res = res + s1;\n                } else {\n                    res = res + s2 - s1;\n                    i++; // Value of current symbol is\n                         // less than the next symbol\n                }\n            } else {\n                res = res + s1;\n            }\n        }\n        return res;\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\nclass Solution {\n    // This function returns value of a Roman symbol\n    int value(char r) {\n        if (r == 'I') return 1;\n        if (r == 'V') return 5;\n        if (r == 'X') return 10;\n        if (r == 'L') return 50;\n        if (r == 'C') return 100;\n        if (r == 'D') return 500;\n        if (r == 'M') return 1000;\n        return -1;\n    }\n\n    // Finds decimal value of a given romal numeral\n    public int romanToDecimal(String s) {\n        // Initialize result\n        int res = 0;\n\n        for (int i = 0; i < s.length(); i++) {\n            // Getting value of symbol s[i]\n            int s1 = value(s.charAt(i));\n\n            // Getting value of symbol s[i+1]\n            if (i + 1 < s.length()) {\n                int s2 = value(s.charAt(i + 1));\n\n                // Comparing both values\n                if (s1 >= s2) {\n                    // Value of current symbol is greater\n                    // or equalto the next symbol\n                    res = res + s1;\n                } else {\n                    res = res + s2 - s1;\n                    i++; // Value of current symbol is\n                    // less than the next symbol\n                }\n            } else {\n                res = res + s1;\n            }\n        }\n\n        return res;\n    }\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "#Back-end complete function Template for Python 3\n\n\nclass Solution:\n    # This function returns value of each Roman symbol\n    def value(self, r):\n        if (r == 'I'):\n            return 1\n        if (r == 'V'):\n            return 5\n        if (r == 'X'):\n            return 10\n        if (r == 'L'):\n            return 50\n        if (r == 'C'):\n            return 100\n        if (r == 'D'):\n            return 500\n        if (r == 'M'):\n            return 1000\n        return -1\n\n    def romanToDecimal(self, s):\n        res = 0\n        i = 0\n        while (i < len(s)):\n\n            # Getting value of symbol s[i]\n            s1 = self.value(s[i])\n\n            if (i + 1 < len(s)):\n\n                # Getting value of symbol s[i+1]\n                s2 = self.value(s[i + 1])\n\n                # Comparing both values\n                if (s1 >= s2):\n\n                    # Value of current symbol is greater\n                    # or equal to the next symbol\n                    res = res + s1\n                    i = i + 1\n                else:\n\n                    # Value of current symbol is greater\n                    # or equal to the next symbol\n                    res = res + s2 - s1\n                    i = i + 2\n            else:\n                res = res + s1\n                i = i + 1\n\n        return res\n",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "// User function Template for javascript\n\n/**\n * @param {sing} s\n * @returns {number}\n */\n\nclass Solution {\n    romanToDecimal(s) {\n        // This function returns value of a Roman symbol\n        function value(r) {\n            if (r == 'I') return 1;\n            if (r == 'V') return 5;\n            if (r == 'X') return 10;\n            if (r == 'L') return 50;\n            if (r == 'C') return 100;\n            if (r == 'D') return 500;\n            if (r == 'M') return 1000;\n        }\n\n        // Initialize result\n        let res = 0;\n\n        // Traverse given input\n        for (let i = 0; i < s.length; i++) {\n            // Getting value of symbol s[i]\n            let s1 = value(s[i]);\n\n            if (i + 1 < s.length) {\n                // Getting value of symbol s[i+1]\n                let s2 = value(s[i + 1]);\n\n                // Comparing both values\n                if (s1 >= s2) {\n                    // Value of current symbol is greater or equal to the next symbol\n                    res = res + s1;\n                } else {\n                    res = res + s2 - s1;\n                    i++; // Value of current symbol is less than the next symbol\n                }\n            } else {\n                res = res + s1;\n            }\n        }\n\n        return res;\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}