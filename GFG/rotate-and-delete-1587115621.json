{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 701204,
            "title": "Rotate and delete",
            "titleSlug": "rotate-and-delete-1587115621",
            "content": "<p><span style=\"font-size: 18px;\">Given an array <strong>arr</strong> integers. Assume <strong>sz&nbsp;</strong>to be the initial size of the array. Do the following operations exactly <strong>sz/2</strong> times. In every&nbsp;<strong>kth </strong>(1&lt;= k &lt;= sz/2) operation:</span></p>\n<ul>\n<li><span style=\"font-size: 18px;\">Right-rotate the array clockwise by <strong>1</strong>.</span></li>\n<li><span style=\"font-size: 18px;\">Delete the<strong> <span style=\"color: #273239; font-family: Nunito, sans-serif; letter-spacing: 0.162px; background-color: #ffffff;\">(n&ndash; k + 1)</span><span style=\"box-sizing: border-box; margin: 0px; padding: 0px; border: 0px; font-size: 13.5px; vertical-align: baseline; line-height: 0; position: relative; top: -0.5em; color: #273239; font-family: Nunito, sans-serif; letter-spacing: 0.162px; background-color: #ffffff;\">th</span>&nbsp;</strong>element from begin.</span></li>\n</ul>\n<p><span style=\"font-size: 18px;\">Now, Return the first element of the array.<br /><strong>Note:</strong> Here n keeps on decreasing with every operation.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr<strong> = </strong>[1, 2, 3, 4, 5, 6]</span>\n<span style=\"font-size: 18px;\"><strong>Output: </strong>3</span>\n<span style=\"font-size: 18px;\"><strong>Explanation: </strong></span><span style=\"font-size: 18px;\">Rotate the array clockwise i.e. after rotation the array arr = [6, 1, 2, 3, 4, 5] and delete the last element that is 5 that will be arr = [6, 1, 2, 3, 4]. Again rotate the array for the second time and deletes the second last element that is 2 that will be A = [4, 6, 1, 3], doing similar operation when we perform 4th operation, 4th last element does not exist. Then we deletes 1st element ie 1 that will be arr = [3, 6]. So, continuing this procedure the last element in arr is 2. So, the output will be 3.</span></pre>\n<pre><span ><strong>Input: </strong>arr<strong> = </strong>[1, 2, 3, 4]\n<strong>Output: </strong>2\n<strong>Explanation:</strong> Rotate the vector clockwise i.e. after rotation the vector arr = [4, 1, 2, 3] and delete the last element that is 3 that will be arr = [4, 1, 2]. After doing all the operations, the output will be 2.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong> O(n<sup>2</sup>)<br /><strong>Expected Auxiliary Space:</strong>&nbsp;O(1)</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &lt;= arr.size() &lt;= 10<sup>3</sup><br />1 &lt;= arr[i] &lt;= 10<sup>6</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of integers `arr` of initial size `sz`, perform `sz/2` operations. In each operation `k` (from 1 to `sz/2`): \n\n1.  Right-rotate the array clockwise by 1 position.\n2.  Remove the element at index `(n - k)`, where `n` is the current size of the array.",
                "constraints": [
                    "1 <= arr.size() <= 10^3",
                    "1 <= arr[i] <= 10^6"
                ],
                "testcases": [
                    {
                        "input": "[1, 2, 3, 4, 5, 6]",
                        "output": "3",
                        "explanation": "Initial array: [1, 2, 3, 4, 5, 6]\n\nOperation 1 (k=1): Rotate -> [6, 1, 2, 3, 4, 5]. Remove element at index (6-1) = 5 -> [6, 1, 2, 3, 4]\n\nOperation 2 (k=2): Rotate -> [4, 6, 1, 2, 3]. Remove element at index (5-2) = 3 -> [4, 6, 1, 3]\n\nOperation 3 (k=3): Rotate -> [3, 4, 6, 1]. Remove element at index (4-3) = 1 -> [3, 6, 1]\n\nFirst element after all operations is 3."
                    },
                    {
                        "input": "[1, 2, 3, 4]",
                        "output": "2",
                        "explanation": "Initial array: [1, 2, 3, 4]\n\nOperation 1 (k=1): Rotate -> [4, 1, 2, 3]. Remove element at index (4-1) = 3 -> [4, 1, 2]\n\nOperation 2 (k=2): Rotate -> [2, 4, 1]. Remove element at index (3-2) = 1 -> [2, 4]\n\nFirst element after all operations is 2."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Greedly think how many times we have to rotate to generate the output.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "\nclass Solution {\n  public:\n    int rotateDelete(vector<int> &arr) {\n        int i = 1;\n        int n = arr.size();\n        while (i < (n / 2) + 1) {\n            // rotating the array\n            rotate(arr.begin(), arr.end() - 1, arr.end());\n            // delete (z-k+1)th element\n            arr.erase(arr.begin() + (arr.size() - i));\n            i++;\n        }\n        return arr[0];\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "\nclass Solution {\n\n    public static int rotateDelete(ArrayList<Integer> arr) {\n        // code here\n        int i = 1;\n        int n = arr.size();\n        while (i < (n / 2) + 1) {\n            Collections.rotate(arr, 1); // Rotate the array to the right by 1\n            arr.remove(arr.size() - i); // Remove the element at position (size - i)\n            i++;\n        }\n        return arr.get(0);\n    }\n}\n",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "class Solution:\n\n    def rotateDelete(self, arr):\n        i = 1\n        n = len(arr)\n        while i < (n / 2) + 1:\n            arr.insert(0, arr.pop())  # Rotate the array\n            arr.pop(-i)  # Delete the element\n            i += 1\n\n        return arr[0]\n",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "//Back-end complete function Template for javascript\n//  User function Template for javascript\nclass Solution {\n    rotateDelete(arr) {\n        let i = 1;\n        let n = arr.length;\n        while (i < (n / 2) + 1) {\n            arr.unshift(arr.pop());        // Rotate the array\n            arr.splice(arr.length - i, 1); // Delete the element\n            i++;\n        }\n\n        return arr[0];\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}