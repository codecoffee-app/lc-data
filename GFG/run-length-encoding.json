{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 700243,
            "title": "Run Length Encoding",
            "titleSlug": "run-length-encoding",
            "content": "<p><span style=\"font-size: 18px;\">Given a string<strong> s</strong>, Your task is to complete the function <strong>encode</strong> that returns the <strong>run length encoded&nbsp;</strong>string for the given&nbsp;string.<br /><strong>eg</strong>&nbsp;if the input string is &ldquo;wwwwaaadexxxxxx&rdquo;, then the function should return &ldquo;w4a3d1e1x6&Prime;.<br />You are required to complete the function <strong>encode</strong> that takes only one argument the string which is to be encoded and returns the encoded string.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:\n</strong>s = aaaabbbccc\n<strong>Output: </strong>a4b3c3<strong>\nExplanation: </strong>a repeated 4 times consecutively b 3 times, c also 3 times.\n</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:\n</strong>s = abbbcdddd\n<strong>Output: </strong>a1b3c1d4<br /><strong style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Explanation:  </strong><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">a repeated 1 time, b 3 times, c 1 time and d repeated 4 times.</span><br />\n</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Your Task:</strong><br />Complete the function&nbsp;<strong>encode()&nbsp;</strong>which takes a string <strong>s</strong> as an input parameter and returns the encoded string.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong> O(n)<br /><strong>Expected Auxiliary Space:</strong>&nbsp;O(1)<br /><br /><strong>Constraints:</strong><br />1&lt;=( n = length of s )&lt;=10<sup>6</sup></span><br />&nbsp;</p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string `s`, your task is to implement the `encode` function which performs run-length encoding on the input string. The function should return the run-length encoded string.  For example, if the input string is \"wwwwaaadexxxxxx\", the function should return \"w4a3d1e1x6\".",
                "constraints": [
                    "1 <= (n = length of s) <= 10^6"
                ],
                "testcases": [
                    {
                        "input": "aaaabbbccc",
                        "output": "a4b3c3",
                        "explanation": "The string 'a' repeats 4 times, 'b' repeats 3 times, and 'c' repeats 3 times."
                    },
                    {
                        "input": "abbbcdddd",
                        "output": "a1b3c1d4",
                        "explanation": "The string 'a' repeats 1 time, 'b' repeats 3 times, 'c' repeats 1 time, and 'd' repeats 4 times."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Starting from the first index increment a counter&nbsp;upto when you don&#39;t get a different character then print the character and the counter. Make counter 0 and go for the next character till different character doesn&#39;t occur. Continue this process till you traverse all the characters in the given string.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [
            "vmware",
            "zoho",
            "amazon",
            "microsoft",
            "factset",
            "goldman-sachs",
            "coupondunia"
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    string encode(string s) {\n       //Initializing an empty string to store the encoded string\n        string dest = \"\";\n    \n        //Iterating over each character in the source string\n        for(int i = 0; i < s.size(); i++){\n            //Appending the current character to the destination string\n            dest += s[i];\n    \n            //Initializing and updating a counter\n            int cnt = 1;\n            \n            //Checking if there are consecutive characters equal to the current character\n            while(i+1 < s.size() and s[i] == s[i+1]){\n                //Incrementing the counter\n                cnt++;\n                //Moving to the next character in the source string\n                i++;\n            }\n    \n            //Appending the count of consecutive characters to the destination string\n            dest+=to_string(cnt);\n        }\n    \n        //Returning the encoded string\n        return dest;\n        }\n};\n\n\n\n//Function to encode a given string\nstring encode(string src)\n{     \n    //Initializing an empty string to store the encoded string\n    string dest = \"\";\n\n    //Iterating over each character in the source string\n    for(int i = 0; i < src.size(); i++){\n        //Appending the current character to the destination string\n        dest += src[i];\n\n        //Initializing and updating a counter\n        int cnt = 1;\n        \n        //Checking if there are consecutive characters equal to the current character\n        while(i+1 < src.size() and src[i] == src[i+1]){\n            //Incrementing the counter\n            cnt++;\n            //Moving to the next character in the source string\n            i++;\n        }\n\n        //Appending the count of consecutive characters to the destination string\n        dest+=to_string(cnt);\n    }\n\n    //Returning the encoded string\n    return dest;\n}",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n    public static String encode(String s) {\n        // Initializing an empty string to store the encoded string\n        StringBuilder dest = new StringBuilder();\n\n        // Iterating over each character in the source string\n        for (int i = 0; i < s.length(); i++) {\n            // Appending the current character to the destination string\n            dest.append(s.charAt(i));\n\n            // Initializing and updating a counter\n            int cnt = 1;\n\n            // Checking if there are consecutive characters equal to the current character\n            while (i + 1 < s.length() && s.charAt(i) == s.charAt(i + 1)) {\n                // Incrementing the counter\n                cnt++;\n                // Moving to the next character in the source string\n                i++;\n            }\n\n            // Appending the count of consecutive characters to the destination string\n            dest.append(cnt);\n        }\n\n        // Returning the encoded string\n        return dest.toString();\n    }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n    def encode(self, s : str) -> str:\n        cnt=0\n        string=''\n        i=0\n        while(i < len(s)):\n            #print (i)\n            string+=s[i]\n            cnt=1\n            while(i+1<len(s) and s[i]==s[i+1]):\n                cnt+=1\n                i+=1\n            if(i+1<len(s) and s[i]==s[i+1]):\n                continue\n            else:\n                i+=1\n            string+=str(cnt)\n        return string",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "class Solution {\n    encode(s) { // Function to encode a given string\n        let des = \"\"; // Initialize an empty string to store the encoded string\n        for (let i = 0; i < s.length; i++) { // Loop through each character in the given string\n            des += s[i]; // Append the current character to the encoded string\n            let c = 1; // Initialize a counter variable to count the number of consecutive occurrences of the current character\n            while (i + 1 < s.length && s[i] == s[i + 1]) { // Check if the next character is the same as the current character\n                c++; // Increment the counter\n                i++; // Move to the next character\n            }\n            des += c + \"\"; // Append the count of consecutive occurrences of the current character to the encoded string\n        }\n        return des; // Return the encoded string\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}