{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 701217,
            "title": "Array Search",
            "titleSlug": "search-an-element-in-an-array-1587115621",
            "content": "<p><span >Given an array, <strong>arr</strong> of n integers, and an integer element <strong>x</strong>, find whether element <strong>x</strong> is present in the array. Return the index of the first occurrence of <strong>x</strong> in the array, or -1 if it doesn't exist.</span></p>\n<p><span ><strong>Examples:</strong></span></p>\n<pre><span ><strong>Input: </strong>arr[] = [1, 2, 3, 4], x = 3<br /><strong>Output: </strong>2<strong>\nExplanation: </strong>There is one test case with array as [1, 2, 3 4] and element to be searched as 3. Since 3 is present at index 2, the output is 2.</span></pre>\n<pre><span ><strong>Input: </strong>arr[] = [10, 8, 30, 4, 5], x = 5<br /><strong>Output: </strong>4<strong>\nExplanation: </strong>For array [1, 2, 3, 4, 5], the element to be searched is 5 and it is at index 4. So, the output is 4.\n</span></pre>\n<pre><span ><strong>Input: </strong>arr[] = [10, 8, 30], x = 6<br /><strong>Output: </strong>-1<strong>\nExplanation: </strong>The element to be searched is 6 and its not present, so we return -1.</span></pre>\n<p><span ><strong>Expected Time Complexity:&nbsp;</strong>O(n).<br /><strong>Expected Auxiliary Space:&nbsp;</strong>O(1).&nbsp;</span></p>\n<p><span ><strong>Constraints:</strong><br />1 &lt;= arr.size &lt;= 10<sup>6</sup><br />0 &lt;= arr[i] &lt;= 10<sup>6</sup><br />0 &lt;= x&nbsp;&lt;= 10<sup>5</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array `arr` of `n` integers and an integer `x`, determine if `x` is present in the array. If found, return the index of its first occurrence; otherwise, return -1.",
                "constraints": [
                    "1 <= arr.size <= 10^6",
                    "0 <= arr[i] <= 10^6",
                    "0 <= x <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "arr[] = [1, 2, 3, 4], x = 3",
                        "output": "2",
                        "explanation": "The element 3 is present at index 2 in the array."
                    },
                    {
                        "input": "arr[] = [10, 8, 30, 4, 5], x = 5",
                        "output": "4",
                        "explanation": "The element 5 is present at index 4 in the array."
                    },
                    {
                        "input": "arr[] = [10, 8, 30], x = 6",
                        "output": "-1",
                        "explanation": "The element 6 is not present in the array."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"color: #1e2229; font-family: Nunito; font-size: 14pt; background-color: #ffffff;\">For every element in the array at index i compare with the given integer X, if it is equal then return that index.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Searching",
                "slug": "searching"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C",
                "full_func": "//Back-end complete function Template for C\n\nint search(int arr[], int n, int x) {\n    // Iterate over the array elements\n    for (int i = 0; i < n; i++) {\n        // Check if the current element is equal to 'x'\n        if (arr[i] == x)\n            return i; // Return the index if element is found\n    }\n    return -1; // Return -1 if element is not found\n}",
                "lang_text": "c"
            },
            {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    // Function to search x in arr\n    // arr: input array\n    // x: element to be searched for\n    int search(vector<int>& arr, int x) {\n        int i;\n        int n = arr.size();\n        // iterate over the array elements\n        for (i = 0; i < n; i++) {\n            // check if the element is equal to x\n            if (arr[i] == x)\n                return i;\n        }\n        return -1;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution {\n\n    static int search(int arr[], int x) {\n        int n = arr.length;\n        // iterate over the array elements\n        for (int i = 0; i < n; i++) {\n            // check if array element is equal to x\n            if (arr[i] == x) {\n                return i;\n            }\n        }\n\n        // return -1 if x is not found in the array\n        return -1;\n    }\n}\n",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\n\nclass Solution:\n\n    def search(self, arr, x):\n\n        # check if x exists in array A\n        if x in arr:\n            return arr.index(x)\n        return -1\n",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "//Back-end complete function Template for javascript\n\n/**\n * @param {number[]} arr\n * @param {number} x\n * @return {number}\n */\nclass Solution {\n    search(arr, x) {\n        let n = arr.length;\n        // iterate over the array elements\n        for (let i = 0; i < n; i++) {\n            // check if the element is equal to x\n            if (arr[i] == x) return i;\n        }\n\n        return -1;\n    }\n}\n",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}