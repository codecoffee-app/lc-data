{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 702065,
            "title": "Search In Linked List",
            "titleSlug": "search-in-linked-list",
            "content": "<p><span style=\"font-size: 18px;\">You are given a singly linked list of n elements, and also an element x. You need to find if x is present in the linked list or not. R</span><span style=\"font-size: 18px;\">eturn </span><strong style=\"font-size: 18px;\">true&nbsp;</strong><span style=\"font-size: 18px;\">if x is present else returns&nbsp;</span><strong style=\"font-size: 18px;\">false</strong><span style=\"font-size: 18px;\">. (1 is printed by the driver code if the returned value is true, otherwise 0)</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples :</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>LinkedList: 1-&gt;2-&gt;3-&gt;4-&gt;5, x = 4\n<strong>Output: </strong>1</span>\n</pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>LinkedList: 2-&gt;4-&gt;6-&gt;7-&gt;5-&gt;1-&gt;0, x = 10\n<strong>Output: </strong>0</span>\n</pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &lt;= n &lt;= 100<br />1 &lt;= x, value &lt;= 10<sup>3</sup></span></p>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:&nbsp;</strong>O(n).<br /><strong>Expected Auxiliary Space:&nbsp;</strong>O(1).</span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a singly linked list of n elements and a target value x, determine if x is present in the linked list.\n\nReturn true if x is found within the list; otherwise, return false. (The driver code will print 1 for true and 0 for false.)",
                "constraints": [
                    "1 <= n <= 100",
                    "1 <= x, value <= 1000"
                ],
                "testcases": [
                    {
                        "input": "LinkedList: 1->2->3->4->5, x = 4",
                        "output": "true",
                        "explanation": "The value 4 is present in the linked list."
                    },
                    {
                        "input": "LinkedList: 2->4->6->7->5->1->0, x = 10",
                        "output": "false",
                        "explanation": "The value 10 is not present in the linked list."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>bool searchLinkedList(Node head, int x)<br />\n&nbsp;&nbsp;&nbsp; if(head==NULL)<br />\n&nbsp;&nbsp;&nbsp; return false<br />\n&nbsp;&nbsp; &nbsp;<br />\n&nbsp;&nbsp;&nbsp; if(head.data==x)<br />\n&nbsp;&nbsp;&nbsp; return true<br />\n&nbsp;&nbsp; &nbsp;<br />\n&nbsp;&nbsp;&nbsp; return searchLinkedList(head.next,x)<br />\n&nbsp;&nbsp; &nbsp;<br />\n&nbsp;&nbsp;&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nbool searchLinkedList(Node *head, int x)\n{\n    while (head != NULL)\n    {\n        if (head->data == x) return true;\n        head = head->next;\n    }\n    \n    return false;\n}",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\n// class Node\n// {\n//     int data;\n//     Node next;\n//     Node(int data)\n//     {\n//         this.data = data;\n//         this.next = null;\n//     }\n// }\n\nclass Get {\n    public static boolean searchLinkedList(Node head, int x) {\n        while (head != null) {\n            if (head.data == x) return true;\n            head = head.next;\n        }\n        return false;\n    }\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\ndef searchLinkedList(head,x):\n\n    while head:\n        if head.data==x:\n            return 1\n        head=head.next\n\n    return 0",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "class Solution {\n    searchLinkedList(node, x) {\n        while (node !== null) {\n            if (node.data === x) {\n                return true;\n            }\n            node = node.next;\n        }\n        return false;\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}