{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 702734,
            "title": "Searching in an Array",
            "titleSlug": "searching-a-number0324",
            "content": "<p><span >Given an integer <strong>k </strong>and<strong> </strong>array&nbsp;<strong>arr</strong>. Your task is to return the position of the <strong>first </strong>occurrence of <strong>k</strong> in the given array and if element k is not present in the array then return <strong>-1</strong>.</span></p>\n<p><span >Note: 1-based indexing is followed here.</span></p>\n<p><span ><strong>Examples:</strong></span></p>\n<pre><span ><strong>Input: </strong>k = 16<strong style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\"> , </strong><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">arr = [9, 7, 16, 16, 4]<br /></span></span><span ><strong>Output:</strong> 3\n<strong>Explanation:</strong> The value 16 is found in the given array at positions 3 and 4, with position 3 being the first occurrence.\n</span></pre>\n<pre><span ><strong>Input:</strong> k=98 , arr = [1, 22, 57, 47, 34, 18, 66]\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> k = 98 isn't found in the given array.\n</span></pre>\n<p><span ><strong>Constraints:</strong><br />1 &lt;= arr.size &lt;= 10<sup>6</sup><br />1 &lt;= arr[i] &lt;= 10<sup>9<br /></sup>1 &lt;= k &lt;= 10<sup>6</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p>A simple approach is to do a <strong>linear search.</strong></p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Searching",
                "slug": "searching"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function template for C++\n\nclass Solution {\n  public:\n    int search(int k, vector<int>& arr) {\n        // Implement search logic here\n        // Example implementation:\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr[i] == k) {\n                return i + 1; // Assuming we are searching for index\n            }\n        }\n        return -1; // If element k is not found\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\nclass Solution {\n    public int search(int k, ArrayList<Integer> arr) {\n        // Implement search logic here\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) == k) {\n                return i + 1; // Assuming we are searching for index (1-based)\n            }\n        }\n        return -1; // If element k is not found\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "from typing import List\n\n\nclass Solution:\n\n    def search(self, k: int, arr: List[int]) -> int:\n        n = len(arr)  # Get the length of the array\n        for i in range(n):\n            if arr[i] == k:\n                return i + 1  # Return the index if element is found\n\n        return -1  # Return -1 if element is not found\n",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "class Solution {\n    /**\n     * @param number k\n     * @param number[] arr\n     * @returns number\n     */\n    search(k, arr) {\n        // Implement search logic here\n        for (let i = 0; i < arr.length; i++) {\n            if (arr[i] === k) {\n                return i + 1; // Assuming we are searching for index (1-based)\n            }\n        }\n        return -1; // If element k is not found\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}