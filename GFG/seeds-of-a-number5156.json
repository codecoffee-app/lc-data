{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704993,
            "title": "Seeds of a number",
            "titleSlug": "seeds-of-a-number5156",
            "content": "<p><span style=\"font-size:18px\">A Seed of a number <strong>n</strong> is a number x such that multiplication of x with its digits is equal to n. The task is to find all seeds of a given number n. x&nbsp;should not be equal to n.&nbsp;If no seed exists, then print -1.</span></p>\r\n\r\n<p><strong><span style=\"font-size:18px\">Example 1:</span></strong></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong> n = 138\r\n<strong>Output:</strong> 23\r\n<strong>Explaination:</strong> 23 is a seed of 138 because \r\n23*2*3 = 138.</span></pre>\r\n\r\n<p><strong><span style=\"font-size:18px\">Example 2:</span></strong></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong> n = 3\r\n<strong>Output:</strong> -1\r\n<strong>Explaination:</strong> There is no seed of 3.</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou do not need to read input or print anything. Your task is to complete the function <strong>seeds()</strong> which takes n as input parameter and returns the seeds of the number.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(n)<br />\r\n<strong>Expected Auxiliary Space:</strong> O(1)</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n1 &le; n &le; 1000</span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "A seed of a number 'n' is a number 'x' such that the product of 'x' with its digits equals 'n'. Find all seeds 'x' for a given number 'n'.  'x' should not be equal to 'n'. If no seed exists, return -1.",
                "constraints": [
                    "1 <= n <= 1000"
                ],
                "testcases": [
                    {
                        "input": "138",
                        "output": "23",
                        "explanation": "23 is a seed of 138 because 23 * 2 * 3 = 138"
                    },
                    {
                        "input": "3",
                        "output": "-1",
                        "explanation": "There is no seed of 3."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">For each number upto n check if it is a seed of n.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "epic-systems"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "// Back-end complete function Template for C++\nclass Solution{\npublic:\n    // Function to calculate the product of digits of a number\n    int digProd(int x){\n        if(x < 10)\n            return x;\n        int val = 1;\n        // Loop to calculate the product of digits\n        while(x > 0){\n            val *= (x%10);\n            x /= 10;\n        }\n        return val;\n    }\n    \n    // Function to find the seeds of a given number\n    vector<int> seeds(int n){\n        vector<int> res;\n        // Loop to iterate through possible seeds\n        for(int i = 1;i <= n/2;i++)\n            // If the product of the seed and its digits is equal to n,\n            // add it to the result vector\n            if(i*digProd(i) == n)\n                res.emplace_back(i);\n        // If no seeds are found, add -1 to the result vector\n        if(res.size() == 0)\n            res.emplace_back(-1);\n        return res;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "\npublic class Solution {\n    // Function to calculate the product of digits of a number\n    private int DigProd(int x) {\n        if(x < 10)\n            return x;\n        int val = 1;\n        // Loop to calculate the product of digits\n        while(x > 0) {\n            val *= (x % 10);\n            x /= 10;\n        }\n        return val;\n    }\n    \n    // Function to find the seeds of a given number\n    public List<int> seeds(int n) {\n        List<int> res = new List<int>();\n        // Loop to iterate through possible seeds\n        for(int i = 1; i <= n / 2; i++) {\n            // If the product of the seed and its digits is equal to n,\n            // add it to the result list\n            if(i * DigProd(i) == n)\n                res.Add(i);\n        }\n        // If no seeds are found, add -1 to the result list\n        if(res.Count == 0)\n            res.Add(-1);\n        return res;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}