{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 700147,
            "title": "Selection Sort",
            "titleSlug": "selection-sort",
            "content": "<p><span style=\"font-size: 18px;\">Given an array <strong>arr</strong>, use <strong>selection sort </strong>to sort arr[] in increasing order.</span></p>\n<p><strong><span style=\"font-size: 18px;\">Examples :</span></strong></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr[] = [4, 1, 3, 9, 7]</span>\n<span style=\"font-size: 18px;\"><strong>Output: </strong>[1, 3, 4, 7, 9]</span>\n<span style=\"font-size: 18px;\"><strong>Explanation: </strong>Maintain sorted (in bold) and unsorted subarrays. Select 1. Array becomes <strong>1</strong> 4 3 9 7. Select 3. Array becomes <strong>1 3</strong> 4 9 7. Select 4. Array becomes <strong>1 3 4</strong> 9 7. Select 7. Array becomes <strong>1 3 4 7</strong> 9. Select 9. Array becomes <strong>1 3 4 7 9</strong>.</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr[] = [10, 9, 8, 7, 6, 5, 4, 3, 2, 1]</span>\n<span style=\"font-size: 18px;\"><strong>Output: </strong>[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]<br /></span></pre>\n<pre><strong>Input: </strong>arr[] = [38, 31, 20, 14, 30]\n<strong>Output: </strong>[14, 20, 30, 31, 38]</pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &le; arr.size() &le; 10<sup>3<br /></sup>1 &le; arr[i] &le; 10<sup>6</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array `arr`, sort the array in increasing order using the Selection Sort algorithm.",
                "constraints": [
                    "1 <= arr.length <= 1000",
                    "1 <= arr[i] <= 1000000"
                ],
                "testcases": [
                    {
                        "input": "[4, 1, 3, 9, 7]",
                        "output": "[1, 3, 4, 7, 9]",
                        "explanation": "Selection Sort works by repeatedly finding the minimum element from the unsorted portion of the array and placing it at the beginning.  In the first step, 1 is selected and swapped with 4. Then 3 is selected and swapped with 4, and so on until the entire array is sorted."
                    },
                    {
                        "input": "[10, 9, 8, 7, 6, 5, 4, 3, 2, 1]",
                        "output": "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]",
                        "explanation": "This test case demonstrates sorting a reverse-sorted array. Selection Sort iteratively finds the smallest element and places it in the correct position."
                    },
                    {
                        "input": "[38, 31, 20, 14, 30]",
                        "output": "[14, 20, 30, 31, 38]",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Iteratively find the maximum element in the unsorted part of the array and swap it with the last unsorted element to sort in descending order.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "microsoft",
            "medlife"
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    // Function to perform selection sort on the given array.\n    void selectionSort(vector<int> &arr) {\n        int n = arr.size();\n        for (int i = n - 1; i >= 0; i--) {\n            // Find the index of the maximum element in the unsorted part of the array.\n            int maxIdx = 0;\n            for (int j = 1; j <= i; j++) {\n                if (arr[j] > arr[maxIdx]) {\n                    maxIdx = j;\n                }\n            }\n            // Swap the maximum element with the last element of the unsorted part.\n            swap(arr[i], arr[maxIdx]);\n        }\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n    int select(int arr[], int i) {\n        int max = arr[0], ind = 0;\n        for (int j = 1; j <= i; j++) // iterate through the array up to index i\n        {\n            if (arr[j] > max) // check if the current element is greater than the\n                              // maximum element so far\n            {\n                ind = j;      // update the index of the maximum element\n                max = arr[j]; // update the maximum element\n            }\n        }\n        return ind; // return the index of the maximum element\n    }\n\n    void selectionSort(int[] arr) {\n\n        for (int i = arr.length - 1; i >= 0; i--) // iterate through the array from the\n                                                  // last element to the first element\n        {\n            int j =\n                select(arr, i); // find the index of the maximum element up to index i\n\n            int temp = arr[i]; // swap the current element with the maximum element\n            arr[i] = arr[j];\n            arr[j] = temp;\n        }\n    }\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "#Back-end complete function Template for Python 3\n\n\nclass Solution:\n    #Function to select the maximum element and its index in the array.\n    def select(self, arr, i):\n        max = arr[0]\n        idx = 0\n        for j in range(1, i + 1):\n            #updating the index and maximum value if a larger element is found.\n            if arr[j] > max:\n                idx = j\n                max = arr[j]\n        return idx\n\n    #Function to perform selection sort on the array.\n    def selectionSort(self, arr):\n        n = len(arr)\n        #iterating over the array in reverse order.\n        for i in range(n - 1, 0, -1):\n\n            #selecting the maximum element and its index.\n            j = self.select(arr, i)\n\n            #swapping the maximum element with the current element.\n            temp = arr[i]\n            arr[i] = arr[j]\n            arr[j] = temp\n",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "class Solution {\n    selectionSort(arr) {\n        for (let i = arr.length - 1; i > 0; i--) {\n            let max = arr[0];\n            let idx = 0;\n            for (let j = 1; j <= i; j++) {\n                if (arr[j] > max) {\n                    idx = j;\n                    max = arr[j];\n                }\n            }\n            let temp = arr[i];\n            arr[i] = arr[idx];\n            arr[idx] = temp;\n        }\n        return arr;\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}