{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703951,
            "title": "Set all the bits in given range of a number",
            "titleSlug": "set-all-the-bits-in-given-range-of-a-number4538",
            "content": "<p><span style=\"font-size:18px\">Given a non-negative number <strong>N</strong> and two values <strong>L</strong> and <strong>R</strong>. The problem is to set all the bits in the range L to R in the binary representation of N.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input :</strong></span>\n<span style=\"font-size:18px\"><strong>N =</strong> 17, <strong>L =</strong> 2, <strong>R =</strong> 3 </span>\n<span style=\"font-size:18px\"><strong>Output :</strong></span>\n<span style=\"font-size:18px\">23</span>\n<span style=\"font-size:18px\"><strong>Explanation:</strong></span>\n<span style=\"font-size:18px\">(17)<sub>10</sub> = (10001)<sub>2</sub>\n(23)<sub>10</sub> = (10111)<sub>2</sub>\nThe bits in the range 2 to 3 in the binary\nrepresentation of 17 are set.</span></pre>\n\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input :</strong></span>\n<span style=\"font-size:18px\"><strong>N =</strong> 8, <strong>L =</strong> 1, <strong>R =</strong> 2 </span>\n<span style=\"font-size:18px\"><strong>Output :</strong></span>\n<span style=\"font-size:18px\">11</span>\n<span style=\"font-size:18px\"><strong>Explanation:</strong></span>\n<span style=\"font-size:18px\">(8)<sub>10</sub> = (1000)<sub>2</sub>\n(11)<sub>10</sub> = (1011)<sub>2</sub>\nThe bits in the range 2 to 3 in the binary\nrepresentation of 8 are set.</span>\n</pre>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>setAllRangeBits()</strong> which takes an Integer N as input and returns the answer.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(1)<br />\n<strong>Expected Auxiliary Space:</strong> O(1)</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong></span><br />\n<span style=\"font-size:18px\">1 &lt;= N &lt;= 10<sup>8</sup></span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a non-negative integer N, and two integers L and R (1-based indexing), set all the bits in the range L to R (inclusive) in the binary representation of N. Return the modified number.",
                "constraints": [
                    "1 <= N <= 10^8"
                ],
                "testcases": [
                    {
                        "input": "N = 17, L = 2, R = 3",
                        "output": "23",
                        "explanation": "The binary representation of 17 is 10001. Setting bits 2 and 3 (from right to left, starting at 1) results in 10111, which is 23 in decimal."
                    },
                    {
                        "input": "N = 8, L = 1, R = 2",
                        "output": "11",
                        "explanation": "The binary representation of 8 is 1000. Setting bits 1 and 2 (from right to left, starting at 1) results in 1011, which is 11 in decimal."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Approach: Following are the steps:</span></p>\n\n<pre>\n<span style=\"font-size:18px\">1. Find a number &#39;range&#39; that has all set\n   bits in given range. And all other bits\n   of this number are 0.\n     range = (((1 &lt;&lt; (l - 1)) - 1) ^ \n              ((1 &lt;&lt; (r)) - 1));\n\n2. Now, perform &quot;n = n | range&quot;. This will \n   set the bits in the range from l to r \n   in n.\n</span></pre>"
        ],
        "relatedTopics": [
            {
                "name": "Bit Magic",
                "slug": "bit-magic"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    int setAllRangeBits(int N , int L , int R) {\n        \n        int range = (((1 << (L - 1)) - 1) ^ \n\t\t\t\t((1 << (R)) - 1));\n\t\t\t\t\n\t\treturn N|range;\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\n\nclass Solution {\n    static int setAllRangeBits(int N , int L , int R) {\n        \n        int range = (((1 << (L - 1)) - 1) ^ \n\t\t\t\t((1 << (R)) - 1));\n\t\t\t\t\n\t\treturn N|range;\n    }\n};",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "#Back-end complete function Template for Python 3\n\nclass Solution:\n    #Function to set all the bits in the specified range of a number.\n    def setAllRangeBits(self, N , L , R):\n    \n        #Calculating the range by bitwise manipulation.\n        range = (((1 << (L - 1)) - 1) ^ ((1 << (R)) - 1))\n        \n        #Using bitwise OR operation to set all the bits in the range.\n        return N|range",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n/**\n * @param {number} N\n * @param {number} L\n * @param {number} R\n * @returns {number}\n*/\n\nclass Solution {\n    //Function to set all the bits in the range L to R in N.\n    setAllRangeBits(N, L, R)\n    {\n        //Calculating the range by bitwise manipulation.\n        let range = (((1 << (L - 1)) - 1) ^ ((1 << R) - 1));\n        \n        //Using bitwise OR operation to set all the bits in the range.\n        return N | range;\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}