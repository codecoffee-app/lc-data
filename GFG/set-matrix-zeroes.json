{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 874880,
            "title": "Set Matrix Zeroes",
            "titleSlug": "set-matrix-zeroes",
            "content": "<p><span style=\"font-size: 18px;\">You are given a 2D matrix <strong>mat</strong>[][] of size </span><span style=\"font-size: 18px;\"><strong>n&times;m</strong>.&nbsp;</span><span style=\"font-size: 18px;\">The task is to modify the matrix such that if <strong>mat[i][j]</strong> is 0, all the elements in the&nbsp;</span><span style=\"font-size: 18px;\"><strong>i</strong>-th row and </span><span style=\"font-size: 18px;\"><strong>j</strong>-th column are set to 0 </span><span style=\"font-size: 18px;\">and do it in <strong>constant space complexity</strong>.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong style=\"font-size: 18px;\">Input: </strong><span style=\"font-size: 18px;\">mat[][] = [[1, -1, 1],\n\\t\\t    [-1, 0, 1],\n\\t\\t    [1, -1, 1]]\n</span><strong style=\"font-size: 18px;\">Output:</strong><span style=\"font-size: 18px;\"> [[1, 0, 1],\n\\t  [0, 0, 0],\n\\t  [1, 0, 1]]\n</span><strong style=\"font-size: 18px;\">Explanation:</strong><span style=\"font-size: 18px;\"> </span></span><span style=\"font-size: 18px;\">mat[1][1] = 0, so all elements in row 1 and column 1 are updated to zeroes.</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong style=\"font-size: 18px;\">Input: </strong><span style=\"font-size: 18px;\">mat[][] = [[0, 1, 2, 0],\n\\t\\t    [3, 4, 5, 2],\n\\t\\t    [1, 3, 1, 5]]\n</span><strong style=\"font-size: 18px;\">Output:</strong><span style=\"font-size: 18px;\"> [[0, 0, 0, 0],\n\\t  [0, 4, 5, 0],\n\\t  [0, 3, 1, 0]]\n</span><strong style=\"font-size: 18px;\">Explanation:</strong><span style=\"font-size: 18px;\"> </span></span><span style=\"font-size: 18px;\">mat[0][0] and mat[0][3] are 0s, so all elements in row 0, column 0 and column 3 are updated to zeroes.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &le; n, </span><span style=\"font-size: 18px;\">m</span><span style=\"font-size: 18px;\"> &le; 500</span><sup><br /></sup><span style=\"font-size: 18px;\">- 2<sup>31</sup> &le; mat[i][j] &le; 2<sup>31</sup> - 1</span></p>",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a 2D matrix `mat` of size n x m, modify the matrix in-place such that if `mat[i][j]` is 0, then all the elements in the i-th row and j-th column are set to 0.  This must be done with constant space complexity.",
                "constraints": [
                    "1 <= n, m <= 500",
                    "-2<sup>31</sup> <= mat[i][j] <= 2<sup>31</sup> - 1"
                ],
                "testcases": [
                    {
                        "input": "[[1, -1, 1],\n [-1, 0, 1],\n [1, -1, 1]]",
                        "output": "[[1, 0, 1],\n [0, 0, 0],\n [1, 0, 1]]",
                        "explanation": "Since mat[1][1] is 0, all elements in row 1 and column 1 are set to 0."
                    },
                    {
                        "input": "[[0, 1, 2, 0],\n [3, 4, 5, 2],\n [1, 3, 1, 5]]",
                        "output": "[[0, 0, 0, 0],\n [0, 4, 5, 0],\n [0, 3, 1, 0]]",
                        "explanation": "Since mat[0][0] and mat[0][3] are 0, all elements in row 0, column 0 and column 3 are set to 0."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>We can use the first row and first column of a matrix to store which row elements and column elements to be marked as zeroes.</p>"
        ],
        "relatedTopics": [],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n//     User function template for C++\nclass Solution {\n  public:\n    void setMatrixZeroes(vector<vector<int>> &mat) {\n        // code here\n        int n = mat.size(), m = mat[0].size();\n\n        int C0 = 1;\n\n        // Traverse the mat and\n        // mark 1st row & 1st\n        // col as follows:\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                if (mat[i][j] == 0) {\n\n                    // mark i-th row:\n                    mat[i][0] = 0;\n\n                    // mark j-th column:\n                    if (j == 0)\n                        C0 = 0;\n                    else\n                        mat[0][j] = 0;\n                }\n            }\n        }\n\n        // Mark with 0 from (1,1)\n        // to (n-1, m-1):\n        for (int i = 1; i < n; i++) {\n            for (int j = 1; j < m; j++) {\n                if (mat[i][j] != 0) {\n\n                    // Check for col & row:\n                    if (mat[i][0] == 0 || mat[0][j] == 0) {\n                        mat[i][j] = 0;\n                    }\n                }\n            }\n        }\n\n        // Finally mark the\n        // 1st row then 1st col:\n        if (mat[0][0] == 0) {\n            for (int j = 0; j < m; j++) {\n                mat[0][j] = 0;\n            }\n        }\n        if (C0 == 0) {\n            for (int i = 0; i < n; i++) {\n                mat[i][0] = 0;\n            }\n        }\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\nclass Solution {\n    public void setMatrixZeroes(int[][] mat) {\n        int n = mat.length, m = mat[0].length;\n        int C0 = 1;\n\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                if (mat[i][j] == 0) {\n                    mat[i][0] = 0;\n                    if (j == 0)\n                        C0 = 0;\n                    else\n                        mat[0][j] = 0;\n                }\n            }\n        }\n\n        for (int i = 1; i < n; i++) {\n            for (int j = 1; j < m; j++) {\n                if (mat[i][0] == 0 || mat[0][j] == 0) {\n                    mat[i][j] = 0;\n                }\n            }\n        }\n\n        if (mat[0][0] == 0) {\n            for (int j = 0; j < m; j++) {\n                mat[0][j] = 0;\n            }\n        }\n\n        if (C0 == 0) {\n            for (int i = 0; i < n; i++) {\n                mat[i][0] = 0;\n            }\n        }\n    }\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n\n    def setMatrixZeroes(self, mat):\n        n = len(mat)\n        m = len(mat[0])\n        C0 = 1\n\n        # Traverse the mat and mark the first row and first column\n        for i in range(n):\n            for j in range(m):\n                if mat[i][j] == 0:\n                    # Mark i-th row\n                    mat[i][0] = 0\n                    # Mark j-th column\n                    if j == 0:\n                        C0 = 0\n                    else:\n                        mat[0][j] = 0\n\n        # Mark with 0 from (1,1) to (n-1, m-1)\n        for i in range(1, n):\n            for j in range(1, m):\n                if mat[i][j] != 0:\n                    if mat[i][0] == 0 or mat[0][j] == 0:\n                        mat[i][j] = 0\n\n        # Mark the first row\n        if mat[0][0] == 0:\n            for j in range(m):\n                mat[0][j] = 0\n\n        # Mark the first column\n        if C0 == 0:\n            for i in range(n):\n                mat[i][0] = 0\n",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "class Solution {\n    setMatrixZeroes(mat) {\n        const n = mat.length;\n        const m = mat[0].length;\n        let C0 = 1;\n\n        for (let i = 0; i < n; i++) {\n            for (let j = 0; j < m; j++) {\n                if (mat[i][j] === 0) {\n                    mat[i][0] = 0;\n                    if (j === 0) {\n                        C0 = 0;\n                    } else {\n                        mat[0][j] = 0;\n                    }\n                }\n            }\n        }\n\n        for (let i = 1; i < n; i++) {\n            for (let j = 1; j < m; j++) {\n                if (mat[i][j] !== 0) {\n                    if (mat[i][0] === 0 || mat[0][j] === 0) {\n                        mat[i][j] = 0;\n                    }\n                }\n            }\n        }\n\n        if (mat[0][0] === 0) {\n            for (let j = 0; j < m; j++) {\n                mat[0][j] = 0;\n            }\n        }\n\n        if (C0 === 0) {\n            for (let i = 0; i < n; i++) {\n                mat[i][0] = 0;\n            }\n        }\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}