{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 700915,
            "title": "Set Operations",
            "titleSlug": "set-operations",
            "content": "<p><span style=\"font-size: 18px;\">You are given an array<strong> A of size N</strong>. you need to <strong>insert </strong>the elements of A into a set and <strong>display </strong>the results. Also, you need to<strong> erase a given element x</strong> from the set and print \"<strong>erased x</strong>\" if <strong>successfully </strong>erased, else print \"<strong>not found</strong>\".</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong>\nN = 10\nA[] = 9 8 7 4 4 2 1 1 9 8\nx = 1\n<strong>Output:</strong> \n1 2 4 7 8 9\nerased 1\n2 4 7 8 9</span>\n</pre>\n<p><span style=\"font-size: 18px;\"><strong>Your Task:</strong><br />Since this is a function problem, you don't need to take any input. Just complete the provided functions. In a new line, print the required output.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &lt;= N &lt;= 1000<br />1 &lt;= A<sub>i</sub> &lt;= 10<sup>6</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array `A` of size `N`, insert all elements of `A` into a set. Print the elements of the set in ascending order. Then, given an element `x`, attempt to remove `x` from the set. If `x` is successfully removed, print \"erased x\". If `x` is not found in the set, print \"not found\". Finally, print the remaining elements of the set in ascending order.",
                "constraints": [
                    "1 <= N <= 1000",
                    "1 <= A[i] <= 10^6"
                ],
                "testcases": [
                    {
                        "input": "N = 10\nA = [9, 8, 7, 4, 4, 2, 1, 1, 9, 8]\nx = 1",
                        "output": "1 2 4 7 8 9\nerased 1\n2 4 7 8 9",
                        "explanation": "The initial array contains duplicates. After inserting into the set, the duplicates are removed and the elements are sorted. Then '1' is removed. Finally, the set without '1' is printed in sorted order."
                    },
                    {
                        "input": "N = 5\nA = [1, 2, 3, 4, 5]\nx = 6",
                        "output": "1 2 3 4 5\nnot found\n1 2 3 4 5",
                        "explanation": "'6' is not present in the initial set. Therefore, 'not found' is printed, and the set remains unchanged."
                    },
                    {
                        "input": "N = 3\nA = [5, 5, 5]\nx = 5",
                        "output": "5\nerased 5\n",
                        "explanation": "The array contains duplicate values of '5'. Inserting into the set results in a single '5'. After erasure of '5' the set is empty and nothing is printed"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:14px\">1. Concept of iteration and library method will be useful.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "set",
                "slug": "set"
            },
            {
                "name": "STL",
                "slug": "stl"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\n\nset<int> setInsert(int arr[],int n)\n{\n    set<int>s;\n    for(int i=0;i<n;i++)\n        s.insert(arr[i]);   //inserting array elements to set\n    \n    return s;\n    \n}\n\nvoid setDisplay(set<int>s)\n{\n    for(auto itr=s.begin();itr!=s.end();itr++)\n    {\n        cout<<*itr<<\" \";   //printing all set elements\n    }\n    cout<<endl;\n}\n\n\nvoid setErase(set<int>&s,int x)\n{\n    //deleting x from set if present\n    if(s.count(x)!=0)\n    {\n        s.erase(x); \n        cout<<\"erased \"<<x;\n    }\n    else\n        cout<<\"not found\";\n    \n    \n    cout<<endl;\n}",
                "lang_text": "cpp"
            }
        },
        "platform": "GFG"
    }
}