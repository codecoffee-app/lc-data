{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704995,
            "title": "Count Total Setbits",
            "titleSlug": "sherlock-and-his-enemies2304",
            "content": "<p><span style=\"font-size: 18px;\">You are given a number <strong>n. </strong>Find&nbsp;the<strong>&nbsp;</strong>total number of set bits in the numbers from 1 to n.&nbsp;</span></p>\n<p><br /><strong><span style=\"font-size: 18px;\">Example 1:</span></strong></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong> n = 3\n<strong>Output:</strong> 4\n<strong>Explaination:</strong> \n1 -&gt; 01, 2 -&gt; 10 and 3 -&gt; 11. \nSo total 4 setbits.</span></pre>\n<p>&nbsp;</p>\n<p><strong><span style=\"font-size: 18px;\">Example 2:</span></strong></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong> n = 4\n<strong>Output:</strong> 5\n<strong>Explaination:</strong> 1 -&gt; 01, 2 -&gt; 10, 3 -&gt; 11 \nand 4 -&gt; 100. So total 5 setbits.</span></pre>\n<p>&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Your Task:</strong><br />You do not need to read input or print anything. Your task is to complete the function <strong>countBits()</strong> which takes n as the input parameter and returns the total number of set bits up to n.</span></p>\n<p>&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong> O(log(n))<br /><strong>Expected Auxiliary Space:</strong> O(1)</span></p>\n<p>&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &le; n &le; 10<sup>6</sup>&nbsp;&nbsp;</span></p>",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a positive integer `n`, determine the total number of set bits (bits equal to 1) in the binary representations of all integers from 1 to `n` (inclusive).",
                "constraints": [
                    "1 <= n <= 10^6"
                ],
                "testcases": [
                    {
                        "input": "3",
                        "output": "4",
                        "explanation": "The binary representations of 1, 2, and 3 are 01, 10, and 11, respectively. The total number of set bits is 1 + 1 + 2 = 4."
                    },
                    {
                        "input": "4",
                        "output": "5",
                        "explanation": "The binary representations of 1, 2, 3, and 4 are 01, 10, 11, and 100, respectively. The total number of set bits is 1 + 1 + 2 + 1 = 5."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Find out the contribution of ith least significant bit to the answer.</span></p>",
            "<p><span style=\"font-size:18px\">For ith significant contribution is :<br />\n(N/2^i)*2^(i-1)+ X<br />\n<strong>where</strong>, X =&nbsp;N%(2<sup>i</sup>)-(2<sup>(i-1)</sup>-1)<br />\n<strong>iff</strong>, N%(2<sup>i</sup>)&gt;=(2<sup>(i-1)</sup>-1)</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Bit Magic",
                "slug": "bit-magic"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nclass Solution {\n  public:\n\n    // Function to count the number of set bits in a number\n\n    int countBits(int N) {\n        int two = 2, ans = 0;\n        int n = N + 1;\n\n        // Iterate until N becomes 0\n\n        while (N) {\n\n            // Count the number of groups of 'two' bits\n\n            ans += ((n / two)) * (two >> 1);\n\n            // Check if there is a carry in the remaining bits\n\n            int carry = (n % two) > (two / 2) ? (n % two) % (two / 2) : 0;\n\n            // Add the carry to the answer\n\n            ans += carry;\n\n            // Multiply 'two' by 2 and right shift N by 1\n\n            two <<= 1;\n            N >>= 1;\n        }\n        return ans;\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n    // Function to count the number of set bits in a number\n    static int countBits(int N) {\n        int two = 2;\n        int ans = 0;\n        int n = N + 1;\n\n        // Iterate until N becomes 0\n        while (N != 0) {\n            // Count the number of groups of 'two' bits\n            ans += ((n / two)) * (two >> 1);\n\n            // Check if there is a carry in the remaining bits\n            int carry = (n % two) > (two / 2) ? (n % two) % (two / 2) : 0;\n\n            // Add the carry to the answer\n            ans += carry;\n\n            // Multiply 'two' by 2 and right shift N by 1\n            two <<= 1;\n            N >>= 1;\n        }\n        return ans;\n    }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "class Solution {\n    // Function to count the number of set bits in a number\n    countBits(N) {\n        let two = 2;\n        let ans = 0;\n        let n = N + 1;\n\n        // Iterate until N becomes 0\n        while (N) {\n            // Count the number of groups of 'two' bits\n            ans += Math.floor(n / two) * (two >> 1);\n\n            // Check if there is a carry in the remaining bits\n            let carry = (n % two) > (Math.floor(two / 2))\n                            ? (n % two) % (Math.floor(two / 2))\n                            : 0;\n\n            // Add the carry to the answer\n            ans += carry;\n\n            // Multiply 'two' by 2 and right shift N by 1\n            two <<= 1;\n            N >>= 1;\n        }\n        return ans;\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}