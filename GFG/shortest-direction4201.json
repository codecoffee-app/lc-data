{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703102,
            "title": "Shortest direction",
            "titleSlug": "shortest-direction4201",
            "content": "<p><span style=\"font-size:18px\">A person wants to go from origin to a particular location, he can move in only 4 directions(i.e East, West, North, South) but his friend gave him a long route, help a person to find <strong>minimum Moves</strong> so that he can reach to the destination.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Note:</strong>&nbsp;You need to print the lexicographically sorted string. Assume the string will have only &lsquo;E&rsquo; &lsquo;N&rsquo; &lsquo;S&rsquo; &lsquo;W&rsquo; characters.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\nS = &quot;SSSNEEEW&quot;\n<strong>Output:</strong> EESS\n<strong>Explanation</strong>: Following the path SSSNEEEW\nand EESS gets you at the same final point.\nThere&#39;s no shorter path possible.</span>\n</pre>\n\n<p><span style=\"font-size:18px\">\u00e2\u20ac\u2039<strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input</strong>: \nS = &quot;NESNWES&quot;\n<strong>Output:</strong> E\n<strong>Explanation</strong>: Following the path NESNWES\nand E gets you at the same final point.\nThere&#39;s no shorter path possible.\n</span></pre>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nYou don&#39;t need to read input or print anything. Your task is to complete the function&nbsp;<strong>shortestPath()&nbsp;</strong>which takes the string S as input and returns the resultant string denoting the shortest path in lexicographic order.</span></p>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Expected Time Complexity:&nbsp;</strong>O(|S|).<br />\n<strong>Expected Auxiliary Space:&nbsp;</strong>O(|S|) for output.</span></p>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Constraints:</strong><br />\n1&lt;=|S|&lt;=10<sup>5</sup></span></p>\n\n<p>&nbsp;</p>\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string `S` representing a path consisting of movements in four directions (East, West, North, South), find the shortest path to reach the destination. The path should be represented as a lexicographically sorted string containing only 'E', 'N', 'S', and 'W' characters. Your task is to complete the function `shortestPath(S)` which takes the string S as input and returns the shortest path in lexicographic order.",
                "constraints": [
                    "1 <= |S| <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "SSSNEEEW",
                        "output": "EESS",
                        "explanation": "The original path 'SSSNEEEW' can be simplified to 'EESS' which gets you to the same final point with the minimum number of moves. The directions cancel each other: 3 South and 1 North become 2 South. 3 East and 1 West become 2 East.  Lexicographically, EE comes before SS so final path is EESS."
                    },
                    {
                        "input": "NESNWES",
                        "output": "E",
                        "explanation": "The original path 'NESNWES' can be simplified to 'E' which achieves the same final location with the minimum number of steps. The path contains one north, one south, 3 east and 2 west.  West and East and North and South cancel out and you are left with 'E'."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Calculate the overall vertical displacement and the overall horizontal displacement.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [
            "flipkart"
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "\n\nclass Solution{\n    public:\n    string shortestPath (string s)\n    {\n        int ver = 0, hor = 0;\n    \n    \n        // calculating the horizontal and vertical displacement\n        for (int i = 0; i < s.length (); ++i)\n        {\n            if (s[i] == 'N') ver++;\n            else if (s[i] == 'S') ver--;\n    \n            else if (s[i] == 'W') hor++;\n            else hor--;\n        }\n    \n        string res = \"\";\n    \n        // if hor < 0, we move east\n        while (hor < 0)\n        {\n            res += \"E\";\n            hor++;\n        }\n    \n        // if ver > 0, we move north\n        while (ver > 0)\n        {\n            res += \"N\";\n            ver--;\n        }\n    \n        // if ver < 0, we move south\n        while (ver < 0)\n        {\n            res += \"S\";\n            ver++;\n        }\n    \n        // if hor > 0, we move west\n        while (hor > 0)\n        {\n            res += \"W\";\n            hor--;\n        }\n    \n        // note that we do not need to sort the string as\n        // we already appended characters in the sorted order\n        // ENSW\n        return res;\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}