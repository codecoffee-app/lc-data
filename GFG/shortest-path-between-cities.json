{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705791,
            "title": "Shortest Path between Cities",
            "titleSlug": "shortest-path-between-cities",
            "content": "<p><span style=\"font-size: 18px;\">Geek lives in a special city where houses are arranged in a hierarchial manner. Starting from house number 1, each house leads to two more houses. &nbsp;<br />1 leads to 2 and 3.&nbsp;<br />2 leads to 4 and 5.&nbsp;<br />3 leads to 6 and 7. and so on.&nbsp;<br />Given the house numbers on two houses x and y, find the length of the shortest path between them.&nbsp;</span></p>\n<p><br /><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong>\nx = 2, y = 6\n<strong>Output:</strong> 3\n<strong>Explanation:</strong>\n\\t\\t  1\n\\t    /\\t\\\n\\t  /\\t    \\\n\\t 2\\t\\t 3\n     /   \\\\t   /   \\\n    4     5\\t 6     7\\t   \n   / \\   / \\     / \\   / \\\n  8  9  10 11   12 13 14 15</span>\n<span style=\"font-size: 18px;\">\nThe length of the shortest path between 2 \nand 6 is 3. ie </span><span style=\"font-size: 18px;\">2-&gt; 1-&gt; 3-&gt; 6.</span></pre>\n<p><br /><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong>\nx = 8, y = 10\n<strong>Output: </strong>4\n<strong>Explanation: </strong>8-&gt; 4-&gt; 2-&gt; 5-&gt; 10\nThe length of the shortest path between 8 \nand 10 is 4. </span></pre>\n<p><br /><span style=\"font-size: 18px;\"><strong>Your Task:</strong><br />You don't need to read input or print anything. Complete the function <strong>shortestPath()</strong> which takes integers x and y as input parameters and returns the length of the shortest path from x to y.</span></p>\n<p><br /><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong> O(log(max(x,y)))<br /><strong>Expected Auxiliary Space: </strong>O(1)</span></p>\n<p><br /><span style=\"font-size: 18px;\"><strong>Constraints:&nbsp;</strong><br />1 &lt;= x,y &lt;= 10<sup>9</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Geek lives in a city where houses are arranged in a hierarchical manner. Starting from house number 1, each house leads to two more houses (1 leads to 2 and 3, 2 leads to 4 and 5, and so on). Given two house numbers, x and y, find the length of the shortest path between them.",
                "constraints": [
                    "1 <= x, y <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "x = 2, y = 6",
                        "output": "3",
                        "explanation": "The shortest path between house 2 and house 6 is 2 -> 1 -> 3 -> 6, which has a length of 3."
                    },
                    {
                        "input": "x = 8, y = 10",
                        "output": "4",
                        "explanation": "The shortest path between house 8 and house 10 is 8 -> 4 -> 2 -> 5 -> 10, which has a length of 4."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Think of a mathematical relation between child and parent.&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Heap",
                "slug": "heap"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nclass Solution{   \npublic:\n    //Function to find the shortest path between two points.\n    int shortestPath( int x, int y){ \n    \tint count = 0;\n    \t//loop until x and y are equal.\n    \twhile(x != y)\n\t\t{\n\t\t\t//if x is greater than y, divide x by 2.\n\t\t\tif(x > y)\n\t\t\t\tx = x/2;\n\t\t\t//if y is greater than x, divide y by 2.\n\t\t\telse\n\t\t\t\ty = y/2;\n\t\t\t//increment the count of steps taken.\n\t\t\tcount++;\n\t\t}\n\t\t//return the count of steps taken to reach the destination.\n\t\treturn count;\n    } \n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\nclass Solution \n{ \n    // function to calculate the shortest path between two numbers\n    int shortestPath( int x, int y){ \n    \t// initialize count to keep track of the number of steps taken\n    \tint count = 0;\n    \t\n    \t// continue looping until x and y are the same\n    \twhile(x != y)\n\t\t{\n    \t\t// if x is larger than y, divide it by 2\n\t\t\tif(x > y)\n\t\t\t\tx = x/2;\n\t\t\t// if y is larger than x, divide it by 2\n\t\t\telse\n\t\t\t\ty = y/2;\n\t\t\t\n\t\t\t// increment the count to keep track of the number of steps taken\n\t\t\tcount++;\n\t\t}\n\t\t\n\t\t// return the count\n\t\treturn count;\n    } \n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\n\nclass Solution:\n    #Function to find the shortest path between two numbers.\n    def shortestPath(self, x, y):\n        count = 0\n        while x != y:\n\n            #if x is greater than y, we divide x by 2.\n            if (x > y):\n                x = int(x / 2)\n            #if y is greater than x, we divide y by 2.\n            else:\n                y = int(y / 2)\n\n            #incrementing the count of steps taken.\n            count += 1\n        #returning the minimum steps required to reach from x to y.\n        return count\n",
                "lang_text": "py"
            },
            {
                "lang": "C#",
                "full_func": "class Solution\r\n{\r\n    //Complete this function\r\n    public int shortestPath(int x, int y)\r\n    {\r\n        int count = 0;\n        //loop until x and y are equal.\n        while (x != y)\n        {\n            //if x is greater than y, divide x by 2.\n            if (x > y)\n                x = x / 2;\n            //if y is greater than x, divide y by 2.\n            else\n                y = y / 2;\n            //increment the count of steps taken.\n            count++;\n        }\n        //return the count of steps taken to reach the destination.\n        return count;\r\n    }\r\n}",
                "lang_text": "csharp"
            },
            {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\r\n/**\r\n * @param {number} x\r\n * @param {number} y\r\n * @returns {number}\r\n*/\r\n\r\nclass Solution {\r\n    //Function to find the shortest path between 2 nodes of a graph.\r\n    shortestPath(x, y)\r\n    {\r\n        let count = 0;\r\n        while (x !== y) {\r\n            if (x > y) {\r\n                x = Math.floor(x / 2);\r\n            } else {\r\n                y = Math.floor(y / 2);\r\n            }\r\n            count++;\r\n        }\r\n        return count;\r\n    }\r\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}