{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703134,
            "title": "Shuffle integers",
            "titleSlug": "shuffle-integers2401",
            "content": "<p><span style=\"font-size: 18px;\">Given an array <strong>arr</strong>&nbsp;of <strong>n </strong>elements in the following format {a<sub>1</sub>, a<sub>2</sub>, a<sub>3</sub>, a<sub>4</sub>, ... , a<sub>n/2</sub>, b<sub>1</sub>, b<sub>2</sub>, b<sub>3</sub>, b<sub>4</sub>, ... , b<sub>n/2</sub>}, the task is shuffle the array to {a<sub>1</sub>, b<sub>1</sub>, a<sub>2</sub>, b<sub>2</sub>, a<sub>3</sub>, b<sub>3</sub>, ... , a<sub>n/2</sub>, b<sub>n/2</sub>} without using extra space.<br />Note that n is <strong>even</strong>.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: <br /></strong>n = 4, arr = {1, 2, 9, 15}\n<strong>Output:</strong>  <br />1 9 2 15\n<strong>Explanation</strong>: <br />a<sub>1</sub>=1, a<sub>2</sub>=2, b<sub>1</sub>=9, b<sub>2</sub>=15. So the final array will be: a<sub>1</sub>, b<sub>1</sub>, a<sub>2</sub>, b<sub>2</sub> = {1,9,2,15}.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong style=\"font-family: sans-serif; white-space: normal;\">Example 2:</strong><strong><br /></strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:&nbsp;<br /></strong></span><span style=\"font-size: 18px;\">n = 6 arr = {1, 2, 3, 4, 5, 6} <br /></span><span style=\"font-size: 18px;\"><strong>Output:</strong>&nbsp;<br />1 4 2 5 3 6</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Your Task:</strong><br />This is a function problem. You don't need to take any input, as it is already accomplished by the driver code. You just need to complete the function <strong>shuffleArray() </strong>that takes array<strong> arr, </strong>and an integer<strong> n</strong>&nbsp;as parameters and modifies the given array according to the above-given pattern.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong> O(n).<br /><strong>Expected Auxiliary Space:</strong> O(1).</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &le; n &le; 10<sup>5</sup><br /></span><span style=\"font-size: 18px;\">1 &le; arr</span><sub>i </sub><span style=\"font-size: 18px;\">&le; 10<sup>3</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p><span style=\"color: #1e2229; font-family: Nunito; font-size: 16px; background-color: #ffffff;\">Knowing the fact that array is in a specific format {a1, a2, a3, a4, ... , an/2, b1, b2, b3, b4, ... , bn/2}, Can we think of using Bit Operators.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "amazon",
            "oyo-rooms"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution{\r\n  public:\r\n\tvoid shuffleArray(int arr[],int n)\r\n\t{\r\n\t    int  i = n/2 - 1;\r\n        for (int j = n-1; j >= n/2; j--) {\r\n            arr[j] <<= 10;\r\n            arr[j] |= arr[i];\r\n            i--;\r\n        }\r\n        \r\n        i = 0;\r\n        for (int j = n/2; j < n; j++) {\r\n            int num1 = arr[j] & 1023;\r\n            int num2 = arr[j] >> 10;\r\n            arr[i] = num1;\r\n            arr[i + 1] = num2;\r\n            i += 2;\r\n        }\r\n\t}\r\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class  Solution\n{\n    void shuffleArray(long arr[], int n)\n    {\n        int  i = n/2 - 1;\n        for (int j = n-1; j >= n/2; j--) \n        {\n            arr[j] <<= 10;\n            arr[j] |= arr[i];\n            i--;\n        }\n        \n        i = 0;\n        \n        for (int j = n/2; j < n; j++) \n        {\n            int num1 = (int)arr[j] & 1023;\n            int num2 = (int)arr[j] >> 10;\n            arr[i] = num1;\n            arr[i + 1] = num2;\n            i += 2;\n        }\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "class Solution {\n    shuffleArray(arr, n) {\n        let i = n/2 - 1;\n        for (let j = n-1; j >= n/2; j--) {\n            arr[j] <<= 10;\n            arr[j] |= arr[i];\n            i--;\n        }\n\n        i = 0;\n        for (let j = n/2; j < n; j++) {\n            let num1 = arr[j] & 1023;\n            let num2 = arr[j] >> 10;\n            arr[i] = num1;\n            arr[i + 1] = num2;\n            i += 2;\n        }\n    }\n}",
                "lang_text": "javascript"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\nclass Solution\n{\n    //Complete this function\n    public void shuffleArray(int[] arr, int n)\n    {\n        int i = n / 2 - 1;\n        for (int j = n - 1; j >= n / 2; j--)\n        {\n            arr[j] <<= 10;\n            arr[j] |= arr[i];\n            i--;\n        }\n\n        i = 0;\n        for (int j = n / 2; j < n; j++)\n        {\n            int num1 = arr[j] & 1023;\n            int num2 = arr[j] >> 10;\n            arr[i] = num1;\n            arr[i + 1] = num2;\n            i += 2;\n        }\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}