{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 700955,
            "title": "Slicing in String - Python",
            "titleSlug": "slicing-in-string-python",
            "content": "<p><span style=\"font-size:18px\">Here we&#39;ll talk about the novel and perhaps tantalizing concept of <strong>slicing</strong>. Slicing is the process through which you can extract some continuous part of a string. For example: string is &quot;<strong>python</strong>&quot;, let&#39;s use slicing in this. Slicing can be done as:</span></p>\n\n<p><span style=\"font-size:18px\"><strong>a.</strong> string<strong>[0:2]</strong> = <strong>py</strong> (Slicing till index 1)<br />\n<strong>b.</strong> string<strong>[0:]</strong> = <strong>python</strong> (Slicing till last index)<br />\n<strong>c.</strong> string<strong>[0:4]</strong> = <strong>pyth</strong> (Slicing till index 3)<br />\n<strong>d.</strong> string<strong>[0:-2]</strong> = <strong>pyth</strong> (Slicing till index -3).<br />\n<strong>Note:</strong> <strong>-1</strong> indexing starts from last of any string.</span></p>\n\n<p><span style=\"font-size:18px\">Now, lets look into this through a question. Given a string of braces named <strong>bound_by</strong>, and a string named <strong>tag_name</strong>. The task is to print a new string such that <strong>tag_name </strong>is in the <strong>middle </strong>of <strong>bound_by</strong>.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong> </span>\n<span style=\"font-size:18px\">bound_by = [[]], tag_name = tag</span>\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\n<span style=\"font-size:18px\">[[tag]]<strong>\n</strong></span></pre>\n\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong> </span>\n<span style=\"font-size:18px\">bound_by = &lt;&gt;, tag_name = body</span>\n<span style=\"font-size:18px\"><strong>Output:</strong>\n&lt;body&gt;</span></pre>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nYour task is to complete the function&nbsp;<strong>join_middle()</strong> which should <strong>return </strong>the modified string.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\n1 &lt;= |tag_name| &lt;= 10<sup>3</sup></span></p>\n\n<p>&nbsp;</p>\n\n<p><iframe frameborder=\"0\" height=\"315\" src=\"https://www.youtube.com/embed/i5WNg3UOkQk\" width=\"560\"></iframe></p>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p>In the first bound_by . we have to put first half. i.e:-&nbsp; &nbsp;bound_by[0:halfLength_boundby]</p>\n\n<p>In second bound_by , we have to put second half. i.e&nbsp; bound_by[halfLength:]</p>"
        ],
        "relatedTopics": [
            {
                "name": "python-strings",
                "slug": "python-strings"
            },
            {
                "name": "python",
                "slug": "python"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\n# Function to join given bound_by and tag\ndef join_middle(bound_by, tag_name):\n  return bound_by[0 : (len(bound_by) // 2)] + tag_name + bound_by[len(bound_by) // 2 : ]",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n/**\n * @param {string} bound_by\n * @param {string} tag_name\n * @returns {string}\n*/\n\nclass Solution {\n    //Function to join given bound_by and tag\n    join_middle(bound_by, tag_name) {\n        // complete the statement below to return the string as required\n        return bound_by.slice(0, Math.floor(bound_by.length / 2)) + tag_name + bound_by.slice(Math.floor(bound_by.length / 2));\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}