{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 700367,
            "title": "Smallest divisible number",
            "titleSlug": "smallest-divisible-number",
            "content": "<p><span style=\"font-size:18px\">Given a number N, find an integer denoting the smallest number evenly divisible by each number from 1 to n.</span></p>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong>\r\nN = 3\r\n<strong>Output:</strong> 6\r\n<strong>Explanation:</strong> 6 is the smallest number \r\ndivisible by 1,2,3.</span></pre>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong>\r\nN = 6\r\n<strong>Output:</strong> 60\r\n<strong>Explanation:</strong> 60 is the smallest number \r\ndivisible by 1,2,3,4,5,6.</span></pre>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Your Task: &nbsp;</strong><br />\r\nYou dont need to read input or print anything. Complete the function <strong>getSmallestDivNum() </strong>which takes N as input parameter and returns the smallest number evenly divisible by each number from 1 to n.</span></p>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(N)<br />\r\n<strong>Expected Auxiliary Space:</strong> O(1)</span></p>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n1 &le; N &le; 25</span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Find the smallest positive integer that is evenly divisible by all of the integers from 1 to N.",
                "constraints": [
                    "1 <= N <= 25"
                ],
                "testcases": [
                    {
                        "input": "3",
                        "output": "6",
                        "explanation": "6 is the smallest number divisible by 1, 2, and 3."
                    },
                    {
                        "input": "6",
                        "output": "60",
                        "explanation": "60 is the smallest number divisible by 1, 2, 3, 4, 5, and 6."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Use the concept of GCD.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function template for C++\n\nclass Solution{\npublic:\n    //Function to find the smallest number that is divisible by all numbers from 1 to n.\n    long long getSmallestDivNum(long long n)\n    {\n        long long ans = 1;    //initialize ans as 1\n\n        //iterating from 1 to n and calculating least common multiple(LCM)\n        //of ans and current number i using the formula ans = (ans * i)/(__gcd(ans, i)).\n        for (long long i = 1; i <= n; i++)\n            ans = (ans * i)/(__gcd(ans, i));\n\n        //returning the final ans which is the smallest number divisible by all numbers from 1 to n.\n        return ans;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "// Back-end complete function Template for Java\n\nclass Solution{\n    // Function to get the smallest divisible number by calculating the least common multiple\n    public static long getSmallestDivNum(int n){\n        long ans=1;    \n        // Loop through numbers from 1 to n\n        for (long i=1;i<=n;i++)\n            // Calculate the least common multiple by dividing the product of ans and i by their greatest common divisor\n            ans=(ans*i)/(gcd(ans,i));\n        // Return the smallest divisible number\n        return ans;\n    }\n    \n    // Function to calculate the greatest common divisor using the Euclidean algorithm\n    public static long gcd(long a,long b){\n        // Return a if b is 0, indicating that a is the greatest common divisor\n        if(b==0) \n            return a;\n        // Calculate the remainder of a divided by b\n        a%=b;\n        // Recursively call the function with b as a and the remainder as b\n        return gcd(b,a);\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\r\n\r\nimport fractions \r\n\r\nclass Solution:\r\n    \r\n    #Function to get the smallest divisible number.\r\n    def getSmallestDivNum(self, n): \r\n        ans = 1    \r\n        \r\n        #iterating from 1 to n+1\r\n        for i in range(1, n + 1): \r\n            \r\n            #calculating the product of ans and i\r\n            #and finding the greatest common divisor of ans and i\r\n            ans = (ans * i)/fractions.gcd(ans, i)    \r\n        \r\n        #returning the smallest divisible number\r\n        return int(ans)",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n\n/**\n * @param {number} n\n * @return {number}\n*/\n\nclass Solution {\n    getSmallestDivNum(n){\n        let ans = 1;    \n        for (let i = 1; i <= n; i++)\n            ans = (ans * i)/(gcd(ans, i));\n        return ans;\n    }\n}\n\nfunction gcd(a, b) {\n    if (b === 0) {\n        return a;\n    } else {\n        return gcd(b, a % b);\n    }\n}",
                "lang_text": "javascript"
            },
            {
                "lang": "C#",
                "full_func": "//User function template for C#\n\nclass Solution\n{\n    //Complete this function\n    //Function to find the smallest divisible number evenly divisible by all numbers from 1 to n.\n    public long getSmallestDivNum(long n)\n    {\n        long ans = 1;    //initialize ans as 1\n\n        //iterating from 1 to n and calculating least common multiple(LCM)\n        //of ans and current number i using the formula ans = (ans * i)/gcd(ans, i).\n        for (long i = 1; i <= n; i++)\n            ans = (ans * i)/(gcd(ans, i));\n\n        //returning the final ans which is the smallest number divisible by all numbers from 1 to n.\n        return ans;\n    }\n\n    //Function to find the greatest common divisor(GCD) of two numbers.\n    private long gcd(long a, long b)\n    {\n        //iteratively applying the Euclidean algorithm \n        //till either the dividend or divisor becomes zero.\n        while (a != 0 && b != 0)\n        {\n            if (a > b)\n                a %= b;\n            else\n                b %= a;\n        }\n\n        //returning the number which is not equal to zero after the loop ends\n        return (a == 0) ? b : a;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}