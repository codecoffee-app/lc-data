{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 702829,
            "title": "Smallest factorial number",
            "titleSlug": "smallest-factorial-number5929",
            "content": "<p><span style=\"font-size:18px\">Given a number&nbsp;<strong>n</strong>. The task is to find the smallest number whose factorial contains at least n trailing zeroes.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:\r\n</strong>n = 1<strong>\r\nOutput: </strong>5\r\n<strong>Explanation : </strong>5! = 120 which has at\r\nleast 1 trailing 0.</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong>\r\nn = 6\r\n<strong>Output: </strong>25\r\n<strong>Explanation :</strong><strong> </strong>25! has at least\r\n6 trailing 0.\r\n</span></pre>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>User Task:</strong><br />\r\nComplete the function&nbsp;<strong>findNum()</strong>&nbsp;which takes an integer N as input parameters, and returns the answer.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:&nbsp;</strong>O(log<sub>2</sub> N * log<sub>5</sub>&nbsp;N).<br />\r\n<strong>Expected Auxiliary Space:&nbsp;</strong>O(1).</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n1 &lt;= n &lt;= 10<sup>4</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an integer `n`, find the smallest number whose factorial contains at least `n` trailing zeroes.",
                "constraints": [
                    "1 <= n <= 10^4"
                ],
                "testcases": [
                    {
                        "input": "1",
                        "output": "5",
                        "explanation": "5! = 120 which has at least 1 trailing 0."
                    },
                    {
                        "input": "6",
                        "output": "25",
                        "explanation": "25! has at least 6 trailing 0."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Number of zeroes is equal to number of 5&rsquo;s in prime factors of x!</span></p>",
            "<p><span style=\"font-size:18px\">The maximum value whose factorial contain n trailing zeroes is 5*n.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Searching",
                "slug": "searching"
            },
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "factorial",
                "slug": "factorial"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "\r\nclass Solution\r\n{\r\n    public:\r\n    bool check(int p, int n) { \r\n    int temp = p, count = 0, f = 5; \r\n    while (f <= temp) { \r\n        count += temp/f; \r\n        f = f*5; \r\n    } \r\n    return (count >= n); \r\n} \r\n  \r\n\r\nint findNum(int n) { \r\n    if (n==1) \r\n        return 5; \r\n    int low = 0; \r\n    int high = 5*n; \r\n  \r\n    while (low <high) { \r\n        int mid = (low + high) >> 1;\r\n        if (check(mid, n)) \r\n            high = mid; \r\n        else\r\n            low = mid+1; \r\n    } \r\n    return low; \r\n} \r\n\r\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\nclass Solution\n{\n    // Function to check if a given number p has at least n trailing zeros in its factorial\n    boolean check(int p, int n)\n    { \n        int temp = p, count = 0, f = 5;\n        // Count the number of trailing zeros by dividing the number by powers of 5\n        while (f <= temp)\n        { \n            count += temp/f; \n            f = f*5; \n        } \n        return (count >= n);\n    }\n    \n    // Function to find the smallest number with at least n trailing zeros in its factorial\n    int findNum(int n)\n    {\n        if (n == 1)\n        {\n            return 5;\n        }\n        int low = 0; \n        int high = 5*n; \n      \n        // Use binary search to find the smallest number with at least n trailing zeros\n        while (low < high)\n        { \n            int mid = (low + high) / 2;\n            if (check(mid, n)) \n                high = mid; \n            else\n                low = mid+1; \n        } \n        return low; \n    }\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "#Back-end complete function Template for Python 3\r\n\r\nclass Solution:\r\n    def findNum(self, n : int):\r\n        if n == 1:\r\n            return 5\r\n            \r\n        # Check function to count the number of trailing zeros\r\n        def check(p : int, n : int):\r\n            temp = p\r\n            count = 0\r\n            f = 5\r\n            while f <= temp:\r\n                count += temp // f\r\n                f *= 5\r\n            return (count >= n)\r\n            \r\n        # Initialize the search range\r\n        low = 0 \r\n        high = 5 * n \r\n      \r\n        # Binary search to find the smallest number with n trailing zeros\r\n        while low < high:\r\n            mid = (low + high) // 2;\r\n            if check(mid, n):\r\n                high = mid \r\n            else:\r\n                low = mid+1 \r\n        return low",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "// Back-end complete function Template for javascript\n\nclass Solution {\n\n    // Function to check if a given number of trailing zeroes exist in the factorial of a number\n    check(p, n) {\n        let temp = p; // Store the given number in a temporary variable\n        let count = 0; // Initialize a count variable to keep track of trailing zeroes\n        let f = 5; // Initialize f to 5, as trailing zeroes are created by multiples of 5 in the factorial\n        while (f <= temp) {\n            count += Math.floor(temp/f); // Increment the count by the number of multiples of f in temp\n            f = f * 5; // Multiply f by 5 to check for the next multiple\n        }\n        return (count >= n); // Return a boolean value indicating if the given number of trailing zeroes is present\n    }\n\n    // Function to find the smallest number whose factorial has the given number of trailing zeroes\n    findNum(n) {\n        if (n == 1) {\n            return 5; // If n is 1, return 5 as it is the smallest number whose factorial has 1 trailing zero\n        }\n        let low = 0; // Initialize a low variable to store the lower limit of the binary search\n        let high = 5 * n; // Initialize a high variable to store the upper limit of the binary search\n\n        while (low < high) {\n            let mid = Math.floor((low + high) / 2); // Calculate the middle element of the range\n            if (this.check(mid, n)) { // Check if the middle element has the given number of trailing zeroes\n                high = mid; // If yes, update the high to be the middle element\n            } else {\n                low = mid + 1; // If no, update the low to be the middle element + 1\n            }\n        }\n        return low; // Return the smallest number whose factorial has the given number of trailing zeroes\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}