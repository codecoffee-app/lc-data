{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704989,
            "title": "Smallest number by rearranging digits of a given number",
            "titleSlug": "smallest-number-by-rearranging-digits-of-a-given-number0820",
            "content": "<p><span style=\"font-size:18px\">Given a number <strong>s</strong>(in string form).&nbsp;Find the Smallest number (Not leading Zeros) which can be obtained by rearranging the digits of given number.</span><br />\r\n&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input: </strong>s = &quot;846903&quot;\r\n<strong>Output: </strong>304689\r\n<strong>Explanation: </strong>304689 is the smallest number\r\nby rearranging the digits.</span>\r\n</pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input: </strong>s = &quot;55010&quot;\r\n<strong>Output: </strong>10055\r\n<strong>Explanation: </strong>10055 is the smallest number \r\nby rearranging the digts.</span>\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong></span><br />\r\n<span style=\"font-size:18px\">You don&#39;t need to read or print anything. Your task is to complete the function&nbsp;<strong>minimum_number()&nbsp;</strong>which takes the number as input parameter and returns the smallest number than can be formed without leading zeros by rearranging the digits of the number.</span><br />\r\n&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:&nbsp;</strong>O(N * log(N)) where N is the number of digits of the given number<br />\r\n<strong>Expected Space Complexity:&nbsp;</strong>O(1)</span><br />\r\n&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n1 &lt;= N &lt;= 10<sup>5</sup></span><br />\r\n&nbsp;</p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a number **s** (in string form), find the smallest possible number (without leading zeros) that can be formed by rearranging its digits.",
                "constraints": [
                    "1 <= N <= 10^5, where N is the number of digits in the given number."
                ],
                "testcases": [
                    {
                        "input": "846903",
                        "output": "304689",
                        "explanation": "By rearranging the digits of '846903', the smallest possible number without leading zeros is '304689'."
                    },
                    {
                        "input": "55010",
                        "output": "10055",
                        "explanation": "By rearranging the digits of '55010', the smallest possible number without leading zeros is '10055'."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Use sorting.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "ge"
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution{\n    public:\n    //Function to find the minimum number by rearranging the given string.\n    string minimum_Number(string s){\n        //sorting the string in ascending order.\n        sort(s.begin(), s.end());\n        //creating a new string to store the minimum number.\n        string t = \"\";\n        //checking if the first character is '0'.\n        for(auto i : s){\n            if(i == '0')\n                t += i;\n            else \n                break;\n        }\n        //removing the '0's from the original string.\n        s = s.substr(t.size());\n        //if the original string is not empty.\n        if(s.size())\n            //rearranging the string by putting the smallest non-zero digit in the first position.\n            s = s[0] + t + s.substr(1);\n        //if the original string is empty.\n        else\n            //concatenating the '0's to the end of the minimum number.\n            s = s + t;\n        //returning the minimum number.\n        return s;\n    }    \n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}