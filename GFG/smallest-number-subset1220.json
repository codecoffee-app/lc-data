{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703420,
            "title": "Not a subset sum",
            "titleSlug": "smallest-number-subset1220",
            "content": "<p><span style=\"font-size: 18px;\">Given a sorted array <strong>arr[]</strong> of positive integers, find the smallest positive integer such that it cannot be represented as the sum of elements of any subset of the given array set.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr[] = [1, 2, 3]\n<strong>Output:</strong> 7\n<strong>Explanation:</strong> 7 is the smallest positive number for which no subset is there with sum 7.\n</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr[] = [3, 6, 9, 10, 20, 28]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> 1 is the smallest positive number for which no subset is there with sum 1.\n</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong> O(n)<br /><strong>Expected Auxiliary Space:</strong>&nbsp;O(1)</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints</strong><br />1 &lt;= arr.size()<strong>&nbsp;</strong>&lt;= 10<sup>6</sup><br />1 &lt;= arr[i] &lt;= 10<sup>8</sup></span><br />&nbsp;</p>",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a sorted array `arr[]` of positive integers, determine the smallest positive integer that cannot be expressed as the sum of elements from any subset of the given array.",
                "constraints": [
                    "1 <= arr.size() <= 10^6",
                    "1 <= arr[i] <= 10^8"
                ],
                "testcases": [
                    {
                        "input": "[1, 2, 3]",
                        "output": "7",
                        "explanation": "The smallest positive integer that cannot be represented as the sum of any subset of [1, 2, 3] is 7."
                    },
                    {
                        "input": "[3, 6, 9, 10, 20, 28]",
                        "output": "1",
                        "explanation": "The smallest positive integer that cannot be represented as the sum of any subset of [3, 6, 9, 10, 20, 28] is 1."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span >Think about the smallest positive integer you cannot create with any subset of the given array. How would you track this as you go through each element?&nbsp;</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [
            "salesforce"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function template for C++\n\nclass Solution {\n  public:\n    long long findSmallest(vector<int> &arr) {\n        int n = arr.size();\n        long long res = 1;\n\n        // Traverse the array and increment 'res' if arr[i] is\n        // smaller than or equal to 'res'.\n        for (int i = 0; i < n && arr[i] <= res; i++)\n            res = res + arr[i];\n\n        return res;\n    }\n};\n",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution {\n    public long findSmallest(int[] arr) {\n        int n = arr.length;\n        long res = 1;\n\n        // Traverse the array and increment 'res' if arr[i] is\n        // smaller than or equal to 'res'.\n        for (int i = 0; i < n && arr[i] <= res; i++) res += arr[i];\n\n        return res;\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "class Solution:\n\n    def findSmallest(self, arr):\n        n = len(arr)\n        res = 1\n\n        # Traverse the array and increment 'res' if arr[i] is\n        # smaller than or equal to 'res'.\n        for i in range(n):\n            if arr[i] <= res:\n                res += arr[i]\n\n        return res\n",
                "lang_text": "py"
            },
            {
                "lang": "Javascript",
                "full_func": "class Solution {\n    findSmallest(arr) {\n        let res = 1;\n\n        // Traverse the array and increment 'res' if arr[i] is\n        // smaller than or equal to 'res'.\n        for (let i = 0; i < arr.length && arr[i] <= res; i++) {\n            res += arr[i];\n        }\n\n        return res;\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}