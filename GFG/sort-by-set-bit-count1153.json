{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 702718,
            "title": "Sort by Set Bit Count",
            "titleSlug": "sort-by-set-bit-count1153",
            "content": "<p><span style=\"font-size:18px\">Given an array of integers, sort the array (in descending order) according to count of set bits in binary representation of array elements.&nbsp; </span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Note:</strong> For integers having same number of set bits in their binary representation, sort according to their position in the original array i.e., a stable sort.</span></p>\r\n\r\n<div>&nbsp;</div>\r\n\r\n<div><span style=\"font-size:18px\"><strong>Example 1:</strong></span></div>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input: </strong>\r\narr[] = {5, 2, 3, 9, 4, 6, 7, 15, 32};\r\n<strong>Output:</strong>\r\n15 7 5 3 9 6 2 4 32\r\n<strong>Explanation:</strong>\r\nThe integers in their binary\r\nrepresentation are:\r\n15 - 1111\r\n7  - 0111\r\n5  - 0101\r\n3  - 0011\r\n9  - 1001\r\n6  - 0110\r\n2  - 0010\r\n4  - 0100\r\n32 - 10000\r\nhence the non-increasing sorted order is:\r\n{15}, {7}, {5, 3, 9, 6}, {2, 4, 32}</span></pre>\r\n\r\n<div>&nbsp;</div>\r\n\r\n<div><span style=\"font-size:18px\"><strong>Example 2:</strong></span></div>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input: \r\n</strong>arr[] = {1, 2, 3, 4, 5, 6};\r\n<strong>Output:</strong> \r\n3 5 6 1 2 4\r\n<strong>Explanation:</strong>\r\n3  - 0011\r\n5  - 0101\r\n6  - 0110\r\n1  - 0001\r\n2  - 0010\r\n4  - 0100\r\nhence the non-increasing sorted order is\r\n{3, 5, 6}, {1, 2, 4}</span></pre>\r\n\r\n<p><br />\r\n<br />\r\n<span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou don&#39;t need to print anything, printing is done by the driver code itself. You just need to complete the function <strong>sortBySetBitCount() </strong>which takes the array <strong>arr[]</strong> and its size <strong>N</strong><strong> </strong>as inputs and sort the array <strong>arr[]</strong> inplace. Use of extra space is prohibited.</span><br />\r\n&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity: </strong>O(N.log(N))<br />\r\n<strong>Expected Auxiliary Space: </strong>O(1)</span></p>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n1 &le; N &le; 10<sup>5</sup><br />\r\n1 &le; A[i] &le; 10<sup>6</sup> </span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p>Try to use comparator or Lamda Fucntion</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution{\r\npublic:\r\n    // custom comparator of std::sort\r\n    static int cmp(int a,int b)\r\n    {\r\n        int count1 = __builtin_popcount(a);\r\n        int count2 = __builtin_popcount(b);\r\n    \r\n        // this takes care of the stability of\r\n        // sorting algorithm too\r\n        if (count1 <= count2)\r\n            return false;\r\n        return true;\r\n    }\r\n    \r\n    // Function to sort according to bit count using\r\n    // std::sort\r\n    void sortBySetBitCount(int arr[], int n)\r\n    {\r\n        stable_sort(arr, arr+n, cmp);\r\n    }\r\n};\r\n",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Compute {\r\n    \r\n    // Function to sort the array by set bit count\r\n    public static void sortBySetBitCount(Integer arr[], int n) {\r\n        \r\n        // Sort the array in descending order based on set bit count\r\n        Arrays.sort(arr, (a, b) -> -Integer.compare(Integer.bitCount(a), Integer.bitCount(b)));\r\n    }\r\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\r\n\r\nclass Solution:\r\n    # Function to sort the array by the count of set bits in each element\r\n    def sortBySetBitCount(self, arr, n):\r\n        # Sorting the array based on the count of set bits in each element\r\n        arr.sort(key= lambda x:-bin(x)[2:].count('1'))",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": null,
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}