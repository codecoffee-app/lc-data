{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 702910,
            "title": "Sort The Array",
            "titleSlug": "sort-the-array0055",
            "content": "<p><span >Given a random array&nbsp;<strong>arr</strong> of numbers, please return them in ascending sorted order.&nbsp;<br />Note: Use Inbuilt functions to Sort the given array</span></p>\n<p><span ><strong>Examples:</strong></span></p>\n<pre><span ><strong>Input: </strong>arr[] = [1, 5, 3, 2]\n<strong>Output:</strong> [1, 2, 3, 5]\n<strong>Explanation</strong>: After sorting array will be like [1, 2, 3, 5].</span></pre>\n<pre><span ><strong>Input: </strong>arr[] = [3, 1]\n<strong>Output:</strong> [1, 3]\n<strong>Explanation</strong>: After sorting array will be like [1, 3].</span></pre>\n<pre><span ><strong>Input: </strong>arr[] = [1, 2, 3]\n<strong>Output:</strong> [1, 2, 3]\n<strong>Explanation</strong>: It's already in expected form.</span></pre>\n<p><span ><strong>Constraints:</strong><br />1 &le; arr.size &le; 10<sup>5<br /></sup>1 </span><span style=\"font-size: 18.6667px; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">&le;</span><span style=\"font-size: 14pt; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">&nbsp;arr[i]&nbsp;</span><span style=\"font-size: 18.6667px; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">&le;&nbsp;</span><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif; font-size: 18.6667px;\">10</span><sup style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">5</sup></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a random array of numbers, return them in ascending sorted order using inbuilt sorting functions.",
                "constraints": [
                    "1 <= arr.size <= 10^5",
                    "1 <= arr[i] <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "[1, 5, 3, 2]",
                        "output": "[1, 2, 3, 5]",
                        "explanation": "The array is sorted in ascending order."
                    },
                    {
                        "input": "[3, 1]",
                        "output": "[1, 3]",
                        "explanation": "The array is sorted in ascending order."
                    },
                    {
                        "input": "[1, 2, 3]",
                        "output": "[1, 2, 3]",
                        "explanation": "The array is already sorted in ascending order."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span >Use any sorting algorithm like merge sort etc.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "cisco"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    // Function to sort the array in ascending order.\n    void sortArr(vector<int> &arr) {\n        // using the sort function to sort the array.\n        sort(arr.begin(), arr.end());\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\nclass Solution {\n    // Function to sort an array in ascending order\n    void sortArr(int[] arr) {\n        // Sorting the array using Arrays sort method\n        Arrays.sort(arr);\n    }\n}\n",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "# Back-end complete function Template for Python 3\n\n\n# defining the Solution class\nclass Solution:\n    # sorting the array\n    def sortArr(self, arr):\n        arr.sort()  # using the list's sort method to sort the array\n",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "class Solution {\n    sortArr(arr) {\n        arr.sort((a, b) => a - b); // Sort the array in ascending order\n    }\n}\n",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}