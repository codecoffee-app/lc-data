{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703244,
            "title": "Special array reversal",
            "titleSlug": "special-array-reversal2328",
            "content": "<p><span style=\"font-size: 18px;\">Given a string <strong>S</strong>, containing special characters and all the alphabets, reverse the string without<br />affecting the positions of the special characters.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>S = \"A&amp;B\"\n<strong>Output:</strong> \"B&amp;A\"\n<strong>Explanation</strong>: As we ignore '&amp;' and</span>\n<span style=\"font-size: 18px;\">then reverse, so answer is \"B&amp;A\".</span>\n</pre>\n<p><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input</strong>: S = \"A&amp;x#\n<strong>Output:</strong> \"x&amp;A#\"\n<strong>Explanation</strong>: we swap only A and x.</span></pre>\n<p><br /><span style=\"font-size: 18px;\"><strong>Your Task:&nbsp;&nbsp;</strong><br />You don't need to read input or print anything. Your task is to complete the function&nbsp;<strong>reverse()</strong>&nbsp;which takes the string<strong>&nbsp;</strong>as inputs and returns required reverse string.<br /><br /><strong>Expected Time Complexity:</strong>&nbsp;O(|S|)<br /><strong>Expected Auxiliary Space:</strong>&nbsp;O(|S|)<br /><br /><strong>Constraints:</strong><br />1 &le; |S| &le; 10<sup>5</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p>Just ignore the special character and use two pointer technique to swap.</p>"
        ],
        "relatedTopics": [
            {
                "name": "two-pointer-algorithm",
                "slug": "two-pointer-algorithm"
            },
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "zoho"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "\r\nclass Solution\r\n{\r\n    public:\r\n        bool isAlphabet(char x) { \r\n    return ( (x >= 'A' && x <= 'Z') || (x >= 'a' && x <= 'z') ); \r\n} \r\n  \r\nstring reverse(string str)\r\n{ \r\n    int r = str.length() - 1, l = 0; \r\n    while (l < r) { \r\n        if (!isAlphabet(str[l])) \r\n            l++; \r\n        else if(!isAlphabet(str[r])) \r\n            r--; \r\n        else { \r\n            swap(str[l], str[r]); \r\n            l++; \r\n            r--; \r\n        } \r\n    } \r\n    return str;\r\n} \r\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "class Solution\n{\n    public string reverse(string str)\n    {\n        char[] charArray = str.ToCharArray();\n        int l = 0, r = charArray.Length - 1;\n        \n        while (l < r)\n        {\n            if (!IsAlphabet(charArray[l]))\n                l++;\n            else if (!IsAlphabet(charArray[r]))\n                r--;\n            else\n            {\n                char temp = charArray[l];\n                charArray[l] = charArray[r];\n                charArray[r] = temp;\n                l++;\n                r--;\n            }\n        }\n        return new string(charArray);\n    }\n\n    private bool IsAlphabet(char x)\n    {\n        return ((x >= 'A' && x <= 'Z') || (x >= 'a' && x <= 'z'));\n    }\n}",
                "lang_text": "csharp"
            },
            {
                "lang": "Javascript",
                "full_func": null,
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}