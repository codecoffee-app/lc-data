{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705798,
            "title": "Special Number",
            "titleSlug": "special-number1914",
            "content": "<p><span style=\"font-size: 18px;\">Given the number of digits <strong>n </strong>and a base <strong>b</strong>, give the count of all the special numbers present in the range from zero to maximum for that combination of number of digits and&nbsp;base.<br />Special number is defined as a number whose sum of digits in left half is equal to the sum of digits in its right half. </span><br />&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>n = 4, b = 2\n<strong>Output: </strong>6\n<strong>Explanation: </strong>All possible combinations are,\n0000, 0101, 0110, 1001, 1010, 1111.</span>\n</pre>\n<p><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>n = 2, b = 10\n<strong>Output: </strong>10\n<strong>Explanation: </strong>All possible combinations are,\n00, 11, 22, 33, 44, 55, 66, 77, 88, 99.</span>\n</pre>\n<p>&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Your Task:</strong><br />You don't need to read or print anyhting. Your task is to complete the function&nbsp;<strong>countOfSpeacialNo()&nbsp;</strong>which takes n and b as input parameter and return total count of Speacial numbers.</span><br />&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Compelxity:&nbsp;</strong>O(n*10<sup>b</sup>)<br /><strong>Expected Space Complexity:&nbsp;</strong>O(1)</span><br />&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &lt;= n &lt;= 6<br />1 &lt;= b &lt;= 10</span></p>",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given the number of digits `n` and a base `b`, determine the count of special numbers within the range of 0 to the maximum possible number for that `n` and `b`. A special number is defined as a number where the sum of its digits in the left half equals the sum of its digits in the right half.",
                "constraints": [
                    "1 <= n <= 6",
                    "1 <= b <= 10"
                ],
                "testcases": [
                    {
                        "input": "n = 4, b = 2",
                        "output": "6",
                        "explanation": "Consider numbers with 4 digits in base 2. The special numbers are 0000, 0101, 0110, 1001, 1010, and 1111.  In each case, the sum of the first two digits equals the sum of the last two digits."
                    },
                    {
                        "input": "n = 2, b = 10",
                        "output": "10",
                        "explanation": "Consider numbers with 2 digits in base 10. The special numbers are 00, 11, 22, 33, 44, 55, 66, 77, 88, and 99.  In each case, the sum of the first digit equals the sum of the second digit (they are the same digit)."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Use maths.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nclass Solution {\npublic:\n\t//Function to count the number of special numbers.\n\tint countOfSpeacialNo(int n, int b){\n\t\tint count = 0;\n\t\tint nd = n;\n\t\tint M = 32;\n\n\t\t//iterating over all the numbers from 0 to 1000000.\n\t\tfor(int j=0;j<=1000000;j++)\n\t\t{\n\t\t\tint n1 = j;\n\t\t\tint arr[10];\n\n\t\t\t//initializing the array with 0.\n\t\t\tfor(int z1=0;z1<10;z1++)\n\t\t\t{\n\t\t\t    arr[z1] = 0;\n\t\t\t}\n\t\t\tint ind = 0;\n\n\t\t\t//converting the number to base b and storing it in the array.\n\t\t\twhile(n1 > 0)\n\t\t\t{\n\t\t\t    if(ind > nd)\n    \t\t\t{\n    \t\t\t\tbreak;\n    \t\t\t}\n\t\t\t\tarr[ind] = n1%b;\n\t\t\t\tn1 = n1/b;\n\t\t\t\tind = ind + 1;\n\t\t\t}\n\n\t\t\t//if the number is greater than the given number, we break the loop.\n\t\t\tif(ind > nd)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tint sum1 = 0;\n\t\t\tint sum2 = 0;\n\n\t\t\t//calculating the sum of digits from left and right side of the number.\n\t\t\tfor(int i=0;i<=(nd-1)/2;i++)\n\t\t\t{\n\t\t\t\tsum1 = sum1 + arr[i];\n\t\t\t\tsum2 = sum2 + arr[nd-1-i];\n\t\t\t}\n\n\t\t\t//if the sums are equal, we increment the count.\n\t\t\tif(sum1 == sum2)\n\t\t\t{\n\t\t\t\tcount = count + 1;\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}