{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703933,
            "title": "Special Odd Series Sum",
            "titleSlug": "special-odd-series-sum1235",
            "content": "<p><span style=\"font-size:18px\">Given the value of n, we need to find the sum of the series where i-th term is sum of first i odd natural numbers.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>NOTE:</strong>&nbsp;Sum of the series 1 + (1+3) + (1+3+5) + (1+3+5+7) + &hellip;&hellip; + (1+3+5+7+&hellip;+(2n-1))<br />\n<br />\n<strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input</strong>: n = 2\n<strong>Output:</strong>&nbsp;5&nbsp;\n<strong>Explanation</strong>: 1 + (1+3) = 5\nHence sum of the series is 5.</span>\n</pre>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input: </strong>n = 5\n<strong>Output:&nbsp;</strong>55\n<strong>Explanation</strong>: 1 + (1+3) + (1+3+5) +\n(1+3+5+7) + (1+3+5+7+9) = 55.\nHence sum of the series is 55.</span>\n</pre>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Your Task:&nbsp;&nbsp;</strong><br />\nYou dont need to read input or print anything. Complete the function <strong>sumOfTheSeries()&nbsp;</strong>which takes n&nbsp;as input parameter and returns&nbsp;the sum of the series of n&nbsp;terms.</span><br />\n<br />\n<span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(1)<br />\n<strong>Expected Auxiliary Space:</strong> O(1)<br />\n<br />\n<strong>Constraints:</strong><br />\n1&lt;= n&nbsp;&lt;=1000</span><br />\n&nbsp;</p>\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Sum of series concept.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "series",
                "slug": "series"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\nclass Solution {\n  public:\n    //Function to calculate the sum of the series.\n    long long int sumOfTheSeries(long long int n){\n    // required sum\n    return (n * (n + 1) / 2) *\n            (2 * n + 1) / 3;\n}\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n\n/**\n * @param {number} n\n * @return {number}\n */\nclass Solution {\n  sumOfTheSeries(n) {\n    // code here\n    return (n * (n + 1) / 2) * (2 * n + 1) / 3;\n  }\n}",
                "lang_text": "javascript"
            },
            {
                "lang": "C#",
                "full_func": "class Solution\n{\n    //Complete this function\n    public long sumOfTheSeries(long n)\n    {\n        // required sum\n        return (n * (n + 1) / 2) *\n            (2 * n + 1) / 3;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}