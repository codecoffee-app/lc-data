{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703348,
            "title": "Split Strings",
            "titleSlug": "split-strings5211",
            "content": "<p><span style=\"font-size:18px\">Given a string S which consists of alphabets , numbers and special characters. You need to write a program to split the strings in three different strings S1, S2 and S3 such that the string S1 will contain all the alphabets present in S , the string S2 will contain all the numbers present in S and S3 will contain all special characters present in S. &nbsp;The strings S1, S2 and S3 should have characters in same order as they appear in input.</span></p>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong>\r\nS = geeks01for02geeks03!!!\r\n<strong>Output:</strong>\r\ngeeksforgeeks\r\n010203\r\n!!!\r\n<strong>Explanation:</strong> The output shows S1, S2 and S3. </span></pre>\r\n\r\n<p><strong><span style=\"font-size:18px\">Example 2:</span></strong></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong>\r\nS = **Docoding123456789everyday##\r\n<strong>Output:</strong>\r\nDocodingeveryday\r\n123456789\r\n**##</span></pre>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Your Task: &nbsp;</strong><br />\r\nYou dont need to read input or print anything. Complete the function <strong>splitString()</strong> which takes the string S as input parameters and returns a list of strings containing S1, S2 and S3 respectively. If you return an empty string the driver will print -1.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity: </strong>O(|S|)<br />\r\n<strong>Expected Auxiliary Space:</strong> O(N)</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n1 &le; |S| &le; 10<sup>5</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string `S` containing alphabets, numbers, and special characters, your task is to split it into three separate strings: `S1`, `S2`, and `S3`. `S1` should contain all the alphabets from `S` in their original order. `S2` should contain all the numbers from `S` in their original order. `S3` should contain all the special characters from `S` in their original order.  Return these three strings as a list.",
                "constraints": [
                    "1 <= |S| <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "geeks01for02geeks03!!!",
                        "output": "['geeksforgeeks', '010203', '!!!']",
                        "explanation": "S1 contains all alphabets: geeksforgeeks. S2 contains all numbers: 010203. S3 contains all special characters: !!!"
                    },
                    {
                        "input": "**Docoding123456789everyday##",
                        "output": "['Docodingeveryday', '123456789', '**##']",
                        "explanation": "S1 contains all alphabets: Docodingeveryday. S2 contains all numbers: 123456789. S3 contains all special characters: **##"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Declare 3 empty strings S1, S2, S3.<br />\nTraverse each character and<br />\n&nbsp; &nbsp; append to S1 if it is alphabetic.</span><br />\n<span style=\"font-size:18px\">&nbsp; &nbsp; append to S2&nbsp;if it is numeric.<br />\n&nbsp; &nbsp; append to S3&nbsp;if it is a special character.<br />\nIn the end add S1,S2,S3 to result List.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nclass Solution\n{   \npublic:\n    //Function to split a given string into three separate strings based on the type of characters.\n    vector<string> splitString(string S) \n    { \n        vector<string> result(3);\n        \n        //iterating over the characters of the input string.\n        for (int i=0; i<S.length(); i++) \n        { \n            //if the character is an alphabet, add it to the first string.\n            if((S[i] >= 'A' && S[i] <= 'Z') || (S[i] >= 'a' && S[i] <= 'z')) \n                result[0].push_back(S[i]); \n            //if the character is a digit, add it to the second string.\n            else if (isdigit(S[i])) \n                result[1].push_back(S[i]); \n            //if the character is neither an alphabet nor a digit, add it to the third string.\n            else \n                result[2].push_back(S[i]); \n        } \n        return result;\n    } \n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\r\n\r\nclass Solution \r\n{ \r\n    static List<String> splitString(String S) \r\n    { \r\n        List<String> result = new ArrayList<String>();  //create an empty list to store the split strings\r\n        String alpha =\"\", num=\"\", special=\"\" ;  //initialize empty strings for alphabets, numbers and special characters\r\n        \r\n        for(int i=0; i<S.length(); i++)   //iterate over the characters in the input string\r\n        { \r\n            if(Character.isAlphabetic(S.charAt(i)))  //check if the character is alphabetic\r\n                alpha += (S.charAt(i));  //if yes, add it to the alphabets string\r\n            else if (Character.isDigit(S.charAt(i)))  //check if the character is a digit\r\n                num += (S.charAt(i));  //if yes, add it to the numbers string\r\n            else\r\n                special += (S.charAt(i));  //if neither alphabetic nor digit, add it to the special characters string\r\n        } \r\n        result.add(alpha);  //add the alphabets string to the result list\r\n        result.add(num);  //add the numbers string to the result list\r\n        result.add(special);  //add the special characters string to the result list\r\n        return result;  //return the result list\r\n    }\r\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\r\n\r\nclass Solution:\r\n    \r\n    #Function to split the given string into alphabets, numbers, and special characters.\r\n    def splitString(ob, S): \r\n        result = [] \r\n        alpha = \"\" \r\n        num = \"\" \r\n        special = \"\" \r\n        \r\n        #iterating over the string character by character.\r\n        for i in range(len(S)): \r\n            #if character is an alphabet, add it to alpha.\r\n            if((S[i] >= 'A' and S[i] <= 'Z') or\r\n                (S[i] >= 'a' and S[i] <= 'z')): \r\n                alpha += S[i] \r\n            \r\n            #if character is a digit, add it to num.\r\n            elif (S[i].isdigit()): \r\n                num = num+ S[i] \r\n            \r\n            #if character is a special character, add it to special.\r\n            else: \r\n                special += S[i] \r\n\r\n        #appending alpha, num, and special to the result list.\r\n        result.append(alpha) \r\n        result.append(num ) \r\n        result.append(special) \r\n        return result",
                "lang_text": "python3"
            }
        ],
        "platform": "GFG"
    }
}