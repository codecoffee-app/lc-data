{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 712039,
            "title": "Pattern 21",
            "titleSlug": "square-pattern-1662287714",
            "content": "<p><span style=\"font-size:18px\">Geek is very fond of patterns. Once, his teacher gave him a pattern to solve. He gave Geek&nbsp;an integer <strong>n</strong> and asked him to build a pattern.</span></p>\r\n\r\n<p><span style=\"font-size:18px\">Help Geek to&nbsp;build the pattern.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input</strong>: 4\r\n\r\n<strong>Output:\r\n****\r\n*  *\r\n*  *\r\n****</strong></span></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong></span></p>\r\n\r\n<p><span style=\"font-size:18px\">You don&#39;t need to input anything. Complete the function <strong>printSquare()&nbsp;</strong>which takes&nbsp; an integer <strong>n</strong> <strong>&nbsp;</strong>as the input parameter&nbsp;and print the pattern.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong></span></p>\r\n\r\n<ul>\r\n\t<li><span style=\"font-size:18px\">1&lt;= <strong>N</strong> &lt;= 20</span></li>\r\n</ul>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an integer `n`, construct a pattern as follows:\n\n*   The first and last rows consist of `n` asterisks (`*`).\n*   The rows in between consist of an asterisk at the beginning and end, with spaces in between, for a total of `n` characters per row.",
                "constraints": [
                    "1 <= N <= 20"
                ],
                "testcases": [
                    {
                        "input": "4",
                        "output": "****\n*  *\n*  *\n****",
                        "explanation": "The input is 4. The first and last rows contain 4 asterisks. The middle rows contain an asterisk, two spaces, and another asterisk."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\r\n    // function to return sum of elements\r\n    // in an array of size n\r\n  public:\r\n    void printSquare(int n) {\r\n\r\n        for (int i = 1; i <= n; i++) {\r\n            for (int j = 1; j <= n; j++) {\r\n                if (i == 1 || i == n || j == 1 || j == n) {\r\n                    cout << \"*\";\r\n                } else {\r\n                    cout << \" \";\r\n                }\r\n            }\r\n            cout << endl;\r\n        }\r\n    }\r\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n\n    // Method to print a square shape with '*' character\n    void printSquare(int n) {\n        for (int i = 1; i <= n; i++) {\n            for (int j = 1; j <= n; j++) {\n                if (i == 1 || i == n || j == 1 || j == n) {\n                    System.out.print(\"*\"); // Print '*' for first and last rows, and first and last columns\n                } else {\n                    System.out.print(\" \"); // Print empty space for other positions\n                }\n            }\n            System.out.println(); // Move to next line after each row prints\n        }\n    }\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\r\n\r\nclass Solution:\r\n\r\n    #Function to print a triangle pattern.\r\n    def printTriangle(self, n):\r\n        #iterating over rows of the triangle.\r\n        for i in range(1, n + 1):\r\n\r\n            #iterating over columns of the triangle.\r\n            for j in range(1, n + 1):\r\n                #printing '*' at the boundary of the triangle.\r\n                if (i == 1 or i == n or j == 1 or j == n):\r\n                    print('*', end = '')\r\n                #printing space inside the triangle.\r\n                else:\r\n                    print(' ', end = '')\r\n            #printing a new line after each row.\r\n            print()",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\r\n/**\r\n * @param {number} N\r\n * @returns {void}\r\n*/\r\n\r\nclass Solution {\r\n    //Function to print triangle of N lines.\r\n    printTriangle(N)\r\n    {\r\n        //iterating over rows of the triangle.\r\n        for (let i = 1; i <= N; i++) {\r\n\r\n            //iterating over columns of the triangle.\r\n            for (let j = 1; j <= N; j++) {\r\n                //printing '*' at the boundary of the triangle.\r\n                if (i === 1 || i === N || j === 1 || j === N) {\r\n                    process.stdout.write('*');\r\n                }\r\n                //printing space inside the triangle.\r\n                else {\r\n                    process.stdout.write(' ');\r\n                }\r\n            }\r\n            //printing a new line after each row.\r\n            console.log();\r\n        }\r\n    }\r\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}