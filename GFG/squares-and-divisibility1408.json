{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705208,
            "title": "Squares and divisibility",
            "titleSlug": "squares-and-divisibility1408",
            "content": "<p><span style=\"font-size: 18px;\"><span style=\"font-family: arial,helvetica,sans-serif;\">Given&nbsp;a natural number N.Find the number of pairs of natural numbers (A, B) such that 1&lt;=A<sup>2</sup>-1 and B divides A<sup>2</sup>-1.</span></span></p>\n<p><span style=\"font-size: 18px;\"><strong><span style=\"font-family: arial,helvetica,sans-serif;\">Example 1:</span></strong></span></p>\n<pre><span style=\"font-size: 18px;\"><span style=\"font-family: arial,helvetica,sans-serif;\"><strong>Input:</strong>\nN=6\n<strong>Output:</strong>\n9\n<strong>Explanation:</strong>\nThe nine pairs are </span>(1,2),(1,3),(1,4),\n(1,5),(1,6),(2,3),(3,4),(4,5) and (5,6).</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong>\nN=7\n<strong>Output:</strong>\n11\n<strong>Explanation:</strong>\nThe eleven pairs are (1,2),(1,3),(1,4),\n(1,5),(1,6),(1,7),(2,3),(3,4),(4,5),\n(5,6) and (6,7).</span></pre>\n<p><br /><span style=\"font-size: 18px;\"><strong>Your Task:</strong><br />You don't need to read input or print anything. Your task is to complete the function <strong>countPairs()</strong> which takes the number N and returns the number of positive pairs (A, B) such that A divides B<sup>2</sup>-1 and B divide A<sup>2</sup>-1.</span></p>\n<p><br /><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong>O(NLogN)<br /><strong>Expected Auxillary Space:</strong>O(1)</span></p>\n<p><br /><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1&lt;=N&lt;=5*10<sup>4</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a natural number N, find the number of pairs of natural numbers (A, B) such that 1 <= A <= N, 1 <= B <= N, A != B, and both B divides A<sup>2</sup>-1 and A divides B<sup>2</sup>-1.",
                "constraints": [
                    "1 <= N <= 5 * 10<sup>4</sup>"
                ],
                "testcases": [
                    {
                        "input": "6",
                        "output": "9",
                        "explanation": "The nine pairs are (1,2),(1,3),(1,4),(1,5),(1,6),(2,3),(3,4),(4,5) and (5,6)."
                    },
                    {
                        "input": "7",
                        "output": "11",
                        "explanation": "The eleven pairs are (1,2),(1,3),(1,4),(1,5),(1,6),(1,7),(2,3),(3,4),(4,5),(5,6) and (6,7)."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">The pairs should not be equal i.e A!=B.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "// Back-end complete function Template for C++\n\nclass Solution {\n  public:\n    // Function to count the number of pairs\n    int countPairs(int N) {\n        int ans = 0;\n        // iterating from 2 to N\n        for (int j = 2; j <= N; j++) {\n            int i = 1;\n            // checking if the conditions for i and j are satisfied\n            if ((j * j - 1) % i == 0 and (i * i - 1) % j == 0) {\n                ans++;\n                int p = j;\n                int q = (j * j - 1) / i;\n                // iterating until q is less than or equal to N\n                while (q <= N) {\n                    ans++;\n                    int k = q;\n                    q = (k * k - 1) / p;\n                    p = k;\n                }\n            }\n        }\n        return ans;\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "// Back-end complete function Template for Java\r\n\r\nclass Solution {\r\n    // Function to count pairs\r\n    int countPairs(int N) {\r\n        // Variable to store the count of pairs\r\n        int ans = 0;\r\n        \r\n        // Loop to iterate from 2 to N\r\n        for (int j = 2; j <= N; j++) {\r\n            // Variable to check if condition is satisfied\r\n            int i = 1;\r\n            \r\n            // Checking if the condition (j^2 - 1) % i == 0 and (i^2 - 1) % j == 0 is satisfied\r\n            if ((j * j - 1) % i == 0 && (i * i - 1) % j == 0) {\r\n                // Incrementing the count of pairs\r\n                ans++;\r\n                \r\n                // Storing the current values of j and (j^2 - 1) / i\r\n                int p = j;\r\n                int q = (j * j - 1) / i;\r\n                \r\n                // Nested loop to continue iterating as long as q doesn't exceed N\r\n                while (q <= N) {\r\n                    // Incrementing the count of pairs\r\n                    ans++;\r\n                    \r\n                    // Storing the current values of q and (k^2 - 1) / p\r\n                    int k = q;\r\n                    q = (k * k - 1) / p;\r\n                    p = k;\r\n                }\r\n            }\r\n        }\r\n        \r\n        // Returning the final count of pairs\r\n        return ans;\r\n    }\r\n};",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "#Back-end complete function Template for Python 3\r\n\r\nclass Solution:\r\n    \r\n    #Function to count the pairs.\r\n    def countPairs(self,N):\r\n        ans=0\r\n        \r\n        #iterating from 2 to N.\r\n        for j in range(2,N+1):\r\n            i=1\r\n            \r\n            #checking if j*j-1 is divisible by i and i*i-1 is divisible by j.\r\n            if (j*j-1)%i==0 and (i*i-1)%j==0:\r\n                ans+=1\r\n                \r\n                #assigning j to p and (j*j-1)/i to q.\r\n                p=j\r\n                q=(j*j-1)//i\r\n                \r\n                #iterating till q<=N.\r\n                while q<=N :\r\n                    ans+=1\r\n                    \r\n                    #assigning q to k and (k*k-1)/p to q.\r\n                    k=q\r\n                    q=(k*k-1)//p\r\n                    p=k\r\n                    \r\n        return ans",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n/**\n * @param {number} N\n * @return {number}\n*/\n\nclass Solution {\n    //Function to count all pairs with given sum.\n    countPairs(N) {\n        let ans = 0;\n        \n        //iterating from 2 to N.\n        for (let j = 2; j <= N; j++) {\n            let i = 1;\n            \n            //checking if j*j-1 is divisible by i and i*i-1 is divisible by j.\n            if ((j*j-1)%i === 0 && (i*i-1)%j === 0) {\n                ans += 1;\n                \n                //assigning j to p and (j*j-1)/i to q.\n                let p = j;\n                let q = (j*j-1)/i;\n                \n                //iterating till q<=N.\n                while (q <= N) {\n                    ans += 1;\n                    \n                    //assigning q to k and (k*k-1)/p to q.\n                    let k = q;\n                    q = (k*k-1)/p;\n                    p = k;\n                }\n            }\n        }\n        \n        return ans;\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}