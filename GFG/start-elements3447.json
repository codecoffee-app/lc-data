{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703902,
            "title": "Star elements",
            "titleSlug": "start-elements3447",
            "content": "<p><span style=\"font-size: 18px;\">Given an unsorted array <strong>arr</strong>. Find all the star elements in the array. Star elements are those elements that are strictly greater than all the elements on its right side.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Note: </strong>Assume the first element is greater than all the elements on its left side and the last element is greater than all the elements on its right side.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr[] = [1, 6, 5, 4, 7, 8, 4, 3, 2, 1]\n<strong>Output:</strong> [8, 4, 3, 2, 1] \n<strong>Explanation:</strong> Star elements are 8, 4, 3, 2 and 1.\n</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr[] = [1, 2, 10, 3, 4, 5, 8, 10, 4]\n<strong>Output:</strong> [10, 4] \n<strong>Explanation:</strong> Star elements are 10 and 4.\n</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong>&nbsp;O(n)<br /><strong>Expected Auxiliary Space:</strong> O(n)</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &lt;= arr.size() &lt;= 10<sup>6</sup><br />0 &lt;= arr[i] &lt;= 10<sup>6</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an unsorted array `arr`, find all the star elements in the array. A star element is defined as an element that is strictly greater than all elements to its right. Assume the last element is always a star element.",
                "constraints": [
                    "1 <= arr.length <= 10^6",
                    "0 <= arr[i] <= 10^6"
                ],
                "testcases": [
                    {
                        "input": "[1, 6, 5, 4, 7, 8, 4, 3, 2, 1]",
                        "output": "[8, 4, 3, 2, 1]",
                        "explanation": "The star elements are 8 (greater than 4,3,2,1), 4 (greater than 3,2,1), 3 (greater than 2,1), 2 (greater than 1), and 1 (last element)."
                    },
                    {
                        "input": "[1, 2, 10, 3, 4, 5, 8, 10, 4]",
                        "output": "[10, 4]",
                        "explanation": "The star elements are 10 (greater than 3, 4, 5, 8, 10, 4) and 4 (last element)."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Traverse from back the compare current element with the maximum element on the right part.</p>",
            "<p>Traverse from last and push all elements that is greater than the stack top. These are star elements. If there is a element present same as max element then super star is not present, otherwise maximum element is the super star element.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [
            "amazon"
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "// User function template for C++\nclass Solution {\n  public:\n    vector<int> getStar(vector<int>& arr) {\n        int n = arr.size();\n        int curmax = arr[n - 1];\n        int count = 1;\n        for (int i = n - 2; i >= 0; i--) {\n            if (arr[i] > curmax) {\n                count++;\n                curmax = arr[i];\n            }\n        }\n        vector<int> ans(count);\n        curmax = arr[n - 1];\n        ans[--count] = arr[n - 1];\n        for (int i = n - 2; i >= 0; i--) {\n            if (arr[i] > curmax) {\n                curmax = arr[i];\n                ans[--count] = curmax;\n            }\n        }\n\n        return ans;\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "// User function Template for Java\nclass Solution {\n    static ArrayList<Integer> getStar(int[] arr) {\n        int n = arr.length;\n        int curmax = arr[n - 1];\n        int count = 1;\n\n        // First pass to determine how many elements will be in the result\n        for (int i = n - 2; i >= 0; i--) {\n            if (arr[i] > curmax) {\n                count++;\n                curmax = arr[i];\n            }\n        }\n\n        ArrayList<Integer> ans = new ArrayList<>(count);\n        curmax = arr[n - 1];\n        ans.add(curmax);\n\n        // Second pass to populate the ArrayList\n        for (int i = n - 2; i >= 0; i--) {\n            if (arr[i] > curmax) {\n                curmax = arr[i];\n                ans.add(0, curmax); // Insert at the beginning to maintain order\n            }\n        }\n\n        return ans;\n    }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": "#User function Template for python3\nclass Solution:\n\n    def getStar(self, arr):\n        n = len(arr)\n        curmax = arr[-1]\n        ans = [curmax]\n\n        # Iterate from the second last element to the beginning\n        for i in range(n - 2, -1, -1):\n            if arr[i] > curmax:\n                ans.append(arr[i])\n                curmax = arr[i]\n\n        # The array is constructed in reverse order, so we need to reverse it\n        return ans[::-1]\n",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "//Back-end complete function Template for javascript\nclass Solution {\n    getStar(arr) {\n        const n = arr.length;\n        let curmax = arr[n - 1];\n        const ans = [ curmax ];\n\n        // Iterate from the second last element to the beginning\n        for (let i = n - 2; i >= 0; i--) {\n            if (arr[i] > curmax) {\n                ans.push(arr[i]);\n                curmax = arr[i];\n            }\n        }\n\n        // The array is constructed in reverse order, so we need to reverse it\n        return ans.reverse();\n    }\n}\n",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}