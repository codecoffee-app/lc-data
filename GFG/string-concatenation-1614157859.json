{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 706551,
            "title": "String Concatenation",
            "titleSlug": "string-concatenation-1614157859",
            "content": "<p><span style=\"font-size:18px\">You are given two strings s1 and s2 and your task is to concatenate both in s1.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Note:</strong>&nbsp;You may assume s1 will always&nbsp;have extra spaces to concatenate&nbsp;s2.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong> s1 = &quot;Hello&quot;, s2 = &quot;World&quot;\n<strong>Output:</strong> HelloWorld\n\n</span></pre>\n\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong> s1 = &quot;abc&quot;, s2 = &quot;def&quot;\n<strong>Output:</strong> abcdef</span></pre>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:&nbsp;&nbsp;</strong><br />\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>concat()</strong>&nbsp;which takes the two strings<strong> </strong>as input and prints string s1 after concatenation.<br />\n<br />\n<strong>Constraints:</strong><br />\n1 &le; |s1|, |s2| &le; 10</span><sup><span style=\"font-size:15px\">3</span></sup><br />\n<span style=\"font-size:18px\">The string contains lower case English alphabets</span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p>Use strcat().</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C",
                "full_func": "//Back-end complete function Template for C\n\nvoid concat(char s1[], char s2[])\n{\n    strcat(s1, s2);\n    printf(\"%s\\n\", s1);\n}\n ",
                "lang_text": "c"
            }
        ],
        "platform": "GFG"
    }
}