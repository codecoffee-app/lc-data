{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703248,
            "title": "String Conversion",
            "titleSlug": "string-conversion4603",
            "content": "<p><span style=\"font-size:18px\">Given two strings X and Y, the task is to check if it is possible to convert X to Y by performing the following operations.</span></p>\r\n\r\n<ul>\r\n\t<li><span style=\"font-size:18px\">&nbsp;Make some lowercase letters uppercase.</span></li>\r\n\t<li><span style=\"font-size:18px\">&nbsp;Delete all the lowercase letters.</span></li>\r\n</ul>\r\n\r\n<p><span style=\"font-size:18px\"><strong>NOTE:</strong> You can perform one,two or none operations to convert the string X to Y as needed.<br />\r\n<strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong> X = &quot;daBcd&quot;, Y = &quot;ABC&quot;\r\n<strong>Output:</strong> 1\r\n<strong>Explanation:</strong> Convert &#39;a&#39; and &#39;c&#39;, delete\r\nboth the d&#39;s</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong> X = &quot;ABcd&quot;, Y = &quot;BCD&quot;\r\n<strong>Output:</strong> 0\r\n<strong>Explanation:</strong> Can not delete A</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:&nbsp;&nbsp;</strong><br />\r\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>stringConversion()</strong>&nbsp;which takes the strings<strong> </strong>as input and returns 1 if it is possible to convert, otherwise 0.</span></p>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong>&nbsp;O(|X|*|Y|)<br />\r\n<strong>Expected Auxiliary Space:</strong>&nbsp;O(|X|*|Y|)<br />\r\n<br />\r\n<strong>Constraints:</strong><br />\r\n1 &le; |X|, |Y| &le; 10<sup>3</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two strings X and Y, determine if it's possible to transform X into Y using the following operations:\n\n*   Convert lowercase letters in X to uppercase.\n*   Delete lowercase letters from X.\n\nYou can apply one, both, or neither operation as needed to achieve the conversion.",
                "constraints": [
                    "1 <= |X|, |Y| <= 10^3"
                ],
                "testcases": [
                    {
                        "input": "X = \"daBcd\", Y = \"ABC\"",
                        "output": "1",
                        "explanation": "Convert 'a' to 'A' and 'c' to 'C', then delete the two 'd's."
                    },
                    {
                        "input": "X = \"ABcd\", Y = \"BCD\"",
                        "output": "0",
                        "explanation": "It's impossible to delete 'A' because it is already uppercase."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>1. Use dynamic programming</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function template for C++\r\n\r\nclass Solution{\r\npublic:\r\n\t\r\n\tint stringConversion(string X, string Y)\r\n\t{\r\n\t\t// calculates length\r\n\t\tint n = X.length();\r\n\t\tint m = Y.length();\r\n\r\n\t\tint dp[n + 1][m + 1];\r\n\t\tfor (int i = 0; i <= n; i++) {\r\n\t\t\tfor (int j = 0; j <= m; j++) {\r\n\t\t\t\tdp[i][j] = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// mark 1st position as true\r\n\t\tdp[0][0] = 1;\r\n\r\n\t\t// traverese for all DPi, j\r\n\t\tfor (int i = 0; i < X.length(); i++) {\r\n\t\t\tfor (int j = 0; j <= Y.length(); j++) {\r\n\r\n\t\t\t\t// if possible for to convert i \r\n\t\t\t\t// characters of s1 to j characters\r\n\t\t\t\t// of s2\r\n\t\t\t\tif (dp[i][j]) {\r\n\r\n\t\t\t\t\t// if upper_case(s1[i])==s2[j]\r\n\t\t\t\t\t// is same\r\n\t\t\t\t\tif (j < Y.length() && \r\n\t\t\t\t\t\t(toupper(X[i]) == Y[j]))\r\n\t\t\t\t\t\tdp[i + 1][j + 1] = 1;\r\n\r\n\t\t\t\t\t// if not upper then deletion is \r\n\t\t\t\t\t// possible\r\n\t\t\t\t\tif (!isupper(X[i]))\r\n\t\t\t\t\t\tdp[i + 1][j] = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn (dp[n][m]);\r\n\t}\r\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}