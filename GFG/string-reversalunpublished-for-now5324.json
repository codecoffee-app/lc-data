{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703137,
            "title": "String Reversal",
            "titleSlug": "string-reversalunpublished-for-now5324",
            "content": "<p><span style=\"font-size:18px\">Given a string, say <strong>S</strong>, print it in reverse manner eliminating the repeated characters and spaces.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong> S = &quot;GEEKS FOR GEEKS&quot;\n<strong>Output:</strong> &quot;SKEGROF&quot;\n</span>\n</pre>\n\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong> S = &quot;I AM AWESOME&quot;</span><span style=\"font-size:18px\">\n<strong>Output:</strong> &quot;EMOSWAI&quot;</span><span style=\"font-size:18px\">\n</span>\n</pre>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nYou don&#39;t need to read input or print anything. Your task is to complete the function&nbsp;<strong>reverseString()&nbsp;</strong>which takes a string S as input parameter and returns a modified string.&nbsp;</span></p>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Expected Time Complexity:&nbsp;</strong>O(|S|), where |S| denotes length of string.<br />\n<strong>Expected Auxiliary Space:&nbsp;</strong>O(1).</span></p>\n\n<p>&nbsp;</p>\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string `S`, reverse the string, removing any repeated characters and spaces.  The resulting string should contain only unique characters in reverse order of their last appearance in the original string.",
                "constraints": [],
                "testcases": [
                    {
                        "input": "GEEKS FOR GEEKS",
                        "output": "SKEGROF",
                        "explanation": "The string \"GEEKS FOR GEEKS\" reversed is \"SKEEG ROF SKEEG\". Removing repeated characters and spaces yields \"SKEGROF\"."
                    },
                    {
                        "input": "I AM AWESOME",
                        "output": "EMOSWAI",
                        "explanation": "The string \"I AM AWESOME\" reversed is \"EMOSEWA MA I\". Removing repeated characters and spaces yields \"EMOSWAI\"."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Traverse the string from right to left</p>"
        ],
        "relatedTopics": [
            {
                "name": "Hash",
                "slug": "hash"
            },
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Map",
                "slug": "map"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [
            "samsung"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "string reverseString(string s)\n{\n    // creating bool array for hashing\n    bool arr[26];\n    // initialising bool array.\n    for(int i = 0;i<26;i++)\n        arr[i] = false;\n        \n    string res=\"\";\n    // traversing string from left to right\n    // skipping spaces and repeated characters.\n    for(int i = s.length() - 1 ; i>=0; i--)\n        {\n            if(s[i]!=' ' && arr[ s[i]- 'A' ]==false )\n                {\n                   res+=s[i];\n                    arr[ s[i]- 'A' ] = true;\n                }\n                \n        }\n    return res;    \n}\n",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution\n{\n    public String reverseString(String s)\n    {\n        String ans=\"\";\n        int present[]=new int[26];\n        Arrays.fill(present,0);\n        for(int i=s.length()-1;i>=0;i--){\n            if(s.charAt(i)==' ' || present[s.charAt(i)-'A']==1) \n                continue;\n            present[s.charAt(i)-'A']=1;\n            ans+=s.charAt(i);\n        }\n        return ans;\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "class Solution:\n    def reverseString(self, s):\n        ans=''  #initialize an empty string to store the reversed string\n        present=[0]*26  #initialize a list to keep track of the presence of each letter\n        for i in reversed(s):  #iterate through the string in reversed order\n            if i==' ' or present[ord(i)-ord('A')]==1:  #if the character is a space or already present, skip it\n                continue\n            present[ord(i)-ord('A')]=1  #mark the presence of the character\n            ans+=i  #add the character to the reversed string\n        return ans  #return the reversed string",
                "lang_text": "py"
            },
            {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n/**\n * @param {string} s\n * @return {string}\n */\n\nclass Solution {\n    //Function to reverse a string.\n    reverseString(s)\n    {\n        let ans=''; //initialize an empty string to store the reversed string\n        let present= new Array(26).fill(0);  //initialize a list to keep track of the presence of each letter\n        for(let i = s.length-1; i>=0; i--) {  //iterate through the string in reversed order\n            if(s[i] === ' ' || present[s.charCodeAt(i)-'A'.charCodeAt(0)] === 1) {  //if the character is a space or already present, skip it\n                continue;\n            }\n            present[s.charCodeAt(i)-'A'.charCodeAt(0)] = 1;  //mark the presence of the character\n            ans += s[i];  //add the character to the reversed string\n        }\n        return ans;  //return the reversed string\n    }\n}",
                "lang_text": "javascript"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    //Function to reverse a string.\n    public string reverseString(string s)\n    {\n        // creating bool array for hashing\n        bool[] arr = new bool[26];\n        // initialising bool array.\n        for (int i = 0; i < 26; i++)\n            arr[i] = false;\n\n        string res = \"\";\n        // traversing string from left to right\n        // skipping spaces and repeated characters.\n        for (int i = s.Length - 1; i >= 0; i--)\n        {\n            if (s[i] != ' ' && char.IsLetter(s[i]) && arr[char.ToUpper(s[i]) - 'A'] == false)\n            {\n                res += s[i];\n                arr[char.ToUpper(s[i]) - 'A'] = true;\n            }\n        }\n        return res;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}