{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 700841,
            "title": "Structs and Objects",
            "titleSlug": "structs-and-objects",
            "content": "<p><span style=\"font-size:18px\">CPP structs are more powerful than C structs as they are just classes with public data members. Here, we will create <strong>objects </strong>of a rectangle <strong>struct </strong>and find the<strong> maximum area of a rectangle</strong>. We have <strong>N</strong> rectangles out of which we have to find maximum area among all of them.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong> <strong> </strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\nN = 4\n9 8 \n7 6 \n5 4 \n3 2\n<strong>Output: \n</strong>72\n<strong>Explanation:</strong>\nWe have N = 4, so 4 rectangle objects.\nObj1 (9,8), Obj2(7,6), Obj3(5,4), Obj4(3,2).\nArea is length*breadth. So 9*8 = 72 gives maxArea.</span></pre>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nSince this is a function problem, you don&#39;t need to take any input. Just complete the <strong>area </strong>and <strong>maxArea </strong>functions. In a new line, print the maximum area.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\n1 &lt;= length &lt;= 100<br />\n1 &lt;= breadth &lt;= 100</span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "C++ structs, functioning as classes with public data members, offer enhanced capabilities compared to C structs. In this problem, you will work with rectangle struct objects to determine the maximum area among a given set of rectangles. You are provided with N rectangles, and your task is to identify the rectangle with the largest area.",
                "constraints": [
                    "1 <= length <= 100",
                    "1 <= breadth <= 100"
                ],
                "testcases": [
                    {
                        "input": "N = 4\n9 8 \n7 6 \n5 4 \n3 2",
                        "output": "72",
                        "explanation": "Given 4 rectangles with dimensions (9,8), (7,6), (5,4), and (3,2), the areas are calculated as follows: 9*8=72, 7*6=42, 5*4=20, and 3*2=6. The maximum area among these is 72."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:14px\">1. Useful to know how to access members of structures in C++.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Class",
                "slug": "class"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "// Function to calculate the area of a rectangle\nint area(Rectangle r)\n{\n    return r.length*r.breadth;\n}\n\n// Function to find the maximum area among a given array of rectangles\nvoid maxArea(Rectangle arr[],int n)\n{\n    int maxarr=INT_MIN;\n    for(int i=0;i<n;i++)\n    {\n        // calculating the area of the current rectangle\n        int curr_area=area(arr[i]);\n        // updating the maximum area if the current area is greater\n        maxarr=max(curr_area,maxarr);\n    }\n    \n    // Printing the maximum area\n    cout<<maxarr;\n    // Adding a new line after printing the maximum area\n    cout<<endl;\n}",
                "lang_text": "cpp"
            }
        ],
        "platform": "GFG"
    }
}