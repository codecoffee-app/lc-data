{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705718,
            "title": "Student record",
            "titleSlug": "student-record1752",
            "content": "<p><span style=\"font-size:18px\">A file contains data as follows : {Student name, marks in 3 subjects}.<br />\nThere are N students in a class. Find the student who has maximum average score.<br />\n<strong>Note: </strong>The average score is always floored.</span></p>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\n<span style=\"font-size:18px\"><strong>N = </strong>2</span>\n<strong><span style=\"font-size:18px\">S = </span></strong><span style=\"font-size:18px\">{&quot;Shrikanth 20 30 10&quot;, &quot;</span><span style=\"font-size:18px\">Ram 100 50 10&quot;}</span>\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\n<span style=\"font-size:18px\">Ram 53</span>\n<span style=\"font-size:18px\"><strong>Explantion:</strong></span>\n<span style=\"font-size:18px\">Shrikanth has an average of 20, whereas\nRam has a average of 53. So, Ram has the\nmaximum average.</span></pre>\n\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\n<span style=\"font-size:18px\"><strong>N = </strong>3</span>\n<strong><span style=\"font-size:18px\">S = </span></strong><span style=\"font-size:18px\">{&quot;Adam 50 10 40&quot;, &quot;Rocky 100 90 10&quot;, &quot;Suresh 10 90 100</span><span style=\"font-size:18px\">&quot;}</span>\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\n<span style=\"font-size:18px\">Rocky Suresh 66</span>\n<span style=\"font-size:18px\"><strong>Explantion:</strong></span>\n<span style=\"font-size:18px\">Rocky and Suresh both have an average of 66, which is the\nhighest in the class.</span></pre>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>studentRecord()</strong> which takes an Integer N and a vector of vector of strings where each string vector contains 4 space separated inputs, the first being the name of the student and the rest being the marks of the student. The function should return a string consisting of two or more words where the last word is the max average of the class and the preceding words are names of student/s who have the max average. The names of the students should appear in the same order as they are given in the Input.</span></p>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(N)<br />\n<strong>Expected Auxiliary Space:</strong> O(N)</span></p>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong></span><br />\n<span style=\"font-size:18px\">1 &lt;= N &lt;= 10<sup>4</sup><br />\n1 &lt;= marks &lt;= 100<br />\n1 &lt;= Length of the Name &lt;= 10</span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a list of students and their marks in three subjects, find the student(s) with the highest average score. The average score is calculated as the floor of the sum of the three marks divided by 3.",
                "constraints": [
                    "1 <= N <= 10^4 (N is the number of students)",
                    "1 <= marks <= 100 (Marks in each subject)",
                    "1 <= Length of the Name <= 10 (Length of student's name)"
                ],
                "testcases": [
                    {
                        "input": "N = 2, S = {\"Shrikanth 20 30 10\", \"Ram 100 50 10\"}",
                        "output": "Ram 53",
                        "explanation": "Shrikanth has an average of floor((20 + 30 + 10) / 3) = 20. Ram has an average of floor((100 + 50 + 10) / 3) = 53.  Since Ram's average is higher, the output is \"Ram 53\"."
                    },
                    {
                        "input": "N = 3, S = {\"Adam 50 10 40\", \"Rocky 100 90 10\", \"Suresh 10 90 100\"}",
                        "output": "Rocky Suresh 66",
                        "explanation": "Adam has an average of floor((50 + 10 + 40) / 3) = 33. Rocky has an average of floor((100 + 90 + 10) / 3) = 66. Suresh has an average of floor((10 + 90 + 100) / 3) = 66.  Since Rocky and Suresh both have the highest average of 66, the output is \"Rocky Suresh 66\"."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Be careful to store the floor value of the average</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "amazon"
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function template in C++\n\nclass Solution {\n  public:\n    //Function to find the student with the highest average score.\n    string studentRecord(vector<vector<string>> S, int N) {\n        \n        //declaring vector to store the student names with highest average score.\n        vector<string> ans;\n        //variable to store the maximum average score.\n        int mx = -1;\n\n        //iterating over all the students.\n        for(int i=0; i<N; i++)\n        {\n            //calculating average score for the current student.\n            int avg = (stoi(S[i][1])+stoi(S[i][2])+stoi(S[i][3])) / 3;\n\n            //if the current student's average score is greater than\n            //the maximum average score so far, update the answer array\n            //and maximum score.\n            if(avg > mx)\n            {\n                ans.clear();\n                ans.push_back(S[i][0]);\n                mx = avg;\n            }\n            //if the current student's average score is equal to the\n            //maximum average score so far, add the name of the student\n            //to the answer array.\n            else if(avg == mx)\n                ans.push_back(S[i][0]);\n        }\n\n        //string to store the final result.\n        string r;\n\n        //constructing the final result string by concatenating\n        //the student names with a space delimiter.\n        for(int i=0; i<ans.size(); i++)\n        {\n            r += ans[i];\n            r += \" \";\n        }\n\n        //adding the maximum average score to the result string.\n        r += to_string(mx);\n\n        //returning the final result string.\n        return r;\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}