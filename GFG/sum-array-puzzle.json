{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 700931,
            "title": "Sum Array Puzzle",
            "titleSlug": "sum-array-puzzle",
            "content": "<p><span style=\"font-size: 18px;\">Given an array <strong>arr[]</strong> of integers, change the given array such that at any index <strong>i </strong>it contains the sum of all elements except itself. Simple way <strong>arr[i]</strong> should be arr[0] + arr[1] ... arr[i-1] + arr[i+1] ... arr[n-1].</span></p>\n<pre><span style=\"font-size: 18px;\"><strong><span style=\"font-size: 18px;\">Input:</span> </strong>arr[] =<strong> </strong>[</span><span style=\"font-size: 18px;\">3, 6, 4, 8, 9]</span>\n<span style=\"font-size: 18px;\"><strong>Output:</strong> [27, 24, 26, 22, 21]</span>\n<span style=\"font-size: 18px;\"><strong>Explanation:</strong> For the sum array, at i=0 we have 6+4+8+9. At i=1, 3+4+8+9. At i=2, we have 3+6+8+9. At i=3, we have 3+6+4+9. At i = 4, we have 3+6+4+8. So S is 27 24 26 22 21.</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong><span style=\"font-size: 18px;\">Input:</span></strong> arr[] =<strong> </strong>[</span><span style=\"font-size: 18px;\">0, 0, 1]</span>\n<span style=\"font-size: 18px;\"><strong>Output:</strong> [1,</span><span style=\"font-size: 18px;\"> 1, 0]<br /><strong>Explantion</strong>: At i = 0 sum = 0 + 1 = 1, At i = 1 sum = 0 + 1 = 1, At i = 2 sum = 0 + 0 = 0. </span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraint :</strong></span><span style=\"font-size: 18px;\"><br />1 &lt;= arr.size() &lt;= 10<sup>6</sup><br />1 &lt;= arr[i]&lt;= 10<sup>8</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of integers, modify the array such that each element at index 'i' becomes the sum of all other elements in the original array, excluding the element at index 'i'.",
                "constraints": [
                    "1 <= arr.size() <= 10^6",
                    "1 <= arr[i] <= 10^8"
                ],
                "testcases": [
                    {
                        "input": "[3, 6, 4, 8, 9]",
                        "output": "[27, 24, 26, 22, 21]",
                        "explanation": "For the element at index 0, the sum is 6 + 4 + 8 + 9 = 27.  For the element at index 1, the sum is 3 + 4 + 8 + 9 = 24. For the element at index 2, the sum is 3 + 6 + 8 + 9 = 26. For the element at index 3, the sum is 3 + 6 + 4 + 9 = 22. Finally, for the element at index 4, the sum is 3 + 6 + 4 + 8 = 21."
                    },
                    {
                        "input": "[0, 0, 1]",
                        "output": "[1, 1, 0]",
                        "explanation": "For the element at index 0, the sum is 0 + 1 = 1. For the element at index 1, the sum is 0 + 1 = 1. For the element at index 2, the sum is 0 + 0 = 0."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>First store the sum of all elements in a variable, then can you tell what to remove at each index <strong>i</strong> to get the answer?</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\n// Function to find the sum of elements in the array.\nclass Solution {\n  public:\n\n    void sumArray(vector<int> &arr) {\n        int n = arr.size();\n        int sum = 0;\n        for (int i = 0; i < n; i++)\n            sum += arr[i];\n\n        // Calculating the difference between the sum of elements and each element\n        // and updating the array with the differences.\n        for (int i = 0; i < n; i++)\n            arr[i] = sum - arr[i];\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n    public void sumArray(List<Integer> arr) {\n        int sum = arr.stream().mapToInt(Integer::intValue).sum();\n        for (int i = 0; i < arr.size(); i++) {\n            arr.set(i, sum - arr.get(i));\n        }\n    }\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": "class Solution:\n\n    def sumArray(self, arr):\n        total_sum = sum(arr)\n        arr[:] = [total_sum - x for x in arr]\n",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "class Solution {\n    sumArray(arr) {\n        let sum = arr.reduce((acc, val) => acc + val, 0);\n        for (let i = 0; i < arr.length; i++) {\n            arr[i] = sum - arr[i];\n        }\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}