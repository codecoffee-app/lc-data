{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705107,
            "title": "Sum of average of all subsets",
            "titleSlug": "sum-of-average-of-all-subsets3209",
            "content": "<p><span style=\"font-size:18px\">Given an array&nbsp;of N integer elements, the task is to find sum of average of all subsets of this array.</span><br />\r\n&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input: </strong>nums = {1, 2, 3}\r\n<strong>Output: </strong>14.000000\r\n<strong>Explanation:</strong>&nbsp;{1}, {2}, {3},\r\n{1, 2}, {2, 3}, {1, 3}, {1, 2, 3}\r\n</span><span style=\"font-size:18px\">So average will be 1, 2, 3, 1.5, \r\n2.5, 2 and 2. Hence summation will be\r\n1 + 2 + 3 + 1.5 + 2.5 + 2 + 2 = 14.0</span>\r\n</pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input: </strong>nums = {2, 5}\r\n<strong>Output: </strong>10.500000\r\n<strong>Explanation: </strong>{2}, {5}, {2, 5}. So average\r\nwill be 2, 5 and 3.5. Sum = 2 + 5 + 3.5 = 10.5</span>\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou don&#39;t need to read or print anyhting. Your task is to complete the function&nbsp;<strong>AverageOfAllSubsets()&nbsp;</strong>which takes the array as input parameter and returns the sum of average of all subsets of the array.</span><br />\r\n&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:&nbsp;</strong>O(n<sup>3</sup>)<br />\r\n<strong>Expected Space Compelxity:&nbsp;</strong>O(n<sup>2</sup>)</span><br />\r\n&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n1 &le; n &le; 20</span><br />\r\n<span style=\"font-size:18px\">1 &le; elements of array &le; 100</span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array of N integer elements, calculate the sum of the averages of all possible subsets of the array.",
                "constraints": [
                    "1 <= n <= 20",
                    "1 <= elements of array <= 100"
                ],
                "testcases": [
                    {
                        "input": "{1, 2, 3}",
                        "output": "14.000000",
                        "explanation": "The subsets are {1}, {2}, {3}, {1, 2}, {2, 3}, {1, 3}, {1, 2, 3}.  Their averages are 1, 2, 3, 1.5, 2.5, 2, and 2 respectively.  The sum of these averages is 1 + 2 + 3 + 1.5 + 2.5 + 2 + 2 = 14.0"
                    },
                    {
                        "input": "{2, 5}",
                        "output": "10.500000",
                        "explanation": "The subsets are {2}, {5}, {2, 5}. Their averages are 2, 5, and 3.5 respectively. The sum is 2 + 5 + 3.5 = 10.5"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Find how many time each elements occur in all the subsets.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "\r\nclass Solution{\r\n\tpublic:\r\n\tint nCr(int n, int k)\r\n\t{\r\n\t    int C[n+1][k+1];\r\n\t    int i, j;\r\n\t \r\n\t    // Calculate value of Binomial Coefficient in bottom\r\n\t    // up manner\r\n\t    for (i = 0; i <= n; i++)\r\n\t    {\r\n\t        for (j = 0; j <= min(i, k); j++)\r\n\t        {\r\n\t            // Base Cases\r\n\t            if (j == 0 || j == i)\r\n\t                C[i][j] = 1;\r\n\t \r\n\t            // Calculate value using previously stored\r\n\t            // values\r\n\t            else\r\n\t                C[i][j] = C[i-1][j-1] + C[i-1][j];\r\n\t        }\r\n\t    }\r\n\t    return C[n][k];\r\n\t}\r\n\t \r\n\t//  method returns sum of average of all subsets\r\n\tdouble AverageOfAllSubsets(vector<int>nums)\r\n\t{\r\n\t\tint N = nums.size();\r\n\t    double result = 0.0; // Initialize result\r\n\t \r\n\t    // Find sum of elements\r\n\t    int sum = 0;\r\n\t    for (int i = 0; i < N; i++)\r\n\t         sum += nums[i];\r\n\t \r\n\t    //  looping once for all subset of same size\r\n\t    for (int n = 1; n <= N; n++)\r\n\t \r\n\t        /* each element occurs nCr(N-1, n-1) times while\r\n\t           considering subset of size n  */\r\n\t        result += (double)(sum * (nCr(N - 1, n - 1))) / n;\r\n\t \r\n\t    return result;\r\n\t}\r\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}