{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703808,
            "title": "Sum of Consecutives",
            "titleSlug": "sum-of-consecutives1030",
            "content": "<p><span style=\"font-size:18px\">Given a number n, the task is to check whether it can be expressed as a sum of two or more consecutive numbers or not.<br />\r\n<strong>NOTE:&nbsp;</strong>Return</span>&nbsp;<span style=\"font-size:18px\">&quot;1&quot; if number can be expressed as sum of consecutives else &quot;0&quot;. (Without the&nbsp;double quotes)</span><br />\r\n<br />\r\n<span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input</strong>: n = 10\r\n<strong>Output:</strong>&nbsp;1&nbsp;\r\n<strong>Explanation</strong>: It can be expressed as sum of \r\ntwo or more consecutive numbers 1+2+3+4.</span><span style=\"font-size:18px\">\r\n</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong> n = 16\r\n<strong>Output:&nbsp;</strong>0\r\n<strong>Explanation</strong>: It cannot be expressed as \r\nsum of two or more consecutive numbers.</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:&nbsp;&nbsp;</strong><br />\r\nYou dont need to read input or print anything. Complete the function <strong>canBeSumofConsec</strong></span><span style=\"font-size:18px\"><strong>()&nbsp;</strong>which takes n&nbsp;as input parameter and returns&nbsp;</span>&nbsp;<span style=\"font-size:18px\">1&nbsp;if number can be expressed as sum of consecutives else 0.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(1)<br />\r\n<strong>Expected Auxiliary Space:</strong> O(1)</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n1&lt;= n&nbsp;&lt;=10<sup>18</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a number 'n', determine if it can be expressed as the sum of two or more consecutive positive integers. Return \"1\" if it can, otherwise return \"0\".",
                "constraints": [
                    "1 <= n <= 10^18"
                ],
                "testcases": [
                    {
                        "input": "10",
                        "output": "1",
                        "explanation": "10 can be expressed as 1 + 2 + 3 + 4."
                    },
                    {
                        "input": "16",
                        "output": "0",
                        "explanation": "16 cannot be expressed as the sum of two or more consecutive positive integers."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">If&nbsp; a number is power of 2 then it cannot be represented as sum of two or more consecutive number.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Bit Magic",
                "slug": "bit-magic"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\r\nclass Solution {\r\n  public:\r\n    long long int canBeSumofConsec(long long int n) { \r\n    // We basically return false if n is a \r\n    // power of two \r\n    return ((n&(n-1)) && n); \r\n    }\r\n \r\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}