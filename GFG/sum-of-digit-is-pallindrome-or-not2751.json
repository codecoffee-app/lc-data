{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703922,
            "title": "Sum of Digit is Palindrome or not",
            "titleSlug": "sum-of-digit-is-pallindrome-or-not2751",
            "content": "<p><span style=\"font-size: 18px;\">Given a number&nbsp;<strong>n</strong>. Return <strong>true </strong>if the digit sum(or sum of digits) of n is a Palindrome number otherwise <strong>false</strong>.</span></p>\n<blockquote>\n<p><span style=\"font-size: 18px;\">A Palindrome number is a number that stays the same when reversed<br /></span></p>\n</blockquote>\n<p><strong><span style=\"font-size: 18px;\">Examples:</span></strong></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>n = 56\n<strong>Output: </strong>true\n<strong>Explanation: </strong>The digit sum of 56 is 5+6 = 11. Since, 11 is a palindrome number.Thus, answer is true.</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>n = 98\n<strong>Output: </strong>false\n<strong>Explanation: </strong>The digit sum of 98 is 9+8 = 17. Since 17 is not a palindrome,thus, answer is false.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &lt;= n &lt;= 10<sup>9</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a number `n`, determine if the sum of its digits is a palindrome. A palindrome number reads the same forwards and backward.",
                "constraints": [
                    "1 <= n <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "56",
                        "output": "true",
                        "explanation": "The digit sum of 56 is 5 + 6 = 11.  Since 11 is a palindrome, the result is true."
                    },
                    {
                        "input": "98",
                        "output": "false",
                        "explanation": "The digit sum of 98 is 9 + 8 = 17. Since 17 is not a palindrome, the result is false."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">First figure out the digit sum of the number and check whether it is a palindrome or not.</span></p>",
            "<p><span style=\"font-size:18px\">To check for palindrome, Reverse the number and see if it is equal to the original number.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "snapdeal"
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nclass Solution {\n  public:\n    bool isDigitSumPalindrome(int n) {\n        int newNum = 0;\n        // Finding out the digit sum\n        while (n) {\n            newNum += n % 10;\n            n /= 10;\n        }\n        int reversedNewNum = 0;\n        n = newNum;\n        // Reversing n and storing it in reversedNewNum\n        while (n) {\n            reversedNewNum = (reversedNewNum * 10) + (n % 10);\n            n /= 10;\n        }\n        if (reversedNewNum == newNum)\n            return true;\n\n        return false;\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\nclass Solution {\n    boolean isDigitSumPalindrome(int n) {\n        int newNum = 0;\n        // Finding out the digit sum\n        while (n > 0) {\n            newNum += n % 10;\n            n /= 10;\n        }\n        int reversedNewNum = 0;\n        n = newNum;\n        //\n        while (n > 0) {\n            reversedNewNum = (reversedNewNum * 10) + (n % 10);\n            n /= 10;\n        }\n        return (reversedNewNum == newNum ? true : false);\n    }\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\n\nclass Solution:\n\n    def isDigitSumPalindrome(self, n):\n        newNum = 0\n        #calculating Digit Sum\n        while (n > 0):\n            newNum += n % 10\n            n //= 10\n        reversedNewNum = 0\n        n = newNum\n        #reversing newNum\n        while (n > 0):\n            reversedNewNum = reversedNewNum * 10 + n % 10\n            n //= 10\n        return True if reversedNewNum == newNum else False\n",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "//Back-end complete function Template for javascript\nclass Solution {\n    isDigitSumPalindrome(n) {\n        let sum = 0; // Initialize a variable to store the sum of digits.\n        while (n > 0) {\n            sum += n % 10;          // Add the last digit of N to the sum.\n            n = Math.floor(n / 10); // Remove the last digit of N.\n        }\n        let s = \"\"; // Initialize an empty string to store the sum as a string.\n        s += sum;   // Convert the sum to a string and store it in s.\n        let l = 0;  // Initialize a pointer to the leftmost character of s.\n        let r = s.length - 1; // Initialize a pointer to the rightmost character of s.\n        while (l < r) {\n            if (s[l] != s[r]) { // If the characters at l and r are not equal, return 0.\n                return false;\n            }\n            l++; // Move the left pointer to the right.\n            r--; // Move the right pointer to the left.\n        }\n        return true; // If all characters match, return 1 to indicate that the sum is a\n                     // palindrome.\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}