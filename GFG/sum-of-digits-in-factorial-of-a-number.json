{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 700565,
            "title": "Sum of digits in factorial of a number",
            "titleSlug": "sum-of-digits-in-factorial-of-a-number",
            "content": "<p><span style=\"font-size: 18px;\">Given a number n, write code to find the sum of digits in the factorial of the number.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Input:</strong><br />The first line of input contains an integer T denoting the number of test cases. Then T test cases follow. Each test case contains an integer n, the number.<br /><br /><strong>Output:</strong><br />Print the sum of digits in the factorial of the number.</span></p>\n<p><span style=\"font-size: 18px;\"><br /><br /><strong>Constraints:</strong><br />1&lt;=T&lt;=1000<br />1&lt;=n&lt;=5000<br /><br /><strong>Example:<br />Input:</strong><br />2<br />10<br />100<br /><br /><strong>Output:</strong><br />27<br />648</span></p>\n<p><strong><span style=\"font-size: 18px;\">Explanation:</span></strong></p>\n<p><strong><span style=\"font-size: 18px;\">10 factorial is </span></strong><span style=\"background-color: #ffffff; color: #333333; font-family: Arial, sans-serif; font-size: 14.4px; text-align: center;\">3,628,800 . Hence sum of digits is 27.</span></p>\n<p>&nbsp;</p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a number n, calculate the sum of the digits in the factorial of that number.",
                "constraints": [
                    "1 <= T <= 1000",
                    "1 <= n <= 5000"
                ],
                "testcases": [
                    {
                        "input": "10",
                        "output": "27",
                        "explanation": "The factorial of 10 is 3,628,800. The sum of its digits (3 + 6 + 2 + 8 + 8 + 0 + 0) is 27."
                    },
                    {
                        "input": "100",
                        "output": "648",
                        "explanation": "The factorial of 100 has a large number of digits, and the sum of those digits equals 648."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "factorial",
                "slug": "factorial"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "// Function to multiply x with large number\n// stored in vector v. Result is stored in v.\nvoid multiply(vector<long long int> &v, long long int x)\n{\n    long long int carry = 0, res;\n    long long int size = v.size();\n    for (long long int i = 0 ; i < size ; i++)\n    {\n        // Calculate res + prev carry\n        long long int res = carry + v[i] * x;\n\n        // updation at ith position\n        v[i] = res % 10;\n        carry = res / 10;\n    }\n    while (carry != 0)\n    {\n        v.push_back(carry % 10);\n        carry /= 10;\n    }\n}\n\n// Returns sum of digits in n!\nlong long int findSumOfDigits(long long int n)\n{\n    vector<long long int> v;     // create a vector of type int\n    v.push_back(1);    // adds 1 to the end\n\n    // One by one multiply i to current vector\n    // and update the vector.\n    for (long long int i=1; i<=n; i++)\n        multiply(v, i);\n\n    // Find sum of digits in vector v[]\n    long long int sum = 0;\n    long long int size = v.size();\n    for (long long int i = 0 ; i < size ; i++)\n        sum += v[i];\n    return sum;\n}\n",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class GfG{\n\t// Method to find sum of digits of a factorial\n\tlong findSumofDigits(long n){\n\t\t// Creating a BigInteger object to store the factorial\n\t\tBigInteger b=new BigInteger(\"1\");\n\t\t\n\t\t// Calculating the factorial of the given number\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tb=b.multiply(BigInteger.valueOf(i));\n\t\t}\n\t\t\n\t\t// Converting the factorial to a string\n\t\tString s=String.valueOf(b);\n\t\t\n\t\t// Initializing a variable to store the sum of digits\n\t\tlong sum=0;\n\t\t\n\t\t// Iterating over the digits of the factorial string\n\t\tfor(int i=0;i<s.length();i++){\n\t\t\t// Converting the character to integer and adding to the sum\n\t\t\tsum+=(int)(s.charAt(i)-'0');\n\t\t}\n\t\t\n\t\t// Returning the sum of digits\n\t\treturn sum;\n\t}\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "# The function calculates the sum of digits of the factorial of a given number.\ndef findSumOfDigits(n):\n    su=1\n    \n    # Calculate the factorial of the given number\n    for i in range(1,n+1):\n        su=su*i\n        \n    # Convert the factorial into a string\n    a=str(su)\n    a1=0\n    \n    # Calculate the sum of all the digits in the factorial\n    for j in range(0,len(a)):\n        a1=a1+int(a[j])\n        \n    # Print the final sum of digits\n    print(a1)",
                "lang_text": "py"
            },
            {
                "lang": "C#",
                "full_func": "\nclass Solution\n{\n    // Function to multiply x with large number\n    // stored in list v. Result is stored in v.\n    void Multiply(List<long> v, long x)\n    {\n        long carry = 0;\n        int size = v.Count;\n        for (int i = 0; i < size; i++)\n        {\n            // Calculate res + prev carry\n            long temp = carry + v[i] * x;\n\n            // updation at ith position\n            v[i] = temp % 10;\n            carry = temp / 10;\n        }\n        while (carry != 0)\n        {\n            v.Add(carry % 10);\n            carry /= 10;\n        }\n    }\n\n    // Returns sum of digits in n!\n    public long findSumOfDigits(long n)\n    {\n        List<long> v = new List<long>(); // create a list of type long\n        v.Add(1); // adds 1 to the end\n\n        // One by one multiply i to current list\n        // and update the list.\n        for (long i = 1; i <= n; i++)\n            Multiply(v, i);\n\n        // Find sum of digits in list v[]\n        long sum = 0;\n        int size = v.Count;\n        for (int i = 0; i < size; i++)\n            sum += v[i];\n        return sum;\n    }\n}",
                "lang_text": "csharp"
            },
            {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n\n/**\n * @param {number} N\n * @return {number}\n */\nclass Solution {\n    findSumOfDigits(N) {\n        //code here\n        let factorial = BigInt(1);\n        let sumOfDigits = 0;\n        \n        // Calculate factorial\n        for (let i = 2; i <= N; i++) {\n            factorial *= BigInt(i);\n        }\n        \n        // Find sum of digits in factorial\n        while (factorial > BigInt(0)) {\n            sumOfDigits += Number(factorial % BigInt(10));\n            factorial /= BigInt(10);\n        }\n        \n        return sumOfDigits;\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}