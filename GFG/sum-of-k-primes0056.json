{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704793,
            "title": "Sum of K Primes",
            "titleSlug": "sum-of-k-primes0056",
            "content": "<p><span style=\"font-size:18px\">Given two numbers N and K. Find out if &lsquo;N&rsquo; can be written as a sum of &lsquo;K&rsquo; prime numbers.</span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input</strong>:\r\nN = 10 and K = 2\r\n<strong>Output:</strong>&nbsp;1\r\n<strong>Explanation</strong>:\r\n10 can be written as 5 + 5</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong>\r\nN = 2 and K = 2\r\n<strong>Output: </strong>0\r\n</span></pre>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Your Task:&nbsp;&nbsp;</strong><br />\r\nYou don&#39;t need to read input or print anything. Your task is to complete the function&nbsp;<strong>isSumOfKprimes()</strong>&nbsp;which takes the integer <strong>N</strong> and an integer <strong>K</strong> as input parameters and returns the <strong>true</strong> if N can be expressed as a sum of K primes else return <strong>false</strong>.</span><br />\r\n<span style=\"font-size:18px\">If function returns true, driver code will print 1 in output and 0 if the function returns false.<br />\r\n<br />\r\n<strong>Expected Time Complexity:</strong> O(SQRT(N))<br />\r\n<strong>Expected Auxiliary Space:</strong> O(1)</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n1 &lt;= N,K &lt;= 10<sup>9</sup></span></p>\r\n\r\n<p>&nbsp;</p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two numbers N and K, determine if N can be expressed as the sum of K prime numbers.",
                "constraints": [
                    "1 <= N, K <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "N = 10, K = 2",
                        "output": "1",
                        "explanation": "10 can be written as the sum of two prime numbers: 5 + 5."
                    },
                    {
                        "input": "N = 2, K = 2",
                        "output": "0",
                        "explanation": "It is not possible to represent 2 as the sum of two prime numbers."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>The idea is to use&nbsp;<a href=\"https://www.geeksforgeeks.org/program-for-goldbachs-conjecture-two-primes-with-given-sum/\">Goldbach&rsquo;s conjecture</a>&nbsp;which says that every even integer (greater than 2) can be expressed as sum of two primes.</p>\n\n<p><strong>If the N = 2K and K = 1</strong>&nbsp;: the answer will be Yes iff N is a prime number</p>\n\n<p><strong>If N &gt;= 2K and K = 2&nbsp;</strong>: If N is an even number answer will be Yes(Goldbach&rsquo;s conjecture) and if N is odd answer will be No if N-2 is not a prime number and Yes if N-2 is a prime number. This is because we know odd + odd = even and even + odd = odd. So when N is odd, and K = 2 one number must be 2 as it is the only even prime number so now the answer depends whether N-2 is odd or not.<br />\n<strong>If N &gt;= 2K and K &gt;= 3 :&nbsp;</strong>Answer will always be Yes. When N is even N &ndash; 2*(K-2) is also even so N &ndash; 2*(K &ndash; 2) can be written as sum of two prime numbers (Goldbach&rsquo;s conjecture) p, q and N can be written as 2, 2 &hellip;..K &ndash; 2 times, p, q. When N is odd N &ndash; 3 -2*(K &ndash; 3) is even so it can be written as sum of two prime numbers p, q and N can be written as 2, 2 &hellip;..K-3 times, 3, p, q</p>"
        ],
        "relatedTopics": [
            {
                "name": "number-theory",
                "slug": "number-theory"
            },
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Prime Number",
                "slug": "prime-number"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\r\npublic:\r\n    bool isprime(int x)\r\n    {\r\n        for (int i=2; i*i<=x; i++)\r\n            if (x%i == 0)\r\n                return false;\r\n        return true;\r\n    }\r\n    bool isSumOfKprimes(int N, int K)\r\n    {\r\n        if (N < 2*K)\r\n            return false;\r\n        if (K == 1)\r\n            return isprime(N);\r\n        if (K == 2)\r\n        {\r\n            if (N%2 == 0)\r\n                return true;\r\n            return isprime(N - 2);\r\n        }\r\n        return true;\r\n    }\r\n};\r\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}