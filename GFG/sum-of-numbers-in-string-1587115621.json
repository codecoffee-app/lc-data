{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 701312,
            "title": "Sum of numbers in string",
            "titleSlug": "sum-of-numbers-in-string-1587115621",
            "content": "<p><span style=\"font-size: 18px;\">Given a string&nbsp;str&nbsp;containing alphanumeric characters. The task is to calculate the sum of all the numbers present in the string.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>s = \"1abc23\"\n<strong>Output: </strong>24<strong>\nExplanation: </strong>1 and 23 are numbers in the string which is added to get the sum as 24.</span>\n</pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>s = \"geeks4geeks\"\n<strong>Output: </strong>4<strong>\nExplanation: </strong>4 is the only number, so the sum is 4.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &lt;= length of the string &lt;= 10<sup>5</sup><br />The sum of Numbers &lt;= 10<sup>5</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string `str` containing alphanumeric characters, calculate the sum of all the numbers present in the string.",
                "constraints": [
                    "1 <= length of the string <= 10^5",
                    "The sum of numbers <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "1abc23",
                        "output": "24",
                        "explanation": "The numbers in the string are 1 and 23. Their sum is 1 + 23 = 24."
                    },
                    {
                        "input": "geeks4geeks",
                        "output": "4",
                        "explanation": "The only number present in the string is 4. Therefore, the sum is 4."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            ""
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "\n\nclass Solution {\n  public:\n    // Function to calculate sum of all numbers present in a string.\n    int findSum(string str) {\n        string temp = \"\";\n        int sum = 0;\n\n        // iterating over the string.\n        for (char ch : str) {\n            // if current character is digit, we store it in a temporary string.\n            if (isdigit(ch))\n                temp += ch;\n            else {\n                // incrementing final sum by number stored in temporary string.\n                sum += atoi(temp.c_str());\n                // making the temporary string empty again.\n                temp = \"\";\n            }\n        }\n        // adding any number if it's present in temporary\n        // string to final sum and returning it.\n        return sum + atoi(temp.c_str());\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "\n\nclass Solution {\n    // Function to calculate sum of all numbers present in a string.\n    public static int findSum(String str) {\n        String temp = \"0\";\n        int sum = 0;\n\n        // iterating over the string.\n        for (int i = 0; i < str.length(); i++) {\n            char ch = str.charAt(i);\n\n            // if current character is digit, we store it in a temporary string.\n            if (Character.isDigit(ch))\n                temp += ch;\n\n            else {\n                // incrementing final sum by number stored in temporary string.\n                sum += Integer.parseInt(temp);\n                // making the temporary string empty again.\n                temp = \"0\";\n            }\n        }\n        // adding any number if it's present in temporary\n        // string to final sum and returning it.\n        return sum + Integer.parseInt(temp);\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\n\nclass Solution:\n\n    #Function to calculate sum of all numbers present in a string.\n    def findSum(self, s):\n        temp = \"0\"\n        Sum = 0\n\n        #iterating over the string.\n        for ch in s:\n\n            #if current character is digit, we store it in a temporary string.\n            if (ch.isdigit()):\n                temp += ch\n\n            else:\n                #incrementing final sum by number stored in temporary string.\n                Sum += int(temp)\n                #making the temporary string empty again.\n                temp = \"0\"\n\n        #adding any number if it's present in temporary\n\n    #string to final sum and returning it.\n        return Sum + int(temp)\n",
                "lang_text": "py"
            },
            {
                "lang": "C#",
                "full_func": "// User function Template for C#\n\nclass Solution {\n    // Complete this function\n    // Function to calculate sum of all numbers present in a string.\n    public int findSum(string str) {\n        string temp = \"\";\n        int sum = 0;\n\n        // iterating over the string.\n        foreach (char ch in str) {\n            // if current character is digit, we store it in a temporary string.\n            if (Char.IsDigit(ch))\n                temp += ch;\n            else {\n                // incrementing final sum by number stored in temporary string.\n                if (temp != \"\") sum += Int32.Parse(temp);\n                // making the temporary string empty again.\n                temp = \"\";\n            }\n        }\n\n        // adding any number if it's present in temporary\n        // string to final sum\n        if (temp != \"\") sum += Int32.Parse(temp);\n\n        // returning the final sum.\n        return sum;\n    }\n}",
                "lang_text": "csharp"
            },
            {
                "lang": "Javascript",
                "full_func": "//Back-end complete function Template for javascript\n\n/**\n * @param {string} str\n * @returns {number}\n */\n\nclass Solution {\n    isdigit(ch) {\n        let x = ch.charCodeAt(0);\n        if (x >= 48 && x <= 57) return true;\n        return false;\n    }\n\n    // Function to calculate sum of all numbers present in a string.\n    findSum(str) {\n        let temp = \"\";\n        let sum = 0;\n\n        // iterating over the string.\n        for (let i = 0; i < str.length; i++) {\n            let ch = str[i];\n\n            // if current character is digit, we store it in a temporary string.\n            if (this.isdigit(ch))\n                temp += ch;\n\n            else {\n                // incrementing final sum by number stored in temporary string.\n                if (temp.length > 0) sum += parseInt(temp);\n                // making the temporary string empty again.\n                temp = \"\";\n            }\n        }\n\n        // adding any number if it's present in temporary\n        // string to final sum and returning it.\n        if (temp.length > 0) sum += parseInt(temp);\n        return sum;\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}