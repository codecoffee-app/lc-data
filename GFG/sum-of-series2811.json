{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 702732,
            "title": "Sum of Natural Numbers",
            "titleSlug": "sum-of-series2811",
            "content": "<p><span ><span style=\"color: #1e2229; font-family: Nunito; background-color: #ffffff;\">Given an integer </span><span style=\"box-sizing: border-box; font-weight: bolder; line-height: 1.7em; color: #1e2229; background-color: #ffffff; font-family: var(--gfg-font-secondary) !important;\">n</span><span style=\"color: #1e2229; font-family: Nunito; background-color: #ffffff;\">, your task is to compute the sum of all natural numbers from 1 to n (inclusive). If n is 0, the sum should be 0.</span></span></p>\n<p><span ><strong>Examples:</strong></span></p>\n<pre><span ><strong>Input: </strong>n = 1\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> For n = 1, the sum will be 1.\n</span></pre>\n<pre><span ><strong>Input: </strong>n = 5\n<strong>Output:</strong> 15\n<strong>Explanation:</strong> For n = 5, sum will be 15. 1 + 2 + 3 + 4 + 5 = 15.</span></pre>\n<p><span ><strong>Constraints:</strong><br />1 &lt;= n &lt;= 10<sup>4</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Calculate the sum of all natural numbers from 1 to n (inclusive). If n is 0, return 0.",
                "constraints": [
                    "1 <= n <= 10000"
                ],
                "testcases": [
                    {
                        "input": "1",
                        "output": "1",
                        "explanation": "The sum of natural numbers from 1 to 1 is simply 1."
                    },
                    {
                        "input": "5",
                        "output": "15",
                        "explanation": "The sum of natural numbers from 1 to 5 is 1 + 2 + 3 + 4 + 5 = 15."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size: 14pt;\">Answer = (n*(n+1))/2.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function template for C++\nclass Solution {\n    // function to return sum of 1, 2, ... n\n  public:\n    int seriesSum(int n) {\n        // calculate sum using formula sum = (n * (n + 1)) / 2\n        int sum = (n * (n + 1)) / 2;\n\n        // return the sum\n        return sum;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution {\n    // function to return sum of 1, 2, ... n\n    public static int seriesSum(int n) {\n        // calculating the sum using the formula n*(n+1)/2\n        int sum = (n * (n + 1)) / 2;\n\n        // returning the sum\n        return sum;\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "class Solution:\n\n    # Function to calculate the sum of a series\n    def seriesSum(self, n):\n        # calculating the sum of the series using the formula.\n        sum = (n * (n + 1)) // 2\n\n        return sum\n",
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "// User function template for C#\nclass Solution {\n    // function to return sum of 1, 2, ... n\n    public int seriesSum(int n) {\n        // calculate sum using formula sum = (n * (n + 1)) / 2\n        int sum = (n * (n + 1)) / 2;\n\n        // return the sum\n        return sum;\n    }\n}",
                "lang_text": "csharp"
            },
            {
                "lang": "Javascript",
                "full_func": "\nclass Solution {\n    /**\n    * @param number n\n\n    * @returns number\n    */\n    seriesSum(n) {\n        // code here\n        n = BigInt(n);\n        let s = 0n;\n        s += (n * (n + 1n)) / 2n;\n        //   var sum= parseInt((parseInt(n))*(parseInt(n+1))/(parseInt(2)));\n        return s.toString();\n    }\n}\n",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}