{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 700910,
            "title": "Sum the common elements",
            "titleSlug": "sum-the-common-elements",
            "content": "<div class=\"problemQuestion\">\n<p><span style=\"font-size: 18px;\">You are given two arrays of size<strong> n1 </strong>and<strong> n2</strong>. Your task is to find all the elements that are common to both the arrays and <strong>sum them</strong>. If there are no common elements the output would be <strong>0</strong>.</span></p>\n<p><strong><span style=\"font-size: 18px;\">Note: </span></strong><span style=\"font-size: 18px;\">The arrays may contain duplicate elements. However, you need to sum only <strong>unique elements</strong> that are common to both arrays and answer may be too large so return it with <strong>modulo (10<sup>9</sup>+7) .</strong></span></p>\n<p>&nbsp;</p>\n<p><span style=\"font-size: 18px;\"><strong>Example1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong>\n5 6\n1 2 3 4 5\n2 3 4 5 6 7\n<strong>Output: </strong>14<br /><strong>Explanation: </strong>Common unique elements in both arrays are 2, 3, 4 and 5 so answer will be 2+3+4+5 = 14<br /></span></pre>\n<p><strong><span style=\"font-size: 18px;\">Example2:</span></strong></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong>\n5 6\n1 2 2 3 5\n3 3 2 2 6 5\n<strong>Output: </strong>10<br /><strong>Explanation: </strong>Common unique elements in both arrays are 2, 3 and 5 so answer will be 2+3+5 = 10</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Your Task:</strong><br />Since this is a function problem, you don't need to take any input. Just complete the provided function <strong>commonSum</strong> which takes two integer <strong>n1</strong> , <strong>n2</strong> and two integer arrays <strong>arr1</strong> and <strong>arr2</strong> have sizes n1 and n2 respectively.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity : </strong>O(n1 + n2)</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Expected Space Complexity :</strong> O(min(n1,n2))</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &lt;= n1,n2 &lt;= 10<sup>6</sup><br />1 &lt;= arr1[i] , arr2[i] &lt;= 10<sup>9</sup></span></p>\n<p>&nbsp;</p>\n</div>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two arrays, `arr1` of size `n1` and `arr2` of size `n2`, find the sum of all unique common elements present in both arrays. If no common elements exist, return 0.  The sum should be calculated modulo (10^9 + 7).",
                "constraints": [
                    "1 <= n1, n2 <= 10^6",
                    "1 <= arr1[i], arr2[i] <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "5 6\n1 2 3 4 5\n2 3 4 5 6 7",
                        "output": "14",
                        "explanation": "The unique common elements are 2, 3, 4, and 5. Their sum is 2 + 3 + 4 + 5 = 14."
                    },
                    {
                        "input": "5 6\n1 2 2 3 5\n3 3 2 2 6 5",
                        "output": "10",
                        "explanation": "The unique common elements are 2, 3, and 5. Their sum is 2 + 3 + 5 = 10."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "set",
                "slug": "set"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "\nclass Solution {\n  public:\n    int commonSum(int n1, int n2, vector<int> &arr1, vector<int> &arr2) {\n        unordered_set<int> st;\n        \n        \n        for(auto i:arr1){\n            st.insert(i);\n        }\n        \n        int ans=0;\n        \n        for(auto i:arr2){\n            if(st.find(i)!=st.end()){\n                ans+=i;\n                ans%=(long long)1e9+7;\n                st.erase(i);\n            }\n        }\n        \n        return ans;\n        \n    }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "// Back-end complete function Template for Java\n\nclass Geeks {\npublic\n  static int commonSum(int n1, int n2, int arr1[], int arr2[]) {\n    HashSet<Integer> set = new HashSet<>();\n    for (int i = 0; i < arr2.length; i++)\n      set.add(arr2[i]);\n\n    int sum = 0;\n    int mod = 1000000007;\n    for (int i = 0; i < arr1.length; i++) {\n      if (set.contains(arr1[i])) {\n        sum = (sum + arr1[i]) % mod;\n        set.remove(arr1[i]);\n      }\n    }\n\n    return sum;\n  }\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "#Back-end complete function Template for Python 3\nclass Solution:\n  \n    #Function to find sum of common elements in two arrays.\n    def commonSum(self,n1,n2,arr1,arr2):\n        #if size of arr1 is greater than arr2, swap them.\n        if n1>n2:\n            arr1,arr2 = arr2,arr1\n        #creating a set of arr1 to quickly check for common elements.\n        s = set(arr1)\n        ans = 0\n        mod = 10**9+7\n\n        #iterating over each element in arr2.\n        for e in arr2:\n\n            #if element is present in set, add it to ans and remove it from set.\n            if e in s:\n                ans+=e\n                s.remove(e)\n                \n        return ans%mod       ",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n/**\n * @param {number} n1\n * @param {number} n2\n * @param {number[]} arr1\n * @param {number[]} arr2\n * @returns {number}\n*/\n\nclass Solution {\n    //Function to find the sum of elements common in two arrays.\n    commonSum(n1, n2, arr1, arr2) {\n        // Swap arrays if arr1 size is greater than arr2\n        if (n1 > n2) {\n            [arr1, arr2] = [arr2, arr1];\n        }\n\n        // Create a set from arr1 to quickly check for common elements\n        const s = new Set(arr1);\n        let ans = 0;\n        const mod = 10**9+7;\n\n        // Iterate over each element in arr2\n        for (let e of arr2) {\n            // If element is present in the set, add it to ans and remove it from the set\n            if (s.has(e)) {\n                ans += e;\n                s.delete(e);\n            }\n        }\n\n        return ans % mod;\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}