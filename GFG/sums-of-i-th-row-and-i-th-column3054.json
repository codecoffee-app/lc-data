{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705082,
            "title": "Sums of i-th row and i-th column",
            "titleSlug": "sums-of-i-th-row-and-i-th-column3054",
            "content": "<p><span style=\"font-size:18px\">Given a matrix A of dimensions NxM. Check whether the sum of the&nbsp;<strong>i<sup>th</sup></strong>&nbsp;row is equal to the sum of the&nbsp;<strong>i<sup>th</sup>&nbsp;</strong>column.<br />\nNote: Check only up to valid&nbsp;row and column numbers i.e if the dimensions are 3x5, check only for the first 3 rows and columns, i.e. min(N, M).</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\nN=2,M=2\nA=[[1,2],[2,1]]\n<strong>Output:</strong>\n1\n<strong>Explanation:</strong>\nThe sum of 1st row is equal to sum of\n1st column and also sum of 2nd row is equal \nto the sum of 2nd column.So, Answer is 1.</span></pre>\n\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\nN=1,M=3\nA=[[5],[0],[0]]\n<strong>Output:</strong>\n1\n<strong>Explanation:</strong>\nThe sum of 1st column is equal\nto the sum of 1st row.Thus,answer is 1.\n(We do not check for the 2nd and 3rd rows\nbecause there are no 2nd and 3rd columns.)</span></pre>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>sumOfRowCol()</strong> which takes two integers N, M and a 2D array A as input parameters and returns 1 if all the valid sum of rows is equal to the valid sum of columns. Otherwise, returns 0.</span></p>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong>O(N*M)<br />\n<strong>Expected Auxillary Space:</strong>O(min(N,M))</span><br />\n&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\n1&lt;=N,M,A[i][j]&lt;=10<sup>3</sup></span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a matrix A of dimensions N x M, determine if the sum of the i<sup>th</sup> row is equal to the sum of the i<sup>th</sup> column for all valid values of i. A value of i is considered valid if it's within the bounds of both rows and columns (i.e., up to min(N, M)).  Return 1 if the condition holds true for all valid i; otherwise, return 0.",
                "constraints": [
                    "1 <= N, M, A[i][j] <= 10<sup>3</sup>"
                ],
                "testcases": [
                    {
                        "input": "N=2, M=2\nA=[[1,2],[2,1]]",
                        "output": "1",
                        "explanation": "The sum of the 1st row (1+2=3) is equal to the sum of the 1st column (1+2=3).  The sum of the 2nd row (2+1=3) is equal to the sum of the 2nd column (2+1=3). Therefore, the result is 1."
                    },
                    {
                        "input": "N=1, M=3\nA=[[5, 0, 0]]",
                        "output": "1",
                        "explanation": "The sum of the 1st row (5) is equal to the sum of the 1st column (5). We do not check for further rows/columns as min(N,M) = 1. Thus, the answer is 1."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Store sums of rows and then check whether they are equal to the sums of columns.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "// Back-end complete function Template for C++\n\nclass Solution {\n  public:\n    // Function to calculate the sum of each row and column in a matrix.\n    int sumOfRowCol(int N, int M, vector<vector<int>> A) {\n        int row[N], col[M];\n        int i, j;\n\n        // Calculating the sum of each row.\n        for (i = 0; i < N; i++) {\n            int sum = 0;\n            for (j = 0; j < M; j++) {\n                sum += A[i][j];\n            }\n            row[i] = sum;\n        }\n\n        // Calculating the sum of each column.\n        for (i = 0; i < M; i++) {\n            int sum = 0;\n            for (j = 0; j < N; j++) {\n                sum += A[j][i];\n            }\n            col[i] = sum;\n        }\n\n        // Comparing the sum of each row and column.\n        for (i = 0; i < min(N, M); i++) {\n            if (col[i] != row[i]) return 0; // If sums are not equal, return 0.\n        }\n        return 1; // If all sums are equal, return 1.\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "// Function to calculate the sum of rows and columns in a 2D array\nclass Solution {\n    int sumOfRowCol(int N, int M, int A[][]) {\n        // Initialize arrays to store the sum of rows and columns\n        int row[] = new int[N], col[] = new int[M];\n        int i, j;\n\n        // Calculate the sum of each row in the 2D array\n        for (i = 0; i < N; i++) {\n            int sum = 0;\n            for (j = 0; j < M; j++) {\n                sum += A[i][j];\n            }\n            row[i] = sum;\n        }\n\n        // Calculate the sum of each column in the 2D array\n        for (i = 0; i < M; i++) {\n            int sum = 0;\n            for (j = 0; j < N; j++) {\n                sum += A[j][i];\n            }\n            col[i] = sum;\n        }\n\n        // Check if the sum of each row is equal to the sum of each column\n        // Return 0 if they are not equal, 1 if they are equal\n        for (i = 0; i < Math.min(N, M); i++) {\n            if (col[i] != row[i]) return 0;\n        }\n        return 1;\n    }\n};",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "#Back-end complete function Template for Python 3\n\nclass Solution:\n    #Function to calculate the sum of each row and column in the matrix.\n    def sumOfRowCol(self,N,M,A):\n        row=[0]*N\n        col=[0]*M\n        \n        #Calculating the sum of each row.\n        for i in range(N):\n            sum=0\n            for j in range(M):\n                sum+=A[i][j]\n            row[i]=sum\n        \n        #Calculating the sum of each column.\n        for i in range(M):\n            sum=0\n            for j in range(N):\n                sum+=A[j][i]\n            col[i]=sum \n        \n        #Checking if the sum of each row and column is equal.\n        for i in range(min(N,M)):\n            if row[i] != col[i]:\n                return 0\n        \n        #If the sum of each row and column is equal, return 1.\n        return 1",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "class Solution {\n    //Function to find the sum of each row and each column of a matrix.\n    sumOfRowCol(N, M, A) {\n        const row = Array(N).fill(0);\n        const col = Array(M).fill(0);\n        \n        //Calculating the sum of each row.\n        for (let i = 0; i < N; i++) {\n            let sum = 0;\n            for (let j = 0; j < M; j++) {\n                sum += A[i][j];\n            }\n            row[i] = sum;\n        }\n        \n        //Calculating the sum of each column.\n        for (let i = 0; i < M; i++) {\n            let sum = 0;\n            for (let j = 0; j < N; j++) {\n                sum += A[j][i];\n            }\n            col[i] = sum;\n        }\n        \n        //Checking if the sum of each row and column is equal.\n        for (let i = 0; i < Math.min(N, M); i++) {\n            if (row[i] !== col[i]) {\n                return 0;\n            }\n        }\n        \n        //If the sum of each row and column is equal, return 1.\n        return 1;\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}