{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 701172,
            "title": "Swap all odd and even bits",
            "titleSlug": "swap-all-odd-and-even-bits-1587115621",
            "content": "<p><span style=\"font-size:18px\">Given an unsigned integer <strong>N</strong>. The task is to swap all odd bits with even bits. For example, if the given number is 23 (<strong>0</strong>0<strong>0</strong>1<strong>0</strong>1<strong>1</strong>1), it should be converted to 43(0<strong>0</strong>1<strong>0</strong>1<strong>0</strong>1<strong>1</strong>). Here, every even position bit is swapped with an adjacent bit on the right side(even position bits are highlighted in the binary representation of 23), and every odd position bit is swapped with an adjacent on the left side.<br />\r\n<br />\r\n<strong>Example 1</strong>:</span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input</strong>: N = 23\r\n<strong>Output</strong>: 43\r\n<strong>Explanation</strong>: \r\nBinary representation of the given number \r\nis <strong>0</strong>0<strong>0</strong>1<strong>0</strong>1<strong>1</strong>1 after swapping \r\n0<strong>0</strong>1<strong>0</strong>1<strong>0</strong>11 = 43 in decimal.</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2</strong>:</span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input</strong>: N = 2\r\n<strong>Output</strong>: 1\r\n<strong>Explanation</strong>: \r\nBinary representation of the given number \r\nis <strong>1</strong>0 after swapping 0<strong>1 </strong>= 1 in decimal</span>.</pre>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Your Task:&nbsp;</strong>Your task is to complete the function <strong>swapBits</strong>() which takes an integer and returns an<strong>&nbsp;</strong>integer with all the odd and even bits swapped.</span></p>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong>&nbsp;O(1).<br />\r\n<strong>Expected Auxiliary Space:</strong>&nbsp;O(1).<br />\r\n<br />\r\n<strong>Constraints:</strong></span><br />\r\n<span style=\"font-size:18px\">1 &le; N &le; 10<sup>9</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an unsigned integer N, swap all odd bits with even bits.  This means that each bit at an even position should be swapped with the bit to its right (at the odd position), and each bit at an odd position should be swapped with the bit to its left (at the even position). Return the resulting integer.",
                "constraints": [
                    "1 <= N <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "23",
                        "output": "43",
                        "explanation": "The binary representation of 23 is 00010111. After swapping odd and even bits, we get 00101011, which is 43 in decimal."
                    },
                    {
                        "input": "2",
                        "output": "1",
                        "explanation": "The binary representation of 2 is 10. After swapping, we get 01, which is 1 in decimal."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            ""
        ],
        "relatedTopics": [
            {
                "name": "Bit Magic",
                "slug": "bit-magic"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\r\n\r\n\r\nclass Solution\r\n{\r\n    public:\r\n    //Function to swap odd and even bits.\r\n    unsigned int swapBits(unsigned int n)\r\n    {\r\n        //0xAAAAAAAA means 10101010101010101010101010101010 in binary.\r\n        //we get all even bits of n.\r\n    \tunsigned int ev=n & 0xAAAAAAAA; \r\n    \t//0x55555555 means 01010101010101010101010101010101 in binary.\r\n    \t//we get all odd bits of n.\r\n    \tunsigned int od=n & 0x55555555; \r\n    \t\r\n    \t//right Shifting the even bits obtained previously.\r\n    \tev>>=1;\r\n    \t//left Shifting the odd bits obtained previously.\r\n    \tod<<=1;\r\n    \t\r\n    \t//doing bitwise OR of even and odd bits obtained and\r\n    \t//returning the final result.\r\n    \treturn (ev | od);\r\n    }\r\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\r\n\r\nclass Solution\r\n{\r\n    //Function to swap odd and even bits.\r\n    public int swapBits(int n) \r\n    {\r\n\t    //0xAAAAAAAA means 10101010101010101010101010101010 in binary\r\n\t    //we get all even bits of n.\r\n\t    int ev=n & 0xAAAAAAAA;\r\n\t    //0x55555555 means 01010101010101010101010101010101 in binary.\r\n\t    //we get all odd bits of n.\r\n\t    int od=n & 0x55555555; \r\n\t    \r\n\t    //right Shifting the even bits obtained previously.\r\n\t    ev>>=1;\r\n\t    //left Shifting the even bits obtained previously.\r\n\t    od<<=1;\r\n\t    \r\n\t    //doing bitwise OR of even and odd bits obtained and\r\n\t    //returning the final result.\r\n\t    return (ev | od); \r\n\t    \r\n\t}\r\n    \r\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "#Back-end complete function Template for Python 3\r\n\r\nclass Solution:\r\n    \r\n    #Function to swap odd and even bits.\r\n    def swapBits(self,n):\r\n        \r\n        #0xAAAAAAAA means 10101010101010101010101010101010 in binary.\r\n        #we get all even bits of n.\r\n        ev=n&0xAAAAAAAA\r\n        #0x55555555 means 01010101010101010101010101010101 in binary.\r\n        #we get all odd bits of n.\r\n        od=n&0x55555555\r\n        \r\n        #right Shifting the even bits obtained previously.\r\n        ev>>=1\r\n        #left Shifting the even bits obtained previously.\r\n        od<<=1\r\n        \r\n        #doing bitwise OR of even and odd bits obtained and \r\n        #returning the final result.\r\n        return ev|od\r\n        ",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "//Back-end complete function Template for javascript\r\n\r\n/**\r\n * @param {Number} n\r\n * @returns {Number}\r\n*/\r\n\r\nclass Solution \r\n{\r\n    //Function to swap odd and even bits.\r\n    swapBits(n)\r\n    {\r\n        //0xAAAAAAAA means 10101010101010101010101010101010 in binary.\r\n        //we get all even bits of n.\r\n        let ev=n & 0xAAAAAAAA; \r\n        //0x55555555 means 01010101010101010101010101010101 in binary.\r\n        //we get all odd bits of n.\r\n    \tlet od=n & 0x55555555; \r\n    \t\r\n    \t//right Shifting the odd bits obtained previously.\r\n    \tev>>=1;\r\n    \t//left Shifting the odd bits obtained previously.\r\n    \tod<<=1;\r\n    \t\r\n    \t//doing bitwise OR of even and odd bits obtained and\r\n    \t//returning the final result.\r\n    \treturn (ev | od); \r\n    }\r\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}