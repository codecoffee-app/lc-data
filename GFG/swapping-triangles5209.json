{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705223,
            "title": "Swapping Triangles",
            "titleSlug": "swapping-triangles5209",
            "content": "<p><span style=\"font-size:18px\">Given an integer N and a matrix A of dimensions NxN.Swap the values of the triangle above the primary&nbsp;diagonal with the values of the triangle below the primary diagonal.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\nN=3\nA=[[1,2,3],[4,5,6],[7,8,9]]\n<strong>Output:</strong>\n1 4 7\n2 5 8\n3 6 9\n<strong>Explanation:</strong>\nSwapping the upper triangle with the\n lower triangle gives this result.</span></pre>\n\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong>\nN=4\nA=[[2,7,3,1],[10,1,5,1],[10,4,7,6],[6,9,1,8]]\n<strong>Output:</strong>\n2 10 10 6 \n7 1 4 9 \n3 5 7 1 \n1 1 6 8\n<strong>Explanation:</strong>\nSwapping upper triangle with the\nlower triangle leads to this result.</span></pre>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>swapTriangle()</strong> which takes the integer N and matrix A as input parameters and returns a matrix with the upper and lower triangles swapped.</span></p>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong>O(N<sup>2</sup>)<br />\n<strong>Expected Auxillary Space:</strong>O(1)</span><br />\n&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\n1&lt;=N,A[i][j]&lt;=1000, for 0&lt;=i &nbsp;</span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">The primary diagonal remains unchanged.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "// Back-end complete function Template for C++\n\nclass Solution {\n  public:\n    // Function to swap the elements of the matrix along the diagonal axis\n    vector<vector<int>> swapTriangle(int N, vector<vector<int>> A) {\n        // Nested loop to iterate over the matrix\n        for (int i = 0; i < N; i++) {\n            for (int j = 0; j < N; j++) {\n                // Check if the element is located below the diagonal\n                if (j < i) {\n                    // Swap the element with its corresponding element above the diagonal\n                    swap(A[i][j], A[j][i]);\n                }\n            }\n        }\n        // Return the modified matrix\n        return A;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "// Back-end complete function Template for Java\n\nclass Solution {\n    // function to swap elements in the lower triangle with their corresponding elements in the upper triangle\n    int[][] swapTriangle(int N, int A[][]) {\n        // iterate over the rows\n        for (int i = 0; i < N; i++) {\n            // iterate over the columns\n            for (int j = 0; j < N; j++) {\n                // check if the current element is in the lower triangle\n                if (j < i) {\n                    // swap the current element with its corresponding element in the upper triangle\n                    int temp = A[i][j];\n                    A[i][j] = A[j][i];\n                    A[j][i] = temp;\n                }\n            }\n        }\n        // return the modified matrix\n        return A;\n    }\n};",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\nclass Solution:\n    def swapTriangle(self,N,A):\n        for i in range(N):\n            for j in range(N):\n                if j<i:\n                    temp=A[i][j]\n                    A[i][j]=A[j][i]\n                    A[j][i]=temp\n        return A",
                "lang_text": "python3"
            }
        ],
        "platform": "GFG"
    }
}