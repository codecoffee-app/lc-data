{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705726,
            "title": "Techfest and the Queue",
            "titleSlug": "techfest-and-the-queue1044",
            "content": "<p><span style=\"font-size: 18px;\">A Techfest is underway, and each participant is given a ticket with a unique number. Organizers decide to award prize points to everyone who has a ticket ID between <strong>a</strong> and <strong>b</strong> (<strong>inclusive</strong>). The points given to a participant with ticket number <strong>x</strong> will be the <strong>sum of powers of the prime factors </strong>of <strong>x</strong>.</span></p>\n<p><span style=\"font-size: 18px;\">For instance, if points are to be awarded to a participant with ticket number <strong>12</strong>, the amount of points given out will be equal to <strong>the sum of powers in the prime factorization </strong>of <strong>12</strong> (<strong>2<sup>2</sup> &times; 3<sup>1</sup></strong>), which will be <strong>2 + 1 = 3</strong>.</span></p>\n<p><span style=\"font-size: 18px;\">Given <strong>a</strong> and <strong>b</strong>, determine the sum of all the points that will be awarded to the participants with ticket numbers between <strong>a</strong> and <strong>b</strong> (<strong>inclusive</strong>).</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: <br />a</strong> = 9<br /><strong>b</strong> = 12\n<strong>Output: <br /></strong>8\n<strong>Explanation: <br /></strong>For 9, prime factorization is:3<sup>2</sup> <br />So, sum of the powers of primes is: 2\nFor 10, prime factorization is : 2<sup>1</sup>x5<sup>1</sup> \nSo, sum of the powers of primes is: 2\nFor 11, prime factorization is : 11<sup>1</sup> \nSo, sum of the powers of primes is: 1\nFor 12, prime factorization is : 2<sup>2</sup>x 3<sup>1</sup>&nbsp;\nSo, sum of powers of primes is: 3\nTherefore the total sum is 2+2+1+3=8.</span>\n</pre>\n<p><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: <br /></strong>a = 24, b = 27\n<strong>Output: <br /></strong>11\n<strong>Explanation: <br /></strong>For 24, prime factorization is: 2<sup>3</sup>x3<sup>1 <br /></sup>So, sum of the powers of primes is: 4\nFor 25, prime factorization is : 5<sup>2</sup> <br />So, sum of the powers of primes is: 2\nFor 26, prime factorization is : 13<sup>1</sup>x2<sup>1</sup> <br />So, sum of the powers of primes is: 2\nFor 27, prime factorization is : 3<sup>3</sup> &nbsp;<br />So, sum of powers of primes is: 3\nTherefore the total sum is 4+2+2+3=11.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong style=\"font-size: 18px;\">Your Task:</strong><br /><span style=\"font-size: 18px;\">You don't need to read or print anything. Your task is to complete the function&nbsp;<strong>sumOfPowers</strong></span><strong style=\"font-size: 18px;\">() </strong><span style=\"font-size: 18px;\">which takes </span><strong style=\"font-size: 18px;\">a</strong><span style=\"font-size: 18px;\"> and </span><strong style=\"font-size: 18px;\">b</strong><span style=\"font-size: 18px;\"> as input parameters and returns the </span><strong style=\"font-size: 18px;\">sum </strong><span style=\"font-size: 18px;\">of the power of </span><strong style=\"font-size: 18px;\">primes </strong><span style=\"font-size: 18px;\">that occur in </span><strong style=\"font-size: 18px;\">prime factorization </strong><span style=\"font-size: 18px;\">of the numbers between </span><strong style=\"font-size: 18px;\">a </strong><span style=\"font-size: 18px;\">to </span><strong style=\"font-size: 18px;\">b (inclusive)</strong><span style=\"font-size: 18px;\">.</span></span></p>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity: </strong>O( b*log(b) )<br /><strong>Expected Space Complexity: </strong>O( b*log(b) )</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &lt;= a &lt;= b &lt;= 2x10<sup>5</sup><br />1 &lt;= b-a &lt;= 10<sup>5</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "A Techfest awards prize points based on ticket numbers. Participants with ticket IDs between 'a' and 'b' (inclusive) receive points equal to the sum of the powers of the prime factors of their ticket number. For example, a ticket number of 12 (2<sup>2</sup> * 3<sup>1</sup>) would earn 2 + 1 = 3 points.  Given 'a' and 'b', calculate the total sum of points awarded to all participants with ticket numbers in the specified range.",
                "constraints": [
                    "1 <= a <= b <= 2 * 10<sup>5</sup>",
                    "1 <= b - a <= 10<sup>5</sup>"
                ],
                "testcases": [
                    {
                        "input": "a = 9, b = 12",
                        "output": "8",
                        "explanation": "For 9 (3<sup>2</sup>): 2 points. For 10 (2<sup>1</sup> * 5<sup>1</sup>): 2 points. For 11 (11<sup>1</sup>): 1 point. For 12 (2<sup>2</sup> * 3<sup>1</sup>): 3 points. Total: 2 + 2 + 1 + 3 = 8."
                    },
                    {
                        "input": "a = 24, b = 27",
                        "output": "11",
                        "explanation": "For 24 (2<sup>3</sup> * 3<sup>1</sup>): 4 points. For 25 (5<sup>2</sup>): 2 points. For 26 (2<sup>1</sup> * 13<sup>1</sup>): 2 points. For 27 (3<sup>3</sup>): 3 points. Total: 4 + 2 + 2 + 3 = 11."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size: 14pt;\">Precompute smallest prime factors.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Prime Number",
                "slug": "prime-number"
            },
            {
                "name": "sieve",
                "slug": "sieve"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "\r\nclass Solution {\r\npublic:\r\n\tint sumOfPowers(int a, int b){\r\n\t    vector<int>spf(b+1,-1);\r\n\t    if(b==1)\r\n\t        return 0;\r\n\t    if(a==1)\r\n\t        a++;\r\n\t    for(int i=2;i<=b;i++)\r\n\t    {\r\n\t        if(spf[i]==-1)\r\n\t        {\r\n\t            for(int j=i;j<=b;j+=i)\r\n    \t            spf[j]=i;\r\n\t        }\r\n\t    }\r\n\t    int ans=0;\r\n\t    for(int i=a;i<=b;i++)\r\n\t    {\r\n\t        int x=i;\r\n\t        while(x!=1)\r\n\t        {\r\n\t            x/=spf[x];\r\n\t            ans++;\r\n\t        }\r\n\t    }\r\n\t    return ans;\r\n\t}\r\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\r\n    public static long sumOfPowers(long a, long b) {\r\n        List<Integer> spf = new ArrayList<>(Collections.nCopies((int) (b + 1), -1));\r\n        if (b == 1)\r\n            return 0;\r\n        if (a == 1)\r\n            a++;\r\n        for (int i = 2; i <= b; i++) {\r\n            if (spf.get(i) == -1) {\r\n                for (int j = i; j <= b; j += i)\r\n                    spf.set(j, i);\r\n            }\r\n        }\r\n        long ans = 0;\r\n        for (int i = (int) a; i <= b; i++) {\r\n            int x = i;\r\n            while (x != 1) {\r\n                x /= spf.get(x);\r\n                ans++;\r\n            }\r\n        }\r\n        return ans;\r\n    }\r\n}\r\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": "from typing import List\r\n\r\nclass Solution:\r\n    def sumOfPowers(self, a : int, b : int) -> int:\r\n        \r\n        # Calculating smallest prime factors (spf) for every number from 1 to b\r\n        spf = [i for i in range(b+1)]\r\n        for i in range(2, b+1):\r\n            if spf[i] == i:\r\n                for j in range(i*i, b+1, i):\r\n                    if spf[j] == j:\r\n                        spf[j] = i\r\n        \r\n        # Counting all prime factors of each number from a to b\r\n        ans = 0\r\n        for i in range(a, b+1):\r\n            cnt = 0\r\n            while i > 1:\r\n                cnt += 1\r\n                i //= spf[i]\r\n            \r\n            ans += cnt\r\n\r\n        return ans",
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}