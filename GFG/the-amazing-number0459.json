{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704932,
            "title": "The amazing number",
            "titleSlug": "the-amazing-number0459",
            "content": "<p><span style=\"font-size:18px\">You are given a number N. Your task is to determine if N is an amazing number or not.&nbsp; A number is called amazing if it has exactly three distinct divisors.</span><br />\n<br />\n<span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input</strong>: N = 3\n<strong>Output:</strong>&nbsp;0&nbsp;\n<strong>Explanation</strong>: 3 has only two divisors\n1 and 3.So answer is 0.</span>\n</pre>\n\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input: </strong>N = 4\n<strong>Output:&nbsp;</strong>1\n<strong>Explanation</strong>: 4 has Exactly Three divisors\n1, 2 and 4.So answer is 1. \n</span>\n</pre>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Your Task:&nbsp;&nbsp;</strong><br />\nYou dont need to read input or print anything. Complete the function <strong>isAmazing()&nbsp;</strong>which takes N&nbsp;as input parameter and returns&nbsp;1 if N&nbsp;is an amazing number&nbsp;else return&nbsp;0.<br />\n<br />\n<strong>Expected Time Complexity:</strong> O(N<sup>1/4</sup>)<br />\n<strong>Expected Auxiliary Space:</strong> O(1)<br />\n<br />\n<strong>Constraints:</strong><br />\n1&lt;= N&nbsp;&lt;=10<sup>18</sup></span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">A number has exactly 3 distinct divisors only if the square root of that number is a prime number. The three distinct factors are: 1, square root of n, and n itself.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Prime Number",
                "slug": "prime-number"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "\n//Back-end complete function Template for C++\nclass Solution {\n  public:\n    bool isPrime(int n) \n{ \n    // Corner cases \n    if (n <= 1) \n        return false; \n    if (n <= 3) \n        return true; \n  \n    // This is checked so that we can skip \n    // middle five numbers in below loop \n    if (n % 2 == 0 || n % 3 == 0) \n        return false; \n  \n    for (int i = 5; i * i <= n; i = i + 6) \n        if (n % i == 0 || n % (i + 2) == 0) \n            return false; \n  \n    return true; \n} \n  \n// Function to check whether given number \n// has three distinct factors or not \nlong long isAmazing(long long n) \n{ \n    // Find square root of number \n    int sq = (int)sqrt(n); \n  \n    // Check whether number is perfect \n    // square or not \n    if (1LL * sq * sq != n) \n        return false; \n  \n    // If number is perfect square, check \n    // whether square root is prime or \n    // not \n    return isPrime(sq) ? 1 : 0; \n} \n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "\nclass Solution\n{\n    public bool IsPrime(long num)\n    {\n        if (num <= 1)\n            return false;\n        if (num <= 3)\n            return true;\n        if (num % 2 == 0 || num % 3 == 0)\n            return false;\n        long i = 5;\n        while (i * i <= num)\n        {\n            if (num % i == 0 || num % (i + 2) == 0)\n                return false;\n            i += 6;\n        }\n        return true;\n    }\n\n    public long isAmazing(long n)\n    {\n        if (n <= 1)\n            return 0;\n        \n        long sqrt = (long)Math.Sqrt(n);\n        if (sqrt * sqrt != n)\n            return 0;\n\n        if (IsPrime(sqrt))\n            return 1;\n        return 0;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}