{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704984,
            "title": "The Cycle Game",
            "titleSlug": "the-cycle-game4441",
            "content": "<p><span style=\"font-size:18px\">Given a&nbsp;number <strong>X</strong>&nbsp;and another number <strong>Y&nbsp;</strong>. There are a total&nbsp;&nbsp;<strong>N</strong>&nbsp;cycles ,&nbsp; and alternatively we perform operation on each number . In each cycle , we multiply the number&nbsp;by 2 . Starting with <strong>X</strong> .</span></p>\n\n<p><span style=\"font-size:18px\">Suppose after all the&nbsp;<strong>N</strong>&nbsp;cycles, the number <strong>X</strong>&nbsp;has become <strong>W</strong>&nbsp;and&nbsp; number <strong>Y</strong>&nbsp;has become <strong>Z&nbsp;</strong>. Find&nbsp;the integer division of the maximum number among <strong>W&nbsp;</strong>and <strong>Z</strong>&nbsp;by the minimum number among <strong>W</strong>&nbsp;and<strong> Z&nbsp;</strong>.</span><br />\n&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input: </strong>x = 1, y = 2, n = 1\n<strong>Output: </strong>2\n<strong>Explanation: </strong>&nbsp;the initial numbers are (<strong>X</strong>&nbsp;= 1,\n<strong>Y</strong>&nbsp;= 2). There is only one turn. In this turn X \nis multiplied by 2. Hence, we get (<strong>X</strong>&nbsp;= 2,&nbsp;\n<strong>Y</strong>&nbsp;= 2) \nTherefore&nbsp;<strong>W</strong>&nbsp;= 2, and&nbsp;<strong>Z</strong>&nbsp;= 2. \nmax (<strong>W&nbsp;</strong>,&nbsp;<strong>Z</strong>) / min (<strong>W&nbsp;</strong>,&nbsp;<strong>Z</strong>) =&nbsp; 2 / 2&nbsp; = 1. \nHence the first output is 1.</span>\n</pre>\n\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input: </strong>x = 3, y = 2, n = 3\n<strong>Output: </strong>3\n<strong>Explanation: </strong>the initial numbers are&nbsp;<strong>(X&nbsp;= 3,\nY&nbsp;= 2)</strong>. There three turns. In the first cycle \nX is multiplied&nbsp;by 2.So, we get (<strong>X</strong>&nbsp;= 6,&nbsp;<strong>Y</strong>&nbsp;= 2).\nIn the second cycle&nbsp;<strong>Y&nbsp;(Y&nbsp;=&nbsp;2)</strong>&nbsp;multiplies his \nnumber by 2. Hence, we get&nbsp; (&nbsp;<strong>X</strong>&nbsp;= 6,&nbsp;<strong>&nbsp;Y</strong>&nbsp;= 4 ). \nIn the third cycle&nbsp;&nbsp;<strong>X ( X = 6)&nbsp;</strong>is multiplied&nbsp;by \n2. So, we get (<strong>X</strong>&nbsp;= 12,&nbsp;<strong>Y</strong>&nbsp;= 4) . As&nbsp;<strong>N</strong>&nbsp;= 3 , \ncompleted with 3 cyles,&nbsp;therefore&nbsp;<strong>W</strong>&nbsp;= 12 and&nbsp;\n<strong>Z</strong>&nbsp;= 4. max (<strong>W&nbsp;</strong>,&nbsp;&nbsp;<strong>Z</strong>) / min (<strong>W&nbsp;</strong>,&nbsp;<strong>Z</strong>) = 12 / 4 = 3. \nHence the second output is 3.</span><span style=\"font-size:18px\"><strong> </strong></span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nYou don&#39;t need to read or print anyhting. Your task is to complete the function&nbsp;<strong>find_division()</strong>&nbsp;which takes X, Y and N as input parameter and returns the integer division of max(w, z) / min(w, z)</span><br />\n&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:&nbsp;</strong>O(1)<br />\n<strong>Expected Space Complexity:&nbsp;</strong>O(1)</span><br />\n&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\n1 &lt;= X, Y &lt;= 10<sup>8</sup><br />\n1 &lt;= N &lt;= 10<sup>9</sup></span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p>Optimize your solution.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "\n\nclass Solution{\n\tpublic:\n   \tint find_division(int x, int y, int n){\n   \t\tif(n&1)\n   \t\t\tx *= 2;\n   \t\treturn max(x, y) / min(x, y);\n   \t}    \n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    public int find_division(int x, int y, int n)\n    {\n        if((n & 1) != 0)\n            x *= 2;\n        return Math.Max(x, y) / Math.Min(x, y);\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}