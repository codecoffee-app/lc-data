{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705127,
            "title": "The Fastest Method",
            "titleSlug": "the-fastest-method4009",
            "content": "<p><span style=\"font-size:18px\">Geek lives in a multi-story building. Everyday he has to get from the <strong>N</strong><sup>th</sup> floor&nbsp;to the ground floor. He has three options to come down, </span></p>\r\n\r\n<ol>\r\n\t<li><span style=\"font-size:18px\">the lift, </span></li>\r\n\t<li><span style=\"font-size:18px\">the stairs or </span></li>\r\n\t<li><span style=\"font-size:18px\">the escalator. </span></li>\r\n</ol>\r\n\r\n<p><span style=\"font-size:18px\">He has different speeds for the <strong>lift, the stairs and the escalator</strong> which are <strong>V1</strong> m/s, <strong>V2</strong> m/s and <strong>V3</strong> m/s respectively.&nbsp;Assuming each floor has a height of 1m and the stairs and the escalator are inclined at an angle of 45 degrees. Find out which is the fastest way for Geek to reach the ground floor. If any of the methods consume same time, give preference to lift, then stairs and then escalator.</span></p>\r\n\r\n<p><br />\r\n<strong><span style=\"font-size:18px\">Example 1:</span></strong></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong> \r\nN = 5, V1 = 1, V2 = 2, V3 = 3\r\n<strong>Output:</strong> 3\r\n<strong>Explaination:</strong> Option 3, ie the escalator\r\nwill be the fastest.</span>\r\n</pre>\r\n\r\n<p><br />\r\n<strong><span style=\"font-size:18px\">Example 2:</span></strong></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong> \r\nN = 5, V1 = 3, V2 = 2, V3 = 1\r\n<strong>Output:</strong> 1\r\n<strong>Explaination:</strong> Option 2, ie the lift\r\nwill be the fastest.</span></pre>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou do not need to read input or print anything. Your task is to complete the function <strong>fastest()</strong> which takes N, V1, V2 and V3 as input parameters and returns 1, 2 or 3 if lift, stair or escalator is the fastes way respectively.</span></p>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(1)<br />\r\n<strong>Expected Auxiliary Space: </strong>O(1)</span></p>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n1 &le; N &le; 1000<br />\r\n1 &le; V1, V2, V3 &le; 1000&nbsp;</span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Time = distance/speed.</span></p>",
            "<p><span style=\"font-size:18px\">The distance need to be covered by stair and escalator is N*sqrt(2).</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Misc",
                "slug": "misc"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "// Back-end complete function Template for C++\n\nclass Solution{\npublic:\n    // Function to find the fastest car based on their velocities.\n    int fastest(int N, int V1, int V2, int V3){\n        // Initialize the maximum velocity variable.\n        double maxi = 0.0;\n        \n        // Calculate the velocities in different directions.\n        double x = (double)V2/sqrt(2), y = (double)V3/sqrt(2);\n        double z = (double)V1*1.0;\n        \n        // Find the maximum velocity.\n        maxi = max(maxi, max(z, max(x, y)));\n        \n        // Check which car has the maximum velocity and return its index.\n        if(z == maxi)\n            return 1;\n        if(x == maxi)\n            return 2;\n        return 3;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    public int fastest(int N, int V1, int V2, int V3)\n    {\n        // Initialize the maximum velocity variable.\n        double maxi = 0.0;\n        \n        // Calculate the velocities in different directions.\n        double x = (double)V2/Math.Sqrt(2), y = (double)V3/Math.Sqrt(2);\n        double z = (double)V1*1.0;\n        \n        // Find the maximum velocity.\n        maxi = Math.Max(maxi, Math.Max(z, Math.Max(x, y)));\n        \n        // Check which car has the maximum velocity and return its index.\n        if(z == maxi)\n            return 1;\n        if(x == maxi)\n            return 2;\n        return 3;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}