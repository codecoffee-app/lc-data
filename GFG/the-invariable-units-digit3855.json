{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703140,
            "title": "The invariable units digit",
            "titleSlug": "the-invariable-units-digit3855",
            "content": "<p><span style=\"font-size:18px\">Given two numbers N and P, the task is to check if unit digit of N and N<sup>P</sup><span style=\"font-size:20px\"><sup> </sup></span>are the same or not. </span></p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong> N = &quot;2&quot;, P = 1\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> Unit digit of 2<sup>1</sup> is 2, \nwhich is equals to 2</span></pre>\n\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong> N = &quot;4&quot;, P = 2\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> Unit digit of 4<sup>2</sup> is 6,\nwhich is not equals to 4 </span></pre>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>unitDigit()&nbsp;</strong>which takes a string N and an integer P as inputs and returns the boolean value. </span></p>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Expected Time Complexity:&nbsp;</strong>O(|P|).<br />\n<strong>Expected Auxiliary Space:&nbsp;</strong>O(1).</span></p>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Constraints:</strong><br />\n1 &lt;= |N| &lt;=&nbsp;50<br />\n1 &lt;= P &lt;= 1000</span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p>1. Consider the only unit digit value to calculate N<sup>P</sup></p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function template in C++\n\nclass Solution\n{\n  public:\n    //Function to check if the unit digit of the given number raised to the given power is equal to the unit digit of the original number.\n    bool unitDigit(string N, int P)\n    {\n    \t//getting the unit digit of the given number.\n    \tint unit_digit = (N.back() - '0');\n    \n        //if unit digit is 0, 1, 5, or 6, return true.\n        if(unit_digit == 0 || unit_digit == 1 || unit_digit == 5 || unit_digit == 6)\n            return true;\n    \n        //initializing new digit as 1.\n        int new_digit = 1;\n    \n        //performing modulus operation to get the unit digit of the number raised to the power P.\n        for(int i = 0; i < P; i++)\n            new_digit = (new_digit * unit_digit) % 10;\n    \n        //returning true if the unit digit of the original number is equal to the unit digit of the number raised to the power P.\n        return (unit_digit == new_digit);\n    }\n\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    public bool unitDigit(string N, int P)\n    {\n        //getting the unit digit of the given number.\n        int unit_digit = (N[N.Length-1] - '0');\n\n        //if unit digit is 0, 1, 5, or 6, return true.\n        if(unit_digit == 0 || unit_digit == 1 || unit_digit == 5 || unit_digit == 6)\n            return true;\n\n        //initializing new digit as 1.\n        int new_digit = 1;\n\n        //performing modulus operation to get the unit digit of the number raised to the power P.\n        for(int i = 0; i < P; i++)\n            new_digit = (new_digit * unit_digit) % 10;\n\n        //returning true if the unit digit of the original number is equal to the unit digit of the number raised to the power P.\n        return (unit_digit == new_digit);\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}