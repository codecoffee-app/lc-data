{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703335,
            "title": "The Inverting Factor",
            "titleSlug": "the-inverting-factor3932",
            "content": "<p><span style=\"font-size: 18px;\">You are given an array <strong>arr[]</strong> of positive integers. Your task is to find the smallest possible \"Inverting Factor\" among all pairs of integers in the array. The \"Inverting Factor\" of two integers is defined as the absolute difference between the reverse of the two integers.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Note:</strong> Trailing zeros in a number of ignored while reversing, i.e. 1200 becomes 21 when reversed.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input :</strong> arr[] = [56, 20, 47, 93, 45]\n<strong>Output :</strong> 9\n<strong>Explanation: </strong>The minimum inverting factor is 9 of the pair (56,47).Reverse (56 -&gt; 65) and (47 -&gt; 74) so,difference between them is 9.</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input :</strong> arr[] = [48, 23, 100, 71, 56, 89]<strong>\nOutput :</strong>  14 </span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong> O(nlogn)<br /><strong>Expected Auxiliary Space:</strong> O(1)</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints :&nbsp;</strong><br />2 &le; arr.size() &le; 10<sup>5</sup><br />1 &le; arr[i] &le; 10<sup>5</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p><span >Reverse each number, sort the reversed numbers, and find the minimum difference between adjacent values in the sorted array.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Numbers",
                "slug": "numbers"
            },
            {
                "name": "Reverse",
                "slug": "reverse"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "\n\nclass Solution {\n  public:\n    // Function to find the minimum inverting factor\n    int findMinimumIF(vector<int>& arr) {\n        int n = arr.size();\n        int ans = INT_MAX;\n\n        // Reverse each number in the array\n        for (int i = 0; i < n; i++) {\n            std::string s;\n            int num = arr[i];\n\n            // Extract digits and store them in reverse order\n            while (num > 0) {\n                s.push_back(num % 10 + '0');\n                num /= 10;\n            }\n\n            // Remove leading zeroes from the reversed string\n            int pos = 0;\n            while (pos < s.size() && s[pos] == '0') {\n                pos++;\n            }\n\n            // Form the reversed number\n            num = 0;\n            for (int j = pos; j < s.size(); j++) {\n                num = num * 10 + (s[j] - '0');\n            }\n            arr[i] = num;\n        }\n\n        // Sort the array\n        std::sort(arr.begin(), arr.end());\n\n        // Find the minimum difference between adjacent pairs\n        for (int i = 1; i < n; i++) {\n            ans = std::min(ans, std::abs(arr[i] - arr[i - 1]));\n        }\n\n        return ans;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution {\n    // Function to find the minimum inverting factor\n    public static int findMinimumIF(int[] arr) {\n        int n = arr.length;\n        int ans = Integer.MAX_VALUE;\n\n        // Reverse each number in the array\n        for (int i = 0; i < n; i++) {\n            int num = arr[i];\n            StringBuilder s = new StringBuilder();\n\n            // Extract digits and store them in reverse order\n            while (num > 0) {\n                s.append(num % 10);\n                num /= 10;\n            }\n\n            // Remove leading zeros from the reversed string\n            int pos = 0;\n            while (pos < s.length() && s.charAt(pos) == '0') {\n                pos++;\n            }\n\n            // Form the reversed number\n            num = 0;\n            for (int j = pos; j < s.length(); j++) {\n                num = num * 10 + (s.charAt(j) - '0');\n            }\n            arr[i] = num;\n        }\n\n        // Sort the array\n        Arrays.sort(arr);\n\n        // Find the minimum difference between adjacent pairs\n        for (int i = 1; i < n; i++) {\n            ans = Math.min(ans, Math.abs(arr[i] - arr[i - 1]));\n        }\n\n        return ans;\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "class Solution:\n\n    def findMinimumIF(self, arr):\n        import sys\n\n        n = len(arr)\n        ans = sys.maxsize  # Initialize to maximum possible value\n\n        def reverse_number(num):\n            # Convert number to reversed integer without leading zeros\n            reversed_num = int(str(num)[::-1].lstrip('0'))\n            return reversed_num\n\n        # Reverse each number in the array\n        reversed_arr = [reverse_number(num) for num in arr]\n\n        # Sort the array\n        reversed_arr.sort()\n\n        # Find the minimum difference between adjacent pairs\n        for i in range(1, n):\n            ans = min(ans, abs(reversed_arr[i] - reversed_arr[i - 1]))\n\n        return ans\n",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "//Back-end complete function Template for javascript\nclass Solution {\n    // Function to find the minimum inverting factor\n    findMinimumIF(arr) {\n        const n = arr.length;\n        let ans = Number.MAX_SAFE_INTEGER; // Initialize to a large value\n\n        // Function to reverse a number and remove leading zeros\n        const reverseNumber = (num) => {\n            let reversed = parseInt(\n                num.toString().split('').reverse().join('').replace(/^0+/, ''), 10);\n            return reversed;\n        };\n\n        // Reverse each number in the array\n        const reversedArr = arr.map(reverseNumber);\n\n        // Sort the array\n        reversedArr.sort((a, b) => a - b);\n\n        // Find the minimum difference between adjacent pairs\n        for (let i = 1; i < n; i++) {\n            ans = Math.min(ans, Math.abs(reversedArr[i] - reversedArr[i - 1]));\n        }\n\n        return ans;\n    }\n}\n",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}