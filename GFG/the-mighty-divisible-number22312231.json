{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704131,
            "title": "Mighty Divisor",
            "titleSlug": "the-mighty-divisible-number22312231",
            "content": "<p><span style=\"font-size:18px\">Given four numbers X, Y, Z and N. Find smallest N digit Number that is divisible by all the three numbers X, Y and Z.</span></p>\r\n\r\n<p><br />\r\n<strong><span style=\"font-size:18px\">Example 1:</span></strong></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong> \r\nN = 2\r\nX = 2, Y = 3, Z = 5\r\n<strong>Output:</strong> 30\r\n<strong>Explaination:</strong> 30 is the lcm of 2, 3 and 5 \r\nand it is a 2 digit number.</span></pre>\r\n\r\n<p><br />\r\n<strong><span style=\"font-size:18px\">Example 2:</span></strong></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong> \r\nN = 2\r\nX = 3, Y = 5, Z = 7\r\n<strong>Output:</strong> -1\r\n<strong>Explaination:</strong> There is no 2 digit number \r\ndivisible by 3, 5 and 7.</span></pre>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou do&nbsp;not need to read input or print anything. Your task is to complete the function <strong>minNumber()</strong> which takes the four number X, Y, Z and N as input parameters and returns the smallest N digit number divisible by X, Y and Z. If ther is no such number, return <strong>-1</strong>.</span></p>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(Log X)<br />\r\n<strong>Expected Auxiliary Space:</strong> O(1)</span></p>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n1 &le; X, Y, Z, &le; 1000<br />\r\n1 &le; N &le; 18</span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given four integers X, Y, Z, and N, find the smallest N-digit number that is divisible by all three numbers X, Y, and Z. Return -1 if no such number exists.",
                "constraints": [
                    "1 <= X, Y, Z <= 1000",
                    "1 <= N <= 18"
                ],
                "testcases": [
                    {
                        "input": "N = 2, X = 2, Y = 3, Z = 5",
                        "output": "30",
                        "explanation": "The Least Common Multiple (LCM) of 2, 3, and 5 is 30, which is a 2-digit number. Therefore, 30 is the smallest 2-digit number divisible by 2, 3, and 5."
                    },
                    {
                        "input": "N = 2, X = 3, Y = 5, Z = 7",
                        "output": "-1",
                        "explanation": "There is no 2-digit number that is divisible by 3, 5, and 7."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Use LCM concept.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "number-theory",
                "slug": "number-theory"
            },
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Numbers",
                "slug": "numbers"
            },
            {
                "name": "Division",
                "slug": "division"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "// Back-end complete function Template for C++\n\nclass Solution{\npublic:\n    // Function to find the minimum number that is divisible by X, Y, and Z and has N digits\n    long long int minNumber(int X, int Y, int Z, int N)\n    {\n        long long int x = X, y = Y, z = Z, n = N;\n\n        // Calculating the least common multiple of X and Y\n        long long int lcm_b = ((x*y)/__gcd(x,y));\n\n        // Calculating the least common multiple of X, Y, and Z\n        long long int lcm = ((lcm_b*z)/__gcd(lcm_b,z));\n\n        // Calculating the minimum value that has N digits\n        long long int val = (long long int)pow(10,n-1);\n        long long int val1 = (long long int)pow(10,n);\n\n        // Calculating the number of times lcm has to be multiplied to get a value greater than or equal to val\n        long long int m = val/lcm;\n        // Incrementing m if m*lcm is not equal to val\n        if(m*lcm != val)\n            m++;\n            \n        // Checking if the minimum value with N digits is greater than or equal to val1\n        if(m*lcm >= val1)\n            return -1LL;\n        else\n            return (m*lcm);\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}