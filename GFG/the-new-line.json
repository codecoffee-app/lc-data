{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 700766,
            "title": "The New Line",
            "titleSlug": "the-new-line",
            "content": "<p><span style=\"font-size: 18px;\">You are familiar with producing output . In this task, you'll be required to write three messages in three separate lines. Write <strong>Geeks for Geeks</strong>. But wait a minute!! You need to write each word of it in a separate line.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong> Geeks for Geeks\n<strong>Output: </strong>Geeks<br />\\t  for\n\\t  Geeks\n<strong>Explanation: </strong>First word of the statment is in first line, next word is in next line, and last is in last line.</span></pre>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Write a program that prints \"Geeks for Geeks\" across three separate lines, with each word on its own line.",
                "constraints": [],
                "testcases": [
                    {
                        "input": "Geeks for Geeks",
                        "output": "Geeks\nfor\nGeeks",
                        "explanation": "The first word 'Geeks' is printed on the first line, 'for' on the second line, and the second 'Geeks' on the third line."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>use endl or &quot;\\n&quot;&nbsp;to print in new line</p>"
        ],
        "relatedTopics": [
            {
                "name": "CPP",
                "slug": "cpp"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C",
                "full_func": "//Back-end complete function Template for C\n\nvoid printNewLine() {\n\n    // prints \"Geeks for Geeks\", each word in separate line\n    printf(\"Geeks\\nfor\\nGeeks\");\n}",
                "lang_text": "c"
            },
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nvoid printNewLine() {\n\n    // prints \"Geeks for Geeks\", each word in separate line\n    cout << \"Geeks\" << endl << \"for\" << endl << \"Geeks\";\n}",
                "lang_text": "cpp"
            },
            {
                "lang": "C#",
                "full_func": "class Solution {\n    // Complete this function\n    public void printNewLine() {\n        // prints \"Geeks for Geeks\", each word in separate line\n        Console.WriteLine(\"Geeks\");\n        Console.WriteLine(\"for\");\n        Console.WriteLine(\"Geeks\");\n    }\n}",
                "lang_text": "csharp"
            },
            {
                "lang": "Javascript",
                "full_func": "//Back-end complete function Template for javascript\n\nclass Solution {\n    utility() {\n        console.log(\"Geeks\"); //Print \"Geeks\"\n        console.log(\"for\"); //Print \"for\"\n        console.log(\"Geeks\"); //Print \"Geeks\"\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}