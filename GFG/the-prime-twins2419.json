{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705012,
            "title": "The Prime Twins",
            "titleSlug": "the-prime-twins2419",
            "content": "<p><span style=\"font-size:18px\">Given two positive numbers <strong>L</strong> and <strong>R</strong> <strong>(L &lt; R)</strong>, find out the smallest twins in the range <strong>[L , R]</strong>.Two numbers are twins if they are <strong>prime numbers&nbsp;</strong>and&nbsp;difference between them is 2.</span><br />\n<br />\n<span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input</strong>: L = 0, R = 5\n<strong>Output:</strong>&nbsp;[3, 5]\n<strong>Explanation</strong>: Difference between 3 and 5 is 2\nand also these two are smallest prime in range.\nSo the answer is 3, 5. </span>\n</pre>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input: </strong>L = 5, R = 10\n<strong>Output:&nbsp;</strong>[5, 7]\n<strong>Explanation</strong>: Difference between 5 and 7 is 2\nand also these two are smallest prime in range.\nSo the answer is 5, 7. \n</span></pre>\n\n<p><br />\n<span style=\"font-size:18px\"><strong>Your Task:&nbsp;&nbsp;</strong><br />\nYou dont need to read input or print anything. Complete the function <strong>primeTwins()&nbsp;</strong>which takes L and R&nbsp;as input parameter and returns a pair if exist else returns -1.<br />\n<br />\n<strong>Expected Time Complexity:</strong> O(nloglogn)<br />\n<strong>Expected Auxiliary Space:</strong> O(n)<br />\n<br />\n<strong>Constraints:</strong><br />\n0&lt;= L&nbsp;&lt;=500<br />\n2&lt;= R&nbsp;&lt;=1000</span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two positive integers L and R (L < R), find the smallest twin primes in the range [L, R]. Twin primes are prime numbers that differ by 2.",
                "constraints": [
                    "0 <= L <= 500",
                    "2 <= R <= 1000"
                ],
                "testcases": [
                    {
                        "input": "L = 0, R = 5",
                        "output": "[3, 5]",
                        "explanation": "The smallest twin primes within the range [0, 5] are 3 and 5."
                    },
                    {
                        "input": "L = 5, R = 10",
                        "output": "[5, 7]",
                        "explanation": "The smallest twin primes within the range [5, 10] are 5 and 7."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Use Sieve of Eratosthenes.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "sieve",
                "slug": "sieve"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\nclass Solution {\n  public:\n    vector<int> primeTwins(int L, int R) \n{ \n    // Create a boolean array \"prime[0..R]\" and initialize \n    // all entries it as true. A value in prime[i] will finally \n    // be false if i is Not a prime, else true. \n    bool prime[R+1], twin = false; \n    memset(prime, true, sizeof(prime)); \n\n    prime[0] = prime[1] = false; \n\n    // Look for the smallest twin \n    for (int p=2; p<=floor(sqrt(R))+1; p++) \n    { \n        // If p is not marked, then it is a prime \n        if (prime[p]) \n        { \n            // Update all multiples of p \n            for (int i=p*2; i<=R; i += p) \n                prime[i] = false; \n        } \n    } \n    vector<int>ans;\n\n    // Now print the smallest twin in range \n    for (int i=L; i<=R-2; i++) \n    { \n        if (prime[i] && prime[i+2]) \n        { \n            ans.push_back(i);\n            ans.push_back(i+2); \n            twin = true; \n            break; \n        } \n    } \n    \n    if (twin == false) ans.push_back(-1);\nreturn ans;\n}\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "class Solution\n{\n    // Sieve of Eratosthenes algorithm to find prime numbers\n    public List<int> primeTwins(int L, int R)\n    {\n        bool[] prime = new bool[R + 1];\n        bool twin = false;\n        List<int> ans = new List<int>();\n        \n        // Initialize all elements as true\n        for (int i = 0; i < prime.Length; i++)\n        {\n            prime[i] = true;\n        }\n        \n        prime[0] = prime[1] = false;\n\n        // Mark all multiples of primes as false\n        for (int p = 2; p * p <= R; p++)\n        {\n            if (prime[p])\n            {\n                for (int i = p * p; i <= R; i += p)\n                {\n                    prime[i] = false;\n                }\n            }\n        }\n\n        // Find the smallest twin in the range\n        for (int i = L; i <= R - 2; i++)\n        {\n            if (prime[i] && prime[i + 2])\n            {\n                ans.Add(i);\n                ans.Add(i + 2);\n                twin = true;\n                break;\n            }\n        }\n\n        if (!twin)\n        {\n            ans.Add(-1);\n        }\n\n        return ans;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}