{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 881683,
            "title": "The Thief Problem",
            "titleSlug": "the-thief-problem--180930",
            "content": "<p><span style=\"font-size: 18px;\">You are given an integer array <strong>arr[]</strong>. The elements of array represent the value of items. You are also given an integer <strong>k</strong>. Now, a thief wants to commit a burglary but he can only pick <strong>k</strong> items from the given items. Help him so that he gets the maximum total value out of this theft.</span></p>\n<p><strong><span style=\"font-size: 18px;\">Examples:</span></strong></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input</strong>: arr[] = [3, 7, 2, 5, 12, 30], k = 3\n<strong>Output: </strong>49</span>\n<span style=\"font-size: 18px;\"><strong>Explanation:</strong> Here<strong> </strong>k = 3<strong>. </strong>The thief should pick the bolded items: 3 <strong>7</strong> 2 5 <strong>12</strong> <strong>30</strong>. So, the sum of these is 49.</span>\n</pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input</strong>: arr[] = [8, 10, 2, 50, 80, 20], k = 4\n<strong>Output: </strong>160</span>\n\n<span style=\"font-size: 18px;\"><strong>Explanation:</strong> Here k = 4.<strong> </strong>The thief should pick the bolded items: 8 <strong>10</strong> 2 <strong>50</strong>&nbsp; <strong>80</strong> <strong>20</strong>. So, the sum of these is 160.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &le; arr.size(), k &le; 10<sup>5</sup><br />1&nbsp;&le; arr[i]&nbsp;&le; 1000</span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:20px\">Sort arr in reverse order. The just sum elements from i=0 to i=k.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "CPP",
                "slug": "cpp"
            },
            {
                "name": "Java",
                "slug": "java"
            },
            {
                "name": "Java-Collections",
                "slug": "java-collections"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nclass Solution {\n  public:\n    int getMaxVal(vector<int> &arr, int k) {\n        // sorting the vector in decreasing order\n        int n = arr.size();\n        sort(arr.begin(), arr.end(), greater<int>());\n        int ans = 0;\n\n        // adding first k elements\n        for (int i = 0; i < k; i++)\n            ans += arr[i];\n\n        // returning maximum value\n        return ans;\n    }\n};",
                "lang_text": "cpp"
            }
        ],
        "platform": "GFG"
    }
}