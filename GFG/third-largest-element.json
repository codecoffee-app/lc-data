{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 700312,
            "title": "Third largest element",
            "titleSlug": "third-largest-element",
            "content": "<p><span style=\"font-size: 12pt;\">Given an array, <strong>arr</strong> of positive integers. Find the third largest element in it. R<span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">eturn <strong>-1</strong> if the third largest element is not found.</span></span></p>\n<p><span style=\"font-size: 12pt;\"><strong>Examples:</strong></span></p>\n<pre><span style=\"font-size: 12pt;\"><strong>Input: </strong>arr[] = [2, 4, 1, 3, 5]<br /><strong style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Output: </strong><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">3<br /></span><strong>Explanation</strong>: The third largest element in the array [2, 4, 1, 3, 5] is 3.</span></pre>\n<pre><span style=\"font-size: 12pt;\"><strong style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Input: </strong><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">arr[] = [10, 2]<br /></span><strong style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Output: </strong><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">-1<br /></span><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\"><strong>Explanation</strong>: There are less than three elements in the array, so the third largest element cannot be determined.<br /></span></span></pre>\n<pre><span style=\"font-size: 12pt;\"><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\"><strong style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Input: </strong><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">arr[] = [5, 5, 5]<br /></span><strong style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Output: </strong><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">5<br /></span><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\"><strong>Explanation</strong>: In the array [5, 5, 5], the third largest element can be considered 5, as there are no other distinct elements.</span></span></span></pre>\n<p><span style=\"font-size: 12pt;\"><strong>Expected Time Complexity:</strong> O(n)<br /><strong>Expected Space&nbsp;</strong><strong style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">Complexity</strong><strong style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\">:</strong><span style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\"> O(1)</span></span></p>\n<p><span style=\"font-size: 12pt;\"><strong>Constraints:</strong><br />1 &le; arr.size &le; 10<sup>5</sup><br />1 &le; arr[i] &le; 10<sup>5</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size: 18px;\">Use three variables to store the largest, second largest and third-largest elements respectively.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [
            "amazon",
            "microsoft",
            "makemytrip"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    // Function to find the third largest element in the array.\n    int thirdLargest(vector<int> &arr) {\n        int n = arr.size();\n        // Base Case: if the array has less than 3 elements, return -1.\n        if (n <= 2)\n            return -1;\n\n        // Initialize three variables to keep track of the three largest elements.\n        int big1 = max(arr[0], arr[1]);\n        int big2 = min(arr[0], arr[1]);\n        int big3 = INT_MIN;\n\n        // Traverse the array to find the third largest element.\n        for (int i = 2; i < n; i++) {\n            /* three way filtering */\n            // If the current element is greater than the third largest element, update\n            // the third largest element.\n            if (arr[i] > big3) {\n                big3 = arr[i];\n            }\n            // If the current element is greater than the second largest element, update\n            // the third and second largest elements.\n            if (arr[i] > big2) {\n                big3 = big2;\n                big2 = arr[i];\n            }\n            // If the current element is greater than the first largest element, update\n            // all three largest elements.\n            if (arr[i] > big1) {\n                big2 = big1;\n                big1 = arr[i];\n            }\n        }\n\n        // Return the third largest element.\n        return big3;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution {\n    int thirdLargest(int arr[]) {\n        int n = arr.length;\n        if (n <= 2) return -1;\n        int big1 = Math.max(arr[0], arr[1]);\n        int big2 = Math.min(arr[0], arr[1]);\n        int big3 = Integer.MIN_VALUE;\n\n        for (int i = 2; i < n; i++) {\n            // three way filtering\n            if (arr[(int)i] > big3) {\n                big3 = arr[(int)i];\n            }\n            if (arr[(int)i] > big2) {\n                big3 = big2;\n                big2 = arr[(int)i];\n            }\n            if (arr[(int)i] > big1) {\n                big2 = big1;\n                big1 = arr[(int)i];\n            }\n        }\n        return big3;\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "class Solution:\n\n    def thirdLargest(self, arr):\n        n = len(arr)\n        big1 = -1  #initialize the first biggest number\n        big2 = -1  #initialize the second biggest number\n        big3 = -1  #initialize the third biggest number\n\n        for i in arr:\n            if i > big3:  #if current number is greater than third biggest\n                big3 = i  #update third biggest to current number\n\n            if big3 > big2:  #if third biggest is greater than second biggest\n                big2, big3 = big3, big2  #swap second and third biggest\n\n            if big2 > big1:  #if second biggest is greater than first biggest\n                big1, big2 = big2, big1  #swap first and second biggest\n\n        return big3  #return the third biggest number\n",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "class Solution {\n    thirdLargest(arr) {\n        let n = arr.length;\n        if (n <= 2) {  // Check if the array has less than or equal to 2 elements.\n            return -1; // Return -1 if the array has less than or equal to 2 elements,\n                       // as it does not have a third largest element.\n        }\n        let big1 = Math.max(\n            arr[0],\n            arr[1]); // Initialize big1 as the maximum of the first two elements.\n        let big2 = Math.min(\n            arr[0],\n            arr[1]); // Initialize big2 as the minimum of the first two elements.\n        let big3 = Number.MIN_SAFE_INTEGER; // Initialize big3 as the minimum possible\n                                            // integer value.\n\n        for (let i = 2; i < n; i++) {\n            /*three way filtering */\n            if (arr[i] > big3) // Compare the current element with big3.\n            {\n                big3 =\n                    arr[i]; // If the current element is greater than big3, update big3.\n            }\n            if (arr[i] > big2) // Compare the current element with big2.\n            {\n                big3 = big2; // If the current element is greater than big2, update big3\n                             // with the previous value of big2.\n                big2 = arr[i]; // Update big2 with the current element.\n            }\n            if (arr[i] > big1) // Compare the current element with big1.\n            {\n                big2 = big1; // If the current element is greater than big1, update big2\n                             // with the previous value of big1.\n                big1 = arr[i]; // Update big1 with the current element.\n            }\n        }\n        return big3; // Return the third largest element found in the array.\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}