{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704767,
            "title": "Three distinct factors",
            "titleSlug": "three-distinct-factors5613",
            "content": "<p><span style=\"font-size:18px\">Given a positive integer <strong>N</strong>. The task is to check whether a number has exactly three distinct factors or not. </span></p>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\n<span style=\"font-size:18px\"><strong>N = </strong>10</span>\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\n<span style=\"font-size:18px\">0</span>\n<span style=\"font-size:18px\"><strong>Explanation:</strong></span>\n<span style=\"font-size:18px\">10 has 4 factors- 1,2,5 and 10.\nSo, the Ouput is 0.</span></pre>\n\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\n<span style=\"font-size:18px\"><strong>N = </strong>9</span>\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\n<span style=\"font-size:18px\">1</span>\n<span style=\"font-size:18px\"><strong>Explanation:</strong></span>\n<span style=\"font-size:18px\">9 has 3 factors- 1,3 and 9.\nSo, the Ouput is 1.</span></pre>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>hasThreePrimeFac()</strong> which takes an Integer N as input and returns 1 if it has exactly 3 factors else returns 0.</span></p>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(sqrt(N))<br />\n<strong>Expected Auxiliary Space:</strong> O(1)</span></p>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong></span><br />\n<span style=\"font-size:18px\">1 &lt;= N &lt;= 10<sup>12</sup></span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a positive integer N, determine if it has exactly three distinct factors. A number with exactly three factors has the form p^2, where p is a prime number.",
                "constraints": [
                    "1 <= N <= 10^12"
                ],
                "testcases": [
                    {
                        "input": "10",
                        "output": "0",
                        "explanation": "The factors of 10 are 1, 2, 5, and 10. Since it has four factors, the output is 0."
                    },
                    {
                        "input": "9",
                        "output": "1",
                        "explanation": "The factors of 9 are 1, 3, and 9. Since it has three factors, the output is 1."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Perfect Squares are the only numbers which can have exactly 3 unique Factors. Although, it doesn&#39;t mean that all Perfect Squares have 3 factors.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Prime Number",
                "slug": "prime-number"
            },
            {
                "name": "Numbers",
                "slug": "numbers"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "vmware"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    \n    bool isPrime(long long n)\n    {\n    \tif (n <= 1)\n    \t\treturn false;\n    \tif (n <= 3)\n    \t\treturn true;\n    \tif (n % 2 == 0 || n % 3 == 0)\n    \t\treturn false;\n    \n    \tfor (int i = 5; i * i <= n; i = i + 6)\n    \t\tif (n % i == 0 || n % (i + 2) == 0)\n    \t\t\treturn false;\n    return true;\n    }\n    \n    int hasThreePrimeFac(long long N) {\n        \n        long long srt = (long long)sqrt(N);\n        \n        if(isPrime(srt) && srt*srt==N)\n            return 1;\n        else\n            return 0;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "\nclass Solution {\n  hasThreePrimeFac(N) {\n    function isPrime(n) {\n      if (n <= 1)\n        return false;\n      if (n <= 3)\n        return true;\n      if (n % 2 == 0 || n % 3 == 0)\n        return false;\n      for (let i = 5; i * i <= n; i = i + 6)\n        if (n % i == 0 || n % (i + 2) == 0)\n          return false;\n      return true;\n    }\n    let srt = Math.floor(Math.sqrt(N));\n    if(isPrime(srt) && srt*srt==N)\n        return 1;\n    else\n        return 0;\n  }\n}",
                "lang_text": "javascript"
            },
            {
                "lang": "C#",
                "full_func": "\nclass Solution\n{\n    // Function to check if a number is prime\n    private bool isPrime(long n)\n    {\n        if (n <= 1) return false;\n        if (n <= 3) return true;\n        if (n % 2 == 0 || n % 3 == 0) return false;\n        for (long i = 5; i * i <= n; i += 6)\n        {\n            if (n % i == 0 || n % (i + 2) == 0) return false;\n        }\n        return true;\n    }\n\n    // Function to check if the given number N has exactly three prime factors\n    public int hasThreePrimeFac(long N)\n    {\n        long srt = (long)Math.Sqrt(N);\n        if (isPrime(srt) && srt * srt == N)\n            return 1;\n        else\n            return 0;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}