{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705600,
            "title": "Time to Words",
            "titleSlug": "time-to-words3728",
            "content": "<p><span style=\"font-size: 18px;\">Given a time in the format of hh:mm (12-hour format) <em><strong>0 &lt; HH&nbsp;&lt; 12, 0 &lt;= MM&nbsp;&lt; 60</strong>.</em> The task is to convert it into words.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Note:</strong> There are different corner cases appears for simplicity refer this example:</span></p>\n<pre><span style=\"font-size: 18px;\">6:00 six o'clock 6:10 ten minutes past six\n6:15 quarter past six\n6:30 half past six\n6:45 quarter to seven\n6:47 thirteen minutes to seven</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input</strong>: H = 6, M = 0\n<strong>Output:</strong>&nbsp;six o' clock\n<strong>Explanation</strong>: 6H:0M = six o' clock.</span></pre>\n<p><br /><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>H = 6, M = 10\n<strong>Output:&nbsp;</strong>ten minutes past six</span><span style=\"font-size: 18px;\">\n<strong>Explanation</strong>: 6H:10M = ten minutes past six.\n</span></pre>\n<p><br /><span style=\"font-size: 18px;\"><strong>Your Task:&nbsp;&nbsp;</strong><br />You dont need to read input or print anything. Complete the function <strong>timeToWord()&nbsp;</strong>which takes H&nbsp;and M&nbsp;as input parameter and returns&nbsp;words converted from given time.<br /><br /><strong>Expected Time Complexity:</strong> O(1)<br /><strong>Expected Auxiliary Space:</strong> O(k<sup>2</sup>)<br /><br /><strong>Constraints:</strong><br />0 &lt;&nbsp;H&nbsp;&lt; 12<br />0= &lt; M&nbsp;&lt; 60</span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a time in hh:mm format (12-hour format, where 0 < HH < 12 and 0 <= MM < 60), convert it into words. For instance, 6:00 is \"six o'clock\", 6:10 is \"ten minutes past six\", 6:15 is \"quarter past six\", 6:30 is \"half past six\", 6:45 is \"quarter to seven\", and 6:47 is \"thirteen minutes to seven\".",
                "constraints": [
                    "0 < H < 12",
                    "0 <= M < 60"
                ],
                "testcases": [
                    {
                        "input": "H = 6, M = 0",
                        "output": "six o' clock",
                        "explanation": "6H:0M translates directly to six o' clock."
                    },
                    {
                        "input": "H = 6, M = 10",
                        "output": "ten minutes past six",
                        "explanation": "6H:10M translates to ten minutes past six."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Try to store words in an array.</span></p>"
        ],
        "relatedTopics": [],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\nclass Solution {\n  public:\n    //Function to convert time in hours and minutes to words.\n    string timeToWord(int H, int M){\n        //Array to store the words for numbers from 0 to 29.\n        char nums[][64] = { \"zero\", \"one\", \"two\", \"three\", \"four\", \n                        \"five\", \"six\", \"seven\", \"eight\", \"nine\", \n                        \"ten\", \"eleven\", \"twelve\", \"thirteen\", \n                        \"fourteen\", \"fifteen\", \"sixteen\", \"seventeen\", \n                        \"eighteen\", \"nineteen\", \"twenty\", \"twenty one\", \n                        \"twenty two\", \"twenty three\", \"twenty four\", \n                        \"twenty five\", \"twenty six\", \"twenty seven\", \n                        \"twenty eight\", \"twenty nine\", \n                      }; \n  \n        if (M == 0){\n            //If minutes is 0, return the hour word followed by \"o' clock\".\n            string s=nums[H]; \n            return s+\" o' clock\";\n        } \n        else if (M == 1){ \n            //If minutes is 1, return \"one minute past\" followed by the hour word.\n            string s=nums[H];\n            return \"one minute past \"+s; \n        }\n        else if (M == 59){ \n            //If minutes is 59, return \"one minute to\" followed by the word of the next hour.\n            string s=nums[(H % 12) + 1];\n            return \"one minute to \"+s; \n        }\n        else if (M == 15){ \n            //If minutes is 15, return \"quarter past\" followed by the hour word.\n            string s=nums[H];\n            return \"quarter past \"+s; \n        }\n        else if (M == 30){ \n            //If minutes is 30, return \"half past\" followed by the hour word.\n            string s=nums[H];\n            return \"half past \"+s; \n        }\n        else if (M == 45){ \n            //If minutes is 45, return \"quarter to\" followed by the word of the next hour.\n            string s=nums[(H % 12) + 1];\n            return \"quarter to \"+s; \n        }\n        else if (M <= 30){ \n            //If minutes is less than or equal to 30, return the word of minutes followed by \"minutes past\" and the hour word.\n            string s=nums[M];\n            string s1=nums[H];\n            return s+\" minutes past \"+s1; \n        }\n        else if (M > 30){ \n            //If minutes is greater than 30, return the word of (60 - minutes) followed by \"minutes to\" and the word of the next hour.\n            string s=nums[60 - M];\n            string s1=nums[(H % 12) + 1];\n            return s+\" minutes to \"+s1; \n        }\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}