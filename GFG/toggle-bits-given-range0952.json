{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703919,
            "title": "Toggle bits in the given range",
            "titleSlug": "toggle-bits-given-range0952",
            "content": "<p><span style=\"font-size: 18px;\">Given a non-negative number <strong>n</strong> and two values <strong>l</strong> and <strong>r</strong>. The problem is to toggle the bits in the range l to r in the binary representation of n, i.e., to toggle bits from the <strong>lth</strong> least significant bit to the <strong>rth</strong> least significant bit (the rightmost bit as counted as the <strong>first </strong>bit).<br /></span></p>\n<blockquote>\n<p><span style=\"font-size: 18px;\">A toggle operation <strong>flips</strong> a bit <strong>0</strong> to <strong>1</strong> and a bit <strong>1</strong> to <strong>0</strong>.</span></p>\n</blockquote>\n<p><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong></span>\n<span style=\"font-size: 18px;\"><strong>n</strong> = 17 , <strong>l</strong> = 2 , <strong>r</strong> = 3</span>\n<span style=\"font-size: 18px;\"><strong>Output:</strong></span>\n<span style=\"font-size: 18px;\">23</span>\n<span style=\"font-size: 18px;\"><strong>Explanation:</strong></span>\n<span style=\"font-size: 18px;\">(17)<sub>10</sub> = (10001)<sub>2</sub>.  After toggling all\nthe bits from 2nd to 3rd position we get\n(10111)<sub>2</sub> = (23)<sub>10</sub></span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong></span>\n<span style=\"font-size: 18px;\"><strong>n</strong> = 50 , <strong>l</strong> = 2 , <strong>r</strong> = 5</span>\n<span style=\"font-size: 18px;\"><strong>Output:</strong></span>\n<span style=\"font-size: 18px;\">44</span>\n<span style=\"font-size: 18px;\"><strong>Explanation:</strong></span>\n<span style=\"font-size: 18px;\">(50)<sub>10</sub> = (110010)<sub>2</sub>.  After toggling all\nthe bits from 2nd to 5th position we get\n(101100)<sub>2</sub> = (44)<sub>10</sub></span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Your Task:</strong><br />You don't need to read input or print anything. Your task is to complete the function <strong>toggleBits()</strong> which takes <strong>three </strong>Integers n, l and r as input and returns the modified <strong>Integer </strong>as the answer.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong> O(1)<br /><strong>Expected Auxiliary Space:</strong> O(1)</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong></span><br /><span style=\"font-size: 18px;\">1 &lt;= n &lt;= 10<sup>5</sup><br />1 &lt;= l&lt;=r &lt;=<sup> </sup>Number of Bits in n</span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a non-negative integer `n`, and two integers `l` and `r`, toggle the bits in the binary representation of `n` from the `l`-th least significant bit to the `r`-th least significant bit (inclusive).  The rightmost bit is considered the 1st bit. Toggling a bit means flipping it: 0 becomes 1, and 1 becomes 0.",
                "constraints": [
                    "1 <= n <= 10^5",
                    "1 <= l <= r <= Number of Bits in n"
                ],
                "testcases": [
                    {
                        "input": "n = 17, l = 2, r = 3",
                        "output": "23",
                        "explanation": "The binary representation of 17 is 10001. Toggling bits from the 2nd to the 3rd position results in 10111, which is 23 in decimal."
                    },
                    {
                        "input": "n = 50, l = 2, r = 5",
                        "output": "44",
                        "explanation": "The binary representation of 50 is 110010. Toggling bits from the 2nd to the 5th position results in 101100, which is 44 in decimal."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size: 18px;\">Try to solve implementing the property of <strong>XOR</strong>.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Bit Magic",
                "slug": "bit-magic"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "// Back-end complete function that toggles bits in a given range\nclass Solution {\n  public:\n    \n    // Function to toggle bits in the given range\n    int toggleBits(int n, int l, int r) {\n        \n        // Calculate the number to be XOR'ed with n to toggle bits in range [l, r]\n        int num = ((1 << r) - 1) ^ ((1 << (l - 1)) - 1);\n \n        // Return the result of XOR operation between n and num\n        return (n ^ num);\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\nclass Solution {\n    // Function to toggle the bits from l to r in a given number n\n    static int toggleBits(int n , int l , int r) {\n        \n        // Calculate the number with only bits from l to r as 1 and all other bits as 0\n        int num = ((1 << r) - 1) ^ ((1 << (l - 1)) - 1);\n \n        // Toggle the bits in n using XOR operation with the calculated number\n        return (n ^ num);\n    }\n};",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\r\n\r\nclass Solution:\r\n\r\n    # Function to toggle bits from l to r in a given number n\r\n    def toggleBits(self, n , l , r):\r\n        \r\n        # Calculate the number representing bits from l to r\r\n        # by creating a binary number with all 1s from r to l and then flipping it\r\n        num = ((1 << r) - 1) ^ ((1 << (l - 1)) - 1)\r\n \r\n        # XOR the number n with the calculated number to toggle the bits\r\n        return (n ^ num)",
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    //Function to toggle bits from l to r in the binary representation of n.\n    public int toggleBits(int n, int l, int r)\n    {\n        // Calculate the number to be XOR'ed with N to toggle bits in range [l, r]\n        int num = ((1 << r) - 1) ^ ((1 << (l - 1)) - 1);\n\n        // Return the result of XOR operation between n and num\n        return (n ^ num);\n    }\n}",
                "lang_text": "csharp"
            },
            {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\r\n\r\n/**\r\n * @param {number} n\r\n * @param {number} l\r\n * @param {number} r\r\n * @return {number}\r\n*/\r\n\r\nclass Solution {\r\n    toggleBits(n, l, r){\r\n       return (n ^ (((1 << r) - 1) ^ ((1 << (l - 1)) - 1)));\r\n    }\r\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}