{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705079,
            "title": "Tom and Jerry",
            "titleSlug": "tom-and-jerry1325",
            "content": "<p><span style=\"font-size:18px\">Tom and Jerry being bored in this pandemic, decides to play a game. Given an&nbsp;<strong>integer N</strong>. On each player&#39;s turn, that player makes a move by&nbsp;<strong>subtracting a divisor of current N</strong>&nbsp;(which is less than N) from current N, thus&nbsp;<strong>forming a new N for the next turn</strong>.&nbsp;</span><span style=\"font-size:18px\">The player who does not have any divisor left to subtract loses the game.</span></p>\r\n\r\n<p><span style=\"font-size:18px\">The game begins with Tom playing the first move. Both Tom and Jerry play optimally. The task is to determine who wins the game. Return&nbsp;<strong>1</strong>&nbsp;if Tom wins, else return&nbsp;<strong>0</strong>.</span></p>\r\n\r\n<p><strong><span style=\"font-size:18px\">Example 1:</span></strong></p>\r\n\r\n<pre>\r\n<strong><span style=\"font-size:18px\">Input:</span></strong>\r\n<span style=\"font-size:18px\">N = 2</span>\r\n<strong><span style=\"font-size:18px\">Output:</span></strong>\r\n<span style=\"font-size:18px\">1</span>\r\n<strong><span style=\"font-size:18px\">Explanation:</span></strong>\r\n<span style=\"font-size:18px\">Tom subtracts 1 from N to make N = 1.\r\nNow, Jerry isn&#39;t left with any possible\r\nturn so Tom wins the game, and therefore\r\nthe Output is 1.</span></pre>\r\n\r\n<p><strong><span style=\"font-size:18px\">Example 2:</span></strong></p>\r\n\r\n<pre>\r\n<strong><span style=\"font-size:18px\">Input:</span></strong>\r\n<span style=\"font-size:18px\">N = 4</span>\r\n<strong><span style=\"font-size:18px\">Output:</span></strong>\r\n<span style=\"font-size:18px\">1</span>\r\n<strong><span style=\"font-size:18px\">Explanation:\r\n</span></strong><span style=\"font-size:18px\">1st turn: Tom subtract 1 from N as 1 is \r\na divisor of 4 and less than 4.\r\n\r\n2nd turn: N=3, Jerry has to subtract 1 as 1 \r\nis the only divisor of 3 which is less than 3.\r\n\r\n3rd turn: N=2, Tom subtract 1 as 1 is the \r\nonly divisor of 2 which is less than 2.\r\n\r\n4th turn: N=1, Jerry can&#39;t subtract any value.\r\nSo, Tom wins.</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou don&#39;t need to read input or print anything. Your task is to complete the function numsGame() which takes an Integer N as input and returns 1 if Tom wins else returns 0.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity: </strong>O(1)<br />\r\n<strong>Expected Auxiliary Space:</strong> O(1)</span></p>\r\n\r\n<p><strong><span style=\"font-size:18px\">Constraints:</span></strong><br />\r\n<span style=\"font-size:18px\">1 &lt;&nbsp;N &le; 10<sup>8</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Tom and Jerry are playing a game. Given an integer N, on each player's turn, they subtract a divisor of the current N (which is less than N) from N, creating a new N for the next turn. The player who cannot find a divisor to subtract loses the game. Tom goes first. Determine who wins, assuming both play optimally.",
                "constraints": [
                    "1 < N <= 10^8"
                ],
                "testcases": [
                    {
                        "input": "2",
                        "output": "1",
                        "explanation": "Tom subtracts 1 from N, making N = 1. Jerry has no moves left, so Tom wins."
                    },
                    {
                        "input": "4",
                        "output": "1",
                        "explanation": "Tom subtracts 1 from 4, making N=3. Jerry subtracts 1 from 3, making N=2. Tom subtracts 1 from 2, making N=1. Jerry has no moves, so Tom wins."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">If N = 4, Tom will start by subtracting 1 from N rather than subtracting 2.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [
            "flipkart"
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\r\n  public:\r\n    int numsGame(int N) {\r\n        \r\n        // Tom wins if N is even\r\n        if(N%2 == 0)\r\n            return 1;\r\n        // else Jerry wins\r\n        else\r\n            return 0;\r\n    }\r\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\r\n\r\nclass Solution {\r\n    static int numsGame(int N) {\r\n        \r\n        // Tom wins if N is even\r\n        if(N%2 == 0)\r\n            return 1;\r\n        // else Jerry wins\r\n        else\r\n            return 0;\r\n    }\r\n};",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "#Back-end complete function Template for Python 3\r\n\r\nclass Solution:\r\n    def numsGame(self, N):\r\n        \r\n        # Tom wins if N is even\r\n        if N%2 == 0:\r\n            return 1\r\n        # else Jerry wins\r\n        else:\r\n            return 0",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\r\n/**\r\n * @param {number} N\r\n * @returns {number}\r\n*/\r\n\r\nclass Solution {\r\n    //Function to calculate the number of ways to fill the array\r\n    numsGame(N) {\r\n        // Tom wins if N is even\r\n        if (N%2 === 0) {\r\n            return 1;\r\n        } \r\n        // else Jerry wins\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}