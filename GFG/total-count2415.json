{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703451,
            "title": "Total count",
            "titleSlug": "total-count2415",
            "content": "<p><span >You are given an array<strong> arr[]</strong> of positive integers and a threshold value <strong>k</strong>. For each element in the array, divide it into the <strong>minimum </strong>number of small integers such that each divided integer is less than or equal to <strong>k</strong>. Compute the total number of these integer across all elements of the array.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>k = 3, arr[] = [5, 8, 10, 13]\n<strong>Output:</strong> 14\n<strong>Explanation:</strong> Each number can be expressed as sum of different numbers less than or equal to k as 5 (3 + 2), 8 (3 + 3 + 2), 10 (3 + 3 + 3 + 1), 13 (3 + 3 + 3 + 3 + 1). So, the sum of count of each element is (2+3+4+5)=14.\n</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>k = 4, arr[] = [10, 2, 3, 4, 7]\n<strong>Output:</strong> 8\n<strong>Explanation:</strong> Each number can be expressed as sum of different numbers less than or equal to k as 10 (4 + 4 + 2), 2 (2), 3 (3), 4 (4) and 7 (4 + 3).So, the sum of count of each element is (3 + 1 + 1 + 1 + 2) = 8.\n</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong> O(n)<br /><strong>Expected Auxiliary Space:</strong>&nbsp;O(1)</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &le; arr.size() &le; 10<sup>5</sup><br />0 &le; arr[i] &le; 10<sup>5</sup><br />1 &le; k &le;&nbsp;</span><span style=\"font-size: 18px;\">10</span><sup>5</sup></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p>Count how many times each element needs to be divided by <span class=\"katex\"><span class=\"katex-mathml\"><br />k</span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"mord mathnormal\">k</span></span></span></span>, rounding up where necessary, and including special handling for zeros.</p>\n<p>&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Division",
                "slug": "division"
            },
            {
                "name": "Mathematical",
                "slug": "mathematical"
            }
        ],
        "companies": [
            "zoho"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function template for C++\n\nclass Solution {\n  public:\n    // Function to calculate the total count of elements when divided by k.\n    int totalCount(int k, vector<int>& arr) {\n        int count = 0;\n        int n = arr.size();\n        // iterating over all the elements.\n        for (int i = 0; i < n; i++) {\n            // if element is divisible by k, adding quotient to count.\n            if (arr[i] % k == 0) {\n                count += arr[i] / k;\n            } else {\n                // if not divisible, adding quotient + 1 to count.\n                count += (arr[i] / k + 1);\n            }\n            // increasing count by 1 if element is 0.\n            if (arr[i] == 0) {\n                count++;\n            }\n        }\n        // returning total count.\n        return count;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution {\n    // Function to calculate the total count of elements when divided by k.\n    public int totalCount(int k, int[] arr) {\n        int count = 0;\n\n        // Iterating over all the elements\n        for (int num : arr) {\n            // If element is divisible by k, adding quotient to count\n            if (num % k == 0) {\n                count += num / k;\n            } else {\n                // If not divisible, adding quotient + 1 to count\n                count += (num / k + 1);\n            }\n            // Increasing count by 1 if element is 0\n            if (num == 0) {\n                count++;\n            }\n        }\n\n        // Returning total count\n        return count;\n    }\n}\n",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "class Solution:\n\n    def totalCount(self, k, arr):\n        count = 0\n\n        # Iterating over all the elements\n        for num in arr:\n            # If element is divisible by k, add quotient to count\n            if num % k == 0:\n                count += num // k\n            else:\n                # If not divisible, add quotient + 1 to count\n                count += (num // k + 1)\n            # Increase count by 1 if element is 0\n            if num == 0:\n                count += 1\n\n        # Returning total count\n        return count\n",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "// User function Template for javascript\n\n/**\n * @param {number[]} arr\n * @param {number} k\n * @return {number}\n */\n\nclass Solution {\n\n    totalCount(k, arr) {\n        let count = 0;\n        let n = arr.length;\n        for (let i = 0; i < n; i++) {\n            if (arr[i] % k == 0) {\n                count += arr[i] / k;\n            } else {\n                count += Math.floor(arr[i] / k + 1);\n            }\n            if (arr[i] == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}