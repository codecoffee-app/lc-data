{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703948,
            "title": "Total digits",
            "titleSlug": "total-digits4030",
            "content": "<p><span style=\"font-size: 18px;\">Given a number <strong>n</strong>, count the total number of digits required to write all numbers from <strong>1 to n</strong>.<br /><br /><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input</strong>: n = 13\n<strong>Output:</strong>&nbsp;17&nbsp;\n<strong>Explanation</strong>: There are total 17 \ndigits required to write all \nnumbers from <strong>1 to 13</strong>.</span>\n</pre>\n<p><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>n = 4\n<strong>Output:&nbsp;</strong>4\n<strong>Explanation</strong>: There are total 4 \ndigits required to write all\nnumbers from <strong>1 to 4</strong>.\n</span></pre>\n<p><br /><span style=\"font-size: 18px;\"><strong>Your Task:&nbsp;&nbsp;</strong><br />You dont need to read input or print anything. Complete the function <strong>totalDigits()&nbsp;</strong>which takes n&nbsp;as input parameter and returns&nbsp;the<strong> total number of digits </strong>required to write all numbers from<strong> 1 to n</strong>.</span><br /><br /><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong> O(logn)<br /><strong>Expected Auxiliary Space:</strong> O(1)<br /><br /><strong>Constraints:</strong><br />1&lt;= n&nbsp;&lt;=100000</span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Calculate the total number of digits required to write all numbers from 1 to a given number 'n'.",
                "constraints": [
                    "1 <= n <= 100000"
                ],
                "testcases": [
                    {
                        "input": "13",
                        "output": "17",
                        "explanation": "The numbers from 1 to 13 are: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13.  The total number of digits is 9 (for 1-9) + 2 + 2 + 2 + 2 + 9 = 17."
                    },
                    {
                        "input": "4",
                        "output": "4",
                        "explanation": "The numbers from 1 to 4 are: 1, 2, 3, 4.  The total number of digits is 4."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">you&nbsp;have to&nbsp;decrease 0, 9, 99, 999 &hellip; from n to get the number of digits at ones, tens, hundredths, thousandths &hellip; places.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\nclass Solution {\n  public:\n    long long int totalDigits(long long int n) {\n    // number_of_digits store total\n    // digits we have to write\n    long long int number_of_digits = 0;\n\n    // In the loop we are decreasing\n    // 0, 9, 99 ... from n till\n    // ( n - i + 1 ) is greater than 0\n    // and sum them to number_of_digits\n    // to get the required sum\n    for (long long int i = 1; i <= n; i *= 10)\n        number_of_digits += (n - i + 1);\n\n    return number_of_digits;\n}\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    public long totalDigits(long n)\n    {\n        // number_of_digits store total\n        // digits we have to write\n        long number_of_digits = 0;\n\n        // In the loop we are decreasing\n        // 0, 9, 99 ... from n till\n        // ( n - i + 1 ) is greater than 0\n        // and sum them to number_of_digits\n        // to get the required sum\n        for (long i = 1; i <= n; i *= 10)\n            number_of_digits += (n - i + 1);\n\n        return number_of_digits;\n    }\n}",
                "lang_text": "csharp"
            },
            {
                "lang": "Javascript",
                "full_func": null,
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}