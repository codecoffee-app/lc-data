{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705197,
            "title": "Total number of Equal Partition",
            "titleSlug": "total-number-of-equal-partition0022",
            "content": "<p><span style=\"font-size: 18px;\">For a number&nbsp;<strong>N&nbsp;</strong>&nbsp;<strong>f(N)&nbsp;</strong>=&nbsp;the&nbsp;total number of parts in the partitions of&nbsp;<strong>N</strong>&nbsp;into equal parts.</span><br /><span style=\"font-size: 18px;\"><strong>For example</strong><br />if the given number is 4, the&nbsp;equal partitions will be:<br />{1,1,1,1} &nbsp; -&gt;total parts=4<br />{2,2} &nbsp; &nbsp; &nbsp; &nbsp;-&gt; total parts=2<br />{4} &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;-&gt; total parts=1<br />So, &nbsp;the total number of parts in the partition of 4 into equal parts is 7.Now you are given two number <strong>l,r</strong>. find the sum of f(i) for i=<strong>l to r</strong>.(both inclusive)</span></p>\n<p><strong><span style=\"font-size: 18px;\">Example 1:</span></strong></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong> l = 1, r = 2\n<strong>Output:</strong> 4\n<strong>Explaination:</strong> For 1 the partition is {1}. \nFor 2 the partitions are {1, 1} and {2}.</span></pre>\n<p><strong><span style=\"font-size: 18px;\">Example 2:</span></strong></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong> l = 4, r = 4\n<strong>Output:</strong> 7\n<strong>Explaination:</strong> The explaination is given \nin the question itself.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Your Task:</strong><br />You do not need t read input or print anything. Your task is to complete the function <strong>partitions()</strong> which takes l and r as input parameters and returns the total number of partitions.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong> O(r)<br /><strong>Expected Auxiliary Space:</strong> O(1)</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &le; l &le; r &le; 10<sup>7</sup>&nbsp; &nbsp;</span></p>",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "For a number N, f(N) is defined as the total number of parts in the partitions of N into equal parts. For example, if N = 4, the equal partitions are:\n\n*   {1, 1, 1, 1} -> total parts = 4\n*   {2, 2} -> total parts = 2\n*   {4} -> total parts = 1\n\nSo, f(4) = 4 + 2 + 1 = 7. Given two numbers l and r, find the sum of f(i) for i from l to r (inclusive).",
                "constraints": [
                    "1 <= l <= r <= 10^7"
                ],
                "testcases": [
                    {
                        "input": "l = 1, r = 2",
                        "output": "4",
                        "explanation": "For 1, the partition is {1}, so f(1) = 1. For 2, the partitions are {1, 1} and {2}, so f(2) = 2 + 1 = 3. Therefore, the sum of f(i) from 1 to 2 is 1 + 3 = 4."
                    },
                    {
                        "input": "l = 4, r = 4",
                        "output": "7",
                        "explanation": "For 4 the partitions are {1, 1, 1, 1}, {2, 2}, and {4}. The total number of parts is 4 + 2 + 1 = 7."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Find the number of partitions each number have from l to r(both inclusive).&nbsp;</span></p>",
            "<p><span style=\"font-size:18px\">Several smaller numbers have impact on bigger numbers.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "sieve",
                "slug": "sieve"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "// Back-end complete function Template for C++\n\nclass Solution{\npublic:\n    // Function to calculate the number of partitions in the given range\n    long long partitions(int l, int r){\n        long long c = 0;\n        for(int i = 2;i <= sqrt(r);i++){\n            for(int j = 2*i;j <= r;j += i){\n                if(j >= l){\n                    // Incrementing count based on the divisor and quotient\n                    if(j/i > sqrt(r))\n                        c += i;\n                    c += (j/i);\n                }\n            }\n        }\n        \n        // Considering the remaining numbers in the range\n        for(int i = max(2,l);i <= r;i++)\n            c += (i+1);\n\n        // Adding 1 to the count if the lower bound is 1\n        if(l == 1) c++;\n        \n        // Returning the count of partitions\n        return c;\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}