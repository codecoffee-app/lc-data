{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703949,
            "title": "Tough Competitors",
            "titleSlug": "tough-competitors0540",
            "content": "<p><span >Given an array <strong>arr[]</strong> of non-negative integers representing the skill levels of competitors, determine the minimum absolute difference between the skills of any two competitors. Competitors are considered tough if their skill difference is the smallest among all possible pairs.</span></p>\n<p><span ><strong>Examples</strong>:</span></p>\n<pre><span ><strong>Input:</strong> arr[] = [9, 4, 12, 6]</span><br /><span ><strong>Output:</strong> 2</span><br /><span ><strong>Explanation:</strong> The smallest difference between skill values is |4-6| = 2.</span></pre>\n<pre><span ><strong>Input:</strong> arr[] = [4, 9, 1, 32, 12]</span><br /><span ><strong>Output:</strong> 3</span><br /><span ><strong>Explanation:</strong> The smallest differences are |4-1| = 3 and |9-12| = 3. Thus, the smallest difference is 3.</span></pre>\n<p><span ><strong>Expected Time Complexity:</strong> O(n log n)</span><br /><span ><strong>Expected Auxiliary Space:</strong> O(1)</span></p>\n<p><span ><strong>Constraints:<br /></strong>1 &le; arr.size() &le; 10<sup>5</sup></span><br /><span >1 &le; arr[i] &le; 10<sup>6</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p><span >Sort the array, and find the minimum difference between consecutive elements.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Arrays",
                "slug": "arrays"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "// Function to find the minimum difference between adjacent elements in a sorted array\nclass Solution {\n  public:\n    int minDiff(vector<int>& arr) {\n        // Sorting the input array\n        sort(arr.begin(), arr.end());\n        // Initializing the minimum difference to maximum integer value\n        int minimumDiff = INT_MAX;\n        // Iterating through the sorted array to find the minimum difference\n        for (int i = 1; i < arr.size(); i++) {\n            // Updating the minimum difference if current difference is smaller\n            minimumDiff = min(minimumDiff, arr[i] - arr[i - 1]);\n        }\n        // Returning the minimum difference\n        return minimumDiff;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution {\n\n    public int minDiff(int[] arr) {\n        // Sort the input array\n        Arrays.sort(arr);\n        // Initialize the minimum difference to maximum integer value\n        int minimumDiff = Integer.MAX_VALUE;\n        // Iterate through the array to find the minimum difference between adjacent\n        // elements\n        for (int i = 1; i < arr.length; i++) {\n            minimumDiff = Math.min(minimumDiff, arr[i] - arr[i - 1]);\n        }\n        // Return the minimum difference found\n        return minimumDiff;\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "class Solution:\n\n    #Function to find minimum difference between any two elements in the array.\n    def minDiff(self, arr):\n\n        #sorting the array to make adjacent elements closer in value.\n        arr.sort()\n        minimumDiff = float('inf')\n\n        #iterating over the array to find minimum difference.\n        for i in range(1, len(arr)):\n            minimumDiff = min(minimumDiff, arr[i] - arr[i - 1])\n\n        return minimumDiff\n",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "class Solution {\n    minDiff(arr) {\n        // Sort the array in ascending order.\n        arr.sort((a, b) => a - b);\n        // Initialize the minimum difference with Infinity.\n        let minimumDiff = Infinity;\n        for (let i = 1; i < arr.length; i++) {\n            // Update minimum difference by comparing with adjacent elements.\n            minimumDiff = Math.min(minimumDiff, arr[i] - arr[i - 1]);\n        }\n        return minimumDiff;\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}