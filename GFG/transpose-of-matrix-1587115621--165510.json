{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 878372,
            "title": "Transpose of Matrix",
            "titleSlug": "transpose-of-matrix-1587115621--165510",
            "content": "<p><span style=\"font-size: 18px;\">Write a program to find the <strong>transpose </strong>of a square matrix of size 4*4. Transpose of a matrix is obtained by changing rows to columns and columns to rows.</span><br /><br /><span style=\"font-size: 18px;\"><strong>Examples :</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input</strong>: mat[][] = [[1, 1, 1, 1], [2, 2, 2, 2], [3, 3, 3, 3], [4, 4, 4, 4]]\n<strong>Output</strong>: [[1, 2, 3, 4] , [1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3, 4]] <br /><strong><span >Explanation:</span> </strong>All rows are converted into columns and All columns are converted into rows.</span>\n</pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input</strong>: mat[][] = [1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3, 4]]\n<strong>Output</strong>: </span><span >[[1, 1, 1, 1], [2, 2, 2, 2], [3, 3, 3, 3], [4, 4, 4, 4]]<br /></span><span style=\"font-size: 18px;\"><strong><span >Explanation:</span> </strong>All rows are converted into columns and All columns are converted into rows.</span></pre>\n<pre><strong><span >Input: </span></strong><span >mat[][] = [[0, 1, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1]] <br /><strong>Output: </strong>[[0, 0, 0, 0], [1, 1, 1, 1], [0, 0, 0, 0], [1, 1, 1, 1]]<br /></span><span style=\"font-size: 18px;\"><strong><span >Explanation:</span> </strong>All rows are converted into columns and All columns are converted into rows.</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />-10<sup>9</sup> &lt;= mat[i][j] &lt;= 10<sup>9</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Write a program to find the transpose of a 4x4 square matrix. The transpose of a matrix is obtained by swapping its rows and columns.",
                "constraints": [
                    "-10<sup>9</sup> <= mat[i][j] <= 10<sup>9</sup>"
                ],
                "testcases": [
                    {
                        "input": "[[1, 1, 1, 1], [2, 2, 2, 2], [3, 3, 3, 3], [4, 4, 4, 4]]",
                        "output": "[[1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3, 4]]",
                        "explanation": "The rows and columns of the input matrix are interchanged to produce the output matrix."
                    },
                    {
                        "input": "[[1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3, 4]]",
                        "output": "[[1, 1, 1, 1], [2, 2, 2, 2], [3, 3, 3, 3], [4, 4, 4, 4]]",
                        "explanation": "The rows and columns of the input matrix are interchanged to produce the output matrix."
                    },
                    {
                        "input": "[[0, 1, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1], [0, 1, 0, 1]]",
                        "output": "[[0, 0, 0, 0], [1, 1, 1, 1], [0, 0, 0, 0], [1, 1, 1, 1]]",
                        "explanation": "The rows and columns of the input matrix are interchanged to produce the output matrix."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            ""
        ],
        "relatedTopics": [
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [
            "makemytrip",
            "infoedge",
            "bloomberg"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    // Function to find transpose of a matrix.\n    void transpose(int mat[4][4]) {\n        for (int i = 0; i < 4; i++)\n            for (int j = i + 1; j < 4; j++) {\n                // swapping elements at (i,j) and (j,i).\n                swap(mat[i][j], mat[j][i]);\n            }\n    }\n};",
                "lang_text": "cpp"
            }
        ],
        "platform": "GFG"
    }
}