{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 701265,
            "title": "Transpose of Matrix",
            "titleSlug": "transpose-of-matrix-1587115621",
            "content": "<p><span style=\"font-size: 18px;\">Write a program to find the <strong>transpose </strong>of a square matrix&nbsp;of size N*N. Transpose of a matrix is obtained by changing rows to columns and columns to rows.</span><br /><br /><span style=\"font-size: 18px;\"><strong>Examples :</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input</strong>: N = 4, mat[][] = [[1, 1, 1, 1], [2, 2, 2, 2], [3, 3, 3, 3], [4, 4, 4, 4]]\n<strong>Output</strong>: [[1, 2, 3, 4] , [1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3, 4]] </span>\n</pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input</strong>: N = 2, mat[][] = [[1, 2],[9, -2]]\n<strong>Output</strong>: [[1, 9], [2, -2]]</span></pre>\n<p><span style=\"font-size: 18px;\"><br /><strong>Constraints:</strong><br />1 &lt;= N &lt;= 10<sup>3</sup><br />-10<sup>9</sup> &lt;= mat[i][j] &lt;= 10<sup>9</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a square matrix of size N*N, write a program to find its transpose. The transpose of a matrix is obtained by swapping its rows and columns.",
                "constraints": [
                    "1 <= N <= 10^3",
                    "-10^9 <= mat[i][j] <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "N = 4, mat[][] = [[1, 1, 1, 1], [2, 2, 2, 2], [3, 3, 3, 3], [4, 4, 4, 4]]",
                        "output": "[[1, 2, 3, 4] , [1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3, 4]]",
                        "explanation": "The rows become columns and vice-versa. For example, the first row [1, 1, 1, 1] becomes the first column [1, 1, 1, 1]."
                    },
                    {
                        "input": "N = 2, mat[][] = [[1, 2],[9, -2]]",
                        "output": "[[1, 9], [2, -2]]",
                        "explanation": "The matrix is transposed by interchanging rows and columns. [1, 2] becomes [1, 9] as a column and [9,-2] becomes [2,-2] as a column"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            ""
        ],
        "relatedTopics": [
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [
            "makemytrip",
            "infoedge",
            "bloomberg"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    // Function to find transpose of a mat.\n    void transpose(vector<vector<int> >& mat, int n) {\n        for (int i = 0; i < n; i++)\n            for (int j = i + 1; j < n; j++) {\n                // swapping elements at (i,j) and (j,i).\n                swap(mat[i][j], mat[j][i]);\n            }\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\nclass Solution {\n    public void transpose(int n, int mat[][]) {\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < i; j++) {\n                int temp = mat[i][j];\n                mat[i][j] = mat[j][i];\n                mat[j][i] = temp;\n            }\n        }\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\n\nclass Solution:\n    # Function to calculate transposition of a mat.\n    def transpose(self, mat, n):\n        for i in range(n):\n            for j in range(i + 1, n):\n                # Swapping elements at (i,j) and (j,i).\n                mat[i][j], mat[j][i] = mat[j][i], mat[i][j]\n",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "// User function Template for javascript\n/**\n * @param {number[][]} mat\n * @param {number} n\n * @returns {number[][]}\n */\n\nclass Solution {\n    // Function to find transpose of a mat.\n    transpose(mat, n) {\n        for (let i = 0; i < n; i++) {\n            for (let j = i + 1; j < n; j++) {\n                // Swapping elements at (i,j) and (j,i).\n                [mat[i][j], mat[j][i]] = [ mat[j][i], mat[i][j] ];\n            }\n        }\n        return mat;\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}