{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 711657,
            "title": "Pattern 5",
            "titleSlug": "triangle-pattern",
            "content": "<p><span style=\"font-size: 18px;\">Geek is very fond of patterns. Once, his teacher gave him a pattern to solve. He gave Geek an integer&nbsp;<strong>n</strong> and asked him to build a pattern.</span></p>\n<p><span style=\"font-size: 18px;\">Help Geek&nbsp;build a star pattern.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input</strong>: 5<br /><strong>Output:</strong><br />* * * * *<br />* * * *&nbsp;<br />* * *&nbsp;<br />* *&nbsp;&nbsp;<br />*&nbsp;<br /></span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input</strong>: 3<br /><strong>Output:</strong><br />* * *&nbsp;<br />* *&nbsp;&nbsp;<br />*&nbsp;</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Your Task:<br /></strong></span><span style=\"font-size: 18px;\">You don't need to input anything. Complete the function <strong>printTriangle()&nbsp;</strong>which takes an integer <strong>n</strong> <strong>&nbsp;</strong>as the input parameter and prints the pattern.</span></p>\n<p><span style=\"font-size: 18px;\">Expected Time Complexity: O(n<sup>2</sup></span><span style=\"font-size: 18px;\">).</span><span style=\"font-size: 18px;\"><br /></span><span style=\"font-size: 18px;\">Expected Auxiliary Space: O(1).</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:<br /></strong></span><span style=\"font-size: 18px;\">1&lt;= <strong>n</strong> &lt;= 100</span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Geek's teacher challenged him to create a star pattern. Given an integer `n`, construct a pattern where each line contains a decreasing number of stars. The first line has `n` stars, the second has `n-1` stars, and so on, until the last line has only one star.",
                "constraints": [
                    "1 <= n <= 100"
                ],
                "testcases": [
                    {
                        "input": "5",
                        "output": "* * * * *\n* * * *\n* * *\n* *\n*",
                        "explanation": null
                    },
                    {
                        "input": "3",
                        "output": "* * *\n* *\n*",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Use two loops</p>"
        ],
        "relatedTopics": [],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "// A class named Solution\nclass Solution{\n// Function to print a triangle pattern\npublic:\n\tvoid printTriangle(int n) {\n\t    // Loop for rows\n\t    for(int i=1;i<=n;i++){\n\t        // Loop for columns\n\t        for(int j=n;j>=i;j--){\n\t            // Printing asterisk and space\n\t            cout<<\"* \";\n\t        }\n\t        // Moving to the next line\n\t        cout<<endl;\n\t    }\n\t}\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n    // Method to print a triangle pattern\n    void printTriangle(int n) {\n        // Loop for each line in the triangle\n        for(int i=1;i<=n;i++){\n            // Loop to print each asterisk in the line\n            for(int j=n;j>=i;j--){\n                // Print an asterisk and space\n                System.out.print(\"* \");\n            }\n            // Move to the next line\n            System.out.println();\n        }\n    }\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "#Back-end complete function Template for Python 3\r\n\r\nclass Solution:\r\n    #Function to print an inverted triangle of stars.\r\n    def printTriangle(self, N):\r\n        for i in range(1, 1 + N):\r\n            #Printing the stars in each row.\r\n            for j in range(N, i - 1, -1):\r\n                print('* ', end = '')\r\n            print()",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "//User function Template for javascript\n/**\n * @param {number} N\n * @returns {void}\n*/\n\nclass Solution {\n    //Function to print triangle pattern with N lines.\n    printTriangle(N) {\n        for (let i = 1; i <= N; i++) {\n            //Printing the stars in each row.\n            for (let j = N; j >= i; j--) {\n                process.stdout.write('* ');\n            }\n            console.log();\n        }\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}