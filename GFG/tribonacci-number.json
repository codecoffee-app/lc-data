{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 878377,
            "title": "Tribonacci Number",
            "titleSlug": "tribonacci-number",
            "content": "<p><span >You are given a number n. Your task is to find <strong>n-</strong>th Tribonacci Number <strong>T<sub>n</sub></strong>.<br /><strong>Tribonacci Number:&nbsp;&nbsp;</strong>T<sub>0 </sub>= 0, T<sub>1</sub> = 1, T<sub>2</sub> = 1, and T<sub>n+3</sub> = T<sub>n</sub> + T<sub>n+1</sub> + T<sub>n+2</sub> for n &gt;= 0.<br /><br /><strong>Examples :</strong></span></p>\n<pre><span ><strong>Input: </strong>4\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> T<sub>3</sub> = 0 + 1 + 1 = 2, T<sub>4</sub> = 1 + 1 + 2 = 4</span></pre>\n<pre><span ><strong>Input: </strong>n = 25\n<strong>Output:</strong> 1389537<br /></span></pre>\n<pre><span ><strong>Input: </strong>n = 10\n<strong>Output:</strong> 149</span></pre>\n<p><span ><strong>Constraints:</strong><br />0 &le; n &le; 37</span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a non-negative integer `n`, find the n-th Tribonacci number, denoted as T<sub>n</sub>.  The Tribonacci sequence is defined as follows:\n\nT<sub>0</sub> = 0\nT<sub>1</sub> = 1\nT<sub>2</sub> = 1\nT<sub>n+3</sub> = T<sub>n</sub> + T<sub>n+1</sub> + T<sub>n+2</sub> for n >= 0",
                "constraints": [
                    "0 <= n <= 37"
                ],
                "testcases": [
                    {
                        "input": "4",
                        "output": "4",
                        "explanation": "T<sub>3</sub> = T<sub>0</sub> + T<sub>1</sub> + T<sub>2</sub> = 0 + 1 + 1 = 2. T<sub>4</sub> = T<sub>1</sub> + T<sub>2</sub> + T<sub>3</sub> = 1 + 1 + 2 = 4"
                    },
                    {
                        "input": "25",
                        "output": "1389537",
                        "explanation": null
                    },
                    {
                        "input": "10",
                        "output": "149",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span >Create an array F of length 38 and initialize it with F[0] = 0, F[1] = 1, and F[2] = 1. Then, use a loop to calculate each subsequent value with the formula F[n + 3] = F[n] + F[n + 1] + F[n + 2]. Finally, return F[n].</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    int nthTribonacci(int n) {\n        // Base cases for the Tribonacci sequence\n        if (n == 0)\n            return 0; // T(0) = 0\n        if (n == 1 || n == 2)\n            return 1; // T(1) = T(2) = 1\n\n        // Initializing the first three numbers in the sequence\n        int first = 0, second = 1, third = 1, current;\n\n        // Calculating the Tribonacci number iteratively for n >= 3\n        for (int i = 3; i <= n; i++) {\n            // Current term is the sum of the previous three terms\n            current = first + second + third;\n            // Update the previous three terms for the next iteration\n            first = second;\n            second = third;\n            third = current;\n        }\n\n        // The result is stored in 'current' after the loop\n        return current;\n    }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n    public static int nthTribonacci(int n) {\n        // Base cases for the Tribonacci sequence\n        if (n == 0) return 0;           // T(0) = 0\n        if (n == 1 || n == 2) return 1; // T(1) = T(2) = 1\n\n        // Initializing the first three numbers in the sequence\n        int first = 0, second = 1, third = 1, current = 0;\n\n        // Calculating the Tribonacci number iteratively for n >= 3\n        for (int i = 3; i <= n; i++) {\n            // Current term is the sum of the previous three terms\n            current = first + second + third;\n            // Update the previous three terms for the next iteration\n            first = second;\n            second = third;\n            third = current;\n        }\n\n        // The result is stored in 'current' after the loop\n        return current;\n    }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n\n    def nthTribonacci(self, n: int) -> int:\n        # Base cases for the Tribonacci sequence\n        if n == 0:\n            return 0  # T(0) = 0\n        if n == 1 or n == 2:\n            return 1  # T(1) = T(2) = 1\n\n        # Initializing the first three numbers in the sequence\n        first, second, third = 0, 1, 1\n\n        # Calculating the Tribonacci number iteratively for n >= 3\n        for i in range(3, n + 1):\n            # Current term is the sum of the previous three terms\n            current = first + second + third\n            # Update the previous three terms for the next iteration\n            first, second, third = second, third, current\n\n        # The result is stored in 'current' after the loop\n        return current\n",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "class Solution {\n    /**\n     * @param {number} n - The position in the Tribonacci sequence\n     * @returns {number} - The n-th Tribonacci number\n     */\n    nthTribonacci(n) {\n        // Base cases for the Tribonacci sequence\n        if (n === 0) return 0;            // T(0) = 0\n        if (n === 1 || n === 2) return 1; // T(1) = T(2) = 1\n\n        // Initializing the first three numbers in the sequence\n        let first = 0, second = 1, third = 1, current = 0;\n\n        // Calculating the Tribonacci number iteratively for n >= 3\n        for (let i = 3; i <= n; i++) {\n            // Current term is the sum of the previous three terms\n            current = first + second + third;\n            // Update the previous three terms for the next iteration\n            first = second;\n            second = third;\n            third = current;\n        }\n\n        // The result is stored in 'current' after the loop\n        return current;\n    }\n}\n",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}