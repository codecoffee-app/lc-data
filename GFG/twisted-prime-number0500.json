{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704132,
            "title": "Twisted Prime Number",
            "titleSlug": "twisted-prime-number0500",
            "content": "<p><span style=\"font-size:18px\">Given a number N. Check whether N is a Twisted Prime number or not.<br />\r\n<strong>Note</strong>: A number is called Twisted Prime if it is a prime and its reverse is also a prime.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong> N = 97\r\n<strong>Output:</strong> 1\r\n<strong>Explanation:</strong> 97 is a prime number. Its \r\nreverse 79 isalso a prime number. Thus \r\n97 is a  twisted Prime and so, answer is 1.</span></pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong> N = 43\r\n<strong>Output:</strong> 0\r\n<strong>Explanation:</strong> 43 is a prime number but its \r\nreverse 34 is not a prime.So, 43 is not a \r\ntwisted prime and thus, answer is 0.</span></pre>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Your Task:</strong>You don&#39;t need to read input or print anything.Your task is to complete the function <strong>isTwistedPrime()</strong> which takes a number N as input parameter and returns 1 if it is a twisted prime number.Otherwise, it returns 0.</span></p>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong>(O(sqrt(max(N,RevN))), here RevN is the reverse of N.<br />\r\n<strong>Expected Space Complexity:</strong>O(1)</span></p>\r\n\r\n<p><br />\r\n<span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n1&lt;=N&lt;=10<sup>9</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "A twisted prime is a prime number whose reverse is also a prime number. Given a number N, determine if N is a twisted prime.",
                "constraints": [
                    "1 <= N <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "97",
                        "output": "1",
                        "explanation": "97 is a prime number. Its reverse, 79, is also a prime number. Therefore, 97 is a twisted prime."
                    },
                    {
                        "input": "43",
                        "output": "0",
                        "explanation": "43 is a prime number, but its reverse, 34, is not a prime number. Therefore, 43 is not a twisted prime."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Check if the Given number is Prime.If it is, reverse the number and check whether the reversed number is prime or not.</span></p>",
            "<p>A prime number N has no factors between 2 and square root of itself.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Prime Number",
                "slug": "prime-number"
            }
        ],
        "companies": [
            "zoho"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "// Back-end complete function Template for C++\r\n\r\nclass Solution {\r\n  public:\r\n    // function to check if a number is prime or not\r\n    bool isPrime(int N) {\r\n        for (int i = 2; i * i <= N; i++)\r\n            if (N % i == 0) return false;\r\n        return true;\r\n    }\r\n    // function to reverse number\r\n    int reversed(int N) {\r\n        int ans = 0;\r\n        while (N) {\r\n            ans = ans * 10 + N % 10;\r\n            N /= 10;\r\n        }\r\n        return ans;\r\n    }\r\n    int isTwistedPrime(int N) {\r\n        // checking whether number is prime or not\r\n        if (!isPrime(N)) return 0;\r\n        // reversing number\r\n        int RevN = reversed(N);\r\n        // checking whether reversed number is prime or not\r\n        if (!isPrime(RevN)) return 0;\r\n        return 1;\r\n    }\r\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "// Back-end complete function Template for Java\r\n\r\nclass Solution {\r\n    // function to check if a number is prime or not\r\n    boolean isPrime(int N) {\r\n        for (int i = 2; i * i <= N; i++)\r\n            if (N % i == 0) return false;\r\n        return true;\r\n    }\r\n    // function to reverse number\r\n    int reversed(int N) {\r\n        int ans = 0;\r\n        while (N > 0) {\r\n            ans = ans * 10 + N % 10;\r\n            N /= 10;\r\n        }\r\n        return ans;\r\n    }\r\n    int isTwistedPrime(int N) {\r\n        // checking whether number is prime or not\r\n        if (!isPrime(N)) return 0;\r\n        // reversing number\r\n        int RevN = reversed(N);\r\n        // checking whether reversed number is prime or not\r\n        if (!isPrime(RevN)) return 0;\r\n        return 1;\r\n    }\r\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            },
            {
                "lang": "C#",
                "full_func": "//User function template for C#\nclass Solution {\n    //Function to check whether the number is a twisted prime or not.\n    public int isTwistedPrime(int N) {\n        if (!isPrime(N)) return 0;\n        // reversing number\n        int RevN = reversed(N);\n        // checking whether reversed number is prime or not\n        if (!isPrime(RevN)) return 0;\n        return 1;\n    }\n\n    // function to check if a number is prime or not\n    private bool isPrime(int N) {\n        for (int i = 2; i * i <= N; i++)\n            if (N % i == 0) return false;\n        return true;\n    }\n\n    // function to reverse number\n    private int reversed(int N) {\n        int ans = 0;\n        while (N != 0) {\n            ans = ans * 10 + N % 10;\n            N /= 10;\n        }\n        return ans;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}