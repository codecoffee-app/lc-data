{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705334,
            "title": "Type of input",
            "titleSlug": "type-of-input5910",
            "content": "<p><span style=\"font-size:18px\">Given an input A&nbsp;, print the data type of the input A.<br />\neg:-Sequence of digits -- int<br />\n&nbsp; &nbsp; &nbsp; Sequence of digits with a dot -- float<br />\n&nbsp; &nbsp; &nbsp; Sequence of chars&nbsp; -- string<br />\n&nbsp; &nbsp; &nbsp; Single non-digit char --- char</span><br />\n&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input: </strong>A = &quot;12&quot;\n<strong>Output: </strong>&quot;int&quot;\n<strong>Explanation: </strong>The input consists only of\ndigits.</span>\n</pre>\n\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input: </strong>A = &quot;gfg&quot;\n<strong>Output: </strong>&quot;string&quot;\n<strong>Explanation: </strong>The input consists only of\ncharacters.</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nYou don&#39;t need to read or print anything. Your task is to complete the function&nbsp;<strong>FindInputType()&nbsp;</strong>which takes A as input parameter and returns data type of A.</span><br />\n&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:&nbsp;</strong>O(|A|)<br />\n<strong>Expected Space Complexity:&nbsp;</strong>O(1)</span><br />\n&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\n1 &lt;= |A| &lt;= 1000</span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p>Use simple if else.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function template in C++\n\nclass Solution {\n\tpublic:\n\t\t//Function to determine the input type of a string.\n\t\tstring FindInputType(string str) {\n\t\t\t//Checking if the string has only one character.\n\t\t\tif (str.size() == 1) {\n\t\t\t\t//If the character is a digit, return \"int\", else return \"char\".\n\t\t\t\tif (str[0] >= '0' and str[0] <= '9')\n\t\t\t\t\treturn \"int\";\n\t\t\t\treturn \"char\";\n\t\t\t}\n\t\t\t\n\t\t\t//Initializing flags to determine the presence of different types of characters in the string.\n\t\t\tbool f1 = false; //Flag for digits.\n\t\t\tbool f2 = false; //Flag for non-digits.\n\t\t\tbool f3 = false; //Flag for '.'.\n\t\t\tint cnt = 0; //Variable to count the number of '.' occurrences.\n\t\t\t\n\t\t\t//Iterating over the characters in the string.\n\t\t\tfor (auto i : str) {\n\t\t\t\t//Checking if the character is a digit.\n\t\t\t\tif (i >= '0' and i <= '9')\n\t\t\t\t\tf1 = true;\n\t\t\t\t//Checking if the character is '.'.\n\t\t\t\telse if (i == '.') {\n\t\t\t\t\tf3 = true;\n\t\t\t\t\tcnt++;\n\t\t\t\t}\n\t\t\t\t//If the character is neither a digit nor '.', then it is a non-digit character.\n\t\t\t\telse\n\t\t\t\t\tf2 = true;\n\t\t\t}\n\t\t\t\n\t\t\t//Checking the conditions to determine the input type based on the flags.\n\t\t\t//If there are only digits in the string and no other characters, return \"int\".\n\t\t\tif (f1 and !f2 and !f3)\n\t\t\t\treturn \"int\";\n\t\t\t//If there are only digits and one '.' character in the string, and the '.' is not the last character, return \"float\".\n\t\t\tif (f1 and !f2 and f3 and cnt == 1 and str[str.size() - 1] != '.')\n\t\t\t\treturn \"float\";\n\t\t\t//If none of the above conditions are met, return \"string\".\n\t\t\treturn \"string\";\n\t\t}\n\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "class Solution {\n    public string FindInputType(string str){\n        if (str.Length == 1) {\n            if (str[0] >= '0' && str[0] <= '9')\n                return \"int\";\n            return \"char\";\n        }\n        \n        bool f1 = false;\n        bool f2 = false;\n        bool f3 = false;\n        int cnt = 0;\n        \n        foreach (char c in str) {\n            if (c >= '0' && c <= '9')\n                f1 = true;\n            else if (c == '.') {\n                f3 = true;\n                cnt++;\n            }\n            else\n                f2 = true;\n        }\n        \n        if (f1 && !f2 && !f3) {\n            return \"int\";\n        }\n        if (f1 && !f2 && f3 && cnt == 1 && str[str.Length - 1] != '.') {\n            return \"float\";\n        }\n        \n        return \"string\";\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}