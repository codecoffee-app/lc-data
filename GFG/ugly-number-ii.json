{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 712222,
            "title": "Ugly Number II",
            "titleSlug": "ugly-number-ii",
            "content": "<p><span style=\"font-size: 18px;\">Given an integer <strong>n</strong>,&nbsp;&nbsp;return the n<sup>th&nbsp;</sup><strong>ugly number</strong>.</span></p>\n<p><span style=\"font-size: 18px;\">An&nbsp;<strong>ugly number</strong>&nbsp;is a positive integer whose prime factors are limited to <strong>2</strong>, <strong>3</strong> and <strong>5</strong>.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>n = 5</span>\n<span style=\"font-size: 18px;\"><strong>Output: </strong>5</span>\n<span style=\"font-size: 18px;\"><strong>Explanation: </strong>Ugly Numbers - 1, 2, 3, 4, 5, 6, 8, 9, 10, 12. So, 5<sup>th</sup> Ugly Number is 5</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong> n = 10</span>\n<span style=\"font-size: 18px;\"><strong style=\"font-size: 18px;\">Output:</strong><span style=\"font-size: 18px;\"> 12<br /><strong>Explanation:</strong> 10<sup>th </sup>Ugly Number is 12</span></span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 <span style=\"color: #1e2229; font-family: Nunito; font-size: 17px; background-color: #ffffff;\">&le; </span>n <span style=\"color: #1e2229; font-family: Nunito; font-size: 17px; background-color: #ffffff;\">&le; </span>1500</span></p>",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Find the nth ugly number. An ugly number is a positive integer whose only prime factors are 2, 3, and 5.",
                "constraints": [
                    "1 <= n <= 1500"
                ],
                "testcases": [
                    {
                        "input": "5",
                        "output": "5",
                        "explanation": "The first few ugly numbers are 1, 2, 3, 4, 5, 6, 8, 9, 10, 12...  The 5th ugly number in this sequence is 5."
                    },
                    {
                        "input": "10",
                        "output": "12",
                        "explanation": "The first few ugly numbers are 1, 2, 3, 4, 5, 6, 8, 9, 10, 12... The 10th ugly number in this sequence is 12."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "\nclass Solution {\n  public:\n\n    // Function to find the nth ugly number.\n    int uglyNumber(int n) {\n        // To store ugly numbers\n        vector<int> arr(n);\n\n        // stores the index of the next\n        // multiple of 2, 3, and 5.\n        int ind2 = 0, ind3 = 0, ind5 = 0;\n\n        // to next multiple of 2, 3, and 5\n        int mulTwo = 2, mulThree = 3, mulFive = 5;\n\n        // stores next ugly number\n        int nextNum = 1;\n\n        // 1 is the first ugly number\n        arr[0] = 1;\n\n        // loop to fill up the array up to n\n        for (int i = 1; i < n; i++) {\n\n            // find the minimum of the multiples\n            nextNum = min({mulTwo, mulThree, mulFive});\n            arr[i] = nextNum;\n\n            // if nextNum is equal to any of the multiples\n            // then increment the value of the multiple\n            if (nextNum == mulTwo) {\n                ind2++;\n                mulTwo = arr[ind2] * 2;\n            }\n            if (nextNum == mulThree) {\n                ind3++;\n                mulThree = arr[ind3] * 3;\n            }\n            if (nextNum == mulFive) {\n                ind5++;\n                mulFive = arr[ind5] * 5;\n            }\n        }\n\n        // return the nth ugly number\n        return nextNum;\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "\nclass Solution {\n    public static int uglyNumber(int n) {\n        // To store ugly numbers\n        int[] arr = new int[n];\n\n        // stores the index of the next\n        // multiple of 2, 3, and 5.\n        int ind2 = 0, ind3 = 0, ind5 = 0;\n\n        // to next multiple of 2, 3, and 5\n        int mulTwo = 2, mulThree = 3, mulFive = 5;\n\n        // stores next ugly number\n        int nextNum = 1;\n\n        // 1 is the first ugly number\n        arr[0] = 1;\n\n        // loop to fill up the array up to n\n        for (int i = 1; i < n; i++) {\n\n            // find the minimum of the multiples\n            nextNum = Math.min(mulTwo, Math.min(mulThree, mulFive));\n            arr[i] = nextNum;\n\n            // if nextNum is equal to any of the multiples\n            // then increment the value of the multiple\n            if (nextNum == mulTwo) {\n                ind2++;\n                mulTwo = arr[ind2] * 2;\n            }\n            if (nextNum == mulThree) {\n                ind3++;\n                mulThree = arr[ind3] * 3;\n            }\n            if (nextNum == mulFive) {\n                ind5++;\n                mulFive = arr[ind5] * 5;\n            }\n        }\n\n        // return the nth ugly number\n        return nextNum;\n    }\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n    # Function to find the nth ugly number.\n    def uglyNumber(self, n):\n        # To store ugly numbers\n        arr = [0] * n\n        arr[0] = 1  # 1 is the first ugly number\n\n        # Indices for multiples of 2, 3, and 5\n        ind2 = ind3 = ind5 = 0\n        mulTwo, mulThree, mulFive = 2, 3, 5\n\n        # Generate ugly numbers up to n\n        for i in range(1, n):\n            nextNum = min(mulTwo, mulThree, mulFive)\n            arr[i] = nextNum\n\n            # Update the corresponding multiple if it matches `nextNum`\n            if nextNum == mulTwo:\n                ind2 += 1\n                mulTwo = arr[ind2] * 2\n            if nextNum == mulThree:\n                ind3 += 1\n                mulThree = arr[ind3] * 3\n            if nextNum == mulFive:\n                ind5 += 1\n                mulFive = arr[ind5] * 5\n\n        return arr[n - 1]  # Return nth ugly number",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "class Solution {\n    // Function to get the nth ugly number\n    uglyNumber(n) {\n\n        // To store ugly numbers\n        let arr = new Array(n).fill(0);\n\n        // stores the index of the next\n        // multiple of 2, 3, and 5.\n        let ind2 = 0, ind3 = 0, ind5 = 0;\n\n        // to next multiple of 2, 3, and 5\n        let mulTwo = 2, mulThree = 3, mulFive = 5;\n\n        // stores next ugly number\n        let nextNum = 1;\n\n        // 1 is the first ugly number\n        arr[0] = 1;\n\n        // loop to fill up the array up to n\n        for (let i = 1; i < n; i++) {\n\n            // find the minimum of the multiples\n            nextNum = Math.min(mulTwo, Math.min(mulThree, mulFive));\n            arr[i] = nextNum;\n\n            // if nextNum is equal to any of the multiples\n            // then increment the value of the multiple\n            if (nextNum === mulTwo) {\n                ind2++;\n                mulTwo = arr[ind2] * 2;\n            }\n            if (nextNum === mulThree) {\n                ind3++;\n                mulThree = arr[ind3] * 3;\n            }\n            if (nextNum === mulFive) {\n                ind5++;\n                mulFive = arr[ind5] * 5;\n            }\n        }\n\n        // return the nth ugly number\n        return nextNum;\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}