{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 701730,
            "title": "Union of Arrays with Duplicates",
            "titleSlug": "union-of-two-arrays3538",
            "content": "<p><span >Given two arrays&nbsp;<strong>a[]</strong> and&nbsp;<strong>b[]</strong>,<strong>&nbsp;</strong>the&nbsp;task is to find the number of elements in the union between these two arrays.</span></p>\n<p><span >The Union of the two arrays can be defined as the set containing distinct elements from both arrays. If there are repetitions, then only one element occurrence should be there in the union.</span></p>\n<p><span >Note:<strong>&nbsp;</strong>Elements of <strong>a</strong>[] and <strong>b</strong>[] are not necessarily distinct.</span></p>\n<p><span ><strong>Examples</strong></span></p>\n<pre><span ><strong>Input:</strong> a[] = [1, 2, 3, 4, 5], b[] = [1, 2, 3]\n<strong>Output: </strong>5<strong>\nExplanation: </strong>Union set of both the arrays will be 1, 2, 3, 4 and 5. So count is 5.\n</span></pre>\n<pre><span ><strong>Input: </strong>a[] =<strong> </strong>[85, 25, 1, 32, 54, 6], b[] = [85, 2] <br /><strong>Output: </strong>7<strong>\nExplanation: </strong>Union set of both the arrays will be 85, 25, 1, 32, 54, 6, and 2. So count is 7.</span></pre>\n<pre><span ><strong>Input: </strong>a[] =<strong> </strong>[1, 2, 1, 1, 2], b[] = [2, 2, 1, 2, 1] <br /><strong>Output: </strong>2<strong>\nExplanation: </strong>We need to consider only distinct. So count of elements in union set will be 2.</span></pre>\n<p><span ><strong>Constraints:</strong></span><br /><span >1 &le; a.size(), b.size() &le; 10<sup>6<br /></sup>0 &le; a[i], b[i] &le;&nbsp;10<sup>5</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given two integer arrays `a` and `b`, determine the number of distinct elements present in the union of the two arrays. The union should only contain unique elements even if duplicates exist in the original arrays.",
                "constraints": [
                    "1 <= a.size(), b.size() <= 10^6",
                    "0 <= a[i], b[i] <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "a[] = [1, 2, 3, 4, 5], b[] = [1, 2, 3]",
                        "output": "5",
                        "explanation": "The union of the arrays contains the distinct elements [1, 2, 3, 4, 5]. Therefore, the count is 5."
                    },
                    {
                        "input": "a[] = [85, 25, 1, 32, 54, 6], b[] = [85, 2]",
                        "output": "7",
                        "explanation": "The union of the arrays contains the distinct elements [85, 25, 1, 32, 54, 6, 2].  Therefore, the count is 7."
                    },
                    {
                        "input": "a[] = [1, 2, 1, 1, 2], b[] = [2, 2, 1, 2, 1]",
                        "output": "2",
                        "explanation": "The union of the arrays contains the distinct elements [1, 2]. Therefore, the count is 2."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span >Consider using a data structure that only keeps unique elements when combining both arrays. This will help you easily determine the number of distinct elements.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Hash",
                "slug": "hash"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            },
            {
                "name": "Arrays",
                "slug": "arrays"
            }
        ],
        "companies": [
            "zoho",
            "rockstand"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    // Function to return the count of number of elements in the union of two arrays.\n    int findUnion(vector<int> a, vector<int> b) {\n        // Using unordered_set to store the elements.\n        unordered_set<int> s;\n\n        // Insert all the elements of the first array into the set.\n        for (int i = 0; i < a.size(); i++)\n            s.insert(a[i]);\n\n        // Insert all the elements of the second array into the set.\n        // Set does not contain duplicates.\n        for (int i = 0; i < b.size(); i++)\n            s.insert(b[i]);\n\n        // Returning the size of the set which is the total number\n        // of elements in the union of both arrays.\n        return s.size();\n    }\n};\n",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution {\n    public static int findUnion(int a[], int b[]) {\n        // Using HashSet to store the elements.\n        HashSet<Integer> s = new HashSet<>();\n\n        // Insert all the elements of the first array into the HashSet.\n        for (int i = 0; i < a.length; i++) {\n            s.add(a[i]);\n        }\n\n        // Insert all the elements of the second array into the HashSet.\n        // HashSet automatically handles duplicates.\n        for (int i = 0; i < b.length; i++) {\n            s.add(b[i]);\n        }\n\n        // Returning the size of the HashSet which is the total number\n        // of unique elements in the union of both arrays.\n        return s.size();\n    }\n}\n",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "class Solution:\n    # Function to return the count of number of elements in the union of two arrays.\n    def findUnion(self, a, b):\n\n        # Using set to store the elements.\n        hs = set()\n\n        # Insert all the elements of the first array into the set.\n        for x in a:\n            hs.add(x)\n\n        # Insert all the elements of the second array into the set.\n        # Set does not contain duplicates.\n        for y in b:\n            hs.add(y)\n\n        # Returning the size of the set which is the total number of elements in the set.\n        return len(hs)\n",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "/**\n * @param {number[]} a\n * @param {number[]} b\n * @returns {number}\n */\nclass Solution {\n    // Function to return the count of number of elements in the union of two arrays.\n    findUnion(a, b) {\n        // Using Set to store the elements.\n        let s1 = new Set();\n\n        // Insert all the elements of the first array into the set.\n        for (let i = 0; i < a.length; i++) {\n            s1.add(a[i]);\n        }\n\n        // Insert all the elements of the second array into the set.\n        // Set does not contain duplicates.\n        for (let i = 0; i < b.length; i++) {\n            s1.add(b[i]);\n        }\n\n        // Returning the size of the set which is the total number of unique elements\n        // in the union of both arrays.\n        return s1.size;\n    }\n}\n",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}