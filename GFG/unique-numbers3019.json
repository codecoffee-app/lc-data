{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704631,
            "title": "Unique Numbers",
            "titleSlug": "unique-numbers3019",
            "content": "<p><span style=\"font-size:18px\">In the given range [L, R], print all numbers having unique digits. e.g. In range 10 to 20 should print all numbers except 11.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:\n</strong>L = 10\nR = 20</span>\n\n<strong><span style=\"font-size:18px\">Output:\n</span></strong><span style=\"font-size:18px\">10 12 13 14 15 16 17 18 19 20</span>\n\n<strong><span style=\"font-size:18px\">Explanation:\n</span></strong><span style=\"font-size:18px\">The number 11 has two 1 therefore\n11 is not a unique number.</span>\n</pre>\n\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input:\n</strong>L = 1\nR = 9</span>\n\n<strong><span style=\"font-size:18px\">Output:\n</span></strong><span style=\"font-size:18px\">1 2 3 4 5 6 7 8 9</span>\n\n<strong><span style=\"font-size:18px\">Explanation:\n</span></strong><span style=\"font-size:18px\">All the Numbers are unique.</span></pre>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:&nbsp;&nbsp;</strong><br />\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>uniqueNumbers</strong>()&nbsp;which takes two integers L and R&nbsp;as an input parameter and&nbsp;returns the list/vector&nbsp;of all the unique numbers present between L to R.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity</strong>:&nbsp;O(N)<br />\n<strong>Expected Auxiliary Space</strong>:&nbsp;O(1)</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\n1 &lt;= L &lt;= R &lt;= 10<sup>4</sup></span></p>\n\n<p>&nbsp;</p>\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a range [L, R], identify and return all numbers within that range that have unique digits. A number has unique digits if no digit appears more than once in its decimal representation.",
                "constraints": [
                    "1 <= L <= R <= 10000"
                ],
                "testcases": [
                    {
                        "input": "L = 10\nR = 20",
                        "output": "10 12 13 14 15 16 17 18 19 20",
                        "explanation": "The number 11 is excluded because the digit 1 appears twice. All other numbers in the range have unique digits."
                    },
                    {
                        "input": "L = 1\nR = 9",
                        "output": "1 2 3 4 5 6 7 8 9",
                        "explanation": "All numbers in the range have only one digit, and therefore, all digits are unique."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size: 18px;\">Try to check if there is no digit that repeats itself</span><span style=\"font-size: 18px;\">&nbsp;</span><span style=\"font-size: 18px;\">again</span><span style=\"font-size: 18px;\"> in the number</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Hash",
                "slug": "hash"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [
            "amazon"
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": null,
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution{\n    static boolean check(int num){\n        // Convert the integer to a char array\n        char[] s=Integer.toString(num).toCharArray();\n        // Create an array to store the count of each digit\n\t\tint[] b=new int[10];\n\t\t\n\t\t// Loop through the char array and increment the count of each digit\n\t\tfor(int i=0;i<s.length;i++){\n\t\t\tb[(int)s[i]-'0']++;\n\t\t}\n\t\tint c=0;\n\t\t\n\t\t// Check if any digit has a count greater than 1\n\t\tfor(int i=0;i<10;i++){\n\t\t\tif(b[i]>1){\n\t\t\t\t// If a digit has a count greater than 1, the number is not unique\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\t// If all digits have a count of 1, the number is unique\n\t\treturn true;\n    }\n    \n    static ArrayList<Integer> uniqueNumbers(int l,int r){\n        ArrayList<Integer> list = new ArrayList<>();\n        \n        // Loop through the range of numbers from l to r\n        for(int i=l;i<=r;i++){\n\t\t\tif(check(i)){\n\t\t\t    // If the number is unique, add it to the list\n\t\t\t    list.add(i);\n\t\t\t}\n\t\t}\n\t\t// Return the list of unique numbers\n\t\treturn list;\n    }\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": null,
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}