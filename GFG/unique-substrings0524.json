{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 701719,
            "title": "Unique Substrings",
            "titleSlug": "unique-substrings0524",
            "content": "<p><span style=\"font-size: 18px;\">Given a string <strong>s</strong>. Calculate the total number of unique substrings of the given string.</span></p>\n<p><strong><span style=\"font-size: 18px;\">Examples:</span></strong></p>\n<pre><strong><span style=\"font-size: 18px;\">Input:</span> </strong><span >s = \"</span><span style=\"font-size: 18px;\">abd\"</span>\n<strong><span style=\"font-size: 18px;\">Ouput:</span> </strong><span style=\"font-size: 18px;\">6</span>\n<span style=\"font-size: 18px;\"><strong>Explanation: </strong>The 6 unique substrings are [\"a\", \"b\", \"d\", \"ab\", \"bd\", \"abd\"].</span></pre>\n<pre><strong><span style=\"font-size: 18px;\">Input: </span></strong><span style=\"font-size: 18px;\">s = \"</span><span style=\"font-size: 18px;\">jaja\"</span>\n<strong><span style=\"font-size: 18px;\">Ouput:</span> </strong><span style=\"font-size: 18px;\">7</span>\n<span style=\"font-size: 18px;\"><strong>Explanation: <br /></strong>The substrings will be [\"j\", \"a\", \"j\", \"a\", \"ja\", \"aj\", \"ja\", \"jaj\", \"aja\", \"jaja\"].<br />Out of these the unique are [\"j\", \"a\", \"ja\", \"aj\", \"jaj\", \"aja\", \"jaja\"].</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &lt;= |s| &lt;= 100</span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a string `s`, determine the total number of unique substrings present in the string.",
                "constraints": [
                    "1 <= |s| <= 100"
                ],
                "testcases": [
                    {
                        "input": "abd",
                        "output": "6",
                        "explanation": "The unique substrings are ['a', 'b', 'd', 'ab', 'bd', 'abd']. Therefore, the total number of unique substrings is 6."
                    },
                    {
                        "input": "jaja",
                        "output": "7",
                        "explanation": "The unique substrings are ['j', 'a', 'ja', 'aj', 'jaj', 'aja', 'jaja']. Thus, the total number of unique substrings is 7."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:20px\">Use unordered_set for cpp and HashSet for Java to check whether the substring is already present or not.</span></p>",
            "<p><span style=\"font-size:20px\">Use 2 loops to find the all the substrings.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Java",
                "slug": "java"
            },
            {
                "name": "STL",
                "slug": "stl"
            },
            {
                "name": "Java-Collections",
                "slug": "java-collections"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nclass Solution {\n  public:\n    // Function to find the number of unique substrings in a given string.\n    int uniqueSubstring(string &str) {\n        // Variables to track indices and size of string\n        int i, j;\n        int n;\n\n        // Assigning size of string to n\n        n = str.size();\n\n        // Initializing unordered set to store unique substrings\n        unordered_set<string> m1;\n\n        // Loop to iterate through each character of the string\n        for (i = 0; i < n; i++) {\n            // Initializing an empty string for each iteration\n            string w = \"\";\n\n            // Loop to iterate through characters starting from current index\n            for (j = i; j < n; j++) {\n                // Appending characters to form unique substrings\n                w = w + str[j];\n\n                // storing unique substrings in the set\n                m1.insert(w);\n            }\n        }\n        // Returning the size of the set, which represents the count of unique\n        // substrings\n        return m1.size();\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\nclass Solution {\n    public static int unique_substring(String str) {\n        int i, j;\n        int n;\n\n        // Initalizing n with the length of the String\n        n = str.length();\n\n        // Creating a HashSet of type String\n        HashSet<String> m1 = new HashSet<>();\n\n        // Running a loop for start positon\n        for (i = 0; i < n; i++) {\n            // Initializing an Empty String\n            String w = \"\";\n\n            // Running a loop for the end position\n            for (j = i; j < n; j++) {\n                // concatenating the jth character to the String w\n                w = w + str.charAt(j);\n\n                // adding the String w to the HashSet\n                m1.add(w);\n            }\n        }\n\n        // Returing the total unique substrings\n        return m1.size();\n    }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "class Solution {\n    unique_substring(str) {\n        let n = str.length;\n        let uniqueSet = new Set();\n\n        for (let i = 0; i < n; i++) {\n            let substring = \"\";\n\n            for (let j = i; j < n; j++) {\n                substring += str[j];\n                uniqueSet.add(substring);\n            }\n        }\n\n        return uniqueSet.size;\n    }\n}",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}