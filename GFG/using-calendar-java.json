{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 700925,
            "title": "Using Calendar - Java",
            "titleSlug": "using-calendar-java",
            "content": "<p>&nbsp;</p>\r\n\r\n<p dir=\"ltr\"><span style=\"font-size:18px\"><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial\">Your task is to complete the function </span><strong>timeBeforeAfterNdays(n)</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial\"> which accepts </span><strong>n</strong><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial\"> as an argument and accepts day, month, year. You have to display the </span><span style=\"background-color:transparent; color:rgb(0, 0, 0); font-family:arial\">day (Sunday , Monday etc) after adding n to given date. The output will be in number from 1 to 7.&nbsp; 1 is Sunday.</span></span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Input Format:</strong><br />\r\nThe first line of input contains T denoting thr number of testcases. T testcases follow. Each testcase contains single line of input: n, day, month, and year separated by spaces.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Output Format:</strong><br />\r\nFor each testcase, in a new line, print the required answer.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nSince this is a function problem, you don&#39;t need to take any input. Just complete the function <strong>timeBeforeAfterNdays </strong>that takes <strong>n, day, month, and year</strong> as parameters. </span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n1 &lt;= T &lt;= 100<br />\r\n1 &lt;= day &lt;= 31<br />\r\n1 &lt;= month &lt;= 12</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Examples:</strong><br />\r\n1<br />\r\n3 15 08 1947<br />\r\n<strong>Output:</strong><br />\r\nDay after n days: 2</span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a date (day, month, year) and an integer 'n', determine the day of the week 'n' days after the given date. The day of the week should be represented as a number from 1 to 7, where 1 represents Sunday, 2 represents Monday, and so on.",
                "constraints": [
                    "1 <= T <= 100 (Number of test cases)",
                    "1 <= day <= 31",
                    "1 <= month <= 12"
                ],
                "testcases": [
                    {
                        "input": "3 15 08 1947",
                        "output": "2",
                        "explanation": "Adding 3 days to August 15, 1947 results in August 18, 1947, which was a Monday.  Monday is represented by the number 2."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Misc",
                "slug": "misc"
            }
        ],
        "companies": [],
        "solutions": {
            "java": {
                "lang": "Java",
                "full_func": "// Class for handling time-related operations\nclass Geeks {\n\n    // Method to calculate the day after n number of days from a given date\n    public static void timeBeforeAfterNdays(int d, int m, int y, int n) {\n  \n        // Creating an instance of the Calendar class\n        Calendar cal = Calendar.getInstance();\n  \n        // Setting the date values to the given input values\n        cal.set(y, m-1, d);\n  \n        // Adding n number of days to the date\n        cal.add(cal.DATE, n);\n  \n        // Printing the day of the week for the resulting date\n        System.out.println(\"day after n days: \" + cal.get(cal.DAY_OF_WEEK));\n    }\n}",
                "lang_text": "java"
            }
        },
        "platform": "GFG"
    }
}