{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 701650,
            "title": "Vector Erase and Clear",
            "titleSlug": "vector-erase-and-clear",
            "content": "<p><span style=\"font-size: 18px;\">Given a vector <strong>arr[]</strong><strong> </strong>containing integers. Complete below functions on given vector depending on each query :<br /><strong>1. clearAll():</strong> This function removes all elements from vector.<br /><strong>2. eraseAt():</strong> This function removes&nbsp;element&nbsp;from specified <strong>position </strong>present in the&nbsp;vector.<br /><strong>3. eraseInRange():</strong> This function removes element from vector in the given range <strong>start</strong> &amp; <strong>end</strong>.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples :</strong> <strong> </strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr[]= [2, 3, 4, 5, 6], query: 2 3\n<strong>Output: </strong>[2, 3, 4, 6]\n<strong>Explanation: </strong>Query in this case is to remove element from specified position, thus after removal/modification elements present\nin the vector are 2 3 4 6.</span>\n</pre>\n<pre><span style=\"font-size: 18px;\"><strong>Input: </strong>arr[]= [1, 4, 5, 4, 2], query: 3 2 4\n<strong>Output: </strong>[1, 4]\n<strong>Explanation: </strong>Query in this case is to erase elements in specific range, thus after removal/modification elements present\nin the vector are 1 4.</span></pre>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p>void eraseAt(vector&lt;int&gt; &amp;V, int pos)<br />\n{<br />\n&nbsp;&nbsp;&nbsp; vector&lt;int&gt;::iterator it;<br />\n&nbsp;&nbsp;&nbsp; it = V.begin() + pos;<br />\n&nbsp;&nbsp;&nbsp; V.erase(it);<br />\n&nbsp;&nbsp; &nbsp;<br />\n}</p>\n\n<p>void eraseInRange(vector&lt;int&gt; &amp;V, int start, int end)<br />\n{<br />\n&nbsp;&nbsp;&nbsp; vector&lt;int&gt;:: iterator st;<br />\n&nbsp;&nbsp;&nbsp; vector&lt;int&gt;:: iterator en;<br />\n&nbsp;&nbsp; &nbsp;<br />\n&nbsp;&nbsp;&nbsp; st = V.begin() + start;<br />\n&nbsp;&nbsp;&nbsp; en = V.begin() + end;<br />\n&nbsp;&nbsp; &nbsp;<br />\n&nbsp;&nbsp;&nbsp; V.erase(st, en);<br />\n}</p>\n\n<p>void clearAll(vector&lt;int&gt; &amp;V)<br />\n{<br />\n&nbsp;&nbsp;&nbsp; V.clear();<br />\n&nbsp;&nbsp; &nbsp;<br />\n}</p>"
        ],
        "relatedTopics": [
            {
                "name": "STL",
                "slug": "stl"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nvoid eraseAt(vector<int> &arr, int pos) {\n    vector<int>::iterator it;\n    it = arr.begin() + pos;\n    arr.erase(it);\n}\n\nvoid eraseInRange(vector<int> &arr, int start, int end) {\n    vector<int>::iterator st;\n    vector<int>::iterator en;\n\n    st = arr.begin() + start;\n    en = arr.begin() + end;\n\n    arr.erase(st, en);\n}\n\nvoid clearAll(vector<int> &arr) {\n    arr.clear();\n}",
                "lang_text": "cpp"
            }
        ],
        "platform": "GFG"
    }
}