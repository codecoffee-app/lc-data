{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704153,
            "title": "Ways To Tile A Floor",
            "titleSlug": "ways-to-tile-a-floor5836",
            "content": "<p><span style=\"font-size: 18px;\">Given a floor of dimensions 2 x n and tiles of dimensions 2 x 1, the task is to find the number of ways the floor can be tiled. A tile can either be placed horizontally i.e as a 1 x 2 tile or vertically i.e as 2 x 1 tile.&nbsp;</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Examples :</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong><span style=\"font-size: 18px;\">Input:</span> </strong></span><span style=\"font-size: 18px;\">n<strong> = </strong>3</span>\n<span style=\"font-size: 18px;\"><strong><span style=\"font-size: 18px;\">Output:</span> </strong></span><span style=\"font-size: 18px;\">3</span>\n<span style=\"font-size: 18px;\"><strong><span style=\"font-size: 18px;\">Explanation:</span> </strong></span><span style=\"font-size: 18px;\">We need 3 tiles to tile the boardof size  2 x 3. \nWe can tile in following ways:\n1) Place all 3 tiles vertically. \n2) Place first tile verticallyand remaining 2 tiles horizontally.\n3) Place first 2 tiles horizontally and remaining tiles vertically.</span></pre>\n<pre><span style=\"font-size: 18px;\"><strong><span style=\"font-size: 18px;\">Input:</span> </strong></span><span style=\"font-size: 18px;\">n<strong> = </strong>4</span>\n<span style=\"font-size: 18px;\"><strong>Output: </strong></span><span style=\"font-size: 18px;\">5</span>\n<span style=\"font-size: 18px;\"><strong><span style=\"font-size: 18px;\">Explanation:</span> </strong></span><span style=\"font-size: 18px;\">For a 2 x 4 board, there are 5 ways\n1) All 4 vertical\n2) All 4 horizontal\n3) First 2 vertical, remaining 2 horizontal.\n4) First 2 horizontal, remaining2 vertical.\n5) Corner 2 vertical, middle 2 horizontal.<br /></span></pre>\n<pre><span><strong><span>Input:</span> </strong></span><span>n<strong> = </strong>2</span>\n<span><strong>Output: </strong></span><span>2</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong></span><br /><span style=\"font-size: 18px;\">1 &lt;= n &lt;= 10<sup>5</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a floor of dimensions 2 x n and tiles of dimensions 2 x 1, determine the number of ways to tile the floor completely. You can place a tile either horizontally (1 x 2) or vertically (2 x 1).",
                "constraints": [
                    "1 <= n <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "n = 3",
                        "output": "3",
                        "explanation": "A 2x3 floor can be tiled in 3 ways:\n1) All 3 tiles placed vertically.\n2) First tile vertical, remaining 2 horizontal.\n3) First 2 tiles horizontal, last tile vertical."
                    },
                    {
                        "input": "n = 4",
                        "output": "5",
                        "explanation": "A 2x4 floor can be tiled in 5 ways:\n1) All 4 tiles placed vertically.\n2) All 4 tiles placed horizontally.\n3) First 2 tiles vertical, remaining 2 horizontal.\n4) First 2 tiles horizontal, remaining 2 vertical.\n5) Place two vertical tiles at both ends, and two horizontal tiles in the middle."
                    },
                    {
                        "input": "n = 2",
                        "output": "2",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span >Find the number of ways, where each step is the sum of the previous two steps, similar to Fibonacci sequence logic.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Fibonacci",
                "slug": "fibonacci"
            }
        ],
        "companies": [
            "amazon"
        ],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "class Solution {\n  public:\n    int numberOfWays(int n) {\n        if (n <= 3)\n            return n; // base case\n        int pre2 = 1;\n        int pre1 = 2;\n        int tmp;\n        for (int i = 3; i <= n; i++) {\n            tmp = pre1 + pre2;\n            pre2 = pre1;\n            pre1 = tmp;\n        }\n\n        return pre1;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution {\n    static int numberOfWays(int n) {\n        if (n <= 3) return n; // base case\n        int pre2 = 1;\n        int pre1 = 2;\n        for (int i = 3; i <= n; i++) {\n            int t = pre1 + pre2;\n            pre2 = pre1;\n            pre1 = t;\n        }\n        return pre1;\n    }\n}\n",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "class Solution:\n\n    def numberOfWays(self, n: int) -> int:\n        if n <= 3:\n            return n  # base case\n        pre2 = 1\n        pre1 = 2\n        for i in range(3, n + 1):\n            t = pre1 + pre2\n            pre2 = pre1\n            pre1 = t\n        return pre1\n",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "\n// User function Template for javascript\n\n/**\n * @param {number} N\n * @return {number}\n */\nclass Solution {\n    numberOfWays(n) {\n        if (n <= 3) return n; // base case\n        let pre2 = 1;\n        let pre1 = 2;\n        for (let i = 3; i <= n; i++) {\n            let t = pre1 + pre2;\n            pre2 = pre1;\n            pre1 = t;\n        }\n        return pre1;\n    }\n}",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}