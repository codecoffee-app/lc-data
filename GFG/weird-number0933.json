{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704920,
            "title": "Weird Number",
            "titleSlug": "weird-number0933",
            "content": "<p><span style=\"font-size:18px\">Given a number N check whether it&nbsp;is wierd or not. A&nbsp;number is weird if the sum of the proper divisors&nbsp;(divisors including 1 but not itself) of the number is greater than the number, but no subset&nbsp;of those divisors sums to the number itself.</span><br />\r\n&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input: </strong>N = 70\r\n<strong>Output: </strong>1\r\n<strong>Explanation: </strong>The smallest weird number \r\nis 70. Its proper divisors are 1, 2, 5, \r\n7, 10, 14, and 35; these sum to 74, but \r\nno subset of these sums to 70. </span>\r\n</pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input: </strong>N = 12\r\n<strong>Output: </strong>0\r\n<strong>Explanation: </strong>The number 12, for example,\r\nis not&nbsp;weird, because the proper divisors \r\nof 12 are 1, 2, 3, 4, and 6, sum of \r\ndivisors is 16; but there is a subset \r\n{2, 4, 6} with sum 12, i.e., 2+4+6 = 12.</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou don&#39;t need to read or print anything. Your task is to complete the function&nbsp;<strong>is_weird()</strong>&nbsp;which takes n as input parameter and returns 1 if the number is weird number otherwise returns 0.</span><br />\r\n&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong>&nbsp;O(N)<br />\r\n<strong>Expected Space Complexity:&nbsp;</strong>O(1)</span><br />\r\n&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong><br />\r\n1 &lt;= N &lt;= 10000</span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a number N, determine if it is a weird number. A number is weird if the sum of its proper divisors (divisors including 1 but not itself) is greater than the number, but no subset of those divisors sums to the number itself.",
                "constraints": [
                    "1 <= N <= 10000"
                ],
                "testcases": [
                    {
                        "input": "70",
                        "output": "1",
                        "explanation": "The proper divisors of 70 are 1, 2, 5, 7, 10, 14, and 35. Their sum is 74, which is greater than 70.  No subset of these divisors sums to 70."
                    },
                    {
                        "input": "12",
                        "output": "0",
                        "explanation": "The proper divisors of 12 are 1, 2, 3, 4, and 6. Their sum is 16, which is greater than 12. However, the subset {2, 4, 6} sums to 12 (2 + 4 + 6 = 12)."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Find all such numbers which are weired.</p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution{\r\n    public:\r\n    //Function to check if a number is weird or not.\r\n   \tint is_weird(int n){\r\n   \t    //weird numbers are predefined and stored in an array.\r\n   \t    int wierdNumbers[] = {70, 836, 4030, 5830, 7192, 7912, 9272};\r\n   \t    \r\n   \t    //iterating over the array to check if the given number is weird.\r\n   \t\tfor(int i = 0; i < 7; i++)\r\n   \t\t    //if the number matches with any number in the array, return 1.\r\n   \t\t\tif(wierdNumbers[i] == n)\r\n   \t\t\t\treturn 1;\r\n   \t\t\r\n   \t\t//if the number doesn't match with any number in the array, return 0.\r\n   \t\treturn 0;\r\n   \t}    \r\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}