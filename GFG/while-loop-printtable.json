{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 700789,
            "title": "While loop- printTable",
            "titleSlug": "while-loop-printtable",
            "content": "<p><em><span style=\"font-size:18px\">While loop is another loop like for loop but unlike for loop it only checks for one condition.</span></em></p>\r\n\r\n<p><span style=\"font-size:18px\">Here, we will use<strong> while loop</strong> and print a number<strong> n&#39;s table in reverse order.</strong></span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<strong><span style=\"font-size:18px\">Input:</span></strong><span style=\"font-size:18px\">&nbsp;n = 1\r\n<strong>Output: </strong>10 9 8 7 6 5 4 3 2 1</span>\r\n</pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input: </strong>n = 2\r\n<strong>Output: </strong>20 18 16 14 12 10 8 6 4 2</span>\r\n</pre>\r\n\r\n<p><strong><span style=\"font-size:18px\">Video:</span></strong></p>\r\n\r\n<p><iframe frameborder=\"0\" height=\"315\" src=\"https://www.youtube.com/embed/QY7fDniYjmA\" width=\"560\"></iframe></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou don&#39;t need to read anything. Your task is to complete the function&nbsp;<strong>printTable()&nbsp;</strong>which takes n as the input parameter and prints the table in reverse order with spaces and a newline character at the end.</span><br />\r\n&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:&nbsp;</strong>O(n)<br />\r\n<strong>Expected Space Complexity:&nbsp;</strong>O(1)<br />\r\n<br />\r\n<strong>Constraints:</strong></span></p>\r\n\r\n<p><span style=\"font-size:18px\">1 &le; n &le; 1000</span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Write a function `printTable(n)` that takes an integer `n` as input and prints the multiplication table of `n` in reverse order, starting from n*10 down to n*1, separated by spaces. End the output with a newline character.",
                "constraints": [
                    "1 <= n <= 1000"
                ],
                "testcases": [
                    {
                        "input": "1",
                        "output": "10 9 8 7 6 5 4 3 2 1\n",
                        "explanation": "The multiplication table of 1 in reverse order is: 10, 9, 8, 7, 6, 5, 4, 3, 2, 1."
                    },
                    {
                        "input": "2",
                        "output": "20 18 16 14 12 10 8 6 4 2\n",
                        "explanation": "The multiplication table of 2 in reverse order is: 20, 18, 16, 14, 12, 10, 8, 6, 4, 2."
                    },
                    {
                        "input": "5",
                        "output": "50 45 40 35 30 25 20 15 10 5\n",
                        "explanation": "The multiplication table of 5 in reverse order."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p>Initialize a variable to 10 and decrease it till 1 in while loop</p>"
        ],
        "relatedTopics": [
            {
                "name": "CPP-Control-Flow",
                "slug": "cpp-control-flow"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nclass Solution{\n    public:\n    // Function to print the multiplication table of a given number\n    void printTable(int n)\n    {\n        int multiplier=10;\n        \n        // Loop to print the table\n        while(multiplier)\n        {\n            cout<<n*multiplier<<\" \"; // Print the product of n and multiplier\n            multiplier--;\n        }\n        \n        cout<<endl; // Print a new line after printing the table\n    }  \n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\n\nclass Solution{\n    public void printTable(int n){\n        // declaring and initializing a variable to multiply with the input number n\n        int multiplier = 10;\n        \n        // looping through the multipliers from 10 to 1\n        while(multiplier > 0){\n            // printing the product of n and the current multiplier\n            System.out.print(multiplier * n + \" \");\n            \n            // decrementing the multiplier by 1 for the next iteration\n            multiplier--;\n        }\n        \n        // moving to the next line after printing all the products\n        System.out.println();\n    }\n}",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\r\n\r\nclass Solution:\r\n    #Function to print the multiplication table of a given number.\r\n    def printTable(self, n):\r\n        multiplier = 10\r\n        \r\n        #Iterating from 10 to 1 and printing the product of n and the multiplier.\r\n        while(multiplier):\r\n            print(multiplier * n, end = \" \")\r\n            multiplier -= 1 \r\n        \r\n        #Printing a new line after printing the table.\r\n        print()",
                "lang_text": "python3"
            },
            {
                "lang": "Javascript",
                "full_func": "class Solution{\n    printTable(n){\n        let multiplier = 10; // Initialize the multiplier to 10.\n        let s=\"\"; // Initialize an empty string to store the table elements.\n        while(multiplier > 0){ // Iterate until the multiplier becomes 0.\n            s+=(multiplier*n); // Multiply the number with the multiplier and add it to the string.\n            s+=\" \"; // Add a space after each table element in the string.\n            multiplier--; // Decrement the multiplier by 1 in each iteration.\n        }\n        console.log(s); // Print the string containing the table elements.\n    }\n}",
                "lang_text": "javascript"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    public void printTable(int n)\n    {\n        int multiplier = 10;\n        while (multiplier > 0)\n        {\n            Console.Write(n * multiplier + \" \"); // Print the product of n and multiplier\n            multiplier--;\n        }\n        \n        Console.WriteLine(); // Print a new line after printing the table\n    }  \n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}