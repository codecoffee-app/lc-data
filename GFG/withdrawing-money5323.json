{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704420,
            "title": "Withdrawing Money",
            "titleSlug": "withdrawing-money5323",
            "content": "<p><span style=\"font-size:18px\">Geek has N dollars in his bank account. He wants to withdraw all of it but the bank only allows withdrawal of an amount that is&nbsp;a divisor of the current amount in the bank and is less than the current amount.<br />\r\nIf Geek withdraws the maximum possible amount each day, how many days does he need to take out all of his money from the bank?&nbsp;<br />\r\n<strong>Note:</strong> If the remaining amount is 1, he can withdraw it.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong><span style=\"font-size:18px\">Example 1:</span></strong></p>\r\n\r\n<pre>\r\n<strong><span style=\"font-size:18px\">Input:</span> </strong><span style=\"font-size:18px\">N = 12</span>\r\n<strong><span style=\"font-size:18px\">Output:</span> </strong><span style=\"font-size:18px\">5</span>\r\n<strong><span style=\"font-size:18px\">Explanation:</span> </strong><span style=\"font-size:18px\">N = 12\r\nWithdraws 6, Remaining = 6\r\nWithdraws 3, Remaining = 3\r\nWithdraws 1, Remaining = 2\r\nWithdraws 1, Remaining = 1\r\nWithdraws 1, Remaining = 0</span>\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong><span style=\"font-size:18px\">Example 2:</span></strong></p>\r\n\r\n<pre>\r\n<strong><span style=\"font-size:18px\">Input:</span> </strong><span style=\"font-size:18px\">N = 21</span>\r\n<strong><span style=\"font-size:18px\">Output:</span> </strong><span style=\"font-size:18px\">7</span>\r\n<strong><span style=\"font-size:18px\">Explanation:</span> </strong><span style=\"font-size:18px\">N = 21\r\nWithdraws 7, Remaining = 14\r\nWithdraws 7, Remaining = 7\r\nWithdraws 1, Remaining = 6\r\nWithdraws 3, Remaining = 3\r\nWithdraws 1, Remaining = 2\r\nWithdraws 1, Remaining = 1\r\nWithdraws 1, Remaining = 0</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong><span style=\"font-size:18px\">Your Task:</span></strong></p>\r\n\r\n<p><span style=\"font-size:18px\">You don&#39;t need to read input or print anything. Your task is to complete the function <strong>numberOfDays()</strong> which takes an integer N as input parameter and returns the number of days Geek&nbsp;needs to withdraw all of his money.&nbsp;</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity: </strong>O(sqrt(N))<br />\r\n<strong>Expected Auxiliary Space:</strong> O(1)</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints :&nbsp;</strong><br />\r\n1 &lt;= N &lt;= 10<sup>12</sup></span></p>\r\n\r\n<p>&nbsp;</p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Geek has N dollars in his bank account. He wants to withdraw all of it. The bank only allows withdrawals of an amount that is a divisor of the current amount in the bank and is less than the current amount.\nIf Geek withdraws the maximum possible amount each day, determine the minimum number of days required to withdraw all of his money from the bank.\nNote: If the remaining amount is 1, he can withdraw it.",
                "constraints": [
                    "1 <= N <= 10^12"
                ],
                "testcases": [
                    {
                        "input": "12",
                        "output": "5",
                        "explanation": "Day 1: Withdraws 6 (largest divisor less than 12), Remaining = 6\nDay 2: Withdraws 3 (largest divisor less than 6), Remaining = 3\nDay 3: Withdraws 1, Remaining = 2\nDay 4: Withdraws 1, Remaining = 1\nDay 5: Withdraws 1, Remaining = 0"
                    },
                    {
                        "input": "21",
                        "output": "7",
                        "explanation": "Day 1: Withdraws 7 (largest divisor less than 21), Remaining = 14\nDay 2: Withdraws 7 (largest divisor less than 14), Remaining = 7\nDay 3: Withdraws 1, Remaining = 6\nDay 4: Withdraws 3, Remaining = 3\nDay 5: Withdraws 1, Remaining = 2\nDay 6: Withdraws 1, Remaining = 1\nDay 7: Withdraws 1, Remaining = 0"
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Try finding the largest divisor of N (excluding N) and subtract it from N until N == 0.</span><br />\n&nbsp;</p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Division",
                "slug": "division"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "//Back-end complete function template for C++\n\nclass Solution{   \npublic:\n    //Function to find the number of days needed to reduce N to 0.\n    int numberOfDays(long long N){\n        \n        long long t,n,k,i,j,temp,temp2,ans,x,cost;\n        float f;\n        \n        ans=0;\n        \n        //loop until N is not equal to 0.\n        while(N){\n            float f=sqrt(N);\n            //checking for factors of N.\n            for(i=2;i<=f;i++){\n                //if i is a factor of N, reduce N by N/i.\n                if(N%i==0){\n                    temp=N/i;\n                    N-=temp;\n                    ans++;\n                    break;\n                }\n            }\n            //if no factors exist, reduce N by 1.\n            if(i>f){\n                N--;\n                ans++;\n            }\n        }\n        //return the number of days needed to reduce N to 0.\n        return ans;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    //Function to find the number of days in Nth year.\n    public int numberOfDays(long N)\n    {\n        int ans = 0;\n        \n        while (N != 0)\n        {\n            long f = (long)Math.Sqrt(N);\n            \n            bool isFactor = false;\n            \n            for (long i = 2; i <= f; i++)\n            {\n                if (N % i == 0)\n                {\n                    long temp = N / i;\n                    N -= temp;\n                    ans++;\n                    isFactor = true;\n                    break;\n                }\n            }\n            \n            if (!isFactor)\n            {\n                N--;\n                ans++;\n            }\n        }\n        \n        return ans;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}