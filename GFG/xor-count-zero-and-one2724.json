{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703815,
            "title": "XOR Count Zero and One",
            "titleSlug": "xor-count-zero-and-one2724",
            "content": "<p><span style=\"font-size:18px\">Given a number N, the task is to find XOR of count of 0s and count of 1s in binary representation of a given number.</span><br />\n&nbsp;</p>\n\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input: </strong>N =<strong> </strong>5\n<strong>Output: </strong>3\n<strong>Explanation: \n</strong>Binary representation: 101\nSet_bit_count: 2\nUnset_bit_count: 1\n2 XOR 1 = 3</span>\n</pre>\n\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\n\n<pre>\n<span style=\"font-size:18px\"><strong>Input: </strong>N = 7\n<strong>Output: </strong>3\n<strong>Expalanation:\n</strong>Binary representation: 111\nSet_bit_count: 3\nUnset_bit_count: 0\n</span><span style=\"font-size:18px\">3 XOR 0 = 3</span>\n</pre>\n\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\nYou don&#39;t need to read or print anything. Your task is to complete the function&nbsp;<strong>find_xor()</strong>&nbsp;which takes N&nbsp;as input parameter and returns the XOR&nbsp;of count of 0s and count of 1s in binary representation of N.</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:&nbsp;</strong>O(log(N))<br />\n<strong>Expected Space Complexity:&nbsp;</strong>O(1)</span></p>\n\n<p><span style=\"font-size:18px\"><strong>Constranits:</strong><br />\n1 &lt;= N &lt;= 10<sup>9</sup></span></p>\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given a non-negative integer N, determine the XOR of the number of 0s (unset bits) and the number of 1s (set bits) in its binary representation.",
                "constraints": [
                    "1 <= N <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "5",
                        "output": "3",
                        "explanation": "The binary representation of 5 is 101. There are two 1s (set bits) and one 0 (unset bit).  The XOR of 2 and 1 is 3."
                    },
                    {
                        "input": "7",
                        "output": "3",
                        "explanation": "The binary representation of 7 is 111. There are three 1s (set bits) and zero 0s (unset bits). The XOR of 3 and 0 is 3."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:18px\">Calculate count of set bit and all bit in N.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Bit Magic",
                "slug": "bit-magic"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nclass Solution\n{\npublic:\n\tint count_setbit(int n)\n\t{\n\t\tint cnt = 0;\n\t\twhile(n > 0)\n\t\t{\n\t\t\tif(n & 1)\n\t\t\t\tcnt++;\n\t\t\tn >>= 1;\n\t\t}\n\t\treturn cnt;\n\t}\npublic:\n\tint count_allbit(int n)\n\t{\n\t\tint cnt = 0;\n\t\twhile(n > 0)\n\t\t{\n\t\t\tcnt++;\n\t\t\tn >>= 1;\n\t\t}\n\t\treturn cnt;\n\t}\npublic:\n\tint find_xor(int n)\n\t{\n\t\t// find count of set bit\n\t\tint set_bit = count_setbit(n);\n\t\t// find count of all bit\n\t\tint all_bit = count_allbit(n);\n\t\t// find count of unset bit\n\t\tint unset_bit = all_bit - set_bit;\n\t\t// do xor\n\t\tint ans = set_bit ^ unset_bit;\n\t\treturn ans;\n\t}\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}