{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 704594,
            "title": "XOR Game",
            "titleSlug": "xor-game2143",
            "content": "<p><span style=\"font-size: 18px;\">Given a positive number <strong>k</strong>, we need to find a minimum value of&nbsp;positive integer <strong>n</strong>, such that XOR of n and n+1 is equal to k. If no such <strong>n</strong> exist then print -1.</span></p>\n<p><br /><strong><span style=\"font-size: 18px;\">Example 1:</span></strong></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong> k = 3\n<strong>Output:</strong> 1\n<strong>Explaination:</strong> 1 xor 2 = 3.</span></pre>\n<p><br /><strong><span style=\"font-size: 18px;\">Example 2:</span></strong></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong> k = 6\n<strong>Output:</strong> -1\n<strong>Explaination:</strong> There is no such n, so that, \nn xor n+1 = k.</span></pre>\n<p><br /><span style=\"font-size: 18px;\"><strong>Your Task:</strong><br />You do not need to read input or print anything. Your task is to complete the function <strong>xorCal()</strong> which takes k as input parameter and returns the value of n. If there is no such , then it returns -1.</span></p>\n<p><br /><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong> O(1)<br /><strong>Expected Auxiliary Space:</strong> O(1)</span></p>\n<p><br /><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &le; k &le; 10<sup>9</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size: 18px;\">Analysis of the bit pattern.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Mathematical",
                "slug": "mathematical"
            },
            {
                "name": "Algorithms",
                "slug": "algorithms"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "// Back-end complete function Template for C++\n\nclass Solution{\npublic:\n    //function to calculate XOR value\n    int xorCal(int k){\n        //if k is 1, return 2\n        if(k == 1)\n            return 2;\n        //if k+1 is a power of 2, return k/2\n        if((k & (k+1)) == 0)\n            return k/2;\n        //otherwise return -1\n        return -1;\n    }\n};",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": "class Solution {\n    // function to calculate XOR value\n    static int xorCal(int k) {\n        // if k is 1, return 2\n        if (k == 1) return 2;\n        // if k+1 is a power of 2, return k/2\n        if ((k & (k + 1)) == 0) return k / 2;\n        // otherwise return -1\n        return -1;\n    }\n}\n",
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": "class Solution:\n    # function to calculate XOR value\n    def xorCal(self, k):\n        # if k is 1, return 2\n        if k == 1:\n            return 2\n        # if k+1 is a power of 2, return k/2\n        if (k & (k + 1)) == 0:\n            return k // 2\n        # otherwise return -1\n        return -1\n",
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "//User function Template for C#\n\nclass Solution\n{\n    //Complete this function\n    public int xorCal(int k)\n    {\n        //if k is 1, return 2\n        if(k == 1)\n            return 2;\n        //if k+1 is a power of 2, return k/2\n        if((k & (k+1)) == 0)\n            return k/2;\n        //otherwise return -1\n        return -1;\n    }\n}",
                "lang_text": "csharp"
            },
            {
                "lang": "Javascript",
                "full_func": "class Solution {\n    xorCal(k) {\n        if (k === 1) return 2;\n        if ((k & (k + 1)) === 0) return Math.floor(k / 2);\n        return -1;\n    }\n}\n",
                "lang_text": "javascript"
            }
        ],
        "platform": "GFG"
    }
}