{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 700819,
            "title": "Xoring and Clearing",
            "titleSlug": "xoring-and-clearing",
            "content": "<p><span style=\"font-size: 18px;\">You are given an array&nbsp;<strong>arr[]</strong>&nbsp;of<strong>&nbsp;size n</strong>. You need to do the following:</span></p>\n<ol>\n<li><span style=\"font-size: 18px;\">You need to calculate the&nbsp;<strong>bitwise XOR</strong>&nbsp;of each element in the array with its&nbsp;<strong>corresponding index</strong>&nbsp;(indices start from 0).</span></li>\n<li><span style=\"font-size: 18px;\">After step1,&nbsp;<strong>print the array.</strong></span></li>\n<li><span style=\"font-size: 18px;\">Now,<strong>&nbsp;set all the elements of arr[] to zero</strong>.</span></li>\n<li><span style=\"font-size: 18px;\">Now,&nbsp;<strong>print arr[].</strong></span></li>\n</ol>\n<p><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong>\nn = 10\narr[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}\n<strong>Output:\n</strong>1 3 1 7 1 3 1 15 1 3\n0 0 0 0 0 0 0 0 0 0\n<strong>Explanation:\n</strong>First we take xor of every element with\ntheir indices, like (1xor0), (2xor1), (3xor2), (4xor3) and so on.\nNow print the resultant array\nNow set all the elements of array to zero\nNow print the resultant array</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong>\nn = 4\narr[] = {10, 20, 30, 40}\n<strong>Output:\n</strong>10 21 28 43\n0 0 0 0\n<strong>Explanation:\n</strong>First we take xor of every element with\ntheir indices, like (1xor0), (2xor1), (3xor2).\nNow print the resultant array\nNow set all the elements of array to zero\nNow print the resultant array</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Your Task:</strong><br />Since this is a function problem, you don't need to take any input. Just complete the provided functions.&nbsp;In a new line, print the&nbsp;<strong>output</strong>.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Expected Time Complexity:</strong>&nbsp;O(n)<br /><strong>Expected Auxiliary Space:</strong>&nbsp;O(1)</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints:</strong><br />1 &lt;= n &lt;= 1000<br />1 &lt;= arr[i] &lt;= 1000</span></p>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an array `arr` of size `n`, perform the following operations:\n\n1.  Calculate the bitwise XOR of each element in the array with its corresponding index (indices start from 0).\n2.  Print the modified array.\n3.  Set all elements of `arr` to zero.\n4.  Print the updated array.",
                "constraints": [
                    "1 <= n <= 1000",
                    "1 <= arr[i] <= 1000"
                ],
                "testcases": [
                    {
                        "input": "n = 10\narr[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}",
                        "output": "1 3 1 7 1 3 1 15 1 3\n0 0 0 0 0 0 0 0 0 0",
                        "explanation": "The first array is generated by XORing each element with its index:\n- arr[0] = 1 ^ 0 = 1\n- arr[1] = 2 ^ 1 = 3\n- arr[2] = 3 ^ 2 = 1\n- arr[3] = 4 ^ 3 = 7\n- arr[4] = 5 ^ 4 = 1\n- arr[5] = 6 ^ 5 = 3\n- arr[6] = 7 ^ 6 = 1\n- arr[7] = 8 ^ 7 = 15\n- arr[8] = 9 ^ 8 = 1\n- arr[9] = 10 ^ 9 = 3\nThe second array is obtained by setting all elements of the original array to 0."
                    },
                    {
                        "input": "n = 4\narr[] = {10, 20, 30, 40}",
                        "output": "10 21 28 43\n0 0 0 0",
                        "explanation": "The first array is generated by XORing each element with its index:\n- arr[0] = 10 ^ 0 = 10\n- arr[1] = 20 ^ 1 = 21\n- arr[2] = 30 ^ 2 = 28\n- arr[3] = 40 ^ 3 = 43\nThe second array is obtained by setting all elements of the original array to 0."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"font-size:14px\">1. XOR(Exclusive OR) is a binary operation, yields 1 when bith bits are different else 0.</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "Bit Magic",
                "slug": "bit-magic"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nclass Solution {\n  public:\n    void printArr(int n, int arr[]) {\n        // printing array elements with spaces\n        for (int i = 0; i < n; i++)\n            cout << arr[i] << \" \";\n\n        cout << endl;\n    }\n\n    void setToZero(int n, int arr[]) {\n        // setting all elements to zero\n        memset(arr, 0, n * sizeof(int));\n    }\n\n    void xor1ToN(int n, int arr[]) {\n        // doing xor with indices\n        for (int i = 0; i < n; i++) {\n            arr[i] = arr[i] ^ i;\n        }\n    }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "//Back-end complete function Template for Java\nclass Solution {\n    // function to print the elements of an array\n    public void printArr(int n, int arr[]) {\n        for (int i = 0; i < n; i++) {\n            System.out.print(arr[i] + \" \");\n        }\n        System.out.println(\"\");\n    }\n\n    // function to set all elements of an array to zero\n    public void setToZero(int n, int arr[]) {\n        for (int i = 0; i < n; i++) {\n            arr[i] = 0;\n        }\n    }\n\n    // function to perform XOR operation with index and element in the array\n    public void xor1ToN(int n, int arr[]) {\n        for (int i = 0; i < n; i++) {\n            arr[i] = arr[i] ^ i;\n        }\n    }\n}",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "#Back-end complete function Template for Python 3\n\nclass Solution:\n    def printArr(self, n, arr):\n        # printing array elements with spaces\n        print(\" \".join(map(str, arr)))\n\n    def setToZero(self, n, arr):\n        # setting all elements to zero\n        for i in range(n):\n            arr[i] = 0\n\n    def xor1ToN(self, n, arr):\n        # doing xor with indices\n        for i in range(n):\n            arr[i] = arr[i] ^ i",
                "lang_text": "py"
            },
            "javascript": {
                "lang": "Javascript",
                "full_func": "//Back-end complete function Template for javascript\nclass Solution {\n    printArr(n, arr) {\n        // printing array elements with spaces\n        // for (let i = 0; i < n; i++)\n        //     console.log(arr[i] + \" \");\n        let result = \"\";\n        for (let i = 0; i < n; i++) {\n            result += arr[i];\n            if (i < n - 1) {\n                result += \" \";\n            }\n        }\n        console.log(result);\n        // console.log();\n    }\n\n    setToZero(n, arr) {\n        // setting all elements to zero\n        for (let i = 0; i < n; i++) arr[i] = 0;\n    }\n\n    xor1ToN(n, arr) {\n        // doing xor with indices\n        for (let i = 0; i < n; i++) {\n            arr[i] = arr[i] ^ i;\n        }\n    }\n}\n",
                "lang_text": "javascript"
            }
        },
        "platform": "GFG"
    }
}