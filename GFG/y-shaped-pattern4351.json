{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 705570,
            "title": "Y shaped pattern",
            "titleSlug": "y-shaped-pattern4351",
            "content": "<p><span style=\"font-size:18px\">Print a Y shaped pattern from asterisks in <strong>N</strong>&nbsp;number of lines.<br />\r\n<strong>Note:</strong></span><br />\r\n<span style=\"font-size:18px\">1.<strong>&nbsp;</strong>N is even.<br />\r\n2. All the strings in the string array which you will return is of length N, so add the spaces wherever required, so that the length of every string becomes N.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\r\n<span style=\"font-size:18px\"><strong>N = </strong>4</span>\r\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\r\n<span style=\"font-size:18px\">*   * \r\n * *  \r\n  *    \r\n  *</span>\r\n</pre>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong></span>\r\n<span style=\"font-size:18px\"><strong>N = </strong>8</span>\r\n<span style=\"font-size:18px\"><strong>Output:</strong></span>\r\n<span style=\"font-size:18px\">*\\t *</span>\r\n<span style=\"font-size:18px\"> *     * \r\n  *   *  \r\n   * *   \r\n    *\r\n    *</span>\r\n<span style=\"font-size:18px\">    *</span>\r\n<span style=\"font-size:18px\">    *</span>\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYou don&#39;t need to read input or print anything. Your task is to complete the function <strong>yShapedPattern()</strong> which takes an Integer N as input and returns a vector of strings where each line represents lines of the pattern. For example, if N = $, the vector v = {&quot;*&nbsp;&nbsp; *&quot;, &quot; * * &quot;, &quot;&nbsp; *&nbsp; &quot;,&quot;&nbsp; *&nbsp; &quot;}.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:</strong> O(N)<br />\r\n<strong>Expected Auxiliary Space:</strong> O(N)</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints:</strong></span><br />\r\n<span style=\"font-size:18px\">4 &lt;= N &lt;= 200</span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an even integer N, print a Y-shaped pattern of asterisks across N lines. Each line of the output should be a string of length N, padded with spaces as necessary to achieve this length.",
                "constraints": [
                    "4 <= N <= 200",
                    "N is even"
                ],
                "testcases": [
                    {
                        "input": "4",
                        "output": "*   *\n * *  \n  *    \n  *",
                        "explanation": null
                    },
                    {
                        "input": "8",
                        "output": "*       *\n *     *\n  *   *\n   * *\n    *\n    *\n    *\n    *",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "pattern-printing",
                "slug": "pattern-printing"
            }
        ],
        "companies": [
            "citrix"
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "//Back-end complete function Template for C++\n\nclass Solution {\n  public:\n    //Function to generate Y-shaped pattern.\n    vector<string> yShapedPattern(int N) {\n        \n        vector<string> ans;\n        \n        //iterating from 1 to N.\n        for(int i=1; i<=N; i++)\n        {\n            string s;\n            \n            //if current row is part of upper half of Y shape.\n            if(i <= N/2)\n            {\n                //calculating the number of spaces before the first asterisk.\n                int x = 2*(N/2-i) + 1;\n                //calculating the number of spaces between the asterisks.\n                int y = i-1;\n                \n                //appending the necessary spaces and asterisks to the string.\n                for(int i=0; i<y; i++)\n                    s += ' ';\n                \n                s += '*';\n                \n                for(int i=0; i<x; i++)\n                    s += ' ';\n                    \n                s += '*';\n                    \n                for(int i=0; i<y; i++)\n                    s += ' ';\n            }\n            \n            //if current row is part of lower half of Y shape.\n            else\n            {\n                //appending spaces before and after the single asterisk.\n                for(int i=0; i<N/2; i++)\n                    s += ' ';\n                    \n                s += '*';\n                \n                for(int i=0; i<N/2; i++)\n                    s += ' ';\n            }\n            \n            //adding the generated row to the answer vector.\n            ans.push_back(s);\n        }\n        \n        //returning the final answer vector.\n        return ans;\n    }\n};",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            "py": {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}