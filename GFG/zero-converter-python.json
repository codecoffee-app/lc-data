{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 700952,
            "title": "Zero Converter - Python",
            "titleSlug": "zero-converter-python",
            "content": "<p><span style=\"font-size: 18px;\">You are given a <strong>number n</strong>. The number n can be negative or positive. If n is negative, print numbers from <strong>n to 0</strong> by adding 1 to n in the <strong>neg</strong> function. If positive, print numbers from <strong>n-1 to 0</strong> by subtracting 1 from n in the <strong>pos</strong> function.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Note</strong>:- You don't have to return anything, you just have to print the array.</span></p>\n<p><span style=\"font-size: 18px;\"><strong>Example 1:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong>\nn = 0\n<strong>Output:</strong>\nalready Zero</span>\n</pre>\n<p><span style=\"font-size: 18px;\"><strong>Example 2:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong>\nn = 4\n<strong>Output:</strong>\n3 2 1 0</span>\n</pre>\n<p><span style=\"font-size: 18px;\"><strong>Example 3:</strong></span></p>\n<pre><span style=\"font-size: 18px;\"><strong>Input:</strong>\nn = -3\n<strong>Output:</strong>\n-3 -2 -1 0</span></pre>\n<p><span style=\"font-size: 18px;\"><strong>Your Task:</strong><br />This is a function problem. You don't need to take input of test cases. Just complete the functions <strong>pos() and neg().</strong></span></p>\n<p><span style=\"font-size: 18px;\"><strong>Constraints</strong>:<br />-10<sup>3</sup>&nbsp;&lt;= x &lt;= 10<sup>3</sup></span></p>",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA",
            "rephrased": {
                "body": "Given an integer `n`, implement the functions `pos(n)` and `neg(n)` to print a sequence of numbers based on the value of `n`. If `n` is negative, print numbers from `n` to 0 (inclusive), incrementing by 1 in each step. If `n` is positive, print numbers from `n-1` down to 0 (inclusive), decrementing by 1 in each step. If `n` is zero, print \"already Zero\".  You should only print the numbers; do not return any value.  Each number in the sequence should be separated by a space.",
                "constraints": [
                    "-1000 <= n <= 1000"
                ],
                "testcases": [
                    {
                        "input": "0",
                        "output": "already Zero",
                        "explanation": null
                    },
                    {
                        "input": "4",
                        "output": "3 2 1 0",
                        "explanation": null
                    },
                    {
                        "input": "-3",
                        "output": "-3 -2 -1 0",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<p><span style=\"color: #0d0d0d; font-family: S&ouml;hne, ui-sans-serif, system-ui, -apple-system, 'Segoe UI', Roboto, Ubuntu, Cantarell, 'Noto Sans', sans-serif, 'Helvetica Neue', Arial, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; font-size: 14pt; white-space-collapse: preserve; background-color: #ffffff;\"> If 'n' is positive, it prints integers from (n-1) to 0. If 'n' is negative, it prints integers from 'n' to 0. If 'n' is zero, it prints \"already Zero\".</span></p>"
        ],
        "relatedTopics": [
            {
                "name": "python-loops",
                "slug": "python-loops"
            },
            {
                "name": "python",
                "slug": "python"
            },
            {
                "name": "constructive algo",
                "slug": "constructive-algo"
            }
        ],
        "companies": [],
        "solutions": {
            "py": {
                "lang": "Python3",
                "full_func": "#Back-end complete function Template for Python 3\n\n\ndef pos(n):\n    n -= 1\n    while n >= 0:\n        print(n, end=' ')\n        n-=1\n        \n    \ndef neg(n):\n    \n    while n <= 0:\n        print(n, end=' ')\n        n += 1\n    \n    ",
                "lang_text": "py"
            }
        },
        "platform": "GFG"
    }
}