{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": 703106,
            "title": "Duck Number",
            "titleSlug": "zero-number2158",
            "content": "<p><span style=\"font-size:18px\">A <strong>Duck</strong> number is a positive number which has zeroes present in it, For example, 3210, 8050896, 70709 are all Duck numbers. A&nbsp;number&nbsp;with only leading 0s is not considered as Duck Number. For example, numbers like 035 or 0012 are not considered as Duck Numbers. A number like 01203 is considered as Duck because there is a non-leading 0 present in it.</span><br />\r\n<span style=\"font-size:18px\">The task is to check whether the given number <strong>N</strong> is a <strong>Duck</strong> number or not.</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 1:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong> 707069\r\n<strong>Output:</strong> YES\r\n<strong>Explanation:</strong> 707069 contains a non-leading 0.</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Example 2:</strong></span></p>\r\n\r\n<pre>\r\n<span style=\"font-size:18px\"><strong>Input:</strong> 02364\r\n<strong>Output:</strong> NO\r\n<strong>Explanation:</strong> contains only leading 0.</span></pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Your Task:</strong><br />\r\nYour task is to complete the function&nbsp;<strong>check_duck()&nbsp;</strong>which takes a single argument(string N) and returns true if N is a Duck number else false. You need not take input or print anything. The driver code will itself print &quot;YES&quot; if the returned value is true and &quot;NO&quot; if the returned value is false.</span></p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Expected Time Complexity:&nbsp;</strong>O(|N|).<br />\r\n<strong>Expected Auxiliary Space:&nbsp;</strong>O(1).</span></p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"font-size:18px\"><strong>Constraints :</strong><br />\r\n1 &le; Length of N &le; 10<sup>4</sup></span></p>\r\n",
            "isPaidOnly": false,
            "difficulty": "Basic",
            "likes": "NA",
            "dislikes": "NA"
        },
        "similar": [],
        "hints": [
            "<p>check if there are any zeroes present while taking into account leading zeroes</p>"
        ],
        "relatedTopics": [
            {
                "name": "Strings",
                "slug": "strings"
            },
            {
                "name": "Data Structures",
                "slug": "data-structures"
            }
        ],
        "companies": [],
        "solutions": [
            {
                "lang": "C++",
                "full_func": "// Function to check if a number is a duck number or not\nbool check_duck(string N) \n{ \n    // Ignore leading 0s\n    int i = 0, n = N.length(); \n    while (i < n && N[i] == '0') \n        i++; \n  \n    // Check remaining digits \n    while (i < n) { \n        if (N[i] == '0') \n            return true; \n        i++; \n    } \n  \n    return false; \n}",
                "lang_text": "cpp"
            },
            {
                "lang": "Java",
                "full_func": null,
                "lang_text": "java"
            },
            {
                "lang": "Python3",
                "full_func": null,
                "lang_text": "python3"
            },
            {
                "lang": "C#",
                "full_func": "class Solution\n{\n    //Complete this function\n    //Function to check if a given number is a duck number or not.\n    public bool check_duck(string N)\n    {\n        // Ignore leading 0s\n        int i = 0, n = N.Length;\n        while (i < n && N[i] == '0')\n            i++;\n\n        // Check remaining digits\n        while (i < n)\n        {\n            if (N[i] == '0')\n                return true;\n            i++;\n        }\n\n        return false;\n    }\n}",
                "lang_text": "csharp"
            }
        ],
        "platform": "GFG"
    }
}