[
  {
    "type": "h4",
    "text": "Array Operations"
  },
  {
    "type": "p5",
    "text": "Arrays support three fundamental operations: inserting elements, deleting elements, and accessing elements by their index."
  },
  {
    "type": "h5",
    "text": "1. Insertion Operation"
  },
  {
    "type": "p5",
    "text": "To insert an element, you must know the index where it should be placed."
  },
  {
    "type": "ul",
    "text": [
      "If inserting at the end, directly assign the value to that index.",
      "If inserting in the middle, shift all subsequent elements one position forward to make space."
    ]
  },
  {
    "type": "p5",
    "text": "This shifting makes array insertions inefficient when inserting in the middle due to the continuous memory allocation of arrays."
  },
  {
    "type": "code",
    "text": {
      "lang": "pseudo",
      "code": "function insert_at_position(arr, pos, value):\n    for i from n - 1 to pos:\n        arr[i + 1] = arr[i]\n    arr[pos] = value\n    n = n + 1"
    }
  },
  {
    "type": "h5",
    "text": "2. Deletion Operation"
  },
  {
    "type": "p5",
    "text": "To delete an element, you need to know its index."
  },
  {
    "type": "ul",
    "text": [
      "If deleting the last element, it can be removed or ignored.",
      "If deleting from the middle, shift all elements after the deleted element one position backward."
    ]
  },
  {
    "type": "code",
    "text": {
      "lang": "pseudo",
      "code": "function delete_at_position(arr, pos):\n    for i from pos to n - 2:\n        arr[i] = arr[i + 1]\n    n = n - 1"
    }
  },
  {
    "type": "h5",
    "text": "3. Access Operation"
  },
  {
    "type": "p5",
    "text": "Array elements can be accessed directly using their index."
  },
  {
    "type": "p5",
    "text": "Accessing elements in one-dimensional and multi-dimensional arrays is simple using loops."
  },
  {
    "type": "code",
    "text": {
      "lang": "pseudo",
      "code": "function display_1D_array(arr):\n    for i from 0 to n - 1:\n        print arr[i]"
    }
  },
  {
    "type": "code",
    "text": {
      "lang": "pseudo",
      "code": "function display_2D_array(arr):\n    for i from 0 to n - 1:\n        for j from 0 to n - 1:\n            print arr[i][j]"
    }
  }
]
