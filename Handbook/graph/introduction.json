[
    {
      "type": "h4",
      "text": "What is a Graph?"
    },
    {
      "type": "p5",
      "text": "A graph is a way of showing relationships or connections between different items, known as objects. In computer science, itâ€™s a popular structure to represent how things are linked together."
    },
    {
      "type": "p5",
      "text": "It is made up of points called vertices (or nodes), and lines that connect these points called edges."
    },
    {
      "type": "img",
      "text": "https://picsum.photos/300/200",
      "style": "w-36 h-9"
    },
    {
      "type": "h5",
      "text": "Why are Graphs Useful?"
    },
    {
      "type": "ul",
      "text": [
        "They represent connections in the real world like roads between cities or friends on a social network.",
        "Help in solving problems like shortest paths, detecting cycles, or finding groups in networks.",
        "Graphs are flexible structures that can model a wide variety of situations."
      ]
    },
    {
      "type": "h4",
      "text": "Key Properties of a Graph"
    },
    {
      "type": "p5",
      "text": "A graph G is written as an ordered pair (V, E) where:"
    },
    {
      "type": "ul",
      "text": [
        "V(G) represents the set of vertices.",
        "E(G) represents the set of edges connecting the vertices."
      ]
    },
    {
      "type": "h5",
      "text": "Types of Graphs"
    },
    {
      "type": "ol",
      "text": [
        "Directed Graph: Edges have a direction from one vertex to another.",
        "Undirected Graph: Edges do not have a direction; connections work both ways.",
        "Mixed Graph: Contains both directed and undirected edges."
      ]
    },
    {
      "type": "h4",
      "text": "Real-World Uses of Graphs in Programming"
    },
    {
      "type": "ul",
      "text": [
        "Modeling transportation networks, like flight routes or road maps.",
        "Social networking platforms (like Facebook, LinkedIn) to find friends, followers, and mutual connections.",
        "Web page linking structures and search engine indexing."
      ]
    },
    {
      "type": "h4",
      "text": "Important Graph Terminology"
    },
    {
      "type": "ul",
      "text": [
        "Vertex (Node): An individual data point in a graph.",
        "Edge: A connection between two vertices (also called an Arc).",
        "Origin: Starting point of a directed edge.",
        "Destination: Ending point of a directed edge.",
        "Adjacency: Two vertices are adjacent if they are connected by an edge.",
        "Path: A sequence of edges connecting a sequence of vertices.",
        "Degree: Number of edges connected to a vertex.",
        "In-Degree: Number of edges coming into a vertex.",
        "Out-Degree: Number of edges going out from a vertex."
      ]
    },
    {
      "type": "h4",
      "text": "Special Types of Graphs"
    },
    {
      "type": "ol",
      "text": [
        "Minimum Spanning Tree (MST): A subgraph that connects all vertices with the least total edge weight and no cycles.",
        "Simple Graph: No self-loops or multiple edges between the same pair of vertices.",
        "Directed Acyclic Graph (DAG): A directed graph without any cycles.",
        "Weighted Graph: A graph where edges carry a numeric weight (like distance or cost).",
        "Complete Graph: Every vertex is directly connected to every other vertex.",
        "Connected Graph: In an undirected graph, every vertex can be reached from any other."
      ]
    }
  ]
  