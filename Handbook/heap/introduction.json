[
    {
      "type": "h4",
      "text": "What is a Heap?"
    },
    {
      "type": "p5",
      "text": "A Heap is a special type of complete binary tree used to store data in a specific order. It is mainly used to quickly access the smallest or largest element in a dataset."
    },
    {
      "type": "img",
      "text": "https://picsum.photos/seed/heap/300/200",
      "style": "w-33 h-9"
    },
    {
      "type": "h5",
      "text": "Types of Heaps"
    },
    {
      "type": "ul",
      "text": [
        "Min Heap: The smallest element is at the root. Every parent node is smaller than its children.",
        "Max Heap: The largest element is at the root. Every parent node is larger than its children."
      ]
    },
    {
      "type": "p5",
      "text": "In both cases, the heap is a complete binary tree â€” meaning all levels are filled except possibly the last, and the last level has all nodes as far left as possible."
    },
    {
      "type": "h5",
      "text": "Why Use a Heap?"
    },
    {
      "type": "ul",
      "text": [
        "To quickly find the minimum or maximum value.",
        "Efficient priority queue implementation.",
        "Used in algorithms like Heap Sort and Dijkstraâ€™s shortest path."
      ]
    },
    {
      "type": "h5",
      "text": "Basic Heap Operations"
    },
    {
      "type": "ul",
      "text": [
        "Insert: Add a new element and restore heap property (bubble up).",
        "Delete: Remove the root element and restore heap property (bubble down or heapify).",
        "Peek: Return the root element without removing it."
      ]
    },
    {
      "type": "h5",
      "text": "Insert Operation (in Min Heap)"
    },
    {
      "type": "code",
      "text": {
        "lang": "pseudo",
        "code": "function insert(heap, value):\n  add value to the end of heap\n  current = index of value\n  while current > 0 and heap[current] < heap[parent(current)]:\n    swap heap[current] with heap[parent(current)]\n    current = parent(current)"
      }
    },
    {
      "type": "h5",
      "text": "Delete Root Operation (in Min Heap)"
    },
    {
      "type": "code",
      "text": {
        "lang": "pseudo",
        "code": "function deleteRoot(heap):\n  replace root with last element\n  remove last element\n  heapify from the root to restore heap order"
      }
    },
    {
      "type": "h5",
      "text": "Common Uses of Heap in Programming"
    },
    {
      "type": "ul",
      "text": [
        "Priority Queue implementation (e.g., task schedulers).",
        "Heap Sort algorithm for efficient sorting.",
        "Dijkstra's Algorithm for shortest paths in graphs.",
        "Finding K largest/smallest elements in a dataset."
      ]
    }
  ]
  