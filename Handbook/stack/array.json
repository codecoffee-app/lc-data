[
    {
      "type": "h4",
      "text": "Implementing Stack Using Array"
    },
    {
      "type": "p5",
      "text": "Before we can perform operations on a stack, we need to set up the environment. A stack can be implemented using a simple array with a fixed size and a variable to keep track of the top element."
    },
    {
      "type": "ol",
      "text": [
        "Define a fixed size for the stack, e.g., SIZE = 100.",
        "Create an array of that size: 'stack[SIZE]'.",
        "Initialize a variable 'top = -1' to represent an empty stack."
      ]
    },
    {
      "type": "h5",
      "text": "Push Operation"
    },
    {
      "type": "p5",
      "text": "This operation inserts an element at the top of the stack."
    },
    {
      "type": "ul",
      "text": [
        "Check if the stack is full by verifying if 'top == SIZE - 1'.",
        "If full, display an overflow message and stop the operation.",
        "If not full, increment 'top' and assign the new value to 'stack[top]'."
      ]
    },
    {
      "type": "code",
      "text": {
        "lang": "pseudo",
        "code": "function push(value):\n    if top == SIZE - 1:\n        print \"Overflow! Stack is full.\"\n    else:\n        top = top + 1\n        stack[top] = value\n        print \"Pushed successfully.\""
      }
    },
    {
      "type": "h5",
      "text": "Pop Operation"
    },
    {
      "type": "p5",
      "text": "This operation removes the topmost element from the stack."
    },
    {
      "type": "ul",
      "text": [
        "Check if the stack is empty ('top == -1').",
        "If it is empty, print an underflow message.",
        "Otherwise, print the element to be removed and decrement 'top'."
      ]
    },
    {
      "type": "code",
      "text": {
        "lang": "pseudo",
        "code": "function pop():\n    if top == -1:\n        print \"Underflow! Stack is empty.\"\n    else:\n        print \"Popped: \" + stack[top]\n        top = top - 1"
      }
    },
    {
      "type": "h5",
      "text": "Display Operation"
    },
    {
      "type": "p5",
      "text": "This operation prints all the current elements of the stack starting from the top."
    },
    {
      "type": "code",
      "text": {
        "lang": "pseudo",
        "code": "function display():\n    if top == -1:\n        print \"Stack is empty.\"\n    else:\n        print \"Stack elements are:\"\n        for i = top to 0:\n            print stack[i]"
      }
    },
    {
      "type": "h5",
      "text": "Stack Menu (Driver Pseudo Code)"
    },
    {
      "type": "p5",
      "text": "You can interact with the stack using a simple menu system. This allows you to push, pop, display, or exit."
    },
    {
      "type": "code",
      "text": {
        "lang": "pseudo",
        "code": "function main():\n    while true:\n        print \"1. Push\\n2. Pop\\n3. Display\\n4. Exit\"\n        choice = input(\"Enter your choice: \")\n\n        if choice == 1:\n            value = input(\"Enter value to push: \")\n            push(value)\n        elif choice == 2:\n            pop()\n        elif choice == 3:\n            display()\n        elif choice == 4:\n            break\n        else:\n            print \"Invalid choice. Please try again.\""
      }
    }
  ]
  