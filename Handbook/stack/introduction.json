[
    {
      "type": "h4",
      "text": "What is a Stack?"
    },
    {
      "type": "p5",
      "text": "A stack is a linear data structure that follows the Last In, First Out (LIFO) principle. This means that the last item added to the stack will be the first one to be removed."
    },
    {
      "type": "img",
      "text": "https://codecoffee-app.github.io/lc-data/handbook-images/stack/introduction/1.webp",
      "style": "w-20 h-20"
    },
    {
      "type": "p5",
      "text": "Think of a stack like a pile of plates: you add plates to the top and also remove them from the top. You canâ€™t remove a plate from the middle or bottom without taking the top ones off first."
    },
    {
      "type": "h5",
      "text": "Real-Life Programming Uses"
    },
    {
      "type": "ul",
      "text": [
        "Undo/Redo functionality in text editors: Each change is pushed onto a stack. When you hit UNDO, the last change is popped out.",
        "Parentheses checker: Every opening parenthesis is pushed to the stack, and each closing one pops from it to validate the expression.",
        "Expression evaluation: Stacks help convert and compute expressions in prefix and postfix notations efficiently."
      ]
    },
    {
      "type": "h5",
      "text": "Stack Operations"
    },
    {
      "type": "ol",
      "text": [
        "Push: Add an element to the top of the stack.",
        "Pop: Remove the top element from the stack.",
        "Peek (or Top): View the top element without removing it."
      ]
    },
    {
      "type": "code",
      "text": {
        "lang": "pseudo",
        "code": "function push(stack, value):\n    top = top + 1\n    stack[top] = value\n\nfunction pop(stack):\n    if top == -1:\n        print \"Stack Underflow\"\n    else:\n        top = top - 1\n\nfunction peek(stack):\n    if top != -1:\n        return stack[top]"
      }
    },
    {
      "type": "h5",
      "text": "Time and Space Complexity"
    },
    {
      "type": "ul",
      "text": [
        "Access: O(n)",
        "Search: O(n)",
        "Insertion (Push): O(1)",
        "Deletion (Pop): O(1)",
        "Space: O(n)"
      ]
    },
    {
      "type": "h5",
      "text": "Stack Characteristics"
    },
    {
      "type": "ul",
      "text": [
        "Follows LIFO (Last In, First Out) principle.",
        "A pointer (often called 'top') tracks the topmost element.",
        "Only the top element can be accessed directly."
      ]
    }
  ]
  