[
    {
      "type": "h4",
      "text": "What is a Binary Search Tree?"
    },
    {
      "type": "p5",
      "text": "A Binary Search Tree (BST) is a type of binary tree that follows the binary search property. In this tree, for every node, the left subtree contains only nodes with values smaller than the node, and the right subtree contains only nodes with values greater than the node."
    },
    {
      "type": "h5",
      "text": "Operations in Binary Search Tree"
    },
    {
      "type": "h5",
      "text": "Searching"
    },
    {
      "type": "ul",
      "text": [
        "Start by checking the root node. If the tree is empty, the key you’re looking for doesn’t exist.",
        "If the key matches the root’s value, the search is successful and the node is returned.",
        "If the key is smaller than the root’s value, move to the left subtree. If it’s greater, move to the right subtree.",
        "Repeat this process until the key is found or the subtree is null.",
        "If the subtree becomes null and the key hasn’t been found, it means the key isn’t in the tree."
      ]
    },
    {
      "type": "h5",
      "text": "Insertion"
    },
    {
      "type": "ul",
      "text": [
        "Compare the key to the root’s value.",
        "If the key is smaller, move to the left child, and if it’s greater, move to the right child.",
        "Continue this process until you find an empty spot (a leaf node). Insert the new node there."
      ]
    },
    {
      "type": "h5",
      "text": "Deletion"
    },
    {
      "type": "ul",
      "text": [
        "Deleting a node with no children: Simply remove the node from the tree.",
        "Deleting a node with one child: Remove the node and replace it with its child.",
        "Deleting a node with two children: Find the in-order successor, copy its content to the node to be deleted, and then remove the in-order successor."
      ]
    }
  ]
  