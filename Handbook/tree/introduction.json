[
    {
      "type": "h4",
      "text": "What is a Tree?"
    },
    {
      "type": "p5",
      "text": "A tree is a fundamental data structure that represents a hierarchical structure. It has a root node and a set of linked nodes organized as subtrees. Each node can have children, and you can traverse the tree to reach a specific node by following the links."
    },
    {
      "type": "img",
      "text": "https://picsum.photos/300/200",
      "style": "w-33 h-9"
    },
    {
      "type": "h5",
      "text": "Advantages of Trees"
    },
    {
      "type": "ul",
      "text": [
        "Trees (with certain properties, such as in a Binary Search Tree) allow for faster access and search operations compared to linked lists.",
        "They also provide quicker insertion and deletion speeds when compared to arrays."
      ]
    },
    {
      "type": "h5",
      "text": "Uses of Trees in Programming"
    },
    {
      "type": "ul",
      "text": [
        "File System Structure: Trees efficiently represent directories and subdirectories in a file system.",
        "DOM Structure: HTML pages are structured using the Document Object Model (DOM), which organizes all the elements as a tree.",
        "Routing Algorithms: Trees are utilized in algorithms to determine efficient paths for data transmission in networks."
      ]
    },
    {
      "type": "h5",
      "text": "Key Terminology in Trees"
    },
    {
      "type": "ul",
      "text": [
        "Root Node: The starting point of the tree, where all other nodes descend from.",
        "Parent Node: A node that has one or more child nodes.",
        "Child Node: A node that is a descendant of another node, with any parent node having multiple child nodes.",
        "Siblings: Nodes that share the same parent node.",
        "Leaf Node: A node that has no children, also known as a terminal or external node.",
        "Internal Node: A node that has at least one child.",
        "External Node: A node that has no children, synonymous with a leaf node.",
        "Degree: The number of children a node has. The degree of the tree is the highest degree of any node in the tree.",
        "Level: The level of a node is the number of steps from the root to that node.",
        "Height: The longest path from a node to any of its leaf nodes, measured in edges.",
        "Depth: The number of edges from the root node to a particular node.",
        "Path: The sequence of nodes and edges between two nodes in the tree."
      ]
    }
  ]
  