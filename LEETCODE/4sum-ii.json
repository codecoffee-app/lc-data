{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "454",
            "title": "4Sum II",
            "titleSlug": "4sum-ii",
            "content": "<p>Given four integer arrays <code>nums1</code>, <code>nums2</code>, <code>nums3</code>, and <code>nums4</code> all of length <code>n</code>, return the number of tuples <code>(i, j, k, l)</code> such that:</p>\n\n<ul>\n\t<li><code>0 &lt;= i, j, k, l &lt; n</code></li>\n\t<li><code>nums1[i] + nums2[j] + nums3[k] + nums4[l] == 0</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [1,2], nums2 = [-2,-1], nums3 = [-1,2], nums4 = [0,2]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong>\nThe two tuples are:\n1. (0, 0, 0, 1) -&gt; nums1[0] + nums2[0] + nums3[0] + nums4[1] = 1 + (-2) + (-1) + 2 = 0\n2. (1, 1, 0, 0) -&gt; nums1[1] + nums2[1] + nums3[0] + nums4[0] = 2 + (-1) + (-1) + 0 = 0\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [0], nums2 = [0], nums3 = [0], nums4 = [0]\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == nums1.length</code></li>\n\t<li><code>n == nums2.length</code></li>\n\t<li><code>n == nums3.length</code></li>\n\t<li><code>n == nums4.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 200</code></li>\n\t<li><code>-2<sup>28</sup> &lt;= nums1[i], nums2[i], nums3[i], nums4[i] &lt;= 2<sup>28</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 4830,
            "dislikes": 138,
            "similarQuestions": "[{\"title\": \"4Sum\", \"titleSlug\": \"4sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                }
            ],
            "stats": "{\"totalAccepted\": \"313.7K\", \"totalSubmission\": \"548.7K\", \"totalAcceptedRaw\": 313710, \"totalSubmissionRaw\": 548718, \"acRate\": \"57.2%\"}",
            "hints": [],
            "rephrased": {
                "body": "Given four integer arrays `nums1`, `nums2`, `nums3`, and `nums4` all of length `n`, determine the number of tuples `(i, j, k, l)` such that:\n\n*   `0 <= i, j, k, l < n`\n*   `nums1[i] + nums2[j] + nums3[k] + nums4[l] == 0`",
                "constraints": [
                    "`n == nums1.length`",
                    "`n == nums2.length`",
                    "`n == nums3.length`",
                    "`n == nums4.length`",
                    "`1 <= n <= 200`",
                    "`-2<sup>28</sup> <= nums1[i], nums2[i], nums3[i], nums4[i] <= 2<sup>28</sup>`"
                ],
                "testcases": [
                    {
                        "input": "nums1 = [1,2], nums2 = [-2,-1], nums3 = [-1,2], nums4 = [0,2]",
                        "output": "2",
                        "explanation": "The tuples that satisfy the condition are:\n\n1.  (0, 0, 0, 1): 1 + (-2) + (-1) + 2 = 0\n2.  (1, 1, 0, 0): 2 + (-1) + (-1) + 0 = 0"
                    },
                    {
                        "input": "nums1 = [0], nums2 = [0], nums3 = [0], nums4 = [0]",
                        "output": "1",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "4sum",
                "title": "4Sum",
                "isPaidOnly": false
            }
        ],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int fourSumCount(vector<int>& nums1, vector<int>& nums2, vector<int>& nums3,\n                   vector<int>& nums4) {\n    int ans = 0;\n    unordered_map<int, int> count;\n\n    for (const int a : nums1)\n      for (const int b : nums2)\n        ++count[a + b];\n\n    for (const int c : nums3)\n      for (const int d : nums4)\n        if (const auto it = count.find(-c - d); it != count.cend())\n          ans += it->second;\n\n    return ans;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int fourSumCount(int[] nums1, int[] nums2, int[] nums3, int[] nums4) {\n    int ans = 0;\n    Map<Integer, Integer> count = new HashMap<>();\n\n    for (final int a : nums1)\n      for (final int b : nums2)\n        count.merge(a + b, 1, Integer::sum);\n\n    for (final int c : nums3)\n      for (final int d : nums4)\n        if (count.containsKey(-c - d))\n          ans += count.get(-c - d);\n\n    return ans;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def fourSumCount(self, nums1: List[int], nums2: List[int],\n                   nums3: List[int], nums4: List[int]) -> int:\n    count = collections.Counter(a + b for a in nums1 for b in nums2)\n    return sum(count[-c - d] for c in nums3 for d in nums4)\n",
                "lang_text": "py"
            }
        }
    }
}