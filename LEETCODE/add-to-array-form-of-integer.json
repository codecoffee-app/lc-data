{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "989",
            "title": "Add to Array-Form of Integer",
            "titleSlug": "add-to-array-form-of-integer",
            "content": "<p>The <strong>array-form</strong> of an integer <code>num</code> is an array representing its digits in left to right order.</p>\n\n<ul>\n\t<li>For example, for <code>num = 1321</code>, the array form is <code>[1,3,2,1]</code>.</li>\n</ul>\n\n<p>Given <code>num</code>, the <strong>array-form</strong> of an integer, and an integer <code>k</code>, return <em>the <strong>array-form</strong> of the integer</em> <code>num + k</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = [1,2,0,0], k = 34\n<strong>Output:</strong> [1,2,3,4]\n<strong>Explanation:</strong> 1200 + 34 = 1234\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = [2,7,4], k = 181\n<strong>Output:</strong> [4,5,5]\n<strong>Explanation:</strong> 274 + 181 = 455\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = [2,1,5], k = 806\n<strong>Output:</strong> [1,0,2,1]\n<strong>Explanation:</strong> 215 + 806 = 1021\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= num.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= num[i] &lt;= 9</code></li>\n\t<li><code>num</code> does not contain any leading zeros except for the zero itself.</li>\n\t<li><code>1 &lt;= k &lt;= 10<sup>4</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 3343,
            "dislikes": 272,
            "similarQuestions": "[{\"title\": \"Add Two Numbers\", \"titleSlug\": \"add-two-numbers\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Plus One\", \"titleSlug\": \"plus-one\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Add Binary\", \"titleSlug\": \"add-binary\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Add Strings\", \"titleSlug\": \"add-strings\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "stats": "{\"totalAccepted\": \"246.4K\", \"totalSubmission\": \"537.1K\", \"totalAcceptedRaw\": 246405, \"totalSubmissionRaw\": 537144, \"acRate\": \"45.9%\"}",
            "hints": [],
            "rephrased": {
                "body": "Given an array `num` representing the digits of an integer in array form (left to right order), and an integer `k`, return the array-form of the integer `num + k`. The array-form of an integer represents its digits in left-to-right order.",
                "constraints": [
                    "1 <= num.length <= 10^4",
                    "0 <= num[i] <= 9",
                    "num does not contain any leading zeros except for the zero itself.",
                    "1 <= k <= 10^4"
                ],
                "testcases": [
                    {
                        "input": "num = [1,2,0,0], k = 34",
                        "output": "[1,2,3,4]",
                        "explanation": "1200 + 34 = 1234. The resulting array form is [1,2,3,4]."
                    },
                    {
                        "input": "num = [2,7,4], k = 181",
                        "output": "[4,5,5]",
                        "explanation": "274 + 181 = 455. The resulting array form is [4,5,5]."
                    },
                    {
                        "input": "num = [2,1,5], k = 806",
                        "output": "[1,0,2,1]",
                        "explanation": "215 + 806 = 1021. The resulting array form is [1,0,2,1]."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "add-two-numbers",
                "title": "Add Two Numbers",
                "isPaidOnly": false
            },
            {
                "difficulty": "Easy",
                "titleSlug": "plus-one",
                "title": "Plus One",
                "isPaidOnly": false
            },
            {
                "difficulty": "Easy",
                "titleSlug": "add-binary",
                "title": "Add Binary",
                "isPaidOnly": false
            },
            {
                "difficulty": "Easy",
                "titleSlug": "add-strings",
                "title": "Add Strings",
                "isPaidOnly": false
            }
        ],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  vector<int> addToArrayForm(vector<int>& num, int k) {\n    for (int i = num.size() - 1; i >= 0; --i) {\n      num[i] += k;\n      k = num[i] / 10;\n      num[i] %= 10;\n    }\n\n    while (k > 0) {\n      num.insert(num.begin(), k % 10);\n      k /= 10;\n    }\n\n    return num;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public List<Integer> addToArrayForm(int[] num, int k) {\n    List<Integer> ans = new LinkedList<>();\n\n    for (int i = num.length - 1; i >= 0; --i) {\n      ans.add(0, (num[i] + k) % 10);\n      k = (num[i] + k) / 10;\n    }\n\n    while (k > 0) {\n      ans.add(0, k % 10);\n      k /= 10;\n    }\n\n    return ans;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def addToArrayForm(self, num: List[int], k: int) -> List[int]:\n    for i in reversed(range(len(num))):\n      k, num[i] = divmod(num[i] + k, 10)\n\n    while k > 0:\n      num = [k % 10] + num\n      k //= 10\n\n    return num\n",
                "lang_text": "py"
            }
        }
    }
}