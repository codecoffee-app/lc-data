{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1344",
            "title": "Angle Between Hands of a Clock",
            "titleSlug": "angle-between-hands-of-a-clock",
            "content": "<p>Given two numbers, <code>hour</code> and <code>minutes</code>, return <em>the smaller angle (in degrees) formed between the </em><code>hour</code><em> and the </em><code>minute</code><em> hand</em>.</p>\n\n<p>Answers within <code>10<sup>-5</sup></code> of the actual value will be accepted as correct.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/12/26/sample_1_1673.png\" style=\"width: 300px; height: 296px;\" />\n<pre>\n<strong>Input:</strong> hour = 12, minutes = 30\n<strong>Output:</strong> 165\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/12/26/sample_2_1673.png\" style=\"width: 300px; height: 301px;\" />\n<pre>\n<strong>Input:</strong> hour = 3, minutes = 30\n<strong>Output:</strong> 75\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/12/26/sample_3_1673.png\" style=\"width: 300px; height: 301px;\" />\n<pre>\n<strong>Input:</strong> hour = 3, minutes = 15\n<strong>Output:</strong> 7.5\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= hour &lt;= 12</code></li>\n\t<li><code>0 &lt;= minutes &lt;= 59</code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 1284,
            "dislikes": 237,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "stats": "{\"totalAccepted\": \"115.9K\", \"totalSubmission\": \"182.3K\", \"totalAcceptedRaw\": 115886, \"totalSubmissionRaw\": 182256, \"acRate\": \"63.6%\"}",
            "hints": [
                "The tricky part is determining how the minute hand affects the position of the hour hand.",
                "Calculate the angles separately then find the difference."
            ],
            "rephrased": {
                "body": "Given an hour (1-12) and minutes (0-59), determine the smaller angle in degrees formed between the hour and minute hands on an analog clock. The answer should be within 10<sup>-5</sup> of the actual value.",
                "constraints": [
                    "1 <= hour <= 12",
                    "0 <= minutes <= 59"
                ],
                "testcases": [
                    {
                        "input": "hour = 12, minutes = 30",
                        "output": "165",
                        "explanation": null
                    },
                    {
                        "input": "hour = 3, minutes = 30",
                        "output": "75",
                        "explanation": null
                    },
                    {
                        "input": "hour = 3, minutes = 15",
                        "output": "7.5",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "The tricky part is determining how the minute hand affects the position of the hour hand.",
            "Calculate the angles separately then find the difference."
        ],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  double angleClock(int hour, int minutes) {\n    const double hourHand = (hour % 12 + minutes / 60.0) * 30;\n    const double minuteHand = minutes * 6;\n    const double diff = abs(hourHand - minuteHand);\n    return min(diff, 360 - diff);\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public double angleClock(int hour, int minutes) {\n    final double hourHand = (hour % 12 + minutes / 60.0) * 30;\n    final double minuteHand = minutes * 6;\n    final double diff = Math.abs(hourHand - minuteHand);\n    return Math.min(diff, 360 - diff);\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def angleClock(self, hour: int, minutes: int) -> float:\n    hourAngle = (hour % 12) * 30 + minutes * 0.5\n    minuteAngle = minutes * 6\n    ans = abs(hourAngle - minuteAngle)\n\n    return min(ans, 360 - ans)\n",
                "lang_text": "py"
            }
        }
    }
}