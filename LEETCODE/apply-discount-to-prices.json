{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2288",
            "title": "Apply Discount to Prices",
            "titleSlug": "apply-discount-to-prices",
            "content": "<p>A <strong>sentence</strong> is a string of single-space separated words where each word can contain digits, lowercase letters, and the dollar sign <code>&#39;$&#39;</code>. A word represents a <strong>price</strong> if it is a sequence of digits preceded by a dollar sign.</p>\n\n<ul>\n\t<li>For example, <code>&quot;$100&quot;</code>, <code>&quot;$23&quot;</code>, and <code>&quot;$6&quot;</code> represent prices while <code>&quot;100&quot;</code>, <code>&quot;$&quot;</code>, and <code>&quot;$1e5&quot;</code> do not.</li>\n</ul>\n\n<p>You are given a string <code>sentence</code> representing a sentence and an integer <code>discount</code>. For each word representing a price, apply a discount of <code>discount%</code> on the price and <strong>update</strong> the word in the sentence. All updated prices should be represented with <strong>exactly two</strong> decimal places.</p>\n\n<p>Return <em>a string representing the modified sentence</em>.</p>\n\n<p>Note that all prices will contain <strong>at most</strong> <code>10</code> digits.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> sentence = &quot;there are $1 $2 and 5$ candies in the shop&quot;, discount = 50\n<strong>Output:</strong> &quot;there are $0.50 $1.00 and 5$ candies in the shop&quot;\n<strong>Explanation:</strong> \nThe words which represent prices are &quot;$1&quot; and &quot;$2&quot;. \n- A 50% discount on &quot;$1&quot; yields &quot;$0.50&quot;, so &quot;$1&quot; is replaced by &quot;$0.50&quot;.\n- A 50% discount on &quot;$2&quot; yields &quot;$1&quot;. Since we need to have exactly 2 decimal places after a price, we replace &quot;$2&quot; with &quot;$1.00&quot;.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> sentence = &quot;1 2 $3 4 $5 $6 7 8$ $9 $10$&quot;, discount = 100\n<strong>Output:</strong> &quot;1 2 $0.00 4 $0.00 $0.00 7 8$ $0.00 $10$&quot;\n<strong>Explanation:</strong> \nApplying a 100% discount on any price will result in 0.\nThe words representing prices are &quot;$3&quot;, &quot;$5&quot;, &quot;$6&quot;, and &quot;$9&quot;.\nEach of them is replaced by &quot;$0.00&quot;.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= sentence.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>sentence</code> consists of lowercase English letters, digits, <code>&#39; &#39;</code>, and <code>&#39;$&#39;</code>.</li>\n\t<li><code>sentence</code> does not have leading or trailing spaces.</li>\n\t<li>All words in <code>sentence</code> are separated by a single space.</li>\n\t<li>All prices will be <strong>positive</strong> numbers without leading zeros.</li>\n\t<li>All prices will have <strong>at most</strong> <code>10</code> digits.</li>\n\t<li><code>0 &lt;= discount &lt;= 100</code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 176,
            "dislikes": 1070,
            "similarQuestions": "[{\"title\": \"Multiply Strings\", \"titleSlug\": \"multiply-strings\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Apply Discount Every n Orders\", \"titleSlug\": \"apply-discount-every-n-orders\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "stats": "{\"totalAccepted\": \"19.6K\", \"totalSubmission\": \"68.1K\", \"totalAcceptedRaw\": 19643, \"totalSubmissionRaw\": 68140, \"acRate\": \"28.8%\"}",
            "hints": [
                "Extract each word from the sentence and check if it represents a price.",
                "For each price, apply the given discount to it and update it."
            ],
            "rephrased": {
                "body": "Given a sentence consisting of space-separated words, where each word can contain digits, lowercase letters, and the dollar sign '$', identify words representing prices. A price is defined as a sequence of digits preceded by a '$' sign (e.g., '$100', '$23', '$6'). Apply a given discount percentage to each identified price and update the word in the sentence. Ensure all updated prices are formatted with exactly two decimal places. Return the modified sentence.",
                "constraints": [
                    "1 <= sentence.length <= 10^5",
                    "sentence consists of lowercase English letters, digits, ' ', and '$'.",
                    "sentence does not have leading or trailing spaces.",
                    "All words in sentence are separated by a single space.",
                    "All prices will be positive numbers without leading zeros.",
                    "All prices will have at most 10 digits.",
                    "0 <= discount <= 100"
                ],
                "testcases": [
                    {
                        "input": {
                            "sentence": "there are $1 $2 and 5$ candies in the shop",
                            "discount": 50
                        },
                        "output": "there are $0.50 $1.00 and 5$ candies in the shop",
                        "explanation": "The words '$1' and '$2' represent prices. Applying a 50% discount on '$1' yields '$0.50'. Applying a 50% discount on '$2' yields '$1.00'.  The updated sentence reflects these discounted prices, formatted to two decimal places."
                    },
                    {
                        "input": {
                            "sentence": "1 2 $3 4 $5 $6 7 8$ $9 $10$",
                            "discount": 100
                        },
                        "output": "1 2 $0.00 4 $0.00 $0.00 7 8$ $0.00 $10$",
                        "explanation": "The words '$3', '$5', '$6', and '$9' represent prices. Applying a 100% discount results in 0 for each. The updated sentence shows these prices as '$0.00'."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "multiply-strings",
                "title": "Multiply Strings",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "apply-discount-every-n-orders",
                "title": "Apply Discount Every n Orders",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "Extract each word from the sentence and check if it represents a price.",
            "For each price, apply the given discount to it and update it."
        ],
        "relatedTopics": [
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  string discountPrices(string sentence, int discount) {\n    constexpr int kPrecision = 2;\n    string ans;\n    istringstream iss(sentence);\n\n    for (string word; iss >> word;)\n      if (word[0] == '$' && word.length() > 1) {\n        const string digits = word.substr(1);\n        if (all_of(digits.begin(), digits.end(),\n                   [](const char digit) { return isdigit(digit); })) {\n          const double val = stold(digits) * (100 - discount) / 100;\n          const string s = to_string(val);\n          const string trimmed = s.substr(0, s.find(\".\") + kPrecision + 1);\n          ans += \"$\" + trimmed + \" \";\n        } else {\n          ans += word + \" \";\n        }\n      } else {\n        ans += word + \" \";\n      }\n\n    ans.pop_back();\n    return ans;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public String discountPrices(String sentence, int discount) {\n    final int kPrecision = 2;\n    StringBuilder sb = new StringBuilder();\n\n    for (final String word : sentence.split(\" \"))\n      if (word.charAt(0) == '$' && word.length() > 1) {\n        final String digits = word.substring(1);\n        if (digits.chars().allMatch(c -> Character.isDigit(c))) {\n          final double val = Double.parseDouble(digits) * (100 - discount) / 100;\n          final String s = String.format(\"%.2f\", val);\n          final String trimmed = s.substring(0, s.indexOf(\".\") + kPrecision + 1);\n          sb.append(\"$\").append(trimmed).append(\" \");\n        } else {\n          sb.append(word).append(\" \");\n        }\n      } else {\n        sb.append(word).append(\" \");\n      }\n\n    sb.deleteCharAt(sb.length() - 1);\n    return sb.toString();\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def discountPrices(self, sentence: str, discount: int) -> str:\n    kPrecision = 2\n    ans = []\n\n    for word in sentence.split():\n      if word[0] == '$' and len(word) > 1:\n        digits = word[1:]\n        if all(digit.isdigit() for digit in digits):\n          val = float(digits) * (100 - discount) / 100\n          s = f'{val:.2f}'\n          trimmed = s[:s.index('.') + kPrecision + 1]\n          ans.append('$' + trimmed)\n        else:\n          ans.append(word)\n      else:\n        ans.append(word)\n\n    return ' '.join(ans)\n",
                "lang_text": "py"
            }
        }
    }
}