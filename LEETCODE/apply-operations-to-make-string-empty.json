{
    "failed": false,
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "3039",
            "title": "Apply Operations to Make String Empty",
            "titleSlug": "apply-operations-to-make-string-empty",
            "content": "<p>You are given a string <code>s</code>.</p>\n\n<p>Consider performing the following operation until <code>s</code> becomes <strong>empty</strong>:</p>\n\n<ul>\n\t<li>For <strong>every</strong> alphabet character from <code>&#39;a&#39;</code> to <code>&#39;z&#39;</code>, remove the <strong>first</strong> occurrence of that character in <code>s</code> (if it exists).</li>\n</ul>\n\n<p>For example, let initially <code>s = &quot;aabcbbca&quot;</code>. We do the following operations:</p>\n\n<ul>\n\t<li>Remove the underlined characters <code>s = &quot;<u><strong>a</strong></u>a<strong><u>bc</u></strong>bbca&quot;</code>. The resulting string is <code>s = &quot;abbca&quot;</code>.</li>\n\t<li>Remove the underlined characters <code>s = &quot;<u><strong>ab</strong></u>b<u><strong>c</strong></u>a&quot;</code>. The resulting string is <code>s = &quot;ba&quot;</code>.</li>\n\t<li>Remove the underlined characters <code>s = &quot;<u><strong>ba</strong></u>&quot;</code>. The resulting string is <code>s = &quot;&quot;</code>.</li>\n</ul>\n\n<p>Return <em>the value of the string </em><code>s</code><em> right <strong>before</strong> applying the <strong>last</strong> operation</em>. In the example above, answer is <code>&quot;ba&quot;</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;aabcbbca&quot;\n<strong>Output:</strong> &quot;ba&quot;\n<strong>Explanation:</strong> Explained in the statement.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;abcd&quot;\n<strong>Output:</strong> &quot;abcd&quot;\n<strong>Explanation:</strong> We do the following operation:\n- Remove the underlined characters s = &quot;<u><strong>abcd</strong></u>&quot;. The resulting string is s = &quot;&quot;.\nThe string just before the last operation is &quot;abcd&quot;.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 5 * 10<sup>5</sup></code></li>\n\t<li><code>s</code> consists only of lowercase English letters.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 124,
            "dislikes": 5,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "stats": "{\"totalAccepted\": \"24.9K\", \"totalSubmission\": \"44K\", \"totalAcceptedRaw\": 24864, \"totalSubmissionRaw\": 43952, \"acRate\": \"56.6%\"}",
            "hints": [
                "Before the last operation, only the most frequent characters in the original string will remain.",
                "Keep only the last occurence of each of the most frequent characters."
            ],
            "rephrased": {
                "body": "Given a string `s` consisting of lowercase English letters, perform the following operation repeatedly until `s` becomes empty:\n\nFor each alphabet character from 'a' to 'z', remove the first occurrence of that character in `s` (if it exists).\n\nReturn the value of the string `s` right before applying the last operation.",
                "constraints": [
                    "1 <= s.length <= 5 * 10^5",
                    "s consists only of lowercase English letters."
                ],
                "testcases": [
                    {
                        "input": "aabcbbca",
                        "output": "ba",
                        "explanation": "Initially, s = \"aabcbbca\".\n1. Remove the first occurrence of each letter: \"aabcbbca\" becomes \"abbca\".\n2. Remove the first occurrence of each letter: \"abbca\" becomes \"ba\".\n3. Remove the first occurrence of each letter: \"ba\" becomes \"\".\nThe string before the last operation was \"ba\"."
                    },
                    {
                        "input": "abcd",
                        "output": "abcd",
                        "explanation": "Initially, s = \"abcd\".\n1. Remove the first occurrence of each letter: \"abcd\" becomes \"\".\nThe string before the last operation was \"abcd\"."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "Before the last operation, only the most frequent characters in the original string will remain.",
            "Keep only the last occurence of each of the most frequent characters."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ]
    }
}