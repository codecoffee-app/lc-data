{
    "failed": false,
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2968",
            "title": "Apply Operations to Maximize Frequency Score",
            "titleSlug": "apply-operations-to-maximize-frequency-score",
            "content": "<p>You are given a <strong>0-indexed</strong> integer array <code>nums</code> and an integer <code>k</code>.</p>\n\n<p>You can perform the following operation on the array <strong>at most</strong> <code>k</code> times:</p>\n\n<ul>\n\t<li>Choose any index <code>i</code> from the array and <strong>increase</strong> or <strong>decrease</strong> <code>nums[i]</code> by <code>1</code>.</li>\n</ul>\n\n<p>The score of the final array is the <strong>frequency</strong> of the most frequent element in the array.</p>\n\n<p>Return <em>the <strong>maximum</strong> score you can achieve</em>.</p>\n\n<p>The frequency of an element is the number of occurences of that element in the array.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,6,4], k = 3\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> We can do the following operations on the array:\n- Choose i = 0, and increase the value of nums[0] by 1. The resulting array is [2,2,6,4].\n- Choose i = 3, and decrease the value of nums[3] by 1. The resulting array is [2,2,6,3].\n- Choose i = 3, and decrease the value of nums[3] by 1. The resulting array is [2,2,6,2].\nThe element 2 is the most frequent in the final array so our score is 3.\nIt can be shown that we cannot achieve a better score.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,4,4,2,4], k = 0\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> We cannot apply any operations so our score will be the frequency of the most frequent element in the original array, which is 3.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n\t<li><code>0 &lt;= k &lt;= 10<sup>14</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 227,
            "dislikes": 5,
            "similarQuestions": "[{\"title\": \"Frequency of the Most Frequent Element\", \"titleSlug\": \"frequency-of-the-most-frequent-element\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "stats": "{\"totalAccepted\": \"6K\", \"totalSubmission\": \"15.3K\", \"totalAcceptedRaw\": 5989, \"totalSubmissionRaw\": 15320, \"acRate\": \"39.1%\"}",
            "hints": [
                "If you sort the original array, it is optimal to apply the operations on one subarray such that all the elements of that subarray become equal.",
                "You can use binary search to find the longest subarray where we can make the elements equal in at most <code>k</code> operations."
            ],
            "rephrased": {
                "body": "Given a 0-indexed integer array `nums` and an integer `k`, you can perform the following operation on the array at most `k` times:\n\nChoose any index `i` from the array and increase or decrease `nums[i]` by 1.\n\nThe score of the final array is the frequency of the most frequent element in the array.  Return the maximum score you can achieve.",
                "constraints": [
                    "1 <= nums.length <= 10^5",
                    "1 <= nums[i] <= 10^9",
                    "0 <= k <= 10^14"
                ],
                "testcases": [
                    {
                        "input": "nums = [1,2,6,4], k = 3",
                        "output": "3",
                        "explanation": "We can perform the following operations:\n- Increase nums[0] by 1: nums = [2,2,6,4]\n- Decrease nums[3] by 1: nums = [2,2,6,3]\n- Decrease nums[3] by 1: nums = [2,2,6,2]\nThe element 2 appears 3 times, which is the maximum possible frequency achievable within the limit of k=3 operations."
                    },
                    {
                        "input": "nums = [1,4,4,2,4], k = 0",
                        "output": "3",
                        "explanation": "Since k = 0, we cannot perform any operations. The most frequent element in the original array is 4, which appears 3 times. Therefore, the maximum score is 3."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "frequency-of-the-most-frequent-element",
                "title": "Frequency of the Most Frequent Element",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "If you sort the original array, it is optimal to apply the operations on one subarray such that all the elements of that subarray become equal.",
            "You can use binary search to find the longest subarray where we can make the elements equal in at most <code>k</code> operations."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ]
    }
}