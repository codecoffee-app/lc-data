{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "455",
            "title": "Assign Cookies",
            "titleSlug": "assign-cookies",
            "content": "<p>Assume you are an awesome parent and want to give your children some cookies. But, you should give each child at most one cookie.</p>\n\n<p>Each child <code>i</code> has a greed factor <code>g[i]</code>, which is the minimum size of a cookie that the child will be content with; and each cookie <code>j</code> has a size <code>s[j]</code>. If <code>s[j] &gt;= g[i]</code>, we can assign the cookie <code>j</code> to the child <code>i</code>, and the child <code>i</code> will be content. Your goal is to maximize the number of your content children and output the maximum number.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> g = [1,2,3], s = [1,1]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> You have 3 children and 2 cookies. The greed factors of 3 children are 1, 2, 3. \nAnd even though you have 2 cookies, since their size is both 1, you could only make the child whose greed factor is 1 content.\nYou need to output 1.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> g = [1,2], s = [1,2,3]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> You have 2 children and 3 cookies. The greed factors of 2 children are 1, 2. \nYou have 3 cookies and their sizes are big enough to gratify all of the children, \nYou need to output 2.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= g.length &lt;= 3 * 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= s.length &lt;= 3 * 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= g[i], s[j] &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 2789,
            "dislikes": 257,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "stats": "{\"totalAccepted\": \"268.1K\", \"totalSubmission\": \"539.3K\", \"totalAcceptedRaw\": 268066, \"totalSubmissionRaw\": 539316, \"acRate\": \"49.7%\"}",
            "hints": [],
            "rephrased": {
                "body": "You're an awesome parent providing cookies to your children. Each child `i` has a greed factor `g[i]`, representing the minimum cookie size they'll accept. Each cookie `j` has a size `s[j]`. A child `i` is content if they receive a cookie `j` where `s[j] >= g[i]`. Maximize the number of content children, giving each at most one cookie.",
                "constraints": [
                    "1 <= g.length <= 3 * 10<sup>4</sup>",
                    "0 <= s.length <= 3 * 10<sup>4</sup>",
                    "1 <= g[i], s[j] <= 2<sup>31</sup> - 1"
                ],
                "testcases": [
                    {
                        "input": "g = [1,2,3], s = [1,1]",
                        "output": "1",
                        "explanation": "With greed factors [1, 2, 3] and cookie sizes [1, 1], only the child with a greed factor of 1 can be content since we can only provide cookies of size 1."
                    },
                    {
                        "input": "g = [1,2], s = [1,2,3]",
                        "output": "2",
                        "explanation": "With greed factors [1, 2] and cookie sizes [1, 2, 3], both children can be content because the cookies are large enough to satisfy both of their greed factors."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int findContentChildren(vector<int>& g, vector<int>& s) {\n    std::ranges::sort(g);\n    std::ranges::sort(s);\n\n    int i = 0;\n    for (int j = 0; j < s.size() && i < g.size(); ++j)\n      if (g[i] <= s[j])\n        ++i;\n\n    return i;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int findContentChildren(int[] g, int[] s) {\n    Arrays.sort(g);\n    Arrays.sort(s);\n\n    int i = 0;\n    for (int j = 0; i < g.length && j < s.length; ++j)\n      if (g[i] <= s[j])\n        ++i;\n\n    return i;\n  }\n}\n",
                "lang_text": "java"
            }
        }
    }
}