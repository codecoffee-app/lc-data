{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "868",
            "title": "Binary Gap",
            "titleSlug": "binary-gap",
            "content": "<p>Given a positive integer <code>n</code>, find and return <em>the <strong>longest distance</strong> between any two <strong>adjacent</strong> </em><code>1</code><em>&#39;s in the binary representation of </em><code>n</code><em>. If there are no two adjacent </em><code>1</code><em>&#39;s, return </em><code>0</code><em>.</em></p>\n\n<p>Two <code>1</code>&#39;s are <strong>adjacent</strong> if there are only <code>0</code>&#39;s separating them (possibly no <code>0</code>&#39;s). The <b>distance</b> between two <code>1</code>&#39;s is the absolute difference between their bit positions. For example, the two <code>1</code>&#39;s in <code>&quot;1001&quot;</code> have a distance of 3.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 22\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> 22 in binary is &quot;10110&quot;.\nThe first adjacent pair of 1&#39;s is &quot;<u>1</u>0<u>1</u>10&quot; with a distance of 2.\nThe second adjacent pair of 1&#39;s is &quot;10<u>11</u>0&quot; with a distance of 1.\nThe answer is the largest of these two distances, which is 2.\nNote that &quot;<u>1</u>01<u>1</u>0&quot; is not a valid pair since there is a 1 separating the two 1&#39;s underlined.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 8\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> 8 in binary is &quot;1000&quot;.\nThere are not any adjacent pairs of 1&#39;s in the binary representation of 8, so we return 0.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 5\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> 5 in binary is &quot;101&quot;.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 10<sup>9</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 609,
            "dislikes": 652,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "stats": "{\"totalAccepted\": \"76.8K\", \"totalSubmission\": \"122.1K\", \"totalAcceptedRaw\": 76847, \"totalSubmissionRaw\": 122134, \"acRate\": \"62.9%\"}",
            "hints": [],
            "rephrased": {
                "body": "Given a positive integer `n`, determine the longest distance between any two adjacent 1's in the binary representation of `n`. Two 1's are considered adjacent if they are separated only by 0's (possibly no 0's). The distance between two 1's is the absolute difference between their bit positions. If no adjacent 1's exist, return 0.",
                "constraints": [
                    "1 <= n <= 10<sup>9</sup>"
                ],
                "testcases": [
                    {
                        "input": "22",
                        "output": "2",
                        "explanation": "The binary representation of 22 is \"10110\". The first adjacent pair of 1's is \"10110\" with a distance of 2. The second adjacent pair of 1's is \"10110\" with a distance of 1. The maximum of these distances is 2."
                    },
                    {
                        "input": "8",
                        "output": "0",
                        "explanation": "The binary representation of 8 is \"1000\". There are no adjacent pairs of 1's."
                    },
                    {
                        "input": "5",
                        "output": "2",
                        "explanation": "The binary representation of 5 is \"101\"."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ]
    }
}