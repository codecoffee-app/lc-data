{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1016",
            "title": "Binary String With Substrings Representing 1 To N",
            "titleSlug": "binary-string-with-substrings-representing-1-to-n",
            "content": "<p>Given a binary string <code>s</code> and a positive integer <code>n</code>, return <code>true</code><em> if the binary representation of all the integers in the range </em><code>[1, n]</code><em> are <strong>substrings</strong> of </em><code>s</code><em>, or </em><code>false</code><em> otherwise</em>.</p>\n\n<p>A <strong>substring</strong> is a contiguous sequence of characters within a string.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> s = \"0110\", n = 3\n<strong>Output:</strong> true\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> s = \"0110\", n = 4\n<strong>Output:</strong> false\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 1000</code></li>\n\t<li><code>s[i]</code> is either <code>&#39;0&#39;</code> or <code>&#39;1&#39;</code>.</li>\n\t<li><code>1 &lt;= n &lt;= 10<sup>9</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 339,
            "dislikes": 525,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "stats": "{\"totalAccepted\": \"36.1K\", \"totalSubmission\": \"62.9K\", \"totalAcceptedRaw\": 36100, \"totalSubmissionRaw\": 62881, \"acRate\": \"57.4%\"}",
            "hints": [
                "We only need to check substrings of length at most 30, because 10^9 has 30 bits."
            ],
            "rephrased": {
                "body": "Given a binary string `s` and a positive integer `n`, determine if the binary representation of all integers in the range `[1, n]` are substrings of `s`. Return `true` if they are, and `false` otherwise. A substring is a contiguous sequence of characters within a string.",
                "constraints": [
                    "1 <= s.length <= 1000",
                    "s[i] is either '0' or '1'.",
                    "1 <= n <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "s = \"0110\", n = 3",
                        "output": "true",
                        "explanation": "The binary representations of 1, 2, and 3 are \"1\", \"10\", and \"11\" respectively. All of these are substrings of \"0110\"."
                    },
                    {
                        "input": "s = \"0110\", n = 4",
                        "output": "false",
                        "explanation": "The binary representations of 1, 2, 3, and 4 are \"1\", \"10\", \"11\", and \"100\" respectively.  \"100\" is not a substring of \"0110\"."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "We only need to check substrings of length at most 30, because 10^9 has 30 bits."
        ],
        "relatedTopics": [
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  bool queryString(string s, int n) {\n    if (n > 1511)\n      return false;\n\n    for (int i = n; i > n / 2; --i) {\n      string binary = bitset<32>(i).to_string();\n      binary = binary.substr(binary.find(\"1\"));\n      if (s.find(binary) == string::npos)\n        return false;\n    }\n\n    return true;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public boolean queryString(String s, int n) {\n    if (n > 1511)\n      return false;\n\n    for (int i = n; i > n / 2; --i)\n      if (!s.contains(Integer.toBinaryString(i)))\n        return false;\n\n    return true;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def queryString(self, s: str, n: int) -> bool:\n    if n > 1511:\n      return False\n\n    for i in range(n, n // 2, -1):\n      if format(i, 'b') not in s:\n        return False\n\n    return True\n",
                "lang_text": "py"
            }
        }
    }
}