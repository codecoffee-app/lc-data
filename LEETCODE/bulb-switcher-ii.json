{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "672",
            "title": "Bulb Switcher II",
            "titleSlug": "bulb-switcher-ii",
            "content": "<p>There is a room with <code>n</code> bulbs labeled from <code>1</code> to <code>n</code> that all are turned on initially, and <strong>four buttons</strong> on the wall. Each of the four buttons has a different functionality where:</p>\n\n<ul>\n\t<li><strong>Button 1:</strong> Flips the status of all the bulbs.</li>\n\t<li><strong>Button 2:</strong> Flips the status of all the bulbs with even labels (i.e., <code>2, 4, ...</code>).</li>\n\t<li><strong>Button 3:</strong> Flips the status of all the bulbs with odd labels (i.e., <code>1, 3, ...</code>).</li>\n\t<li><strong>Button 4:</strong> Flips the status of all the bulbs with a label <code>j = 3k + 1</code> where <code>k = 0, 1, 2, ...</code> (i.e., <code>1, 4, 7, 10, ...</code>).</li>\n</ul>\n\n<p>You must make <strong>exactly</strong> <code>presses</code> button presses in total. For each press, you may pick <strong>any</strong> of the four buttons to press.</p>\n\n<p>Given the two integers <code>n</code> and <code>presses</code>, return <em>the number of <strong>different possible statuses</strong> after performing all </em><code>presses</code><em> button presses</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 1, presses = 1\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> Status can be:\n- [off] by pressing button 1\n- [on] by pressing button 2\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 2, presses = 1\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> Status can be:\n- [off, off] by pressing button 1\n- [on, off] by pressing button 2\n- [off, on] by pressing button 3\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 3, presses = 1\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> Status can be:\n- [off, off, off] by pressing button 1\n- [off, on, off] by pressing button 2\n- [on, off, on] by pressing button 3\n- [off, on, on] by pressing button 4\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 1000</code></li>\n\t<li><code>0 &lt;= presses &lt;= 1000</code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 141,
            "dislikes": 207,
            "similarQuestions": "[{\"title\": \"Bulb Switcher\", \"titleSlug\": \"bulb-switcher\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Number of Times Binary String Is Prefix-Aligned\", \"titleSlug\": \"number-of-times-binary-string-is-prefix-aligned\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "stats": "{\"totalAccepted\": \"21.6K\", \"totalSubmission\": \"42.9K\", \"totalAcceptedRaw\": 21581, \"totalSubmissionRaw\": 42935, \"acRate\": \"50.3%\"}",
            "hints": [],
            "rephrased": {
                "body": "Given `n` bulbs initially on and four buttons with distinct functionalities:\n\n- Button 1: Flips all bulbs.\n- Button 2: Flips even-labeled bulbs (2, 4, ...).\n- Button 3: Flips odd-labeled bulbs (1, 3, ...).\n- Button 4: Flips bulbs with label `j = 3k + 1` where `k = 0, 1, 2, ...` (1, 4, 7, 10, ...).\n\nDetermine the number of distinct possible bulb statuses after performing exactly `presses` button presses. Any of the four buttons can be chosen for each press.",
                "constraints": [
                    "1 <= n <= 1000",
                    "0 <= presses <= 1000"
                ],
                "testcases": [
                    {
                        "input": "n = 1, presses = 1",
                        "output": "2",
                        "explanation": "The possible statuses are: [off] by pressing button 1, or [on] by pressing any other button"
                    },
                    {
                        "input": "n = 2, presses = 1",
                        "output": "3",
                        "explanation": "The possible statuses are: [off, off] by pressing button 1, [on, off] by pressing button 2, or [off, on] by pressing button 3"
                    },
                    {
                        "input": "n = 3, presses = 1",
                        "output": "4",
                        "explanation": "The possible statuses are: [off, off, off] by pressing button 1, [off, on, off] by pressing button 2, [on, off, on] by pressing button 3, or [off, on, on] by pressing button 4"
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "bulb-switcher",
                "title": "Bulb Switcher",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "number-of-times-binary-string-is-prefix-aligned",
                "title": "Number of Times Binary String Is Prefix-Aligned",
                "isPaidOnly": false
            }
        ],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int flipLights(int n, int m) {\n    n = min(n, 3);\n\n    if (m == 0)\n      return 1;\n    if (m == 1)\n      return vector{2, 3, 4}[n - 1];\n    if (m == 2)\n      return vector{2, 4, 7}[n - 1];\n\n    return pow(2, n);\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int flipLights(int n, int m) {\n    n = Math.min(n, 3);\n\n    if (m == 0)\n      return 1;\n    if (m == 1)\n      return new int[] {2, 3, 4}[n - 1];\n    if (m == 2)\n      return new int[] {2, 4, 7}[n - 1];\n\n    return (int) Math.pow(2, n);\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def flipLights(self, n: int, m: int) -> int:\n    n = min(n, 3)\n\n    if m == 0:\n      return 1\n    if m == 1:\n      return [2, 3, 4][n - 1]\n    if m == 2:\n      return [2, 4, 7][n - 1]\n\n    return [2, 4, 8][n - 1]\n",
                "lang_text": "py"
            }
        }
    }
}