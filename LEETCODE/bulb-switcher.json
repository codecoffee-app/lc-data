{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "319",
            "title": "Bulb Switcher",
            "titleSlug": "bulb-switcher",
            "content": "<p>There are <code>n</code> bulbs that are initially off. You first turn on all the bulbs, then&nbsp;you turn off every second bulb.</p>\n\n<p>On the third round, you toggle every third bulb (turning on if it&#39;s off or turning off if it&#39;s on). For the <code>i<sup>th</sup></code> round, you toggle every <code>i</code> bulb. For the <code>n<sup>th</sup></code> round, you only toggle the last bulb.</p>\n\n<p>Return <em>the number of bulbs that are on after <code>n</code> rounds</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/05/bulb.jpg\" style=\"width: 421px; height: 321px;\" />\n<pre>\n<strong>Input:</strong> n = 3\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> At first, the three bulbs are [off, off, off].\nAfter the first round, the three bulbs are [on, on, on].\nAfter the second round, the three bulbs are [on, off, on].\nAfter the third round, the three bulbs are [on, off, off]. \nSo you should return 1 because there is only one bulb is on.</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 0\n<strong>Output:</strong> 0\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 1\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= n &lt;= 10<sup>9</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 2541,
            "dislikes": 3053,
            "similarQuestions": "[{\"title\": \"Bulb Switcher II\", \"titleSlug\": \"bulb-switcher-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Number of K Consecutive Bit Flips\", \"titleSlug\": \"minimum-number-of-k-consecutive-bit-flips\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Number of Times Binary String Is Prefix-Aligned\", \"titleSlug\": \"number-of-times-binary-string-is-prefix-aligned\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find the Pivot Integer\", \"titleSlug\": \"find-the-pivot-integer\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Brainteaser",
                    "slug": "brainteaser"
                }
            ],
            "stats": "{\"totalAccepted\": \"208.2K\", \"totalSubmission\": \"396.1K\", \"totalAcceptedRaw\": 208160, \"totalSubmissionRaw\": 396079, \"acRate\": \"52.6%\"}",
            "hints": [],
            "rephrased": {
                "body": "Initially, there are 'n' bulbs, all turned off. The following process is performed:\n\n*   Round 1: Turn on all bulbs.\n*   Round 2: Turn off every second bulb.\n*   Round i: Toggle every i-th bulb (on to off, or off to on).\n*   Round n: Toggle only the last bulb.\n\nDetermine the number of bulbs that are on after 'n' rounds.",
                "constraints": [
                    "0 <= n <= 10<sup>9</sup>"
                ],
                "testcases": [
                    {
                        "input": "3",
                        "output": "1",
                        "explanation": "Initially: [off, off, off]\nRound 1: [on, on, on]\nRound 2: [on, off, on]\nRound 3: [on, off, off]\nOne bulb is on."
                    },
                    {
                        "input": "0",
                        "output": "0",
                        "explanation": null
                    },
                    {
                        "input": "1",
                        "output": "1",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "bulb-switcher-ii",
                "title": "Bulb Switcher II",
                "isPaidOnly": false
            },
            {
                "difficulty": "Hard",
                "titleSlug": "minimum-number-of-k-consecutive-bit-flips",
                "title": "Minimum Number of K Consecutive Bit Flips",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "number-of-times-binary-string-is-prefix-aligned",
                "title": "Number of Times Binary String Is Prefix-Aligned",
                "isPaidOnly": false
            },
            {
                "difficulty": "Easy",
                "titleSlug": "find-the-pivot-integer",
                "title": "Find the Pivot Integer",
                "isPaidOnly": false
            }
        ],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Brainteaser",
                "slug": "brainteaser"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int bulbSwitch(int n) {\n    // K-th bulb only be switched when k % i == 0.\n    // So we can reiterate the problem:\n    // To find # of number <= n that have odd factors.\n    // Obviously, only square numbers have odd factor(s).\n    // E.g. n = 10, only 1, 4, and 9 are square numbers that <= 10\n    return sqrt(n);\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int bulbSwitch(int n) {\n    // K-th bulb only be switched when k % i == 0.\n    // So we can reiterate the problem:\n    // To find # of number <= n that have odd factors.\n    // Obviously, only square numbers have odd factor(s).\n    // E.g. n = 10, only 1, 4, and 9 are square numbers that <= 10\n    return (int) Math.sqrt(n);\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def bulbSwitch(self, n: int) -> int:\n    return int(sqrt(n))\n",
                "lang_text": "py"
            }
        }
    }
}