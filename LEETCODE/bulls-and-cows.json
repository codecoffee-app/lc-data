{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "299",
            "title": "Bulls and Cows",
            "titleSlug": "bulls-and-cows",
            "content": "<p>You are playing the <strong><a href=\"https://en.wikipedia.org/wiki/Bulls_and_Cows\" target=\"_blank\">Bulls and Cows</a></strong> game with your friend.</p>\n\n<p>You write down a secret number and ask your friend to guess what the number is. When your friend makes a guess, you provide a hint with the following info:</p>\n\n<ul>\n\t<li>The number of &quot;bulls&quot;, which are digits in the guess that are in the correct position.</li>\n\t<li>The number of &quot;cows&quot;, which are digits in the guess that are in your secret number but are located in the wrong position. Specifically, the non-bull digits in the guess that could be rearranged such that they become bulls.</li>\n</ul>\n\n<p>Given the secret number <code>secret</code> and your friend&#39;s guess <code>guess</code>, return <em>the hint for your friend&#39;s guess</em>.</p>\n\n<p>The hint should be formatted as <code>&quot;xAyB&quot;</code>, where <code>x</code> is the number of bulls and <code>y</code> is the number of cows. Note that both <code>secret</code> and <code>guess</code> may contain duplicate digits.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> secret = &quot;1807&quot;, guess = &quot;7810&quot;\n<strong>Output:</strong> &quot;1A3B&quot;\n<strong>Explanation:</strong> Bulls are connected with a &#39;|&#39; and cows are underlined:\n&quot;1807&quot;\n  |\n&quot;<u>7</u>8<u>10</u>&quot;</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> secret = &quot;1123&quot;, guess = &quot;0111&quot;\n<strong>Output:</strong> &quot;1A1B&quot;\n<strong>Explanation:</strong> Bulls are connected with a &#39;|&#39; and cows are underlined:\n&quot;1123&quot;        &quot;1123&quot;\n  |      or     |\n&quot;01<u>1</u>1&quot;        &quot;011<u>1</u>&quot;\nNote that only one of the two unmatched 1s is counted as a cow since the non-bull digits can only be rearranged to allow one 1 to be a bull.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= secret.length, guess.length &lt;= 1000</code></li>\n\t<li><code>secret.length == guess.length</code></li>\n\t<li><code>secret</code> and <code>guess</code> consist of digits only.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 2333,
            "dislikes": 1762,
            "similarQuestions": "[{\"title\": \"Make Number of Distinct Characters Equal\", \"titleSlug\": \"make-number-of-distinct-characters-equal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "stats": "{\"totalAccepted\": \"361.5K\", \"totalSubmission\": \"723.6K\", \"totalAcceptedRaw\": 361532, \"totalSubmissionRaw\": 723609, \"acRate\": \"50.0%\"}",
            "hints": [],
            "rephrased": {
                "body": "You are playing the Bulls and Cows game. You have a secret number, and your friend needs to guess it. After each guess, you provide a hint indicating the number of 'bulls' (digits in the correct position) and 'cows' (digits present in the secret number but in the wrong position). Given the secret number and the guess, determine the hint in the format 'xAyB', where x is the number of bulls and y is the number of cows.",
                "constraints": [
                    "1 <= secret.length, guess.length <= 1000",
                    "secret.length == guess.length",
                    "secret and guess consist of digits only."
                ],
                "testcases": [
                    {
                        "input": "secret = \"1807\", guess = \"7810\"",
                        "output": "\"1A3B\"",
                        "explanation": "One bull ('8' at the second position) and three cows ('7', '1', and '0' are present in the secret but in different positions)."
                    },
                    {
                        "input": "secret = \"1123\", guess = \"0111\"",
                        "output": "\"1A1B\"",
                        "explanation": "One bull ('1' at the second position) and one cow ('1' exists in secret)."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "make-number-of-distinct-characters-equal",
                "title": "Make Number of Distinct Characters Equal",
                "isPaidOnly": false
            }
        ],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  string getHint(string secret, string guess) {\n    int A = 0;\n    int B = 0;\n    vector<int> count1(10);\n    vector<int> count2(10);\n\n    for (int i = 0; i < secret.length(); ++i)\n      if (secret[i] == guess[i])\n        ++A;\n      else {\n        ++count1[secret[i] - '0'];\n        ++count2[guess[i] - '0'];\n      }\n\n    for (int i = 0; i < 10; ++i)\n      B += min(count1[i], count2[i]);\n\n    return to_string(A) + \"A\" + to_string(B) + \"B\";\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public String getHint(String secret, String guess) {\n    int A = 0;\n    int B = 0;\n    int[] count1 = new int[10];\n    int[] count2 = new int[10];\n\n    for (int i = 0; i < secret.length(); ++i)\n      if (secret.charAt(i) == guess.charAt(i))\n        ++A;\n      else {\n        ++count1[secret.charAt(i) - '0'];\n        ++count2[guess.charAt(i) - '0'];\n      }\n\n    for (int i = 0; i < 10; ++i)\n      B += Math.min(count1[i], count2[i]);\n\n    return String.valueOf(A) + \"A\" + String.valueOf(B) + \"B\";\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def getHint(self, secret: str, guess: str) -> str:\n    bulls = sum(map(operator.eq, secret, guess))\n    bovine = sum(min(secret.count(x), guess.count(x)) for x in set(guess))\n    return '%dA%dB' % (bulls, bovine - bulls)\n",
                "lang_text": "py"
            }
        }
    }
}