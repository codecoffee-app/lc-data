{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2303",
            "title": "Calculate Amount Paid in Taxes",
            "titleSlug": "calculate-amount-paid-in-taxes",
            "content": "<p>You are given a <strong>0-indexed</strong> 2D integer array <code>brackets</code> where <code>brackets[i] = [upper<sub>i</sub>, percent<sub>i</sub>]</code> means that the <code>i<sup>th</sup></code> tax bracket has an upper bound of <code>upper<sub>i</sub></code> and is taxed at a rate of <code>percent<sub>i</sub></code>. The brackets are <strong>sorted</strong> by upper bound (i.e. <code>upper<sub>i-1</sub> &lt; upper<sub>i</sub></code> for <code>0 &lt; i &lt; brackets.length</code>).</p>\n\n<p>Tax is calculated as follows:</p>\n\n<ul>\n\t<li>The first <code>upper<sub>0</sub></code> dollars earned are taxed at a rate of <code>percent<sub>0</sub></code>.</li>\n\t<li>The next <code>upper<sub>1</sub> - upper<sub>0</sub></code> dollars earned are taxed at a rate of <code>percent<sub>1</sub></code>.</li>\n\t<li>The next <code>upper<sub>2</sub> - upper<sub>1</sub></code> dollars earned are taxed at a rate of <code>percent<sub>2</sub></code>.</li>\n\t<li>And so on.</li>\n</ul>\n\n<p>You are given an integer <code>income</code> representing the amount of money you earned. Return <em>the amount of money that you have to pay in taxes.</em> Answers within <code>10<sup>-5</sup></code> of the actual answer will be accepted.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> brackets = [[3,50],[7,10],[12,25]], income = 10\n<strong>Output:</strong> 2.65000\n<strong>Explanation:</strong>\nBased on your income, you have 3 dollars in the 1<sup>st</sup> tax bracket, 4 dollars in the 2<sup>nd</sup> tax bracket, and 3 dollars in the 3<sup>rd</sup> tax bracket.\nThe tax rate for the three tax brackets is 50%, 10%, and 25%, respectively.\nIn total, you pay $3 * 50% + $4 * 10% + $3 * 25% = $2.65 in taxes.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> brackets = [[1,0],[4,25],[5,50]], income = 2\n<strong>Output:</strong> 0.25000\n<strong>Explanation:</strong>\nBased on your income, you have 1 dollar in the 1<sup>st</sup> tax bracket and 1 dollar in the 2<sup>nd</sup> tax bracket.\nThe tax rate for the two tax brackets is 0% and 25%, respectively.\nIn total, you pay $1 * 0% + $1 * 25% = $0.25 in taxes.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> brackets = [[2,50]], income = 0\n<strong>Output:</strong> 0.00000\n<strong>Explanation:</strong>\nYou have no income to tax, so you have to pay a total of $0 in taxes.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= brackets.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= upper<sub>i</sub> &lt;= 1000</code></li>\n\t<li><code>0 &lt;= percent<sub>i</sub> &lt;= 100</code></li>\n\t<li><code>0 &lt;= income &lt;= 1000</code></li>\n\t<li><code>upper<sub>i</sub></code> is sorted in ascending order.</li>\n\t<li>All the values of <code>upper<sub>i</sub></code> are <strong>unique</strong>.</li>\n\t<li>The upper bound of the last tax bracket is greater than or equal to <code>income</code>.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 241,
            "dislikes": 267,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "stats": "{\"totalAccepted\": \"33.9K\", \"totalSubmission\": \"52.4K\", \"totalAcceptedRaw\": 33926, \"totalSubmissionRaw\": 52441, \"acRate\": \"64.7%\"}",
            "hints": [
                "As you iterate through the tax brackets, keep track of the previous tax bracket\u2019s upper bound in a variable called prev. If there is no previous tax bracket, use 0 instead.",
                "The amount of money in the ith tax bracket is min(income, upperi) - prev."
            ],
            "rephrased": {
                "body": "You are given a 0-indexed 2D integer array `brackets` where `brackets[i] = [upper_i, percent_i]` represents the i-th tax bracket with an upper bound of `upper_i` and a tax rate of `percent_i`. The brackets are sorted by upper bound (`upper_{i-1} < upper_i` for `0 < i < brackets.length`).  Calculate the total tax owed given an integer `income` representing the total income earned. Tax is calculated cumulatively based on the tax brackets.",
                "constraints": [
                    "1 <= brackets.length <= 100",
                    "1 <= upper_i <= 1000",
                    "0 <= percent_i <= 100",
                    "0 <= income <= 1000",
                    "upper_i is sorted in ascending order.",
                    "All the values of upper_i are unique.",
                    "The upper bound of the last tax bracket is greater than or equal to income."
                ],
                "testcases": [
                    {
                        "input": "brackets = [[3,50],[7,10],[12,25]], income = 10",
                        "output": "2.65000",
                        "explanation": "The first $3 are taxed at 50%, the next $4 (from $3 to $7) are taxed at 10%, and the remaining $3 (from $7 to $10) are taxed at 25%.  Total tax is $3 * 0.50 + $4 * 0.10 + $3 * 0.25 = $1.50 + $0.40 + $0.75 = $2.65"
                    },
                    {
                        "input": "brackets = [[1,0],[4,25],[5,50]], income = 2",
                        "output": "0.25000",
                        "explanation": "The first $1 is taxed at 0%, and the next $1 (from $1 to $2) is taxed at 25%. Total tax is $1 * 0 + $1 * 0.25 = $0.25"
                    },
                    {
                        "input": "brackets = [[2,50]], income = 0",
                        "output": "0.00000",
                        "explanation": "Since the income is $0, no tax is due."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "As you iterate through the tax brackets, keep track of the previous tax bracket\u2019s upper bound in a variable called prev. If there is no previous tax bracket, use 0 instead.",
            "The amount of money in the ith tax bracket is min(income, upperi) - prev."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  double calculateTax(vector<vector<int>>& brackets, int income) {\n    double ans = 0;\n    int prev = 0;\n\n    for (const vector<int>& b : brackets) {\n      const int upper = b[0];\n      const int percent = b[1];\n      if (income < upper)\n        return ans + (income - prev) * percent / 100.0;\n      ans += (upper - prev) * percent / 100.0;\n      prev = upper;\n    }\n\n    return ans;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public double calculateTax(int[][] brackets, int income) {\n    double ans = 0;\n    int prev = 0;\n\n    for (int[] b : brackets) {\n      final int upper = b[0];\n      final int percent = b[1];\n      if (income < upper)\n        return ans + (income - prev) * percent / 100.0;\n      ans += (upper - prev) * percent / 100.0;\n      prev = upper;\n    }\n\n    return ans;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def calculateTax(self, brackets: List[List[int]], income: int) -> float:\n    ans = 0\n    prev = 0\n\n    for upper, percent in brackets:\n      if income < upper:\n        return ans + (income - prev) * percent / 100.0\n      ans += (upper - prev) * percent / 100.0\n      prev = upper\n\n    return ans\n",
                "lang_text": "py"
            }
        }
    }
}