{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2243",
            "title": "Calculate Digit Sum of a String",
            "titleSlug": "calculate-digit-sum-of-a-string",
            "content": "<p>You are given a string <code>s</code> consisting of digits and an integer <code>k</code>.</p>\n\n<p>A <strong>round</strong> can be completed if the length of <code>s</code> is greater than <code>k</code>. In one round, do the following:</p>\n\n<ol>\n\t<li><strong>Divide</strong> <code>s</code> into <strong>consecutive groups</strong> of size <code>k</code> such that the first <code>k</code> characters are in the first group, the next <code>k</code> characters are in the second group, and so on. <strong>Note</strong> that the size of the last group can be smaller than <code>k</code>.</li>\n\t<li><strong>Replace</strong> each group of <code>s</code> with a string representing the sum of all its digits. For example, <code>&quot;346&quot;</code> is replaced with <code>&quot;13&quot;</code> because <code>3 + 4 + 6 = 13</code>.</li>\n\t<li><strong>Merge</strong> consecutive groups together to form a new string. If the length of the string is greater than <code>k</code>, repeat from step <code>1</code>.</li>\n</ol>\n\n<p>Return <code>s</code> <em>after all rounds have been completed</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;11111222223&quot;, k = 3\n<strong>Output:</strong> &quot;135&quot;\n<strong>Explanation:</strong> \n- For the first round, we divide s into groups of size 3: &quot;111&quot;, &quot;112&quot;, &quot;222&quot;, and &quot;23&quot;.\n  \u200b\u200b\u200b\u200b\u200bThen we calculate the digit sum of each group: 1 + 1 + 1 = 3, 1 + 1 + 2 = 4, 2 + 2 + 2 = 6, and 2 + 3 = 5. \n&nbsp; So, s becomes &quot;3&quot; + &quot;4&quot; + &quot;6&quot; + &quot;5&quot; = &quot;3465&quot; after the first round.\n- For the second round, we divide s into &quot;346&quot; and &quot;5&quot;.\n&nbsp; Then we calculate the digit sum of each group: 3 + 4 + 6 = 13, 5 = 5. \n&nbsp; So, s becomes &quot;13&quot; + &quot;5&quot; = &quot;135&quot; after second round. \nNow, s.length &lt;= k, so we return &quot;135&quot; as the answer.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;00000000&quot;, k = 3\n<strong>Output:</strong> &quot;000&quot;\n<strong>Explanation:</strong> \nWe divide s into &quot;000&quot;, &quot;000&quot;, and &quot;00&quot;.\nThen we calculate the digit sum of each group: 0 + 0 + 0 = 0, 0 + 0 + 0 = 0, and 0 + 0 = 0. \ns becomes &quot;0&quot; + &quot;0&quot; + &quot;0&quot; = &quot;000&quot;, whose length is equal to k, so we return &quot;000&quot;.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 100</code></li>\n\t<li><code>2 &lt;= k &lt;= 100</code></li>\n\t<li><code>s</code> consists of digits only.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 527,
            "dislikes": 41,
            "similarQuestions": "[{\"title\": \"Add Digits\", \"titleSlug\": \"add-digits\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Find Triangular Sum of an Array\", \"titleSlug\": \"find-triangular-sum-of-an-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "stats": "{\"totalAccepted\": \"35.4K\", \"totalSubmission\": \"53.8K\", \"totalAcceptedRaw\": 35394, \"totalSubmissionRaw\": 53804, \"acRate\": \"65.8%\"}",
            "hints": [
                "Try simulating the entire process to find the final answer."
            ],
            "rephrased": {
                "body": "Given a string `s` consisting of digits and an integer `k`, perform rounds until the length of `s` is no longer greater than `k`. In each round:\n\n1.  Divide `s` into consecutive groups of size `k`. The last group may be smaller than `k`.\n2.  Replace each group with the string representation of the sum of its digits.\n3.  Merge the groups back into a new string.\n\nReturn the final string `s` after all rounds are completed.",
                "constraints": [
                    "1 <= s.length <= 100",
                    "2 <= k <= 100",
                    "s consists of digits only."
                ],
                "testcases": [
                    {
                        "input": {
                            "s": "11111222223",
                            "k": 3
                        },
                        "output": "135",
                        "explanation": "In the first round, the string is divided into \"111\", \"112\", \"222\", and \"23\". The digit sums are 3, 4, 6, and 5 respectively.  `s` becomes \"3465\". In the second round, the string is divided into \"346\" and \"5\". The digit sums are 13 and 5 respectively.  `s` becomes \"135\". Since the length of `s` is no longer greater than `k`, the process stops."
                    },
                    {
                        "input": {
                            "s": "00000000",
                            "k": 3
                        },
                        "output": "000",
                        "explanation": "The string is divided into \"000\", \"000\", and \"00\". The digit sums are 0, 0, and 0 respectively. `s` becomes \"000\". Since the length of `s` is no longer greater than `k`, the process stops."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Easy",
                "titleSlug": "add-digits",
                "title": "Add Digits",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "find-triangular-sum-of-an-array",
                "title": "Find Triangular Sum of an Array",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "Try simulating the entire process to find the final answer."
        ],
        "relatedTopics": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  string digitSum(string s, int k) {\n    while (s.length() > k) {\n      string next;\n      for (int i = 0; i < s.length(); ++i)\n        next += to_string(accumulate(\n            s.begin() + i, s.begin() + min(static_cast<int>(s.length()), i + k),\n            0, [](int subtotal, char c) { return subtotal + c - '0'; }));\n      s = move(next);\n    }\n    return s;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public String digitSum(String s, int k) {\n    while (s.length() > k) {\n      StringBuilder sb = new StringBuilder();\n      for (int i = 0; i < s.length(); i += k) {\n        int sum = 0;\n        for (int j = i; j < Math.min(s.length(), i + k); ++j)\n          sum += s.charAt(j) - '0';\n        sb.append(sum);\n      }\n      s = sb.toString();\n    }\n    return s;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def digitSum(self, s: str, k: int) -> str:\n    while len(s) > k:\n      next = []\n      for i in range(0, len(s), k):\n        summ = 0\n        for j in range(i, min(len(s), i + k)):\n          summ += ord(s[j]) - ord('0')\n        next.append(str(summ))\n      s = ''.join(next)\n    return s\n",
                "lang_text": "py"
            }
        }
    }
}