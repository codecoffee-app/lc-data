{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1094",
            "title": "Car Pooling",
            "titleSlug": "car-pooling",
            "content": "<p>There is a car with <code>capacity</code> empty seats. The vehicle only drives east (i.e., it cannot turn around and drive west).</p>\n\n<p>You are given the integer <code>capacity</code> and an array <code>trips</code> where <code>trips[i] = [numPassengers<sub>i</sub>, from<sub>i</sub>, to<sub>i</sub>]</code> indicates that the <code>i<sup>th</sup></code> trip has <code>numPassengers<sub>i</sub></code> passengers and the locations to pick them up and drop them off are <code>from<sub>i</sub></code> and <code>to<sub>i</sub></code> respectively. The locations are given as the number of kilometers due east from the car&#39;s initial location.</p>\n\n<p>Return <code>true</code><em> if it is possible to pick up and drop off all passengers for all the given trips, or </em><code>false</code><em> otherwise</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> trips = [[2,1,5],[3,3,7]], capacity = 4\n<strong>Output:</strong> false\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> trips = [[2,1,5],[3,3,7]], capacity = 5\n<strong>Output:</strong> true\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= trips.length &lt;= 1000</code></li>\n\t<li><code>trips[i].length == 3</code></li>\n\t<li><code>1 &lt;= numPassengers<sub>i</sub> &lt;= 100</code></li>\n\t<li><code>0 &lt;= from<sub>i</sub> &lt; to<sub>i</sub> &lt;= 1000</code></li>\n\t<li><code>1 &lt;= capacity &lt;= 10<sup>5</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 4328,
            "dislikes": 89,
            "similarQuestions": "[{\"title\": \"Meeting Rooms II\", \"titleSlug\": \"meeting-rooms-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "stats": "{\"totalAccepted\": \"208.4K\", \"totalSubmission\": \"370.9K\", \"totalAcceptedRaw\": 208431, \"totalSubmissionRaw\": 370900, \"acRate\": \"56.2%\"}",
            "hints": [
                "Sort the pickup and dropoff events by location, then process them in order."
            ],
            "rephrased": {
                "body": "A car with a fixed `capacity` of empty seats travels east. You are given a list of passenger `trips`. Each trip `trips[i] = [numPassengers_i, from_i, to_i]` specifies the number of passengers (`numPassengers_i`), the pickup location (`from_i`), and the drop-off location (`to_i`) in kilometers from the starting point. Determine if it's possible to complete all trips without exceeding the car's capacity.",
                "constraints": [
                    "1 <= trips.length <= 1000",
                    "trips[i].length == 3",
                    "1 <= numPassengers_i <= 100",
                    "0 <= from_i < to_i <= 1000",
                    "1 <= capacity <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "trips = [[2,1,5],[3,3,7]], capacity = 4",
                        "output": "false",
                        "explanation": null
                    },
                    {
                        "input": "trips = [[2,1,5],[3,3,7]], capacity = 5",
                        "output": "true",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "meeting-rooms-ii",
                "title": "Meeting Rooms II",
                "isPaidOnly": true
            }
        ],
        "hints": [
            "Sort the pickup and dropoff events by location, then process them in order."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ]
    }
}