{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1737",
            "title": "Change Minimum Characters to Satisfy One of Three Conditions",
            "titleSlug": "change-minimum-characters-to-satisfy-one-of-three-conditions",
            "content": "<p>You are given two strings <code>a</code> and <code>b</code> that consist of lowercase letters. In one operation, you can change any character in <code>a</code> or <code>b</code> to <strong>any lowercase letter</strong>.</p>\n\n<p>Your goal is to satisfy <strong>one</strong> of the following three conditions:</p>\n\n<ul>\n\t<li><strong>Every</strong> letter in <code>a</code> is <strong>strictly less</strong> than <strong>every</strong> letter in <code>b</code> in the alphabet.</li>\n\t<li><strong>Every</strong> letter in <code>b</code> is <strong>strictly less</strong> than <strong>every</strong> letter in <code>a</code> in the alphabet.</li>\n\t<li><strong>Both</strong> <code>a</code> and <code>b</code> consist of <strong>only one</strong> distinct letter.</li>\n</ul>\n\n<p>Return <em>the <strong>minimum</strong> number of operations needed to achieve your goal.</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> a = &quot;aba&quot;, b = &quot;caa&quot;\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> Consider the best way to make each condition true:\n1) Change b to &quot;ccc&quot; in 2 operations, then every letter in a is less than every letter in b.\n2) Change a to &quot;bbb&quot; and b to &quot;aaa&quot; in 3 operations, then every letter in b is less than every letter in a.\n3) Change a to &quot;aaa&quot; and b to &quot;aaa&quot; in 2 operations, then a and b consist of one distinct letter.\nThe best way was done in 2 operations (either condition 1 or condition 3).\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> a = &quot;dabadd&quot;, b = &quot;cda&quot;\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> The best way is to make condition 1 true by changing b to &quot;eee&quot;.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= a.length, b.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>a</code> and <code>b</code> consist only of lowercase letters.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 310,
            "dislikes": 332,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "stats": "{\"totalAccepted\": \"13K\", \"totalSubmission\": \"35.7K\", \"totalAcceptedRaw\": 12962, \"totalSubmissionRaw\": 35737, \"acRate\": \"36.3%\"}",
            "hints": [
                "Iterate on each letter in the alphabet, and check the smallest number of operations needed to make it one of the following: the largest letter in a and smaller than the smallest one in b, vice versa, or let a and b consist only of this letter.",
                "For the first 2 conditions, take care that you can only change characters to lowercase letters, so you can't make 'z' the smallest letter in one of the strings or 'a' the largest letter in one of them."
            ],
            "rephrased": {
                "body": "Given two strings `a` and `b` consisting of lowercase letters, determine the minimum number of operations needed to satisfy one of the following conditions.  In each operation, you can change any character in `a` or `b` to any lowercase letter:\n\n1.  Every character in `a` is strictly less than every character in `b` alphabetically.\n2.  Every character in `b` is strictly less than every character in `a` alphabetically.\n3.  Both `a` and `b` consist of only one distinct letter.",
                "constraints": [
                    "1 <= a.length, b.length <= 10<sup>5</sup>",
                    "`a` and `b` consist only of lowercase letters."
                ],
                "testcases": [
                    {
                        "input": "a = \"aba\", b = \"caa\"",
                        "output": "2",
                        "explanation": "We analyze each condition to minimize the changes required.\n\n*   Condition 1 (a < b): Changing `b` to \"ccc\" requires 2 operations, satisfying the condition.\n*   Condition 2 (b < a): Changing `a` to \"bbb\" and `b` to \"aaa\" requires 3 operations.\n*   Condition 3 (Single distinct letter): Changing `a` to \"aaa\" and `b` to \"aaa\" requires 2 operations.\n\nThe minimum operations are achieved with either condition 1 or 3, requiring 2 operations."
                    },
                    {
                        "input": "a = \"dabadd\", b = \"cda\"",
                        "output": "3",
                        "explanation": "The optimal strategy is to satisfy condition 1 by changing `b` to \"eee\", which requires 3 operations."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "Iterate on each letter in the alphabet, and check the smallest number of operations needed to make it one of the following: the largest letter in a and smaller than the smallest one in b, vice versa, or let a and b consist only of this letter.",
            "For the first 2 conditions, take care that you can only change characters to lowercase letters, so you can't make 'z' the smallest letter in one of the strings or 'a' the largest letter in one of them."
        ],
        "relatedTopics": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Counting",
                "slug": "counting"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ]
    }
}