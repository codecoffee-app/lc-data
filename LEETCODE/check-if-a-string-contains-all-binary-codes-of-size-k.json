{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1461",
            "title": "Check If a String Contains All Binary Codes of Size K",
            "titleSlug": "check-if-a-string-contains-all-binary-codes-of-size-k",
            "content": "<p>Given a binary string <code>s</code> and an integer <code>k</code>, return <code>true</code> <em>if every binary code of length</em> <code>k</code> <em>is a substring of</em> <code>s</code>. Otherwise, return <code>false</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;00110110&quot;, k = 2\n<strong>Output:</strong> true\n<strong>Explanation:</strong> The binary codes of length 2 are &quot;00&quot;, &quot;01&quot;, &quot;10&quot; and &quot;11&quot;. They can be all found as substrings at indices 0, 1, 3 and 2 respectively.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;0110&quot;, k = 1\n<strong>Output:</strong> true\n<strong>Explanation:</strong> The binary codes of length 1 are &quot;0&quot; and &quot;1&quot;, it is clear that both exist as a substring. \n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;0110&quot;, k = 2\n<strong>Output:</strong> false\n<strong>Explanation:</strong> The binary code &quot;00&quot; is of length 2 and does not exist in the array.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 5 * 10<sup>5</sup></code></li>\n\t<li><code>s[i]</code> is either <code>&#39;0&#39;</code> or <code>&#39;1&#39;</code>.</li>\n\t<li><code>1 &lt;= k &lt;= 20</code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 2197,
            "dislikes": 92,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Rolling Hash",
                    "slug": "rolling-hash"
                },
                {
                    "name": "Hash Function",
                    "slug": "hash-function"
                }
            ],
            "stats": "{\"totalAccepted\": \"116.3K\", \"totalSubmission\": \"205.9K\", \"totalAcceptedRaw\": 116316, \"totalSubmissionRaw\": 205865, \"acRate\": \"56.5%\"}",
            "hints": [
                "We need only to check all sub-strings of length k.",
                "The number of distinct sub-strings should be exactly 2^k."
            ],
            "rephrased": {
                "body": "Given a binary string `s` and an integer `k`, determine if every possible binary code of length `k` is present as a substring within `s`. Return `true` if all binary codes of length `k` are substrings of `s`; otherwise, return `false`.",
                "constraints": [
                    "1 <= s.length <= 5 * 10^5",
                    "s[i] is either '0' or '1'.",
                    "1 <= k <= 20"
                ],
                "testcases": [
                    {
                        "input": "s = \"00110110\", k = 2",
                        "output": "true",
                        "explanation": "All binary codes of length 2 (\"00\", \"01\", \"10\", and \"11\") are present as substrings in \"00110110\"."
                    },
                    {
                        "input": "s = \"0110\", k = 1",
                        "output": "true",
                        "explanation": "All binary codes of length 1 (\"0\" and \"1\") are present as substrings in \"0110\"."
                    },
                    {
                        "input": "s = \"0110\", k = 2",
                        "output": "false",
                        "explanation": "The binary code \"00\" of length 2 is not present as a substring in \"0110\"."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "We need only to check all sub-strings of length k.",
            "The number of distinct sub-strings should be exactly 2^k."
        ],
        "relatedTopics": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Rolling Hash",
                "slug": "rolling-hash"
            },
            {
                "name": "Hash Function",
                "slug": "hash-function"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  bool hasAllCodes(string s, int k) {\n    const int n = 1 << k;\n    if (s.length() < n)\n      return false;\n\n    // used[i] := true if i is a substring of s.\n    vector<bool> used(n);\n\n    int window = k == 1 ? 0 : stoi(s.substr(0, k - 1), nullptr, 2);\n    for (int i = k - 1; i < s.length(); ++i) {\n      // Include s[i].\n      window = (window << 1) + (s[i] - '0');\n      // Discard s[i - k].\n      window &= n - 1;\n      used[window] = true;\n    }\n\n    return all_of(used.begin(), used.end(), [](bool u) { return u; });\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public boolean hasAllCodes(String s, int k) {\n    final int n = 1 << k;\n    if (s.length() < n)\n      return false;\n\n    // used[i] := true if i is a subString of s.\n    boolean[] used = new boolean[n];\n\n    int window = k == 1 ? 0 : Integer.parseInt(s.substring(0, k - 1), 2);\n    for (int i = k - 1; i < s.length(); ++i) {\n      // Include s[i].\n      window = (window << 1) + (s.charAt(i) - '0');\n      // Discard s[i - k].\n      window &= n - 1;\n      used[window] = true;\n    }\n\n    return IntStream.range(0, used.length).mapToObj(i -> used[i]).allMatch(u -> u);\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def hasAllCodes(self, s: str, k: int) -> bool:\n    n = 1 << k\n    if len(s) < n:\n      return False\n\n    # used[i] := True if i is a subof s.\n    used = [0] * n\n\n    windowStr = 0 if k == 1 else int(s[0:k - 1], 2)\n    for i in range(k - 1, len(s)):\n      # Include s[i].\n      windowStr = (windowStr << 1) + int(s[i])\n      # Discard s[i - k].\n      windowStr &= n - 1\n      used[windowStr] = True\n\n    return all(u for u in used)\n",
                "lang_text": "py"
            }
        }
    }
}