{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2319",
            "title": "Check if Matrix Is X-Matrix",
            "titleSlug": "check-if-matrix-is-x-matrix",
            "content": "<p>A square matrix is said to be an <strong>X-Matrix</strong> if <strong>both</strong> of the following conditions hold:</p>\n\n<ol>\n\t<li>All the elements in the diagonals of the matrix are <strong>non-zero</strong>.</li>\n\t<li>All other elements are 0.</li>\n</ol>\n\n<p>Given a 2D integer array <code>grid</code> of size <code>n x n</code> representing a square matrix, return <code>true</code><em> if </em><code>grid</code><em> is an X-Matrix</em>. Otherwise, return <code>false</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2022/05/03/ex1.jpg\" style=\"width: 311px; height: 320px;\" />\n<pre>\n<strong>Input:</strong> grid = [[2,0,0,1],[0,3,1,0],[0,5,2,0],[4,0,0,2]]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> Refer to the diagram above. \nAn X-Matrix should have the green elements (diagonals) be non-zero and the red elements be 0.\nThus, grid is an X-Matrix.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2022/05/03/ex2.jpg\" style=\"width: 238px; height: 246px;\" />\n<pre>\n<strong>Input:</strong> grid = [[5,7,0],[0,3,1],[0,5,0]]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> Refer to the diagram above.\nAn X-Matrix should have the green elements (diagonals) be non-zero and the red elements be 0.\nThus, grid is not an X-Matrix.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == grid.length == grid[i].length</code></li>\n\t<li><code>3 &lt;= n &lt;= 100</code></li>\n\t<li><code>0 &lt;= grid[i][j] &lt;= 10<sup>5</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 466,
            "dislikes": 21,
            "similarQuestions": "[{\"title\": \"Matrix Diagonal Sum\", \"titleSlug\": \"matrix-diagonal-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "stats": "{\"totalAccepted\": \"47.3K\", \"totalSubmission\": \"72.3K\", \"totalAcceptedRaw\": 47277, \"totalSubmissionRaw\": 72293, \"acRate\": \"65.4%\"}",
            "hints": [
                "Assuming a 0-indexed matrix, for a given cell on row i and column j, it is in a diagonal if and only if i == j or i == n - 1 - j.",
                "We can then iterate through the elements in the matrix to check if all the elements in the diagonals are non-zero and all other elements are zero."
            ],
            "rephrased": {
                "body": "A square matrix is an X-Matrix if its diagonals contain non-zero elements, and all other elements are zero. Given a square matrix represented as a 2D integer array `grid`, determine if it is an X-Matrix.",
                "constraints": [
                    "n == grid.length == grid[i].length",
                    "3 <= n <= 100",
                    "0 <= grid[i][j] <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "[[2,0,0,1],[0,3,1,0],[0,5,2,0],[4,0,0,2]]",
                        "output": "true",
                        "explanation": "The diagonals (2, 3, 2, 2) are non-zero, and all other elements are zero. Therefore, it is an X-Matrix."
                    },
                    {
                        "input": "[[5,7,0],[0,3,1],[0,5,0]]",
                        "output": "false",
                        "explanation": "The matrix has non-zero elements outside of the diagonals (e.g., 7 and 1), so it is not an X-Matrix."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Easy",
                "titleSlug": "matrix-diagonal-sum",
                "title": "Matrix Diagonal Sum",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "Assuming a 0-indexed matrix, for a given cell on row i and column j, it is in a diagonal if and only if i == j or i == n - 1 - j.",
            "We can then iterate through the elements in the matrix to check if all the elements in the diagonals are non-zero and all other elements are zero."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  bool checkXMatrix(vector<vector<int>>& grid) {\n    const int n = grid.size();\n\n    for (int i = 0; i < n; ++i)\n      for (int j = 0; j < n; ++j)\n        if (i == j || i + j == n - 1) {  // In diagonal\n          if (grid[i][j] == 0)\n            return false;\n        } else if (grid[i][j]) {  // Not in diagonal\n          return false;\n        }\n\n    return true;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public boolean checkXMatrix(int[][] grid) {\n    final int n = grid.length;\n\n    for (int i = 0; i < n; ++i)\n      for (int j = 0; j < n; ++j)\n        if (i == j || i + j == n - 1) { // In diagonal\n          if (grid[i][j] == 0)\n            return false;\n        } else if (grid[i][j] > 0) { // Not in diagonal\n          return false;\n        }\n\n    return true;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def checkXMatrix(self, grid: List[List[int]]) -> bool:\n    n = len(grid)\n\n    for i in range(n):\n      for j in range(n):\n        if i == j or i + j == n - 1:  # In diagonal\n          if grid[i][j] == 0:\n            return False\n        elif grid[i][j]:   # Not in diagonal\n          return False\n\n    return True\n",
                "lang_text": "py"
            }
        }
    }
}