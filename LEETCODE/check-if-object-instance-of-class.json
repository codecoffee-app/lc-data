{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2618",
            "title": "Check if Object Instance of Class",
            "titleSlug": "check-if-object-instance-of-class",
            "content": "<p>Write a function that checks if a given value&nbsp;is an instance of a given class or superclass. For this problem, an object is considered an instance of a given class if that object has access to that class&#39;s methods.</p>\n\n<p>There are&nbsp;no constraints on the data types that can be passed to the function. For example, the value or the class could be&nbsp;<code>undefined</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> func = () =&gt; checkIfInstanceOf(new Date(), Date)\n<strong>Output:</strong> true\n<strong>Explanation: </strong>The object returned by the Date constructor is, by definition, an instance of Date.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> func = () =&gt; { class Animal {}; class Dog extends Animal {}; return checkIfInstanceOf(new Dog(), Animal); }\n<strong>Output:</strong> true\n<strong>Explanation:</strong>\nclass Animal {};\nclass Dog extends Animal {};\ncheckIfInstanceOf(new Dog(), Animal); // true\n\nDog is a subclass of Animal. Therefore, a Dog object is an instance of both Dog and Animal.</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> func = () =&gt; checkIfInstanceOf(Date, Date)\n<strong>Output:</strong> false\n<strong>Explanation: </strong>A date constructor cannot logically be an instance of itself.\n</pre>\n\n<p><strong class=\"example\">Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> func = () =&gt; checkIfInstanceOf(5, Number)\n<strong>Output:</strong> true\n<strong>Explanation: </strong>5 is a Number. Note that the &quot;instanceof&quot; keyword would return false. However, it is still considered an instance of Number because it accesses the Number methods. For example &quot;toFixed()&quot;.\n</pre>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 250,
            "dislikes": 95,
            "similarQuestions": "[]",
            "topicTags": [],
            "stats": "{\"totalAccepted\": \"18.2K\", \"totalSubmission\": \"65K\", \"totalAcceptedRaw\": 18241, \"totalSubmissionRaw\": 65011, \"acRate\": \"28.1%\"}",
            "hints": [
                "In Javascript, inheritance is achieved with the prototype chain.",
                "You can get the prototype of an object with the Object.getPrototypeOf(obj) function. Alternatively, you can code obj['__proto__'].",
                "You can compare an object's __proto__ with classFunction.prototype.",
                "Traverse the entire prototype chain until you find a match."
            ],
            "rephrased": {
                "body": "Write a function `checkIfInstanceOf(obj, classFunction)` that determines if a given value `obj` is an instance of a given class or its superclass, represented by `classFunction`. An object is considered an instance of a class if it has access to the class's methods.",
                "constraints": [],
                "testcases": [
                    {
                        "input": "() => checkIfInstanceOf(new Date(), Date)",
                        "output": "true",
                        "explanation": "A Date object created using the `new Date()` constructor is an instance of the Date class."
                    },
                    {
                        "input": "() => { class Animal {}; class Dog extends Animal {}; return checkIfInstanceOf(new Dog(), Animal); }",
                        "output": "true",
                        "explanation": "A Dog object, where Dog inherits from Animal, is considered an instance of both the Dog and Animal classes due to inheritance."
                    },
                    {
                        "input": "() => checkIfInstanceOf(Date, Date)",
                        "output": "false",
                        "explanation": "The Date constructor itself is not considered an instance of the Date class."
                    },
                    {
                        "input": "() => checkIfInstanceOf(5, Number)",
                        "output": "true",
                        "explanation": "The number 5 is considered an instance of the Number class as it can access Number methods like `toFixed()`."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "In Javascript, inheritance is achieved with the prototype chain.",
            "You can get the prototype of an object with the Object.getPrototypeOf(obj) function. Alternatively, you can code obj['__proto__'].",
            "You can compare an object's __proto__ with classFunction.prototype.",
            "Traverse the entire prototype chain until you find a match."
        ],
        "relatedTopics": [],
        "solutions": {}
    }
}