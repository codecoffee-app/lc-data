{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2543",
            "title": "Check if Point Is Reachable",
            "titleSlug": "check-if-point-is-reachable",
            "content": "<p>There exists an infinitely large grid. You are currently at point <code>(1, 1)</code>, and you need to reach the point <code>(targetX, targetY)</code> using a finite number of steps.</p>\n\n<p>In one <strong>step</strong>, you can move from point <code>(x, y)</code> to any one of the following points:</p>\n\n<ul>\n\t<li><code>(x, y - x)</code></li>\n\t<li><code>(x - y, y)</code></li>\n\t<li><code>(2 * x, y)</code></li>\n\t<li><code>(x, 2 * y)</code></li>\n</ul>\n\n<p>Given two integers <code>targetX</code> and <code>targetY</code> representing the X-coordinate and Y-coordinate of your final position, return <code>true</code> <em>if you can reach the point from</em> <code>(1, 1)</code> <em>using some number of steps, and </em><code>false</code><em> otherwise</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> targetX = 6, targetY = 9\n<strong>Output:</strong> false\n<strong>Explanation:</strong> It is impossible to reach (6,9) from (1,1) using any sequence of moves, so false is returned.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> targetX = 4, targetY = 7\n<strong>Output:</strong> true\n<strong>Explanation:</strong> You can follow the path (1,1) -&gt; (1,2) -&gt; (1,4) -&gt; (1,8) -&gt; (1,7) -&gt; (2,7) -&gt; (4,7).\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= targetX, targetY&nbsp;&lt;= 10<sup>9</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 235,
            "dislikes": 48,
            "similarQuestions": "[{\"title\": \"Reaching Points\", \"titleSlug\": \"reaching-points\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Number Theory",
                    "slug": "number-theory"
                }
            ],
            "stats": "{\"totalAccepted\": \"6.9K\", \"totalSubmission\": \"16.6K\", \"totalAcceptedRaw\": 6897, \"totalSubmissionRaw\": 16557, \"acRate\": \"41.7%\"}",
            "hints": [
                "Let\u2019s go in reverse order, from (targetX, targetY) to (1, 1). So, now we can move from (x, y) to (x+y, y), (x, y+x), (x/2, y) if x is even, and (x, y/2) if y is even.",
                "When is it optimal to use the third and fourth operations?",
                "Think how GCD of (x, y) is affected if we apply the first two operations.",
                "How can we check if we can reach (1, 1) using the GCD value calculate above?"
            ],
            "rephrased": {
                "body": "You are situated at point (1, 1) on an infinitely large grid. Your goal is to reach the point (targetX, targetY) using a finite number of steps. In each step, you can move from your current location (x, y) to one of the following positions:\n\n(x, y - x)\n(x - y, y)\n(2 * x, y)\n(x, 2 * y)\n\nDetermine whether it's possible to reach (targetX, targetY) from (1, 1) through a sequence of these moves.",
                "constraints": [
                    "1 <= targetX, targetY <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "targetX = 6, targetY = 9",
                        "output": "false",
                        "explanation": "It is not possible to reach (6, 9) from (1, 1) using any combination of the available moves."
                    },
                    {
                        "input": "targetX = 4, targetY = 7",
                        "output": "true",
                        "explanation": "A possible path to reach (4, 7) is: (1, 1) -> (1, 2) -> (1, 4) -> (1, 8) -> (1, 7) -> (2, 7) -> (4, 7)."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Hard",
                "titleSlug": "reaching-points",
                "title": "Reaching Points",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "Let\u2019s go in reverse order, from (targetX, targetY) to (1, 1). So, now we can move from (x, y) to (x+y, y), (x, y+x), (x/2, y) if x is even, and (x, y/2) if y is even.",
            "When is it optimal to use the third and fourth operations?",
            "Think how GCD of (x, y) is affected if we apply the first two operations.",
            "How can we check if we can reach (1, 1) using the GCD value calculate above?"
        ],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  bool isReachable(int targetX, int targetY) {\n    return __builtin_popcount(gcd(targetX, targetY)) == 1;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public boolean isReachable(int targetX, int targetY) {\n    return Integer.bitCount(gcd(targetX, targetY)) == 1;\n  }\n\n  private int gcd(int a, int b) {\n    return b == 0 ? a : gcd(b, a % b);\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def isReachable(self, targetX: int, targetY: int) -> bool:\n    return math.gcd(targetX, targetY).bit_count() == 1\n",
                "lang_text": "py"
            }
        }
    }
}