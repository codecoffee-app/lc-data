{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2677",
            "title": "Chunk Array",
            "titleSlug": "chunk-array",
            "content": "<p>Given an array <code>arr</code> and&nbsp;a chunk size&nbsp;<code>size</code>, return a&nbsp;<strong>chunked</strong> array. A&nbsp;<strong>chunked</strong>&nbsp;array contains the original elements in&nbsp;<code>arr</code>, but&nbsp;consists of subarrays each of length&nbsp;<code>size</code>. The length of the last subarray may be less than&nbsp;<code>size</code>&nbsp;if <code>arr.length</code>&nbsp;is not evenly divisible by <code>size</code>.</p>\n\n<p>You may assume the&nbsp;array&nbsp;is&nbsp;the output of&nbsp;<code>JSON.parse</code>. In other words, it is valid JSON.</p>\n\n<p>Please solve it without using lodash&#39;s&nbsp;<code>_.chunk</code>&nbsp;function.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1,2,3,4,5], size = 1\n<strong>Output:</strong> [[1],[2],[3],[4],[5]]\n<strong>Explanation:</strong> The arr has been split into subarrays each with 1 element.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1,9,6,3,2], size = 3\n<strong>Output:</strong> [[1,9,6],[3,2]]\n<strong>Explanation:</strong> The arr has been split into subarrays with 3 elements. However, only two elements are left for the 2nd subarray.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [8,5,3,2,6], size = 6\n<strong>Output:</strong> [[8,5,3,2,6]]\n<strong>Explanation:</strong> Size is greater than arr.length thus all elements are in the first subarray.\n</pre>\n\n<p><strong class=\"example\">Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [], size = 1\n<strong>Output:</strong> []\n<strong>Explanation:</strong> There are no elements to be chunked so an empty array is returned.</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>arr</code> is a valid JSON array</li>\n\t<li><code>2 &lt;= JSON.stringify(arr).length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= size &lt;= arr.length + 1</code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 296,
            "dislikes": 4,
            "similarQuestions": "[]",
            "topicTags": [],
            "stats": "{\"totalAccepted\": \"34.4K\", \"totalSubmission\": \"41.7K\", \"totalAcceptedRaw\": 34419, \"totalSubmissionRaw\": 41723, \"acRate\": \"82.5%\"}",
            "hints": [],
            "rephrased": {
                "body": "Given an array `arr` and a chunk size `size`, divide the array into smaller subarrays (chunks), each containing at most `size` elements. The original order of elements in `arr` should be preserved. The last chunk may have fewer than `size` elements if `arr.length` is not divisible by `size`.",
                "constraints": [
                    "`arr` is a valid JSON array",
                    "`2 <= JSON.stringify(arr).length <= 10^5`",
                    "`1 <= size <= arr.length + 1`"
                ],
                "testcases": [
                    {
                        "input": "arr = [1,2,3,4,5], size = 1",
                        "output": "[[1],[2],[3],[4],[5]]",
                        "explanation": "The array is split into subarrays, each containing a single element."
                    },
                    {
                        "input": "arr = [1,9,6,3,2], size = 3",
                        "output": "[[1,9,6],[3,2]]",
                        "explanation": "The array is split into subarrays with a maximum of 3 elements. The last subarray contains the remaining 2 elements."
                    },
                    {
                        "input": "arr = [8,5,3,2,6], size = 6",
                        "output": "[[8,5,3,2,6]]",
                        "explanation": "The chunk size is greater than the array length, so all elements are placed in a single subarray."
                    },
                    {
                        "input": "arr = [], size = 1",
                        "output": "[]",
                        "explanation": "The input array is empty, so an empty array is returned."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [],
        "solutions": {}
    }
}