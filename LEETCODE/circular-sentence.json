{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2490",
            "title": "Circular Sentence",
            "titleSlug": "circular-sentence",
            "content": "<p>A <strong>sentence</strong> is a list of words that are separated by a<strong> single</strong> space with no leading or trailing spaces.</p>\n\n<ul>\n\t<li>For example, <code>&quot;Hello World&quot;</code>, <code>&quot;HELLO&quot;</code>, <code>&quot;hello world hello world&quot;</code> are all sentences.</li>\n</ul>\n\n<p>Words consist of <strong>only</strong> uppercase and lowercase English letters. Uppercase and lowercase English letters are considered different.</p>\n\n<p>A sentence is <strong>circular </strong>if:</p>\n\n<ul>\n\t<li>The last character of a word is equal to the first character of the next word.</li>\n\t<li>The last character of the last word is equal to the first character of the first word.</li>\n</ul>\n\n<p>For example, <code>&quot;leetcode exercises sound delightful&quot;</code>, <code>&quot;eetcode&quot;</code>, <code>&quot;leetcode eats soul&quot; </code>are all circular sentences. However, <code>&quot;Leetcode is cool&quot;</code>, <code>&quot;happy Leetcode&quot;</code>, <code>&quot;Leetcode&quot;</code> and <code>&quot;I like Leetcode&quot;</code> are <strong>not</strong> circular sentences.</p>\n\n<p>Given a string <code>sentence</code>, return <code>true</code><em> if it is circular</em>. Otherwise, return <code>false</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> sentence = &quot;leetcode exercises sound delightful&quot;\n<strong>Output:</strong> true\n<strong>Explanation:</strong> The words in sentence are [&quot;leetcode&quot;, &quot;exercises&quot;, &quot;sound&quot;, &quot;delightful&quot;].\n- leetcod<u>e</u>&#39;s&nbsp;last character is equal to <u>e</u>xercises&#39;s first character.\n- exercise<u>s</u>&#39;s&nbsp;last character is equal to <u>s</u>ound&#39;s first character.\n- soun<u>d</u>&#39;s&nbsp;last character is equal to <u>d</u>elightful&#39;s first character.\n- delightfu<u>l</u>&#39;s&nbsp;last character is equal to <u>l</u>eetcode&#39;s first character.\nThe sentence is circular.</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> sentence = &quot;eetcode&quot;\n<strong>Output:</strong> true\n<strong>Explanation:</strong> The words in sentence are [&quot;eetcode&quot;].\n- eetcod<u>e</u>&#39;s&nbsp;last character is equal to <u>e</u>etcode&#39;s first character.\nThe sentence is circular.</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> sentence = &quot;Leetcode is cool&quot;\n<strong>Output:</strong> false\n<strong>Explanation:</strong> The words in sentence are [&quot;Leetcode&quot;, &quot;is&quot;, &quot;cool&quot;].\n- Leetcod<u>e</u>&#39;s&nbsp;last character is <strong>not</strong> equal to <u>i</u>s&#39;s first character.\nThe sentence is <strong>not</strong> circular.</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= sentence.length &lt;= 500</code></li>\n\t<li><code>sentence</code> consist of only lowercase and uppercase English letters and spaces.</li>\n\t<li>The words in <code>sentence</code> are separated by a single space.</li>\n\t<li>There are no leading or trailing spaces.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 339,
            "dislikes": 8,
            "similarQuestions": "[{\"title\": \"Defuse the Bomb\", \"titleSlug\": \"defuse-the-bomb\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "stats": "{\"totalAccepted\": \"35K\", \"totalSubmission\": \"55.6K\", \"totalAcceptedRaw\": 34950, \"totalSubmissionRaw\": 55568, \"acRate\": \"62.9%\"}",
            "hints": [
                "Check the character before the empty space and the character after the empty space.",
                "Check the first character and the last character of the sentence."
            ],
            "rephrased": {
                "body": "A sentence is a sequence of words separated by single spaces, with no leading or trailing spaces. Words consist only of uppercase and lowercase English letters, which are considered distinct.\n\nA sentence is considered circular if the last character of each word matches the first character of the following word, and the last character of the final word matches the first character of the initial word.\n\nGiven a string `sentence`, determine if it is circular.",
                "constraints": [
                    "1 <= sentence.length <= 500",
                    "sentence consists only of lowercase and uppercase English letters and spaces.",
                    "The words in sentence are separated by a single space.",
                    "There are no leading or trailing spaces."
                ],
                "testcases": [
                    {
                        "input": "leetcode exercises sound delightful",
                        "output": "true",
                        "explanation": "The words are ['leetcode', 'exercises', 'sound', 'delightful']. 'e' matches 'e', 's' matches 's', 'd' matches 'd', and 'l' matches 'l', making the sentence circular."
                    },
                    {
                        "input": "eetcode",
                        "output": "true",
                        "explanation": "The only word is 'eetcode'. 'e' matches 'e', making the sentence circular."
                    },
                    {
                        "input": "Leetcode is cool",
                        "output": "false",
                        "explanation": "The words are ['Leetcode', 'is', 'cool']. 'e' does not match 'i', making the sentence non-circular."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Easy",
                "titleSlug": "defuse-the-bomb",
                "title": "Defuse the Bomb",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "Check the character before the empty space and the character after the empty space.",
            "Check the first character and the last character of the sentence."
        ],
        "relatedTopics": [
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  bool isCircularSentence(string sentence) {\n    for (int i = 0; i < sentence.length(); ++i)\n      if (sentence[i] == ' ' && sentence[i - 1] != sentence[i + 1])\n        return false;\n    return sentence.front() == sentence.back();\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public boolean isCircularSentence(String sentence) {\n    for (int i = 0; i < sentence.length(); ++i)\n      if (sentence.charAt(i) == ' ' && sentence.charAt(i - 1) != sentence.charAt(i + 1))\n        return false;\n    return sentence.charAt(0) == sentence.charAt(sentence.length() - 1);\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def isCircularSentence(self, sentence: str) -> bool:\n    for i, c in enumerate(sentence):\n      if c == ' ' and sentence[i - 1] != sentence[i + 1]:\n        return False\n    return sentence[0] == sentence[-1]\n",
                "lang_text": "py"
            }
        }
    }
}