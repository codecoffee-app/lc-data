{
    "failed": false,
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "3174",
            "title": "Clear Digits",
            "titleSlug": "clear-digits",
            "content": "<p>You are given a string <code>s</code>.</p>\n\n<p>Your task is to remove <strong>all</strong> digits by doing this operation repeatedly:</p>\n\n<ul>\n\t<li>Delete the <em>first</em> digit and the <strong>closest</strong> <b>non-digit</b> character to its <em>left</em>.</li>\n</ul>\n\n<p>Return the resulting string after removing all digits.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">s = &quot;abc&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">&quot;abc&quot;</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>There is no digit in the string.<!-- notionvc: ff07e34f-b1d6-41fb-9f83-5d0ba3c1ecde --></p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">s = &quot;cb34&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">&quot;&quot;</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>First, we apply the operation on <code>s[2]</code>, and <code>s</code> becomes <code>&quot;c4&quot;</code>.</p>\n\n<p>Then we apply the operation on <code>s[1]</code>, and <code>s</code> becomes <code>&quot;&quot;</code>.</p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 100</code></li>\n\t<li><code>s</code> consists only of lowercase English letters and digits.</li>\n\t<li>The input is generated such that it is possible to delete all digits.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 52,
            "dislikes": 0,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "stats": "{\"totalAccepted\": \"40K\", \"totalSubmission\": \"55K\", \"totalAcceptedRaw\": 39984, \"totalSubmissionRaw\": 55005, \"acRate\": \"72.7%\"}",
            "hints": [
                "Process string <code>s</code> from left to right, if <code>s[i]</code> is a digit, mark the nearest unmarked non-digit index to its left.",
                "Delete all digits and all marked characters."
            ],
            "rephrased": {
                "body": "Given a string `s` consisting of lowercase English letters and digits, repeatedly remove all digits using the following operation: Delete the first digit encountered and the closest non-digit character to its left. Return the resulting string after all digits have been removed.",
                "constraints": [
                    "1 <= s.length <= 100",
                    "s consists only of lowercase English letters and digits.",
                    "It is guaranteed that all digits can be deleted."
                ],
                "testcases": [
                    {
                        "input": "abc",
                        "output": "abc",
                        "explanation": "The input string contains no digits, so no operations are performed. The original string is returned."
                    },
                    {
                        "input": "cb34",
                        "output": "",
                        "explanation": "First, the digit '3' at index 2 is removed, along with the closest non-digit to its left, 'c'. The string becomes '4'. Then, the digit '4' at index 0 is removed, resulting in an empty string."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "Process string <code>s</code> from left to right, if <code>s[i]</code> is a digit, mark the nearest unmarked non-digit index to its left.",
            "Delete all digits and all marked characters."
        ],
        "relatedTopics": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  string clearDigits(string s) {\n    string ans;\n\n    for (const char c : s)\n      if (isdigit(c))\n        // Since `ans` only contains non-digit characters, popping the last\n        // character is equivalent to deleting the closest non-digit character.\n        ans.pop_back();\n      else\n        ans += c;\n\n    return ans;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public String clearDigits(String s) {\n    StringBuilder sb = new StringBuilder();\n\n    for (final char c : s.toCharArray())\n      if (Character.isDigit(c))\n        // Since `sb` only contains non-digit characters, popping the last\n        // character is equivalent to deleting the closest non-digit character.\n        sb.setLength(sb.length() - 1);\n      else\n        sb.append(c);\n\n    return sb.toString();\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def clearDigits(self, s: str) -> str:\n    ans = []\n\n    for c in s:\n      if c.isdigit():\n        # Since `ans` only contains non-digit characters, removing the last\n        # character is equivalent to deleting the closest non-digit character.\n        ans.pop()\n      else:\n        ans.append(c)\n\n    return ''.join(ans)\n",
                "lang_text": "py"
            }
        }
    }
}