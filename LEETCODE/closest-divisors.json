{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1362",
            "title": "Closest Divisors",
            "titleSlug": "closest-divisors",
            "content": "<p>Given an integer <code>num</code>, find the closest two integers in absolute difference whose product equals&nbsp;<code>num + 1</code>&nbsp;or <code>num + 2</code>.</p>\n\n<p>Return the two integers in any order.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = 8\n<strong>Output:</strong> [3,3]\n<strong>Explanation:</strong> For num + 1 = 9, the closest divisors are 3 &amp; 3, for num + 2 = 10, the closest divisors are 2 &amp; 5, hence 3 &amp; 3 is chosen.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = 123\n<strong>Output:</strong> [5,25]\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = 999\n<strong>Output:</strong> [40,25]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= num &lt;= 10^9</code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 307,
            "dislikes": 95,
            "similarQuestions": "[{\"title\": \"Distinct Prime Factors of Product of Array\", \"titleSlug\": \"distinct-prime-factors-of-product-of-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "stats": "{\"totalAccepted\": \"21K\", \"totalSubmission\": \"34.7K\", \"totalAcceptedRaw\": 20967, \"totalSubmissionRaw\": 34685, \"acRate\": \"60.4%\"}",
            "hints": [
                "Find the divisors of n+1 and n+2.",
                "To find the divisors of a number, you only need to iterate to the square root of that number."
            ],
            "rephrased": {
                "body": "Given an integer `num`, the goal is to find two integers with the smallest possible absolute difference whose product is either `num + 1` or `num + 2`. Return these two integers in any order.",
                "constraints": [
                    "1 <= num <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "8",
                        "output": "[3, 3]",
                        "explanation": "When `num` is 8, we consider `num + 1 = 9` and `num + 2 = 10`. For 9, the closest factors are 3 and 3 (difference 0). For 10, the closest factors are 2 and 5 (difference 3). Since the difference between 3 and 3 is smaller, we return [3, 3]."
                    },
                    {
                        "input": "123",
                        "output": "[5, 25]",
                        "explanation": null
                    },
                    {
                        "input": "999",
                        "output": "[25, 40]",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "distinct-prime-factors-of-product-of-array",
                "title": "Distinct Prime Factors of Product of Array",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "Find the divisors of n+1 and n+2.",
            "To find the divisors of a number, you only need to iterate to the square root of that number."
        ],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  vector<int> closestDivisors(int num) {\n    for (int root = sqrt(num + 2); root > 0; --root)\n      for (int cand : {num + 1, num + 2})\n        if (cand % root == 0)\n          return {root, cand / root};\n\n    throw;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int[] closestDivisors(int num) {\n    for (int root = (int) Math.sqrt(num + 2); root > 0; --root)\n      for (int cand : new int[] {num + 1, num + 2})\n        if (cand % root == 0)\n          return new int[] {root, cand / root};\n\n    throw new IllegalArgumentException();\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def closestDivisors(self, num: int) -> List[int]:\n    for root in reversed(range(int(sqrt(num + 2)) + 1)):\n      for cand in [num + 1, num + 2]:\n        if cand % root == 0:\n          return [root, cand // root]\n",
                "lang_text": "py"
            }
        }
    }
}