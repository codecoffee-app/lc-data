{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "537",
            "title": "Complex Number Multiplication",
            "titleSlug": "complex-number-multiplication",
            "content": "<p>A <a href=\"https://en.wikipedia.org/wiki/Complex_number\" target=\"_blank\">complex number</a> can be represented as a string on the form <code>&quot;<strong>real</strong>+<strong>imaginary</strong>i&quot;</code> where:</p>\n\n<ul>\n\t<li><code>real</code> is the real part and is an integer in the range <code>[-100, 100]</code>.</li>\n\t<li><code>imaginary</code> is the imaginary part and is an integer in the range <code>[-100, 100]</code>.</li>\n\t<li><code>i<sup>2</sup> == -1</code>.</li>\n</ul>\n\n<p>Given two complex numbers <code>num1</code> and <code>num2</code> as strings, return <em>a string of the complex number that represents their multiplications</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> num1 = &quot;1+1i&quot;, num2 = &quot;1+1i&quot;\n<strong>Output:</strong> &quot;0+2i&quot;\n<strong>Explanation:</strong> (1 + i) * (1 + i) = 1 + i2 + 2 * i = 2i, and you need convert it to the form of 0+2i.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> num1 = &quot;1+-1i&quot;, num2 = &quot;1+-1i&quot;\n<strong>Output:</strong> &quot;0+-2i&quot;\n<strong>Explanation:</strong> (1 - i) * (1 - i) = 1 + i2 - 2 * i = -2i, and you need convert it to the form of 0+-2i.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>num1</code> and <code>num2</code> are valid complex numbers.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 687,
            "dislikes": 1240,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "stats": "{\"totalAccepted\": \"92.3K\", \"totalSubmission\": \"128.9K\", \"totalAcceptedRaw\": 92335, \"totalSubmissionRaw\": 128927, \"acRate\": \"71.6%\"}",
            "hints": [],
            "rephrased": {
                "body": "A complex number is represented as a string in the format \"real+imaginaryi\", where 'real' is the real part (an integer in the range [-100, 100]), and 'imaginary' is the imaginary part (an integer in the range [-100, 100]). Given two complex numbers, `num1` and `num2`, as strings, return the string representation of their product, also in the \"real+imaginaryi\" format.",
                "constraints": [
                    "num1 and num2 are valid complex numbers."
                ],
                "testcases": [
                    {
                        "input": "num1 = \"1+1i\", num2 = \"1+1i\"",
                        "output": "\"0+2i\"",
                        "explanation": "Multiplying (1 + i) * (1 + i) results in 1 + i^2 + 2i = 1 - 1 + 2i = 0 + 2i."
                    },
                    {
                        "input": "num1 = \"1+-1i\", num2 = \"1+-1i\"",
                        "output": "\"0+-2i\"",
                        "explanation": "Multiplying (1 - i) * (1 - i) results in 1 + i^2 - 2i = 1 - 1 - 2i = 0 - 2i."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  string complexNumberMultiply(string a, string b) {\n    const auto& [A, B] = getRealAndImag(a);\n    const auto& [C, D] = getRealAndImag(b);\n    return to_string(A * C - B * D) + \"+\" + to_string(A * D + B * C) + \"i\";\n  }\n\n private:\n  pair<int, int> getRealAndImag(const string& s) {\n    const string& real = s.substr(0, s.find_first_of('+'));\n    const string& imag = s.substr(s.find_first_of('+') + 1);\n    return {stoi(real), stoi(imag)};\n  };\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public String complexNumberMultiply(String a, String b) {\n    int[] A = getRealAndImag(a);\n    int[] B = getRealAndImag(b);\n    return String.valueOf(A[0] * B[0] - A[1] * B[1]) + \"+\" +\n        String.valueOf(A[0] * B[1] + A[1] * B[0]) + \"i\";\n  }\n\n  private int[] getRealAndImag(final String s) {\n    final String real = s.substring(0, s.indexOf('+'));\n    final String imag = s.substring(s.indexOf('+') + 1, s.length() - 1);\n    return new int[] {Integer.valueOf(real), Integer.valueOf(imag)};\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def complexNumberMultiply(self, a: str, b: str) -> str:\n    def getRealAndImag(s: str) -> tuple:\n      return int(s[:s.index('+')]), int(s[s.index('+') + 1:-1])\n\n    A, B = getRealAndImag(a)\n    C, D = getRealAndImag(b)\n\n    return str(A * C - B * D) + '+' + str(A * D + B * C) + 'i'\n",
                "lang_text": "py"
            }
        }
    }
}