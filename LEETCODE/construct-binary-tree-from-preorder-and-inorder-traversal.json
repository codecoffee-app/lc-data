{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "105",
            "title": "Construct Binary Tree from Preorder and Inorder Traversal",
            "titleSlug": "construct-binary-tree-from-preorder-and-inorder-traversal",
            "content": "<p>Given two integer arrays <code>preorder</code> and <code>inorder</code> where <code>preorder</code> is the preorder traversal of a binary tree and <code>inorder</code> is the inorder traversal of the same tree, construct and return <em>the binary tree</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/02/19/tree.jpg\" style=\"width: 277px; height: 302px;\" />\n<pre>\n<strong>Input:</strong> preorder = [3,9,20,15,7], inorder = [9,3,15,20,7]\n<strong>Output:</strong> [3,9,20,null,null,15,7]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> preorder = [-1], inorder = [-1]\n<strong>Output:</strong> [-1]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= preorder.length &lt;= 3000</code></li>\n\t<li><code>inorder.length == preorder.length</code></li>\n\t<li><code>-3000 &lt;= preorder[i], inorder[i] &lt;= 3000</code></li>\n\t<li><code>preorder</code> and <code>inorder</code> consist of <strong>unique</strong> values.</li>\n\t<li>Each value of <code>inorder</code> also appears in <code>preorder</code>.</li>\n\t<li><code>preorder</code> is <strong>guaranteed</strong> to be the preorder traversal of the tree.</li>\n\t<li><code>inorder</code> is <strong>guaranteed</strong> to be the inorder traversal of the tree.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 14351,
            "dislikes": 449,
            "similarQuestions": "[{\"title\": \"Construct Binary Tree from Inorder and Postorder Traversal\", \"titleSlug\": \"construct-binary-tree-from-inorder-and-postorder-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Divide and Conquer",
                    "slug": "divide-and-conquer"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "stats": "{\"totalAccepted\": \"1.1M\", \"totalSubmission\": \"1.8M\", \"totalAcceptedRaw\": 1121019, \"totalSubmissionRaw\": 1776034, \"acRate\": \"63.1%\"}",
            "hints": [],
            "rephrased": {
                "body": "Given the preorder and inorder traversals of a binary tree, construct and return the binary tree. The `preorder` array represents the preorder traversal, and the `inorder` array represents the inorder traversal of the same tree. You must build the tree based on these traversals.",
                "constraints": [
                    "1 <= preorder.length <= 3000",
                    "inorder.length == preorder.length",
                    "-3000 <= preorder[i], inorder[i] <= 3000",
                    "preorder and inorder consist of unique values.",
                    "Each value of inorder also appears in preorder.",
                    "preorder is guaranteed to be the preorder traversal of the tree.",
                    "inorder is guaranteed to be the inorder traversal of the tree."
                ],
                "testcases": [
                    {
                        "input": {
                            "preorder": "[3,9,20,15,7]",
                            "inorder": "[9,3,15,20,7]"
                        },
                        "output": "[3,9,20,null,null,15,7]",
                        "explanation": "The binary tree constructed from the given preorder and inorder traversals is represented by the output array."
                    },
                    {
                        "input": {
                            "preorder": "[-1]",
                            "inorder": "[-1]"
                        },
                        "output": "[-1]",
                        "explanation": "A single node tree with value -1."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "construct-binary-tree-from-inorder-and-postorder-traversal",
                "title": "Construct Binary Tree from Inorder and Postorder Traversal",
                "isPaidOnly": false
            }
        ],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Divide and Conquer",
                "slug": "divide-and-conquer"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ]
    }
}