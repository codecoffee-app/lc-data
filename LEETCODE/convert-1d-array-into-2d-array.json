{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2022",
            "title": "Convert 1D Array Into 2D Array",
            "titleSlug": "convert-1d-array-into-2d-array",
            "content": "<p>You are given a <strong>0-indexed</strong> 1-dimensional (1D) integer array <code>original</code>, and two integers, <code>m</code> and <code>n</code>. You are tasked with creating a 2-dimensional (2D) array with <code> m</code> rows and <code>n</code> columns using <strong>all</strong> the elements from <code>original</code>.</p>\n\n<p>The elements from indices <code>0</code> to <code>n - 1</code> (<strong>inclusive</strong>) of <code>original</code> should form the first row of the constructed 2D array, the elements from indices <code>n</code> to <code>2 * n - 1</code> (<strong>inclusive</strong>) should form the second row of the constructed 2D array, and so on.</p>\n\n<p>Return <em>an </em><code>m x n</code><em> 2D array constructed according to the above procedure, or an empty 2D array if it is impossible</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img src=\"https://assets.leetcode.com/uploads/2021/08/26/image-20210826114243-1.png\" style=\"width: 500px; height: 174px;\" />\n<pre>\n<strong>Input:</strong> original = [1,2,3,4], m = 2, n = 2\n<strong>Output:</strong> [[1,2],[3,4]]\n<strong>Explanation:</strong> The constructed 2D array should contain 2 rows and 2 columns.\nThe first group of n=2 elements in original, [1,2], becomes the first row in the constructed 2D array.\nThe second group of n=2 elements in original, [3,4], becomes the second row in the constructed 2D array.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> original = [1,2,3], m = 1, n = 3\n<strong>Output:</strong> [[1,2,3]]\n<strong>Explanation:</strong> The constructed 2D array should contain 1 row and 3 columns.\nPut all three elements in original into the first row of the constructed 2D array.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> original = [1,2], m = 1, n = 1\n<strong>Output:</strong> []\n<strong>Explanation:</strong> There are 2 elements in original.\nIt is impossible to fit 2 elements in a 1x1 2D array, so return an empty 2D array.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= original.length &lt;= 5 * 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= original[i] &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= m, n &lt;= 4 * 10<sup>4</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 734,
            "dislikes": 54,
            "similarQuestions": "[{\"title\": \"Reshape the Matrix\", \"titleSlug\": \"reshape-the-matrix\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "stats": "{\"totalAccepted\": \"73.2K\", \"totalSubmission\": \"120.8K\", \"totalAcceptedRaw\": 73187, \"totalSubmissionRaw\": 120780, \"acRate\": \"60.6%\"}",
            "hints": [
                "When is it possible to convert original into a 2D array and when is it impossible?",
                "It is possible if and only if m * n == original.length",
                "If it is possible to convert original to a 2D array, keep an index i such that original[i] is the next element to add to the 2D array."
            ],
            "rephrased": {
                "body": "Given a 0-indexed 1D integer array `original`, and two integers `m` and `n`, reshape `original` into an `m x n` 2D array. The first `n` elements of `original` form the first row, the next `n` elements form the second row, and so on.  Return the reshaped `m x n` 2D array, or an empty array if it's impossible.",
                "constraints": [
                    "1 <= original.length <= 5 * 10^4",
                    "1 <= original[i] <= 10^5",
                    "1 <= m, n <= 4 * 10^4"
                ],
                "testcases": [
                    {
                        "input": "original = [1,2,3,4], m = 2, n = 2",
                        "output": "[[1,2],[3,4]]",
                        "explanation": "The constructed 2D array should contain 2 rows and 2 columns. The first group of n=2 elements in original, [1,2], becomes the first row. The second group of n=2 elements in original, [3,4], becomes the second row."
                    },
                    {
                        "input": "original = [1,2,3], m = 1, n = 3",
                        "output": "[[1,2,3]]",
                        "explanation": "The constructed 2D array should contain 1 row and 3 columns. All three elements in original are placed into the first row."
                    },
                    {
                        "input": "original = [1,2], m = 1, n = 1",
                        "output": "[]",
                        "explanation": "There are 2 elements in original. It is impossible to fit 2 elements in a 1x1 2D array, so an empty array is returned."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Easy",
                "titleSlug": "reshape-the-matrix",
                "title": "Reshape the Matrix",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "When is it possible to convert original into a 2D array and when is it impossible?",
            "It is possible if and only if m * n == original.length",
            "If it is possible to convert original to a 2D array, keep an index i such that original[i] is the next element to add to the 2D array."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  vector<vector<int>> construct2DArray(vector<int>& original, int m, int n) {\n    if (original.size() != m * n)\n      return {};\n\n    vector<vector<int>> ans(m, vector<int>(n));\n\n    for (int i = 0; i < original.size(); ++i)\n      ans[i / n][i % n] = original[i];\n\n    return ans;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int[][] construct2DArray(int[] original, int m, int n) {\n    if (original.length != m * n)\n      return new int[][] {};\n\n    int[][] ans = new int[m][n];\n\n    for (int i = 0; i < original.length; ++i)\n      ans[i / n][i % n] = original[i];\n\n    return ans;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def construct2DArray(self, original: List[int], m: int, n: int) -> List[List[int]]:\n    if len(original) != m * n:\n      return []\n\n    ans = [[0] * n for _ in range(m)]\n\n    for i, num in enumerate(original):\n      ans[i // n][i % n] = num\n\n    return ans\n",
                "lang_text": "py"
            }
        }
    }
}