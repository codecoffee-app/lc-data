{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1109",
            "title": "Corporate Flight Bookings",
            "titleSlug": "corporate-flight-bookings",
            "content": "<p>There are <code>n</code> flights that are labeled from <code>1</code> to <code>n</code>.</p>\n\n<p>You are given an array of flight bookings <code>bookings</code>, where <code>bookings[i] = [first<sub>i</sub>, last<sub>i</sub>, seats<sub>i</sub>]</code> represents a booking for flights <code>first<sub>i</sub></code> through <code>last<sub>i</sub></code> (<strong>inclusive</strong>) with <code>seats<sub>i</sub></code> seats reserved for <strong>each flight</strong> in the range.</p>\n\n<p>Return <em>an array </em><code>answer</code><em> of length </em><code>n</code><em>, where </em><code>answer[i]</code><em> is the total number of seats reserved for flight </em><code>i</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> bookings = [[1,2,10],[2,3,20],[2,5,25]], n = 5\n<strong>Output:</strong> [10,55,45,25,25]\n<strong>Explanation:</strong>\nFlight labels:        1   2   3   4   5\nBooking 1 reserved:  10  10\nBooking 2 reserved:      20  20\nBooking 3 reserved:      25  25  25  25\nTotal seats:         10  55  45  25  25\nHence, answer = [10,55,45,25,25]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> bookings = [[1,2,10],[2,2,15]], n = 2\n<strong>Output:</strong> [10,25]\n<strong>Explanation:</strong>\nFlight labels:        1   2\nBooking 1 reserved:  10  10\nBooking 2 reserved:      15\nTotal seats:         10  25\nHence, answer = [10,25]\n\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 2 * 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= bookings.length &lt;= 2 * 10<sup>4</sup></code></li>\n\t<li><code>bookings[i].length == 3</code></li>\n\t<li><code>1 &lt;= first<sub>i</sub> &lt;= last<sub>i</sub> &lt;= n</code></li>\n\t<li><code>1 &lt;= seats<sub>i</sub> &lt;= 10<sup>4</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 1560,
            "dislikes": 158,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "stats": "{\"totalAccepted\": \"58.5K\", \"totalSubmission\": \"95.8K\", \"totalAcceptedRaw\": 58468, \"totalSubmissionRaw\": 95795, \"acRate\": \"61.0%\"}",
            "hints": [],
            "rephrased": {
                "body": "You are given an array of flight bookings `bookings`, where `bookings[i] = [first_i, last_i, seats_i]` represents a booking for flights `first_i` through `last_i` (inclusive) with `seats_i` seats reserved for each flight in the range. Return an array `answer` of length `n`, where `answer[i]` is the total number of seats reserved for flight `i`. There are `n` flights labeled from `1` to `n`.",
                "constraints": [
                    "1 <= n <= 2 * 10^4",
                    "1 <= bookings.length <= 2 * 10^4",
                    "bookings[i].length == 3",
                    "1 <= first_i <= last_i <= n",
                    "1 <= seats_i <= 10^4"
                ],
                "testcases": [
                    {
                        "input": "bookings = [[1,2,10],[2,3,20],[2,5,25]], n = 5",
                        "output": "[10,55,45,25,25]",
                        "explanation": "Flight 1 has only booking 1 (10 seats). Flight 2 has bookings 1, 2, and 3 (10 + 20 + 25 = 55 seats). Flight 3 has bookings 2 and 3 (20 + 25 = 45 seats). Flights 4 and 5 each have only booking 3 (25 seats each)."
                    },
                    {
                        "input": "bookings = [[1,2,10],[2,2,15]], n = 2",
                        "output": "[10,25]",
                        "explanation": "Flight 1 has only booking 1 (10 seats). Flight 2 has bookings 1 and 2 (10 + 15 = 25 seats)."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  vector<int> corpFlightBookings(vector<vector<int>>& bookings, int n) {\n    vector<int> ans(n);\n\n    for (vector<int>& booking : bookings) {\n      ans[booking[0] - 1] += booking[2];\n      if (booking[1] < n)\n        ans[booking[1]] -= booking[2];\n    }\n\n    for (int i = 1; i < n; ++i)\n      ans[i] += ans[i - 1];\n\n    return ans;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int[] corpFlightBookings(int[][] bookings, int n) {\n    int[] ans = new int[n];\n\n    for (int[] booking : bookings) {\n      ans[booking[0] - 1] += booking[2];\n      if (booking[1] < n)\n        ans[booking[1]] -= booking[2];\n    }\n\n    for (int i = 1; i < n; ++i)\n      ans[i] += ans[i - 1];\n\n    return ans;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def corpFlightBookings(self, bookings: List[List[int]], n: int) -> List[int]:\n    ans = [0] * n\n\n    for booking in bookings:\n      ans[booking[0] - 1] += booking[2]\n      if booking[1] < n:\n        ans[booking[1]] -= booking[2]\n\n    for i in range(1, n):\n      ans[i] += ans[i - 1]\n\n    return ans\n",
                "lang_text": "py"
            }
        }
    }
}