{
    "failed": false,
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "3265",
            "title": "Count Almost Equal Pairs I",
            "titleSlug": "count-almost-equal-pairs-i",
            "content": "<p>You are given an array <code>nums</code> consisting of positive integers.</p>\n\n<p>We call two integers <code>x</code> and <code>y</code> in this problem <strong>almost equal</strong> if both integers can become equal after performing the following operation <strong>at most once</strong>:</p>\n\n<ul>\n\t<li>Choose <strong>either</strong> <code>x</code> or <code>y</code> and swap any two digits within the chosen number.</li>\n</ul>\n\n<p>Return the number of indices <code>i</code> and <code>j</code> in <code>nums</code> where <code>i &lt; j</code> such that <code>nums[i]</code> and <code>nums[j]</code> are <strong>almost equal</strong>.</p>\n\n<p><strong>Note</strong> that it is allowed for an integer to have leading zeros after performing an operation.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">nums = [3,12,30,17,21]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">2</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>The almost equal pairs of elements are:</p>\n\n<ul>\n\t<li>3 and 30. By swapping 3 and 0 in 30, you get 3.</li>\n\t<li>12 and 21. By swapping 1 and 2 in 12, you get 21.</li>\n</ul>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">nums = [1,1,1,1,1]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">10</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>Every two elements in the array are almost equal.</p>\n</div>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">nums = [123,231]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">0</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>We cannot swap any two digits of 123 or 231 to reach the other.</p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= nums.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 10<sup>6</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 136,
            "dislikes": 18,
            "similarQuestions": "[{\"title\": \"Check if One String Swap Can Make Strings Equal\", \"titleSlug\": \"check-if-one-string-swap-can-make-strings-equal\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                },
                {
                    "name": "Enumeration",
                    "slug": "enumeration"
                }
            ],
            "stats": "{\"totalAccepted\": \"24.5K\", \"totalSubmission\": \"66.3K\", \"totalAcceptedRaw\": 24528, \"totalSubmissionRaw\": 66281, \"acRate\": \"37.0%\"}",
            "hints": [
                "Since the constraint on the number of elements is small, you can check all pairs in the array.",
                "For each pair, perform an operation on one of the elements and check if it becomes equal to the other."
            ],
            "rephrased": {
                "body": "Given an array `nums` consisting of positive integers, determine the number of pairs of indices `i` and `j` (where `i < j`) such that `nums[i]` and `nums[j]` are almost equal. Two integers `x` and `y` are considered almost equal if either `x` can be transformed into `y` or `y` can be transformed into `x` by swapping two of its digits at most once.",
                "constraints": [
                    "2 <= nums.length <= 100",
                    "1 <= nums[i] <= 10<sup>6</sup>"
                ],
                "testcases": [
                    {
                        "input": "[3,12,30,17,21]",
                        "output": "2",
                        "explanation": "The almost equal pairs are (3, 30) because swapping the digits of 30 gives 3, and (12, 21) because swapping the digits of 12 gives 21."
                    },
                    {
                        "input": "[1,1,1,1,1]",
                        "output": "10",
                        "explanation": "Every two elements in the array are almost equal since they are already equal."
                    },
                    {
                        "input": "[123,231]",
                        "output": "0",
                        "explanation": "It's not possible to obtain 231 from 123, or 123 from 231, by swapping two digits once."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Easy",
                "titleSlug": "check-if-one-string-swap-can-make-strings-equal",
                "title": "Check if One String Swap Can Make Strings Equal",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "Since the constraint on the number of elements is small, you can check all pairs in the array.",
            "For each pair, perform an operation on one of the elements and check if it becomes equal to the other."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Counting",
                "slug": "counting"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ]
    }
}