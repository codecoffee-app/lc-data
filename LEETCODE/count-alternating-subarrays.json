{
    "failed": false,
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "3101",
            "title": "Count Alternating Subarrays",
            "titleSlug": "count-alternating-subarrays",
            "content": "<p>You are given a <span data-keyword=\"binary-array\">binary array</span> <code>nums</code>.</p>\n\n<p>We call a <span data-keyword=\"subarray-nonempty\">subarray</span> <strong>alternating</strong> if <strong>no</strong> two <strong>adjacent</strong> elements in the subarray have the <strong>same</strong> value.</p>\n\n<p>Return <em>the number of alternating subarrays in </em><code>nums</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">nums = [0,1,1,1]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">5</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>The following subarrays are alternating: <code>[0]</code>, <code>[1]</code>, <code>[1]</code>, <code>[1]</code>, and <code>[0,1]</code>.</p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">nums = [1,0,1,0]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">10</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>Every subarray of the array is alternating. There are 10 possible subarrays that we can choose.</p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>nums[i]</code> is either <code>0</code> or <code>1</code>.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 193,
            "dislikes": 7,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "stats": "{\"totalAccepted\": \"32.1K\", \"totalSubmission\": \"56K\", \"totalAcceptedRaw\": 32122, \"totalSubmissionRaw\": 56021, \"acRate\": \"57.3%\"}",
            "hints": [
                "Try using dynamic programming.",
                "Let <code>dp[i]</code> be the number of alternating subarrays ending at index <code>i</code>.",
                "The final answer is the sum of <code>dp[i]</code> over all  indices <code>i</code> from <code>0</code> to <code>n - 1</code>."
            ],
            "rephrased": {
                "body": "Given a binary array `nums`, find the number of alternating subarrays. A subarray is considered alternating if no two adjacent elements have the same value.",
                "constraints": [
                    "1 <= nums.length <= 10^5",
                    "nums[i] is either 0 or 1."
                ],
                "testcases": [
                    {
                        "input": "[0,1,1,1]",
                        "output": "5",
                        "explanation": "The alternating subarrays are [0], [1], [1], [1], and [0,1]."
                    },
                    {
                        "input": "[1,0,1,0]",
                        "output": "10",
                        "explanation": "Every subarray is alternating, resulting in 10 possible subarrays."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "Try using dynamic programming.",
            "Let <code>dp[i]</code> be the number of alternating subarrays ending at index <code>i</code>.",
            "The final answer is the sum of <code>dp[i]</code> over all  indices <code>i</code> from <code>0</code> to <code>n - 1</code>."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  long long countAlternatingSubarrays(vector<int>& nums) {\n    // dp[i] := the number of alternating subarrays ending at index i\n    vector<long> dp(nums.size(), 1);\n\n    for (int i = 1; i < nums.size(); ++i)\n      if (nums[i] != nums[i - 1])\n        dp[i] += dp[i - 1];\n\n    return accumulate(dp.begin(), dp.end(), 0LL);\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public long countAlternatingSubarrays(int[] nums) {\n    // dp[i] := the number of alternating subarrays ending at index i\n    long[] dp = new long[nums.length];\n    Arrays.fill(dp, 1);\n\n    for (int i = 1; i < nums.length; ++i)\n      if (nums[i] != nums[i - 1])\n        dp[i] += dp[i - 1];\n\n    return Arrays.stream(dp).sum();\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def countAlternatingSubarrays(self, nums: List[int]) -> int:\n    # dp[i] := the number of alternating subarrays ending at index i\n    dp = [1] * len(nums)\n\n    for i in range(1, len(nums)):\n      if nums[i] != nums[i - 1]:\n        dp[i] += dp[i - 1]\n\n    return sum(dp)\n",
                "lang_text": "py"
            }
        }
    }
}