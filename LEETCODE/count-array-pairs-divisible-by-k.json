{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2183",
            "title": "Count Array Pairs Divisible by K",
            "titleSlug": "count-array-pairs-divisible-by-k",
            "content": "<p>Given a <strong>0-indexed</strong> integer array <code>nums</code> of length <code>n</code> and an integer <code>k</code>, return <em>the <strong>number of pairs</strong></em> <code>(i, j)</code> <em>such that:</em></p>\n\n<ul>\n\t<li><code>0 &lt;= i &lt; j &lt;= n - 1</code> <em>and</em></li>\n\t<li><code>nums[i] * nums[j]</code> <em>is divisible by</em> <code>k</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,4,5], k = 2\n<strong>Output:</strong> 7\n<strong>Explanation:</strong> \nThe 7 pairs of indices whose corresponding products are divisible by 2 are\n(0, 1), (0, 3), (1, 2), (1, 3), (1, 4), (2, 3), and (3, 4).\nTheir products are 2, 4, 6, 8, 10, 12, and 20 respectively.\nOther pairs such as (0, 2) and (2, 4) have products 3 and 15 respectively, which are not divisible by 2.    \n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,4], k = 5\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> There does not exist any pair of indices whose corresponding product is divisible by 5.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= nums[i], k &lt;= 10<sup>5</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 801,
            "dislikes": 34,
            "similarQuestions": "[{\"title\": \"Number of Single Divisor Triplets\", \"titleSlug\": \"number-of-single-divisor-triplets\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Check If Array Pairs Are Divisible by k\", \"titleSlug\": \"check-if-array-pairs-are-divisible-by-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Number Theory",
                    "slug": "number-theory"
                }
            ],
            "stats": "{\"totalAccepted\": \"14.4K\", \"totalSubmission\": \"49.8K\", \"totalAcceptedRaw\": 14436, \"totalSubmissionRaw\": 49751, \"acRate\": \"29.0%\"}",
            "hints": [
                "For any element in the array, what is the smallest number it should be multiplied with such that the product is divisible by k?",
                "The smallest number which should be multiplied with nums[i] so that the product is divisible by k is k / gcd(k, nums[i]). Now think about how you can store and update the count of such numbers present in the array efficiently."
            ],
            "rephrased": {
                "body": "Given a 0-indexed integer array `nums` of length `n` and an integer `k`, return the number of pairs `(i, j)` such that `0 <= i < j <= n - 1` and `nums[i] * nums[j]` is divisible by `k`.",
                "constraints": [
                    "1 <= nums.length <= 10^5",
                    "1 <= nums[i], k <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "nums = [1,2,3,4,5], k = 2",
                        "output": "7",
                        "explanation": "There are 7 pairs whose products are divisible by 2: (0, 1), (0, 3), (1, 2), (1, 3), (1, 4), (2, 3), and (3, 4).  Their respective products are 2, 4, 6, 8, 10, 12, and 20."
                    },
                    {
                        "input": "nums = [1,2,3,4], k = 5",
                        "output": "0",
                        "explanation": "There are no pairs whose product is divisible by 5."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "number-of-single-divisor-triplets",
                "title": "Number of Single Divisor Triplets",
                "isPaidOnly": true
            },
            {
                "difficulty": "Medium",
                "titleSlug": "check-if-array-pairs-are-divisible-by-k",
                "title": "Check If Array Pairs Are Divisible by k",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "For any element in the array, what is the smallest number it should be multiplied with such that the product is divisible by k?",
            "The smallest number which should be multiplied with nums[i] so that the product is divisible by k is k / gcd(k, nums[i]). Now think about how you can store and update the count of such numbers present in the array efficiently."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  long long countPairs(vector<int>& nums, int k) {\n    long long ans = 0;\n    unordered_map<int, int> gcds;\n\n    for (const int num : nums) {\n      const long long gcd_i = gcd(num, k);\n      for (const auto& [gcd_j, count] : gcds)\n        if (gcd_i * gcd_j % k == 0)\n          ans += count;\n      ++gcds[gcd_i];\n    }\n\n    return ans;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public long countPairs(int[] nums, int k) {\n    long ans = 0;\n    Map<Long, Integer> gcds = new HashMap<>();\n\n    for (final int num : nums) {\n      final long gcd_i = gcd(num, k);\n      for (final long gcd_j : gcds.keySet())\n        if (gcd_i * gcd_j % k == 0)\n          ans += gcds.get(gcd_j);\n      gcds.merge(gcd_i, 1, Integer::sum);\n    }\n\n    return ans;\n  }\n\n  private int gcd(int a, int b) {\n    return b == 0 ? a : gcd(b, a % b);\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def countPairs(self, nums: List[int], k: int) -> int:\n    ans = 0\n    gcds = collections.Counter()\n\n    for num in nums:\n      gcd_i = math.gcd(num, k)\n      for gcd_j, count in gcds.items():\n        if gcd_i * gcd_j % k == 0:\n          ans += count\n      gcds[gcd_i] += 1\n\n    return ans\n",
                "lang_text": "py"
            }
        }
    }
}