{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2176",
            "title": "Count Equal and Divisible Pairs in an Array",
            "titleSlug": "count-equal-and-divisible-pairs-in-an-array",
            "content": "Given a <strong>0-indexed</strong> integer array <code>nums</code> of length <code>n</code> and an integer <code>k</code>, return <em>the <strong>number of pairs</strong></em> <code>(i, j)</code> <em>where</em> <code>0 &lt;= i &lt; j &lt; n</code>, <em>such that</em> <code>nums[i] == nums[j]</code> <em>and</em> <code>(i * j)</code> <em>is divisible by</em> <code>k</code>.\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,1,2,2,2,1,3], k = 2\n<strong>Output:</strong> 4\n<strong>Explanation:</strong>\nThere are 4 pairs that meet all the requirements:\n- nums[0] == nums[6], and 0 * 6 == 0, which is divisible by 2.\n- nums[2] == nums[3], and 2 * 3 == 6, which is divisible by 2.\n- nums[2] == nums[4], and 2 * 4 == 8, which is divisible by 2.\n- nums[3] == nums[4], and 3 * 4 == 12, which is divisible by 2.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,4], k = 1\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> Since no value in nums is repeated, there are no pairs (i,j) that meet all the requirements.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= nums[i], k &lt;= 100</code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 607,
            "dislikes": 25,
            "similarQuestions": "[{\"title\": \"Count Number of Pairs With Absolute Difference K\", \"titleSlug\": \"count-number-of-pairs-with-absolute-difference-k\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Count Number of Bad Pairs\", \"titleSlug\": \"count-number-of-bad-pairs\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "stats": "{\"totalAccepted\": \"66.4K\", \"totalSubmission\": \"83.8K\", \"totalAcceptedRaw\": 66449, \"totalSubmissionRaw\": 83751, \"acRate\": \"79.3%\"}",
            "hints": [
                "For every possible pair of indices (i, j) where i < j, check if it satisfies the given conditions."
            ],
            "rephrased": {
                "body": "Given a 0-indexed integer array `nums` of length `n` and an integer `k`, determine the number of pairs `(i, j)` where `0 <= i < j < n`, such that `nums[i] == nums[j]` and the product `(i * j)` is divisible by `k`.",
                "constraints": [
                    "1 <= nums.length <= 100",
                    "1 <= nums[i], k <= 100"
                ],
                "testcases": [
                    {
                        "input": "nums = [3,1,2,2,2,1,3], k = 2",
                        "output": "4",
                        "explanation": "The pairs that satisfy the conditions are:\n- nums[0] == nums[6], and 0 * 6 = 0, which is divisible by 2.\n- nums[2] == nums[3], and 2 * 3 = 6, which is divisible by 2.\n- nums[2] == nums[4], and 2 * 4 = 8, which is divisible by 2.\n- nums[3] == nums[4], and 3 * 4 = 12, which is divisible by 2."
                    },
                    {
                        "input": "nums = [1,2,3,4], k = 1",
                        "output": "0",
                        "explanation": "No values in nums are repeated, resulting in no pairs (i,j) that satisfy all given conditions."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Easy",
                "titleSlug": "count-number-of-pairs-with-absolute-difference-k",
                "title": "Count Number of Pairs With Absolute Difference K",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "count-number-of-bad-pairs",
                "title": "Count Number of Bad Pairs",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "For every possible pair of indices (i, j) where i < j, check if it satisfies the given conditions."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int countPairs(vector<int>& nums, int k) {\n    int ans = 0;\n    unordered_map<int, vector<int>> numToIndices;\n\n    for (int i = 0; i < nums.size(); ++i)\n      numToIndices[nums[i]].push_back(i);\n\n    for (const auto& [_, indices] : numToIndices) {\n      unordered_map<int, int> gcds;\n      for (const int i : indices) {\n        const int gcd_i = gcd(i, k);\n        for (const auto& [gcd_j, count] : gcds)\n          if (gcd_i * gcd_j % k == 0)\n            ans += count;\n        ++gcds[gcd_i];\n      }\n    }\n\n    return ans;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int countPairs(int[] nums, int k) {\n    int ans = 0;\n    Map<Integer, List<Integer>> numToIndices = new HashMap<>();\n\n    for (int i = 0; i < nums.length; ++i) {\n      numToIndices.putIfAbsent(nums[i], new ArrayList<>());\n      numToIndices.get(nums[i]).add(i);\n    }\n\n    for (List<Integer> indices : numToIndices.values()) {\n      Map<Integer, Integer> gcds = new HashMap<>();\n      for (final int i : indices) {\n        final int gcd_i = gcd(i, k);\n        for (final int gcd_j : gcds.keySet())\n          if (gcd_i * gcd_j % k == 0)\n            ans += gcds.get(gcd_j);\n        gcds.merge(gcd_i, 1, Integer::sum);\n      }\n    }\n\n    return ans;\n  }\n\n  private int gcd(int a, int b) {\n    return b == 0 ? a : gcd(b, a % b);\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def countPairs(self, nums: List[int], k: int) -> int:\n    ans = 0\n    numToIndices = collections.defaultdict(list)\n\n    for i, num in enumerate(nums):\n      numToIndices[num].append(i)\n\n    for indices in numToIndices.values():\n      gcds = collections.Counter()\n      for i in indices:\n        gcd_i = math.gcd(i, k)\n        for gcd_j, count in gcds.items():\n          if gcd_i * gcd_j % k == 0:\n            ans += count\n        gcds[gcd_i] += 1\n\n    return ans\n",
                "lang_text": "py"
            }
        }
    }
}