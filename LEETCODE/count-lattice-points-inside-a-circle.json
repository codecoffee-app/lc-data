{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2249",
            "title": "Count Lattice Points Inside a Circle",
            "titleSlug": "count-lattice-points-inside-a-circle",
            "content": "<p>Given a 2D integer array <code>circles</code> where <code>circles[i] = [x<sub>i</sub>, y<sub>i</sub>, r<sub>i</sub>]</code> represents the center <code>(x<sub>i</sub>, y<sub>i</sub>)</code> and radius <code>r<sub>i</sub></code> of the <code>i<sup>th</sup></code> circle drawn on a grid, return <em>the <strong>number of lattice points</strong> </em><em>that are present inside <strong>at least one</strong> circle</em>.</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>A <strong>lattice point</strong> is a point with integer coordinates.</li>\n\t<li>Points that lie <strong>on the circumference of a circle</strong> are also considered to be inside it.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2022/03/02/exa-11.png\" style=\"width: 300px; height: 300px;\" />\n<pre>\n<strong>Input:</strong> circles = [[2,2,1]]\n<strong>Output:</strong> 5\n<strong>Explanation:</strong>\nThe figure above shows the given circle.\nThe lattice points present inside the circle are (1, 2), (2, 1), (2, 2), (2, 3), and (3, 2) and are shown in green.\nOther points such as (1, 1) and (1, 3), which are shown in red, are not considered inside the circle.\nHence, the number of lattice points present inside at least one circle is 5.</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2022/03/02/exa-22.png\" style=\"width: 300px; height: 300px;\" />\n<pre>\n<strong>Input:</strong> circles = [[2,2,2],[3,4,1]]\n<strong>Output:</strong> 16\n<strong>Explanation:</strong>\nThe figure above shows the given circles.\nThere are exactly 16 lattice points which are present inside at least one circle. \nSome of them are (0, 2), (2, 0), (2, 4), (3, 2), and (4, 4).\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= circles.length &lt;= 200</code></li>\n\t<li><code>circles[i].length == 3</code></li>\n\t<li><code>1 &lt;= x<sub>i</sub>, y<sub>i</sub> &lt;= 100</code></li>\n\t<li><code>1 &lt;= r<sub>i</sub> &lt;= min(x<sub>i</sub>, y<sub>i</sub>)</code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 213,
            "dislikes": 215,
            "similarQuestions": "[{\"title\": \"Queries on Number of Points Inside a Circle\", \"titleSlug\": \"queries-on-number-of-points-inside-a-circle\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Geometry",
                    "slug": "geometry"
                },
                {
                    "name": "Enumeration",
                    "slug": "enumeration"
                }
            ],
            "stats": "{\"totalAccepted\": \"21.8K\", \"totalSubmission\": \"42.1K\", \"totalAcceptedRaw\": 21791, \"totalSubmissionRaw\": 42137, \"acRate\": \"51.7%\"}",
            "hints": [
                "For each circle, how can you check whether or not a lattice point lies inside it?",
                "Since you need to reduce the search space, consider the minimum and maximum possible values of the coordinates of a lattice point contained in any circle."
            ],
            "rephrased": {
                "body": "Given a 2D integer array `circles` where `circles[i] = [x<sub>i</sub>, y<sub>i</sub>, r<sub>i</sub>]` represents the center `(x<sub>i</sub>, y<sub>i</sub>)` and radius `r<sub>i</sub>` of the i-th circle drawn on a grid, determine the total count of unique lattice points that reside within at least one of the circles. A lattice point is defined as a point having integer coordinates, and points lying directly on the circumference of a circle are considered to be inside the circle.",
                "constraints": [
                    "1 <= circles.length <= 200",
                    "circles[i].length == 3",
                    "1 <= x<sub>i</sub>, y<sub>i</sub> <= 100",
                    "1 <= r<sub>i</sub> <= min(x<sub>i</sub>, y<sub>i</sub>)"
                ],
                "testcases": [
                    {
                        "input": "[[2,2,1]]",
                        "output": "5",
                        "explanation": "The circle is centered at (2, 2) with radius 1. The lattice points inside or on the circle are (1, 2), (2, 1), (2, 2), (2, 3), and (3, 2). There are a total of 5 lattice points."
                    },
                    {
                        "input": "[[2,2,2],[3,4,1]]",
                        "output": "16",
                        "explanation": "The lattice points within at least one of the circles centered at (2,2) with radius 2 and (3,4) with radius 1 are counted.  The total number of unique lattice points covered by either circle is 16."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "queries-on-number-of-points-inside-a-circle",
                "title": "Queries on Number of Points Inside a Circle",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "For each circle, how can you check whether or not a lattice point lies inside it?",
            "Since you need to reduce the search space, consider the minimum and maximum possible values of the coordinates of a lattice point contained in any circle."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Geometry",
                "slug": "geometry"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int countLatticePoints(vector<vector<int>>& circles) {\n    int ans = 0;\n\n    for (int x = 0; x < 201; ++x)\n      for (int y = 0; y < 201; ++y)\n        ans += any_of(circles.begin(), circles.end(), [&](const auto& c) {\n          return (c[0] - x) * (c[0] - x) + (c[1] - y) * (c[1] - y) <=\n                 c[2] * c[2];\n        });\n\n    return ans;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int countLatticePoints(int[][] circles) {\n    int ans = 0;\n\n    for (int x = 0; x < 201; ++x)\n      for (int y = 0; y < 201; ++y)\n        for (int[] c : circles)\n          if ((c[0] - x) * (c[0] - x) + (c[1] - y) * (c[1] - y) <= c[2] * c[2]) {\n            ++ans;\n            break;\n          }\n\n    return ans;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def countLatticePoints(self, circles: List[List[int]]) -> int:\n    return sum(any((xc - x)**2 + (yc - y)**2 <= r**2 for xc, yc, r in circles)\n               for x in range(201)\n               for y in range(201))\n",
                "lang_text": "py"
            }
        }
    }
}