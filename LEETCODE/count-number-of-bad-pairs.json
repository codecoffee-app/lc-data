{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2364",
            "title": "Count Number of Bad Pairs",
            "titleSlug": "count-number-of-bad-pairs",
            "content": "<p>You are given a <strong>0-indexed</strong> integer array <code>nums</code>. A pair of indices <code>(i, j)</code> is a <strong>bad pair</strong> if <code>i &lt; j</code> and <code>j - i != nums[j] - nums[i]</code>.</p>\n\n<p>Return<em> the total number of <strong>bad pairs</strong> in </em><code>nums</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [4,1,3,3]\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> The pair (0, 1) is a bad pair since 1 - 0 != 1 - 4.\nThe pair (0, 2) is a bad pair since 2 - 0 != 3 - 4, 2 != -1.\nThe pair (0, 3) is a bad pair since 3 - 0 != 3 - 4, 3 != -1.\nThe pair (1, 2) is a bad pair since 2 - 1 != 3 - 1, 1 != 2.\nThe pair (2, 3) is a bad pair since 3 - 2 != 3 - 3, 1 != 0.\nThere are a total of 5 bad pairs, so we return 5.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,4,5]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> There are no bad pairs.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 939,
            "dislikes": 24,
            "similarQuestions": "[{\"title\": \"K-diff Pairs in an Array\", \"titleSlug\": \"k-diff-pairs-in-an-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Subarray Sums Divisible by K\", \"titleSlug\": \"subarray-sums-divisible-by-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Count Nice Pairs in an Array\", \"titleSlug\": \"count-nice-pairs-in-an-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Count Number of Pairs With Absolute Difference K\", \"titleSlug\": \"count-number-of-pairs-with-absolute-difference-k\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Count Equal and Divisible Pairs in an Array\", \"titleSlug\": \"count-equal-and-divisible-pairs-in-an-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Number of Pairs Satisfying Inequality\", \"titleSlug\": \"number-of-pairs-satisfying-inequality\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                }
            ],
            "stats": "{\"totalAccepted\": \"28.8K\", \"totalSubmission\": \"69.5K\", \"totalAcceptedRaw\": 28820, \"totalSubmissionRaw\": 69462, \"acRate\": \"41.5%\"}",
            "hints": [
                "Would it be easier to count the number of pairs that are not bad pairs?",
                "Notice that (j - i != nums[j] - nums[i]) is the same as (nums[i] - i != nums[j] - j).",
                "Keep a counter of nums[i] - i. To be efficient, use a HashMap."
            ],
            "rephrased": {
                "body": "Given a 0-indexed integer array `nums`, a pair of indices `(i, j)` is considered a bad pair if `i < j` and `j - i != nums[j] - nums[i]`.  Determine the total number of bad pairs in the given array.",
                "constraints": [
                    "1 <= nums.length <= 10^5",
                    "1 <= nums[i] <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "[4,1,3,3]",
                        "output": "5",
                        "explanation": "The bad pairs are (0, 1), (0, 2), (0, 3), (1, 2), and (2, 3).  For example, (0,1) is bad because 1 - 0 != 1 - 4."
                    },
                    {
                        "input": "[1,2,3,4,5]",
                        "output": "0",
                        "explanation": "There are no bad pairs in this input."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "k-diff-pairs-in-an-array",
                "title": "K-diff Pairs in an Array",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "subarray-sums-divisible-by-k",
                "title": "Subarray Sums Divisible by K",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "count-nice-pairs-in-an-array",
                "title": "Count Nice Pairs in an Array",
                "isPaidOnly": false
            },
            {
                "difficulty": "Easy",
                "titleSlug": "count-number-of-pairs-with-absolute-difference-k",
                "title": "Count Number of Pairs With Absolute Difference K",
                "isPaidOnly": false
            },
            {
                "difficulty": "Easy",
                "titleSlug": "count-equal-and-divisible-pairs-in-an-array",
                "title": "Count Equal and Divisible Pairs in an Array",
                "isPaidOnly": false
            },
            {
                "difficulty": "Hard",
                "titleSlug": "number-of-pairs-satisfying-inequality",
                "title": "Number of Pairs Satisfying Inequality",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "Would it be easier to count the number of pairs that are not bad pairs?",
            "Notice that (j - i != nums[j] - nums[i]) is the same as (nums[i] - i != nums[j] - j).",
            "Keep a counter of nums[i] - i. To be efficient, use a HashMap."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  long long countBadPairs(vector<int>& nums) {\n    long long ans = 0;\n    unordered_map<int, int> count;  // (nums[i] - i)\n\n    for (int i = 0; i < nums.size(); ++i)\n      //     count[nums[i] - i] := # of good pairs\n      // i - count[nums[i] - i] := # of bad pairs\n      ans += i - count[nums[i] - i]++;\n\n    return ans;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public long countBadPairs(int[] nums) {\n    long ans = 0;\n    Map<Integer, Long> count = new HashMap<>(); // (nums[i] - i)\n\n    for (int i = 0; i < nums.length; ++i) {\n      //     count[nums[i] - i] := # of good pairs\n      // i - count[nums[i] - i] := # of bad pairs\n      ans += i - count.getOrDefault(nums[i] - i, 0L);\n      count.merge(nums[i] - i, 1L, Long::sum);\n    }\n\n    return ans;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def countBadPairs(self, nums: List[int]) -> int:\n    ans = 0\n    count = collections.Counter()  # (nums[i] - i)\n\n    for i, num in enumerate(nums):\n      #     count[nums[i] - i] := # of good pairs\n      # i - count[nums[i] - i] := # of bad pairs\n      ans += i - count[num - i]\n      count[num - i] += 1\n\n    return ans\n",
                "lang_text": "py"
            }
        }
    }
}