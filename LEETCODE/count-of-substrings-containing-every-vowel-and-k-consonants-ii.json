{
    "failed": false,
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "3306",
            "title": "Count of Substrings Containing Every Vowel and K Consonants II",
            "titleSlug": "count-of-substrings-containing-every-vowel-and-k-consonants-ii",
            "content": "<p>You are given a string <code>word</code> and a <strong>non-negative</strong> integer <code>k</code>.</p>\n\n<p>Return the total number of <span data-keyword=\"substring-nonempty\">substrings</span> of <code>word</code> that contain every vowel (<code>&#39;a&#39;</code>, <code>&#39;e&#39;</code>, <code>&#39;i&#39;</code>, <code>&#39;o&#39;</code>, and <code>&#39;u&#39;</code>) <strong>at least</strong> once and <strong>exactly</strong> <code>k</code> consonants.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">word = &quot;aeioqq&quot;, k = 1</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">0</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>There is no substring with every vowel.</p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">word = &quot;aeiou&quot;, k = 0</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">1</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>The only substring with every vowel and zero consonants is <code>word[0..4]</code>, which is <code>&quot;aeiou&quot;</code>.</p>\n</div>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">word = &quot;</span>ieaouqqieaouqq<span class=\"example-io\">&quot;, k = 1</span></p>\n\n<p><strong>Output:</strong> 3</p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>The substrings with every vowel and one consonant are:</p>\n\n<ul>\n\t<li><code>word[0..5]</code>, which is <code>&quot;ieaouq&quot;</code>.</li>\n\t<li><code>word[6..11]</code>, which is <code>&quot;qieaou&quot;</code>.</li>\n\t<li><code>word[7..12]</code>, which is <code>&quot;ieaouq&quot;</code>.</li>\n</ul>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>5 &lt;= word.length &lt;= 2 * 10<sup>5</sup></code></li>\n\t<li><code>word</code> consists only of lowercase English letters.</li>\n\t<li><code>0 &lt;= k &lt;= word.length - 5</code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 140,
            "dislikes": 6,
            "similarQuestions": "[{\"title\": \"Longest Substring Of All Vowels in Order\", \"titleSlug\": \"longest-substring-of-all-vowels-in-order\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Count Vowel Substrings of a String\", \"titleSlug\": \"count-vowel-substrings-of-a-string\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "stats": "{\"totalAccepted\": \"8.8K\", \"totalSubmission\": \"45.1K\", \"totalAcceptedRaw\": 8833, \"totalSubmissionRaw\": 45131, \"acRate\": \"19.6%\"}",
            "hints": [
                "We can use sliding window and binary search.",
                "For each index <code>r</code>, find the maximum <code>l</code> such that both conditions are satisfied using binary search."
            ],
            "rephrased": {
                "body": "Given a string `word` and a non-negative integer `k`, find the number of substrings in `word` that satisfy the following conditions:\n\n1.  The substring must contain all five vowels ('a', 'e', 'i', 'o', and 'u') at least once.\n2.  The substring must contain exactly `k` consonants.",
                "constraints": [
                    "5 <= word.length <= 2 * 10^5",
                    "word consists only of lowercase English letters.",
                    "0 <= k <= word.length - 5"
                ],
                "testcases": [
                    {
                        "input": "word = \"aeioqq\", k = 1",
                        "output": "0",
                        "explanation": "There are no substrings that contain all five vowels."
                    },
                    {
                        "input": "word = \"aeiou\", k = 0",
                        "output": "1",
                        "explanation": "The substring \"aeiou\" contains every vowel and has zero consonants."
                    },
                    {
                        "input": "word = \"ieaouqqieaouqq\", k = 1",
                        "output": "3",
                        "explanation": "The substrings satisfying both conditions are \"ieaouq\" (from index 0 to 5), \"qieaou\" (from index 6 to 11), and \"ieaouq\" (from index 7 to 12)."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "longest-substring-of-all-vowels-in-order",
                "title": "Longest Substring Of All Vowels in Order",
                "isPaidOnly": false
            },
            {
                "difficulty": "Easy",
                "titleSlug": "count-vowel-substrings-of-a-string",
                "title": "Count Vowel Substrings of a String",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "We can use sliding window and binary search.",
            "For each index <code>r</code>, find the maximum <code>l</code> such that both conditions are satisfied using binary search."
        ],
        "relatedTopics": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  // Same as 3305. Count of Substrings Containing Every Vowel and K Consonants I\n  long long countOfSubstrings(string word, int k) {\n    return substringsWithAtMost(word, k) - substringsWithAtMost(word, k - 1);\n  }\n\n private:\n  // Return the number of substrings containing every vowel with at most k\n  // consonants.\n  long substringsWithAtMost(const string& word, int k) {\n    if (k == -1)\n      return 0;\n\n    long res = 0;\n    int vowels = 0;\n    int uniqueVowels = 0;\n    unordered_map<char, int> vowelLastSeen;\n\n    for (int l = 0, r = 0; r < word.length(); ++r) {\n      if (isVowel(word[r])) {\n        ++vowels;\n        if (const auto it = vowelLastSeen.find(word[r]);\n            it == vowelLastSeen.end() || it->second < l)\n          ++uniqueVowels;\n        vowelLastSeen[word[r]] = r;\n      }\n      while (r - l + 1 - vowels > k) {\n        if (isVowel(word[l])) {\n          --vowels;\n          if (vowelLastSeen[word[l]] == l)\n            --uniqueVowels;\n        }\n        ++l;\n      }\n      if (uniqueVowels == 5)\n        // Add substrings containing every vowel with at most k consonants to\n        // the answer. They are\n        // word[l..r], word[l + 1..r], ..., word[min(vowelLastSeen[vowel])..r]\n        res += min({vowelLastSeen['a'], vowelLastSeen['e'], vowelLastSeen['i'],\n                    vowelLastSeen['o'], vowelLastSeen['u']}) -\n               l + 1;\n    }\n\n    return res;\n  }\n\n  bool isVowel(char c) {\n    static constexpr string_view kVowels = \"aeiou\";\n    return kVowels.find(c) != string_view::npos;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  // Same as 3305. Count of Substrings Containing Every Vowel and K Consonants I\n  public long countOfSubstrings(String word, int k) {\n    return substringsWithAtMost(word, k) - substringsWithAtMost(word, k - 1);\n  }\n\n  // Return the number of substrings containing every vowel with at most k\n  // consonants.\n  private long substringsWithAtMost(String word, int k) {\n    if (k == -1)\n      return 0;\n\n    long res = 0;\n    int vowels = 0;\n    int uniqueVowels = 0;\n    Map<Character, Integer> vowelLastSeen = new HashMap<>();\n\n    for (int l = 0, r = 0; r < word.length(); ++r) {\n      if (isVowel(word.charAt(r))) {\n        ++vowels;\n        if (!vowelLastSeen.containsKey(word.charAt(r)) || vowelLastSeen.get(word.charAt(r)) < l)\n          ++uniqueVowels;\n        vowelLastSeen.put(word.charAt(r), r);\n      }\n      while (r - l + 1 - vowels > k) {\n        if (isVowel(word.charAt(l))) {\n          --vowels;\n          if (vowelLastSeen.get(word.charAt(l)) == l)\n            --uniqueVowels;\n        }\n        ++l;\n      }\n      if (uniqueVowels == 5) {\n        // Add substrings containing every vowel with at most k consonants to\n        // the answer. They are\n        // word[l..r], word[l + 1..r], ..., word[min(vowelLastSeen[vowel])..r]\n        final int minVowelLastSeen = Arrays.asList('a', 'e', 'i', 'o', 'u')\n                                         .stream()\n                                         .mapToInt(vowel -> vowelLastSeen.get(vowel))\n                                         .min()\n                                         .getAsInt();\n        res += minVowelLastSeen - l + 1;\n      }\n    }\n\n    return res;\n  }\n\n  private boolean isVowel(char c) {\n    return \"aeiou\".indexOf(c) != -1;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  # Same as 3305. Count of Substrings Containing Every Vowel and K Consonants I\n  def countOfSubstrings(self, word: str, k: int) -> int:\n    kVowels = 'aeiou'\n\n    def substringsWithAtMost(k: int) -> int:\n      \"\"\"\n      Return the number of substrings containing every vowel with at most k\n      consonants.\n      \"\"\"\n      if k < 0:\n        return 0\n\n      res = 0\n      vowels = 0\n      uniqueVowels = 0\n      vowelLastSeen = {}\n\n      l = 0\n      for r, c in enumerate(word):\n        if c in kVowels:\n          vowels += 1\n          if c not in vowelLastSeen or vowelLastSeen[c] < l:\n            uniqueVowels += 1\n          vowelLastSeen[c] = r\n        while r - l + 1 - vowels > k:\n          if word[l] in kVowels:\n            vowels -= 1\n            if vowelLastSeen[word[l]] == l:\n              uniqueVowels -= 1\n          l += 1\n        if uniqueVowels == 5:\n          # Add substrings containing every vowel with at most k consonants to\n          # the answer. They are\n          # word[l..r], word[l + 1..r], ..., word[min(vowelLastSeen[vowel])..r]\n          res += min(vowelLastSeen[vowel] for vowel in kVowels) - l + 1\n\n      return res\n\n    return substringsWithAtMost(k) - substringsWithAtMost(k - 1)\n",
                "lang_text": "py"
            }
        }
    }
}