{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2169",
            "title": "Count Operations to Obtain Zero",
            "titleSlug": "count-operations-to-obtain-zero",
            "content": "<p>You are given two <strong>non-negative</strong> integers <code>num1</code> and <code>num2</code>.</p>\n\n<p>In one <strong>operation</strong>, if <code>num1 &gt;= num2</code>, you must subtract <code>num2</code> from <code>num1</code>, otherwise subtract <code>num1</code> from <code>num2</code>.</p>\n\n<ul>\n\t<li>For example, if <code>num1 = 5</code> and <code>num2 = 4</code>, subtract <code>num2</code> from <code>num1</code>, thus obtaining <code>num1 = 1</code> and <code>num2 = 4</code>. However, if <code>num1 = 4</code> and <code>num2 = 5</code>, after one operation, <code>num1 = 4</code> and <code>num2 = 1</code>.</li>\n</ul>\n\n<p>Return <em>the <strong>number of operations</strong> required to make either</em> <code>num1 = 0</code> <em>or</em> <code>num2 = 0</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> num1 = 2, num2 = 3\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> \n- Operation 1: num1 = 2, num2 = 3. Since num1 &lt; num2, we subtract num1 from num2 and get num1 = 2, num2 = 3 - 2 = 1.\n- Operation 2: num1 = 2, num2 = 1. Since num1 &gt; num2, we subtract num2 from num1.\n- Operation 3: num1 = 1, num2 = 1. Since num1 == num2, we subtract num2 from num1.\nNow num1 = 0 and num2 = 1. Since num1 == 0, we do not need to perform any further operations.\nSo the total number of operations required is 3.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> num1 = 10, num2 = 10\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> \n- Operation 1: num1 = 10, num2 = 10. Since num1 == num2, we subtract num2 from num1 and get num1 = 10 - 10 = 0.\nNow num1 = 0 and num2 = 10. Since num1 == 0, we are done.\nSo the total number of operations required is 1.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= num1, num2 &lt;= 10<sup>5</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 574,
            "dislikes": 20,
            "similarQuestions": "[{\"title\": \"Number of Steps to Reduce a Number to Zero\", \"titleSlug\": \"number-of-steps-to-reduce-a-number-to-zero\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "stats": "{\"totalAccepted\": \"65.1K\", \"totalSubmission\": \"87.5K\", \"totalAcceptedRaw\": 65064, \"totalSubmissionRaw\": 87455, \"acRate\": \"74.4%\"}",
            "hints": [
                "Try simulating the process until either of the two integers is zero.",
                "Count the number of operations done."
            ],
            "rephrased": {
                "body": "Given two non-negative integers, `num1` and `num2`, determine the number of operations required to make either `num1` or `num2` equal to 0. In each operation, if `num1` is greater than or equal to `num2`, subtract `num2` from `num1`. Otherwise, subtract `num1` from `num2`. Return the total number of operations performed.",
                "constraints": [
                    "0 <= num1, num2 <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "num1 = 2, num2 = 3",
                        "output": "3",
                        "explanation": "Initially, num1 = 2 and num2 = 3.  \n- Operation 1: num1 < num2, so num2 becomes 3 - 2 = 1. (num1 = 2, num2 = 1)\n- Operation 2: num1 > num2, so num1 becomes 2 - 1 = 1. (num1 = 1, num2 = 1)\n- Operation 3: num1 == num2, so num1 becomes 1 - 1 = 0. (num1 = 0, num2 = 1)\nSince num1 is now 0, the process stops. Total operations: 3."
                    },
                    {
                        "input": "num1 = 10, num2 = 10",
                        "output": "1",
                        "explanation": "Initially, num1 = 10 and num2 = 10.\n- Operation 1: num1 == num2, so num1 becomes 10 - 10 = 0. (num1 = 0, num2 = 10)\nSince num1 is now 0, the process stops. Total operations: 1."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Easy",
                "titleSlug": "number-of-steps-to-reduce-a-number-to-zero",
                "title": "Number of Steps to Reduce a Number to Zero",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "Try simulating the process until either of the two integers is zero.",
            "Count the number of operations done."
        ],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int countOperations(int num1, int num2) {\n    int ans = 0;\n\n    while (num1 && num2) {\n      if (num1 < num2)\n        swap(num1, num2);\n      ans += num1 / num2;\n      num1 %= num2;\n    }\n\n    return ans;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int countOperations(int num1, int num2) {\n    int ans = 0;\n\n    while (num1 > 0 && num2 > 0) {\n      if (num1 < num2) {\n        final int temp = num1;\n        num1 = num2;\n        num2 = temp;\n      }\n      ans += num1 / num2;\n      num1 %= num2;\n    }\n\n    return ans;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def countOperations(self, num1: int, num2: int) -> int:\n    ans = 0\n\n    while num1 and num2:\n      if num1 < num2:\n        num1, num2 = num2, num1\n      ans += num1 // num2\n      num1 %= num2\n\n    return ans\n",
                "lang_text": "py"
            }
        }
    }
}