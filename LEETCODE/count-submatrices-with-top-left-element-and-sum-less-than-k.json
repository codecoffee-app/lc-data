{
    "failed": false,
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "3070",
            "title": "Count Submatrices with Top-Left Element and Sum Less Than k",
            "titleSlug": "count-submatrices-with-top-left-element-and-sum-less-than-k",
            "content": "<p>You are given a <strong>0-indexed</strong> integer matrix <code>grid</code> and an integer <code>k</code>.</p>\n\n<p>Return <em>the <strong>number</strong> of <span data-keyword=\"submatrix\">submatrices</span> that contain the top-left element of the</em> <code>grid</code>, <em>and have a sum less than or equal to </em><code>k</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2024/01/01/example1.png\" style=\"padding: 10px; background: #fff; border-radius: .5rem;\" />\n<pre>\n<strong>Input:</strong> grid = [[7,6,3],[6,6,1]], k = 18\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> There are only 4 submatrices, shown in the image above, that contain the top-left element of grid, and have a sum less than or equal to 18.</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2024/01/01/example21.png\" style=\"padding: 10px; background: #fff; border-radius: .5rem;\" />\n<pre>\n<strong>Input:</strong> grid = [[7,2,9],[1,5,0],[2,6,6]], k = 20\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> There are only 6 submatrices, shown in the image above, that contain the top-left element of grid, and have a sum less than or equal to 20.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == grid.length </code></li>\n\t<li><code>n == grid[i].length</code></li>\n\t<li><code>1 &lt;= n, m &lt;= 1000 </code></li>\n\t<li><code>0 &lt;= grid[i][j] &lt;= 1000</code></li>\n\t<li><code>1 &lt;= k &lt;= 10<sup>9</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 126,
            "dislikes": 5,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "stats": "{\"totalAccepted\": \"24.8K\", \"totalSubmission\": \"41.9K\", \"totalAcceptedRaw\": 24814, \"totalSubmissionRaw\": 41946, \"acRate\": \"59.2%\"}",
            "hints": [],
            "rephrased": {
                "body": "Given a 0-indexed integer matrix `grid` and an integer `k`, determine the number of submatrices that include the top-left element of the `grid` and have a sum less than or equal to `k`. A submatrix is defined by selecting a top-left corner (which is fixed as (0,0) in this problem) and a bottom-right corner within the bounds of the given `grid`.",
                "constraints": [
                    "m == grid.length",
                    "n == grid[i].length",
                    "1 <= n, m <= 1000",
                    "0 <= grid[i][j] <= 1000",
                    "1 <= k <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "grid = [[7,6,3],[6,6,1]], k = 18",
                        "output": "4",
                        "explanation": "There are 4 submatrices containing the top-left element with a sum less than or equal to 18."
                    },
                    {
                        "input": "grid = [[7,2,9],[1,5,0],[2,6,6]], k = 20",
                        "output": "6",
                        "explanation": "There are 6 submatrices containing the top-left element with a sum less than or equal to 20."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int countSubmatrices(vector<vector<int>>& grid, int k) {\n    const int m = grid.size();\n    const int n = grid[0].size();\n    int ans = 0;\n    vector<vector<int>> prefix(m + 1, vector<int>(n + 1));\n\n    for (int i = 0; i < m; ++i)\n      for (int j = 0; j < n; ++j) {\n        prefix[i + 1][j + 1] =\n            grid[i][j] + prefix[i][j + 1] + prefix[i + 1][j] - prefix[i][j];\n        if (prefix[i + 1][j + 1] <= k)\n          ++ans;\n      }\n\n    return ans;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int countSubmatrices(int[][] grid, int k) {\n    final int m = grid.length;\n    final int n = grid[0].length;\n    int ans = 0;\n    int[][] prefix = new int[m + 1][n + 1];\n\n    for (int i = 0; i < m; ++i)\n      for (int j = 0; j < n; ++j) {\n        prefix[i + 1][j + 1] = grid[i][j] + prefix[i][j + 1] + prefix[i + 1][j] - prefix[i][j];\n        if (prefix[i + 1][j + 1] <= k)\n          ++ans;\n      }\n\n    return ans;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def countSubmatrices(self, grid: List[List[int]], k: int) -> int:\n    m = len(grid)\n    n = len(grid[0])\n    ans = 0\n    # prefix[i][j] := the sum of matrix[0..i)[0..j)\n    prefix = [[0] * (n + 1) for _ in range(m + 1)]\n\n    for i in range(m):\n      for j in range(n):\n        prefix[i + 1][j + 1] = \\\n            grid[i][j] + prefix[i][j + 1] + \\\n            prefix[i + 1][j] - prefix[i][j]\n        if prefix[i + 1][j + 1] <= k:\n          ans += 1\n\n    return ans\n",
                "lang_text": "py"
            }
        }
    }
}