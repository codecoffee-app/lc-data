{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2588",
            "title": "Count the Number of Beautiful Subarrays",
            "titleSlug": "count-the-number-of-beautiful-subarrays",
            "content": "<p>You are given a <strong>0-indexed</strong> integer array <code>nums</code>. In one operation, you can:</p>\n\n<ul>\n\t<li>Choose two different indices <code>i</code> and <code>j</code> such that <code>0 &lt;= i, j &lt; nums.length</code>.</li>\n\t<li>Choose a non-negative integer <code>k</code> such that the <code>k<sup>th</sup></code> bit (<strong>0-indexed</strong>) in the binary representation of <code>nums[i]</code> and <code>nums[j]</code> is <code>1</code>.</li>\n\t<li>Subtract <code>2<sup>k</sup></code> from <code>nums[i]</code> and <code>nums[j]</code>.</li>\n</ul>\n\n<p>A subarray is <strong>beautiful</strong> if it is possible to make all of its elements equal to <code>0</code> after applying the above operation any number of times.</p>\n\n<p>Return <em>the number of <strong>beautiful subarrays</strong> in the array</em> <code>nums</code>.</p>\n\n<p>A subarray is a contiguous <strong>non-empty</strong> sequence of elements within an array.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [4,3,1,2,4]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> There are 2 beautiful subarrays in nums: [4,<u>3,1,2</u>,4] and [<u>4,3,1,2,4</u>].\n- We can make all elements in the subarray [3,1,2] equal to 0 in the following way:\n  - Choose [<u>3</u>, 1, <u>2</u>] and k = 1. Subtract 2<sup>1</sup> from both numbers. The subarray becomes [1, 1, 0].\n  - Choose [<u>1</u>, <u>1</u>, 0] and k = 0. Subtract 2<sup>0</sup> from both numbers. The subarray becomes [0, 0, 0].\n- We can make all elements in the subarray [4,3,1,2,4] equal to 0 in the following way:\n  - Choose [<u>4</u>, 3, 1, 2, <u>4</u>] and k = 2. Subtract 2<sup>2</sup> from both numbers. The subarray becomes [0, 3, 1, 2, 0].\n  - Choose [0, <u>3</u>, <u>1</u>, 2, 0] and k = 0. Subtract 2<sup>0</sup> from both numbers. The subarray becomes [0, 2, 0, 2, 0].\n  - Choose [0, <u>2</u>, 0, <u>2</u>, 0] and k = 1. Subtract 2<sup>1</sup> from both numbers. The subarray becomes [0, 0, 0, 0, 0].\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,10,4]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> There are no beautiful subarrays in nums.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 10<sup>6</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 459,
            "dislikes": 17,
            "similarQuestions": "[{\"title\": \"Maximum XOR for Each Query\", \"titleSlug\": \"maximum-xor-for-each-query\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Count the Number of Ideal Arrays\", \"titleSlug\": \"count-the-number-of-ideal-arrays\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "stats": "{\"totalAccepted\": \"15.6K\", \"totalSubmission\": \"31.6K\", \"totalAcceptedRaw\": 15634, \"totalSubmissionRaw\": 31565, \"acRate\": \"49.5%\"}",
            "hints": [
                "A subarray is beautiful if its xor is equal to zero.",
                "Compute the prefix xor for every index, then the xor of subarray [left, right] is equal to zero if prefix_xor[left] ^ perfix_xor[right] == 0",
                "Iterate from left to right and maintain a hash table to count the number of indices equal to the current prefix xor."
            ],
            "rephrased": {
                "body": "Given a 0-indexed integer array `nums`, you can perform the following operation any number of times:\n\n*   Choose two distinct indices `i` and `j` (0 <= i, j < nums.length).\n*   Choose a non-negative integer `k` such that the k-th bit (0-indexed) in the binary representation of `nums[i]` and `nums[j]` is 1.\n*   Subtract 2^k from both `nums[i]` and `nums[j]`.\n\nA subarray is considered 'beautiful' if it's possible to make all its elements equal to 0 by applying the described operation. Return the total count of beautiful subarrays present in the array `nums`. A subarray is a contiguous, non-empty sequence of elements within the given array.",
                "constraints": [
                    "1 <= nums.length <= 10^5",
                    "0 <= nums[i] <= 10^6"
                ],
                "testcases": [
                    {
                        "input": "[4,3,1,2,4]",
                        "output": "2",
                        "explanation": "The beautiful subarrays are [3,1,2] and [4,3,1,2,4]. For the subarray [3, 1, 2], the following steps can be taken:\n    *   Choose [3, 1, 2] and k = 1. Subtract 2^1 from 3 and 2 resulting in [1, 1, 0]\n    *   Choose [1, 1, 0] and k = 0. Subtract 2^0 from 1 and 1 resulting in [0, 0, 0]\n\nFor the subarray [4, 3, 1, 2, 4], the following steps can be taken:\n    *   Choose [4, 3, 1, 2, 4] and k = 2. Subtract 2^2 from 4 and 4 resulting in [0, 3, 1, 2, 0]\n    *   Choose [0, 3, 1, 2, 0] and k = 0. Subtract 2^0 from 3 and 1 resulting in [0, 2, 0, 2, 0]\n    *   Choose [0, 2, 0, 2, 0] and k = 1. Subtract 2^1 from 2 and 2 resulting in [0, 0, 0, 0, 0]"
                    },
                    {
                        "input": "[1,10,4]",
                        "output": "0",
                        "explanation": "There are no beautiful subarrays in nums."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "maximum-xor-for-each-query",
                "title": "Maximum XOR for Each Query",
                "isPaidOnly": false
            },
            {
                "difficulty": "Hard",
                "titleSlug": "count-the-number-of-ideal-arrays",
                "title": "Count the Number of Ideal Arrays",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "A subarray is beautiful if its xor is equal to zero.",
            "Compute the prefix xor for every index, then the xor of subarray [left, right] is equal to zero if prefix_xor[left] ^ perfix_xor[right] == 0",
            "Iterate from left to right and maintain a hash table to count the number of indices equal to the current prefix xor."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ]
    }
}