{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1684",
            "title": "Count the Number of Consistent Strings",
            "titleSlug": "count-the-number-of-consistent-strings",
            "content": "<p>You are given a string <code>allowed</code> consisting of <strong>distinct</strong> characters and an array of strings <code>words</code>. A string is <strong>consistent </strong>if all characters in the string appear in the string <code>allowed</code>.</p>\n\n<p>Return<em> the number of <strong>consistent</strong> strings in the array </em><code>words</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> allowed = &quot;ab&quot;, words = [&quot;ad&quot;,&quot;bd&quot;,&quot;aaab&quot;,&quot;baa&quot;,&quot;badab&quot;]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> Strings &quot;aaab&quot; and &quot;baa&quot; are consistent since they only contain characters &#39;a&#39; and &#39;b&#39;.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> allowed = &quot;abc&quot;, words = [&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;ab&quot;,&quot;ac&quot;,&quot;bc&quot;,&quot;abc&quot;]\n<strong>Output:</strong> 7\n<strong>Explanation:</strong> All strings are consistent.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> allowed = &quot;cad&quot;, words = [&quot;cc&quot;,&quot;acd&quot;,&quot;b&quot;,&quot;ba&quot;,&quot;bac&quot;,&quot;bad&quot;,&quot;ac&quot;,&quot;d&quot;]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> Strings &quot;cc&quot;, &quot;acd&quot;, &quot;ac&quot;, and &quot;d&quot; are consistent.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= words.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= allowed.length &lt;=<sup> </sup>26</code></li>\n\t<li><code>1 &lt;= words[i].length &lt;= 10</code></li>\n\t<li>The characters in <code>allowed</code> are <strong>distinct</strong>.</li>\n\t<li><code>words[i]</code> and <code>allowed</code> contain only lowercase English letters.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 1641,
            "dislikes": 64,
            "similarQuestions": "[{\"title\": \"Count Pairs Of Similar Strings\", \"titleSlug\": \"count-pairs-of-similar-strings\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "stats": "{\"totalAccepted\": \"157.5K\", \"totalSubmission\": \"190.5K\", \"totalAcceptedRaw\": 157518, \"totalSubmissionRaw\": 190490, \"acRate\": \"82.7%\"}",
            "hints": [
                "A string is incorrect if it contains a character that is not allowed",
                "Constraints are small enough for brute force"
            ],
            "rephrased": {
                "body": "You are given a string `allowed` consisting of distinct characters and an array of strings `words`. A string is considered consistent if all characters in the string appear in the string `allowed`.  Determine the number of consistent strings present in the `words` array.",
                "constraints": [
                    "1 <= words.length <= 10<sup>4</sup>",
                    "1 <= allowed.length <= 26",
                    "1 <= words[i].length <= 10",
                    "The characters in `allowed` are distinct.",
                    "`words[i]` and `allowed` contain only lowercase English letters."
                ],
                "testcases": [
                    {
                        "input": "allowed = \"ab\", words = [\"ad\",\"bd\",\"aaab\",\"baa\",\"badab\"]",
                        "output": "2",
                        "explanation": "The strings \"aaab\" and \"baa\" are consistent because they only contain the characters 'a' and 'b', both of which are in the 'allowed' string \"ab\"."
                    },
                    {
                        "input": "allowed = \"abc\", words = [\"a\",\"b\",\"c\",\"ab\",\"ac\",\"bc\",\"abc\"]",
                        "output": "7",
                        "explanation": "All strings in the `words` array are consistent because they only contain the characters 'a', 'b', and 'c', which are all present in the 'allowed' string \"abc\"."
                    },
                    {
                        "input": "allowed = \"cad\", words = [\"cc\",\"acd\",\"b\",\"ba\",\"bac\",\"bad\",\"ac\",\"d\"]",
                        "output": "4",
                        "explanation": "The strings \"cc\", \"acd\", \"ac\", and \"d\" are consistent because they only contain characters that are also present in the 'allowed' string \"cad\"."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Easy",
                "titleSlug": "count-pairs-of-similar-strings",
                "title": "Count Pairs Of Similar Strings",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "A string is incorrect if it contains a character that is not allowed",
            "Constraints are small enough for brute force"
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "solutions": {}
    }
}