{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1442",
            "title": "Count Triplets That Can Form Two Arrays of Equal XOR",
            "titleSlug": "count-triplets-that-can-form-two-arrays-of-equal-xor",
            "content": "<p>Given an array of integers <code>arr</code>.</p>\n\n<p>We want to select three indices <code>i</code>, <code>j</code> and <code>k</code> where <code>(0 &lt;= i &lt; j &lt;= k &lt; arr.length)</code>.</p>\n\n<p>Let&#39;s define <code>a</code> and <code>b</code> as follows:</p>\n\n<ul>\n\t<li><code>a = arr[i] ^ arr[i + 1] ^ ... ^ arr[j - 1]</code></li>\n\t<li><code>b = arr[j] ^ arr[j + 1] ^ ... ^ arr[k]</code></li>\n</ul>\n\n<p>Note that <strong>^</strong> denotes the <strong>bitwise-xor</strong> operation.</p>\n\n<p>Return <em>the number of triplets</em> (<code>i</code>, <code>j</code> and <code>k</code>) Where <code>a == b</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [2,3,1,6,7]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> The triplets are (0,1,2), (0,2,2), (2,3,4) and (2,4,4)\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1,1,1,1,1]\n<strong>Output:</strong> 10\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= arr.length &lt;= 300</code></li>\n\t<li><code>1 &lt;= arr[i] &lt;= 10<sup>8</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 1335,
            "dislikes": 59,
            "similarQuestions": "[{\"title\": \"Find The Original Array of Prefix Xor\", \"titleSlug\": \"find-the-original-array-of-prefix-xor\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "stats": "{\"totalAccepted\": \"36.2K\", \"totalSubmission\": \"47K\", \"totalAcceptedRaw\": 36164, \"totalSubmissionRaw\": 47017, \"acRate\": \"76.9%\"}",
            "hints": [
                "We are searching for sub-array of length \u2265 2 and we need to split it to 2 non-empty arrays so that the xor of the first array is equal to the xor of the second array. This is equivalent to searching for sub-array with xor = 0.",
                "Keep the prefix xor of arr in another array, check the xor of all sub-arrays in O(n^2), if the xor of sub-array of length x is 0 add x-1 to the answer."
            ],
            "rephrased": {
                "body": "Given an array of integers `arr`, find the number of triplets (i, j, k) such that 0 <= i < j <= k < arr.length, and the bitwise XOR of the elements from index i to j-1 is equal to the bitwise XOR of the elements from index j to k.  In other words, find the number of triplets where `arr[i] ^ arr[i+1] ^ ... ^ arr[j-1] == arr[j] ^ arr[j+1] ^ ... ^ arr[k]`.",
                "constraints": [
                    "1 <= arr.length <= 300",
                    "1 <= arr[i] <= 10^8"
                ],
                "testcases": [
                    {
                        "input": "[2,3,1,6,7]",
                        "output": "4",
                        "explanation": "The triplets are (0,1,2), (0,2,2), (2,3,4) and (2,4,4)"
                    },
                    {
                        "input": "[1,1,1,1,1]",
                        "output": "10",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "find-the-original-array-of-prefix-xor",
                "title": "Find The Original Array of Prefix Xor",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "We are searching for sub-array of length \u2265 2 and we need to split it to 2 non-empty arrays so that the xor of the first array is equal to the xor of the second array. This is equivalent to searching for sub-array with xor = 0.",
            "Keep the prefix xor of arr in another array, check the xor of all sub-arrays in O(n^2), if the xor of sub-array of length x is 0 add x-1 to the answer."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "solutions": {
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def countTriplets(self, arr: List[int]) -> int:\n    ans = 0\n    xors = [0]\n    prefix = 0\n\n    for i, a in enumerate(arr):\n      prefix ^= a\n      xors.append(prefix)\n\n    for j in range(1, len(arr)):\n      for i in range(0, j):\n        xors_i = xors[j] ^ xors[i]\n        for k in range(j, len(arr)):\n          xors_k = xors[k + 1] ^ xors[j]\n          if xors_i == xors_k:\n            ans += 1\n\n    return ans\n",
                "lang_text": "py"
            }
        }
    }
}