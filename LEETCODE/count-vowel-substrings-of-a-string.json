{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2062",
            "title": "Count Vowel Substrings of a String",
            "titleSlug": "count-vowel-substrings-of-a-string",
            "content": "<p>A <strong>substring</strong> is a contiguous (non-empty) sequence of characters within a string.</p>\n\n<p>A <strong>vowel substring</strong> is a substring that <strong>only</strong> consists of vowels (<code>&#39;a&#39;</code>, <code>&#39;e&#39;</code>, <code>&#39;i&#39;</code>, <code>&#39;o&#39;</code>, and <code>&#39;u&#39;</code>) and has <strong>all five</strong> vowels present in it.</p>\n\n<p>Given a string <code>word</code>, return <em>the number of <strong>vowel substrings</strong> in</em> <code>word</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> word = &quot;aeiouu&quot;\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The vowel substrings of word are as follows (underlined):\n- &quot;<strong><u>aeiou</u></strong>u&quot;\n- &quot;<strong><u>aeiouu</u></strong>&quot;\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> word = &quot;unicornarihan&quot;\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> Not all 5 vowels are present, so there are no vowel substrings.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> word = &quot;cuaieuouac&quot;\n<strong>Output:</strong> 7\n<strong>Explanation:</strong> The vowel substrings of word are as follows (underlined):\n- &quot;c<strong><u>uaieuo</u></strong>uac&quot;\n- &quot;c<strong><u>uaieuou</u></strong>ac&quot;\n- &quot;c<strong><u>uaieuoua</u></strong>c&quot;\n- &quot;cu<strong><u>aieuo</u></strong>uac&quot;\n- &quot;cu<strong><u>aieuou</u></strong>ac&quot;\n- &quot;cu<strong><u>aieuoua</u></strong>c&quot;\n- &quot;cua<strong><u>ieuoua</u></strong>c&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= word.length &lt;= 100</code></li>\n\t<li><code>word</code> consists of lowercase English letters only.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 881,
            "dislikes": 210,
            "similarQuestions": "[{\"title\": \"Number of Matching Subsequences\", \"titleSlug\": \"number-of-matching-subsequences\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Subarrays with K Different Integers\", \"titleSlug\": \"subarrays-with-k-different-integers\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Number of Substrings With Only 1s\", \"titleSlug\": \"number-of-substrings-with-only-1s\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Longest Substring Of All Vowels in Order\", \"titleSlug\": \"longest-substring-of-all-vowels-in-order\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Total Appeal of A String\", \"titleSlug\": \"total-appeal-of-a-string\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "stats": "{\"totalAccepted\": \"34.7K\", \"totalSubmission\": \"52K\", \"totalAcceptedRaw\": 34700, \"totalSubmissionRaw\": 51988, \"acRate\": \"66.7%\"}",
            "hints": [
                "While generating substrings starting at any index, do you need to continue generating larger substrings if you encounter a consonant?",
                "Can you store the count of characters to avoid generating substrings altogether?"
            ],
            "rephrased": {
                "body": "Given a string `word`, find the number of vowel substrings within it. A vowel substring is a contiguous sequence of characters that consists only of vowels ('a', 'e', 'i', 'o', and 'u') and contains all five vowels at least once.",
                "constraints": [
                    "1 <= word.length <= 100",
                    "word consists of lowercase English letters only."
                ],
                "testcases": [
                    {
                        "input": "aeiouu",
                        "output": "2",
                        "explanation": "The substrings 'aeiou' and 'aeiouu' both satisfy the conditions of being vowel substrings, consisting only of vowels and containing all five vowels."
                    },
                    {
                        "input": "unicornarihan",
                        "output": "0",
                        "explanation": "The string does not contain all five vowels in any substring. Therefore, there are no vowel substrings."
                    },
                    {
                        "input": "cuaieuouac",
                        "output": "7",
                        "explanation": "The following substrings satisfy the conditions: 'uaieuo', 'uaieuou', 'uaieuoua', 'aieuo', 'aieuou', 'aieuoua', and 'ieuoua'."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "number-of-matching-subsequences",
                "title": "Number of Matching Subsequences",
                "isPaidOnly": false
            },
            {
                "difficulty": "Hard",
                "titleSlug": "subarrays-with-k-different-integers",
                "title": "Subarrays with K Different Integers",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "number-of-substrings-with-only-1s",
                "title": "Number of Substrings With Only 1s",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "longest-substring-of-all-vowels-in-order",
                "title": "Longest Substring Of All Vowels in Order",
                "isPaidOnly": false
            },
            {
                "difficulty": "Hard",
                "titleSlug": "total-appeal-of-a-string",
                "title": "Total Appeal of A String",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "While generating substrings starting at any index, do you need to continue generating larger substrings if you encounter a consonant?",
            "Can you store the count of characters to avoid generating substrings altogether?"
        ],
        "relatedTopics": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int countVowelSubstrings(string word) {\n    return countVowelSubstringsAtMost(word, 5) -\n           countVowelSubstringsAtMost(word, 4);\n  }\n\n private:\n  int countVowelSubstringsAtMost(const string& s, int goal) {\n    int ans = 0;\n    int k = goal;\n    vector<int> count(26);\n\n    for (int l = 0, r = 0; r < s.length(); ++r) {\n      if (!isVowel(s[r])) {  // fresh start\n        l = r + 1;\n        k = goal;\n        count = vector<int>(26);\n        continue;\n      }\n      if (++count[s[r] - 'a'] == 1)\n        --k;\n      while (k == -1)\n        if (--count[s[l++] - 'a'] == 0)\n          ++k;\n      ans += r - l + 1;  // s[l..r], s[l + 1..r], ..., s[r]\n    }\n\n    return ans;\n  }\n\n  bool isVowel(char c) {\n    static constexpr string_view kVowels = \"aeiou\";\n    return kVowels.find(c) != string_view::npos;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int countVowelSubstrings(String word) {\n    return countVowelSubstringsAtMost(word, 5) - countVowelSubstringsAtMost(word, 4);\n  }\n\n  private int countVowelSubstringsAtMost(final String s, int goal) {\n    int ans = 0;\n    int k = goal;\n    int[] count = new int[26];\n\n    for (int l = 0, r = 0; r < s.length(); ++r) {\n      if (!isVowel(s.charAt(r))) { // fresh start\n        l = r + 1;\n        k = goal;\n        count = new int[26];\n        continue;\n      }\n      if (++count[s.charAt(r) - 'a'] == 1)\n        --k;\n      while (k == -1)\n        if (--count[s.charAt(l++) - 'a'] == 0)\n          ++k;\n      ans += r - l + 1; // s[l..r], s[l + 1..r], ..., s[r]\n    }\n\n    return ans;\n  }\n\n  private boolean isVowel(char c) {\n    return \"aeiou\".indexOf(c) != -1;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def countVowelSubstrings(self, word: str) -> int:\n    kVowels = 'aeiou'\n\n    def countVowelSubstringsAtMost(goal: int) -> int:\n      ans = 0\n      k = goal\n      count = collections.Counter()\n\n      l = 0\n      for r, c in enumerate(word):\n        if c not in kVowels:  # fresh start\n          l = r + 1\n          k = goal\n          count = collections.Counter()\n          continue\n        count[c] += 1\n        if count[c] == 1:\n          k -= 1\n        while k == -1:\n          count[word[l]] -= 1\n          if count[word[l]] == 0:\n            k += 1\n          l += 1\n        ans += r - l + 1  # s[l..r], s[l + 1..r], ..., s[r]\n\n      return ans\n\n    return countVowelSubstringsAtMost(5) - countVowelSubstringsAtMost(4)\n",
                "lang_text": "py"
            }
        }
    }
}