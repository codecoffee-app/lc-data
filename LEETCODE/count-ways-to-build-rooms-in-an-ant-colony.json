{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1916",
            "title": "Count Ways to Build Rooms in an Ant Colony",
            "titleSlug": "count-ways-to-build-rooms-in-an-ant-colony",
            "content": "<p>You are an ant tasked with adding <code>n</code> new rooms numbered <code>0</code> to <code>n-1</code> to your colony. You are given the expansion plan as a <strong>0-indexed</strong> integer array of length <code>n</code>, <code>prevRoom</code>, where <code>prevRoom[i]</code> indicates that you must build room <code>prevRoom[i]</code> before building room <code>i</code>, and these two rooms must be connected <strong>directly</strong>. Room <code>0</code> is already built, so <code>prevRoom[0] = -1</code>. The expansion&nbsp;plan is given such that once all the rooms are built, every room will be reachable from room <code>0</code>.</p>\r\n\r\n<p>You can only build <strong>one room</strong> at a time, and you can travel freely between rooms you have <strong>already built</strong> only if they are <strong>connected</strong>.&nbsp;You can choose to build <strong>any room</strong> as long as its <strong>previous room</strong>&nbsp;is already built.</p>\r\n\r\n<p>Return <em>the <strong>number of different orders</strong> you can build all the rooms in</em>. Since the answer may be large, return it <strong>modulo</strong> <code>10<sup>9</sup> + 7</code>.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong class=\"example\">Example 1:</strong></p>\r\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/06/19/d1.JPG\" style=\"width: 200px; height: 212px;\" />\r\n<pre>\r\n<strong>Input:</strong> prevRoom = [-1,0,1]\r\n<strong>Output:</strong> 1\r\n<strong>Explanation:</strong>&nbsp;There is only one way to build the additional rooms: 0 &rarr; 1 &rarr; 2\r\n</pre>\r\n\r\n<p><strong class=\"example\">Example 2:</strong></p>\r\n<strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/06/19/d2.JPG\" style=\"width: 200px; height: 239px;\" /></strong>\r\n\r\n<pre>\r\n<strong>Input:</strong> prevRoom = [-1,0,0,1,2]\r\n<strong>Output:</strong> 6\r\n<strong>Explanation:\r\n</strong>The 6 ways are:\r\n0 &rarr; 1 &rarr; 3 &rarr; 2 &rarr; 4\r\n0 &rarr; 2 &rarr; 4 &rarr; 1 &rarr; 3\r\n0 &rarr; 1 &rarr; 2 &rarr; 3 &rarr; 4\r\n0 &rarr; 1 &rarr; 2 &rarr; 4 &rarr; 3\r\n0 &rarr; 2 &rarr; 1 &rarr; 3 &rarr; 4\r\n0 &rarr; 2 &rarr; 1 &rarr; 4 &rarr; 3\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>n == prevRoom.length</code></li>\r\n\t<li><code>2 &lt;= n &lt;= 10<sup>5</sup></code></li>\r\n\t<li><code>prevRoom[0] == -1</code></li>\r\n\t<li><code>0 &lt;= prevRoom[i] &lt; n</code> for all <code>1 &lt;= i &lt; n</code></li>\r\n\t<li>Every room is reachable from room <code>0</code> once all the rooms are built.</li>\r\n</ul>",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 465,
            "dislikes": 50,
            "similarQuestions": "[{\"title\": \"Count Anagrams\", \"titleSlug\": \"count-anagrams\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Count the Number of Good Subsequences\", \"titleSlug\": \"count-the-number-of-good-subsequences\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Topological Sort",
                    "slug": "topological-sort"
                },
                {
                    "name": "Combinatorics",
                    "slug": "combinatorics"
                }
            ],
            "stats": "{\"totalAccepted\": \"6.6K\", \"totalSubmission\": \"13.4K\", \"totalAcceptedRaw\": 6594, \"totalSubmissionRaw\": 13405, \"acRate\": \"49.2%\"}",
            "hints": [
                "Use dynamic programming.",
                "Let dp[i] be the number of ways to solve the problem for the subtree of node i.",
                "Imagine you are trying to fill an array with the order of traversal, dp[i] equals the multiplications of the number of ways to distribute the subtrees of the children of i on the array using combinatorics, multiplied bu their dp values."
            ],
            "rephrased": {
                "body": "You are an ant tasked with expanding your colony by adding `n` new rooms, numbered from 0 to `n-1`. You are given an expansion plan represented by the 0-indexed integer array `prevRoom` of length `n`. `prevRoom[i]` indicates that room `prevRoom[i]` must be built before room `i`, and these two rooms must be directly connected. Room 0 is already built, so `prevRoom[0] = -1`. The expansion plan ensures that once all rooms are built, every room is reachable from room 0.\n\nYou can only build one room at a time and can travel freely between already built and connected rooms. You are free to choose any room to build, as long as its preceding room is already constructed.\n\nDetermine the number of distinct orders in which you can build all the rooms. Since the answer may be large, return it modulo 10^9 + 7.",
                "constraints": [
                    "n == prevRoom.length",
                    "2 <= n <= 10^5",
                    "prevRoom[0] == -1",
                    "0 <= prevRoom[i] < n for all 1 <= i < n",
                    "Every room is reachable from room 0 once all the rooms are built."
                ],
                "testcases": [
                    {
                        "input": "[-1,0,1]",
                        "output": "1",
                        "explanation": "There is only one valid order to build the rooms: 0 -> 1 -> 2"
                    },
                    {
                        "input": "[-1,0,0,1,2]",
                        "output": "6",
                        "explanation": "There are six valid orders to build the rooms:\n0 -> 1 -> 3 -> 2 -> 4\n0 -> 2 -> 4 -> 1 -> 3\n0 -> 1 -> 2 -> 3 -> 4\n0 -> 1 -> 2 -> 4 -> 3\n0 -> 2 -> 1 -> 3 -> 4\n0 -> 2 -> 1 -> 4 -> 3"
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Hard",
                "titleSlug": "count-anagrams",
                "title": "Count Anagrams",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "count-the-number-of-good-subsequences",
                "title": "Count the Number of Good Subsequences",
                "isPaidOnly": true
            }
        ],
        "hints": [
            "Use dynamic programming.",
            "Let dp[i] be the number of ways to solve the problem for the subtree of node i.",
            "Imagine you are trying to fill an array with the order of traversal, dp[i] equals the multiplications of the number of ways to distribute the subtrees of the children of i on the array using combinatorics, multiplied bu their dp values."
        ],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Topological Sort",
                "slug": "topological-sort"
            },
            {
                "name": "Combinatorics",
                "slug": "combinatorics"
            }
        ]
    }
}