{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1185",
            "title": "Day of the Week",
            "titleSlug": "day-of-the-week",
            "content": "<p>Given a date, return the corresponding day of the week for that date.</p>\n\n<p>The input is given as three integers representing the <code>day</code>, <code>month</code> and <code>year</code> respectively.</p>\n\n<p>Return the answer as one of the following values&nbsp;<code>{&quot;Sunday&quot;, &quot;Monday&quot;, &quot;Tuesday&quot;, &quot;Wednesday&quot;, &quot;Thursday&quot;, &quot;Friday&quot;, &quot;Saturday&quot;}</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> day = 31, month = 8, year = 2019\n<strong>Output:</strong> &quot;Saturday&quot;\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> day = 18, month = 7, year = 1999\n<strong>Output:</strong> &quot;Sunday&quot;\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> day = 15, month = 8, year = 1993\n<strong>Output:</strong> &quot;Sunday&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The given dates are valid dates between the years <code>1971</code> and <code>2100</code>.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 372,
            "dislikes": 2382,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "stats": "{\"totalAccepted\": \"61.1K\", \"totalSubmission\": \"106.6K\", \"totalAcceptedRaw\": 61091, \"totalSubmissionRaw\": 106597, \"acRate\": \"57.3%\"}",
            "hints": [
                "Sum up the number of days for the years before the given year.",
                "Handle the case of a leap year.",
                "Find the number of days for each month of the given year."
            ],
            "rephrased": {
                "body": "Given a date represented by the day, month, and year, determine the corresponding day of the week. The function should return the day of the week as a string from the set {\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"}.",
                "constraints": [
                    "The given dates are valid dates between the years 1971 and 2100."
                ],
                "testcases": [
                    {
                        "input": "day = 31, month = 8, year = 2019",
                        "output": "Saturday",
                        "explanation": null
                    },
                    {
                        "input": "day = 18, month = 7, year = 1999",
                        "output": "Sunday",
                        "explanation": null
                    },
                    {
                        "input": "day = 15, month = 8, year = 1993",
                        "output": "Sunday",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "Sum up the number of days for the years before the given year.",
            "Handle the case of a leap year.",
            "Find the number of days for each month of the given year."
        ],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  string dayOfTheWeek(int day, int month, int year) {\n    vector<string> week = {\"Sunday\",   \"Monday\", \"Tuesday\", \"Wednesday\",\n                           \"Thursday\", \"Friday\", \"Saturday\"};\n    vector<int> days = {\n        31, isLeapYear(year) ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};\n    int count = 0;\n\n    for (int i = 1971; i < year; ++i)\n      count += i % 4 == 0 ? 366 : 365;\n    for (int i = 0; i < month - 1; ++i)\n      count += days[i];\n    count += day;\n\n    return week[(count + 4) % 7];\n  }\n\n private:\n  bool isLeapYear(int year) {\n    return (year % 4 == 0 && year % 100 != 0) || year % 400 == 0;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public String dayOfTheWeek(int day, int month, int year) {\n    String[] week = {\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"};\n    int[] days = {31, isLeapYear(year) ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};\n    int count = 0;\n\n    for (int i = 1971; i < year; ++i)\n      count += i % 4 == 0 ? 366 : 365;\n    for (int i = 0; i < month - 1; ++i)\n      count += days[i];\n    count += day;\n\n    return week[(count + 4) % 7];\n  }\n\n  private boolean isLeapYear(int year) {\n    return (year % 4 == 0 && year % 100 != 0) || year % 400 == 0;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def dayOfTheWeek(self, day: int, month: int, year: int) -> str:\n    def isLeapYear(year: int) -> bool:\n      return (year % 4 == 0 and year % 100 != 0) or year % 400 == 0\n\n    week = [\"Sunday\", \"Monday\", \"Tuesday\",\n            \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"]\n    days = [31, 29 if isLeapYear(\n        year) else 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    count = 0\n\n    for i in range(1971, year):\n      count += 366 if i % 4 == 0 else 365\n    for i in range(month - 1):\n      count += days[i]\n    count += day\n\n    return week[(count + 4) % 7]\n",
                "lang_text": "py"
            }
        }
    }
}