{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1154",
            "title": "Day of the Year",
            "titleSlug": "day-of-the-year",
            "content": "<p>Given a string <code>date</code> representing a <a href=\"https://en.wikipedia.org/wiki/Gregorian_calendar\" target=\"_blank\">Gregorian calendar</a> date formatted as <code>YYYY-MM-DD</code>, return <em>the day number of the year</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> date = &quot;2019-01-09&quot;\n<strong>Output:</strong> 9\n<strong>Explanation:</strong> Given date is the 9th day of the year in 2019.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> date = &quot;2019-02-10&quot;\n<strong>Output:</strong> 41\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>date.length == 10</code></li>\n\t<li><code>date[4] == date[7] == &#39;-&#39;</code>, and all other <code>date[i]</code>&#39;s are digits</li>\n\t<li><code>date</code> represents a calendar date between Jan 1<sup>st</sup>, 1900 and Dec 31<sup>th</sup>, 2019.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 420,
            "dislikes": 459,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "stats": "{\"totalAccepted\": \"53.2K\", \"totalSubmission\": \"109K\", \"totalAcceptedRaw\": 53214, \"totalSubmissionRaw\": 108970, \"acRate\": \"48.8%\"}",
            "hints": [
                "Have a integer array of how many days there are per month.  February gets one extra day if its a leap year.  Then, we can manually count the ordinal as day + (number of days in months before this one)."
            ],
            "rephrased": {
                "body": "Given a date string formatted as YYYY-MM-DD, representing a Gregorian calendar date, determine the day number of the year.",
                "constraints": [
                    "date.length == 10",
                    "date[4] == date[7] == '-' and all other date[i]'s are digits",
                    "date represents a calendar date between Jan 1st, 1900 and Dec 31st, 2019."
                ],
                "testcases": [
                    {
                        "input": "2019-01-09",
                        "output": "9",
                        "explanation": "The given date is the 9th day of the year 2019."
                    },
                    {
                        "input": "2019-02-10",
                        "output": "41",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "Have a integer array of how many days there are per month.  February gets one extra day if its a leap year.  Then, we can manually count the ordinal as day + (number of days in months before this one)."
        ],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int dayOfYear(string date) {\n    int year = stoi(date.substr(0, 4));\n    int month = stoi(date.substr(5, 2));\n    int day = stoi(date.substr(8));\n    vector<int> days = {\n        31, isLeapYear(year) ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};\n\n    return accumulate(days.begin(), days.begin() + month - 1, 0) + day;\n  }\n\n private:\n  bool isLeapYear(int year) {\n    return (year % 4 == 0 && year % 100 != 0) || year % 400 == 0;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int dayOfYear(String date) {\n    int ans = 0;\n    int year = Integer.valueOf(date.substring(0, 4));\n    int month = Integer.valueOf(date.substring(5, 7));\n    int day = Integer.valueOf(date.substring(8));\n    int[] days = new int[] {31, isLeapYear(year) ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};\n\n    for (int i = 0; i < month - 1; ++i)\n      ans += days[i];\n\n    return ans + day;\n  }\n\n  private boolean isLeapYear(int year) {\n    return (year % 4 == 0 && year % 100 != 0) || year % 400 == 0;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def dayOfYear(self, date: str) -> int:\n    def isLeapYear(year: int) -> bool:\n      return (year % 4 == 0 and year % 100 != 0) or year % 400 == 0\n\n    year = int(date[:4])\n    month = int(date[5:7])\n    day = int(date[8:])\n    days = [31, 29 if isLeapYear(\n        year) else 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n\n    return sum(days[:month - 1]) + day\n",
                "lang_text": "py"
            }
        }
    }
}