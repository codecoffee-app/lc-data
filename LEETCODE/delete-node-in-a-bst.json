{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "450",
            "title": "Delete Node in a BST",
            "titleSlug": "delete-node-in-a-bst",
            "content": "<p>Given a root node reference of a BST and a key, delete the node with the given key in the BST. Return <em>the <strong>root node reference</strong> (possibly updated) of the BST</em>.</p>\n\n<p>Basically, the deletion can be divided into two stages:</p>\n\n<ol>\n\t<li>Search for a node to remove.</li>\n\t<li>If the node is found, delete the node.</li>\n</ol>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/04/del_node_1.jpg\" style=\"width: 800px; height: 214px;\" />\n<pre>\n<strong>Input:</strong> root = [5,3,6,2,4,null,7], key = 3\n<strong>Output:</strong> [5,4,6,2,null,null,7]\n<strong>Explanation:</strong> Given key to delete is 3. So we find the node with value 3 and delete it.\nOne valid answer is [5,4,6,2,null,null,7], shown in the above BST.\nPlease notice that another valid answer is [5,2,6,null,4,null,7] and it&#39;s also accepted.\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/04/del_node_supp.jpg\" style=\"width: 350px; height: 255px;\" />\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [5,3,6,2,4,null,7], key = 0\n<strong>Output:</strong> [5,3,6,2,4,null,7]\n<strong>Explanation:</strong> The tree does not contain a node with value = 0.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [], key = 0\n<strong>Output:</strong> []\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[0, 10<sup>4</sup>]</code>.</li>\n\t<li><code>-10<sup>5</sup> &lt;= Node.val &lt;= 10<sup>5</sup></code></li>\n\t<li>Each node has a <strong>unique</strong> value.</li>\n\t<li><code>root</code> is a valid binary search tree.</li>\n\t<li><code>-10<sup>5</sup> &lt;= key &lt;= 10<sup>5</sup></code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong> Could you solve it with time complexity <code>O(height of tree)</code>?</p>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 8641,
            "dislikes": 238,
            "similarQuestions": "[{\"title\": \"Split BST\", \"titleSlug\": \"split-bst\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "stats": "{\"totalAccepted\": \"441.6K\", \"totalSubmission\": \"867K\", \"totalAcceptedRaw\": 441588, \"totalSubmissionRaw\": 866967, \"acRate\": \"50.9%\"}",
            "hints": [],
            "rephrased": {
                "body": "Given the root of a Binary Search Tree (BST) and a key value, delete the node with the given key from the BST if it exists. Return the root of the updated BST. The deletion process involves first searching for the node to delete and then deleting it if found.",
                "constraints": [
                    "The number of nodes in the tree is in the range [0, 10<sup>4</sup>].",
                    "-10<sup>5</sup> <= Node.val <= 10<sup>5</sup>",
                    "Each node has a unique value.",
                    "root is a valid binary search tree.",
                    "-10<sup>5</sup> <= key <= 10<sup>5</sup>"
                ],
                "testcases": [
                    {
                        "input": "root = [5,3,6,2,4,null,7], key = 3",
                        "output": "[5,4,6,2,null,null,7]",
                        "explanation": "The node with value 3 is deleted and replaced with its inorder successor, which is 4.  Another valid answer is [5,2,6,null,4,null,7]."
                    },
                    {
                        "input": "root = [5,3,6,2,4,null,7], key = 0",
                        "output": "[5,3,6,2,4,null,7]",
                        "explanation": "The tree does not contain a node with value 0, so the tree remains unchanged."
                    },
                    {
                        "input": "root = [], key = 0",
                        "output": "[]",
                        "explanation": "The tree is empty, so deleting any key results in an empty tree."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "split-bst",
                "title": "Split BST",
                "isPaidOnly": true
            }
        ],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Binary Search Tree",
                "slug": "binary-search-tree"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ]
    }
}