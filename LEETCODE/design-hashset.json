{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "705",
            "title": "Design HashSet",
            "titleSlug": "design-hashset",
            "content": "<p>Design a HashSet without using any built-in hash table libraries.</p>\n\n<p>Implement <code>MyHashSet</code> class:</p>\n\n<ul>\n\t<li><code>void add(key)</code> Inserts the value <code>key</code> into the HashSet.</li>\n\t<li><code>bool contains(key)</code> Returns whether the value <code>key</code> exists in the HashSet or not.</li>\n\t<li><code>void remove(key)</code> Removes the value <code>key</code> in the HashSet. If <code>key</code> does not exist in the HashSet, do nothing.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input</strong>\n[&quot;MyHashSet&quot;, &quot;add&quot;, &quot;add&quot;, &quot;contains&quot;, &quot;contains&quot;, &quot;add&quot;, &quot;contains&quot;, &quot;remove&quot;, &quot;contains&quot;]\n[[], [1], [2], [1], [3], [2], [2], [2], [2]]\n<strong>Output</strong>\n[null, null, null, true, false, null, true, null, false]\n\n<strong>Explanation</strong>\nMyHashSet myHashSet = new MyHashSet();\nmyHashSet.add(1);      // set = [1]\nmyHashSet.add(2);      // set = [1, 2]\nmyHashSet.contains(1); // return True\nmyHashSet.contains(3); // return False, (not found)\nmyHashSet.add(2);      // set = [1, 2]\nmyHashSet.contains(2); // return True\nmyHashSet.remove(2);   // set = [1]\nmyHashSet.contains(2); // return False, (already removed)</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= key &lt;= 10<sup>6</sup></code></li>\n\t<li>At most <code>10<sup>4</sup></code> calls will be made to <code>add</code>, <code>remove</code>, and <code>contains</code>.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 3678,
            "dislikes": 298,
            "similarQuestions": "[{\"title\": \"Design HashMap\", \"titleSlug\": \"design-hashmap\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Design Skiplist\", \"titleSlug\": \"design-skiplist\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                },
                {
                    "name": "Design",
                    "slug": "design"
                },
                {
                    "name": "Hash Function",
                    "slug": "hash-function"
                }
            ],
            "stats": "{\"totalAccepted\": \"385.5K\", \"totalSubmission\": \"574.7K\", \"totalAcceptedRaw\": 385537, \"totalSubmissionRaw\": 574748, \"acRate\": \"67.1%\"}",
            "hints": [],
            "rephrased": {
                "body": "Design a HashSet data structure without relying on built-in hash table libraries. Implement the `MyHashSet` class with the following methods:\n\n*   `void add(key)`: Inserts the value `key` into the HashSet.\n*   `bool contains(key)`: Returns `true` if the value `key` exists in the HashSet, `false` otherwise.\n*   `void remove(key)`: Removes the value `key` from the HashSet. If `key` is not present, the method should do nothing.",
                "constraints": [
                    "0 <= key <= 10^6",
                    "At most 10^4 calls will be made to add, remove, and contains."
                ],
                "testcases": [
                    {
                        "input": "[\"MyHashSet\", \"add\", \"add\", \"contains\", \"contains\", \"add\", \"contains\", \"remove\", \"contains\"]\n[[], [1], [2], [1], [3], [2], [2], [2], [2]]",
                        "output": "[null, null, null, true, false, null, true, null, false]",
                        "explanation": "Initializes a MyHashSet object, adds 1 and 2, checks if 1 exists (true), checks if 3 exists (false), adds 2 again, checks if 2 exists (true), removes 2, checks if 2 exists (false)."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Easy",
                "titleSlug": "design-hashmap",
                "title": "Design HashMap",
                "isPaidOnly": false
            },
            {
                "difficulty": "Hard",
                "titleSlug": "design-skiplist",
                "title": "Design Skiplist",
                "isPaidOnly": false
            }
        ],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Linked List",
                "slug": "linked-list"
            },
            {
                "name": "Design",
                "slug": "design"
            },
            {
                "name": "Hash Function",
                "slug": "hash-function"
            }
        ]
    }
}