{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1184",
            "title": "Distance Between Bus Stops",
            "titleSlug": "distance-between-bus-stops",
            "content": "<p>A bus&nbsp;has <code>n</code> stops numbered from <code>0</code> to <code>n - 1</code> that form&nbsp;a circle. We know the distance between all pairs of neighboring stops where <code>distance[i]</code> is the distance between the stops number&nbsp;<code>i</code> and <code>(i + 1) % n</code>.</p>\r\n\r\n<p>The bus goes along both directions&nbsp;i.e. clockwise and counterclockwise.</p>\r\n\r\n<p>Return the shortest distance between the given&nbsp;<code>start</code>&nbsp;and <code>destination</code>&nbsp;stops.</p>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong class=\"example\">Example 1:</strong></p>\r\n\r\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/09/03/untitled-diagram-1.jpg\" style=\"width: 388px; height: 240px;\" /></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> distance = [1,2,3,4], start = 0, destination = 1\r\n<strong>Output:</strong> 1\r\n<strong>Explanation:</strong> Distance between 0 and 1 is 1 or 9, minimum is 1.</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong class=\"example\">Example 2:</strong></p>\r\n\r\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/09/03/untitled-diagram-1-1.jpg\" style=\"width: 388px; height: 240px;\" /></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> distance = [1,2,3,4], start = 0, destination = 2\r\n<strong>Output:</strong> 3\r\n<strong>Explanation:</strong> Distance between 0 and 2 is 3 or 7, minimum is 3.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><strong class=\"example\">Example 3:</strong></p>\r\n\r\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/09/03/untitled-diagram-1-2.jpg\" style=\"width: 388px; height: 240px;\" /></p>\r\n\r\n<pre>\r\n<strong>Input:</strong> distance = [1,2,3,4], start = 0, destination = 3\r\n<strong>Output:</strong> 4\r\n<strong>Explanation:</strong> Distance between 0 and 3 is 6 or 4, minimum is 4.\r\n</pre>\r\n\r\n<p>&nbsp;</p>\r\n<p><strong>Constraints:</strong></p>\r\n\r\n<ul>\r\n\t<li><code>1 &lt;= n&nbsp;&lt;= 10^4</code></li>\r\n\t<li><code>distance.length == n</code></li>\r\n\t<li><code>0 &lt;= start, destination &lt; n</code></li>\r\n\t<li><code>0 &lt;= distance[i] &lt;= 10^4</code></li>\r\n</ul>",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 728,
            "dislikes": 81,
            "similarQuestions": "[{\"title\": \"Minimum Costs Using the Train Line\", \"titleSlug\": \"minimum-costs-using-the-train-line\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "stats": "{\"totalAccepted\": \"56.5K\", \"totalSubmission\": \"104.9K\", \"totalAcceptedRaw\": 56525, \"totalSubmissionRaw\": 104863, \"acRate\": \"53.9%\"}",
            "hints": [
                "Find the distance between the two stops if the bus moved in clockwise or counterclockwise directions."
            ],
            "rephrased": {
                "body": "A circular bus route has `n` stops, numbered from 0 to `n - 1`.  `distance[i]` represents the distance between stop `i` and the next stop `(i + 1) % n`. The bus travels in both clockwise and counterclockwise directions.  Determine the shortest distance between a given `start` and `destination` stop.",
                "constraints": [
                    "1 <= n <= 10^4",
                    "distance.length == n",
                    "0 <= start, destination < n",
                    "0 <= distance[i] <= 10^4"
                ],
                "testcases": [
                    {
                        "input": "distance = [1,2,3,4], start = 0, destination = 1",
                        "output": "1",
                        "explanation": "The distance between stop 0 and stop 1 is 1 in the clockwise direction. The counter-clockwise distance is 2 + 3 + 4 = 9. The minimum is 1."
                    },
                    {
                        "input": "distance = [1,2,3,4], start = 0, destination = 2",
                        "output": "3",
                        "explanation": "The distance between stop 0 and stop 2 in the clockwise direction is 1 + 2 = 3. The counter-clockwise distance is 3 + 4 = 7. The minimum is 3."
                    },
                    {
                        "input": "distance = [1,2,3,4], start = 0, destination = 3",
                        "output": "4",
                        "explanation": "The distance between stop 0 and stop 3 in the clockwise direction is 1 + 2 + 3 = 6. The counter-clockwise distance is 4. The minimum is 4."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Hard",
                "titleSlug": "minimum-costs-using-the-train-line",
                "title": "Minimum Costs Using the Train Line",
                "isPaidOnly": true
            }
        ],
        "hints": [
            "Find the distance between the two stops if the bus moved in clockwise or counterclockwise directions."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int distanceBetweenBusStops(vector<int>& distance, int start,\n                              int destination) {\n    int clockwise = 0;\n    int counterclockwise = 0;\n\n    if (start > destination)\n      swap(start, destination);\n\n    for (int i = 0; i < distance.size(); ++i) {\n      if (i >= start && i < destination)\n        clockwise += distance[i];\n      else\n        counterclockwise += distance[i];\n    }\n\n    return min(clockwise, counterclockwise);\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int distanceBetweenBusStops(int[] distance, int start, int destination) {\n    int clockwise = 0;\n    int counterclockwise = 0;\n\n    if (start > destination) {\n      int temp = start;\n      start = destination;\n      destination = temp;\n    }\n\n    for (int i = 0; i < distance.length; ++i) {\n      if (i >= start && i < destination)\n        clockwise += distance[i];\n      else\n        counterclockwise += distance[i];\n    }\n\n    return Math.min(clockwise, counterclockwise);\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def distanceBetweenBusStops(self, distance: List[int], start: int, destination: int) -> int:\n    clockwise = 0\n    counterclockwise = 0\n\n    if start > destination:\n      start, destination = destination, start\n\n    for i, d in enumerate(distance):\n      if i >= start and i < destination:\n        clockwise += d\n      else:\n        counterclockwise += d\n\n    return min(clockwise, counterclockwise)\n",
                "lang_text": "py"
            }
        }
    }
}