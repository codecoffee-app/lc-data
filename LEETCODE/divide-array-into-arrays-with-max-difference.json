{
    "failed": false,
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2966",
            "title": "Divide Array Into Arrays With Max Difference",
            "titleSlug": "divide-array-into-arrays-with-max-difference",
            "content": "<p>You are given an integer array <code>nums</code> of size <code>n</code> and a positive integer <code>k</code>.</p>\n\n<p>Divide the array into one or more arrays of size <code>3</code> satisfying the following conditions:</p>\n\n<ul>\n\t<li><strong>Each</strong> element of <code>nums</code> should be in <strong>exactly</strong> one array.</li>\n\t<li>The difference between <strong>any</strong> two elements in one array is less than or equal to <code>k</code>.</li>\n</ul>\n\n<p>Return <em>a </em><strong>2D</strong><em> array containing all the arrays. If it is impossible to satisfy the conditions, return an empty array. And if there are multiple answers, return <strong>any</strong> of them.</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,3,4,8,7,9,3,5,1], k = 2\n<strong>Output:</strong> [[1,1,3],[3,4,5],[7,8,9]]\n<strong>Explanation:</strong> We can divide the array into the following arrays: [1,1,3], [3,4,5] and [7,8,9].\nThe difference between any two elements in each array is less than or equal to 2.\nNote that the order of elements is not important.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,3,3,2,7,3], k = 3\n<strong>Output:</strong> []\n<strong>Explanation:</strong> It is not possible to divide the array satisfying all the conditions.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == nums.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 10<sup>5</sup></code></li>\n\t<li><code>n</code> is a multiple of <code>3</code>.</li>\n\t<li><code>1 &lt;= nums[i] &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= k &lt;= 10<sup>5</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 766,
            "dislikes": 187,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "stats": "{\"totalAccepted\": \"148.3K\", \"totalSubmission\": \"207.7K\", \"totalAcceptedRaw\": 148345, \"totalSubmissionRaw\": 207698, \"acRate\": \"71.4%\"}",
            "hints": [
                "Try to use a greedy approach.",
                "Sort the array and try to group each <code>3</code> consecutive elements."
            ],
            "rephrased": {
                "body": "Given an integer array `nums` of size `n` and a positive integer `k`, divide the array into one or more subarrays of size 3 such that each element of `nums` is in exactly one subarray and the difference between any two elements in one subarray is less than or equal to `k`. Return a 2D array containing all the subarrays. If it is impossible to satisfy the conditions, return an empty array.  The order of the subarrays and elements within them does not matter.",
                "constraints": [
                    "n == nums.length",
                    "1 <= n <= 10^5",
                    "n is a multiple of 3.",
                    "1 <= nums[i] <= 10^5",
                    "1 <= k <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "nums = [1,3,4,8,7,9,3,5,1], k = 2",
                        "output": "[[1,1,3],[3,4,5],[7,8,9]]",
                        "explanation": "The array can be divided into the subarrays [1,1,3], [3,4,5], and [7,8,9], where the difference between any two elements in each subarray is less than or equal to 2."
                    },
                    {
                        "input": "nums = [1,3,3,2,7,3], k = 3",
                        "output": "[]",
                        "explanation": "It is not possible to divide the array satisfying all the conditions. No combination of subarrays of size 3 can be formed such that the maximum difference within each subarray is less than or equal to 3, and all elements are included exactly once."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "Try to use a greedy approach.",
            "Sort the array and try to group each <code>3</code> consecutive elements."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  vector<vector<int>> divideArray(vector<int>& nums, int k) {\n    vector<vector<int>> ans;\n\n    ranges::sort(nums);\n\n    for (int i = 2; i < nums.size(); i += 3) {\n      if (nums[i] - nums[i - 2] > k)\n        return {};\n      ans.push_back({nums[i - 2], nums[i - 1], nums[i]});\n    }\n\n    return ans;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int[][] divideArray(int[] nums, int k) {\n    int[][] ans = new int[nums.length / 3][3];\n\n    Arrays.sort(nums);\n\n    for (int i = 2; i < nums.length; i += 3) {\n      if (nums[i] - nums[i - 2] > k)\n        return new int[0][];\n      ans[i / 3] = new int[] {nums[i - 2], nums[i - 1], nums[i]};\n    }\n\n    return ans;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def divideArray(self, nums: List[int], k: int) -> List[List[int]]:\n    ans = []\n\n    nums.sort()\n\n    for i in range(2, len(nums), 3):\n      if nums[i] - nums[i - 2] > k:\n        return []\n      ans.append([nums[i - 2], nums[i - 1], nums[i]])\n\n    return ans\n",
                "lang_text": "py"
            }
        }
    }
}