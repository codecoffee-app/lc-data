{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2206",
            "title": "Divide Array Into Equal Pairs",
            "titleSlug": "divide-array-into-equal-pairs",
            "content": "<p>You are given an integer array <code>nums</code> consisting of <code>2 * n</code> integers.</p>\n\n<p>You need to divide <code>nums</code> into <code>n</code> pairs such that:</p>\n\n<ul>\n\t<li>Each element belongs to <strong>exactly one</strong> pair.</li>\n\t<li>The elements present in a pair are <strong>equal</strong>.</li>\n</ul>\n\n<p>Return <code>true</code> <em>if nums can be divided into</em> <code>n</code> <em>pairs, otherwise return</em> <code>false</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,2,3,2,2,2]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> \nThere are 6 elements in nums, so they should be divided into 6 / 2 = 3 pairs.\nIf nums is divided into the pairs (2, 2), (3, 3), and (2, 2), it will satisfy all the conditions.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,4]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> \nThere is no way to divide nums into 4 / 2 = 2 pairs such that the pairs satisfy every condition.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>nums.length == 2 * n</code></li>\n\t<li><code>1 &lt;= n &lt;= 500</code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 500</code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 674,
            "dislikes": 30,
            "similarQuestions": "[{\"title\": \"Sort Array by Increasing Frequency\", \"titleSlug\": \"sort-array-by-increasing-frequency\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "stats": "{\"totalAccepted\": \"68.6K\", \"totalSubmission\": \"93.5K\", \"totalAcceptedRaw\": 68604, \"totalSubmissionRaw\": 93535, \"acRate\": \"73.3%\"}",
            "hints": [
                "For any number x in the range [1, 500], count the number of elements in nums whose values are equal to x.",
                "The elements with equal value can be divided completely into pairs if and only if their count is even."
            ],
            "rephrased": {
                "body": "Given an integer array `nums` containing `2 * n` integers, determine if it's possible to divide it into `n` pairs such that each element belongs to exactly one pair, and the elements within each pair are equal.",
                "constraints": [
                    "nums.length == 2 * n",
                    "1 <= n <= 500",
                    "1 <= nums[i] <= 500"
                ],
                "testcases": [
                    {
                        "input": "[3,2,3,2,2,2]",
                        "output": "true",
                        "explanation": "The array can be divided into pairs (2, 2), (3, 3), and (2, 2), satisfying the condition that each element is paired with an equal element."
                    },
                    {
                        "input": "[1,2,3,4]",
                        "output": "false",
                        "explanation": "It is not possible to form pairs of equal elements from the given array."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Easy",
                "titleSlug": "sort-array-by-increasing-frequency",
                "title": "Sort Array by Increasing Frequency",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "For any number x in the range [1, 500], count the number of elements in nums whose values are equal to x.",
            "The elements with equal value can be divided completely into pairs if and only if their count is even."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  bool divideArray(vector<int>& nums) {\n    vector<int> count(501);\n\n    for (const int num : nums)\n      ++count[num];\n\n    return all_of(count.begin(), count.end(), [](int c) { return c % 2 == 0; });\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public boolean divideArray(int[] nums) {\n    int[] count = new int[501];\n\n    for (final int num : nums)\n      ++count[num];\n\n    return Arrays.stream(count).allMatch(c -> c % 2 == 0);\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def divideArray(self, nums: List[int]) -> bool:\n    return all(value % 2 == 0 for value in collections.Counter(nums).values())\n",
                "lang_text": "py"
            }
        }
    }
}