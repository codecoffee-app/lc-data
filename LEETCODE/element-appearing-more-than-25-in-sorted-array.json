{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1287",
            "title": "Element Appearing More Than 25% In Sorted Array",
            "titleSlug": "element-appearing-more-than-25-in-sorted-array",
            "content": "<p>Given an integer array <strong>sorted</strong> in non-decreasing order, there is exactly one integer in the array that occurs more than 25% of the time, return that integer.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1,2,2,6,6,6,6,7,10]\n<strong>Output:</strong> 6\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1,1]\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= arr.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= arr[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 1644,
            "dislikes": 73,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "stats": "{\"totalAccepted\": \"195.6K\", \"totalSubmission\": \"320.1K\", \"totalAcceptedRaw\": 195641, \"totalSubmissionRaw\": 320080, \"acRate\": \"61.1%\"}",
            "hints": [
                "Divide the array in four parts [1 - 25%] [25 - 50 %] [50 - 75 %] [75% - 100%]",
                "The answer should be in one of the ends of the intervals.",
                "In order to check which is element is the answer we can count the frequency with binarySearch."
            ],
            "rephrased": {
                "body": "You are given an integer array `arr` that is sorted in non-decreasing order. There is guaranteed to be exactly one integer in the array that appears more than 25% of the time. Your task is to find and return this integer.",
                "constraints": [
                    "1 <= arr.length <= 10^4",
                    "0 <= arr[i] <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "[1,2,2,6,6,6,6,7,10]",
                        "output": "6",
                        "explanation": "The integer 6 appears 4 times in the array, which is more than 25% of the array's length (9)."
                    },
                    {
                        "input": "[1,1]",
                        "output": "1",
                        "explanation": "The integer 1 appears 2 times in the array, which is more than 25% of the array's length (2)."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "Divide the array in four parts [1 - 25%] [25 - 50 %] [50 - 75 %] [75% - 100%]",
            "The answer should be in one of the ends of the intervals.",
            "In order to check which is element is the answer we can count the frequency with binarySearch."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int findSpecialInteger(vector<int>& arr) {\n    const int n = arr.size();\n    const int quarter = n / 4;\n\n    for (int i = 0; i < n - quarter; ++i)\n      if (arr[i] == arr[i + quarter])\n        return arr[i];\n\n    throw;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int findSpecialInteger(int[] arr) {\n    final int n = arr.length;\n    final int quarter = n / 4;\n\n    for (int i = 0; i < n - quarter; ++i)\n      if (arr[i] == arr[i + quarter])\n        return arr[i];\n\n    throw new IllegalArgumentException();\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def findSpecialInteger(self, arr: List[int]) -> int:\n    n = len(arr)\n    quarter = n // 4\n\n    for i in range(n - quarter):\n      if arr[i] == arr[i + quarter]:\n        return arr[i]\n",
                "lang_text": "py"
            }
        }
    }
}