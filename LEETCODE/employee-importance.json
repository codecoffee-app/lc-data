{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "690",
            "title": "Employee Importance",
            "titleSlug": "employee-importance",
            "content": "<p>You have a data structure of employee information, including the employee&#39;s unique ID, importance value, and direct subordinates&#39; IDs.</p>\n\n<p>You are given an array of employees <code>employees</code> where:</p>\n\n<ul>\n\t<li><code>employees[i].id</code> is the ID of the <code>i<sup>th</sup></code> employee.</li>\n\t<li><code>employees[i].importance</code> is the importance value of the <code>i<sup>th</sup></code> employee.</li>\n\t<li><code>employees[i].subordinates</code> is a list of the IDs of the direct subordinates of the <code>i<sup>th</sup></code> employee.</li>\n</ul>\n\n<p>Given an integer <code>id</code> that represents an employee&#39;s ID, return <em>the <strong>total</strong> importance value of this employee and all their direct and indirect subordinates</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/05/31/emp1-tree.jpg\" style=\"width: 400px; height: 258px;\" />\n<pre>\n<strong>Input:</strong> employees = [[1,5,[2,3]],[2,3,[]],[3,3,[]]], id = 1\n<strong>Output:</strong> 11\n<strong>Explanation:</strong> Employee 1 has an importance value of 5 and has two direct subordinates: employee 2 and employee 3.\nThey both have an importance value of 3.\nThus, the total importance value of employee 1 is 5 + 3 + 3 = 11.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/05/31/emp2-tree.jpg\" style=\"width: 362px; height: 361px;\" />\n<pre>\n<strong>Input:</strong> employees = [[1,2,[5]],[5,-3,[]]], id = 5\n<strong>Output:</strong> -3\n<strong>Explanation:</strong> Employee 5 has an importance value of -3 and has no direct subordinates.\nThus, the total importance value of employee 5 is -3.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= employees.length &lt;= 2000</code></li>\n\t<li><code>1 &lt;= employees[i].id &lt;= 2000</code></li>\n\t<li>All <code>employees[i].id</code> are <strong>unique</strong>.</li>\n\t<li><code>-100 &lt;= employees[i].importance &lt;= 100</code></li>\n\t<li>One employee has at most one direct leader and may have several subordinates.</li>\n\t<li>The IDs in <code>employees[i].subordinates</code> are valid IDs.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 2014,
            "dislikes": 1326,
            "similarQuestions": "[{\"title\": \"Nested List Weight Sum\", \"titleSlug\": \"nested-list-weight-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "stats": "{\"totalAccepted\": \"203K\", \"totalSubmission\": \"306.1K\", \"totalAcceptedRaw\": 203023, \"totalSubmissionRaw\": 306051, \"acRate\": \"66.3%\"}",
            "hints": [],
            "rephrased": {
                "body": "You are given a data structure representing employee information. Each employee has a unique ID, an importance value, and a list of the IDs of their direct subordinates.\n\nGiven an array of `employees` where:\n\n*   `employees[i].id` is the ID of the `i`-th employee.\n*   `employees[i].importance` is the importance value of the `i`-th employee.\n*   `employees[i].subordinates` is a list of the IDs of the direct subordinates of the `i`-th employee.\n\nGiven an integer `id` representing an employee's ID, return the total importance value of this employee and all their direct and indirect subordinates.",
                "constraints": [
                    "1 <= employees.length <= 2000",
                    "1 <= employees[i].id <= 2000",
                    "All employees[i].id are unique.",
                    "-100 <= employees[i].importance <= 100",
                    "One employee has at most one direct leader and may have several subordinates.",
                    "The IDs in employees[i].subordinates are valid IDs."
                ],
                "testcases": [
                    {
                        "input": "employees = [[1,5,[2,3]],[2,3,[]],[3,3,[]]], id = 1",
                        "output": "11",
                        "explanation": "Employee with ID 1 has an importance of 5 and subordinates 2 and 3.  Employee 2 has importance 3, and employee 3 has importance 3.  The total importance is 5 + 3 + 3 = 11."
                    },
                    {
                        "input": "employees = [[1,2,[5]],[5,-3,[]]], id = 5",
                        "output": "-3",
                        "explanation": "Employee with ID 5 has an importance of -3 and no subordinates. Therefore, the total importance is -3."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "nested-list-weight-sum",
                "title": "Nested List Weight Sum",
                "isPaidOnly": true
            }
        ],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int getImportance(vector<Employee*> employees, int id) {\n    unordered_map<int, Employee*> idToEmployee;\n\n    for (Employee* employee : employees)\n      idToEmployee[employee->id] = employee;\n\n    return dfs(id, idToEmployee);\n  }\n\n private:\n  int dfs(int id, const unordered_map<int, Employee*>& idToEmployee) {\n    int values = 0;\n\n    for (const int subId : idToEmployee.at(id)->subordinates)\n      values += dfs(subId, idToEmployee);\n\n    return idToEmployee.at(id)->importance + values;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int getImportance(List<Employee> employees, int id) {\n    Map<Integer, Employee> idToEmployee = new HashMap<>();\n\n    for (Employee employee : employees)\n      idToEmployee.put(employee.id, employee);\n\n    return dfs(id, idToEmployee);\n  }\n\n  private int dfs(int id, Map<Integer, Employee> idToEmployee) {\n    int values = 0;\n\n    for (final int subId : idToEmployee.get(id).subordinates)\n      values += dfs(subId, idToEmployee);\n\n    return idToEmployee.get(id).importance + values;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def getImportance(self, employees: List['Employee'], id: int) -> int:\n    idToEmployee = {employee.id: employee for employee in employees}\n\n    def dfs(id: int) -> int:\n      values = idToEmployee[id].importance\n      for subId in idToEmployee[id].subordinates:\n        values += dfs(subId)\n      return values\n\n    return dfs(id)\n",
                "lang_text": "py"
            }
        }
    }
}