{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "789",
            "title": "Escape The Ghosts",
            "titleSlug": "escape-the-ghosts",
            "content": "<p>You are playing a simplified PAC-MAN game on an infinite 2-D grid. You start at the point <code>[0, 0]</code>, and you are given a destination point <code>target = [x<sub>target</sub>, y<sub>target</sub>]</code> that you are trying to get to. There are several ghosts on the map with their starting positions given as a 2D array <code>ghosts</code>, where <code>ghosts[i] = [x<sub>i</sub>, y<sub>i</sub>]</code> represents the starting position of the <code>i<sup>th</sup></code> ghost. All inputs are <strong>integral coordinates</strong>.</p>\n\n<p>Each turn, you and all the ghosts may independently choose to either <strong>move 1 unit</strong> in any of the four cardinal directions: north, east, south, or west, or <strong>stay still</strong>. All actions happen <strong>simultaneously</strong>.</p>\n\n<p>You escape if and only if you can reach the target <strong>before</strong> any ghost reaches you. If you reach any square (including the target) at the <strong>same time</strong> as a ghost, it <strong>does not</strong> count as an escape.</p>\n\n<p>Return <code>true</code><em> if it is possible to escape regardless of how the ghosts move, otherwise return </em><code>false</code><em>.</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> ghosts = [[1,0],[0,3]], target = [0,1]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> You can reach the destination (0, 1) after 1 turn, while the ghosts located at (1, 0) and (0, 3) cannot catch up with you.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> ghosts = [[1,0]], target = [2,0]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> You need to reach the destination (2, 0), but the ghost at (1, 0) lies between you and the destination.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> ghosts = [[2,0]], target = [1,0]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> The ghost can reach the target at the same time as you.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= ghosts.length &lt;= 100</code></li>\n\t<li><code>ghosts[i].length == 2</code></li>\n\t<li><code>-10<sup>4</sup> &lt;= x<sub>i</sub>, y<sub>i</sub> &lt;= 10<sup>4</sup></code></li>\n\t<li>There can be <strong>multiple ghosts</strong> in the same location.</li>\n\t<li><code>target.length == 2</code></li>\n\t<li><code>-10<sup>4</sup> &lt;= x<sub>target</sub>, y<sub>target</sub> &lt;= 10<sup>4</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 272,
            "dislikes": 26,
            "similarQuestions": "[{\"title\": \"Cat and Mouse II\", \"titleSlug\": \"cat-and-mouse-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "stats": "{\"totalAccepted\": \"27.8K\", \"totalSubmission\": \"45.3K\", \"totalAcceptedRaw\": 27818, \"totalSubmissionRaw\": 45314, \"acRate\": \"61.4%\"}",
            "hints": [],
            "rephrased": {
                "body": "You are on an infinite 2D grid playing a simplified Pac-Man game. Starting at [0, 0], your goal is to reach the target [x_target, y_target]. Multiple ghosts are positioned on the grid, and you're given their starting locations in the 'ghosts' array. Each turn, you and the ghosts can independently move one unit in any of the four cardinal directions (north, east, south, west) or remain still.\n\nYou escape if you reach the target strictly *before* any ghost. Reaching the target *at the same time* as a ghost does *not* count as an escape.\n\nDetermine if it's possible to escape, regardless of how the ghosts move.",
                "constraints": [
                    "1 <= ghosts.length <= 100",
                    "ghosts[i].length == 2",
                    "-10<sup>4</sup> <= x<sub>i</sub>, y<sub>i</sub> <= 10<sup>4</sup>",
                    "Multiple ghosts can be in the same location.",
                    "target.length == 2",
                    "-10<sup>4</sup> <= x<sub>target</sub>, y<sub>target</sub> <= 10<sup>4</sup>"
                ],
                "testcases": [
                    {
                        "input": "ghosts = [[1,0],[0,3]], target = [0,1]",
                        "output": "true",
                        "explanation": "You can reach the destination (0, 1) in 1 turn, while the ghosts at (1, 0) and (0, 3) cannot reach (0,1) at the same time or earlier."
                    },
                    {
                        "input": "ghosts = [[1,0]], target = [2,0]",
                        "output": "false",
                        "explanation": "The ghost at (1, 0) can reach (2,0) at the same time as you, preventing your escape."
                    },
                    {
                        "input": "ghosts = [[2,0]], target = [1,0]",
                        "output": "false",
                        "explanation": "The ghost can reach the target at the same time as you, hence you cannot escape"
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Hard",
                "titleSlug": "cat-and-mouse-ii",
                "title": "Cat and Mouse II",
                "isPaidOnly": false
            }
        ],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  bool escapeGhosts(vector<vector<int>>& ghosts, vector<int>& target) {\n    const int d = abs(target[0]) + abs(target[1]);\n\n    for (const vector<int>& ghost : ghosts)\n      if (d >= abs(ghost[0] - target[0]) + abs(ghost[1] - target[1]))\n        return false;\n\n    return true;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public boolean escapeGhosts(int[][] ghosts, int[] target) {\n    final int d = Math.abs(target[0]) + Math.abs(target[1]);\n\n    for (int[] ghost : ghosts)\n      if (d >= Math.abs(ghost[0] - target[0]) + Math.abs(ghost[1] - target[1]))\n        return false;\n\n    return true;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def escapeGhosts(self, ghosts: List[List[int]], target: List[int]) -> bool:\n    ghostSteps = min(abs(x - target[0]) +\n                     abs(y - target[1]) for x, y in ghosts)\n\n    return abs(target[0]) + abs(target[1]) < ghostSteps\n",
                "lang_text": "py"
            }
        }
    }
}