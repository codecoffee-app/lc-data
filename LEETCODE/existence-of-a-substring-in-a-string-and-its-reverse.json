{
    "failed": false,
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "3083",
            "title": "Existence of a Substring in a String and Its Reverse",
            "titleSlug": "existence-of-a-substring-in-a-string-and-its-reverse",
            "content": "<p>Given a<strong> </strong>string <code>s</code>, find any <span data-keyword=\"substring\">substring</span> of length <code>2</code> which is also present in the reverse of <code>s</code>.</p>\n\n<p>Return <code>true</code><em> if such a substring exists, and </em><code>false</code><em> otherwise.</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\" style=\"border-color: var(--border-tertiary); border-left-width: 2px; color: var(--text-secondary); font-size: .875rem; margin-bottom: 1rem; margin-top: 1rem; overflow: visible; padding-left: 1rem;\">\n<p><strong>Input: </strong><span class=\"example-io\" style=\"font-family: Menlo,sans-serif; font-size: 0.85rem;\">s = &quot;leetcode&quot;</span></p>\n\n<p><strong>Output: </strong><span class=\"example-io\" style=\"font-family: Menlo,sans-serif; font-size: 0.85rem;\">true</span></p>\n\n<p><strong>Explanation:</strong> Substring <code>&quot;ee&quot;</code> is of length <code>2</code> which is also present in <code>reverse(s) == &quot;edocteel&quot;</code>.</p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\" style=\"border-color: var(--border-tertiary); border-left-width: 2px; color: var(--text-secondary); font-size: .875rem; margin-bottom: 1rem; margin-top: 1rem; overflow: visible; padding-left: 1rem;\">\n<p><strong>Input: </strong><span class=\"example-io\" style=\"font-family: Menlo,sans-serif; font-size: 0.85rem;\">s = &quot;abcba&quot;</span></p>\n\n<p><strong>Output: </strong><span class=\"example-io\" style=\"font-family: Menlo,sans-serif; font-size: 0.85rem;\">true</span></p>\n\n<p><strong>Explanation:</strong> All of the substrings of length <code>2</code> <code>&quot;ab&quot;</code>, <code>&quot;bc&quot;</code>, <code>&quot;cb&quot;</code>, <code>&quot;ba&quot;</code> are also present in <code>reverse(s) == &quot;abcba&quot;</code>.</p>\n</div>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<div class=\"example-block\" style=\"border-color: var(--border-tertiary); border-left-width: 2px; color: var(--text-secondary); font-size: .875rem; margin-bottom: 1rem; margin-top: 1rem; overflow: visible; padding-left: 1rem;\">\n<p><strong>Input: </strong><span class=\"example-io\" style=\"font-family: Menlo,sans-serif; font-size: 0.85rem;\">s = &quot;abcd&quot;</span></p>\n\n<p><strong>Output: </strong><span class=\"example-io\" style=\"font-family: Menlo,sans-serif; font-size: 0.85rem;\">false</span></p>\n\n<p><strong>Explanation:</strong> There is no substring of length <code>2</code> in <code>s</code>, which is also present in the reverse of <code>s</code>.</p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 100</code></li>\n\t<li><code>s</code> consists only of lowercase English letters.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 82,
            "dislikes": 1,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "stats": "{\"totalAccepted\": \"41.5K\", \"totalSubmission\": \"62.4K\", \"totalAcceptedRaw\": 41540, \"totalSubmissionRaw\": 62420, \"acRate\": \"66.5%\"}",
            "hints": [
                "Make a new string by reversing the string <code>s</code>.",
                "For every substring of length <code>2</code> in <code>s</code>, check if there is a corresponding substring in the reverse of <code>s</code>."
            ],
            "rephrased": {
                "body": "Given a string `s`, determine if there exists any substring of length 2 that is also present in the reverse of `s`.",
                "constraints": [
                    "1 <= s.length <= 100",
                    "s consists only of lowercase English letters."
                ],
                "testcases": [
                    {
                        "input": "leetcode",
                        "output": "true",
                        "explanation": "The substring \"ee\" of length 2 is present in both \"leetcode\" and its reverse \"edocteel\"."
                    },
                    {
                        "input": "abcba",
                        "output": "true",
                        "explanation": "All substrings of length 2 in \"abcba\" (e.g., \"ab\", \"bc\") are also present in its reverse, which is also \"abcba\"."
                    },
                    {
                        "input": "abcd",
                        "output": "false",
                        "explanation": "There is no substring of length 2 in \"abcd\" that is also present in its reverse \"dcba\"."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "Make a new string by reversing the string <code>s</code>.",
            "For every substring of length <code>2</code> in <code>s</code>, check if there is a corresponding substring in the reverse of <code>s</code>."
        ],
        "relatedTopics": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  bool isSubstringPresent(string s) {\n    const string reversed = {s.rbegin(), s.rend()};\n    for (int i = 0; i + 2 <= s.length(); ++i)\n      if (reversed.find(s.substr(i, 2)) != string::npos)\n        return true;\n    return false;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public boolean isSubstringPresent(String s) {\n    String reversed = new StringBuilder(s).reverse().toString();\n    for (int i = 0; i + 2 <= s.length(); ++i)\n      if (reversed.contains(s.substring(i, i + 2)))\n        return true;\n    return false;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def isSubstringPresent(self, s: str) -> bool:\n    return any(s[i:i + 2] in s[::-1] for i in range(len(s) - 1))\n",
                "lang_text": "py"
            }
        }
    }
}