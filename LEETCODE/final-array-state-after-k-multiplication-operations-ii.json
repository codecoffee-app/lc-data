{
    "failed": false,
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "3266",
            "title": "Final Array State After K Multiplication Operations II",
            "titleSlug": "final-array-state-after-k-multiplication-operations-ii",
            "content": "<p>You are given an integer array <code>nums</code>, an integer <code>k</code>, and an integer <code>multiplier</code>.</p>\n\n<p>You need to perform <code>k</code> operations on <code>nums</code>. In each operation:</p>\n\n<ul>\n\t<li>Find the <strong>minimum</strong> value <code>x</code> in <code>nums</code>. If there are multiple occurrences of the minimum value, select the one that appears <strong>first</strong>.</li>\n\t<li>Replace the selected minimum value <code>x</code> with <code>x * multiplier</code>.</li>\n</ul>\n\n<p>After the <code>k</code> operations, apply <strong>modulo</strong> <code>10<sup>9</sup> + 7</code> to every value in <code>nums</code>.</p>\n\n<p>Return an integer array denoting the <em>final state</em> of <code>nums</code> after performing all <code>k</code> operations and then applying the modulo.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">nums = [2,1,3,5,6], k = 5, multiplier = 2</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">[8,4,6,5,6]</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<table>\n\t<tbody>\n\t\t<tr>\n\t\t\t<th>Operation</th>\n\t\t\t<th>Result</th>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>After operation 1</td>\n\t\t\t<td>[2, 2, 3, 5, 6]</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>After operation 2</td>\n\t\t\t<td>[4, 2, 3, 5, 6]</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>After operation 3</td>\n\t\t\t<td>[4, 4, 3, 5, 6]</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>After operation 4</td>\n\t\t\t<td>[4, 4, 6, 5, 6]</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>After operation 5</td>\n\t\t\t<td>[8, 4, 6, 5, 6]</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>After applying modulo</td>\n\t\t\t<td>[8, 4, 6, 5, 6]</td>\n\t\t</tr>\n\t</tbody>\n</table>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">nums = [100000,2000], k = 2, multiplier = 1000000</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">[999999307,999999993]</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<table>\n\t<tbody>\n\t\t<tr>\n\t\t\t<th>Operation</th>\n\t\t\t<th>Result</th>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>After operation 1</td>\n\t\t\t<td>[100000, 2000000000]</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>After operation 2</td>\n\t\t\t<td>[100000000000, 2000000000]</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>After applying modulo</td>\n\t\t\t<td>[999999307, 999999993]</td>\n\t\t</tr>\n\t</tbody>\n</table>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n\t<li><code>1 &lt;= k &lt;= 10<sup>9</sup></code></li>\n\t<li><code>1 &lt;= multiplier &lt;= 10<sup>6</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 141,
            "dislikes": 20,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "stats": "{\"totalAccepted\": \"6.7K\", \"totalSubmission\": \"66.7K\", \"totalAcceptedRaw\": 6720, \"totalSubmissionRaw\": 66733, \"acRate\": \"10.1%\"}",
            "hints": [
                "What happens when <code>min(nums) * multiplier > max(nums)</code>?",
                "A cycle of operations begins.",
                "Simulate until <code>min(nums) * multiplier > max(nums)</code>, then greedily distribute remaining multiplications."
            ],
            "rephrased": {
                "body": "Given an integer array `nums`, an integer `k`, and an integer `multiplier`, perform `k` operations on `nums`. In each operation, find the minimum value `x` in `nums`. If there are multiple occurrences of the minimum value, select the first one. Replace the selected minimum value `x` with `x * multiplier`. After the `k` operations, apply modulo `10^9 + 7` to every value in `nums`. Return the final state of `nums` after performing all operations and applying the modulo.",
                "constraints": [
                    "1 <= nums.length <= 10^4",
                    "1 <= nums[i] <= 10^9",
                    "1 <= k <= 10^9",
                    "1 <= multiplier <= 10^6"
                ],
                "testcases": [
                    {
                        "input": "nums = [2,1,3,5,6], k = 5, multiplier = 2",
                        "output": "[8,4,6,5,6]",
                        "explanation": "Initially, nums = [2,1,3,5,6].  The minimum value is 1, which is replaced by 1*2 = 2. nums becomes [2,2,3,5,6]. This process repeats. The steps are as follows:\n1. [2, 2, 3, 5, 6]\n2. [4, 2, 3, 5, 6]\n3. [4, 4, 3, 5, 6]\n4. [4, 4, 6, 5, 6]\n5. [8, 4, 6, 5, 6]\nApplying modulo does not change the result in this case."
                    },
                    {
                        "input": "nums = [100000,2000], k = 2, multiplier = 1000000",
                        "output": "[999999307,999999993]",
                        "explanation": "Initially, nums = [100000, 2000]. The minimum value is 2000, which is replaced by 2000 * 1000000 = 2000000000. nums becomes [100000, 2000000000]. In the second operation, the minimum is 100000, replaced by 100000 * 1000000 = 100000000000. nums becomes [100000000000, 2000000000]. Finally, applying modulo 10^9 + 7 to each element gives [999999307, 999999993]."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "What happens when <code>min(nums) * multiplier > max(nums)</code>?",
            "A cycle of operations begins.",
            "Simulate until <code>min(nums) * multiplier > max(nums)</code>, then greedily distribute remaining multiplications."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ]
    }
}