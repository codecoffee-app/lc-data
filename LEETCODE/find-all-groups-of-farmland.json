{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1992",
            "title": "Find All Groups of Farmland",
            "titleSlug": "find-all-groups-of-farmland",
            "content": "<p>You are given a <strong>0-indexed</strong> <code>m x n</code> binary matrix <code>land</code> where a <code>0</code> represents a hectare of forested land and a <code>1</code> represents a hectare of farmland.</p>\n\n<p>To keep the land organized, there are designated rectangular areas of hectares that consist <strong>entirely</strong> of farmland. These rectangular areas are called <strong>groups</strong>. No two groups are adjacent, meaning farmland in one group is <strong>not</strong> four-directionally adjacent to another farmland in a different group.</p>\n\n<p><code>land</code> can be represented by a coordinate system where the top left corner of <code>land</code> is <code>(0, 0)</code> and the bottom right corner of <code>land</code> is <code>(m-1, n-1)</code>. Find the coordinates of the top left and bottom right corner of each <strong>group</strong> of farmland. A <strong>group</strong> of farmland with a top left corner at <code>(r<sub>1</sub>, c<sub>1</sub>)</code> and a bottom right corner at <code>(r<sub>2</sub>, c<sub>2</sub>)</code> is represented by the 4-length array <code>[r<sub>1</sub>, c<sub>1</sub>, r<sub>2</sub>, c<sub>2</sub>].</code></p>\n\n<p>Return <em>a 2D array containing the 4-length arrays described above for each <strong>group</strong> of farmland in </em><code>land</code><em>. If there are no groups of farmland, return an empty array. You may return the answer in <strong>any order</strong></em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/07/27/screenshot-2021-07-27-at-12-23-15-copy-of-diagram-drawio-diagrams-net.png\" style=\"width: 300px; height: 300px;\" />\n<pre>\n<strong>Input:</strong> land = [[1,0,0],[0,1,1],[0,1,1]]\n<strong>Output:</strong> [[0,0,0,0],[1,1,2,2]]\n<strong>Explanation:</strong>\nThe first group has a top left corner at land[0][0] and a bottom right corner at land[0][0].\nThe second group has a top left corner at land[1][1] and a bottom right corner at land[2][2].\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/07/27/screenshot-2021-07-27-at-12-30-26-copy-of-diagram-drawio-diagrams-net.png\" style=\"width: 200px; height: 200px;\" />\n<pre>\n<strong>Input:</strong> land = [[1,1],[1,1]]\n<strong>Output:</strong> [[0,0,1,1]]\n<strong>Explanation:</strong>\nThe first group has a top left corner at land[0][0] and a bottom right corner at land[1][1].\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/07/27/screenshot-2021-07-27-at-12-32-24-copy-of-diagram-drawio-diagrams-net.png\" style=\"width: 100px; height: 100px;\" />\n<pre>\n<strong>Input:</strong> land = [[0]]\n<strong>Output:</strong> []\n<strong>Explanation:</strong>\nThere are no groups of farmland.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == land.length</code></li>\n\t<li><code>n == land[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 300</code></li>\n\t<li><code>land</code> consists of only <code>0</code>&#39;s and <code>1</code>&#39;s.</li>\n\t<li>Groups of farmland are <strong>rectangular</strong> in shape.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 771,
            "dislikes": 25,
            "similarQuestions": "[{\"title\": \"Number of Islands\", \"titleSlug\": \"number-of-islands\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Count Sub Islands\", \"titleSlug\": \"count-sub-islands\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "stats": "{\"totalAccepted\": \"25.6K\", \"totalSubmission\": \"37.4K\", \"totalAcceptedRaw\": 25570, \"totalSubmissionRaw\": 37412, \"acRate\": \"68.3%\"}",
            "hints": [
                "Since every group of farmland is rectangular, the top left corner of each group will have the smallest x-coordinate and y-coordinate of any farmland in the group.",
                "Similarly, the bootm right corner of each group will have the largest x-coordinate and y-coordinate of any farmland in the group.",
                "Use DFS to traverse through different groups of farmlands and keep track of the smallest and largest x-coordinate and y-coordinates you have seen in each group."
            ],
            "rephrased": {
                "body": "Given a 0-indexed m x n binary matrix `land` where 0 represents forested land and 1 represents farmland. Rectangular areas of farmland are called groups. No two groups are adjacent. Find the coordinates of the top left and bottom right corner of each group of farmland. A group with a top left corner at (r1, c1) and a bottom right corner at (r2, c2) is represented by the array [r1, c1, r2, c2]. Return a 2D array containing the 4-length arrays for each group of farmland. If there are no groups, return an empty array. The order of the groups in the output doesn't matter.",
                "constraints": [
                    "m == land.length",
                    "n == land[i].length",
                    "1 <= m, n <= 300",
                    "land consists of only 0's and 1's.",
                    "Groups of farmland are rectangular in shape."
                ],
                "testcases": [
                    {
                        "input": "[[1,0,0],[0,1,1],[0,1,1]]",
                        "output": "[[0,0,0,0],[1,1,2,2]]",
                        "explanation": "The first group is a single cell at (0, 0). The second group has its top-left corner at (1, 1) and extends to (2, 2)."
                    },
                    {
                        "input": "[[1,1],[1,1]]",
                        "output": "[[0,0,1,1]]",
                        "explanation": "The entire matrix represents a single group with top-left at (0, 0) and bottom-right at (1, 1)."
                    },
                    {
                        "input": "[[0]]",
                        "output": "[]",
                        "explanation": "There is no farmland in the matrix, so there are no groups."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "number-of-islands",
                "title": "Number of Islands",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "count-sub-islands",
                "title": "Count Sub Islands",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "Since every group of farmland is rectangular, the top left corner of each group will have the smallest x-coordinate and y-coordinate of any farmland in the group.",
            "Similarly, the bootm right corner of each group will have the largest x-coordinate and y-coordinate of any farmland in the group.",
            "Use DFS to traverse through different groups of farmlands and keep track of the smallest and largest x-coordinate and y-coordinates you have seen in each group."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ]
    }
}