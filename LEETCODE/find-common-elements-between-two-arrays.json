{
    "failed": false,
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2956",
            "title": "Find Common Elements Between Two Arrays",
            "titleSlug": "find-common-elements-between-two-arrays",
            "content": "<p>You are given two integer arrays <code>nums1</code> and <code>nums2</code> of sizes <code>n</code> and <code>m</code>, respectively. Calculate the following values:</p>\n\n<ul>\n\t<li><code>answer1</code> : the number of indices <code>i</code> such that <code>nums1[i]</code> exists in <code>nums2</code>.</li>\n\t<li><code>answer2</code> : the number of indices <code>i</code> such that <code>nums2[i]</code> exists in <code>nums1</code>.</li>\n</ul>\n\n<p>Return <code>[answer1,answer2]</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">nums1 = [2,3,2], nums2 = [1,2]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">[2,1]</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p><img src=\"https://assets.leetcode.com/uploads/2024/05/26/3488_find_common_elements_between_two_arrays-t1.gif\" style=\"width: 225px; height: 150px;\" /></p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">nums1 = [4,3,2,3,1], nums2 = [2,2,5,2,3,6]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">[3,4]</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>The elements at indices 1, 2, and 3 in <code>nums1</code> exist in <code>nums2</code> as well. So <code>answer1</code> is 3.</p>\n\n<p>The elements at indices 0, 1, 3, and 4 in <code>nums2</code> exist in <code>nums1</code>. So <code>answer2</code> is 4.</p>\n</div>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">nums1 = [3,4,2,3], nums2 = [1,5]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">[0,0]</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>No numbers are common between <code>nums1</code> and <code>nums2</code>, so answer is [0,0].</p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == nums1.length</code></li>\n\t<li><code>m == nums2.length</code></li>\n\t<li><code>1 &lt;= n, m &lt;= 100</code></li>\n\t<li><code>1 &lt;= nums1[i], nums2[i] &lt;= 100</code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 194,
            "dislikes": 77,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                }
            ],
            "stats": "{\"totalAccepted\": \"53.1K\", \"totalSubmission\": \"63.9K\", \"totalAcceptedRaw\": 53056, \"totalSubmissionRaw\": 63851, \"acRate\": \"83.1%\"}",
            "hints": [
                "Since the constraints are small, you can use brute force to solve the problem.",
                "For each element <code>i</code> in <code>nums1</code>, iterate over all elements of <code>nums2</code> to find if it occurs."
            ],
            "rephrased": {
                "body": "Given two integer arrays `nums1` and `nums2` of sizes `n` and `m` respectively, find how many numbers in `nums1` are also present in `nums2` (let's call it `answer1`) and how many numbers in `nums2` are also present in `nums1` (let's call it `answer2`). Return the array `[answer1, answer2]`.",
                "constraints": [
                    "1 <= n, m <= 100",
                    "1 <= nums1[i], nums2[i] <= 100"
                ],
                "testcases": [
                    {
                        "input": "nums1 = [2,3,2], nums2 = [1,2]",
                        "output": "[2,1]",
                        "explanation": "`answer1` is 2 because the element 2 appears in `nums1` at indices 0 and 2 and exists in `nums2`. `answer2` is 1 because the element 2 appears in `nums2` at index 1 and exists in `nums1`."
                    },
                    {
                        "input": "nums1 = [4,3,2,3,1], nums2 = [2,2,5,2,3,6]",
                        "output": "[3,4]",
                        "explanation": "`answer1` is 3 because the elements at indices 1, 2, and 3 in `nums1` (3, 2, and 3) exist in `nums2` as well. `answer2` is 4 because the elements at indices 0, 1, 3, and 4 in `nums2` (2, 2, 2, and 3) exist in `nums1`."
                    },
                    {
                        "input": "nums1 = [3,4,2,3], nums2 = [1,5]",
                        "output": "[0,0]",
                        "explanation": "No numbers are common between `nums1` and `nums2`."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "Since the constraints are small, you can use brute force to solve the problem.",
            "For each element <code>i</code> in <code>nums1</code>, iterate over all elements of <code>nums2</code> to find if it occurs."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  vector<int> findIntersectionValues(vector<int>& nums1, vector<int>& nums2) {\n    const unordered_set<int> nums1Set{nums1.begin(), nums1.end()};\n    const unordered_set<int> nums2Set{nums2.begin(), nums2.end()};\n    const int ans1 = ranges::count_if(\n        nums1, [&nums2Set](int num) { return nums2Set.count(num); });\n    const int ans2 = ranges::count_if(\n        nums2, [&nums1Set](int num) { return nums1Set.count(num); });\n    return {ans1, ans2};\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int[] findIntersectionValues(int[] nums1, int[] nums2) {\n    Set<Integer> nums1Set = Arrays.stream(nums1).boxed().collect(Collectors.toSet());\n    Set<Integer> nums2Set = Arrays.stream(nums2).boxed().collect(Collectors.toSet());\n    final int ans1 = (int) Arrays.stream(nums1).filter(nums2Set::contains).count();\n    final int ans2 = (int) Arrays.stream(nums2).filter(nums1Set::contains).count();\n    return new int[] {ans1, ans2};\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def findIntersectionValues(self, nums1: List[int], nums2: List[int]) -> List[int]:\n    nums1Set = set(nums1)\n    nums2Set = set(nums2)\n    return [sum(num in nums2Set for num in nums1),\n            sum(num in nums1Set for num in nums2)]\n",
                "lang_text": "py"
            }
        }
    }
}