{
    "failed": false,
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "3232",
            "title": "Find if Digit Game Can Be Won",
            "titleSlug": "find-if-digit-game-can-be-won",
            "content": "<p>You are given an array of <strong>positive</strong> integers <code>nums</code>.</p>\n\n<p>Alice and Bob are playing a game. In the game, Alice can choose <strong>either</strong> all single-digit numbers or all double-digit numbers from <code>nums</code>, and the rest of the numbers are given to Bob. Alice wins if the sum of her numbers is <strong>strictly greater</strong> than the sum of Bob&#39;s numbers.</p>\n\n<p>Return <code>true</code> if Alice can win this game, otherwise, return <code>false</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">nums = [1,2,3,4,10]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">false</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>Alice cannot win by choosing either single-digit or double-digit numbers.</p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">nums = [1,2,3,4,5,14]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">true</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>Alice can win by choosing single-digit numbers which have a sum equal to 15.</p>\n</div>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">nums = [5,5,5,25]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">true</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>Alice can win by choosing double-digit numbers which have a sum equal to 25.</p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 99</code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 55,
            "dislikes": 5,
            "similarQuestions": "[{\"title\": \"Find Numbers with Even Number of Digits\", \"titleSlug\": \"find-numbers-with-even-number-of-digits\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Count Integers With Even Digit Sum\", \"titleSlug\": \"count-integers-with-even-digit-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "stats": "{\"totalAccepted\": \"40.9K\", \"totalSubmission\": \"49.2K\", \"totalAcceptedRaw\": 40862, \"totalSubmissionRaw\": 49188, \"acRate\": \"83.1%\"}",
            "hints": [
                "Alice wins if the sum of all single-digit numbers and the sum of all double-digit numbers are different."
            ],
            "rephrased": {
                "body": "Given an array of positive integers `nums`, Alice and Bob play a game. Alice chooses either all single-digit numbers or all double-digit numbers from `nums`, and Bob gets the remaining numbers. Alice wins if the sum of her numbers is strictly greater than the sum of Bob's numbers. Determine if Alice can win the game.",
                "constraints": [
                    "1 <= nums.length <= 100",
                    "1 <= nums[i] <= 99"
                ],
                "testcases": [
                    {
                        "input": "[1,2,3,4,10]",
                        "output": "false",
                        "explanation": "Alice cannot win by choosing either single-digit or double-digit numbers. Single-digit numbers sum to 10 and the remaining number is 10, Bob gets 10. Double-digit number sums to 10 and the remaining numbers sum to 10, so Bob gets 10."
                    },
                    {
                        "input": "[1,2,3,4,5,14]",
                        "output": "true",
                        "explanation": "Alice can win by choosing single-digit numbers. Their sum is 1+2+3+4+5 = 15. Bob gets 14. Since 15 > 14, Alice wins."
                    },
                    {
                        "input": "[5,5,5,25]",
                        "output": "true",
                        "explanation": "Alice can win by choosing double-digit numbers which have a sum equal to 25.  Bob gets 5+5+5 = 15.  Since 25 > 15, Alice wins."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Easy",
                "titleSlug": "find-numbers-with-even-number-of-digits",
                "title": "Find Numbers with Even Number of Digits",
                "isPaidOnly": false
            },
            {
                "difficulty": "Easy",
                "titleSlug": "count-integers-with-even-digit-sum",
                "title": "Count Integers With Even Digit Sum",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "Alice wins if the sum of all single-digit numbers and the sum of all double-digit numbers are different."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  bool canAliceWin(vector<int>& nums) {\n    return accumulate(nums.begin(), nums.end(), 0, [](int subtotal, int num) {\n      return subtotal + (num < 10 ? num : -num);\n    }) != 0;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public boolean canAliceWin(int[] nums) {\n    return Arrays.stream(nums).map(num -> num < 10 ? num : -num).sum() != 0;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def canAliceWin(self, nums: list[int]) -> bool:\n    return sum(num if num < 10 else -num for num in nums) != 0\n",
                "lang_text": "py"
            }
        }
    }
}