{
    "failed": false,
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "3285",
            "title": "Find Indices of Stable Mountains",
            "titleSlug": "find-indices-of-stable-mountains",
            "content": "<p>There are <code>n</code> mountains in a row, and each mountain has a height. You are given an integer array <code>height</code> where <code>height[i]</code> represents the height of mountain <code>i</code>, and an integer <code>threshold</code>.</p>\n\n<p>A mountain is called <strong>stable</strong> if the mountain just before it (<strong>if it exists</strong>) has a height <strong>strictly greater</strong> than <code>threshold</code>. <strong>Note</strong> that mountain 0 is <strong>not</strong> stable.</p>\n\n<p>Return an array containing the indices of <em>all</em> <strong>stable</strong> mountains in <strong>any</strong> order.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">height = [1,2,3,4,5], threshold = 2</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">[3,4]</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<ul>\n\t<li>Mountain 3 is stable because <code>height[2] == 3</code> is greater than <code>threshold == 2</code>.</li>\n\t<li>Mountain 4 is stable because <code>height[3] == 4</code> is greater than <code>threshold == 2</code>.</li>\n</ul>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">height = [10,1,10,1,10], threshold = 3</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">[1,3]</span></p>\n</div>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">height = [10,1,10,1,10], threshold = 10</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">[]</span></p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= n == height.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= height[i] &lt;= 100</code></li>\n\t<li><code>1 &lt;= threshold &lt;= 100</code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 49,
            "dislikes": 10,
            "similarQuestions": "[{\"title\": \"Find in Mountain Array\", \"titleSlug\": \"find-in-mountain-array\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "stats": "{\"totalAccepted\": \"38.7K\", \"totalSubmission\": \"44.7K\", \"totalAcceptedRaw\": 38717, \"totalSubmissionRaw\": 44716, \"acRate\": \"86.6%\"}",
            "hints": [],
            "rephrased": {
                "body": "Given an array `height` representing the heights of `n` mountains in a row and an integer `threshold`, find the indices of all stable mountains. A mountain is considered stable if the height of the mountain immediately before it is strictly greater than `threshold`. Note that the first mountain (index 0) is never considered stable.",
                "constraints": [
                    "2 <= n == height.length <= 100",
                    "1 <= height[i] <= 100",
                    "1 <= threshold <= 100"
                ],
                "testcases": [
                    {
                        "input": "height = [1,2,3,4,5], threshold = 2",
                        "output": "[3,4]",
                        "explanation": "Mountain at index 3 is stable because height[2] (3) is greater than threshold (2).  Mountain at index 4 is stable because height[3] (4) is greater than threshold (2)."
                    },
                    {
                        "input": "height = [10,1,10,1,10], threshold = 3",
                        "output": "[1,3]",
                        "explanation": "Mountain at index 1 is stable because height[0] (10) is greater than threshold (3).  Mountain at index 3 is stable because height[2] (10) is greater than threshold (3)."
                    },
                    {
                        "input": "height = [10,1,10,1,10], threshold = 10",
                        "output": "[]",
                        "explanation": "No mountains are stable because no preceding mountain height is strictly greater than the threshold of 10."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Hard",
                "titleSlug": "find-in-mountain-array",
                "title": "Find in Mountain Array",
                "isPaidOnly": false
            }
        ],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  vector<int> stableMountains(vector<int>& height, int threshold) {\n    vector<int> ans;\n\n    for (int i = 1; i < height.size(); ++i)\n      if (height[i - 1] > threshold)\n        ans.push_back(i);\n\n    return ans;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public List<Integer> stableMountains(int[] height, int threshold) {\n    List<Integer> ans = new ArrayList<>();\n\n    for (int i = 1; i < height.length; ++i)\n      if (height[i - 1] > threshold)\n        ans.add(i);\n\n    return ans;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def stableMountains(self, height: list[int], threshold: int) -> list[int]:\n    return [i for i in range(1, len(height))\n            if height[i - 1] > threshold]\n",
                "lang_text": "py"
            }
        }
    }
}