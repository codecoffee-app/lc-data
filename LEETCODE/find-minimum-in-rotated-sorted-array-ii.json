{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "154",
            "title": "Find Minimum in Rotated Sorted Array II",
            "titleSlug": "find-minimum-in-rotated-sorted-array-ii",
            "content": "<p>Suppose an array of length <code>n</code> sorted in ascending order is <strong>rotated</strong> between <code>1</code> and <code>n</code> times. For example, the array <code>nums = [0,1,4,4,5,6,7]</code> might become:</p>\n\n<ul>\n\t<li><code>[4,5,6,7,0,1,4]</code> if it was rotated <code>4</code> times.</li>\n\t<li><code>[0,1,4,4,5,6,7]</code> if it was rotated <code>7</code> times.</li>\n</ul>\n\n<p>Notice that <strong>rotating</strong> an array <code>[a[0], a[1], a[2], ..., a[n-1]]</code> 1 time results in the array <code>[a[n-1], a[0], a[1], a[2], ..., a[n-2]]</code>.</p>\n\n<p>Given the sorted rotated array <code>nums</code> that may contain <strong>duplicates</strong>, return <em>the minimum element of this array</em>.</p>\n\n<p>You must decrease the overall operation steps as much as possible.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [1,3,5]\n<strong>Output:</strong> 1\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [2,2,2,0,1]\n<strong>Output:</strong> 0\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == nums.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 5000</code></li>\n\t<li><code>-5000 &lt;= nums[i] &lt;= 5000</code></li>\n\t<li><code>nums</code> is sorted and rotated between <code>1</code> and <code>n</code> times.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong> This problem is similar to&nbsp;<a href=\"https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/description/\" target=\"_blank\">Find Minimum in Rotated Sorted Array</a>, but&nbsp;<code>nums</code> may contain <strong>duplicates</strong>. Would this affect the runtime complexity? How and why?</p>\n\n<p>&nbsp;</p>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 4525,
            "dislikes": 467,
            "similarQuestions": "[{\"title\": \"Find Minimum in Rotated Sorted Array\", \"titleSlug\": \"find-minimum-in-rotated-sorted-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "stats": "{\"totalAccepted\": \"423.8K\", \"totalSubmission\": \"973.1K\", \"totalAcceptedRaw\": 423825, \"totalSubmissionRaw\": 973113, \"acRate\": \"43.6%\"}",
            "hints": [],
            "rephrased": {
                "body": "Given a sorted array `nums` of length `n` that has been rotated between 1 and n times, find the minimum element in the array. The array may contain duplicate values.  Rotating an array [a[0], a[1], a[2], ..., a[n-1]] one time results in the array [a[n-1], a[0], a[1], a[2], ..., a[n-2]]. You must decrease the overall operation steps as much as possible.",
                "constraints": [
                    "n == nums.length",
                    "1 <= n <= 5000",
                    "-5000 <= nums[i] <= 5000",
                    "nums is sorted and rotated between 1 and n times."
                ],
                "testcases": [
                    {
                        "input": "[1,3,5]",
                        "output": "1",
                        "explanation": null
                    },
                    {
                        "input": "[2,2,2,0,1]",
                        "output": "0",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "find-minimum-in-rotated-sorted-array",
                "title": "Find Minimum in Rotated Sorted Array",
                "isPaidOnly": false
            }
        ],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int findMin(vector<int>& nums) {\n    int l = 0;\n    int r = nums.size() - 1;\n\n    while (l < r) {\n      const int m = (l + r) / 2;\n      if (nums[m] == nums[r])\n        --r;\n      else if (nums[m] < nums[r])\n        r = m;\n      else\n        l = m + 1;\n    }\n\n    return nums[l];\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int findMin(int[] nums) {\n    int l = 0;\n    int r = nums.length - 1;\n\n    while (l < r) {\n      final int m = (l + r) / 2;\n      if (nums[m] == nums[r])\n        --r;\n      else if (nums[m] < nums[r])\n        r = m;\n      else\n        l = m + 1;\n    }\n\n    return nums[l];\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def findMin(self, nums: List[int]) -> int:\n    l = 0\n    r = len(nums) - 1\n\n    while l < r:\n      m = (l + r) // 2\n      if nums[m] == nums[r]:\n        r -= 1\n      elif nums[m] < nums[r]:\n        r = m\n      else:\n        l = m + 1\n\n    return nums[l]\n",
                "lang_text": "py"
            }
        }
    }
}