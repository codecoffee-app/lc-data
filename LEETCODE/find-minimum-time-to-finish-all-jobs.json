{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1723",
            "title": "Find Minimum Time to Finish All Jobs",
            "titleSlug": "find-minimum-time-to-finish-all-jobs",
            "content": "<p>You are given an integer array <code>jobs</code>, where <code>jobs[i]</code> is the amount of time it takes to complete the <code>i<sup>th</sup></code> job.</p>\n\n<p>There are <code>k</code> workers that you can assign jobs to. Each job should be assigned to <strong>exactly</strong> one worker. The <strong>working time</strong> of a worker is the sum of the time it takes to complete all jobs assigned to them. Your goal is to devise an optimal assignment such that the <strong>maximum working time</strong> of any worker is <strong>minimized</strong>.</p>\n\n<p><em>Return the <strong>minimum</strong> possible <strong>maximum working time</strong> of any assignment. </em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> jobs = [3,2,3], k = 3\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> By assigning each person one job, the maximum time is 3.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> jobs = [1,2,4,7,8], k = 2\n<strong>Output:</strong> 11\n<strong>Explanation:</strong> Assign the jobs the following way:\nWorker 1: 1, 2, 8 (working time = 1 + 2 + 8 = 11)\nWorker 2: 4, 7 (working time = 4 + 7 = 11)\nThe maximum working time is 11.</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= k &lt;= jobs.length &lt;= 12</code></li>\n\t<li><code>1 &lt;= jobs[i] &lt;= 10<sup>7</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 1006,
            "dislikes": 29,
            "similarQuestions": "[{\"title\": \"Minimum Number of Work Sessions to Finish the Tasks\", \"titleSlug\": \"minimum-number-of-work-sessions-to-finish-the-tasks\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find Minimum Time to Finish All Jobs II\", \"titleSlug\": \"find-minimum-time-to-finish-all-jobs-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Backtracking",
                    "slug": "backtracking"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Bitmask",
                    "slug": "bitmask"
                }
            ],
            "stats": "{\"totalAccepted\": \"25.2K\", \"totalSubmission\": \"59.5K\", \"totalAcceptedRaw\": 25170, \"totalSubmissionRaw\": 59502, \"acRate\": \"42.3%\"}",
            "hints": [
                "We can select a subset of tasks and assign it to a worker then solve the subproblem on the remaining tasks"
            ],
            "rephrased": {
                "body": "Given an integer array `jobs`, where `jobs[i]` represents the time required to complete the i-th job. You have `k` workers and need to assign each job to exactly one worker. The working time of a worker is the sum of the time taken to complete all jobs assigned to them.  The goal is to find an assignment that minimizes the maximum working time among all workers. Return the minimum possible maximum working time of any assignment.",
                "constraints": [
                    "1 <= k <= jobs.length <= 12",
                    "1 <= jobs[i] <= 10^7"
                ],
                "testcases": [
                    {
                        "input": "jobs = [3,2,3], k = 3",
                        "output": "3",
                        "explanation": "Assign each job to a separate worker. The working times are [3, 2, 3].  The maximum working time is 3."
                    },
                    {
                        "input": "jobs = [1,2,4,7,8], k = 2",
                        "output": "11",
                        "explanation": "One optimal assignment is: Worker 1: [1, 2, 8] (total time 11), Worker 2: [4, 7] (total time 11). The maximum working time is 11."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "minimum-number-of-work-sessions-to-finish-the-tasks",
                "title": "Minimum Number of Work Sessions to Finish the Tasks",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "find-minimum-time-to-finish-all-jobs-ii",
                "title": "Find Minimum Time to Finish All Jobs II",
                "isPaidOnly": true
            }
        ],
        "hints": [
            "We can select a subset of tasks and assign it to a worker then solve the subproblem on the remaining tasks"
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Backtracking",
                "slug": "backtracking"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Bitmask",
                "slug": "bitmask"
            }
        ]
    }
}