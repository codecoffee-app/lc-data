{
    "failed": false,
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2965",
            "title": "Find Missing and Repeated Values",
            "titleSlug": "find-missing-and-repeated-values",
            "content": "<p>You are given a <strong>0-indexed</strong> 2D integer matrix <code><font face=\"monospace\">grid</font></code> of size <code>n * n</code> with values in the range <code>[1, n<sup>2</sup>]</code>. Each integer appears <strong>exactly once</strong> except <code>a</code> which appears <strong>twice</strong> and <code>b</code> which is <strong>missing</strong>. The task is to find the repeating and missing numbers <code>a</code> and <code>b</code>.</p>\n\n<p>Return <em>a <strong>0-indexed </strong>integer array </em><code>ans</code><em> of size </em><code>2</code><em> where </em><code>ans[0]</code><em> equals to </em><code>a</code><em> and </em><code>ans[1]</code><em> equals to </em><code>b</code><em>.</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[1,3],[2,2]]\n<strong>Output:</strong> [2,4]\n<strong>Explanation:</strong> Number 2 is repeated and number 4 is missing so the answer is [2,4].\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[9,1,7],[8,9,2],[3,4,6]]\n<strong>Output:</strong> [9,5]\n<strong>Explanation:</strong> Number 9 is repeated and number 5 is missing so the answer is [9,5].\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= n == grid.length == grid[i].length &lt;= 50</code></li>\n\t<li><code>1 &lt;= grid[i][j] &lt;= n * n</code></li>\n\t<li>For all <code>x</code> that <code>1 &lt;= x &lt;= n * n</code> there is exactly one <code>x</code> that is not equal to any of the grid members.</li>\n\t<li>For all <code>x</code> that <code>1 &lt;= x &lt;= n * n</code> there is exactly one <code>x</code> that is equal to exactly two of the grid members.</li>\n\t<li>For all <code>x</code> that <code>1 &lt;= x &lt;= n * n</code> except two of them there is exatly one pair of <code>i, j</code> that <code>0 &lt;= i, j &lt;= n - 1</code> and <code>grid[i][j] == x</code>.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 184,
            "dislikes": 9,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "stats": "{\"totalAccepted\": \"45K\", \"totalSubmission\": \"59.6K\", \"totalAcceptedRaw\": 45005, \"totalSubmissionRaw\": 59589, \"acRate\": \"75.5%\"}",
            "hints": [],
            "rephrased": {
                "body": "Given a 0-indexed 2D integer matrix `grid` of size `n * n` with values in the range `[1, n^2]`. Each integer appears exactly once, except for one integer `a` which appears twice and another integer `b` which is missing. Find the repeating number `a` and the missing number `b`.",
                "constraints": [
                    "2 <= n == grid.length == grid[i].length <= 50",
                    "1 <= grid[i][j] <= n * n",
                    "For all x that 1 <= x <= n * n, there is exactly one x that is not equal to any of the grid members.",
                    "For all x that 1 <= x <= n * n, there is exactly one x that is equal to exactly two of the grid members.",
                    "For all x that 1 <= x <= n * n except two of them, there is exactly one pair of i, j that 0 <= i, j <= n - 1 and grid[i][j] == x."
                ],
                "testcases": [
                    {
                        "input": "[[1,3],[2,2]]",
                        "output": "[2,4]",
                        "explanation": "The number 2 is repeated, and the number 4 is missing."
                    },
                    {
                        "input": "[[9,1,7],[8,9,2],[3,4,6]]",
                        "output": "[9,5]",
                        "explanation": "The number 9 is repeated, and the number 5 is missing."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  vector<int> findMissingAndRepeatedValues(vector<vector<int>>& grid) {\n    const int n = grid.size();\n    const int nSquared = n * n;\n    vector<int> count(nSquared + 1);\n\n    for (const vector<int>& row : grid)\n      for (const int num : row)\n        ++count[num];\n\n    int repeated = -1;\n    int missing = -1;\n\n    for (int i = 1; i <= nSquared; ++i) {\n      if (count[i] == 2)\n        repeated = i;\n      if (count[i] == 0)\n        missing = i;\n    }\n\n    return {repeated, missing};\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int[] findMissingAndRepeatedValues(int[][] grid) {\n    final int n = grid.length;\n    final int nSquared = n * n;\n    int[] count = new int[nSquared + 1];\n\n    for (int[] row : grid)\n      for (final int num : row)\n        ++count[num];\n\n    int repeated = -1;\n    int missing = -1;\n\n    for (int i = 1; i <= nSquared; ++i) {\n      if (count[i] == 2)\n        repeated = i;\n      if (count[i] == 0)\n        missing = i;\n    }\n\n    return new int[] {repeated, missing};\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def findMissingAndRepeatedValues(self, grid: List[List[int]]) -> List[int]:\n    count = [1] + [0] * len(grid)**2  # padding for 1-indexed\n\n    for row in grid:\n      for num in row:\n        count[num] += 1\n\n    return [count.index(2), count.index(0)]\n",
                "lang_text": "py"
            }
        }
    }
}