{
    "failed": false,
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "3159",
            "title": "Find Occurrences of an Element in an Array",
            "titleSlug": "find-occurrences-of-an-element-in-an-array",
            "content": "<p>You are given an integer array <code>nums</code>, an integer array <code>queries</code>, and an integer <code>x</code>.</p>\n\n<p>For each <code>queries[i]</code>, you need to find the index of the <code>queries[i]<sup>th</sup></code> occurrence of <code>x</code> in the <code>nums</code> array. If there are fewer than <code>queries[i]</code> occurrences of <code>x</code>, the answer should be -1 for that query.</p>\n\n<p>Return an integer array <code>answer</code> containing the answers to all queries.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">nums = [1,3,1,7], queries = [1,3,2,4], x = 1</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">[0,-1,2,-1]</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<ul>\n\t<li>For the 1<sup>st</sup> query, the first occurrence of 1 is at index 0.</li>\n\t<li>For the 2<sup>nd</sup> query, there are only two occurrences of 1 in <code>nums</code>, so the answer is -1.</li>\n\t<li>For the 3<sup>rd</sup> query, the second occurrence of 1 is at index 2.</li>\n\t<li>For the 4<sup>th</sup> query, there are only two occurrences of 1 in <code>nums</code>, so the answer is -1.</li>\n</ul>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">nums = [1,2,3], queries = [10], x = 5</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">[-1]</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<ul>\n\t<li>For the 1<sup>st</sup> query, 5 doesn&#39;t exist in <code>nums</code>, so the answer is -1.</li>\n</ul>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length, queries.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= queries[i] &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= nums[i], x &lt;= 10<sup>4</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 92,
            "dislikes": 10,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                }
            ],
            "stats": "{\"totalAccepted\": \"31.1K\", \"totalSubmission\": \"41.6K\", \"totalAcceptedRaw\": 31071, \"totalSubmissionRaw\": 41606, \"acRate\": \"74.7%\"}",
            "hints": [
                "Compress the array <code>nums</code> and save all the occurrences of each element in the separate arrays."
            ],
            "rephrased": {
                "body": "Given an integer array `nums`, an integer array `queries`, and an integer `x`. For each `queries[i]`, find the index of the `queries[i]`-th occurrence of `x` in the `nums` array. If there are fewer than `queries[i]` occurrences of `x`, return -1 for that query. Return an integer array `answer` containing the answers to all queries.",
                "constraints": [
                    "1 <= nums.length, queries.length <= 10^5",
                    "1 <= queries[i] <= 10^5",
                    "1 <= nums[i], x <= 10^4"
                ],
                "testcases": [
                    {
                        "input": "nums = [1,3,1,7], queries = [1,3,2,4], x = 1",
                        "output": "[0,-1,2,-1]",
                        "explanation": "For the first query (queries[0] = 1), the first occurrence of 1 is at index 0. For the second query (queries[1] = 3), there are only two occurrences of 1 in nums, so the answer is -1. For the third query (queries[2] = 2), the second occurrence of 1 is at index 2. For the fourth query (queries[3] = 4), there are only two occurrences of 1 in nums, so the answer is -1."
                    },
                    {
                        "input": "nums = [1,2,3], queries = [10], x = 5",
                        "output": "[-1]",
                        "explanation": "For the first query (queries[0] = 10), 5 doesn't exist in nums, so the answer is -1."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "Compress the array <code>nums</code> and save all the occurrences of each element in the separate arrays."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  vector<int> occurrencesOfElement(vector<int>& nums, vector<int>& queries,\n                                   int x) {\n    const vector<int> indices = getIndices(nums, x);\n    vector<int> ans;\n\n    for (const int query : queries)\n      ans.push_back(query <= indices.size() ? indices[query - 1] : -1);\n\n    return ans;\n  }\n\n private:\n  vector<int> getIndices(const vector<int>& nums, int x) {\n    vector<int> indices;\n    for (int i = 0; i < nums.size(); ++i)\n      if (nums[i] == x)\n        indices.push_back(i);\n    return indices;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int[] occurrencesOfElement(int[] nums, int[] queries, int x) {\n    List<Integer> indices = getIndices(nums, x);\n    int[] ans = new int[queries.length];\n\n    for (int i = 0; i < queries.length; i++)\n      ans[i] = queries[i] <= indices.size() ? indices.get(queries[i] - 1) : -1;\n\n    return ans;\n  }\n\n  private List<Integer> getIndices(int[] nums, int x) {\n    List<Integer> indices = new ArrayList<>();\n    for (int i = 0; i < nums.length; ++i)\n      if (nums[i] == x)\n        indices.add(i);\n    return indices;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def occurrencesOfElement(self, nums: List[int], queries: List[int], x: int) -> List[int]:\n    indices = [i for i, num in enumerate(nums) if num == x]\n    return [indices[query - 1] if query <= len(indices) else -1\n            for query in queries]\n",
                "lang_text": "py"
            }
        }
    }
}