{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "724",
            "title": "Find Pivot Index",
            "titleSlug": "find-pivot-index",
            "content": "<p>Given an array of integers <code>nums</code>, calculate the <strong>pivot index</strong> of this array.</p>\n\n<p>The <strong>pivot index</strong> is the index where the sum of all the numbers <strong>strictly</strong> to the left of the index is equal to the sum of all the numbers <strong>strictly</strong> to the index&#39;s right.</p>\n\n<p>If the index is on the left edge of the array, then the left sum is <code>0</code> because there are no elements to the left. This also applies to the right edge of the array.</p>\n\n<p>Return <em>the <strong>leftmost pivot index</strong></em>. If no such index exists, return <code>-1</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,7,3,6,5,6]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong>\nThe pivot index is 3.\nLeft sum = nums[0] + nums[1] + nums[2] = 1 + 7 + 3 = 11\nRight sum = nums[4] + nums[5] = 5 + 6 = 11\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3]\n<strong>Output:</strong> -1\n<strong>Explanation:</strong>\nThere is no index that satisfies the conditions in the problem statement.</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,1,-1]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong>\nThe pivot index is 0.\nLeft sum = 0 (no elements to the left of index 0)\nRight sum = nums[1] + nums[2] = 1 + -1 = 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>-1000 &lt;= nums[i] &lt;= 1000</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Note:</strong> This question is the same as&nbsp;1991:&nbsp;<a href=\"https://leetcode.com/problems/find-the-middle-index-in-array/\" target=\"_blank\">https://leetcode.com/problems/find-the-middle-index-in-array/</a></p>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 7987,
            "dislikes": 810,
            "similarQuestions": "[{\"title\": \"Subarray Sum Equals K\", \"titleSlug\": \"subarray-sum-equals-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find the Middle Index in Array\", \"titleSlug\": \"find-the-middle-index-in-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Number of Ways to Split Array\", \"titleSlug\": \"number-of-ways-to-split-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Sum Score of Array\", \"titleSlug\": \"maximum-sum-score-of-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Left and Right Sum Differences\", \"titleSlug\": \"left-and-right-sum-differences\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "stats": "{\"totalAccepted\": \"985.9K\", \"totalSubmission\": \"1.7M\", \"totalAcceptedRaw\": 985878, \"totalSubmissionRaw\": 1741245, \"acRate\": \"56.6%\"}",
            "hints": [
                "Create an array sumLeft where sumLeft[i] is the sum of all the numbers to the left of index i.",
                "Create an array sumRight where sumRight[i] is the sum of all the numbers to the right of index i.",
                "For each index i, check if sumLeft[i] equals sumRight[i] return i. If no i found, return -1."
            ],
            "rephrased": {
                "body": "Given an array of integers `nums`, find the pivot index. The pivot index is the index where the sum of all numbers strictly to the left of the index is equal to the sum of all numbers strictly to the right of the index. If the index is at either edge of the array, the sum from that side is considered 0. Return the leftmost pivot index. If no such index exists, return -1.",
                "constraints": [
                    "1 <= nums.length <= 10^4",
                    "-1000 <= nums[i] <= 1000"
                ],
                "testcases": [
                    {
                        "input": "[1,7,3,6,5,6]",
                        "output": "3",
                        "explanation": "The sum of elements to the left of index 3 (1 + 7 + 3 = 11) is equal to the sum of elements to the right of index 3 (5 + 6 = 11)."
                    },
                    {
                        "input": "[1,2,3]",
                        "output": "-1",
                        "explanation": "There is no index where the sum of elements to the left equals the sum of elements to the right."
                    },
                    {
                        "input": "[2,1,-1]",
                        "output": "0",
                        "explanation": "The sum of elements to the left of index 0 is 0. The sum of elements to the right of index 0 (1 + -1 = 0) is also 0."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "subarray-sum-equals-k",
                "title": "Subarray Sum Equals K",
                "isPaidOnly": false
            },
            {
                "difficulty": "Easy",
                "titleSlug": "find-the-middle-index-in-array",
                "title": "Find the Middle Index in Array",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "number-of-ways-to-split-array",
                "title": "Number of Ways to Split Array",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "maximum-sum-score-of-array",
                "title": "Maximum Sum Score of Array",
                "isPaidOnly": true
            },
            {
                "difficulty": "Easy",
                "titleSlug": "left-and-right-sum-differences",
                "title": "Left and Right Sum Differences",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "Create an array sumLeft where sumLeft[i] is the sum of all the numbers to the left of index i.",
            "Create an array sumRight where sumRight[i] is the sum of all the numbers to the right of index i.",
            "For each index i, check if sumLeft[i] equals sumRight[i] return i. If no i found, return -1."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int pivotIndex(vector<int>& nums) {\n    const int sum = accumulate(nums.begin(), nums.end(), 0);\n    int prefix = 0;\n\n    for (int i = 0; i < nums.size(); ++i) {\n      if (prefix == sum - prefix - nums[i])\n        return i;\n      prefix += nums[i];\n    }\n\n    return -1;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int pivotIndex(int[] nums) {\n    final int sum = Arrays.stream(nums).sum();\n    int prefix = 0;\n\n    for (int i = 0; i < nums.length; ++i) {\n      if (prefix == sum - prefix - nums[i])\n        return i;\n      prefix += nums[i];\n    }\n\n    return -1;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def pivotIndex(self, nums: List[int]) -> int:\n    summ = sum(nums)\n    prefix = 0\n\n    for i, num in enumerate(nums):\n      if prefix == summ - prefix - num:\n        return i\n      prefix += num\n\n    return -1\n",
                "lang_text": "py"
            }
        }
    }
}