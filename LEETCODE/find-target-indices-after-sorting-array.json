{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2089",
            "title": "Find Target Indices After Sorting Array",
            "titleSlug": "find-target-indices-after-sorting-array",
            "content": "<p>You are given a <strong>0-indexed</strong> integer array <code>nums</code> and a target element <code>target</code>.</p>\n\n<p>A <strong>target index</strong> is an index <code>i</code> such that <code>nums[i] == target</code>.</p>\n\n<p>Return <em>a list of the target indices of</em> <code>nums</code> after<em> sorting </em><code>nums</code><em> in <strong>non-decreasing</strong> order</em>. If there are no target indices, return <em>an <strong>empty</strong> list</em>. The returned list must be sorted in <strong>increasing</strong> order.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,5,2,3], target = 2\n<strong>Output:</strong> [1,2]\n<strong>Explanation:</strong> After sorting, nums is [1,<u><strong>2</strong></u>,<u><strong>2</strong></u>,3,5].\nThe indices where nums[i] == 2 are 1 and 2.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,5,2,3], target = 3\n<strong>Output:</strong> [3]\n<strong>Explanation:</strong> After sorting, nums is [1,2,2,<u><strong>3</strong></u>,5].\nThe index where nums[i] == 3 is 3.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,5,2,3], target = 5\n<strong>Output:</strong> [4]\n<strong>Explanation:</strong> After sorting, nums is [1,2,2,3,<u><strong>5</strong></u>].\nThe index where nums[i] == 5 is 4.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= nums[i], target &lt;= 100</code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 1708,
            "dislikes": 79,
            "similarQuestions": "[{\"title\": \"Find First and Last Position of Element in Sorted Array\", \"titleSlug\": \"find-first-and-last-position-of-element-in-sorted-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Rank Transform of an Array\", \"titleSlug\": \"rank-transform-of-an-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Find Words Containing Character\", \"titleSlug\": \"find-words-containing-character\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "stats": "{\"totalAccepted\": \"152.1K\", \"totalSubmission\": \"200.5K\", \"totalAcceptedRaw\": 152075, \"totalSubmissionRaw\": 200513, \"acRate\": \"75.8%\"}",
            "hints": [
                "Try \"sorting\" the array first.",
                "Now find all indices in the array whose values are equal to target."
            ],
            "rephrased": {
                "body": "Given a 0-indexed integer array `nums` and a target integer `target`, sort `nums` in non-decreasing order. Return a list of indices `i` where `nums[i]` equals `target` after sorting. The returned list must be sorted in increasing order. If no target indices exist, return an empty list.",
                "constraints": [
                    "1 <= nums.length <= 100",
                    "1 <= nums[i], target <= 100"
                ],
                "testcases": [
                    {
                        "input": "nums = [1,2,5,2,3], target = 2",
                        "output": "[1,2]",
                        "explanation": "After sorting, nums becomes [1,2,2,3,5]. The indices where nums[i] == 2 are 1 and 2."
                    },
                    {
                        "input": "nums = [1,2,5,2,3], target = 3",
                        "output": "[3]",
                        "explanation": "After sorting, nums becomes [1,2,2,3,5]. The index where nums[i] == 3 is 3."
                    },
                    {
                        "input": "nums = [1,2,5,2,3], target = 5",
                        "output": "[4]",
                        "explanation": "After sorting, nums becomes [1,2,2,3,5]. The index where nums[i] == 5 is 4."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "find-first-and-last-position-of-element-in-sorted-array",
                "title": "Find First and Last Position of Element in Sorted Array",
                "isPaidOnly": false
            },
            {
                "difficulty": "Easy",
                "titleSlug": "rank-transform-of-an-array",
                "title": "Rank Transform of an Array",
                "isPaidOnly": false
            },
            {
                "difficulty": "Easy",
                "titleSlug": "find-words-containing-character",
                "title": "Find Words Containing Character",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "Try \"sorting\" the array first.",
            "Now find all indices in the array whose values are equal to target."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  vector<int> targetIndices(vector<int>& nums, int target) {\n    vector<int> ans;\n    const int count = std::count(nums.begin(), nums.end(), target);\n    int lessThan = count_if(nums.begin(), nums.end(),\n                            [&](int num) { return num < target; });\n\n    for (int i = 0; i < count; ++i)\n      ans.push_back(lessThan++);\n\n    return ans;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public List<Integer> targetIndices(int[] nums, int target) {\n    List<Integer> ans = new ArrayList<>();\n    final int count = (int) Arrays.stream(nums).filter(num -> num == target).count();\n    int lessThan = (int) Arrays.stream(nums).filter(num -> num < target).count();\n\n    for (int i = 0; i < count; ++i)\n      ans.add(lessThan++);\n\n    return ans;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def targetIndices(self, nums: List[int], target: int) -> List[int]:\n    count = nums.count(target)\n    lessThan = sum(num < target for num in nums)\n    return [i for i in range(lessThan, lessThan + count)]\n",
                "lang_text": "py"
            }
        }
    }
}