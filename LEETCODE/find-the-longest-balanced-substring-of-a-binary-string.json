{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2609",
            "title": "Find the Longest Balanced Substring of a Binary String",
            "titleSlug": "find-the-longest-balanced-substring-of-a-binary-string",
            "content": "<p>You are given a binary string <code>s</code> consisting only of zeroes and ones.</p>\n\n<p>A substring of <code>s</code> is considered balanced if<strong> all zeroes are before ones</strong> and the number of zeroes is equal to the number of ones inside the substring. Notice that the empty substring is considered a balanced substring.</p>\n\n<p>Return <em>the length of the longest balanced substring of </em><code>s</code>.</p>\n\n<p>A <b>substring</b> is a contiguous sequence of characters within a string.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;01000111&quot;\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> The longest balanced substring is &quot;000111&quot;, which has length 6.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;00111&quot;\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> The longest balanced substring is &quot;0011&quot;, which has length 4.&nbsp;\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;111&quot;\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> There is no balanced substring except the empty substring, so the answer is 0.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 50</code></li>\n\t<li><code>&#39;0&#39; &lt;= s[i] &lt;= &#39;1&#39;</code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 342,
            "dislikes": 20,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "stats": "{\"totalAccepted\": \"27.3K\", \"totalSubmission\": \"59.7K\", \"totalAcceptedRaw\": 27311, \"totalSubmissionRaw\": 59702, \"acRate\": \"45.7%\"}",
            "hints": [
                "Consider iterating over each subarray and checking if it\u2019s balanced or not.",
                "Among all balanced subarrays, the answer is the longest one of them."
            ],
            "rephrased": {
                "body": "Given a binary string `s` consisting of only '0's and '1's, find the length of the longest balanced substring. A substring is considered balanced if all '0's are before all '1's, and the number of '0's is equal to the number of '1's.  The empty substring is also considered balanced.",
                "constraints": [
                    "1 <= s.length <= 50",
                    "'0' <= s[i] <= '1'"
                ],
                "testcases": [
                    {
                        "input": "01000111",
                        "output": "6",
                        "explanation": "The longest balanced substring is \"000111\", which has length 6. It satisfies the condition that all zeroes precede ones, and the count of zeroes (3) equals the count of ones (3)."
                    },
                    {
                        "input": "00111",
                        "output": "4",
                        "explanation": "The longest balanced substring is \"0011\", which has length 4.  It has two '0's followed by two '1's."
                    },
                    {
                        "input": "111",
                        "output": "0",
                        "explanation": "There is no balanced substring (other than the empty substring) in the string \"111\". Since there are no zeroes, we cannot form a balanced substring of the required format."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "Consider iterating over each subarray and checking if it\u2019s balanced or not.",
            "Among all balanced subarrays, the answer is the longest one of them."
        ],
        "relatedTopics": [
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int findTheLongestBalancedSubstring(string s) {\n    int ans = 0;\n\n    for (int i = 0; i < s.length();) {\n      int zeros = 0;\n      int ones = 0;\n      while (i < s.length() && s[i] == '0') {\n        ++zeros;\n        ++i;\n      }\n      while (i < s.length() && s[i] == '1') {\n        ++ones;\n        ++i;\n      }\n      ans = max(ans, min(zeros, ones));\n    }\n\n    return ans * 2;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int findTheLongestBalancedSubstring(String s) {\n    int ans = 0;\n\n    for (int i = 0; i < s.length();) {\n      int zeros = 0;\n      int ones = 0;\n      while (i < s.length() && s.charAt(i) == '0') {\n        ++zeros;\n        ++i;\n      }\n      while (i < s.length() && s.charAt(i) == '1') {\n        ++ones;\n        ++i;\n      }\n      ans = Math.max(ans, Math.min(zeros, ones));\n    }\n\n    return ans * 2;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def findTheLongestBalancedSubstring(self, s: str) -> int:\n    ans = 0\n\n    i = 0\n    while i < len(s):\n      zeros = 0\n      ones = 0\n      while i < len(s) and s[i] == '0':\n        zeros += 1\n        i += 1\n      while i < len(s) and s[i] == '1':\n        ones += 1\n        i += 1\n      ans = max(ans, min(zeros, ones))\n\n    return ans * 2\n",
                "lang_text": "py"
            }
        }
    }
}