{
    "failed": false,
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2831",
            "title": "Find the Longest Equal Subarray",
            "titleSlug": "find-the-longest-equal-subarray",
            "content": "<p>You are given a <strong>0-indexed</strong> integer array <code>nums</code> and an integer <code>k</code>.</p>\n\n<p>A subarray is called <strong>equal</strong> if all of its elements are equal. Note that the empty subarray is an <strong>equal</strong> subarray.</p>\n\n<p>Return <em>the length of the <strong>longest</strong> possible equal subarray after deleting <strong>at most</strong> </em><code>k</code><em> elements from </em><code>nums</code>.</p>\n\n<p>A <b>subarray</b> is a contiguous, possibly empty sequence of elements within an array.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,3,2,3,1,3], k = 3\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> It&#39;s optimal to delete the elements at index 2 and index 4.\nAfter deleting them, nums becomes equal to [1, 3, 3, 3].\nThe longest equal subarray starts at i = 1 and ends at j = 3 with length equal to 3.\nIt can be proven that no longer equal subarrays can be created.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,1,2,2,1,1], k = 2\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> It&#39;s optimal to delete the elements at index 2 and index 3.\nAfter deleting them, nums becomes equal to [1, 1, 1, 1].\nThe array itself is an equal subarray, so the answer is 4.\nIt can be proven that no longer equal subarrays can be created.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= nums.length</code></li>\n\t<li><code>0 &lt;= k &lt;= nums.length</code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 658,
            "dislikes": 16,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "stats": "{\"totalAccepted\": \"19.5K\", \"totalSubmission\": \"54.5K\", \"totalAcceptedRaw\": 19457, \"totalSubmissionRaw\": 54536, \"acRate\": \"35.7%\"}",
            "hints": [
                "<div class=\"_1l1MA\">For each number <code>x</code> in <code>nums</code>, create a sorted list <code>indices<sub>x</sub></code> of all indices <code>i</code> such that <code>nums[i] == x</code>.</div>",
                "<div class=\"_1l1MA\">On every <code>indices<sub>x</sub></code>, execute a sliding window technique.</div>",
                "<div class=\"_1l1MA\">For each <code>indices<sub>x</sub></code>, find <code>i, j</code> such that <code>(indices<sub>x</sub>[j] - indices<sub>x</sub>[i]) - (j - i) <= k</code> and <code>j - i + 1</code> is maximized.</div>",
                "<div class=\"_1l1MA\">The answer would be the maximum of <code>j - i + 1</code> for all <code>indices<sub>x</sub></code>.</div>"
            ],
            "rephrased": {
                "body": "Given a 0-indexed integer array `nums` and an integer `k`, find the length of the longest possible equal subarray after deleting at most `k` elements from `nums`. An equal subarray is defined as a contiguous subarray where all elements are equal. The empty subarray is also considered an equal subarray.",
                "constraints": [
                    "1 <= nums.length <= 10^5",
                    "1 <= nums[i] <= nums.length",
                    "0 <= k <= nums.length"
                ],
                "testcases": [
                    {
                        "input": "nums = [1,3,2,3,1,3], k = 3",
                        "output": "3",
                        "explanation": "By deleting the elements at indices 2 and 4, the array becomes [1, 3, 3, 3]. The longest equal subarray is [3, 3, 3] which has a length of 3."
                    },
                    {
                        "input": "nums = [1,1,2,2,1,1], k = 2",
                        "output": "4",
                        "explanation": "By deleting the elements at indices 2 and 3, the array becomes [1, 1, 1, 1]. The longest equal subarray is [1, 1, 1, 1] which has a length of 4."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "<div class=\"_1l1MA\">For each number <code>x</code> in <code>nums</code>, create a sorted list <code>indices<sub>x</sub></code> of all indices <code>i</code> such that <code>nums[i] == x</code>.</div>",
            "<div class=\"_1l1MA\">On every <code>indices<sub>x</sub></code>, execute a sliding window technique.</div>",
            "<div class=\"_1l1MA\">For each <code>indices<sub>x</sub></code>, find <code>i, j</code> such that <code>(indices<sub>x</sub>[j] - indices<sub>x</sub>[i]) - (j - i) <= k</code> and <code>j - i + 1</code> is maximized.</div>",
            "<div class=\"_1l1MA\">The answer would be the maximum of <code>j - i + 1</code> for all <code>indices<sub>x</sub></code>.</div>"
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ]
    }
}