{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2730",
            "title": "Find the Longest Semi-Repetitive Substring",
            "titleSlug": "find-the-longest-semi-repetitive-substring",
            "content": "<p>You are given a <strong>0-indexed</strong> string <code>s</code> that consists of digits from <code>0</code> to <code>9</code>.</p>\n\n<p>A string <code>t</code> is called a <strong>semi-repetitive</strong> if there is at most one consecutive pair of the same digits inside <code>t</code>. For example, <code>0010</code>, <code>002020</code>, <code>0123</code>, <code>2002</code>, and <code>54944</code> are semi-repetitive while&nbsp;<code>00101022</code>, and <code>1101234883</code> are not.</p>\n\n<p>Return <em>the length of the longest semi-repetitive substring inside</em> <code>s</code>.</p>\n\n<p>A <b>substring</b> is a contiguous <strong>non-empty</strong> sequence of characters within a string.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;52233&quot;\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> The longest semi-repetitive substring is &quot;5223&quot;, which starts at i = 0 and ends at j = 3. \n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;5494&quot;\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> s is a semi-reptitive string, so the answer is 4.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;1111111&quot;\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The longest semi-repetitive substring is &quot;11&quot;, which starts at i = 0 and ends at j = 1.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 50</code></li>\n\t<li><code>&#39;0&#39; &lt;= s[i] &lt;= &#39;9&#39;</code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 265,
            "dislikes": 73,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "stats": "{\"totalAccepted\": \"20.5K\", \"totalSubmission\": \"58K\", \"totalAcceptedRaw\": 20455, \"totalSubmissionRaw\": 57967, \"acRate\": \"35.3%\"}",
            "hints": [
                "Since n is small, we can just check every substring, and if the substring is semi-repetitive, maximize the answer with its length."
            ],
            "rephrased": {
                "body": "Given a 0-indexed string `s` consisting of digits from '0' to '9', find the length of the longest semi-repetitive substring within `s`. A string `t` is considered semi-repetitive if it contains at most one consecutive pair of identical digits. A substring is a contiguous, non-empty sequence of characters within a string.",
                "constraints": [
                    "1 <= s.length <= 50",
                    "'0' <= s[i] <= '9'"
                ],
                "testcases": [
                    {
                        "input": "52233",
                        "output": "4",
                        "explanation": "The longest semi-repetitive substring is \"5223\", which has a length of 4."
                    },
                    {
                        "input": "5494",
                        "output": "4",
                        "explanation": "The entire string \"5494\" is semi-repetitive, so the length of the longest semi-repetitive substring is 4."
                    },
                    {
                        "input": "1111111",
                        "output": "2",
                        "explanation": "The longest semi-repetitive substring is \"11\", which has a length of 2."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "Since n is small, we can just check every substring, and if the substring is semi-repetitive, maximize the answer with its length."
        ],
        "relatedTopics": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int longestSemiRepetitiveSubstring(string s) {\n    int ans = 1;\n    int prevStart = 0;\n    int start = 0;\n\n    for (int i = 1; i < s.length(); ++i) {\n      if (s[i] == s[i - 1]) {\n        if (prevStart > 0)\n          start = prevStart;\n        prevStart = i;\n      }\n      ans = max(ans, i - start + 1);\n    }\n\n    return ans;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int longestSemiRepetitiveSubstring(String s) {\n    int ans = 1;\n    int prevStart = 0;\n    int start = 0;\n\n    for (int i = 1; i < s.length(); ++i) {\n      if (s.charAt(i) == s.charAt(i - 1)) {\n        if (prevStart > 0)\n          start = prevStart;\n        prevStart = i;\n      }\n      ans = Math.max(ans, i - start + 1);\n    }\n\n    return ans;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def longestSemiRepetitiveSubstring(self, s: str) -> int:\n    ans = 1\n    prevStart = 0\n    start = 0\n\n    for i in range(1, len(s)):\n      if s[i] == s[i - 1]:\n        if prevStart > 0:\n          start = prevStart\n        prevStart = i\n      ans = max(ans, i - start + 1)\n\n    return ans\n",
                "lang_text": "py"
            }
        }
    }
}