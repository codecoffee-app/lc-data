{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1371",
            "title": "Find the Longest Substring Containing Vowels in Even Counts",
            "titleSlug": "find-the-longest-substring-containing-vowels-in-even-counts",
            "content": "<p>Given the string <code>s</code>, return the size of the longest substring containing each vowel an even number of times. That is, &#39;a&#39;, &#39;e&#39;, &#39;i&#39;, &#39;o&#39;, and &#39;u&#39; must appear an even number of times.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;eleetminicoworoep&quot;\n<strong>Output:</strong> 13\n<strong>Explanation: </strong>The longest substring is &quot;leetminicowor&quot; which contains two each of the vowels: <strong>e</strong>, <strong>i</strong> and <strong>o</strong> and zero of the vowels: <strong>a</strong> and <strong>u</strong>.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;leetcodeisgreat&quot;\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> The longest substring is &quot;leetc&quot; which contains two e&#39;s.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;bcbcbc&quot;\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> In this case, the given string &quot;bcbcbc&quot; is the longest because all vowels: <strong>a</strong>, <strong>e</strong>, <strong>i</strong>, <strong>o</strong> and <strong>u</strong> appear zero times.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 5 x 10^5</code></li>\n\t<li><code>s</code>&nbsp;contains only lowercase English letters.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 1575,
            "dislikes": 58,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "stats": "{\"totalAccepted\": \"25.3K\", \"totalSubmission\": \"39.7K\", \"totalAcceptedRaw\": 25256, \"totalSubmissionRaw\": 39669, \"acRate\": \"63.7%\"}",
            "hints": [
                "Represent the counts (odd or even) of vowels with a bitmask.",
                "Precompute the prefix xor for the bitmask of vowels and then get the longest valid substring."
            ],
            "rephrased": {
                "body": "Given a string `s`, find the length of the longest substring that contains each vowel ('a', 'e', 'i', 'o', 'u') an even number of times. A vowel appears an even number of times if it appears 0, 2, 4, etc. times within the substring.",
                "constraints": [
                    "1 <= s.length <= 5 x 10^5",
                    "s contains only lowercase English letters."
                ],
                "testcases": [
                    {
                        "input": "eleetminicoworoep",
                        "output": 13,
                        "explanation": "The longest substring is \"leetminicowor\", which contains two 'e's, two 'i's, two 'o's, zero 'a's, and zero 'u's."
                    },
                    {
                        "input": "leetcodeisgreat",
                        "output": 5,
                        "explanation": "The longest substring is \"leetc\", which contains two 'e's."
                    },
                    {
                        "input": "bcbcbc",
                        "output": 6,
                        "explanation": "The longest substring is \"bcbcbc\", where each vowel appears zero times."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "Represent the counts (odd or even) of vowels with a bitmask.",
            "Precompute the prefix xor for the bitmask of vowels and then get the longest valid substring."
        ],
        "relatedTopics": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int findTheLongestSubstring(string s) {\n    constexpr string_view kVowels = \"aeiou\";\n    int ans = 0;\n    int prefix = 0;  // binary prefix\n    unordered_map<int, int> prefixToIndex{{0, -1}};\n\n    for (int i = 0; i < s.length(); ++i) {\n      const int index = kVowels.find(s[i]);\n      if (index != -1)\n        prefix ^= 1 << index;\n      if (!prefixToIndex.count(prefix))\n        prefixToIndex[prefix] = i;\n      ans = max(ans, i - prefixToIndex[prefix]);\n    }\n\n    return ans;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int findTheLongestSubstring(String s) {\n    final String kVowels = \"aeiou\";\n    int ans = 0;\n    int prefix = 0; // binary prefix\n    Map<Integer, Integer> prefixToIndex = new HashMap<>();\n    prefixToIndex.put(0, -1);\n\n    for (int i = 0; i < s.length(); ++i) {\n      final int index = kVowels.indexOf(s.charAt(i));\n      if (index != -1)\n        prefix ^= 1 << index;\n      prefixToIndex.putIfAbsent(prefix, i);\n      ans = Math.max(ans, i - prefixToIndex.get(prefix));\n    }\n\n    return ans;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def findTheLongestSubstring(self, s: str) -> int:\n    kVowels = 'aeiou'\n    ans = 0\n    prefix = 0  # binary prefix\n    prefixToIndex = {0: -1}\n\n    for i, c in enumerate(s):\n      index = kVowels.find(c)\n      if index != -1:\n        prefix ^= 1 << index\n      prefixToIndex.setdefault(prefix, i)\n      ans = max(ans, i - prefixToIndex[prefix])\n\n    return ans\n",
                "lang_text": "py"
            }
        }
    }
}