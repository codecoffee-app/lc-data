{
    "failed": false,
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "3202",
            "title": "Find the Maximum Length of Valid Subsequence II",
            "titleSlug": "find-the-maximum-length-of-valid-subsequence-ii",
            "content": "You are given an integer array <code>nums</code> and a <strong>positive</strong> integer <code>k</code>.\n<p>A <span data-keyword=\"subsequence-array\">subsequence</span> <code>sub</code> of <code>nums</code> with length <code>x</code> is called <strong>valid</strong> if it satisfies:</p>\n\n<ul>\n\t<li><code>(sub[0] + sub[1]) % k == (sub[1] + sub[2]) % k == ... == (sub[x - 2] + sub[x - 1]) % k.</code></li>\n</ul>\nReturn the length of the <strong>longest</strong> <strong>valid</strong> subsequence of <code>nums</code>.\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">nums = [1,2,3,4,5], k = 2</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">5</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>The longest valid subsequence is <code>[1, 2, 3, 4, 5]</code>.</p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">nums = [1,4,2,3,1,4], k = 3</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">4</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>The longest valid subsequence is <code>[1, 4, 1, 4]</code>.</p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= nums.length &lt;= 10<sup>3</sup></code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 10<sup>7</sup></code></li>\n\t<li><code>1 &lt;= k &lt;= 10<sup>3</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 163,
            "dislikes": 9,
            "similarQuestions": "[{\"title\": \"Longest Increasing Subsequence\", \"titleSlug\": \"longest-increasing-subsequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Length of the Longest Subsequence That Sums to Target\", \"titleSlug\": \"length-of-the-longest-subsequence-that-sums-to-target\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "stats": "{\"totalAccepted\": \"15.5K\", \"totalSubmission\": \"40K\", \"totalAcceptedRaw\": 15480, \"totalSubmissionRaw\": 40035, \"acRate\": \"38.7%\"}",
            "hints": [
                "Fix the value of <code>(subs[0] + subs[1]) % k</code> from the <code>k</code> possible values. Let it be <code>val</code>.",
                "Let <code>dp[i]</code> store the maximum length of a subsequence with its last element <code>x</code> such that <code>x % k == i</code>.",
                "Answer for a subsequence ending at index <code>y</code> is <code>dp[(k + val - (y % k)) % k] + 1</code>."
            ],
            "rephrased": {
                "body": "Given an integer array `nums` and a positive integer `k`, find the length of the longest valid subsequence of `nums`. A subsequence `sub` of `nums` with length `x` is considered valid if `(sub[0] + sub[1]) % k == (sub[1] + sub[2]) % k == ... == (sub[x - 2] + sub[x - 1]) % k`.",
                "constraints": [
                    "2 <= nums.length <= 10^3",
                    "1 <= nums[i] <= 10^7",
                    "1 <= k <= 10^3"
                ],
                "testcases": [
                    {
                        "input": "nums = [1,2,3,4,5], k = 2",
                        "output": "5",
                        "explanation": "The subsequence [1, 2, 3, 4, 5] satisfies the condition: (1+2)%2 == (2+3)%2 == (3+4)%2 == (4+5)%2 == 1. It's the longest such subsequence."
                    },
                    {
                        "input": "nums = [1,4,2,3,1,4], k = 3",
                        "output": "4",
                        "explanation": "The subsequence [1, 4, 1, 4] satisfies the condition: (1+4)%3 == (4+1)%3 == (1+4)%3 == 2. It's the longest such subsequence."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "longest-increasing-subsequence",
                "title": "Longest Increasing Subsequence",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "length-of-the-longest-subsequence-that-sums-to-target",
                "title": "Length of the Longest Subsequence That Sums to Target",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "Fix the value of <code>(subs[0] + subs[1]) % k</code> from the <code>k</code> possible values. Let it be <code>val</code>.",
            "Let <code>dp[i]</code> store the maximum length of a subsequence with its last element <code>x</code> such that <code>x % k == i</code>.",
            "Answer for a subsequence ending at index <code>y</code> is <code>dp[(k + val - (y % k)) % k] + 1</code>."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ]
    }
}