{
    "failed": false,
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "3197",
            "title": "Find the Minimum Area to Cover All Ones II",
            "titleSlug": "find-the-minimum-area-to-cover-all-ones-ii",
            "content": "<p>You are given a 2D <strong>binary</strong> array <code>grid</code>. You need to find 3 <strong>non-overlapping</strong> rectangles having <strong>non-zero</strong> areas with horizontal and vertical sides such that all the 1&#39;s in <code>grid</code> lie inside these rectangles.</p>\n\n<p>Return the <strong>minimum</strong> possible sum of the area of these rectangles.</p>\n\n<p><strong>Note</strong> that the rectangles are allowed to touch.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">grid = [[1,0,1],[1,1,1]]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">5</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2024/05/14/example0rect21.png\" style=\"padding: 10px; background: rgb(255, 255, 255); border-radius: 0.5rem; width: 280px; height: 198px;\" /></p>\n\n<ul>\n\t<li>The 1&#39;s at <code>(0, 0)</code> and <code>(1, 0)</code> are covered by a rectangle of area 2.</li>\n\t<li>The 1&#39;s at <code>(0, 2)</code> and <code>(1, 2)</code> are covered by a rectangle of area 2.</li>\n\t<li>The 1 at <code>(1, 1)</code> is covered by a rectangle of area 1.</li>\n</ul>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">grid = [[1,0,1,0],[0,1,0,1]]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">5</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2024/05/14/example1rect2.png\" style=\"padding: 10px; background: rgb(255, 255, 255); border-radius: 0.5rem; width: 356px; height: 198px;\" /></p>\n\n<ul>\n\t<li>The 1&#39;s at <code>(0, 0)</code> and <code>(0, 2)</code> are covered by a rectangle of area 3.</li>\n\t<li>The 1 at <code>(1, 1)</code> is covered by a rectangle of area 1.</li>\n\t<li>The 1 at <code>(1, 3)</code> is covered by a rectangle of area 1.</li>\n</ul>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= grid.length, grid[i].length &lt;= 30</code></li>\n\t<li><code>grid[i][j]</code> is either 0 or 1.</li>\n\t<li>The input is generated such that there are at least three 1&#39;s in <code>grid</code>.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 19,
            "dislikes": 2,
            "similarQuestions": "[{\"title\": \"Smallest Rectangle Enclosing Black Pixels\", \"titleSlug\": \"smallest-rectangle-enclosing-black-pixels\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
            "topicTags": [],
            "stats": "{\"totalAccepted\": \"1.6K\", \"totalSubmission\": \"7.3K\", \"totalAcceptedRaw\": 1644, \"totalSubmissionRaw\": 7350, \"acRate\": \"22.4%\"}",
            "hints": [
                "Consider covering using 2 rectangles. As the rectangles don\u2019t overlap, one of the rectangles must either be vertically above or horizontally left to the other.",
                "To find the minimum area, check all possible vertical and horizontal splits.",
                "For 3 rectangles, extend the idea to first covering using one rectangle, and then try splitting leftover ones both horizontally and vertically."
            ],
            "rephrased": {
                "body": "Given a 2D binary array `grid`, the task is to find three non-overlapping rectangles with non-zero areas that cover all the 1s in the grid. The rectangles must have horizontal and vertical sides, and the objective is to minimize the sum of their areas. Rectangles are allowed to touch.",
                "constraints": [
                    "1 <= grid.length, grid[i].length <= 30",
                    "grid[i][j] is either 0 or 1",
                    "The input is generated such that there are at least three 1s in grid"
                ],
                "testcases": [
                    {
                        "input": "[[1,0,1],[1,1,1]]",
                        "output": "5",
                        "explanation": "One possible configuration is to cover the 1s at (0, 0) and (1, 0) with a rectangle of area 2, the 1s at (0, 2) and (1, 2) with a rectangle of area 2, and the 1 at (1, 1) with a rectangle of area 1.  The total area is 2 + 2 + 1 = 5."
                    },
                    {
                        "input": "[[1,0,1,0],[0,1,0,1]]",
                        "output": "5",
                        "explanation": "One possible configuration is to cover the 1s at (0, 0) and (0, 2) with a rectangle of area 3, the 1 at (1, 1) with a rectangle of area 1, and the 1 at (1, 3) with a rectangle of area 1. The total area is 3 + 1 + 1 = 5."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Hard",
                "titleSlug": "smallest-rectangle-enclosing-black-pixels",
                "title": "Smallest Rectangle Enclosing Black Pixels",
                "isPaidOnly": true
            }
        ],
        "hints": [
            "Consider covering using 2 rectangles. As the rectangles don\u2019t overlap, one of the rectangles must either be vertically above or horizontally left to the other.",
            "To find the minimum area, check all possible vertical and horizontal splits.",
            "For 3 rectangles, extend the idea to first covering using one rectangle, and then try splitting leftover ones both horizontally and vertically."
        ],
        "relatedTopics": []
    }
}