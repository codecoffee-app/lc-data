{
    "failed": false,
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "3164",
            "title": "Find the Number of Good Pairs II",
            "titleSlug": "find-the-number-of-good-pairs-ii",
            "content": "<p>You are given 2 integer arrays <code>nums1</code> and <code>nums2</code> of lengths <code>n</code> and <code>m</code> respectively. You are also given a <strong>positive</strong> integer <code>k</code>.</p>\n\n<p>A pair <code>(i, j)</code> is called <strong>good</strong> if <code>nums1[i]</code> is divisible by <code>nums2[j] * k</code> (<code>0 &lt;= i &lt;= n - 1</code>, <code>0 &lt;= j &lt;= m - 1</code>).</p>\n\n<p>Return the total number of <strong>good</strong> pairs.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">nums1 = [1,3,4], nums2 = [1,3,4], k = 1</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">5</span></p>\n\n<p><strong>Explanation:</strong></p>\nThe 5 good pairs are <code>(0, 0)</code>, <code>(1, 0)</code>, <code>(1, 1)</code>, <code>(2, 0)</code>, and <code>(2, 2)</code>.</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">nums1 = [1,2,4,12], nums2 = [2,4], k = 3</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">2</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>The 2 good pairs are <code>(3, 0)</code> and <code>(3, 1)</code>.</p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n, m &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= nums1[i], nums2[j] &lt;= 10<sup>6</sup></code></li>\n\t<li><code>1 &lt;= k &lt;= 10<sup>3</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 193,
            "dislikes": 32,
            "similarQuestions": "[{\"title\": \"Count Array Pairs Divisible by K\", \"titleSlug\": \"count-array-pairs-divisible-by-k\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                }
            ],
            "stats": "{\"totalAccepted\": \"22.6K\", \"totalSubmission\": \"89.3K\", \"totalAcceptedRaw\": 22628, \"totalSubmissionRaw\": 89306, \"acRate\": \"25.3%\"}",
            "hints": [
                "Let <code>f[v]</code> be the number of occurrences of <code>v/k</code> in nums2.",
                "For each value <code>v</code> in nums1, enumerating all its factors <code>d</code> (in <code>sqrt(v)</code> time) and sum up all the <code>f[d]</code> to get the final answer.",
                "It is also possible to improve the complexity from <code>v * sqrt(v)</code> to <code>v * log(v)</code> - How?"
            ],
            "rephrased": {
                "body": "Given two integer arrays `nums1` and `nums2` of lengths `n` and `m` respectively, and a positive integer `k`.  A pair `(i, j)` is considered 'good' if `nums1[i]` is divisible by `nums2[j] * k`, where `0 <= i < n` and `0 <= j < m`. Determine the total number of 'good' pairs.",
                "constraints": [
                    "1 <= n, m <= 10^5",
                    "1 <= nums1[i], nums2[j] <= 10^6",
                    "1 <= k <= 10^3"
                ],
                "testcases": [
                    {
                        "input": "nums1 = [1,3,4], nums2 = [1,3,4], k = 1",
                        "output": "5",
                        "explanation": "The 'good' pairs are (0, 0), (1, 0), (1, 1), (2, 0), and (2, 2)."
                    },
                    {
                        "input": "nums1 = [1,2,4,12], nums2 = [2,4], k = 3",
                        "output": "2",
                        "explanation": "The 'good' pairs are (3, 0) and (3, 1)."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Hard",
                "titleSlug": "count-array-pairs-divisible-by-k",
                "title": "Count Array Pairs Divisible by K",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "Let <code>f[v]</code> be the number of occurrences of <code>v/k</code> in nums2.",
            "For each value <code>v</code> in nums1, enumerating all its factors <code>d</code> (in <code>sqrt(v)</code> time) and sum up all the <code>f[d]</code> to get the final answer.",
            "It is also possible to improve the complexity from <code>v * sqrt(v)</code> to <code>v * log(v)</code> - How?"
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  long long numberOfPairs(vector<int>& nums1, vector<int>& nums2, int k) {\n    unordered_map<int, int> count;\n    long ans = 0;\n\n    for (const int num : nums2)\n      ++count[num * k];\n\n    for (const int num : nums1)\n      for (int divisor = 1; divisor <= sqrt(num); ++divisor)\n        if (num % divisor == 0) {\n          ans += count.count(divisor) ? count[divisor] : 0;\n          if (num / divisor != divisor)\n            ans += count.count(num / divisor) ? count[num / divisor] : 0;\n        }\n\n    return ans;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public long numberOfPairs(int[] nums1, int[] nums2, int k) {\n    HashMap<Integer, Integer> count = new HashMap<>();\n    long ans = 0;\n\n    for (final int num : nums2)\n      count.merge(num * k, 1, Integer::sum);\n\n    for (final int num : nums1)\n      for (int divisor = 1; divisor <= (int) Math.sqrt(num); ++divisor)\n        if (num % divisor == 0) {\n          ans += count.getOrDefault(divisor, 0);\n          if (num / divisor != divisor)\n            ans += count.getOrDefault(num / divisor, 0);\n        }\n\n    return ans;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def numberOfPairs(self, nums1: List[int], nums2: List[int], k: int) -> int:\n    count = collections.Counter(num * k for num in nums2)\n    ans = 0\n\n    for num in nums1:\n      for divisor in range(1, int(num ** 0.5) + 1):\n        if num % divisor == 0:\n          ans += count[divisor]\n          if num // divisor != divisor:\n            ans += count[num // divisor]\n\n    return ans\n",
                "lang_text": "py"
            }
        }
    }
}