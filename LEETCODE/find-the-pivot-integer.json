{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2485",
            "title": "Find the Pivot Integer",
            "titleSlug": "find-the-pivot-integer",
            "content": "<p>Given a positive integer <code>n</code>, find the <strong>pivot integer</strong> <code>x</code> such that:</p>\n\n<ul>\n\t<li>The sum of all elements between <code>1</code> and <code>x</code> inclusively equals the sum of all elements between <code>x</code> and <code>n</code> inclusively.</li>\n</ul>\n\n<p>Return <em>the pivot integer </em><code>x</code>. If no such integer exists, return <code>-1</code>. It is guaranteed that there will be at most one pivot index for the given input.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 8\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> 6 is the pivot integer since: 1 + 2 + 3 + 4 + 5 + 6 = 6 + 7 + 8 = 21.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 1\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> 1 is the pivot integer since: 1 = 1.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 4\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> It can be proved that no such integer exist.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 1000</code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 602,
            "dislikes": 11,
            "similarQuestions": "[{\"title\": \"Bulb Switcher\", \"titleSlug\": \"bulb-switcher\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "stats": "{\"totalAccepted\": \"54.3K\", \"totalSubmission\": \"67.9K\", \"totalAcceptedRaw\": 54286, \"totalSubmissionRaw\": 67946, \"acRate\": \"79.9%\"}",
            "hints": [
                "Can you use brute force to check every number from 1 to n if any of them is the pivot integer?",
                "If you know the sum of [1: pivot], how can you efficiently calculate the sum of the other parts?"
            ],
            "rephrased": {
                "body": "Given a positive integer `n`, find the pivot integer `x` such that the sum of all integers from 1 to `x` (inclusive) is equal to the sum of all integers from `x` to `n` (inclusive).",
                "constraints": [
                    "1 <= n <= 1000"
                ],
                "testcases": [
                    {
                        "input": "8",
                        "output": "6",
                        "explanation": "The pivot integer is 6 because the sum of numbers from 1 to 6 (1 + 2 + 3 + 4 + 5 + 6 = 21) is equal to the sum of numbers from 6 to 8 (6 + 7 + 8 = 21)."
                    },
                    {
                        "input": "1",
                        "output": "1",
                        "explanation": "The pivot integer is 1 because the sum from 1 to 1 (1) is equal to the sum from 1 to 1 (1)."
                    },
                    {
                        "input": "4",
                        "output": "-1",
                        "explanation": "No such pivot integer exists for n = 4."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "bulb-switcher",
                "title": "Bulb Switcher",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "Can you use brute force to check every number from 1 to n if any of them is the pivot integer?",
            "If you know the sum of [1: pivot], how can you efficiently calculate the sum of the other parts?"
        ],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int pivotInteger(int n) {\n    // 1 + 2 + ... + x = x + ... + n\n    // (1 + x) * x / 2 = (x + n) * (n - x + 1) / 2\n    //         x + x^2 = nx - x^2 + x + n^2 - nx + n\n    //         2 * x^2 = n^2 + n\n    //               x = sqrt((n^2 + n) / 2)\n    const int y = (n * n + n) / 2;\n    const int x = sqrt(y);\n    return x * x == y ? x : -1;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int pivotInteger(int n) {\n    // 1 + 2 + ... + x = x + ... + n\n    // (1 + x) * x / 2 = (x + n) * (n - x + 1) / 2\n    //         x + x^2 = nx - x^2 + x + n^2 - nx + n\n    //         2 * x^2 = n^2 + n\n    //               x = sqrt((n^2 + n) / 2)\n    final int y = (n * n + n) / 2;\n    final int x = (int) Math.sqrt(y);\n    return x * x == y ? x : -1;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def pivotInteger(self, n: int) -> int:\n    # 1 + 2 + ... + x = x + ... + n\n    # (1 + x) * x // 2 = (x + n) * (n - x + 1) // 2\n    #         x + x^2 = nx - x^2 + x + n^2 - nx + n\n    #         2 * x^2 = n^2 + n\n    #               x = sqrt((n^2 + n) // 2)\n    y = (n * n + n) // 2\n    x = int(math.sqrt(y))\n    return x if x * x == y else -1\n",
                "lang_text": "py"
            }
        }
    }
}