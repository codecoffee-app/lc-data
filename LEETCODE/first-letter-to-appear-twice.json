{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2351",
            "title": "First Letter to Appear Twice",
            "titleSlug": "first-letter-to-appear-twice",
            "content": "<p>Given a string <code>s</code> consisting of lowercase English letters, return <em>the first letter to appear <strong>twice</strong></em>.</p>\n\n<p><strong>Note</strong>:</p>\n\n<ul>\n\t<li>A letter <code>a</code> appears twice before another letter <code>b</code> if the <strong>second</strong> occurrence of <code>a</code> is before the <strong>second</strong> occurrence of <code>b</code>.</li>\n\t<li><code>s</code> will contain at least one letter that appears twice.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;abccbaacz&quot;\n<strong>Output:</strong> &quot;c&quot;\n<strong>Explanation:</strong>\nThe letter &#39;a&#39; appears on the indexes 0, 5 and 6.\nThe letter &#39;b&#39; appears on the indexes 1 and 4.\nThe letter &#39;c&#39; appears on the indexes 2, 3 and 7.\nThe letter &#39;z&#39; appears on the index 8.\nThe letter &#39;c&#39; is the first letter to appear twice, because out of all the letters the index of its second occurrence is the smallest.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;abcdd&quot;\n<strong>Output:</strong> &quot;d&quot;\n<strong>Explanation:</strong>\nThe only letter that appears twice is &#39;d&#39; so we return &#39;d&#39;.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= s.length &lt;= 100</code></li>\n\t<li><code>s</code> consists of lowercase English letters.</li>\n\t<li><code>s</code> has at least one repeated letter.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 948,
            "dislikes": 54,
            "similarQuestions": "[{\"title\": \"Two Sum\", \"titleSlug\": \"two-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"First Unique Character in a String\", \"titleSlug\": \"first-unique-character-in-a-string\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "stats": "{\"totalAccepted\": \"95.8K\", \"totalSubmission\": \"130.4K\", \"totalAcceptedRaw\": 95836, \"totalSubmissionRaw\": 130450, \"acRate\": \"73.5%\"}",
            "hints": [
                "Iterate through the string from left to right. Keep track of the elements you have already seen in a set.",
                "If the current element is already in the set, return that element."
            ],
            "rephrased": {
                "body": "Given a string `s` consisting of lowercase English letters, find the first letter that appears twice in the string. A letter is considered to appear twice before another if its second occurrence has a smaller index than the second occurrence of the other letter. It's guaranteed that the input string contains at least one letter that appears twice.",
                "constraints": [
                    "2 <= s.length <= 100",
                    "s consists of lowercase English letters.",
                    "s has at least one repeated letter."
                ],
                "testcases": [
                    {
                        "input": "abccbaacz",
                        "output": "c",
                        "explanation": "The letter 'c' is the first letter to appear twice.  'a' appears at indices 0, 5, and 6. 'b' appears at indices 1 and 4. 'c' appears at indices 2, 3, and 7. 'z' appears at index 8. The second occurrence of 'c' (index 3) is the earliest among all letters with duplicate occurrences."
                    },
                    {
                        "input": "abcdd",
                        "output": "d",
                        "explanation": "The only letter that appears twice is 'd', so we return 'd'."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Easy",
                "titleSlug": "two-sum",
                "title": "Two Sum",
                "isPaidOnly": false
            },
            {
                "difficulty": "Easy",
                "titleSlug": "first-unique-character-in-a-string",
                "title": "First Unique Character in a String",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "Iterate through the string from left to right. Keep track of the elements you have already seen in a set.",
            "If the current element is already in the set, return that element."
        ],
        "relatedTopics": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  char repeatedCharacter(string s) {\n    vector<bool> seen(26);\n\n    for (const char c : s) {\n      if (seen[c - 'a'])\n        return c;\n      seen[c - 'a'] = true;\n    }\n\n    throw;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public char repeatedCharacter(String s) {\n    boolean[] seen = new boolean[26];\n\n    for (final char c : s.toCharArray()) {\n      if (seen[c - 'a'])\n        return c;\n      seen[c - 'a'] = true;\n    }\n\n    throw new IllegalArgumentException();\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def repeatedCharacter(self, s: str) -> str:\n    seen = [False] * 26\n\n    for c in s:\n      if seen[ord(c) - ord('a')]:\n        return c\n      seen[ord(c) - ord('a')] = True\n",
                "lang_text": "py"
            }
        }
    }
}