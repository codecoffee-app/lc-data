{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2629",
            "title": "Function Composition",
            "titleSlug": "function-composition",
            "content": "<p>Given an array of functions&nbsp;<code>[f<span style=\"font-size: 10.8333px;\">1</span>, f<sub>2</sub>, f<sub>3</sub>,&nbsp;..., f<sub>n</sub>]</code>, return&nbsp;a new function&nbsp;<code>fn</code>&nbsp;that is the <strong>function&nbsp;composition</strong> of the array of functions.</p>\n\n<p>The&nbsp;<strong>function&nbsp;composition</strong>&nbsp;of&nbsp;<code>[f(x), g(x), h(x)]</code>&nbsp;is&nbsp;<code>fn(x) = f(g(h(x)))</code>.</p>\n\n<p>The&nbsp;<strong>function&nbsp;composition</strong>&nbsp;of an empty list of functions is the&nbsp;<strong>identity function</strong>&nbsp;<code>f(x) = x</code>.</p>\n\n<p>You may assume each&nbsp;function&nbsp;in the array accepts one integer as input&nbsp;and returns one integer as output.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> functions = [x =&gt; x + 1, x =&gt; x * x, x =&gt; 2 * x], x = 4\n<strong>Output:</strong> 65\n<strong>Explanation:</strong>\nEvaluating from right to left ...\nStarting with x = 4.\n2 * (4) = 8\n(8) * (8) = 64\n(64) + 1 = 65\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> functions = [x =&gt; 10 * x, x =&gt; 10 * x, x =&gt; 10 * x], x = 1\n<strong>Output:</strong> 1000\n<strong>Explanation:</strong>\nEvaluating from right to left ...\n10 * (1) = 10\n10 * (10) = 100\n10 * (100) = 1000\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> functions = [], x = 42\n<strong>Output:</strong> 42\n<strong>Explanation:</strong>\nThe composition of zero functions is the identity function</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code><font face=\"monospace\">-1000 &lt;= x &lt;= 1000</font></code></li>\n\t<li><code><font face=\"monospace\">0 &lt;= functions.length &lt;= 1000</font></code></li>\n\t<li>all functions accept and return a single integer</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 542,
            "dislikes": 37,
            "similarQuestions": "[{\"title\": \"Memoize\", \"titleSlug\": \"memoize\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Counter\", \"titleSlug\": \"counter\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
            "topicTags": [],
            "stats": "{\"totalAccepted\": \"76K\", \"totalSubmission\": \"89.2K\", \"totalAcceptedRaw\": 75973, \"totalSubmissionRaw\": 89210, \"acRate\": \"85.2%\"}",
            "hints": [
                "Start by returning a function that takes in a number and returns a number.",
                "Call each of the functions in the correct order. Each time passing the output of the previous function into the next function."
            ],
            "rephrased": {
                "body": "Given an array of functions `[f1, f2, f3, ..., fn]`, return a new function `fn` that represents the function composition of the array of functions.\n\nThe function composition of `[f(x), g(x), h(x)]` is `fn(x) = f(g(h(x)))`. In other words, the functions are applied from right to left.\n\nIf the list of functions is empty, the function composition is the identity function `f(x) = x`.",
                "constraints": [
                    "-1000 <= x <= 1000",
                    "0 <= functions.length <= 1000",
                    "All functions accept and return a single integer"
                ],
                "testcases": [
                    {
                        "input": "functions = [x => x + 1, x => x * x, x => 2 * x], x = 4",
                        "output": "65",
                        "explanation": "Starting with x = 4, the functions are applied in reverse order. First, 2 * 4 = 8.  Then, 8 * 8 = 64. Finally, 64 + 1 = 65."
                    },
                    {
                        "input": "functions = [x => 10 * x, x => 10 * x, x => 10 * x], x = 1",
                        "output": "1000",
                        "explanation": "Starting with x = 1, the functions are applied in reverse order. First, 10 * 1 = 10. Then, 10 * 10 = 100. Finally, 10 * 100 = 1000."
                    },
                    {
                        "input": "functions = [], x = 42",
                        "output": "42",
                        "explanation": "The composition of zero functions is the identity function, which simply returns the input value."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "memoize",
                "title": "Memoize",
                "isPaidOnly": false
            },
            {
                "difficulty": "Easy",
                "titleSlug": "counter",
                "title": "Counter",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "Start by returning a function that takes in a number and returns a number.",
            "Call each of the functions in the correct order. Each time passing the output of the previous function into the next function."
        ],
        "relatedTopics": []
    }
}