{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1642",
            "title": "Furthest Building You Can Reach",
            "titleSlug": "furthest-building-you-can-reach",
            "content": "<p>You are given an integer array <code>heights</code> representing the heights of buildings, some <code>bricks</code>, and some <code>ladders</code>.</p>\n\n<p>You start your journey from building <code>0</code> and move to the next building by possibly using bricks or ladders.</p>\n\n<p>While moving from building <code>i</code> to building <code>i+1</code> (<strong>0-indexed</strong>),</p>\n\n<ul>\n\t<li>If the current building&#39;s height is <strong>greater than or equal</strong> to the next building&#39;s height, you do <strong>not</strong> need a ladder or bricks.</li>\n\t<li>If the current building&#39;s height is <b>less than</b> the next building&#39;s height, you can either use <strong>one ladder</strong> or <code>(h[i+1] - h[i])</code> <strong>bricks</strong>.</li>\n</ul>\n\n<p><em>Return the furthest building index (0-indexed) you can reach if you use the given ladders and bricks optimally.</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/27/q4.gif\" style=\"width: 562px; height: 561px;\" />\n<pre>\n<strong>Input:</strong> heights = [4,2,7,6,9,14,12], bricks = 5, ladders = 1\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> Starting at building 0, you can follow these steps:\n- Go to building 1 without using ladders nor bricks since 4 &gt;= 2.\n- Go to building 2 using 5 bricks. You must use either bricks or ladders because 2 &lt; 7.\n- Go to building 3 without using ladders nor bricks since 7 &gt;= 6.\n- Go to building 4 using your only ladder. You must use either bricks or ladders because 6 &lt; 9.\nIt is impossible to go beyond building 4 because you do not have any more bricks or ladders.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> heights = [4,12,2,7,3,18,20,3,19], bricks = 10, ladders = 2\n<strong>Output:</strong> 7\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> heights = [14,3,19,3], bricks = 17, ladders = 0\n<strong>Output:</strong> 3\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= heights.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= heights[i] &lt;= 10<sup>6</sup></code></li>\n\t<li><code>0 &lt;= bricks &lt;= 10<sup>9</sup></code></li>\n\t<li><code>0 &lt;= ladders &lt;= heights.length</code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 4517,
            "dislikes": 95,
            "similarQuestions": "[{\"title\": \"Make the Prefix Sum Non-negative\", \"titleSlug\": \"make-the-prefix-sum-non-negative\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find Building Where Alice and Bob Can Meet\", \"titleSlug\": \"find-building-where-alice-and-bob-can-meet\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "stats": "{\"totalAccepted\": \"123.1K\", \"totalSubmission\": \"254.2K\", \"totalAcceptedRaw\": 123145, \"totalSubmissionRaw\": 254165, \"acRate\": \"48.5%\"}",
            "hints": [
                "Assume the problem is to check whether you can reach the last building or not.",
                "You'll have to do a set of jumps, and choose for each one whether to do it using a ladder or bricks. It's always optimal to use ladders in the largest jumps.",
                "Iterate on the buildings, maintaining the largest r jumps and the sum of the remaining ones so far, and stop whenever this sum exceeds b."
            ],
            "rephrased": {
                "body": "You are given an integer array `heights` representing the heights of buildings. You have a certain number of `bricks` and `ladders` to help you traverse these buildings.\n\nYou start at building 0 and want to reach the furthest building possible.\n\nWhen moving from building `i` to building `i+1`:\n\n*   If `heights[i]` is greater than or equal to `heights[i+1]`, you can move freely without using bricks or ladders.\n*   If `heights[i]` is less than `heights[i+1]`, you have two options:\n    *   Use one ladder.\n    *   Use `(heights[i+1] - heights[i])` bricks.\n\nDetermine the furthest building index (0-indexed) you can reach by optimally utilizing your ladders and bricks.",
                "constraints": [
                    "1 <= heights.length <= 10^5",
                    "1 <= heights[i] <= 10^6",
                    "0 <= bricks <= 10^9",
                    "0 <= ladders <= heights.length"
                ],
                "testcases": [
                    {
                        "input": "heights = [4,2,7,6,9,14,12], bricks = 5, ladders = 1",
                        "output": "4",
                        "explanation": "Start at building 0.\n- No resources needed for building 1 (4 >= 2).\n- Use 5 bricks for building 2 (2 < 7).\n- No resources needed for building 3 (7 >= 6).\n- Use the ladder for building 4 (6 < 9).\nCannot proceed further due to lack of resources."
                    },
                    {
                        "input": "heights = [4,12,2,7,3,18,20,3,19], bricks = 10, ladders = 2",
                        "output": "7",
                        "explanation": null
                    },
                    {
                        "input": "heights = [14,3,19,3], bricks = 17, ladders = 0",
                        "output": "3",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "make-the-prefix-sum-non-negative",
                "title": "Make the Prefix Sum Non-negative",
                "isPaidOnly": true
            },
            {
                "difficulty": "Hard",
                "titleSlug": "find-building-where-alice-and-bob-can-meet",
                "title": "Find Building Where Alice and Bob Can Meet",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "Assume the problem is to check whether you can reach the last building or not.",
            "You'll have to do a set of jumps, and choose for each one whether to do it using a ladder or bricks. It's always optimal to use ladders in the largest jumps.",
            "Iterate on the buildings, maintaining the largest r jumps and the sum of the remaining ones so far, and stop whenever this sum exceeds b."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ]
    }
}