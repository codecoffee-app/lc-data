{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1998",
            "title": "GCD Sort of an Array",
            "titleSlug": "gcd-sort-of-an-array",
            "content": "<p>You are given an integer array <code>nums</code>, and you can perform the following operation <strong>any</strong> number of times on <code>nums</code>:</p>\n\n<ul>\n\t<li>Swap the positions of two elements <code>nums[i]</code> and <code>nums[j]</code> if <code>gcd(nums[i], nums[j]) &gt; 1</code> where <code>gcd(nums[i], nums[j])</code> is the <strong>greatest common divisor</strong> of <code>nums[i]</code> and <code>nums[j]</code>.</li>\n</ul>\n\n<p>Return <code>true</code> <em>if it is possible to sort </em><code>nums</code><em> in <strong>non-decreasing</strong> order using the above swap method, or </em><code>false</code><em> otherwise.</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [7,21,3]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> We can sort [7,21,3] by performing the following operations:\n- Swap 7 and 21 because gcd(7,21) = 7. nums = [<u><strong>21</strong></u>,<u><strong>7</strong></u>,3]\n- Swap 21 and 3 because gcd(21,3) = 3. nums = [<u><strong>3</strong></u>,7,<u><strong>21</strong></u>]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [5,2,6,2]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> It is impossible to sort the array because 5 cannot be swapped with any other element.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [10,5,9,3,15]\n<strong>Output:</strong> true\nWe can sort [10,5,9,3,15] by performing the following operations:\n- Swap 10 and 15 because gcd(10,15) = 5. nums = [<u><strong>15</strong></u>,5,9,3,<u><strong>10</strong></u>]\n- Swap 15 and 3 because gcd(15,3) = 3. nums = [<u><strong>3</strong></u>,5,9,<u><strong>15</strong></u>,10]\n- Swap 10 and 15 because gcd(10,15) = 5. nums = [3,5,9,<u><strong>10</strong></u>,<u><strong>15</strong></u>]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 3 * 10<sup>4</sup></code></li>\n\t<li><code>2 &lt;= nums[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 468,
            "dislikes": 13,
            "similarQuestions": "[{\"title\": \"Rank Transform of a Matrix\", \"titleSlug\": \"rank-transform-of-a-matrix\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Union Find",
                    "slug": "union-find"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Number Theory",
                    "slug": "number-theory"
                }
            ],
            "stats": "{\"totalAccepted\": \"8.2K\", \"totalSubmission\": \"18.1K\", \"totalAcceptedRaw\": 8161, \"totalSubmissionRaw\": 18084, \"acRate\": \"45.1%\"}",
            "hints": [
                "Can we build a graph with all the prime numbers and the original array?",
                "We can use union-find to determine which indices are connected (i.e., which indices can be swapped)."
            ],
            "rephrased": {
                "body": "Given an integer array `nums`, you can perform the following operation any number of times:\n\nSwap the positions of two elements `nums[i]` and `nums[j]` if `gcd(nums[i], nums[j]) > 1`, where `gcd(nums[i], nums[j])` is the greatest common divisor of `nums[i]` and `nums[j]`.\n\nDetermine if it is possible to sort `nums` in non-decreasing order using the above swap method.",
                "constraints": [
                    "1 <= nums.length <= 3 * 10^4",
                    "2 <= nums[i] <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "[7,21,3]",
                        "output": "true",
                        "explanation": "It is possible to sort the array as follows:\n1. Swap 7 and 21 (gcd(7,21) = 7), resulting in [21, 7, 3].\n2. Swap 21 and 3 (gcd(21,3) = 3), resulting in [3, 7, 21]."
                    },
                    {
                        "input": "[5,2,6,2]",
                        "output": "false",
                        "explanation": "It is impossible to sort the array because 5 cannot be swapped with any other element, preventing it from moving to its correct sorted position."
                    },
                    {
                        "input": "[10,5,9,3,15]",
                        "output": "true",
                        "explanation": "It is possible to sort the array as follows:\n1. Swap 10 and 15 (gcd(10,15) = 5), resulting in [15, 5, 9, 3, 10].\n2. Swap 15 and 3 (gcd(15,3) = 3), resulting in [3, 5, 9, 15, 10].\n3. Swap 10 and 15 (gcd(10,15) = 5), resulting in [3, 5, 9, 10, 15]."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Hard",
                "titleSlug": "rank-transform-of-a-matrix",
                "title": "Rank Transform of a Matrix",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "Can we build a graph with all the prime numbers and the original array?",
            "We can use union-find to determine which indices are connected (i.e., which indices can be swapped)."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Union Find",
                "slug": "union-find"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ]
    }
}