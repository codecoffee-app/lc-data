{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "461",
            "title": "Hamming Distance",
            "titleSlug": "hamming-distance",
            "content": "<p>The <a href=\"https://en.wikipedia.org/wiki/Hamming_distance\" target=\"_blank\">Hamming distance</a> between two integers is the number of positions at which the corresponding bits are different.</p>\n\n<p>Given two integers <code>x</code> and <code>y</code>, return <em>the <strong>Hamming distance</strong> between them</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> x = 1, y = 4\n<strong>Output:</strong> 2\n<strong>Explanation:</strong>\n1   (0 0 0 1)\n4   (0 1 0 0)\n       &uarr;   &uarr;\nThe above arrows point to positions where the corresponding bits are different.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> x = 3, y = 1\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;=&nbsp;x, y &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 3757,
            "dislikes": 216,
            "similarQuestions": "[{\"title\": \"Number of 1 Bits\", \"titleSlug\": \"number-of-1-bits\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Total Hamming Distance\", \"titleSlug\": \"total-hamming-distance\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "stats": "{\"totalAccepted\": \"553.3K\", \"totalSubmission\": \"735.5K\", \"totalAcceptedRaw\": 553335, \"totalSubmissionRaw\": 735484, \"acRate\": \"75.2%\"}",
            "hints": [],
            "rephrased": {
                "body": "Calculate the Hamming distance between two given integers. The Hamming distance is defined as the number of positions at which the corresponding bits are different.",
                "constraints": [
                    "0 <= x, y <= 2<sup>31</sup> - 1"
                ],
                "testcases": [
                    {
                        "input": "x = 1, y = 4",
                        "output": "2",
                        "explanation": "The binary representation of 1 is 0001 and the binary representation of 4 is 0100. They differ in two bit positions."
                    },
                    {
                        "input": "x = 3, y = 1",
                        "output": "1",
                        "explanation": "The binary representation of 3 is 0011 and the binary representation of 1 is 0001. They differ in one bit position."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Easy",
                "titleSlug": "number-of-1-bits",
                "title": "Number of 1 Bits",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "total-hamming-distance",
                "title": "Total Hamming Distance",
                "isPaidOnly": false
            }
        ],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int hammingDistance(int x, int y) {\n    int ans = 0;\n\n    while (x || y) {\n      ans += (x & 1) ^ (y & 1);\n      x >>= 1;\n      y >>= 1;\n    }\n\n    return ans;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int hammingDistance(int x, int y) {\n    int ans = 0;\n\n    while (x > 0 || y > 0) {\n      ans += (x & 1) ^ (y & 1);\n      x >>= 1;\n      y >>= 1;\n    }\n\n    return ans;\n  }\n}\n",
                "lang_text": "java"
            }
        }
    }
}