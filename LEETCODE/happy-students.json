{
    "failed": false,
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2860",
            "title": "Happy Students",
            "titleSlug": "happy-students",
            "content": "<p>You are given a <strong>0-indexed</strong> integer array <code>nums</code> of length <code>n</code> where <code>n</code> is the total number of students in the class. The class teacher tries to select a group of students so that all the students remain happy.</p>\n\n<p>The <code>i<sup>th</sup></code> student will become happy if one of these two conditions is met:</p>\n\n<ul>\n\t<li>The student is selected and the total number of selected students is<strong> strictly greater than</strong> <code>nums[i]</code>.</li>\n\t<li>The student is not selected and the total number of selected students is <strong>strictly</strong> <strong>less than</strong> <code>nums[i]</code>.</li>\n</ul>\n\n<p>Return <em>the number of ways to select a group of students so that everyone remains happy.</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,1]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> \nThe two possible ways are:\nThe class teacher selects no student.\nThe class teacher selects both students to form the group. \nIf the class teacher selects just one student to form a group then the both students will not be happy. Therefore, there are only two possible ways.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [6,0,3,3,6,7,2,7]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> \nThe three possible ways are:\nThe class teacher selects the student with index = 1 to form the group.\nThe class teacher selects the students with index = 1, 2, 3, 6 to form the group.\nThe class teacher selects all the students to form the group.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>0 &lt;= nums[i] &lt; nums.length</code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 162,
            "dislikes": 289,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Enumeration",
                    "slug": "enumeration"
                }
            ],
            "stats": "{\"totalAccepted\": \"21.3K\", \"totalSubmission\": \"41K\", \"totalAcceptedRaw\": 21321, \"totalSubmissionRaw\": 40960, \"acRate\": \"52.1%\"}",
            "hints": [
                "If a student with <code>nums[i] = x</code> is selected, all the students with <code>nums[j] <= x</code> must be selected.",
                "If a student with <code>nums[i] = x</code> is not selected, all the students with <code>nums[j] >= x</code> must not be selected.",
                "Sort values in <code>nums</code> and try all possible values for <code>x</code> from <code>0</code> to <code>n</code> separately."
            ],
            "rephrased": {
                "body": "Given a 0-indexed integer array `nums` of length `n`, representing the preferences of `n` students in a class, determine the number of ways to select a group of students such that all selected students are happy. A student is considered happy if either: (1) they are selected and the total number of selected students is strictly greater than their preference value (`nums[i]`), or (2) they are not selected and the total number of selected students is strictly less than their preference value (`nums[i]`). Return the number of possible happy groups.",
                "constraints": [
                    "1 <= nums.length <= 10^5",
                    "0 <= nums[i] < nums.length"
                ],
                "testcases": [
                    {
                        "input": "[1,1]",
                        "output": "2",
                        "explanation": "There are two valid ways to form a happy group:\n\n1.  Select no students. Both students are happy because the number of selected students (0) is less than their preference value (1).\n2.  Select both students. Both students are happy because the number of selected students (2) is greater than their preference value (1).\n\nSelecting only one student does not result in a happy group because neither student's happiness condition is met."
                    },
                    {
                        "input": "[6,0,3,3,6,7,2,7]",
                        "output": "3",
                        "explanation": "There are three valid ways to form a happy group:\n\n1. Select the student with index 1 (nums[1] = 0). The number of selected students (1) is greater than their preference (0) so they are happy. All other students are not selected, and since 1 is less than their preference, they are all happy.\n2. Select the students with indices 1, 2, 3, and 6 (nums[1]=0, nums[2]=3, nums[3]=3, nums[6]=2). The number of selected students is 4.\n    - Student 1 is happy because 4 > 0.\n    - Student 2 is happy because 4 > 3.\n    - Student 3 is happy because 4 > 3.\n    - Student 6 is happy because 4 > 2.\n    The unselected students are at indices 0, 4, 5, and 7 (nums[0]=6, nums[4]=6, nums[5]=7, nums[7]=7). They are happy since 4 < their preferences.\n3. Select all the students. The number of selected students is 8, which is greater than the preferences of all students, so all students are happy."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "If a student with <code>nums[i] = x</code> is selected, all the students with <code>nums[j] <= x</code> must be selected.",
            "If a student with <code>nums[i] = x</code> is not selected, all the students with <code>nums[j] >= x</code> must not be selected.",
            "Sort values in <code>nums</code> and try all possible values for <code>x</code> from <code>0</code> to <code>n</code> separately."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ]
    }
}