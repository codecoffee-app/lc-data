{
    "failed": false,
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "3271",
            "title": "Hash Divided String",
            "titleSlug": "hash-divided-string",
            "content": "<p>You are given a string <code>s</code> of length <code>n</code> and an integer <code>k</code>, where <code>n</code> is a <strong>multiple</strong> of <code>k</code>. Your task is to hash the string <code>s</code> into a new string called <code>result</code>, which has a length of <code>n / k</code>.</p>\n\n<p>First, divide <code>s</code> into <code>n / k</code> <strong><span data-keyword=\"substring-nonempty\">substrings</span></strong>, each with a length of <code>k</code>. Then, initialize <code>result</code> as an <strong>empty</strong> string.</p>\n\n<p>For each <strong>substring</strong> in order from the beginning:</p>\n\n<ul>\n\t<li>The <strong>hash value</strong> of a character is the index of that characte<!-- notionvc: 4b67483a-fa95-40b6-870d-2eacd9bc18d8 -->r in the <strong>English alphabet</strong> (e.g., <code>&#39;a&#39; &rarr;<!-- notionvc: d3f8e4c2-23cd-41ad-a14b-101dfe4c5aba --> 0</code>, <code>&#39;b&#39; &rarr;<!-- notionvc: d3f8e4c2-23cd-41ad-a14b-101dfe4c5aba --> 1</code>, ..., <code>&#39;z&#39; &rarr;<!-- notionvc: d3f8e4c2-23cd-41ad-a14b-101dfe4c5aba --> 25</code>).</li>\n\t<li>Calculate the <em>sum</em> of all the <strong>hash values</strong> of the characters in the substring.</li>\n\t<li>Find the remainder of this sum when divided by 26, which is called <code>hashedChar</code>.</li>\n\t<li>Identify the character in the English lowercase alphabet that corresponds to <code>hashedChar</code>.</li>\n\t<li>Append that character to the end of <code>result</code>.</li>\n</ul>\n\n<p>Return <code>result</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">s = &quot;abcd&quot;, k = 2</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">&quot;bf&quot;</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>First substring: <code>&quot;ab&quot;</code>, <code>0 + 1 = 1</code>, <code>1 % 26 = 1</code>, <code>result[0] = &#39;b&#39;</code>.</p>\n\n<p>Second substring: <code>&quot;cd&quot;</code>, <code>2 + 3 = 5</code>, <code>5 % 26 = 5</code>, <code>result[1] = &#39;f&#39;</code>.</p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">s = &quot;mxz&quot;, k = 3</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">&quot;i&quot;</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>The only substring: <code>&quot;mxz&quot;</code>, <code>12 + 23 + 25 = 60</code>, <code>60 % 26 = 8</code>, <code>result[0] = &#39;i&#39;</code>.</p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= k &lt;= 100</code></li>\n\t<li><code>k &lt;= s.length &lt;= 1000</code></li>\n\t<li><code>s.length</code> is divisible by <code>k</code>.</li>\n\t<li><code>s</code> consists only of lowercase English letters.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 66,
            "dislikes": 8,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "stats": "{\"totalAccepted\": \"34.3K\", \"totalSubmission\": \"40.6K\", \"totalAcceptedRaw\": 34306, \"totalSubmissionRaw\": 40579, \"acRate\": \"84.5%\"}",
            "hints": [
                "Try to find each substring.",
                "Use a for loop to find <code>hashedChar</code> of each substring.",
                "Find the answer using <code>hashedChar</code> of each substring."
            ],
            "rephrased": {
                "body": "Given a string `s` of length `n` and an integer `k`, where `n` is a multiple of `k`, create a new string called `result` of length `n / k`. Divide `s` into `n / k` substrings, each of length `k`. For each substring, calculate the sum of the hash values of its characters (where 'a' -> 0, 'b' -> 1, ..., 'z' -> 25).  Find the remainder of this sum when divided by 26. Convert this remainder into its corresponding lowercase English alphabet character and append it to `result`. Return `result`.",
                "constraints": [
                    "1 <= k <= 100",
                    "k <= s.length <= 1000",
                    "s.length is divisible by k",
                    "s consists only of lowercase English letters"
                ],
                "testcases": [
                    {
                        "input": "s = \"abcd\", k = 2",
                        "output": "\"bf\"",
                        "explanation": "First substring is \"ab\". Hash values are 0 and 1. Sum is 1. 1 % 26 = 1, which is 'b'. Second substring is \"cd\". Hash values are 2 and 3. Sum is 5. 5 % 26 = 5, which is 'f'. Result is \"bf\"."
                    },
                    {
                        "input": "s = \"mxz\", k = 3",
                        "output": "\"i\"",
                        "explanation": "The substring is \"mxz\". Hash values are 12, 23, and 25. Sum is 60. 60 % 26 = 8, which is 'i'. Result is \"i\"."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "Try to find each substring.",
            "Use a for loop to find <code>hashedChar</code> of each substring.",
            "Find the answer using <code>hashedChar</code> of each substring."
        ],
        "relatedTopics": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  string stringHash(string s, int k) {\n    string ans;\n\n    for (int i = 0; i < s.length(); i += k) {\n      int sumHash = 0;\n      for (int j = i; j < i + k; ++j)\n        sumHash += s[j] - 'a';\n      ans += 'a' + sumHash % 26;\n    }\n\n    return ans;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public String stringHash(String s, int k) {\n    StringBuilder sb = new StringBuilder();\n\n    for (int i = 0; i < s.length(); i += k) {\n      int sumHash = 0;\n      for (int j = i; j < i + k; ++j)\n        sumHash += s.charAt(j) - 'a';\n      sb.append((char) ('a' + sumHash % 26));\n    }\n\n    return sb.toString();\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def stringHash(self, s: str, k: int) -> str:\n    ans = []\n\n    for i in range(0, len(s), k):\n      sumHash = sum(string.ascii_lowercase.index(s[j])\n                    for j in range(i, i + k))\n      ans.append(string.ascii_lowercase[sumHash % 26])\n\n    return ''.join(ans)\n",
                "lang_text": "py"
            }
        }
    }
}