{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "57",
            "title": "Insert Interval",
            "titleSlug": "insert-interval",
            "content": "<p>You are given an array of non-overlapping intervals <code>intervals</code> where <code>intervals[i] = [start<sub>i</sub>, end<sub>i</sub>]</code> represent the start and the end of the <code>i<sup>th</sup></code> interval and <code>intervals</code> is sorted in ascending order by <code>start<sub>i</sub></code>. You are also given an interval <code>newInterval = [start, end]</code> that represents the start and end of another interval.</p>\n\n<p>Insert <code>newInterval</code> into <code>intervals</code> such that <code>intervals</code> is still sorted in ascending order by <code>start<sub>i</sub></code> and <code>intervals</code> still does not have any overlapping intervals (merge overlapping intervals if necessary).</p>\n\n<p>Return <code>intervals</code><em> after the insertion</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> intervals = [[1,3],[6,9]], newInterval = [2,5]\n<strong>Output:</strong> [[1,5],[6,9]]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> intervals = [[1,2],[3,5],[6,7],[8,10],[12,16]], newInterval = [4,8]\n<strong>Output:</strong> [[1,2],[3,10],[12,16]]\n<strong>Explanation:</strong> Because the new interval [4,8] overlaps with [3,5],[6,7],[8,10].\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= intervals.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>intervals[i].length == 2</code></li>\n\t<li><code>0 &lt;= start<sub>i</sub> &lt;= end<sub>i</sub> &lt;= 10<sup>5</sup></code></li>\n\t<li><code>intervals</code> is sorted by <code>start<sub>i</sub></code> in <strong>ascending</strong> order.</li>\n\t<li><code>newInterval.length == 2</code></li>\n\t<li><code>0 &lt;= start &lt;= end &lt;= 10<sup>5</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 9365,
            "dislikes": 689,
            "similarQuestions": "[{\"title\": \"Merge Intervals\", \"titleSlug\": \"merge-intervals\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Range Module\", \"titleSlug\": \"range-module\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Count Integers in Intervals\", \"titleSlug\": \"count-integers-in-intervals\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "stats": "{\"totalAccepted\": \"904.8K\", \"totalSubmission\": \"2.3M\", \"totalAcceptedRaw\": 904828, \"totalSubmissionRaw\": 2279067, \"acRate\": \"39.7%\"}",
            "hints": [],
            "rephrased": {
                "body": "Given a sorted array of non-overlapping intervals `intervals`, where each interval `intervals[i] = [start_i, end_i]` represents the start and end of the i-th interval, and a new interval `newInterval = [start, end]`, insert `newInterval` into `intervals`. The resulting `intervals` array should remain sorted in ascending order by `start_i` and should not contain any overlapping intervals. Merge overlapping intervals as needed. Return the `intervals` array after the insertion and merging process.",
                "constraints": [
                    "0 <= intervals.length <= 10^4",
                    "intervals[i].length == 2",
                    "0 <= start_i <= end_i <= 10^5",
                    "`intervals` is sorted by `start_i` in ascending order.",
                    "newInterval.length == 2",
                    "0 <= start <= end <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "intervals = [[1,3],[6,9]], newInterval = [2,5]",
                        "output": "[[1,5],[6,9]]",
                        "explanation": null
                    },
                    {
                        "input": "intervals = [[1,2],[3,5],[6,7],[8,10],[12,16]], newInterval = [4,8]",
                        "output": "[[1,2],[3,10],[12,16]]",
                        "explanation": "The new interval [4,8] overlaps with [3,5], [6,7], and [8,10]. These intervals are merged into a single interval [3,10]."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "merge-intervals",
                "title": "Merge Intervals",
                "isPaidOnly": false
            },
            {
                "difficulty": "Hard",
                "titleSlug": "range-module",
                "title": "Range Module",
                "isPaidOnly": false
            },
            {
                "difficulty": "Hard",
                "titleSlug": "count-integers-in-intervals",
                "title": "Count Integers in Intervals",
                "isPaidOnly": false
            }
        ],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            }
        ]
    }
}