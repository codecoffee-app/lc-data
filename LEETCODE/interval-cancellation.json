{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2725",
            "title": "Interval Cancellation",
            "titleSlug": "interval-cancellation",
            "content": "<p>Given a function <code>fn</code>, an array of arguments&nbsp;<code>args</code>, and&nbsp;an interval time <code>t</code>, return a cancel function <code>cancelFn</code>.</p>\n\n<p>The function <code>fn</code> should be called with <code>args</code> immediately and then called again every&nbsp;<code>t</code> milliseconds&nbsp;until&nbsp;<code>cancelFn</code>&nbsp;is called at <code>cancelTimeMs</code> ms.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> fn = (x) =&gt; x * 2, args = [4], t = 35\n<strong>Output:</strong> \n[\n   {&quot;time&quot;: 0, &quot;returned&quot;: 8},\n   {&quot;time&quot;: 35, &quot;returned&quot;: 8},\n   {&quot;time&quot;: 70, &quot;returned&quot;: 8},\n   {&quot;time&quot;: 105, &quot;returned&quot;: 8},\n   {&quot;time&quot;: 140, &quot;returned&quot;: 8},\n   {&quot;time&quot;: 175, &quot;returned&quot;: 8}\n]\n<strong>Explanation:</strong> \nconst cancelTimeMs = 190;\nconst cancelFn = cancellable((x) =&gt; x * 2, [4], 35);\nsetTimeout(cancelFn, cancelTimeMs);\n\nEvery 35ms, fn(4) is called. Until t=190ms, then it is cancelled.\n1st fn call is at 0ms. fn(4) returns 8.\n2nd fn call is at 35ms. fn(4) returns 8.\n3rd fn call is at 70ms. fn(4) returns 8.\n4th fn call is at&nbsp;105ms. fn(4) returns 8.\n5th fn call is at 140ms. fn(4) returns 8.\n6th fn call is at 175ms. fn(4) returns 8.\nCancelled at 190ms\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> fn = (x1, x2) =&gt; (x1 * x2), args = [2, 5], t = 30\n<strong>Output:</strong> \n[\n   {&quot;time&quot;: 0, &quot;returned&quot;: 10},\n   {&quot;time&quot;: 30, &quot;returned&quot;: 10},\n   {&quot;time&quot;: 60, &quot;returned&quot;: 10},\n   {&quot;time&quot;: 90, &quot;returned&quot;: 10},\n   {&quot;time&quot;: 120, &quot;returned&quot;: 10},\n   {&quot;time&quot;: 150, &quot;returned&quot;: 10}\n]\n<strong>Explanation:</strong> \nconst cancelTimeMs = 165; \nconst cancelFn = cancellable((x1, x2) =&gt; (x1 * x2), [2, 5], 30) \nsetTimeout(cancelFn, cancelTimeMs)\n\nEvery 30ms, fn(2, 5) is called. Until t=165ms, then it is cancelled.\n1st fn call is at 0ms&nbsp;\n2nd fn call is at 30ms&nbsp;\n3rd fn call is at 60ms&nbsp;\n4th fn call is at&nbsp;90ms&nbsp;\n5th fn call is at 120ms&nbsp;\n6th fn call is at 150ms\nCancelled at 165ms\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> fn = (x1, x2, x3) =&gt; (x1 + x2 + x3), args = [5, 1, 3], t = 50\n<strong>Output:</strong> \n[\n   {&quot;time&quot;: 0, &quot;returned&quot;: 9},\n   {&quot;time&quot;: 50, &quot;returned&quot;: 9},\n   {&quot;time&quot;: 100, &quot;returned&quot;: 9},\n   {&quot;time&quot;: 150, &quot;returned&quot;: 9}\n]\n<strong>Explanation:</strong> \nconst cancelTimeMs = 180;\nconst cancelFn = cancellable((x1, x2, x3) =&gt; (x1 + x2 + x3), [5, 1, 3], 50)\nsetTimeout(cancelFn, cancelTimeMs)\n\nEvery 50ms, fn(5, 1, 3) is called. Until t=180ms, then it is cancelled. \n1st fn call is at 0ms\n2nd fn call is at 50ms\n3rd fn call is at 100ms\n4th fn call is at&nbsp;150ms\nCancelled at 180ms\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>fn</code> is a function</li>\n\t<li><code>args</code> is a valid JSON array</li>\n\t<li><code>1 &lt;= args.length &lt;= 10</code></li>\n\t<li><code><font face=\"monospace\">30 &lt;= t &lt;= 100</font></code></li>\n\t<li><code><font face=\"monospace\">10 &lt;= </font>cancelTimeMs<font face=\"monospace\"> &lt;= 500</font></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 118,
            "dislikes": 71,
            "similarQuestions": "[]",
            "topicTags": [],
            "stats": "{\"totalAccepted\": \"18.3K\", \"totalSubmission\": \"24.6K\", \"totalAcceptedRaw\": 18266, \"totalSubmissionRaw\": 24564, \"acRate\": \"74.4%\"}",
            "hints": [],
            "rephrased": {
                "body": "Given a function `fn`, an array of arguments `args`, and an interval time `t` (in milliseconds), create a function `cancelFn` that, when called, stops the repeated execution of `fn`. The function `fn` should be initially called with `args` immediately, and subsequently called every `t` milliseconds until `cancelFn` is invoked.",
                "constraints": [
                    "fn is a function",
                    "args is a valid JSON array",
                    "1 <= args.length <= 10",
                    "30 <= t <= 100",
                    "10 <= cancelTimeMs <= 500"
                ],
                "testcases": [
                    {
                        "input": "fn = (x) => x * 2, args = [4], t = 35, cancelTimeMs = 190",
                        "output": "[{\"time\": 0, \"returned\": 8}, {\"time\": 35, \"returned\": 8}, {\"time\": 70, \"returned\": 8}, {\"time\": 105, \"returned\": 8}, {\"time\": 140, \"returned\": 8}, {\"time\": 175, \"returned\": 8}]",
                        "explanation": "The function `fn` (x => x * 2) is called with the argument 4 every 35ms. The results are recorded with their respective times. The cancellation occurs at 190ms, thus stopping the calls to `fn`."
                    },
                    {
                        "input": "fn = (x1, x2) => (x1 * x2), args = [2, 5], t = 30, cancelTimeMs = 165",
                        "output": "[{\"time\": 0, \"returned\": 10}, {\"time\": 30, \"returned\": 10}, {\"time\": 60, \"returned\": 10}, {\"time\": 90, \"returned\": 10}, {\"time\": 120, \"returned\": 10}, {\"time\": 150, \"returned\": 10}]",
                        "explanation": "The function `fn` ((x1, x2) => (x1 * x2)) is called with the arguments 2 and 5 every 30ms. The results are recorded with their respective times. The cancellation occurs at 165ms, thus stopping the calls to `fn`."
                    },
                    {
                        "input": "fn = (x1, x2, x3) => (x1 + x2 + x3), args = [5, 1, 3], t = 50, cancelTimeMs = 180",
                        "output": "[{\"time\": 0, \"returned\": 9}, {\"time\": 50, \"returned\": 9}, {\"time\": 100, \"returned\": 9}, {\"time\": 150, \"returned\": 9}]",
                        "explanation": "The function `fn` ((x1, x2, x3) => (x1 + x2 + x3)) is called with the arguments 5, 1, and 3 every 50ms. The results are recorded with their respective times. The cancellation occurs at 180ms, thus stopping the calls to `fn`."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [],
        "solutions": {}
    }
}