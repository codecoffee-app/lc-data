{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "875",
            "title": "Koko Eating Bananas",
            "titleSlug": "koko-eating-bananas",
            "content": "<p>Koko loves to eat bananas. There are <code>n</code> piles of bananas, the <code>i<sup>th</sup></code> pile has <code>piles[i]</code> bananas. The guards have gone and will come back in <code>h</code> hours.</p>\n\n<p>Koko can decide her bananas-per-hour eating speed of <code>k</code>. Each hour, she chooses some pile of bananas and eats <code>k</code> bananas from that pile. If the pile has less than <code>k</code> bananas, she eats all of them instead and will not eat any more bananas during this hour.</p>\n\n<p>Koko likes to eat slowly but still wants to finish eating all the bananas before the guards return.</p>\n\n<p>Return <em>the minimum integer</em> <code>k</code> <em>such that she can eat all the bananas within</em> <code>h</code> <em>hours</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> piles = [3,6,7,11], h = 8\n<strong>Output:</strong> 4\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> piles = [30,11,23,4,20], h = 5\n<strong>Output:</strong> 30\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> piles = [30,11,23,4,20], h = 6\n<strong>Output:</strong> 23\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= piles.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>piles.length &lt;= h &lt;= 10<sup>9</sup></code></li>\n\t<li><code>1 &lt;= piles[i] &lt;= 10<sup>9</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 9681,
            "dislikes": 497,
            "similarQuestions": "[{\"title\": \"Minimize Max Distance to Gas Station\", \"titleSlug\": \"minimize-max-distance-to-gas-station\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Maximum Candies Allocated to K Children\", \"titleSlug\": \"maximum-candies-allocated-to-k-children\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimized Maximum of Products Distributed to Any Store\", \"titleSlug\": \"minimized-maximum-of-products-distributed-to-any-store\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Frog Jump II\", \"titleSlug\": \"frog-jump-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Time to Repair Cars\", \"titleSlug\": \"minimum-time-to-repair-cars\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "stats": "{\"totalAccepted\": \"522.2K\", \"totalSubmission\": \"1.1M\", \"totalAcceptedRaw\": 522229, \"totalSubmissionRaw\": 1057752, \"acRate\": \"49.4%\"}",
            "hints": [],
            "rephrased": {
                "body": "Koko needs to eat all bananas from several piles before the guards return. There are `n` piles of bananas, with `piles[i]` bananas in the i-th pile. The guards will return in `h` hours. Koko can choose her eating speed `k` (bananas per hour). Each hour, she selects a pile and eats `k` bananas from it. If a pile has fewer than `k` bananas, she eats all of them and moves on. Find the minimum integer `k` such that Koko can eat all the bananas within `h` hours.",
                "constraints": [
                    "1 <= piles.length <= 10^4",
                    "piles.length <= h <= 10^9",
                    "1 <= piles[i] <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "piles = [3,6,7,11], h = 8",
                        "output": "4",
                        "explanation": "If Koko eats 4 bananas per hour, she can finish all piles within 8 hours: 3/4 + 6/4 + 7/4 + 11/4 = 1 + 2 + 2 + 3 = 8 (rounding up each division)."
                    },
                    {
                        "input": "piles = [30,11,23,4,20], h = 5",
                        "output": "30",
                        "explanation": "If Koko eats 30 bananas per hour, she can finish all piles within 5 hours. 30/30 + 11/30 + 23/30 + 4/30 + 20/30 = 1 + 1 + 1 + 1 + 1 = 5 (rounding up each division)"
                    },
                    {
                        "input": "piles = [30,11,23,4,20], h = 6",
                        "output": "23",
                        "explanation": "If Koko eats 23 bananas per hour, she can finish all piles within 6 hours. 30/23 + 11/23 + 23/23 + 4/23 + 20/23 = 2 + 1 + 1 + 1 + 1 = 6 (rounding up each division)."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Hard",
                "titleSlug": "minimize-max-distance-to-gas-station",
                "title": "Minimize Max Distance to Gas Station",
                "isPaidOnly": true
            },
            {
                "difficulty": "Medium",
                "titleSlug": "maximum-candies-allocated-to-k-children",
                "title": "Maximum Candies Allocated to K Children",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "minimized-maximum-of-products-distributed-to-any-store",
                "title": "Minimized Maximum of Products Distributed to Any Store",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "frog-jump-ii",
                "title": "Frog Jump II",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "minimum-time-to-repair-cars",
                "title": "Minimum Time to Repair Cars",
                "isPaidOnly": false
            }
        ],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ]
    }
}