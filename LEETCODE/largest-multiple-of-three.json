{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1363",
            "title": "Largest Multiple of Three",
            "titleSlug": "largest-multiple-of-three",
            "content": "<p>Given an array of digits <code>digits</code>, return <em>the largest multiple of <strong>three</strong> that can be formed by concatenating some of the given digits in <strong>any order</strong></em>. If there is no answer return an empty string.</p>\n\n<p>Since the answer may not fit in an integer data type, return the answer as a string. Note that the returning answer must not contain unnecessary leading zeros.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> digits = [8,1,9]\n<strong>Output:</strong> &quot;981&quot;\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> digits = [8,6,7,1,0]\n<strong>Output:</strong> &quot;8760&quot;\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> digits = [1]\n<strong>Output:</strong> &quot;&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= digits.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= digits[i] &lt;= 9</code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 579,
            "dislikes": 80,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "stats": "{\"totalAccepted\": \"19.1K\", \"totalSubmission\": \"58.1K\", \"totalAcceptedRaw\": 19051, \"totalSubmissionRaw\": 58138, \"acRate\": \"32.8%\"}",
            "hints": [
                "A number is a multiple of three if and only if its sum of digits is a multiple of three.",
                "Use dynamic programming.",
                "To find the maximum number, try to maximize the number of digits of the number.",
                "Sort the digits in descending order to find the maximum number."
            ],
            "rephrased": {
                "body": "Given an array of digits, find the largest multiple of three that can be formed by concatenating some of the digits in any order. The result should be returned as a string, without leading zeros. If no such multiple can be formed, return an empty string.",
                "constraints": [
                    "1 <= digits.length <= 10^4",
                    "0 <= digits[i] <= 9"
                ],
                "testcases": [
                    {
                        "input": "[8,1,9]",
                        "output": "981",
                        "explanation": "The largest multiple of three formed by concatenating the digits 8, 1, and 9 is 981."
                    },
                    {
                        "input": "[8,6,7,1,0]",
                        "output": "8760",
                        "explanation": "The largest multiple of three formed by concatenating the digits 8, 6, 7, 1, and 0 is 8760."
                    },
                    {
                        "input": "[1]",
                        "output": "",
                        "explanation": "The digit 1 is not a multiple of three, so an empty string is returned."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "A number is a multiple of three if and only if its sum of digits is a multiple of three.",
            "Use dynamic programming.",
            "To find the maximum number, try to maximize the number of digits of the number.",
            "Sort the digits in descending order to find the maximum number."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  string largestMultipleOfThree(vector<int>& digits) {\n    string ans;\n    vector<int> mod1{1, 4, 7, 2, 5, 8};\n    vector<int> mod2{2, 5, 8, 1, 4, 7};\n    vector<int> count(10);\n    int sum = accumulate(digits.begin(), digits.end(), 0);\n\n    for (const int digit : digits)\n      ++count[digit];\n\n    while (sum % 3 != 0)\n      for (int i : sum % 3 == 1 ? mod1 : mod2)\n        if (count[i]) {\n          --count[i];\n          sum -= i;\n          break;\n        }\n\n    for (int digit = 9; digit >= 0; --digit)\n      ans += string(count[digit], '0' + digit);\n\n    return ans.size() && ans[0] == '0' ? \"0\" : ans;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public String largestMultipleOfThree(int[] digits) {\n    StringBuilder ans = new StringBuilder();\n    int[] mod1 = new int[] {1, 4, 7, 2, 5, 8};\n    int[] mod2 = new int[] {2, 5, 8, 1, 4, 7};\n    int[] count = new int[10];\n    int sum = 0;\n\n    for (int digit : digits) {\n      ++count[digit];\n      sum += digit;\n    }\n\n    while (sum % 3 != 0)\n      for (int i : sum % 3 == 1 ? mod1 : mod2)\n        if (count[i] > 0) {\n          --count[i];\n          sum -= i;\n          break;\n        }\n\n    for (int digit = 9; digit >= 0; --digit)\n      ans.append(Character.toString('0' + digit).repeat(count[digit]));\n\n    return ans.length() > 0 && ans.charAt(0) == '0' ? \"0\" : ans.toString();\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def largestMultipleOfThree(self, digits: List[int]) -> str:\n    ans = ''\n    mod1 = [1, 4, 7, 2, 5, 8]\n    mod2 = [2, 5, 8, 1, 4, 7]\n    count = collections.Counter(digits)\n    summ = sum(digits)\n\n    while summ % 3 != 0:\n      for digit in (mod1 if summ % 3 == 1 else mod2):\n        if count[digit]:\n          count[digit] -= 1\n          summ -= digit\n          break\n\n    for digit in reversed(range(10)):\n      ans += str(digit) * count[digit]\n\n    return '0' if len(ans) and ans[0] == '0' else ans\n",
                "lang_text": "py"
            }
        }
    }
}