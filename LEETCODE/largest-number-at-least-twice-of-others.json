{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "747",
            "title": "Largest Number At Least Twice of Others",
            "titleSlug": "largest-number-at-least-twice-of-others",
            "content": "<p>You are given an integer array <code>nums</code> where the largest integer is <strong>unique</strong>.</p>\n\n<p>Determine whether the largest element in the array is <strong>at least twice</strong> as much as every other number in the array. If it is, return <em>the <strong>index</strong> of the largest element, or return </em><code>-1</code><em> otherwise</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,6,1,0]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> 6 is the largest integer.\nFor every other number in the array x, 6 is at least twice as big as x.\nThe index of value 6 is 1, so we return 1.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,4]\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> 4 is less than twice the value of 3, so we return -1.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= nums.length &lt;= 50</code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 100</code></li>\n\t<li>The largest element in <code>nums</code> is unique.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 1153,
            "dislikes": 880,
            "similarQuestions": "[{\"title\": \"Keep Multiplying Found Values by Two\", \"titleSlug\": \"keep-multiplying-found-values-by-two\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Largest Number After Digit Swaps by Parity\", \"titleSlug\": \"largest-number-after-digit-swaps-by-parity\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "stats": "{\"totalAccepted\": \"228.7K\", \"totalSubmission\": \"474.1K\", \"totalAcceptedRaw\": 228736, \"totalSubmissionRaw\": 474077, \"acRate\": \"48.2%\"}",
            "hints": [
                "Scan through the array to find the unique largest element `m`, keeping track of it's index `maxIndex`.\r\n\r\nScan through the array again.  If we find some `x != m` with `m < 2*x`, we should return `-1`.\r\n\r\nOtherwise, we should return `maxIndex`."
            ],
            "rephrased": {
                "body": "Given an integer array `nums` where the largest integer is unique, determine if the largest element is at least twice as large as every other number in the array. If it is, return the index of the largest element; otherwise, return -1.",
                "constraints": [
                    "2 <= nums.length <= 50",
                    "0 <= nums[i] <= 100",
                    "The largest element in `nums` is unique."
                ],
                "testcases": [
                    {
                        "input": "[3,6,1,0]",
                        "output": "1",
                        "explanation": "The largest element is 6.  Since 6 is at least twice as large as all other elements (3, 1, and 0), the index of 6 (which is 1) is returned."
                    },
                    {
                        "input": "[1,2,3,4]",
                        "output": "-1",
                        "explanation": "The largest element is 4. However, 4 is not at least twice as large as 3. Therefore, -1 is returned."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Easy",
                "titleSlug": "keep-multiplying-found-values-by-two",
                "title": "Keep Multiplying Found Values by Two",
                "isPaidOnly": false
            },
            {
                "difficulty": "Easy",
                "titleSlug": "largest-number-after-digit-swaps-by-parity",
                "title": "Largest Number After Digit Swaps by Parity",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "Scan through the array to find the unique largest element `m`, keeping track of it's index `maxIndex`.\r\n\r\nScan through the array again.  If we find some `x != m` with `m < 2*x`, we should return `-1`.\r\n\r\nOtherwise, we should return `maxIndex`."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int dominantIndex(vector<int>& nums) {\n    int ans;\n    int max = 0;\n    int secondMax = 0;\n\n    for (int i = 0; i < nums.size(); ++i)\n      if (nums[i] > max) {\n        secondMax = max;\n        max = nums[i];\n        ans = i;\n      } else if (nums[i] > secondMax) {\n        secondMax = nums[i];\n      }\n\n    return max >= 2 * secondMax ? ans : -1;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int dominantIndex(int[] nums) {\n    int ans = 0;\n    int max = 0;\n    int secondMax = 0;\n\n    for (int i = 0; i < nums.length; ++i)\n      if (nums[i] > max) {\n        secondMax = max;\n        max = nums[i];\n        ans = i;\n      } else if (nums[i] > secondMax) {\n        secondMax = nums[i];\n      }\n\n    return max >= 2 * secondMax ? ans : -1;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def dominantIndex(self, nums: List[int]) -> int:\n    max = 0\n    secondMax = 0\n\n    for i, num in enumerate(nums):\n      if num > max:\n        secondMax = max\n        max = num\n        ans = i\n      elif num > secondMax:\n        secondMax = num\n\n    return ans if max >= 2 * secondMax else -1\n",
                "lang_text": "py"
            }
        }
    }
}