{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "179",
            "title": "Largest Number",
            "titleSlug": "largest-number",
            "content": "<p>Given a list of non-negative integers <code>nums</code>, arrange them such that they form the largest number and return it.</p>\n\n<p>Since the result may be very large, so you need to return a string instead of an integer.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [10,2]\n<strong>Output:</strong> &quot;210&quot;\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,30,34,5,9]\n<strong>Output:</strong> &quot;9534330&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 100</code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 7744,
            "dislikes": 626,
            "similarQuestions": "[{\"title\": \"Smallest Value of the Rearranged Number\", \"titleSlug\": \"smallest-value-of-the-rearranged-number\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "stats": "{\"totalAccepted\": \"440.9K\", \"totalSubmission\": \"1.2M\", \"totalAcceptedRaw\": 440913, \"totalSubmissionRaw\": 1239423, \"acRate\": \"35.6%\"}",
            "hints": [],
            "rephrased": {
                "body": "Given a list of non-negative integers, arrange them to form the largest possible number. Return this largest number as a string, as the result may be very large.",
                "constraints": [
                    "1 <= nums.length <= 100",
                    "0 <= nums[i] <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "[10,2]",
                        "output": "\"210\"",
                        "explanation": null
                    },
                    {
                        "input": "[3,30,34,5,9]",
                        "output": "\"9534330\"",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "smallest-value-of-the-rearranged-number",
                "title": "Smallest Value of the Rearranged Number",
                "isPaidOnly": false
            }
        ],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  string largestNumber(vector<int>& nums) {\n    string ans;\n\n    sort(nums.begin(), nums.end(), [](int a, int b) {\n      return to_string(a) + to_string(b) > to_string(b) + to_string(a);\n    });\n\n    for (const int num : nums)\n      ans += to_string(num);\n\n    return ans[0] == '0' ? \"0\" : ans;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public String largestNumber(int[] nums) {\n    final String s = Arrays.stream(nums)\n                         .mapToObj(String::valueOf)\n                         .sorted((a, b) -> (b + a).compareTo(a + b))\n                         .collect(Collectors.joining(\"\"));\n    return s.startsWith(\"00\") ? \"0\" : s;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class LargerStrKey(str):\n  def __lt__(x: str, y: str) -> bool:\n    return x + y > y + x\n\n\nclass Solution:\n  def largestNumber(self, nums: List[int]) -> str:\n    return ''.join(sorted(map(str, nums), key=LargerStrKey)).lstrip('0') or '0'\n",
                "lang_text": "py"
            }
        }
    }
}