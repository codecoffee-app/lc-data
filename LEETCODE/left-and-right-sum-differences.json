{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2574",
            "title": "Left and Right Sum Differences",
            "titleSlug": "left-and-right-sum-differences",
            "content": "<p>Given a <strong>0-indexed</strong> integer array <code>nums</code>, find a <strong>0-indexed </strong>integer array <code>answer</code> where:</p>\n\n<ul>\n    <li><code>answer.length == nums.length</code>.</li>\n    <li><code>answer[i] = |leftSum[i] - rightSum[i]|</code>.</li>\n</ul>\n\n<p>Where:</p>\n\n<ul>\n    <li><code>leftSum[i]</code> is the sum of elements to the left of the index <code>i</code> in the array <code>nums</code>. If there is no such element, <code>leftSum[i] = 0</code>.</li>\n    <li><code>rightSum[i]</code> is the sum of elements to the right of the index <code>i</code> in the array <code>nums</code>. If there is no such element, <code>rightSum[i] = 0</code>.</li>\n</ul>\n\n<p>Return <em>the array</em> <code>answer</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [10,4,8,3]\n<strong>Output:</strong> [15,1,11,22]\n<strong>Explanation:</strong> The array leftSum is [0,10,14,22] and the array rightSum is [15,11,3,0].\nThe array answer is [|0 - 15|,|10 - 11|,|14 - 3|,|22 - 0|] = [15,1,11,22].\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1]\n<strong>Output:</strong> [0]\n<strong>Explanation:</strong> The array leftSum is [0] and the array rightSum is [0].\nThe array answer is [|0 - 0|] = [0].\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 918,
            "dislikes": 74,
            "similarQuestions": "[{\"title\": \"Find Pivot Index\", \"titleSlug\": \"find-pivot-index\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Find the Middle Index in Array\", \"titleSlug\": \"find-the-middle-index-in-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Find the Distinct Difference Array\", \"titleSlug\": \"find-the-distinct-difference-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "stats": "{\"totalAccepted\": \"101.5K\", \"totalSubmission\": \"118K\", \"totalAcceptedRaw\": 101458, \"totalSubmissionRaw\": 118041, \"acRate\": \"86.0%\"}",
            "hints": [
                "For each index i, maintain two variables leftSum and rightSum.",
                "Iterate on the range j: [0 \u2026 i - 1] and add nums[j] to the leftSum and similarly iterate on the range j: [i + 1 \u2026 nums.length - 1] and add nums[j] to the rightSum."
            ],
            "rephrased": {
                "body": "Given a 0-indexed integer array `nums`, create a 0-indexed integer array `answer` where `answer[i]` is the absolute difference between the sum of elements to the left of index `i` (leftSum[i]) and the sum of elements to the right of index `i` (rightSum[i]) in the array `nums`. If no elements exist to the left or right, the respective sum is 0. Return the `answer` array.",
                "constraints": [
                    "1 <= nums.length <= 1000",
                    "1 <= nums[i] <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "[10,4,8,3]",
                        "output": "[15,1,11,22]",
                        "explanation": "leftSum is [0, 10, 14, 22] and rightSum is [15, 11, 3, 0]. answer is [|0 - 15|, |10 - 11|, |14 - 3|, |22 - 0|] = [15, 1, 11, 22]."
                    },
                    {
                        "input": "[1]",
                        "output": "[0]",
                        "explanation": "leftSum is [0] and rightSum is [0]. answer is [|0 - 0|] = [0]."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Easy",
                "titleSlug": "find-pivot-index",
                "title": "Find Pivot Index",
                "isPaidOnly": false
            },
            {
                "difficulty": "Easy",
                "titleSlug": "find-the-middle-index-in-array",
                "title": "Find the Middle Index in Array",
                "isPaidOnly": false
            },
            {
                "difficulty": "Easy",
                "titleSlug": "find-the-distinct-difference-array",
                "title": "Find the Distinct Difference Array",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "For each index i, maintain two variables leftSum and rightSum.",
            "Iterate on the range j: [0 \u2026 i - 1] and add nums[j] to the leftSum and similarly iterate on the range j: [i + 1 \u2026 nums.length - 1] and add nums[j] to the rightSum."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  vector<int> leftRigthDifference(vector<int>& nums) {\n    const int n = nums.size();\n    vector<int> ans(n);\n    vector<int> leftSum(n);\n    vector<int> rightSum(n);\n    int prefix = 0;\n    int suffix = 0;\n\n    for (int i = 0; i < n; ++i) {\n      if (i > 0)\n        prefix += nums[i - 1];\n      leftSum[i] = prefix;\n    }\n\n    for (int i = n - 1; i >= 0; --i) {\n      if (i + 1 < n)\n        suffix += nums[i + 1];\n      rightSum[i] = suffix;\n    }\n\n    for (int i = 0; i < n; ++i)\n      ans[i] = abs(leftSum[i] - rightSum[i]);\n\n    return ans;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int[] leftRigthDifference(int[] nums) {\n    final int n = nums.length;\n    int[] ans = new int[n];\n    int[] leftSum = new int[n];\n    int[] rightSum = new int[n];\n    int prefix = 0;\n    int suffix = 0;\n\n    for (int i = 0; i < n; ++i) {\n      if (i > 0)\n        prefix += nums[i - 1];\n      leftSum[i] = prefix;\n    }\n\n    for (int i = n - 1; i >= 0; --i) {\n      if (i + 1 < n)\n        suffix += nums[i + 1];\n      rightSum[i] = suffix;\n    }\n\n    for (int i = 0; i < n; ++i)\n      ans[i] = Math.abs(leftSum[i] - rightSum[i]);\n\n    return ans;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def leftRigthDifference(self, nums: List[int]) -> List[int]:\n    n = len(nums)\n    leftSum = [0] * n\n    rightSum = [0] * n\n    prefix = 0\n    suffix = 0\n\n    for i in range(n):\n      if i > 0:\n        prefix += nums[i - 1]\n      leftSum[i] = prefix\n\n    for i in range(n - 1, -1, -1):\n      if i + 1 < n:\n        suffix += nums[i + 1]\n      rightSum[i] = suffix\n\n    return [abs(l - r) for l, r in zip(leftSum, rightSum)]\n",
                "lang_text": "py"
            }
        }
    }
}