{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1625",
            "title": "Lexicographically Smallest String After Applying Operations",
            "titleSlug": "lexicographically-smallest-string-after-applying-operations",
            "content": "<p>You are given a string <code>s</code> of <strong>even length</strong> consisting of digits from <code>0</code> to <code>9</code>, and two integers <code>a</code> and <code>b</code>.</p>\n\n<p>You can apply either of the following two operations any number of times and in any order on <code>s</code>:</p>\n\n<ul>\n\t<li>Add <code>a</code> to all odd indices of <code>s</code> <strong>(0-indexed)</strong>. Digits post <code>9</code> are cycled back to <code>0</code>. For example, if <code>s = &quot;3456&quot;</code> and <code>a = 5</code>, <code>s</code> becomes <code>&quot;3951&quot;</code>.</li>\n\t<li>Rotate <code>s</code> to the right by <code>b</code> positions. For example, if <code>s = &quot;3456&quot;</code> and <code>b = 1</code>, <code>s</code> becomes <code>&quot;6345&quot;</code>.</li>\n</ul>\n\n<p>Return <em>the <strong>lexicographically smallest</strong> string you can obtain by applying the above operations any number of times on</em> <code>s</code>.</p>\n\n<p>A string <code>a</code> is lexicographically smaller than a string <code>b</code> (of the same length) if in the first position where <code>a</code> and <code>b</code> differ, string <code>a</code> has a letter that appears earlier in the alphabet than the corresponding letter in <code>b</code>. For example, <code>&quot;0158&quot;</code> is lexicographically smaller than <code>&quot;0190&quot;</code> because the first position they differ is at the third letter, and <code>&#39;5&#39;</code> comes before <code>&#39;9&#39;</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;5525&quot;, a = 9, b = 2\n<strong>Output:</strong> &quot;2050&quot;\n<strong>Explanation:</strong> We can apply the following operations:\nStart:  &quot;5525&quot;\nRotate: &quot;2555&quot;\nAdd:    &quot;2454&quot;\nAdd:    &quot;2353&quot;\nRotate: &quot;5323&quot;\nAdd:    &quot;5222&quot;\nAdd:    &quot;5121&quot;\nRotate: &quot;2151&quot;\nAdd:    &quot;2050&quot;\u200b\u200b\u200b\u200b\u200b\nThere is no way to obtain a string that is lexicographically smaller than &quot;2050&quot;.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;74&quot;, a = 5, b = 1\n<strong>Output:</strong> &quot;24&quot;\n<strong>Explanation:</strong> We can apply the following operations:\nStart:  &quot;74&quot;\nRotate: &quot;47&quot;\n\u200b\u200b\u200b\u200b\u200b\u200b\u200bAdd:    &quot;42&quot;\n\u200b\u200b\u200b\u200b\u200b\u200b\u200bRotate: &quot;24&quot;\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\u200b\nThere is no way to obtain a string that is lexicographically smaller than &quot;24&quot;.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;0011&quot;, a = 4, b = 2\n<strong>Output:</strong> &quot;0011&quot;\n<strong>Explanation:</strong> There are no sequence of operations that will give us a lexicographically smaller string than &quot;0011&quot;.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= s.length &lt;= 100</code></li>\n\t<li><code>s.length</code> is even.</li>\n\t<li><code>s</code> consists of digits from <code>0</code> to <code>9</code> only.</li>\n\t<li><code>1 &lt;= a &lt;= 9</code></li>\n\t<li><code>1 &lt;= b &lt;= s.length - 1</code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 332,
            "dislikes": 267,
            "similarQuestions": "[{\"title\": \"Lexicographically Smallest String After Substring Operation\", \"titleSlug\": \"lexicographically-smallest-string-after-substring-operation\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "stats": "{\"totalAccepted\": \"13.9K\", \"totalSubmission\": \"21.3K\", \"totalAcceptedRaw\": 13918, \"totalSubmissionRaw\": 21294, \"acRate\": \"65.4%\"}",
            "hints": [
                "Since the length of s is even, the total number of possible sequences is at most 10 * 10 * s.length.",
                "You can generate all possible sequences and take their minimum.",
                "Keep track of already generated sequences so they are not processed again."
            ],
            "rephrased": {
                "body": "Given a string `s` of even length consisting of digits from '0' to '9', and two integers `a` and `b`. You can apply two operations any number of times in any order:\n\n1.  Add `a` to all odd-indexed digits of `s` (0-indexed). Digits wrap around from 9 to 0 (e.g., '3456' with `a = 5` becomes '3951').\n2.  Rotate `s` to the right by `b` positions (e.g., '3456' with `b = 1` becomes '6345').\n\nReturn the lexicographically smallest string obtainable by applying these operations.",
                "constraints": [
                    "2 <= s.length <= 100",
                    "s.length is even.",
                    "s consists of digits from 0 to 9 only.",
                    "1 <= a <= 9",
                    "1 <= b <= s.length - 1"
                ],
                "testcases": [
                    {
                        "input": "s = \"5525\", a = 9, b = 2",
                        "output": "\"2050\"",
                        "explanation": "By applying a series of additions and rotations, the string \"5525\" can be transformed into \"2050\", which is the lexicographically smallest string achievable through these operations."
                    },
                    {
                        "input": "s = \"74\", a = 5, b = 1",
                        "output": "\"24\"",
                        "explanation": "Through rotations and additions, \"74\" can be transformed into \"24\", the lexicographically smallest result."
                    },
                    {
                        "input": "s = \"0011\", a = 4, b = 2",
                        "output": "\"0011\"",
                        "explanation": "No sequence of operations can produce a string lexicographically smaller than the initial \"0011\"."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "lexicographically-smallest-string-after-substring-operation",
                "title": "Lexicographically Smallest String After Substring Operation",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "Since the length of s is even, the total number of possible sequences is at most 10 * 10 * s.length.",
            "You can generate all possible sequences and take their minimum.",
            "Keep track of already generated sequences so they are not processed again."
        ],
        "relatedTopics": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            }
        ]
    }
}