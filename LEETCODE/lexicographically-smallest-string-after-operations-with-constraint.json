{
    "failed": false,
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "3106",
            "title": "Lexicographically Smallest String After Operations With Constraint",
            "titleSlug": "lexicographically-smallest-string-after-operations-with-constraint",
            "content": "<p>You are given a string <code>s</code> and an integer <code>k</code>.</p>\n\n<p>Define a function <code>distance(s<sub>1</sub>, s<sub>2</sub>)</code> between two strings <code>s<sub>1</sub></code> and <code>s<sub>2</sub></code> of the same length <code>n</code> as:</p>\n\n<ul>\n\t<li>The<strong> sum</strong> of the <strong>minimum distance</strong> between <code>s<sub>1</sub>[i]</code> and <code>s<sub>2</sub>[i]</code> when the characters from <code>&#39;a&#39;</code> to <code>&#39;z&#39;</code> are placed in a <strong>cyclic</strong> order, for all <code>i</code> in the range <code>[0, n - 1]</code>.</li>\n</ul>\n\n<p>For example, <code>distance(&quot;ab&quot;, &quot;cd&quot;) == 4</code>, and <code>distance(&quot;a&quot;, &quot;z&quot;) == 1</code>.</p>\n\n<p>You can <strong>change</strong> any letter of <code>s</code> to <strong>any</strong> other lowercase English letter, <strong>any</strong> number of times.</p>\n\n<p>Return a string denoting the <strong><span data-keyword=\"lexicographically-smaller-string\">lexicographically smallest</span></strong> string <code>t</code> you can get after some changes, such that <code>distance(s, t) &lt;= k</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">s = &quot;zbbz&quot;, k = 3</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">&quot;aaaz&quot;</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>Change <code>s</code> to <code>&quot;aaaz&quot;</code>. The distance between <code>&quot;zbbz&quot;</code> and <code>&quot;aaaz&quot;</code> is equal to <code>k = 3</code>.</p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">s = &quot;xaxcd&quot;, k = 4</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">&quot;aawcd&quot;</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>The distance between &quot;xaxcd&quot; and &quot;aawcd&quot; is equal to k = 4.</p>\n</div>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">s = &quot;lol&quot;, k = 0</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">&quot;lol&quot;</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>It&#39;s impossible to change any character as <code>k = 0</code>.</p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 100</code></li>\n\t<li><code>0 &lt;= k &lt;= 2000</code></li>\n\t<li><code>s</code> consists only of lowercase English letters.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 139,
            "dislikes": 16,
            "similarQuestions": "[{\"title\": \"Lexicographically Smallest String After Substring Operation\", \"titleSlug\": \"lexicographically-smallest-string-after-substring-operation\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "stats": "{\"totalAccepted\": \"24K\", \"totalSubmission\": \"37.4K\", \"totalAcceptedRaw\": 23982, \"totalSubmissionRaw\": 37444, \"acRate\": \"64.0%\"}",
            "hints": [
                "The problem can be approached greedily.",
                "For each index in order from <code>0</code> to <code>n - 1</code>, we try all letters from <code>'a'</code> to <code>'z'</code>, selecting the first one as long as the current total distance accumulated is not larger than <code>k</code>."
            ],
            "rephrased": {
                "body": "Given a string `s` and an integer `k`, you can change any letter of `s` to any other lowercase English letter any number of times. The distance between two strings `s1` and `s2` of the same length `n` is defined as the sum of the minimum distances between `s1[i]` and `s2[i]` for all `i` in the range `[0, n - 1]`. The minimum distance between two characters is calculated assuming the characters 'a' to 'z' are arranged in a cyclic order (e.g., distance('a', 'z') == 1).  Return the lexicographically smallest string `t` that can be obtained after changes to `s`, such that `distance(s, t) <= k`.",
                "constraints": [
                    "1 <= s.length <= 100",
                    "0 <= k <= 2000",
                    "s consists only of lowercase English letters."
                ],
                "testcases": [
                    {
                        "input": "s = \"zbbz\", k = 3",
                        "output": "\"aaaz\"",
                        "explanation": "By changing 'zbbz' to 'aaaz', the distance between the original string and the modified string is 3, which is within the allowed limit k = 3. 'aaaz' is the lexicographically smallest string achievable under this constraint."
                    },
                    {
                        "input": "s = \"xaxcd\", k = 4",
                        "output": "\"aawcd\"",
                        "explanation": "Transforming 'xaxcd' into 'aawcd' results in a distance of 4, satisfying the condition k = 4. 'aawcd' is the smallest string we can achieve."
                    },
                    {
                        "input": "s = \"lol\", k = 0",
                        "output": "\"lol\"",
                        "explanation": "Since k = 0, no changes are permitted. Therefore, the original string 'lol' must be returned."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "lexicographically-smallest-string-after-substring-operation",
                "title": "Lexicographically Smallest String After Substring Operation",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "The problem can be approached greedily.",
            "For each index in order from <code>0</code> to <code>n - 1</code>, we try all letters from <code>'a'</code> to <code>'z'</code>, selecting the first one as long as the current total distance accumulated is not larger than <code>k</code>."
        ],
        "relatedTopics": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ]
    }
}