{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "925",
            "title": "Long Pressed Name",
            "titleSlug": "long-pressed-name",
            "content": "<p>Your friend is typing his <code>name</code> into a keyboard. Sometimes, when typing a character <code>c</code>, the key might get <em>long pressed</em>, and the character will be typed 1 or more times.</p>\n\n<p>You examine the <code>typed</code> characters of the keyboard. Return <code>True</code> if it is possible that it was your friends name, with some characters (possibly none) being long pressed.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> name = &quot;alex&quot;, typed = &quot;aaleex&quot;\n<strong>Output:</strong> true\n<strong>Explanation: </strong>&#39;a&#39; and &#39;e&#39; in &#39;alex&#39; were long pressed.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> name = &quot;saeed&quot;, typed = &quot;ssaaedd&quot;\n<strong>Output:</strong> false\n<strong>Explanation: </strong>&#39;e&#39; must have been pressed twice, but it was not in the typed output.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= name.length, typed.length &lt;= 1000</code></li>\n\t<li><code>name</code> and <code>typed</code> consist of only lowercase English letters.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 2363,
            "dislikes": 348,
            "similarQuestions": "[{\"title\": \"Maximum Matching of Players With Trainers\", \"titleSlug\": \"maximum-matching-of-players-with-trainers\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "stats": "{\"totalAccepted\": \"132K\", \"totalSubmission\": \"406.2K\", \"totalAcceptedRaw\": 132028, \"totalSubmissionRaw\": 406205, \"acRate\": \"32.5%\"}",
            "hints": [],
            "rephrased": {
                "body": "Given a string `name` representing your friend's name and a string `typed` representing the characters typed on a keyboard, determine if `typed` could be a result of `name` with some characters potentially long-pressed (repeated one or more times). Return `true` if it's possible, `false` otherwise.",
                "constraints": [
                    "1 <= name.length, typed.length <= 1000",
                    "name and typed consist of only lowercase English letters."
                ],
                "testcases": [
                    {
                        "input": "name = \"alex\", typed = \"aaleex\"",
                        "output": "true",
                        "explanation": "The characters 'a' and 'e' in 'alex' were potentially long-pressed, resulting in the 'typed' string."
                    },
                    {
                        "input": "name = \"saeed\", typed = \"ssaaedd\"",
                        "output": "false",
                        "explanation": "The character 'e' would need to have been pressed twice consecutively, but this pattern is not present in the 'typed' string."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "maximum-matching-of-players-with-trainers",
                "title": "Maximum Matching of Players With Trainers",
                "isPaidOnly": false
            }
        ],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  bool isLongPressedName(string name, string typed) {\n    int i = 0;\n\n    for (int j = 0; j < typed.length(); ++j)\n      if (i < name.length() && name[i] == typed[j])\n        ++i;\n      else if (j == 0 || typed[j] != typed[j - 1])\n        return false;\n\n    return i == name.length();\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public boolean isLongPressedName(String name, String typed) {\n    int i = 0;\n\n    for (int j = 0; j < typed.length(); ++j)\n      if (i < name.length() && name.charAt(i) == typed.charAt(j))\n        ++i;\n      else if (j == 0 || typed.charAt(j) != typed.charAt(j - 1))\n        return false;\n\n    return i == name.length();\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def isLongPressedName(self, name: str, typed: str) -> bool:\n    i = 0\n\n    for j, t in enumerate(typed):\n      if i < len(name) and name[i] == t:\n        i += 1\n      elif j == 0 or t != typed[j - 1]:\n        return False\n\n    return i == len(name)\n",
                "lang_text": "py"
            }
        }
    }
}