{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1027",
            "title": "Longest Arithmetic Subsequence",
            "titleSlug": "longest-arithmetic-subsequence",
            "content": "<p>Given an array <code>nums</code> of integers, return <em>the length of the longest arithmetic subsequence in</em> <code>nums</code>.</p>\n\n<p><strong>Note</strong> that:</p>\n\n<ul>\n\t<li>A <strong>subsequence</strong> is an array that can be derived from another array by deleting some or no elements without changing the order of the remaining elements.</li>\n\t<li>A sequence <code>seq</code> is arithmetic if <code>seq[i + 1] - seq[i]</code> are all the same value (for <code>0 &lt;= i &lt; seq.length - 1</code>).</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,6,9,12]\n<strong>Output:</strong> 4\n<strong>Explanation: </strong> The whole array is an arithmetic sequence with steps of length = 3.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [9,4,7,2,10]\n<strong>Output:</strong> 3\n<strong>Explanation: </strong> The longest arithmetic subsequence is [4,7,10].\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [20,1,15,3,10,5,8]\n<strong>Output:</strong> 4\n<strong>Explanation: </strong> The longest arithmetic subsequence is [20,15,10,5].\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= nums.length &lt;= 1000</code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 500</code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 4535,
            "dislikes": 203,
            "similarQuestions": "[{\"title\": \"Destroy Sequential Targets\", \"titleSlug\": \"destroy-sequential-targets\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "stats": "{\"totalAccepted\": \"165.4K\", \"totalSubmission\": \"337.5K\", \"totalAcceptedRaw\": 165380, \"totalSubmissionRaw\": 337469, \"acRate\": \"49.0%\"}",
            "hints": [],
            "rephrased": {
                "body": "Given an array of integers, find the length of the longest arithmetic subsequence. A subsequence is formed by deleting elements from the original array without changing the order of the remaining elements. An arithmetic sequence has a constant difference between consecutive terms.",
                "constraints": [
                    "2 <= nums.length <= 1000",
                    "0 <= nums[i] <= 500"
                ],
                "testcases": [
                    {
                        "input": "[3,6,9,12]",
                        "output": "4",
                        "explanation": "The entire input array forms an arithmetic sequence with a common difference of 3."
                    },
                    {
                        "input": "[9,4,7,2,10]",
                        "output": "3",
                        "explanation": "The longest arithmetic subsequence is [4, 7, 10], having a common difference of 3."
                    },
                    {
                        "input": "[20,1,15,3,10,5,8]",
                        "output": "4",
                        "explanation": "The longest arithmetic subsequence is [20, 15, 10, 5], having a common difference of -5."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "destroy-sequential-targets",
                "title": "Destroy Sequential Targets",
                "isPaidOnly": false
            }
        ],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int longestArithSeqLength(vector<int>& nums) {\n    const int n = nums.size();\n    int ans = 0;\n    // dp[i][k] := length of the longest arithmetic subseq ofnums\n    // nums[0..i] with k = diff + 500\n    vector<vector<int>> dp(n, vector<int>(1001));\n\n    for (int i = 0; i < n; ++i)\n      for (int j = 0; j < i; ++j) {\n        const int k = nums[i] - nums[j] + 500;\n        dp[i][k] = max(2, dp[j][k] + 1);\n        ans = max(ans, dp[i][k]);\n      }\n\n    return ans;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int longestArithSeqLength(int[] nums) {\n    final int n = nums.length;\n    int ans = 0;\n    // dp[i][k] := length of the longest arithmetic subseq ofnums\n    // nums[0..i] with k = diff + 500\n    int[][] dp = new int[n][1001];\n\n    for (int i = 0; i < n; ++i)\n      for (int j = 0; j < i; ++j) {\n        final int k = nums[i] - nums[j] + 500;\n        dp[i][k] = Math.max(2, dp[j][k] + 1);\n        ans = Math.max(ans, dp[i][k]);\n      }\n\n    return ans;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def longestArithSeqLength(self, nums: List[int]) -> int:\n    n = len(nums)\n    ans = 0\n    # dp[i][k] := length of the longest arithmetic subseq ofnums\n    # nums[0..i] with k = diff + 500\n    dp = [[0] * 1001 for _ in range(n)]\n\n    for i in range(n):\n      for j in range(i):\n        k = nums[i] - nums[j] + 500\n        dp[i][k] = max(2, dp[j][k] + 1)\n        ans = max(ans, dp[i][k])\n\n    return ans\n",
                "lang_text": "py"
            }
        }
    }
}