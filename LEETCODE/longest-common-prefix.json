{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "14",
            "title": "Longest Common Prefix",
            "titleSlug": "longest-common-prefix",
            "content": "<p>Write a function to find the longest common prefix string amongst an array of strings.</p>\n\n<p>If there is no common prefix, return an empty string <code>&quot;&quot;</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> strs = [&quot;flower&quot;,&quot;flow&quot;,&quot;flight&quot;]\n<strong>Output:</strong> &quot;fl&quot;\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> strs = [&quot;dog&quot;,&quot;racecar&quot;,&quot;car&quot;]\n<strong>Output:</strong> &quot;&quot;\n<strong>Explanation:</strong> There is no common prefix among the input strings.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= strs.length &lt;= 200</code></li>\n\t<li><code>0 &lt;= strs[i].length &lt;= 200</code></li>\n\t<li><code>strs[i]</code> consists of only lowercase English letters.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 16602,
            "dislikes": 4366,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                }
            ],
            "stats": "{\"totalAccepted\": \"2.9M\", \"totalSubmission\": \"7M\", \"totalAcceptedRaw\": 2946426, \"totalSubmissionRaw\": 7009851, \"acRate\": \"42.0%\"}",
            "hints": [],
            "rephrased": {
                "body": "Given an array of strings, find the longest common prefix string amongst them. If no common prefix exists, return an empty string.",
                "constraints": [
                    "1 <= strs.length <= 200",
                    "0 <= strs[i].length <= 200",
                    "strs[i] consists of only lowercase English letters."
                ],
                "testcases": [
                    {
                        "input": "[\"flower\",\"flow\",\"flight\"]",
                        "output": "\"fl\"",
                        "explanation": "The longest common prefix for 'flower', 'flow', and 'flight' is 'fl'."
                    },
                    {
                        "input": "[\"dog\",\"racecar\",\"car\"]",
                        "output": "\"\"",
                        "explanation": "There is no common prefix among 'dog', 'racecar', and 'car'."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Trie",
                "slug": "trie"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  string longestCommonPrefix(vector<string>& strs) {\n    if (strs.empty())\n      return \"\";\n\n    for (int i = 0; i < strs[0].length(); ++i)\n      for (int j = 1; j < strs.size(); ++j)\n        if (i == strs[j].length() || strs[j][i] != strs[0][i])\n          return strs[0].substr(0, i);\n\n    return strs[0];\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public String longestCommonPrefix(String[] strs) {\n    if (strs.length == 0)\n      return \"\";\n\n    for (int i = 0; i < strs[0].length(); ++i)\n      for (int j = 1; j < strs.length; ++j)\n        if (i == strs[j].length() || strs[j].charAt(i) != strs[0].charAt(i))\n          return strs[0].substring(0, i);\n\n    return strs[0];\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def longestCommonPrefix(self, strs: List[str]) -> str:\n    if not strs:\n      return ''\n\n    for i in range(len(strs[0])):\n      for j in range(1, len(strs)):\n        if i == len(strs[j]) or strs[j][i] != strs[0][i]:\n          return strs[0][:i]\n\n    return strs[0]\n",
                "lang_text": "py"
            }
        }
    }
}