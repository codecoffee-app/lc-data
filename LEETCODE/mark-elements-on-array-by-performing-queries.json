{
    "failed": false,
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "3080",
            "title": "Mark Elements on Array by Performing Queries",
            "titleSlug": "mark-elements-on-array-by-performing-queries",
            "content": "<p>You are given a <strong>0-indexed</strong> array <code>nums</code> of size <code>n</code> consisting of positive integers.</p>\n\n<p>You are also given a 2D array <code>queries</code> of size <code>m</code> where <code>queries[i] = [index<sub>i</sub>, k<sub>i</sub>]</code>.</p>\n\n<p>Initially all elements of the array are <strong>unmarked</strong>.</p>\n\n<p>You need to apply <code>m</code> queries on the array in order, where on the <code>i<sup>th</sup></code> query you do the following:</p>\n\n<ul>\n\t<li>Mark the element at index <code>index<sub>i</sub></code> if it is not already marked.</li>\n\t<li>Then mark <code>k<sub>i</sub></code> unmarked elements in the array with the <strong>smallest</strong> values. If multiple such elements exist, mark the ones with the smallest indices. And if less than <code>k<sub>i</sub></code> unmarked elements exist, then mark all of them.</li>\n</ul>\n\n<p>Return <em>an array answer of size </em><code>m</code><em> where </em><code>answer[i]</code><em> is the <strong>sum</strong> of unmarked elements in the array after the </em><code>i<sup>th</sup></code><em> query</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\" style=\"border-color: var(--border-tertiary); border-left-width: 2px; color: var(--text-secondary); font-size: .875rem; margin-bottom: 1rem; margin-top: 1rem; overflow: visible; padding-left: 1rem;\">\n<p><strong>Input: </strong><span class=\"example-io\" style=\"font-family: Menlo,sans-serif; font-size: 0.85rem;\">nums = [1,2,2,1,2,3,1], queries = [[1,2],[3,3],[4,2]]</span></p>\n\n<p><strong>Output: </strong><span class=\"example-io\" style=\"font-family: Menlo,sans-serif; font-size: 0.85rem;\">[8,3,0]</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>We do the following queries on the array:</p>\n\n<ul>\n\t<li>Mark the element at index <code>1</code>, and <code>2</code> of the smallest unmarked elements with the smallest indices if they exist, the marked elements now are <code>nums = [<strong><u>1</u></strong>,<u><strong>2</strong></u>,2,<u><strong>1</strong></u>,2,3,1]</code>. The sum of unmarked elements is <code>2 + 2 + 3 + 1 = 8</code>.</li>\n\t<li>Mark the element at index <code>3</code>, since it is already marked we skip it. Then we mark <code>3</code> of the smallest unmarked elements with the smallest indices, the marked elements now are <code>nums = [<strong><u>1</u></strong>,<u><strong>2</strong></u>,<u><strong>2</strong></u>,<u><strong>1</strong></u>,<u><strong>2</strong></u>,3,<strong><u>1</u></strong>]</code>. The sum of unmarked elements is <code>3</code>.</li>\n\t<li>Mark the element at index <code>4</code>, since it is already marked we skip it. Then we mark <code>2</code> of the smallest unmarked elements with the smallest indices if they exist, the marked elements now are <code>nums = [<strong><u>1</u></strong>,<u><strong>2</strong></u>,<u><strong>2</strong></u>,<u><strong>1</strong></u>,<u><strong>2</strong></u>,<strong><u>3</u></strong>,<u><strong>1</strong></u>]</code>. The sum of unmarked elements is <code>0</code>.</li>\n</ul>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\" style=\"border-color: var(--border-tertiary); border-left-width: 2px; color: var(--text-secondary); font-size: .875rem; margin-bottom: 1rem; margin-top: 1rem; overflow: visible; padding-left: 1rem;\">\n<p><strong>Input: </strong><span class=\"example-io\" style=\"font-family: Menlo,sans-serif; font-size: 0.85rem;\">nums = [1,4,2,3], queries = [[0,1]]</span></p>\n\n<p><strong>Output: </strong><span class=\"example-io\" style=\"font-family: Menlo,sans-serif; font-size: 0.85rem;\">[7]</span></p>\n\n<p><strong>Explanation: </strong> We do one query which is mark the element at index <code>0</code> and mark the smallest element among unmarked elements. The marked elements will be <code>nums = [<strong><u>1</u></strong>,4,<u><strong>2</strong></u>,3]</code>, and the sum of unmarked elements is <code>4 + 3 = 7</code>.</p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == nums.length</code></li>\n\t<li><code>m == queries.length</code></li>\n\t<li><code>1 &lt;= m &lt;= n &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 10<sup>5</sup></code></li>\n\t<li><code>queries[i].length == 2</code></li>\n\t<li><code>0 &lt;= index<sub>i</sub>, k<sub>i</sub> &lt;= n - 1</code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 105,
            "dislikes": 20,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "stats": "{\"totalAccepted\": \"17.4K\", \"totalSubmission\": \"35.5K\", \"totalAcceptedRaw\": 17399, \"totalSubmissionRaw\": 35532, \"acRate\": \"49.0%\"}",
            "hints": [
                "Use another array to keep track of marked indices.",
                "Sort the array <code>nums</code> to be able to find the smallest unmarked elements quickly in each query."
            ],
            "rephrased": {
                "body": "You are given a 0-indexed array `nums` of size `n` consisting of positive integers. You are also given a 2D array `queries` of size `m` where `queries[i] = [index_i, k_i]`. Initially, all elements of the array are unmarked. You need to apply `m` queries on the array in order. For the i-th query:\n\n1.  Mark the element at index `index_i` if it is not already marked.\n2.  Then, mark `k_i` unmarked elements in the array with the smallest values. If multiple such elements exist, mark the ones with the smallest indices. If less than `k_i` unmarked elements exist, then mark all of them.\n\nReturn an array `answer` of size `m` where `answer[i]` is the sum of unmarked elements in the array after the i-th query.",
                "constraints": [
                    "n == nums.length",
                    "m == queries.length",
                    "1 <= m <= n <= 10^5",
                    "1 <= nums[i] <= 10^5",
                    "queries[i].length == 2",
                    "0 <= index_i, k_i <= n - 1"
                ],
                "testcases": [
                    {
                        "input": "nums = [1,2,2,1,2,3,1], queries = [[1,2],[3,3],[4,2]]",
                        "output": "[8,3,0]",
                        "explanation": "Initially, nums = [1,2,2,1,2,3,1].\n\nQuery 1: Mark index 1 (value 2). Mark the 2 smallest unmarked elements (1, 1).  nums = [1,2,2,1,2,3,1]. Unmarked sum = 2 + 2 + 3 + 1 = 8.\n\nQuery 2: Mark index 3 (value 1). Mark the 3 smallest unmarked elements (2, 2, 1). nums = [1,2,2,1,2,3,1]. Unmarked sum = 3.\n\nQuery 3: Mark index 4 (value 2). Mark the 2 smallest unmarked elements (3, 1). nums = [1,2,2,1,2,3,1]. Unmarked sum = 0."
                    },
                    {
                        "input": "nums = [1,4,2,3], queries = [[0,1]]",
                        "output": "[7]",
                        "explanation": "Initially, nums = [1,4,2,3].\n\nQuery 1: Mark index 0 (value 1). Mark the smallest unmarked element (2). nums = [1,4,2,3]. Unmarked sum = 4 + 3 = 7."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "Use another array to keep track of marked indices.",
            "Sort the array <code>nums</code> to be able to find the smallest unmarked elements quickly in each query."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "solutions": {}
    }
}