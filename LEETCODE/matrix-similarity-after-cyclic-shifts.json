{
    "failed": false,
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2946",
            "title": "Matrix Similarity After Cyclic Shifts",
            "titleSlug": "matrix-similarity-after-cyclic-shifts",
            "content": "<p>You are given an <code>m x n</code> integer matrix <code>mat</code> and an integer <code>k</code>. The matrix rows are 0-indexed.</p>\n\n<p>The following proccess happens <code>k</code> times:</p>\n\n<ul>\n\t<li><strong>Even-indexed</strong> rows (0, 2, 4, ...) are cyclically shifted to the left.</li>\n</ul>\n\n<p><img src=\"https://assets.leetcode.com/uploads/2024/05/19/lshift.jpg\" style=\"width: 283px; height: 90px;\" /></p>\n\n<ul>\n\t<li><strong>Odd-indexed</strong> rows (1, 3, 5, ...) are cyclically shifted to the right.</li>\n</ul>\n\n<p><img src=\"https://assets.leetcode.com/uploads/2024/05/19/rshift-stlone.jpg\" style=\"width: 283px; height: 90px;\" /></p>\n\n<p>Return <code>true</code> if the final modified matrix after <code>k</code> steps is identical to the original matrix, and <code>false</code> otherwise.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">mat = [[1,2,3],[4,5,6],[7,8,9]], k = 4</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">false</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>In each step left shift is applied to rows 0 and 2 (even indices), and right shift to row 1 (odd index).</p>\n\n<p><img src=\"https://assets.leetcode.com/uploads/2024/05/19/t1-2.jpg\" style=\"width: 857px; height: 150px;\" /></p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">mat = [[1,2,1,2],[5,5,5,5],[6,3,6,3]], k = 2</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">true</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p><img src=\"https://assets.leetcode.com/uploads/2024/05/19/t1-3.jpg\" style=\"width: 632px; height: 150px;\" /></p>\n</div>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">mat = [[2,2],[2,2]], k = 3</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">true</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>As all the values are equal in the matrix, even after performing cyclic shifts the matrix will remain the same.</p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= mat.length &lt;= 25</code></li>\n\t<li><code>1 &lt;= mat[i].length &lt;= 25</code></li>\n\t<li><code>1 &lt;= mat[i][j] &lt;= 25</code></li>\n\t<li><code>1 &lt;= k &lt;= 50</code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 136,
            "dislikes": 59,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "stats": "{\"totalAccepted\": \"21.8K\", \"totalSubmission\": \"37.5K\", \"totalAcceptedRaw\": 21760, \"totalSubmissionRaw\": 37550, \"acRate\": \"57.9%\"}",
            "hints": [
                "You can reduce <code>k</code> shifts to <code>(k % n)</code> shifts as after <code>n</code> shifts the matrix will become similar to the initial matrix."
            ],
            "rephrased": {
                "body": "You are given an `m x n` integer matrix `mat` and an integer `k`. The matrix rows are 0-indexed.  The following process happens `k` times:\n\n*   **Even-indexed** rows (0, 2, 4, ...) are cyclically shifted to the left.\n*   **Odd-indexed** rows (1, 3, 5, ...) are cyclically shifted to the right.\n\nReturn `true` if the final modified matrix after `k` steps is identical to the original matrix, and `false` otherwise.",
                "constraints": [
                    "1 <= mat.length <= 25",
                    "1 <= mat[i].length <= 25",
                    "1 <= mat[i][j] <= 25",
                    "1 <= k <= 50"
                ],
                "testcases": [
                    {
                        "input": "mat = [[1,2,3],[4,5,6],[7,8,9]], k = 4",
                        "output": "false",
                        "explanation": "After 4 iterations of shifting rows, the matrix is not identical to the original matrix."
                    },
                    {
                        "input": "mat = [[1,2,1,2],[5,5,5,5],[6,3,6,3]], k = 2",
                        "output": "true",
                        "explanation": "After 2 iterations of shifting rows, the matrix returns to its original state."
                    },
                    {
                        "input": "mat = [[2,2],[2,2]], k = 3",
                        "output": "true",
                        "explanation": "Because all elements in the matrix are equal, cyclic shifts do not change the matrix's appearance."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "You can reduce <code>k</code> shifts to <code>(k % n)</code> shifts as after <code>n</code> shifts the matrix will become similar to the initial matrix."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  bool areSimilar(vector<vector<int>>& mat, int k) {\n    const int n = mat[0].size();\n    for (const vector<int>& row : mat)\n      for (int j = 0; j < n; ++j)\n        if (row[j] != row[(j + k) % n])\n          return false;\n    return true;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public boolean areSimilar(int[][] mat, int k) {\n    final int n = mat[0].length;\n    for (int[] row : mat)\n      for (int j = 0; j < n; ++j)\n        if (row[j] != row[(j + k) % n])\n          return false;\n    return true;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def areSimilar(self, mat: List[List[int]], k: int) -> bool:\n    n = len(mat[0])\n    for row in mat:\n      for j in range(n):\n        if row[j] != row[(j + k) % n]:\n          return False\n    return True\n",
                "lang_text": "py"
            }
        }
    }
}