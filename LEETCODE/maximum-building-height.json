{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1840",
            "title": "Maximum Building Height",
            "titleSlug": "maximum-building-height",
            "content": "<p>You want to build <code>n</code> new buildings in a city. The new buildings will be built in a line and are labeled from <code>1</code> to <code>n</code>.</p>\n\n<p>However, there are city restrictions on the heights of the new buildings:</p>\n\n<ul>\n\t<li>The height of each building must be a non-negative integer.</li>\n\t<li>The height of the first building <strong>must</strong> be <code>0</code>.</li>\n\t<li>The height difference between any two adjacent buildings <strong>cannot exceed</strong> <code>1</code>.</li>\n</ul>\n\n<p>Additionally, there are city restrictions on the maximum height of specific buildings. These restrictions are given as a 2D integer array <code>restrictions</code> where <code>restrictions[i] = [id<sub>i</sub>, maxHeight<sub>i</sub>]</code> indicates that building <code>id<sub>i</sub></code> must have a height <strong>less than or equal to</strong> <code>maxHeight<sub>i</sub></code>.</p>\n\n<p>It is guaranteed that each building will appear <strong>at most once</strong> in <code>restrictions</code>, and building <code>1</code> will <strong>not</strong> be in <code>restrictions</code>.</p>\n\n<p>Return <em>the <strong>maximum possible height</strong> of the <strong>tallest</strong> building</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/04/08/ic236-q4-ex1-1.png\" style=\"width: 400px; height: 253px;\" />\n<pre>\n<strong>Input:</strong> n = 5, restrictions = [[2,1],[4,1]]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The green area in the image indicates the maximum allowed height for each building.\nWe can build the buildings with heights [0,1,2,1,2], and the tallest building has a height of 2.</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/04/08/ic236-q4-ex2.png\" style=\"width: 500px; height: 269px;\" />\n<pre>\n<strong>Input:</strong> n = 6, restrictions = []\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> The green area in the image indicates the maximum allowed height for each building.\nWe can build the buildings with heights [0,1,2,3,4,5], and the tallest building has a height of 5.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/04/08/ic236-q4-ex3.png\" style=\"width: 500px; height: 187px;\" />\n<pre>\n<strong>Input:</strong> n = 10, restrictions = [[5,3],[2,5],[7,4],[10,3]]\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> The green area in the image indicates the maximum allowed height for each building.\nWe can build the buildings with heights [0,1,2,3,3,4,4,5,4,3], and the tallest building has a height of 5.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= n &lt;= 10<sup>9</sup></code></li>\n\t<li><code>0 &lt;= restrictions.length &lt;= min(n - 1, 10<sup>5</sup>)</code></li>\n\t<li><code>2 &lt;= id<sub>i</sub> &lt;= n</code></li>\n\t<li><code>id<sub>i</sub></code>&nbsp;is <strong>unique</strong>.</li>\n\t<li><code>0 &lt;= maxHeight<sub>i</sub> &lt;= 10<sup>9</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 356,
            "dislikes": 13,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "stats": "{\"totalAccepted\": \"6.8K\", \"totalSubmission\": \"19K\", \"totalAcceptedRaw\": 6830, \"totalSubmissionRaw\": 18951, \"acRate\": \"36.0%\"}",
            "hints": [
                "Is it possible to find the max height if given the height range of a particular building?",
                "You can find the height range of a restricted building by doing 2 passes from the left and right."
            ],
            "rephrased": {
                "body": "You are tasked with constructing `n` buildings in a row, labeled from 1 to `n`. The height of each building must be a non-negative integer, adhering to the following constraints:\n\n*   Building 1 must have a height of 0.\n*   The absolute height difference between adjacent buildings cannot exceed 1.\n\nFurthermore, you are given restrictions on the maximum height of certain buildings in a 2D integer array `restrictions`. Each entry `restrictions[i] = [id_i, maxHeight_i]` indicates that building `id_i` cannot exceed a height of `maxHeight_i`. Building `1` will not be present in `restrictions`.\n\nDetermine the maximum possible height of the tallest building you can construct while satisfying all the given constraints.",
                "constraints": [
                    "2 <= n <= 10^9",
                    "0 <= restrictions.length <= min(n - 1, 10^5)",
                    "2 <= id_i <= n",
                    "id_i is unique.",
                    "0 <= maxHeight_i <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "n = 5, restrictions = [[2,1],[4,1]]",
                        "output": "2",
                        "explanation": "One possible building arrangement that satisfies the conditions is [0, 1, 2, 1, 2], where the tallest building has a height of 2."
                    },
                    {
                        "input": "n = 6, restrictions = []",
                        "output": "5",
                        "explanation": "With no restrictions, the buildings can be arranged with heights [0, 1, 2, 3, 4, 5], resulting in the tallest building having a height of 5."
                    },
                    {
                        "input": "n = 10, restrictions = [[5,3],[2,5],[7,4],[10,3]]",
                        "output": "5",
                        "explanation": "One valid building configuration is [0, 1, 2, 3, 3, 4, 4, 5, 4, 3], where the tallest building has a height of 5."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "Is it possible to find the max height if given the height range of a particular building?",
            "You can find the height range of a restricted building by doing 2 passes from the left and right."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int maxBuilding(int n, vector<vector<int>>& restrictions) {\n    vector<vector<int>> A(restrictions);\n\n    A.push_back({1, 0});\n    A.push_back({n, n - 1});\n    std::ranges::sort(A);\n\n    for (int i = 1; i < A.size(); ++i) {\n      const int dist = A[i][0] - A[i - 1][0];\n      A[i][1] = min(A[i][1], A[i - 1][1] + dist);\n    }\n\n    for (int i = A.size() - 2; i >= 0; --i) {\n      const int dist = A[i + 1][0] - A[i][0];\n      A[i][1] = min(A[i][1], A[i + 1][1] + dist);\n    }\n\n    int ans = 0;\n\n    for (int i = 1; i < A.size(); ++i) {\n      const int l = A[i - 1][0];\n      const int r = A[i][0];\n      const int hL = A[i - 1][1];\n      const int hR = A[i][1];\n      ans = max(ans, max(hL, hR) + (r - l - abs(hL - hR)) / 2);\n    }\n\n    return ans;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int maxBuilding(int n, int[][] restrictions) {\n    final int k = restrictions.length;\n    int[][] A = new int[k + 2][2];\n    System.arraycopy(restrictions, 0, A, 0, k);\n    A[k] = new int[] {1, 0};\n    A[k + 1] = new int[] {n, n - 1};\n\n    Arrays.sort(A, (a, b) -> a[0] == b[0] ? a[1] - b[1] : a[0] - b[0]);\n\n    for (int i = 1; i < A.length; ++i) {\n      final int dist = A[i][0] - A[i - 1][0];\n      A[i][1] = Math.min(A[i][1], A[i - 1][1] + dist);\n    }\n\n    for (int i = A.length - 2; i >= 0; --i) {\n      final int dist = A[i + 1][0] - A[i][0];\n      A[i][1] = Math.min(A[i][1], A[i + 1][1] + dist);\n    }\n\n    int ans = 0;\n\n    for (int i = 1; i < A.length; ++i) {\n      final int l = A[i - 1][0];\n      final int r = A[i][0];\n      final int hL = A[i - 1][1];\n      final int hR = A[i][1];\n      ans = Math.max(ans, Math.max(hL, hR) + (r - l - Math.abs(hL - hR)) / 2);\n    }\n\n    return ans;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def maxBuilding(self, n: int, restrictions: List[List[int]]) -> int:\n    A = sorted(restrictions + [[1, 0]] + [[n, n - 1]])\n\n    for i in range(len(A)):\n      dist = A[i][0] - A[i - 1][0]\n      A[i][1] = min(A[i][1], A[i - 1][1] + dist)\n\n    for i in reversed(range(len(A) - 1)):\n      dist = A[i + 1][0] - A[i][0]\n      A[i][1] = min(A[i][1], A[i + 1][1] + dist)\n\n    ans = 0\n\n    for (l, hL), (r, hR) in zip(A, A[1:]):\n      ans = max(ans, max(hL, hR) + (r - l - abs(hL - hR)) // 2)\n\n    return ans\n",
                "lang_text": "py"
            }
        }
    }
}