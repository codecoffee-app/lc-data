{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1846",
            "title": "Maximum Element After Decreasing and Rearranging",
            "titleSlug": "maximum-element-after-decreasing-and-rearranging",
            "content": "<p>You are given an array of positive integers <code>arr</code>. Perform some operations (possibly none) on <code>arr</code> so that it satisfies these conditions:</p>\n\n<ul>\n\t<li>The value of the <strong>first</strong> element in <code>arr</code> must be <code>1</code>.</li>\n\t<li>The absolute difference between any 2 adjacent elements must be <strong>less than or equal to </strong><code>1</code>. In other words, <code>abs(arr[i] - arr[i - 1]) &lt;= 1</code> for each <code>i</code> where <code>1 &lt;= i &lt; arr.length</code> (<strong>0-indexed</strong>). <code>abs(x)</code> is the absolute value of <code>x</code>.</li>\n</ul>\n\n<p>There are 2 types of operations that you can perform any number of times:</p>\n\n<ul>\n\t<li><strong>Decrease</strong> the value of any element of <code>arr</code> to a <strong>smaller positive integer</strong>.</li>\n\t<li><strong>Rearrange</strong> the elements of <code>arr</code> to be in any order.</li>\n</ul>\n\n<p>Return <em>the <strong>maximum</strong> possible value of an element in </em><code>arr</code><em> after performing the operations to satisfy the conditions</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [2,2,1,2,1]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> \nWe can satisfy the conditions by rearranging <code>arr</code> so it becomes <code>[1,2,2,2,1]</code>.\nThe largest element in <code>arr</code> is 2.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [100,1,1000]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> \nOne possible way to satisfy the conditions is by doing the following:\n1. Rearrange <code>arr</code> so it becomes <code>[1,100,1000]</code>.\n2. Decrease the value of the second element to 2.\n3. Decrease the value of the third element to 3.\nNow <code>arr = [1,2,3]</code>, which<code> </code>satisfies the conditions.\nThe largest element in <code>arr is 3.</code>\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1,2,3,4,5]\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> The array already satisfies the conditions, and the largest element is 5.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= arr.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= arr[i] &lt;= 10<sup>9</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 1031,
            "dislikes": 254,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "stats": "{\"totalAccepted\": \"95.1K\", \"totalSubmission\": \"143.7K\", \"totalAcceptedRaw\": 95055, \"totalSubmissionRaw\": 143735, \"acRate\": \"66.1%\"}",
            "hints": [
                "Sort the Array.",
                "Decrement each element to the largest integer that satisfies the conditions."
            ],
            "rephrased": {
                "body": "Given an array of positive integers `arr`, the goal is to modify it through a series of operations such that it meets the following criteria:\n\n1.  The first element of `arr` must be equal to 1.\n2.  The absolute difference between any two adjacent elements in `arr` must be less than or equal to 1 (i.e., `abs(arr[i] - arr[i - 1]) <= 1`).\n\nYou are allowed to perform the following operations any number of times:\n\n*   **Decrease:** Reduce the value of any element to a smaller positive integer.\n*   **Rearrange:** Reorder the elements of the array in any sequence.\n\nDetermine the maximum possible value of any element in `arr` after performing these operations to satisfy the given conditions.",
                "constraints": [
                    "1 <= arr.length <= 10^5",
                    "1 <= arr[i] <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "[2,2,1,2,1]",
                        "output": "2",
                        "explanation": "The array can be rearranged to [1,2,2,2,1], satisfying the conditions. The largest element is 2."
                    },
                    {
                        "input": "[100,1,1000]",
                        "output": "3",
                        "explanation": "One possible solution is to rearrange to [1,100,1000], then decrease 100 to 2 and 1000 to 3, resulting in [1,2,3]. The largest element is 3."
                    },
                    {
                        "input": "[1,2,3,4,5]",
                        "output": "5",
                        "explanation": "The array already satisfies the conditions. The largest element is 5."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "Sort the Array.",
            "Decrement each element to the largest integer that satisfies the conditions."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int maximumElementAfterDecrementingAndRearranging(vector<int>& arr) {\n    std::ranges::sort(arr);\n    arr[0] = 1;\n\n    for (int i = 1; i < arr.size(); ++i)\n      arr[i] = min(arr[i], arr[i - 1] + 1);\n\n    return arr.back();\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int maximumElementAfterDecrementingAndRearranging(int[] arr) {\n    Arrays.sort(arr);\n    arr[0] = 1;\n\n    for (int i = 1; i < arr.length; ++i)\n      arr[i] = Math.min(arr[i], arr[i - 1] + 1);\n\n    return arr[arr.length - 1];\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def maximumElementAfterDecrementingAndRearranging(self, arr: List[int]) -> int:\n    arr.sort()\n    arr[0] = 1\n\n    for i in range(1, len(arr)):\n      arr[i] = min(arr[i], arr[i - 1] + 1)\n\n    return arr[-1]\n",
                "lang_text": "py"
            }
        }
    }
}