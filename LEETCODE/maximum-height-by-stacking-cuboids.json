{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1691",
            "title": "Maximum Height by Stacking Cuboids ",
            "titleSlug": "maximum-height-by-stacking-cuboids",
            "content": "<p>Given <code>n</code> <code>cuboids</code> where the dimensions of the <code>i<sup>th</sup></code> cuboid is <code>cuboids[i] = [width<sub>i</sub>, length<sub>i</sub>, height<sub>i</sub>]</code> (<strong>0-indexed</strong>). Choose a <strong>subset</strong> of <code>cuboids</code> and place them on each other.</p>\n\n<p>You can place cuboid <code>i</code> on cuboid <code>j</code> if <code>width<sub>i</sub> &lt;= width<sub>j</sub></code> and <code>length<sub>i</sub> &lt;= length<sub>j</sub></code> and <code>height<sub>i</sub> &lt;= height<sub>j</sub></code>. You can rearrange any cuboid&#39;s dimensions by rotating it to put it on another cuboid.</p>\n\n<p>Return <em>the <strong>maximum height</strong> of the stacked</em> <code>cuboids</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/10/21/image.jpg\" style=\"width: 420px; height: 299px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> cuboids = [[50,45,20],[95,37,53],[45,23,12]]\n<strong>Output:</strong> 190\n<strong>Explanation:</strong>\nCuboid 1 is placed on the bottom with the 53x37 side facing down with height 95.\nCuboid 0 is placed next with the 45x20 side facing down with height 50.\nCuboid 2 is placed next with the 23x12 side facing down with height 45.\nThe total height is 95 + 50 + 45 = 190.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> cuboids = [[38,25,45],[76,35,3]]\n<strong>Output:</strong> 76\n<strong>Explanation:</strong>\nYou can&#39;t place any of the cuboids on the other.\nWe choose cuboid 1 and rotate it so that the 35x3 side is facing down and its height is 76.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> cuboids = [[7,11,17],[7,17,11],[11,7,17],[11,17,7],[17,7,11],[17,11,7]]\n<strong>Output:</strong> 102\n<strong>Explanation:</strong>\nAfter rearranging the cuboids, you can see that all cuboids have the same dimension.\nYou can place the 11x7 side down on all cuboids so their heights are 17.\nThe maximum height of stacked cuboids is 6 * 17 = 102.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == cuboids.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 100</code></li>\n\t<li><code>1 &lt;= width<sub>i</sub>, length<sub>i</sub>, height<sub>i</sub> &lt;= 100</code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 1079,
            "dislikes": 30,
            "similarQuestions": "[{\"title\": \"The Number of Weak Characters in the Game\", \"titleSlug\": \"the-number-of-weak-characters-in-the-game\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Number of Groups Entering a Competition\", \"titleSlug\": \"maximum-number-of-groups-entering-a-competition\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "stats": "{\"totalAccepted\": \"23.8K\", \"totalSubmission\": \"42.5K\", \"totalAcceptedRaw\": 23837, \"totalSubmissionRaw\": 42498, \"acRate\": \"56.1%\"}",
            "hints": [
                "Does the dynamic programming sound like the right algorithm after sorting?",
                "Let's say box1 can be placed on top of box2. No matter what orientation box2 is in, we can rotate box1 so that it can be placed on top. Why don't we orient everything such that height is the biggest?"
            ],
            "rephrased": {
                "body": "Given `n` cuboids, where the dimensions of the i-th cuboid are `cuboids[i] = [width_i, length_i, height_i]` (0-indexed), select a subset of these cuboids and stack them on top of each other. A cuboid `i` can be placed on top of cuboid `j` if `width_i <= width_j`, `length_i <= length_j`, and `height_i <= height_j`.  You can rearrange the dimensions of any cuboid by rotating it to fit on another cuboid. Determine the maximum possible height of the stacked cuboids.",
                "constraints": [
                    "`n == cuboids.length`",
                    "`1 <= n <= 100`",
                    "`1 <= width_i, length_i, height_i <= 100`"
                ],
                "testcases": [
                    {
                        "input": "[[50,45,20],[95,37,53],[45,23,12]]",
                        "output": "190",
                        "explanation": "One possible stacking arrangement to achieve a height of 190 is as follows: Place cuboid 1 at the bottom with the 53x37 side facing down (height 95). Then, place cuboid 0 on top with the 45x20 side facing down (height 50). Finally, place cuboid 2 on top with the 23x12 side facing down (height 45).  The total height is 95 + 50 + 45 = 190."
                    },
                    {
                        "input": "[[38,25,45],[76,35,3]]",
                        "output": "76",
                        "explanation": "Neither cuboid can be placed on the other based on the stacking rules. Therefore, the maximum height is achieved by selecting a single cuboid. We can choose cuboid 1 and rotate it so that the 35x3 side is facing down, resulting in a height of 76."
                    },
                    {
                        "input": "[[7,11,17],[7,17,11],[11,7,17],[11,17,7],[17,7,11],[17,11,7]]",
                        "output": "102",
                        "explanation": "After rearranging the dimensions of the cuboids, it becomes apparent that all cuboids can have the same dimensions. We can stack all 6 cuboids, orienting them such that the 11x7 side faces down, giving each a height of 17. The total height of the stacked cuboids is then 6 * 17 = 102."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "the-number-of-weak-characters-in-the-game",
                "title": "The Number of Weak Characters in the Game",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "maximum-number-of-groups-entering-a-competition",
                "title": "Maximum Number of Groups Entering a Competition",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "Does the dynamic programming sound like the right algorithm after sorting?",
            "Let's say box1 can be placed on top of box2. No matter what orientation box2 is in, we can rotate box1 so that it can be placed on top. Why don't we orient everything such that height is the biggest?"
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ]
    }
}