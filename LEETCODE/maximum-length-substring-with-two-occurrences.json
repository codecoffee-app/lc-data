{
    "failed": false,
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "3090",
            "title": "Maximum Length Substring With Two Occurrences",
            "titleSlug": "maximum-length-substring-with-two-occurrences",
            "content": "Given a string <code>s</code>, return the <strong>maximum</strong> length of a <span data-keyword=\"substring\">substring</span>&nbsp;such that it contains <em>at most two occurrences</em> of each character.\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">s = &quot;bcbbbcba&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">4</span></p>\n\n<p><strong>Explanation:</strong></p>\nThe following substring has a length of 4 and contains at most two occurrences of each character: <code>&quot;bcbb<u>bcba</u>&quot;</code>.</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">s = &quot;aaaa&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">2</span></p>\n\n<p><strong>Explanation:</strong></p>\nThe following substring has a length of 2 and contains at most two occurrences of each character: <code>&quot;<u>aa</u>aa&quot;</code>.</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= s.length &lt;= 100</code></li>\n\t<li><code>s</code> consists only of lowercase English letters.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 150,
            "dislikes": 12,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "stats": "{\"totalAccepted\": \"36.1K\", \"totalSubmission\": \"56.4K\", \"totalAcceptedRaw\": 36055, \"totalSubmissionRaw\": 56442, \"acRate\": \"63.9%\"}",
            "hints": [
                "We can try all substrings by brute-force since the constraints are very small."
            ],
            "rephrased": {
                "body": "Given a string `s`, find the length of the longest substring where each character appears at most twice.",
                "constraints": [
                    "2 <= s.length <= 100",
                    "s consists only of lowercase English letters."
                ],
                "testcases": [
                    {
                        "input": "bcbbbcba",
                        "output": "4",
                        "explanation": "The substring \"bcbb\" has length 4, and each character appears at most twice. Other substrings like \"cbba\" also satisfy this condition."
                    },
                    {
                        "input": "aaaa",
                        "output": "2",
                        "explanation": "The substring \"aa\" has length 2, and each character appears at most twice. Any substring of length greater than 2 would have 'a' appearing more than twice."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "We can try all substrings by brute-force since the constraints are very small."
        ],
        "relatedTopics": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int maximumLengthSubstring(string s) {\n    int ans = 0;\n    vector<int> count(26);\n\n    for (int l = 0, r = 0; r < s.length(); ++r) {\n      ++count[s[r] - 'a'];\n      while (count[s[r] - 'a'] > 2)\n        --count[s[l++] - 'a'];\n      ans = max(ans, r - l + 1);\n    }\n\n    return ans;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int maximumLengthSubstring(String s) {\n    int ans = 0;\n    int[] count = new int[26];\n\n    for (int l = 0, r = 0; r < s.length(); ++r) {\n      ++count[s.charAt(r) - 'a'];\n      while (count[s.charAt(r) - 'a'] > 2)\n        --count[s.charAt(l++) - 'a'];\n      ans = Math.max(ans, r - l + 1);\n    }\n\n    return ans;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def maximumLengthSubstring(self, s: str) -> int:\n    ans = 0\n    count = collections.Counter()\n\n    l = 0\n    for r, c in enumerate(s):\n      count[c] += 1\n      while count[c] > 2:\n        count[s[l]] -= 1\n        l += 1\n      ans = max(ans, r - l + 1)\n\n    return ans\n",
                "lang_text": "py"
            }
        }
    }
}