{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1798",
            "title": "Maximum Number of Consecutive Values You Can Make",
            "titleSlug": "maximum-number-of-consecutive-values-you-can-make",
            "content": "<p>You are given an integer array <code>coins</code> of length <code>n</code> which represents the <code>n</code> coins that you own. The value of the <code>i<sup>th</sup></code> coin is <code>coins[i]</code>. You can <strong>make</strong> some value <code>x</code> if you can choose some of your <code>n</code> coins such that their values sum up to <code>x</code>.</p>\n\n<p>Return the <em>maximum number of consecutive integer values that you <strong>can</strong> <strong>make</strong> with your coins <strong>starting</strong> from and <strong>including</strong> </em><code>0</code>.</p>\n\n<p>Note that you may have multiple coins of the same value.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> coins = [1,3]\n<strong>Output:</strong> 2\n<strong>Explanation: </strong>You can make the following values:\n- 0: take []\n- 1: take [1]\nYou can make 2 consecutive integer values starting from 0.</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> coins = [1,1,1,4]\n<strong>Output:</strong> 8\n<strong>Explanation: </strong>You can make the following values:\n- 0: take []\n- 1: take [1]\n- 2: take [1,1]\n- 3: take [1,1,1]\n- 4: take [4]\n- 5: take [4,1]\n- 6: take [4,1,1]\n- 7: take [4,1,1,1]\nYou can make 8 consecutive integer values starting from 0.</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,4,10,3,1]\n<strong>Output:</strong> 20</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>coins.length == n</code></li>\n\t<li><code>1 &lt;= n &lt;= 4 * 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= coins[i] &lt;= 4 * 10<sup>4</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 748,
            "dislikes": 54,
            "similarQuestions": "[{\"title\": \"Patching Array\", \"titleSlug\": \"patching-array\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "stats": "{\"totalAccepted\": \"15.7K\", \"totalSubmission\": \"27.2K\", \"totalAcceptedRaw\": 15745, \"totalSubmissionRaw\": 27245, \"acRate\": \"57.8%\"}",
            "hints": [
                "If you can make the first x values and you have a value v, then you can make all the values <var>\u2264 v + x</var>",
                "Sort the array of coins. You can always make the value 0 so you can start with x = 0.",
                "Process the values starting from the smallest and stop when there is a value that cannot be achieved with the current x."
            ],
            "rephrased": {
                "body": "Given an array `coins` of `n` integers, where `coins[i]` represents the value of the i-th coin you own, determine the maximum number of consecutive integer values you can create starting from 0.  You can 'make' a value `x` if you can choose a subset of your coins such that their sum equals `x`.  Note that you can have multiple coins of the same value.",
                "constraints": [
                    "coins.length == n",
                    "1 <= n <= 4 * 10^4",
                    "1 <= coins[i] <= 4 * 10^4"
                ],
                "testcases": [
                    {
                        "input": "[1,3]",
                        "output": "2",
                        "explanation": "We can make 0 (take []), and 1 (take [1]). Thus, we can make 2 consecutive integer values starting from 0."
                    },
                    {
                        "input": "[1,1,1,4]",
                        "output": "8",
                        "explanation": "We can make the following values: 0, 1, 2, 3, 4, 5, 6, and 7. Thus, we can make 8 consecutive integer values starting from 0."
                    },
                    {
                        "input": "[1,4,10,3,1]",
                        "output": "20",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Hard",
                "titleSlug": "patching-array",
                "title": "Patching Array",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "If you can make the first x values and you have a value v, then you can make all the values <var>\u2264 v + x</var>",
            "Sort the array of coins. You can always make the value 0 so you can start with x = 0.",
            "Process the values starting from the smallest and stop when there is a value that cannot be achieved with the current x."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int getMaximumConsecutive(vector<int>& coins) {\n    int ans = 1;  // next value we want to make\n\n    std::ranges::sort(coins);\n\n    for (const int coin : coins) {\n      if (coin > ans)\n        return ans;\n      ans += coin;\n    }\n\n    return ans;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int getMaximumConsecutive(int[] coins) {\n    int ans = 1; // next value we want to make\n\n    Arrays.sort(coins);\n\n    for (final int coin : coins) {\n      if (coin > ans)\n        return ans;\n      ans += coin;\n    }\n\n    return ans;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def getMaximumConsecutive(self, coins: List[int]) -> int:\n    ans = 1  # next value we want to make\n\n    for coin in sorted(coins):\n      if coin > ans:\n        return ans\n      ans += coin\n\n    return ans\n",
                "lang_text": "py"
            }
        }
    }
}