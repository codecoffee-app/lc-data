{
    "failed": false,
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2790",
            "title": "Maximum Number of Groups With Increasing Length",
            "titleSlug": "maximum-number-of-groups-with-increasing-length",
            "content": "<p>You are given a <strong>0-indexed</strong> array <code>usageLimits</code> of length <code>n</code>.</p>\n\n<p>Your task is to create <strong>groups</strong> using numbers from <code>0</code> to <code>n - 1</code>, ensuring that each number, <code>i</code>, is used no more than <code>usageLimits[i]</code> times in total <strong>across all groups</strong>. You must also satisfy the following conditions:</p>\n\n<ul>\n\t<li>Each group must consist of <strong>distinct </strong>numbers, meaning that no duplicate numbers are allowed within a single group.</li>\n\t<li>Each group (except the first one) must have a length <strong>strictly greater</strong> than the previous group.</li>\n</ul>\n\n<p>Return <em>an integer denoting the <strong>maximum</strong> number of groups you can create while satisfying these conditions.</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> <code>usageLimits</code> = [1,2,5]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> In this example, we can use 0 at most once, 1 at most twice, and 2 at most five times.\nOne way of creating the maximum number of groups while satisfying the conditions is: \nGroup 1 contains the number [2].\nGroup 2 contains the numbers [1,2].\nGroup 3 contains the numbers [0,1,2]. \nIt can be shown that the maximum number of groups is 3. \nSo, the output is 3. </pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> <code>usageLimits</code> = [2,1,2]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> In this example, we can use 0 at most twice, 1 at most once, and 2 at most twice.\nOne way of creating the maximum number of groups while satisfying the conditions is:\nGroup 1 contains the number [0].\nGroup 2 contains the numbers [1,2].\nIt can be shown that the maximum number of groups is 2.\nSo, the output is 2. \n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> <code>usageLimits</code> = [1,1]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> In this example, we can use both 0 and 1 at most once.\nOne way of creating the maximum number of groups while satisfying the conditions is:\nGroup 1 contains the number [0].\nIt can be shown that the maximum number of groups is 1.\nSo, the output is 1. \n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= usageLimits.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= usageLimits[i] &lt;= 10<sup>9</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 396,
            "dislikes": 42,
            "similarQuestions": "[{\"title\": \"Group the People Given the Group Size They Belong To\", \"titleSlug\": \"group-the-people-given-the-group-size-they-belong-to\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "stats": "{\"totalAccepted\": \"8.9K\", \"totalSubmission\": \"45K\", \"totalAcceptedRaw\": 8905, \"totalSubmissionRaw\": 44969, \"acRate\": \"19.8%\"}",
            "hints": [
                "Can we solve this problem using sorting and binary search?\r\nSort the array in increasing order and run a binary search on the number of groups, x.\r\nTo determine if a value x is feasible, greedily distribute the numbers such that each group receives 1, 2, 3, ..., x numbers.",
                "Sort the array in increasing order and run a binary search on the number of groups, x.",
                "To determine if a value x is feasible, greedily distribute the numbers such that each group receives 1, 2, 3, ..., x numbers."
            ],
            "rephrased": {
                "body": "Given a 0-indexed array `usageLimits` of length `n`, the task is to create groups using numbers from 0 to `n - 1`. Each number `i` can be used no more than `usageLimits[i]` times across all groups.  The following conditions must be satisfied:\n\n*   Each group must consist of distinct numbers.\n*   Each group (except the first one) must have a length strictly greater than the previous group.\n\nReturn the maximum number of groups that can be created while satisfying these conditions.",
                "constraints": [
                    "1 <= usageLimits.length <= 10^5",
                    "1 <= usageLimits[i] <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "[1,2,5]",
                        "output": "3",
                        "explanation": "With usageLimits = [1, 2, 5], one valid arrangement of groups is: Group 1: [2], Group 2: [1, 2], Group 3: [0, 1, 2].  The maximum number of groups achievable is 3."
                    },
                    {
                        "input": "[2,1,2]",
                        "output": "2",
                        "explanation": "With usageLimits = [2, 1, 2], one valid arrangement of groups is: Group 1: [0], Group 2: [1, 2]. The maximum number of groups achievable is 2."
                    },
                    {
                        "input": "[1,1]",
                        "output": "1",
                        "explanation": "With usageLimits = [1, 1], one valid arrangement of groups is: Group 1: [0]. The maximum number of groups achievable is 1."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "group-the-people-given-the-group-size-they-belong-to",
                "title": "Group the People Given the Group Size They Belong To",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "Can we solve this problem using sorting and binary search?\r\nSort the array in increasing order and run a binary search on the number of groups, x.\r\nTo determine if a value x is feasible, greedily distribute the numbers such that each group receives 1, 2, 3, ..., x numbers.",
            "Sort the array in increasing order and run a binary search on the number of groups, x.",
            "To determine if a value x is feasible, greedily distribute the numbers such that each group receives 1, 2, 3, ..., x numbers."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ]
    }
}