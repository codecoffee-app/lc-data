{
    "failed": false,
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "3228",
            "title": "Maximum Number of Operations to Move Ones to the End",
            "titleSlug": "maximum-number-of-operations-to-move-ones-to-the-end",
            "content": "<p>You are given a <span data-keyword=\"binary-string\">binary string</span> <code>s</code>.</p>\n\n<p>You can perform the following operation on the string <strong>any</strong> number of times:</p>\n\n<ul>\n\t<li>Choose <strong>any</strong> index <code>i</code> from the string where <code>i + 1 &lt; s.length</code> such that <code>s[i] == &#39;1&#39;</code> and <code>s[i + 1] == &#39;0&#39;</code>.</li>\n\t<li>Move the character <code>s[i]</code> to the <strong>right</strong> until it reaches the end of the string or another <code>&#39;1&#39;</code>. For example, for <code>s = &quot;010010&quot;</code>, if we choose <code>i = 1</code>, the resulting string will be <code>s = &quot;0<strong><u>001</u></strong>10&quot;</code>.</li>\n</ul>\n\n<p>Return the <strong>maximum</strong> number of operations that you can perform.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">s = &quot;1001101&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">4</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>We can perform the following operations:</p>\n\n<ul>\n\t<li>Choose index <code>i = 0</code>. The resulting string is <code>s = &quot;<u><strong>001</strong></u>1101&quot;</code>.</li>\n\t<li>Choose index <code>i = 4</code>. The resulting string is <code>s = &quot;0011<u><strong>01</strong></u>1&quot;</code>.</li>\n\t<li>Choose index <code>i = 3</code>. The resulting string is <code>s = &quot;001<strong><u>01</u></strong>11&quot;</code>.</li>\n\t<li>Choose index <code>i = 2</code>. The resulting string is <code>s = &quot;00<strong><u>01</u></strong>111&quot;</code>.</li>\n</ul>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">s = &quot;00111&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">0</span></p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>s[i]</code> is either <code>&#39;0&#39;</code> or <code>&#39;1&#39;</code>.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 125,
            "dislikes": 8,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "stats": "{\"totalAccepted\": \"24.2K\", \"totalSubmission\": \"45.7K\", \"totalAcceptedRaw\": 24227, \"totalSubmissionRaw\": 45707, \"acRate\": \"53.0%\"}",
            "hints": [
                "It is optimal to perform the operation on the lowest index possible each time.",
                "Traverse the string from left to right and perform the operation every time it is possible."
            ],
            "rephrased": {
                "body": "Given a binary string `s`, you can perform the following operation any number of times:\n\nChoose an index `i` such that `i + 1 < s.length` and `s[i] == '1'` and `s[i + 1] == '0'`. Move the '1' at index `i` to the right until it reaches the end of the string or another '1'.\n\nReturn the maximum number of such operations that can be performed on the string `s`.",
                "constraints": [
                    "1 <= s.length <= 10^5",
                    "s[i] is either '0' or '1'."
                ],
                "testcases": [
                    {
                        "input": "1001101",
                        "output": "4",
                        "explanation": "We can perform the following operations:\n\n1. Choose index i = 0. The resulting (intermediate) string would be \"0011101\".\n2. Choose index i = 4. The resulting (intermediate) string would be \"0011011\".\n3. Choose index i = 3. The resulting (intermediate) string would be \"0010111\".\n4. Choose index i = 2. The resulting (intermediate) string would be \"0001111\"."
                    },
                    {
                        "input": "00111",
                        "output": "0",
                        "explanation": "No operations can be performed because there are no adjacent '10' pairs where '1' can be moved."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "It is optimal to perform the operation on the lowest index possible each time.",
            "Traverse the string from left to right and perform the operation every time it is possible."
        ],
        "relatedTopics": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ]
    }
}