{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1753",
            "title": "Maximum Score From Removing Stones",
            "titleSlug": "maximum-score-from-removing-stones",
            "content": "<p>You are playing a solitaire game with <strong>three piles</strong> of stones of sizes <code>a</code>\u200b\u200b\u200b\u200b\u200b\u200b, <code>b</code>,\u200b\u200b\u200b\u200b\u200b\u200b and <code>c</code>\u200b\u200b\u200b\u200b\u200b\u200b respectively. Each turn you choose two <strong>different non-empty </strong>piles, take one stone from each, and add <code>1</code> point to your score. The game stops when there are <strong>fewer than two non-empty</strong> piles (meaning there are no more available moves).</p>\n\n<p>Given three integers <code>a</code>\u200b\u200b\u200b\u200b\u200b, <code>b</code>,\u200b\u200b\u200b\u200b\u200b and <code>c</code>\u200b\u200b\u200b\u200b\u200b, return <em>the</em> <strong><em>maximum</em> </strong><em><strong>score</strong> you can get.</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> a = 2, b = 4, c = 6\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> The starting state is (2, 4, 6). One optimal set of moves is:\n- Take from 1st and 3rd piles, state is now (1, 4, 5)\n- Take from 1st and 3rd piles, state is now (0, 4, 4)\n- Take from 2nd and 3rd piles, state is now (0, 3, 3)\n- Take from 2nd and 3rd piles, state is now (0, 2, 2)\n- Take from 2nd and 3rd piles, state is now (0, 1, 1)\n- Take from 2nd and 3rd piles, state is now (0, 0, 0)\nThere are fewer than two non-empty piles, so the game ends. Total: 6 points.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> a = 4, b = 4, c = 6\n<strong>Output:</strong> 7\n<strong>Explanation:</strong> The starting state is (4, 4, 6). One optimal set of moves is:\n- Take from 1st and 2nd piles, state is now (3, 3, 6)\n- Take from 1st and 3rd piles, state is now (2, 3, 5)\n- Take from 1st and 3rd piles, state is now (1, 3, 4)\n- Take from 1st and 3rd piles, state is now (0, 3, 3)\n- Take from 2nd and 3rd piles, state is now (0, 2, 2)\n- Take from 2nd and 3rd piles, state is now (0, 1, 1)\n- Take from 2nd and 3rd piles, state is now (0, 0, 0)\nThere are fewer than two non-empty piles, so the game ends. Total: 7 points.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> a = 1, b = 8, c = 8\n<strong>Output:</strong> 8\n<strong>Explanation:</strong> One optimal set of moves is to take from the 2nd and 3rd piles for 8 turns until they are empty.\nAfter that, there are fewer than two non-empty piles, so the game ends.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= a, b, c &lt;= 10<sup>5</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 903,
            "dislikes": 53,
            "similarQuestions": "[{\"title\": \"Minimum Amount of Time to Fill Cups\", \"titleSlug\": \"minimum-amount-of-time-to-fill-cups\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "stats": "{\"totalAccepted\": \"36.9K\", \"totalSubmission\": \"54.4K\", \"totalAcceptedRaw\": 36850, \"totalSubmissionRaw\": 54445, \"acRate\": \"67.7%\"}",
            "hints": [
                "It's optimal to always remove one stone from the biggest 2 piles",
                "Note that the limits are small enough for simulation"
            ],
            "rephrased": {
                "body": "You are given three piles of stones with sizes `a`, `b`, and `c`. In each turn, you can choose two different non-empty piles, take one stone from each, and add 1 to your score. The game ends when there are fewer than two non-empty piles.  Your task is to determine the maximum score you can achieve.",
                "constraints": [
                    "1 <= a, b, c <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "a = 2, b = 4, c = 6",
                        "output": "6",
                        "explanation": "Starting with (2, 4, 6), a series of optimal moves leads to an empty state. For instance:\n- (2, 4, 6) -> (1, 4, 5)\n- (1, 4, 5) -> (0, 4, 4)\n- (0, 4, 4) -> (0, 3, 3)\n- (0, 3, 3) -> (0, 2, 2)\n- (0, 2, 2) -> (0, 1, 1)\n- (0, 1, 1) -> (0, 0, 0)\nTotal score: 6"
                    },
                    {
                        "input": "a = 4, b = 4, c = 6",
                        "output": "7",
                        "explanation": "Starting with (4, 4, 6), a sequence of optimal moves results in a score of 7. Example:\n- (4, 4, 6) -> (3, 3, 6)\n- (3, 3, 6) -> (2, 3, 5)\n- (2, 3, 5) -> (1, 3, 4)\n- (1, 3, 4) -> (0, 3, 3)\n- (0, 3, 3) -> (0, 2, 2)\n- (0, 2, 2) -> (0, 1, 1)\n- (0, 1, 1) -> (0, 0, 0)\nTotal score: 7"
                    },
                    {
                        "input": "a = 1, b = 8, c = 8",
                        "output": "8",
                        "explanation": "An optimal strategy involves taking stones from the two largest piles (b and c) until one is depleted, in this case scoring 8 points.  The game then ends since there are less than 2 piles with stones."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Easy",
                "titleSlug": "minimum-amount-of-time-to-fill-cups",
                "title": "Minimum Amount of Time to Fill Cups",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "It's optimal to always remove one stone from the biggest 2 piles",
            "Note that the limits are small enough for simulation"
        ],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ]
    }
}