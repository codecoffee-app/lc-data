{
    "failed": false,
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "3002",
            "title": "Maximum Size of a Set After Removals",
            "titleSlug": "maximum-size-of-a-set-after-removals",
            "content": "<p>You are given two <strong>0-indexed</strong> integer arrays <code>nums1</code> and <code>nums2</code> of even length <code>n</code>.</p>\n\n<p>You must remove <code>n / 2</code> elements from <code>nums1</code> and <code>n / 2</code> elements from <code>nums2</code>. After the removals, you insert the remaining elements of <code>nums1</code> and <code>nums2</code> into a set <code>s</code>.</p>\n\n<p>Return <em>the <strong>maximum</strong> possible size of the set</em> <code>s</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [1,2,1,2], nums2 = [1,1,1,1]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> We remove two occurences of 1 from nums1 and nums2. After the removals, the arrays become equal to nums1 = [2,2] and nums2 = [1,1]. Therefore, s = {1,2}.\nIt can be shown that 2 is the maximum possible size of the set s after the removals.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [1,2,3,4,5,6], nums2 = [2,3,2,3,2,3]\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> We remove 2, 3, and 6 from nums1, as well as 2 and two occurrences of 3 from nums2. After the removals, the arrays become equal to nums1 = [1,4,5] and nums2 = [2,3,2]. Therefore, s = {1,2,3,4,5}.\nIt can be shown that 5 is the maximum possible size of the set s after the removals.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [1,1,2,2,3,3], nums2 = [4,4,5,5,6,6]\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> We remove 1, 2, and 3 from nums1, as well as 4, 5, and 6 from nums2. After the removals, the arrays become equal to nums1 = [1,2,3] and nums2 = [4,5,6]. Therefore, s = {1,2,3,4,5,6}.\nIt can be shown that 6 is the maximum possible size of the set s after the removals.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == nums1.length == nums2.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 2 * 10<sup>4</sup></code></li>\n\t<li><code>n</code> is even.</li>\n\t<li><code>1 &lt;= nums1[i], nums2[i] &lt;= 10<sup>9</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 275,
            "dislikes": 24,
            "similarQuestions": "[{\"title\": \"Intersection of Two Arrays\", \"titleSlug\": \"intersection-of-two-arrays\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "stats": "{\"totalAccepted\": \"14.8K\", \"totalSubmission\": \"32.7K\", \"totalAcceptedRaw\": 14808, \"totalSubmissionRaw\": 32721, \"acRate\": \"45.3%\"}",
            "hints": [
                "Removing <code>n / 2</code> elements from each array is the same as keeping <code>n / 2<code> elements in each array.",
                "Think of a greedy algorithm.",
                "For each array, we will greedily keep the elements that are only in that array. Once we run out of such elements, we will keep the elements that are common to both arrays."
            ],
            "rephrased": {
                "body": "Given two 0-indexed integer arrays `nums1` and `nums2` of even length `n`, you must remove `n / 2` elements from each array. After the removals, insert the remaining elements of `nums1` and `nums2` into a set `s`. Return the maximum possible size of the set `s`.",
                "constraints": [
                    "`n == nums1.length == nums2.length`",
                    "`1 <= n <= 2 * 10^4`",
                    "`n` is even.",
                    "`1 <= nums1[i], nums2[i] <= 10^9`"
                ],
                "testcases": [
                    {
                        "input": "nums1 = [1,2,1,2], nums2 = [1,1,1,1]",
                        "output": "2",
                        "explanation": "By removing two occurrences of 1 from both `nums1` and `nums2`, we are left with `nums1 = [2,2]` and `nums2 = [1,1]`. The resulting set s = {1,2}, which has a size of 2. It can be proven that this is the maximum possible size."
                    },
                    {
                        "input": "nums1 = [1,2,3,4,5,6], nums2 = [2,3,2,3,2,3]",
                        "output": "5",
                        "explanation": "By removing 2, 3, and 6 from `nums1` and 2 and two occurrences of 3 from `nums2`, we are left with `nums1 = [1,4,5]` and `nums2 = [2,3,2]`. The resulting set s = {1,2,3,4,5}, which has a size of 5. It can be proven that this is the maximum possible size."
                    },
                    {
                        "input": "nums1 = [1,1,2,2,3,3], nums2 = [4,4,5,5,6,6]",
                        "output": "6",
                        "explanation": "By removing 1, 2, and 3 from `nums1` and 4, 5, and 6 from `nums2`, we are left with `nums1 = [1,2,3]` and `nums2 = [4,5,6]`. The resulting set s = {1,2,3,4,5,6}, which has a size of 6. It can be proven that this is the maximum possible size."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Easy",
                "titleSlug": "intersection-of-two-arrays",
                "title": "Intersection of Two Arrays",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "Removing <code>n / 2</code> elements from each array is the same as keeping <code>n / 2<code> elements in each array.",
            "Think of a greedy algorithm.",
            "For each array, we will greedily keep the elements that are only in that array. Once we run out of such elements, we will keep the elements that are common to both arrays."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ]
    }
}