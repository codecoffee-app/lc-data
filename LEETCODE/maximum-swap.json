{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "670",
            "title": "Maximum Swap",
            "titleSlug": "maximum-swap",
            "content": "<p>You are given an integer <code>num</code>. You can swap two digits at most once to get the maximum valued number.</p>\n\n<p>Return <em>the maximum valued number you can get</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = 2736\n<strong>Output:</strong> 7236\n<strong>Explanation:</strong> Swap the number 2 and the number 7.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = 9973\n<strong>Output:</strong> 9973\n<strong>Explanation:</strong> No swap.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= num &lt;= 10<sup>8</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 3261,
            "dislikes": 185,
            "similarQuestions": "[{\"title\": \"Create Maximum Number\", \"titleSlug\": \"create-maximum-number\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "stats": "{\"totalAccepted\": \"221K\", \"totalSubmission\": \"458.6K\", \"totalAcceptedRaw\": 220997, \"totalSubmissionRaw\": 458581, \"acRate\": \"48.2%\"}",
            "hints": [],
            "rephrased": {
                "body": "Given an integer `num`, you can swap two digits at most once to obtain the largest possible number. Return the maximum valued number achievable through a single swap or no swap if the number is already maximized.",
                "constraints": [
                    "0 <= num <= 10^8"
                ],
                "testcases": [
                    {
                        "input": 2736,
                        "output": 7236,
                        "explanation": "By swapping the digits 2 and 7, we obtain the number 7236, which is the largest possible number achievable with one swap."
                    },
                    {
                        "input": 9973,
                        "output": 9973,
                        "explanation": "The number 9973 is already the largest possible number achievable. No swap is necessary."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Hard",
                "titleSlug": "create-maximum-number",
                "title": "Create Maximum Number",
                "isPaidOnly": false
            }
        ],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int maximumSwap(int num) {\n    string s = to_string(num);\n    vector<int> lastIndex(10, -1);  // {digit: last index}\n\n    for (int i = 0; i < s.length(); ++i)\n      lastIndex[s[i] - '0'] = i;\n\n    for (int i = 0; i < s.length(); ++i)\n      for (int d = 9; d > s[i] - '0'; --d)\n        if (lastIndex[d] > i) {\n          swap(s[i], s[lastIndex[d]]);\n          return stoi(s);\n        }\n\n    return num;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int maximumSwap(int num) {\n    char[] s = Integer.toString(num).toCharArray();\n    int[] lastIndex = new int[10]; // {digit: last index}\n\n    for (int i = 0; i < s.length; ++i)\n      lastIndex[s[i] - '0'] = i;\n\n    for (int i = 0; i < s.length; ++i)\n      for (int d = 9; d > s[i] - '0'; --d)\n        if (lastIndex[d] > i) {\n          s[lastIndex[d]] = s[i];\n          s[i] = (char) ('0' + d);\n          return Integer.parseInt(new String(s));\n        }\n\n    return num;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def maximumSwap(self, num: int) -> int:\n    s = list(str(num))\n    dict = {c: i for i, c in enumerate(s)}\n\n    for i, c in enumerate(s):\n      for digit in reversed(string.digits):\n        if digit <= c:\n          break\n        if digit in dict and dict[digit] > i:\n          s[i], s[dict[digit]] = digit, s[i]\n          return int(''.join(s))\n\n    return num\n",
                "lang_text": "py"
            }
        }
    }
}