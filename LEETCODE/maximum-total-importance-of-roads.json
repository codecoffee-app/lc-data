{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2285",
            "title": "Maximum Total Importance of Roads",
            "titleSlug": "maximum-total-importance-of-roads",
            "content": "<p>You are given an integer <code>n</code> denoting the number of cities in a country. The cities are numbered from <code>0</code> to <code>n - 1</code>.</p>\n\n<p>You are also given a 2D integer array <code>roads</code> where <code>roads[i] = [a<sub>i</sub>, b<sub>i</sub>]</code> denotes that there exists a <strong>bidirectional</strong> road connecting cities <code>a<sub>i</sub></code> and <code>b<sub>i</sub></code>.</p>\n\n<p>You need to assign each city with an integer value from <code>1</code> to <code>n</code>, where each value can only be used <strong>once</strong>. The <strong>importance</strong> of a road is then defined as the <strong>sum</strong> of the values of the two cities it connects.</p>\n\n<p>Return <em>the <strong>maximum total importance</strong> of all roads possible after assigning the values optimally.</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2022/04/07/ex1drawio.png\" style=\"width: 290px; height: 215px;\" />\n<pre>\n<strong>Input:</strong> n = 5, roads = [[0,1],[1,2],[2,3],[0,2],[1,3],[2,4]]\n<strong>Output:</strong> 43\n<strong>Explanation:</strong> The figure above shows the country and the assigned values of [2,4,5,3,1].\n- The road (0,1) has an importance of 2 + 4 = 6.\n- The road (1,2) has an importance of 4 + 5 = 9.\n- The road (2,3) has an importance of 5 + 3 = 8.\n- The road (0,2) has an importance of 2 + 5 = 7.\n- The road (1,3) has an importance of 4 + 3 = 7.\n- The road (2,4) has an importance of 5 + 1 = 6.\nThe total importance of all roads is 6 + 9 + 8 + 7 + 7 + 6 = 43.\nIt can be shown that we cannot obtain a greater total importance than 43.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2022/04/07/ex2drawio.png\" style=\"width: 281px; height: 151px;\" />\n<pre>\n<strong>Input:</strong> n = 5, roads = [[0,3],[2,4],[1,3]]\n<strong>Output:</strong> 20\n<strong>Explanation:</strong> The figure above shows the country and the assigned values of [4,3,2,5,1].\n- The road (0,3) has an importance of 4 + 5 = 9.\n- The road (2,4) has an importance of 2 + 1 = 3.\n- The road (1,3) has an importance of 3 + 5 = 8.\nThe total importance of all roads is 9 + 3 + 8 = 20.\nIt can be shown that we cannot obtain a greater total importance than 20.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= n &lt;= 5 * 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= roads.length &lt;= 5 * 10<sup>4</sup></code></li>\n\t<li><code>roads[i].length == 2</code></li>\n\t<li><code>0 &lt;= a<sub>i</sub>, b<sub>i</sub> &lt;= n - 1</code></li>\n\t<li><code>a<sub>i</sub> != b<sub>i</sub></code></li>\n\t<li>There are no duplicate roads.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 699,
            "dislikes": 28,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Graph",
                    "slug": "graph"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "stats": "{\"totalAccepted\": \"30.5K\", \"totalSubmission\": \"50K\", \"totalAcceptedRaw\": 30462, \"totalSubmissionRaw\": 49968, \"acRate\": \"61.0%\"}",
            "hints": [
                "Consider what each city contributes to the total importance of all roads.",
                "Based on that, how can you sort the cities such that assigning them values in that order will yield the maximum total importance?"
            ],
            "rephrased": {
                "body": "Given an integer `n` representing the number of cities (numbered 0 to n-1) in a country, and a 2D integer array `roads` where `roads[i] = [a_i, b_i]` indicates a bidirectional road between cities `a_i` and `b_i`.  Assign each city a unique integer value from 1 to `n`. The importance of a road is the sum of the values assigned to the two cities it connects. Determine the maximum possible total importance of all roads after optimally assigning values to the cities.",
                "constraints": [
                    "2 <= n <= 5 * 10^4",
                    "1 <= roads.length <= 5 * 10^4",
                    "roads[i].length == 2",
                    "0 <= a_i, b_i <= n - 1",
                    "a_i != b_i",
                    "There are no duplicate roads."
                ],
                "testcases": [
                    {
                        "input": "n = 5, roads = [[0,1],[1,2],[2,3],[0,2],[1,3],[2,4]]",
                        "output": "43",
                        "explanation": "By assigning values [2,4,5,3,1] to cities [0,1,2,3,4] respectively, the road importances are: (0,1): 6, (1,2): 9, (2,3): 8, (0,2): 7, (1,3): 7, (2,4): 6. The total importance is 6 + 9 + 8 + 7 + 7 + 6 = 43.  This is the maximum possible total importance."
                    },
                    {
                        "input": "n = 5, roads = [[0,3],[2,4],[1,3]]",
                        "output": "20",
                        "explanation": "By assigning values [4,3,2,5,1] to cities [0,1,2,3,4] respectively, the road importances are: (0,3): 9, (2,4): 3, (1,3): 8. The total importance is 9 + 3 + 8 = 20. This is the maximum possible total importance."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "Consider what each city contributes to the total importance of all roads.",
            "Based on that, how can you sort the cities such that assigning them values in that order will yield the maximum total importance?"
        ],
        "relatedTopics": [
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Graph",
                "slug": "graph"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  long long maximumImportance(int n, vector<vector<int>>& roads) {\n    long long ans = 0;\n    vector<long long> count(n);\n\n    for (const vector<int>& r : roads) {\n      ++count[r[0]];\n      ++count[r[1]];\n    }\n\n    std::ranges::sort(count);\n\n    for (int i = 0; i < n; ++i)\n      ans += (i + 1) * count[i];\n\n    return ans;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public long maximumImportance(int n, int[][] roads) {\n    long ans = 0;\n    long[] count = new long[n];\n\n    for (int[] r : roads) {\n      ++count[r[0]];\n      ++count[r[1]];\n    }\n\n    Arrays.sort(count);\n\n    for (int i = 0; i < n; ++i)\n      ans += (i + 1) * count[i];\n\n    return ans;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def maximumImportance(self, n: int, roads: List[List[int]]) -> int:\n    count = [0] * n\n\n    for u, v in roads:\n      count[u] += 1\n      count[v] += 1\n\n    count.sort()\n    return sum((i + 1) * c for i, c in enumerate(count))\n",
                "lang_text": "py"
            }
        }
    }
}