{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2218",
            "title": "Maximum Value of K Coins From Piles",
            "titleSlug": "maximum-value-of-k-coins-from-piles",
            "content": "<p>There are <code>n</code> <strong>piles</strong> of coins on a table. Each pile consists of a <strong>positive number</strong> of coins of assorted denominations.</p>\n\n<p>In one move, you can choose any coin on <strong>top</strong> of any pile, remove it, and add it to your wallet.</p>\n\n<p>Given a list <code>piles</code>, where <code>piles[i]</code> is a list of integers denoting the composition of the <code>i<sup>th</sup></code> pile from <strong>top to bottom</strong>, and a positive integer <code>k</code>, return <em>the <strong>maximum total value</strong> of coins you can have in your wallet if you choose <strong>exactly</strong></em> <code>k</code> <em>coins optimally</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/11/09/e1.png\" style=\"width: 600px; height: 243px;\" />\n<pre>\n<strong>Input:</strong> piles = [[1,100,3],[7,8,9]], k = 2\n<strong>Output:</strong> 101\n<strong>Explanation:</strong>\nThe above diagram shows the different ways we can choose k coins.\nThe maximum total we can obtain is 101.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> piles = [[100],[100],[100],[100],[100],[100],[1,1,1,1,1,1,700]], k = 7\n<strong>Output:</strong> 706\n<strong>Explanation:\n</strong>The maximum total can be obtained if we choose all coins from the last pile.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == piles.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 1000</code></li>\n\t<li><code>1 &lt;= piles[i][j] &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= k &lt;= sum(piles[i].length) &lt;= 2000</code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 2224,
            "dislikes": 36,
            "similarQuestions": "[{\"title\": \"Coin Change\", \"titleSlug\": \"coin-change\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Coin Change II\", \"titleSlug\": \"coin-change-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "stats": "{\"totalAccepted\": \"62.4K\", \"totalSubmission\": \"102.6K\", \"totalAcceptedRaw\": 62403, \"totalSubmissionRaw\": 102629, \"acRate\": \"60.8%\"}",
            "hints": [
                "For each pile i, what will be the total value of coins we can collect if we choose the first j coins?",
                "How can we use dynamic programming to combine the results from different piles to find the most optimal answer?"
            ],
            "rephrased": {
                "body": "Given `n` piles of coins, where each pile `piles[i]` contains a list of integers representing the coins from top to bottom, and a positive integer `k`, determine the maximum total value of coins you can collect by choosing exactly `k` coins optimally. You can only take coins from the top of each pile.",
                "constraints": [
                    "n == piles.length",
                    "1 <= n <= 1000",
                    "1 <= piles[i][j] <= 10^5",
                    "1 <= k <= sum(piles[i].length) <= 2000"
                ],
                "testcases": [
                    {
                        "input": "piles = [[1,100,3],[7,8,9]], k = 2",
                        "output": "101",
                        "explanation": "Choosing the coin with value 100 from the first pile and the coin with value 1 from the same pile yields a total value of 101.  This is the optimal choice to achieve a total value of 101."
                    },
                    {
                        "input": "piles = [[100],[100],[100],[100],[100],[100],[1,1,1,1,1,1,700]], k = 7",
                        "output": "706",
                        "explanation": "Selecting all the coins from the last pile (1, 1, 1, 1, 1, 1, 700) results in a total value of 706, which is the maximum obtainable with k = 7 coins."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "coin-change",
                "title": "Coin Change",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "coin-change-ii",
                "title": "Coin Change II",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "For each pile i, what will be the total value of coins we can collect if we choose the first j coins?",
            "How can we use dynamic programming to combine the results from different piles to find the most optimal answer?"
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ]
    }
}