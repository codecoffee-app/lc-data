{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "962",
            "title": "Maximum Width Ramp",
            "titleSlug": "maximum-width-ramp",
            "content": "<p>A <strong>ramp</strong> in an integer array <code>nums</code> is a pair <code>(i, j)</code> for which <code>i &lt; j</code> and <code>nums[i] &lt;= nums[j]</code>. The <strong>width</strong> of such a ramp is <code>j - i</code>.</p>\n\n<p>Given an integer array <code>nums</code>, return <em>the maximum width of a <strong>ramp</strong> in </em><code>nums</code>. If there is no <strong>ramp</strong> in <code>nums</code>, return <code>0</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [6,0,8,2,1,5]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> The maximum width ramp is achieved at (i, j) = (1, 5): nums[1] = 0 and nums[5] = 5.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [9,8,1,0,1,9,4,0,4,1]\n<strong>Output:</strong> 7\n<strong>Explanation:</strong> The maximum width ramp is achieved at (i, j) = (2, 9): nums[2] = 1 and nums[9] = 1.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= nums.length &lt;= 5 * 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 5 * 10<sup>4</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 1611,
            "dislikes": 47,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "stats": "{\"totalAccepted\": \"44K\", \"totalSubmission\": \"89K\", \"totalAcceptedRaw\": 44013, \"totalSubmissionRaw\": 88955, \"acRate\": \"49.5%\"}",
            "hints": [],
            "rephrased": {
                "body": "Given an integer array `nums`, a ramp is defined as a pair `(i, j)` where `i < j` and `nums[i] <= nums[j]`. The width of the ramp is `j - i`. Find the maximum width of any ramp in `nums`. If no ramp exists, return 0.",
                "constraints": [
                    "2 <= nums.length <= 5 * 10^4",
                    "0 <= nums[i] <= 5 * 10^4"
                ],
                "testcases": [
                    {
                        "input": "[6,0,8,2,1,5]",
                        "output": "4",
                        "explanation": "The maximum width ramp is achieved at (i, j) = (1, 5) because nums[1] = 0 and nums[5] = 5, resulting in a width of 5 - 1 = 4."
                    },
                    {
                        "input": "[9,8,1,0,1,9,4,0,4,1]",
                        "output": "7",
                        "explanation": "The maximum width ramp is achieved at (i, j) = (2, 9) because nums[2] = 1 and nums[9] = 1, resulting in a width of 9 - 2 = 7."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int maxWidthRamp(vector<int>& nums) {\n    int ans = 0;\n    stack<int> stack;\n\n    for (int i = 0; i < nums.size(); ++i)\n      if (stack.empty() || nums[i] < nums[stack.top()])\n        stack.push(i);\n\n    for (int i = nums.size() - 1; i > ans; --i)\n      while (!stack.empty() && nums[i] >= nums[stack.top()])\n        ans = max(ans, i - stack.top()), stack.pop();\n\n    return ans;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int maxWidthRamp(int[] nums) {\n    int ans = 0;\n    Deque<Integer> stack = new ArrayDeque<>();\n\n    for (int i = 0; i < nums.length; ++i)\n      if (stack.isEmpty() || nums[i] < nums[stack.peek()])\n        stack.push(i);\n\n    for (int i = nums.length - 1; i > ans; --i)\n      while (!stack.isEmpty() && nums[i] >= nums[stack.peek()])\n        ans = Math.max(ans, i - stack.pop());\n\n    return ans;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def maxWidthRamp(self, nums: List[int]) -> int:\n    ans = 0\n    stack = []\n\n    for i, num in enumerate(nums):\n      if stack == [] or num <= nums[stack[-1]]:\n        stack.append(i)\n\n    for i, num in reversed(list(enumerate(nums))):\n      while stack and num >= nums[stack[-1]]:\n        ans = max(ans, i - stack.pop())\n\n    return ans\n",
                "lang_text": "py"
            }
        }
    }
}