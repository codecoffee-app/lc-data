{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1829",
            "title": "Maximum XOR for Each Query",
            "titleSlug": "maximum-xor-for-each-query",
            "content": "<p>You are given a <strong>sorted</strong> array <code>nums</code> of <code>n</code> non-negative integers and an integer <code>maximumBit</code>. You want to perform the following query <code>n</code> <strong>times</strong>:</p>\n\n<ol>\n\t<li>Find a non-negative integer <code>k &lt; 2<sup>maximumBit</sup></code> such that <code>nums[0] XOR nums[1] XOR ... XOR nums[nums.length-1] XOR k</code> is <strong>maximized</strong>. <code>k</code> is the answer to the <code>i<sup>th</sup></code> query.</li>\n\t<li>Remove the <strong>last </strong>element from the current array <code>nums</code>.</li>\n</ol>\n\n<p>Return <em>an array</em> <code>answer</code><em>, where </em><code>answer[i]</code><em> is the answer to the </em><code>i<sup>th</sup></code><em> query</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [0,1,1,3], maximumBit = 2\n<strong>Output:</strong> [0,3,2,3]\n<strong>Explanation</strong>: The queries are answered as follows:\n1<sup>st</sup> query: nums = [0,1,1,3], k = 0 since 0 XOR 1 XOR 1 XOR 3 XOR 0 = 3.\n2<sup>nd</sup> query: nums = [0,1,1], k = 3 since 0 XOR 1 XOR 1 XOR 3 = 3.\n3<sup>rd</sup> query: nums = [0,1], k = 2 since 0 XOR 1 XOR 2 = 3.\n4<sup>th</sup> query: nums = [0], k = 3 since 0 XOR 3 = 3.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,3,4,7], maximumBit = 3\n<strong>Output:</strong> [5,2,6,5]\n<strong>Explanation</strong>: The queries are answered as follows:\n1<sup>st</sup> query: nums = [2,3,4,7], k = 5 since 2 XOR 3 XOR 4 XOR 7 XOR 5 = 7.\n2<sup>nd</sup> query: nums = [2,3,4], k = 2 since 2 XOR 3 XOR 4 XOR 2 = 7.\n3<sup>rd</sup> query: nums = [2,3], k = 6 since 2 XOR 3 XOR 6 = 7.\n4<sup>th</sup> query: nums = [2], k = 5 since 2 XOR 5 = 7.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [0,1,2,2,5,7], maximumBit = 3\n<strong>Output:</strong> [4,3,6,4,6,7]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>nums.length == n</code></li>\n\t<li><code>1 &lt;= n &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= maximumBit &lt;= 20</code></li>\n\t<li><code>0 &lt;= nums[i] &lt; 2<sup>maximumBit</sup></code></li>\n\t<li><code>nums</code>\u200b\u200b\u200b is sorted in <strong>ascending</strong> order.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 735,
            "dislikes": 57,
            "similarQuestions": "[{\"title\": \"Count the Number of Beautiful Subarrays\", \"titleSlug\": \"count-the-number-of-beautiful-subarrays\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "stats": "{\"totalAccepted\": \"26.2K\", \"totalSubmission\": \"34K\", \"totalAcceptedRaw\": 26204, \"totalSubmissionRaw\": 33970, \"acRate\": \"77.1%\"}",
            "hints": [
                "Note that the maximum possible XOR result is always 2^(maximumBit) - 1",
                "So the answer for a prefix is the XOR of that prefix XORed with 2^(maximumBit)-1"
            ],
            "rephrased": {
                "body": "Given a sorted array `nums` of `n` non-negative integers and an integer `maximumBit`, perform the following query `n` times:\n\n1.  Find a non-negative integer `k < 2^maximumBit` such that `nums[0] XOR nums[1] XOR ... XOR nums[nums.length-1] XOR k` is maximized.  `k` is the answer to the `i`th query.\n2.  Remove the last element from the current array `nums`.\n\nReturn an array `answer`, where `answer[i]` is the answer to the `i`th query.",
                "constraints": [
                    "`nums.length == n`",
                    "`1 <= n <= 10^5`",
                    "`1 <= maximumBit <= 20`",
                    "`0 <= nums[i] < 2^maximumBit`",
                    "`nums` is sorted in ascending order."
                ],
                "testcases": [
                    {
                        "input": "nums = [0,1,1,3], maximumBit = 2",
                        "output": "[0,3,2,3]",
                        "explanation": "For the first query, `nums = [0,1,1,3]`. The maximum XOR sum is achieved with `k = 0` because `0 XOR 1 XOR 1 XOR 3 XOR 0 = 3`.\nFor the second query, `nums = [0,1,1]`. The maximum XOR sum is achieved with `k = 3` because `0 XOR 1 XOR 1 XOR 3 = 3`.\nFor the third query, `nums = [0,1]`. The maximum XOR sum is achieved with `k = 2` because `0 XOR 1 XOR 2 = 3`.\nFor the fourth query, `nums = [0]`. The maximum XOR sum is achieved with `k = 3` because `0 XOR 3 = 3`."
                    },
                    {
                        "input": "nums = [2,3,4,7], maximumBit = 3",
                        "output": "[5,2,6,5]",
                        "explanation": "For the first query, `nums = [2,3,4,7]`. The maximum XOR sum is achieved with `k = 5` because `2 XOR 3 XOR 4 XOR 7 XOR 5 = 7`.\nFor the second query, `nums = [2,3,4]`. The maximum XOR sum is achieved with `k = 2` because `2 XOR 3 XOR 4 XOR 2 = 7`.\nFor the third query, `nums = [2,3]`. The maximum XOR sum is achieved with `k = 6` because `2 XOR 3 XOR 6 = 7`.\nFor the fourth query, `nums = [2]`. The maximum XOR sum is achieved with `k = 5` because `2 XOR 5 = 7`."
                    },
                    {
                        "input": "nums = [0,1,2,2,5,7], maximumBit = 3",
                        "output": "[4,3,6,4,6,7]",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "count-the-number-of-beautiful-subarrays",
                "title": "Count the Number of Beautiful Subarrays",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "Note that the maximum possible XOR result is always 2^(maximumBit) - 1",
            "So the answer for a prefix is the XOR of that prefix XORed with 2^(maximumBit)-1"
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ]
    }
}