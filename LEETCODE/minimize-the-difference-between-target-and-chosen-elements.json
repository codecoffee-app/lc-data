{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1981",
            "title": "Minimize the Difference Between Target and Chosen Elements",
            "titleSlug": "minimize-the-difference-between-target-and-chosen-elements",
            "content": "<p>You are given an <code>m x n</code> integer matrix <code>mat</code> and an integer <code>target</code>.</p>\n\n<p>Choose one integer from <strong>each row</strong> in the matrix such that the <strong>absolute difference</strong> between <code>target</code> and the <strong>sum</strong> of the chosen elements is <strong>minimized</strong>.</p>\n\n<p>Return <em>the <strong>minimum absolute difference</strong></em>.</p>\n\n<p>The <strong>absolute difference</strong> between two numbers <code>a</code> and <code>b</code> is the absolute value of <code>a - b</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/08/03/matrix1.png\" style=\"width: 181px; height: 181px;\" />\n<pre>\n<strong>Input:</strong> mat = [[1,2,3],[4,5,6],[7,8,9]], target = 13\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> One possible choice is to:\n- Choose 1 from the first row.\n- Choose 5 from the second row.\n- Choose 7 from the third row.\nThe sum of the chosen elements is 13, which equals the target, so the absolute difference is 0.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/08/03/matrix1-1.png\" style=\"width: 61px; height: 181px;\" />\n<pre>\n<strong>Input:</strong> mat = [[1],[2],[3]], target = 100\n<strong>Output:</strong> 94\n<strong>Explanation:</strong> The best possible choice is to:\n- Choose 1 from the first row.\n- Choose 2 from the second row.\n- Choose 3 from the third row.\nThe sum of the chosen elements is 6, and the absolute difference is 94.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/08/03/matrix1-3.png\" style=\"width: 301px; height: 61px;\" />\n<pre>\n<strong>Input:</strong> mat = [[1,2,9,8,7]], target = 6\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> The best choice is to choose 7 from the first row.\nThe absolute difference is 1.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == mat.length</code></li>\n\t<li><code>n == mat[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 70</code></li>\n\t<li><code>1 &lt;= mat[i][j] &lt;= 70</code></li>\n\t<li><code>1 &lt;= target &lt;= 800</code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 890,
            "dislikes": 136,
            "similarQuestions": "[{\"title\": \"Partition Equal Subset Sum\", \"titleSlug\": \"partition-equal-subset-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Closest Subsequence Sum\", \"titleSlug\": \"closest-subsequence-sum\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Maximum Number of Points with Cost\", \"titleSlug\": \"maximum-number-of-points-with-cost\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "stats": "{\"totalAccepted\": \"25.3K\", \"totalSubmission\": \"74.7K\", \"totalAcceptedRaw\": 25285, \"totalSubmissionRaw\": 74676, \"acRate\": \"33.9%\"}",
            "hints": [
                "The sum of chosen elements will not be too large. Consider using a hash set to record all possible sums while iterating each row.",
                "Instead of keeping track of all possible sums, since in each row, we are adding positive numbers, only keep those that can be a candidate, not exceeding the target by too much."
            ],
            "rephrased": {
                "body": "Given an `m x n` integer matrix `mat` and an integer `target`, choose one integer from each row in the matrix such that the absolute difference between `target` and the sum of the chosen elements is minimized. Return the minimum absolute difference.",
                "constraints": [
                    "m == mat.length",
                    "n == mat[i].length",
                    "1 <= m, n <= 70",
                    "1 <= mat[i][j] <= 70",
                    "1 <= target <= 800"
                ],
                "testcases": [
                    {
                        "input": "mat = [[1,2,3],[4,5,6],[7,8,9]], target = 13",
                        "output": "0",
                        "explanation": "Choosing 1 from the first row, 5 from the second row, and 7 from the third row results in a sum of 13, which equals the target. Therefore, the absolute difference is 0."
                    },
                    {
                        "input": "mat = [[1],[2],[3]], target = 100",
                        "output": "94",
                        "explanation": "Choosing 1 from the first row, 2 from the second row, and 3 from the third row results in a sum of 6. The absolute difference between 6 and the target 100 is 94."
                    },
                    {
                        "input": "mat = [[1,2,9,8,7]], target = 6",
                        "output": "1",
                        "explanation": "Choosing 7 from the first row results in the minimum absolute difference of 1 (7 - 6 = 1)."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "partition-equal-subset-sum",
                "title": "Partition Equal Subset Sum",
                "isPaidOnly": false
            },
            {
                "difficulty": "Hard",
                "titleSlug": "closest-subsequence-sum",
                "title": "Closest Subsequence Sum",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "maximum-number-of-points-with-cost",
                "title": "Maximum Number of Points with Cost",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "The sum of chosen elements will not be too large. Consider using a hash set to record all possible sums while iterating each row.",
            "Instead of keeping track of all possible sums, since in each row, we are adding positive numbers, only keep those that can be a candidate, not exceeding the target by too much."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ]
    }
}