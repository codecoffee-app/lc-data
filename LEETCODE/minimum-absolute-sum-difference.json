{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1818",
            "title": "Minimum Absolute Sum Difference",
            "titleSlug": "minimum-absolute-sum-difference",
            "content": "<p>You are given two positive integer arrays <code>nums1</code> and <code>nums2</code>, both of length <code>n</code>.</p>\n\n<p>The <strong>absolute sum difference</strong> of arrays <code>nums1</code> and <code>nums2</code> is defined as the <strong>sum</strong> of <code>|nums1[i] - nums2[i]|</code> for each <code>0 &lt;= i &lt; n</code> (<strong>0-indexed</strong>).</p>\n\n<p>You can replace <strong>at most one</strong> element of <code>nums1</code> with <strong>any</strong> other element in <code>nums1</code> to <strong>minimize</strong> the absolute sum difference.</p>\n\n<p>Return the <em>minimum absolute sum difference <strong>after</strong> replacing at most one<strong> </strong>element in the array <code>nums1</code>.</em> Since the answer may be large, return it <strong>modulo</strong> <code>10<sup>9</sup> + 7</code>.</p>\n\n<p><code>|x|</code> is defined as:</p>\n\n<ul>\n\t<li><code>x</code> if <code>x &gt;= 0</code>, or</li>\n\t<li><code>-x</code> if <code>x &lt; 0</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [1,7,5], nums2 = [2,3,5]\n<strong>Output:</strong> 3\n<strong>Explanation: </strong>There are two possible optimal solutions:\n- Replace the second element with the first: [1,<u><strong>7</strong></u>,5] =&gt; [1,<u><strong>1</strong></u>,5], or\n- Replace the second element with the third: [1,<u><strong>7</strong></u>,5] =&gt; [1,<u><strong>5</strong></u>,5].\nBoth will yield an absolute sum difference of <code>|1-2| + (|1-3| or |5-3|) + |5-5| = </code>3.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [2,4,6,8,10], nums2 = [2,4,6,8,10]\n<strong>Output:</strong> 0\n<strong>Explanation: </strong>nums1 is equal to nums2 so no replacement is needed. This will result in an \nabsolute sum difference of 0.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [1,10,4,4,2,7], nums2 = [9,3,5,1,7,4]\n<strong>Output:</strong> 20\n<strong>Explanation: </strong>Replace the first element with the second: [<u><strong>1</strong></u>,10,4,4,2,7] =&gt; [<u><strong>10</strong></u>,10,4,4,2,7].\nThis yields an absolute sum difference of <code>|10-9| + |10-3| + |4-5| + |4-1| + |2-7| + |7-4| = 20</code>\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == nums1.length</code></li>\n\t<li><code>n == nums2.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= nums1[i], nums2[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 986,
            "dislikes": 70,
            "similarQuestions": "[{\"title\": \"Minimum Sum of Squared Difference\", \"titleSlug\": \"minimum-sum-of-squared-difference\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Ordered Set",
                    "slug": "ordered-set"
                }
            ],
            "stats": "{\"totalAccepted\": \"23.6K\", \"totalSubmission\": \"77K\", \"totalAcceptedRaw\": 23573, \"totalSubmissionRaw\": 76993, \"acRate\": \"30.6%\"}",
            "hints": [
                "Go through each element and test the optimal replacements.",
                "There are only 2 possible replacements for each element (higher and lower) that are optimal."
            ],
            "rephrased": {
                "body": "Given two positive integer arrays `nums1` and `nums2`, both of length `n`, the absolute sum difference is the sum of `|nums1[i] - nums2[i]|` for each `0 <= i < n`. You can replace at most one element of `nums1` with any other element in `nums1` to minimize the absolute sum difference. Return the minimum absolute sum difference after replacing at most one element in `nums1`. Return the answer modulo `10^9 + 7`.",
                "constraints": [
                    "n == nums1.length",
                    "n == nums2.length",
                    "1 <= n <= 10^5",
                    "1 <= nums1[i], nums2[i] <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "nums1 = [1,7,5], nums2 = [2,3,5]",
                        "output": 3,
                        "explanation": "Replacing the second element in nums1 with either the first or third element results in the minimum absolute sum difference of 3. For example, [1,1,5] gives |1-2| + |1-3| + |5-5| = 1 + 2 + 0 = 3."
                    },
                    {
                        "input": "nums1 = [2,4,6,8,10], nums2 = [2,4,6,8,10]",
                        "output": 0,
                        "explanation": "Since nums1 and nums2 are identical, the absolute sum difference is already 0, and no replacement is needed."
                    },
                    {
                        "input": "nums1 = [1,10,4,4,2,7], nums2 = [9,3,5,1,7,4]",
                        "output": 20,
                        "explanation": "Replacing the first element of nums1 with the second (10) minimizes the absolute sum difference to 20: |10-9| + |10-3| + |4-5| + |4-1| + |2-7| + |7-4| = 1 + 7 + 1 + 3 + 5 + 3 = 20."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "minimum-sum-of-squared-difference",
                "title": "Minimum Sum of Squared Difference",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "Go through each element and test the optimal replacements.",
            "There are only 2 possible replacements for each element (higher and lower) that are optimal."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Ordered Set",
                "slug": "ordered-set"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int minAbsoluteSumDiff(vector<int>& nums1, vector<int>& nums2) {\n    constexpr int kMod = 1'000'000'007;\n    long sumDiff = 0;\n    long maxDecrement = 0;\n    set<int> sorted(nums1.begin(), nums1.end());\n\n    for (int i = 0; i < nums1.size(); ++i) {\n      const long currDiff = abs(nums1[i] - nums2[i]);\n      sumDiff += currDiff;\n      const auto it = sorted.lower_bound(nums2[i]);\n      if (it != sorted.begin())\n        maxDecrement = max(maxDecrement, currDiff - abs(*prev(it) - nums2[i]));\n      if (it != sorted.end())\n        maxDecrement = max(maxDecrement, currDiff - abs(*it - nums2[i]));\n    }\n\n    return (sumDiff - maxDecrement) % kMod;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int minAbsoluteSumDiff(int[] nums1, int[] nums2) {\n    final int kMod = 1_000_000_007;\n    long sumDiff = 0;\n    long maxDecrement = 0;\n    TreeSet<Integer> sorted = new TreeSet<>();\n\n    for (final int num : nums1)\n      sorted.add(num);\n\n    for (int i = 0; i < nums1.length; ++i) {\n      final long currDiff = (long) Math.abs(nums1[i] - nums2[i]);\n      sumDiff += currDiff;\n      Integer ceiling = sorted.ceiling(nums2[i]);\n      Integer floor = sorted.floor(nums2[i]);\n      if (ceiling != null)\n        maxDecrement = Math.max(maxDecrement, currDiff - (long) Math.abs(ceiling - nums2[i]));\n      if (floor != null)\n        maxDecrement = Math.max(maxDecrement, currDiff - (long) Math.abs(floor - nums2[i]));\n    }\n\n    return (int) ((sumDiff - maxDecrement) % kMod);\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def minAbsoluteSumDiff(self, nums1: List[int], nums2: List[int]) -> int:\n    ans = math.inf\n    diffs = [abs(a - b) for a, b in zip(nums1, nums2)]\n    sumDiff = sum(diffs)\n\n    nums1.sort()\n\n    for num, diff in zip(nums2, diffs):\n      i = bisect.bisect_left(nums1, num)\n      if i > 0:\n        ans = min(ans, sumDiff - diff + abs(num - nums1[i - 1]))\n      if i < len(nums1):\n        ans = min(ans, sumDiff - diff + abs(num - nums1[i]))\n\n    return ans % int(1e9 + 7)\n",
                "lang_text": "py"
            }
        }
    }
}