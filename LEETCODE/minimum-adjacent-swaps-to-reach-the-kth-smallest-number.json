{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1850",
            "title": "Minimum Adjacent Swaps to Reach the Kth Smallest Number",
            "titleSlug": "minimum-adjacent-swaps-to-reach-the-kth-smallest-number",
            "content": "<p>You are given a string <code>num</code>, representing a large integer, and an integer <code>k</code>.</p>\n\n<p>We call some integer <strong>wonderful</strong> if it is a <strong>permutation</strong> of the digits in <code>num</code> and is <strong>greater in value</strong> than <code>num</code>. There can be many wonderful integers. However, we only care about the <strong>smallest-valued</strong> ones.</p>\n\n<ul>\n\t<li>For example, when <code>num = &quot;5489355142&quot;</code>:\n\n\t<ul>\n\t\t<li>The 1<sup>st</sup> smallest wonderful integer is <code>&quot;5489355214&quot;</code>.</li>\n\t\t<li>The 2<sup>nd</sup> smallest wonderful integer is <code>&quot;5489355241&quot;</code>.</li>\n\t\t<li>The 3<sup>rd</sup> smallest wonderful integer is <code>&quot;5489355412&quot;</code>.</li>\n\t\t<li>The 4<sup>th</sup> smallest wonderful integer is <code>&quot;5489355421&quot;</code>.</li>\n\t</ul>\n\t</li>\n</ul>\n\n<p>Return <em>the <strong>minimum number of adjacent digit swaps</strong> that needs to be applied to </em><code>num</code><em> to reach the </em><code>k<sup>th</sup></code><em><strong> smallest wonderful</strong> integer</em>.</p>\n\n<p>The tests are generated in such a way that <code>k<sup>th</sup></code>&nbsp;smallest wonderful integer exists.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = &quot;5489355142&quot;, k = 4\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The 4<sup>th</sup> smallest wonderful number is &quot;5489355421&quot;. To get this number:\n- Swap index 7 with index 8: &quot;5489355<u>14</u>2&quot; -&gt; &quot;5489355<u>41</u>2&quot;\n- Swap index 8 with index 9: &quot;54893554<u>12</u>&quot; -&gt; &quot;54893554<u>21</u>&quot;\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = &quot;11112&quot;, k = 4\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> The 4<sup>th</sup> smallest wonderful number is &quot;21111&quot;. To get this number:\n- Swap index 3 with index 4: &quot;111<u>12</u>&quot; -&gt; &quot;111<u>21</u>&quot;\n- Swap index 2 with index 3: &quot;11<u>12</u>1&quot; -&gt; &quot;11<u>21</u>1&quot;\n- Swap index 1 with index 2: &quot;1<u>12</u>11&quot; -&gt; &quot;1<u>21</u>11&quot;\n- Swap index 0 with index 1: &quot;<u>12</u>111&quot; -&gt; &quot;<u>21</u>111&quot;\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = &quot;00123&quot;, k = 1\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> The 1<sup>st</sup> smallest wonderful number is &quot;00132&quot;. To get this number:\n- Swap index 3 with index 4: &quot;001<u>23</u>&quot; -&gt; &quot;001<u>32</u>&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= num.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= k &lt;= 1000</code></li>\n\t<li><code>num</code> only consists of digits.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 738,
            "dislikes": 95,
            "similarQuestions": "[{\"title\": \"Next Permutation\", \"titleSlug\": \"next-permutation\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "stats": "{\"totalAccepted\": \"20K\", \"totalSubmission\": \"28.2K\", \"totalAcceptedRaw\": 20029, \"totalSubmissionRaw\": 28172, \"acRate\": \"71.1%\"}",
            "hints": [
                "Find the next permutation of the given string k times.",
                "Try to move each element to its correct position and calculate the number of steps."
            ],
            "rephrased": {
                "body": "Given a string `num` representing a large integer and an integer `k`, find the minimum number of adjacent digit swaps required to transform `num` into the k-th smallest wonderful integer. A wonderful integer is defined as a permutation of the digits in `num` that is greater in value than `num`.",
                "constraints": [
                    "2 <= num.length <= 1000",
                    "1 <= k <= 1000",
                    "`num` only consists of digits."
                ],
                "testcases": [
                    {
                        "input": "num = \"5489355142\", k = 4",
                        "output": "2",
                        "explanation": "The 4th smallest wonderful number is \"5489355421\".  To obtain this number from the initial string \"5489355142\", one swap is needed between indices 7 and 8 (\"5489355142\" -> \"5489355412\") and one swap is needed between indices 8 and 9 (\"5489355412\" -> \"5489355421\")."
                    },
                    {
                        "input": "num = \"11112\", k = 4",
                        "output": "4",
                        "explanation": "The 4th smallest wonderful number is \"21111\". To obtain this number, four adjacent swaps are required."
                    },
                    {
                        "input": "num = \"00123\", k = 1",
                        "output": "1",
                        "explanation": "The 1st smallest wonderful number is \"00132\". To obtain this number from \"00123\", one adjacent swap is required between the digits at indices 3 and 4."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "next-permutation",
                "title": "Next Permutation",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "Find the next permutation of the given string k times.",
            "Try to move each element to its correct position and calculate the number of steps."
        ],
        "relatedTopics": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ]
    }
}