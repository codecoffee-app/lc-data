{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2540",
            "title": "Minimum Common Value",
            "titleSlug": "minimum-common-value",
            "content": "<p>Given two integer arrays <code>nums1</code> and <code>nums2</code>, sorted in non-decreasing order, return <em>the <strong>minimum integer common</strong> to both arrays</em>. If there is no common integer amongst <code>nums1</code> and <code>nums2</code>, return <code>-1</code>.</p>\n\n<p>Note that an integer is said to be <strong>common</strong> to <code>nums1</code> and <code>nums2</code> if both arrays have <strong>at least one</strong> occurrence of that integer.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [1,2,3], nums2 = [2,4]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The smallest element common to both arrays is 2, so we return 2.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [1,2,3,6], nums2 = [2,3,4,5]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> There are two common elements in the array 2 and 3 out of which 2 is the smallest, so 2 is returned.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums1.length, nums2.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= nums1[i], nums2[j] &lt;= 10<sup>9</sup></code></li>\n\t<li>Both <code>nums1</code> and <code>nums2</code> are sorted in <strong>non-decreasing</strong> order.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 505,
            "dislikes": 14,
            "similarQuestions": "[{\"title\": \"Intersection of Two Arrays\", \"titleSlug\": \"intersection-of-two-arrays\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Intersection of Two Arrays II\", \"titleSlug\": \"intersection-of-two-arrays-ii\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "stats": "{\"totalAccepted\": \"53.2K\", \"totalSubmission\": \"105.7K\", \"totalAcceptedRaw\": 53194, \"totalSubmissionRaw\": 105694, \"acRate\": \"50.3%\"}",
            "hints": [
                "Try to use a set.",
                "Otherwise, try to use a two-pointer approach."
            ],
            "rephrased": {
                "body": "Given two integer arrays `nums1` and `nums2`, sorted in non-decreasing order, find the minimum integer that is present in both arrays.  Return the minimum common integer. If no common integer exists, return -1.",
                "constraints": [
                    "1 <= nums1.length, nums2.length <= 10<sup>5</sup>",
                    "1 <= nums1[i], nums2[j] <= 10<sup>9</sup>",
                    "Both nums1 and nums2 are sorted in non-decreasing order."
                ],
                "testcases": [
                    {
                        "input": "nums1 = [1,2,3], nums2 = [2,4]",
                        "output": "2",
                        "explanation": "The smallest integer present in both arrays is 2."
                    },
                    {
                        "input": "nums1 = [1,2,3,6], nums2 = [2,3,4,5]",
                        "output": "2",
                        "explanation": "The integers 2 and 3 are common to both arrays. The smallest of these is 2."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Easy",
                "titleSlug": "intersection-of-two-arrays",
                "title": "Intersection of Two Arrays",
                "isPaidOnly": false
            },
            {
                "difficulty": "Easy",
                "titleSlug": "intersection-of-two-arrays-ii",
                "title": "Intersection of Two Arrays II",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "Try to use a set.",
            "Otherwise, try to use a two-pointer approach."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int getCommon(vector<int>& nums1, vector<int>& nums2) {\n    int i = 0;  // nums1's index\n    int j = 0;  // nums2's index\n\n    while (i < nums1.size() && j < nums2.size()) {\n      if (nums1[i] == nums2[j])\n        return nums1[i];\n      if (nums1[i] < nums2[j])\n        ++i;\n      else\n        ++j;\n    }\n\n    return -1;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int getCommon(int[] nums1, int[] nums2) {\n    int i = 0; // nums1's index\n    int j = 0; // nums2's index\n\n    while (i < nums1.length && j < nums1.length) {\n      if (nums1[i] == nums2[j])\n        return nums1[i];\n      if (nums1[i] < nums2[j])\n        ++i;\n      else\n        ++j;\n    }\n\n    return -1;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def getCommon(self, nums1: List[int], nums2: List[int]) -> int:\n    i = 0  # nums1's index\n    j = 0  # nums2's index\n\n    while i < len(nums1) and j < len(nums2):\n      if nums1[i] == nums2[j]:\n        return nums1[i]\n      if nums1[i] < nums2[j]:\n        i += 1\n      else:\n        j += 1\n\n    return -1\n",
                "lang_text": "py"
            }
        }
    }
}