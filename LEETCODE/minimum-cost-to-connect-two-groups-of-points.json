{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1595",
            "title": "Minimum Cost to Connect Two Groups of Points",
            "titleSlug": "minimum-cost-to-connect-two-groups-of-points",
            "content": "<p>You are given two groups of points where the first group has <code>size<sub>1</sub></code> points, the second group has <code>size<sub>2</sub></code> points, and <code>size<sub>1</sub> &gt;= size<sub>2</sub></code>.</p>\n\n<p>The <code>cost</code> of the connection between any two points are given in an <code>size<sub>1</sub> x size<sub>2</sub></code> matrix where <code>cost[i][j]</code> is the cost of connecting point <code>i</code> of the first group and point <code>j</code> of the second group. The groups are connected if <strong>each point in both groups is connected to one or more points in the opposite group</strong>. In other words, each point in the first group must be connected to at least one point in the second group, and each point in the second group must be connected to at least one point in the first group.</p>\n\n<p>Return <em>the minimum cost it takes to connect the two groups</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/03/ex1.jpg\" style=\"width: 322px; height: 243px;\" />\n<pre>\n<strong>Input:</strong> cost = [[15, 96], [36, 2]]\n<strong>Output:</strong> 17\n<strong>Explanation</strong>: The optimal way of connecting the groups is:\n1--A\n2--B\nThis results in a total cost of 17.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/03/ex2.jpg\" style=\"width: 322px; height: 403px;\" />\n<pre>\n<strong>Input:</strong> cost = [[1, 3, 5], [4, 1, 1], [1, 5, 3]]\n<strong>Output:</strong> 4\n<strong>Explanation</strong>: The optimal way of connecting the groups is:\n1--A\n2--B\n2--C\n3--A\nThis results in a total cost of 4.\nNote that there are multiple points connected to point 2 in the first group and point A in the second group. This does not matter as there is no limit to the number of points that can be connected. We only care about the minimum total cost.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> cost = [[2, 5, 1], [3, 4, 7], [8, 1, 2], [6, 2, 4], [3, 8, 8]]\n<strong>Output:</strong> 10\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>size<sub>1</sub> == cost.length</code></li>\n\t<li><code>size<sub>2</sub> == cost[i].length</code></li>\n\t<li><code>1 &lt;= size<sub>1</sub>, size<sub>2</sub> &lt;= 12</code></li>\n\t<li><code>size<sub>1</sub> &gt;= size<sub>2</sub></code></li>\n\t<li><code>0 &lt;= cost[i][j] &lt;= 100</code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 453,
            "dislikes": 13,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                },
                {
                    "name": "Bitmask",
                    "slug": "bitmask"
                }
            ],
            "stats": "{\"totalAccepted\": \"8.5K\", \"totalSubmission\": \"17.8K\", \"totalAcceptedRaw\": 8485, \"totalSubmissionRaw\": 17845, \"acRate\": \"47.5%\"}",
            "hints": [
                "Each point on the left would either be connected to exactly point already connected to some left node, or a subset of the nodes on the right which are not connected to any node",
                "Use dynamic programming with bitmasking, where the state will be (number of points assigned in first group, bitmask of points assigned in second group)."
            ],
            "rephrased": {
                "body": "You are given two groups of points. The first group has `size1` points, and the second group has `size2` points, where `size1 >= size2`.  A `size1 x size2` cost matrix is provided, where `cost[i][j]` represents the cost of connecting point `i` from the first group to point `j` from the second group.  The goal is to connect the two groups such that every point in both groups is connected to at least one point in the opposite group. Find the minimum total cost to achieve this connection.",
                "constraints": [
                    "`size1 == cost.length`",
                    "`size2 == cost[i].length`",
                    "`1 <= size1, size2 <= 12`",
                    "`size1 >= size2`",
                    "`0 <= cost[i][j] <= 100`"
                ],
                "testcases": [
                    {
                        "input": "[[15, 96], [36, 2]]",
                        "output": "17",
                        "explanation": "The optimal way to connect the groups is to connect point 1 of the first group to point A of the second group and point 2 of the first group to point B of the second group. This results in a total cost of 15 + 2 = 17."
                    },
                    {
                        "input": "[[1, 3, 5], [4, 1, 1], [1, 5, 3]]",
                        "output": "4",
                        "explanation": "The optimal way to connect the groups is to connect point 1 of the first group to point A of the second group, point 2 of the first group to point B of the second group, point 2 of the first group to point C of the second group and point 3 of the first group to point A of the second group. This results in a total cost of 1 + 1 + 1 + 1 = 4."
                    },
                    {
                        "input": "[[2, 5, 1], [3, 4, 7], [8, 1, 2], [6, 2, 4], [3, 8, 8]]",
                        "output": "10",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "Each point on the left would either be connected to exactly point already connected to some left node, or a subset of the nodes on the right which are not connected to any node",
            "Use dynamic programming with bitmasking, where the state will be (number of points assigned in first group, bitmask of points assigned in second group)."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            },
            {
                "name": "Bitmask",
                "slug": "bitmask"
            }
        ]
    }
}