{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1000",
            "title": "Minimum Cost to Merge Stones",
            "titleSlug": "minimum-cost-to-merge-stones",
            "content": "<p>There are <code>n</code> piles of <code>stones</code> arranged in a row. The <code>i<sup>th</sup></code> pile has <code>stones[i]</code> stones.</p>\n\n<p>A move consists of merging exactly <code>k</code> <strong>consecutive</strong> piles into one pile, and the cost of this move is equal to the total number of stones in these <code>k</code> piles.</p>\n\n<p>Return <em>the minimum cost to merge all piles of stones into one pile</em>. If it is impossible, return <code>-1</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> stones = [3,2,4,1], k = 2\n<strong>Output:</strong> 20\n<strong>Explanation:</strong> We start with [3, 2, 4, 1].\nWe merge [3, 2] for a cost of 5, and we are left with [5, 4, 1].\nWe merge [4, 1] for a cost of 5, and we are left with [5, 5].\nWe merge [5, 5] for a cost of 10, and we are left with [10].\nThe total cost was 20, and this is the minimum possible.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> stones = [3,2,4,1], k = 3\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> After any merge operation, there are 2 piles left, and we can&#39;t merge anymore.  So the task is impossible.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> stones = [3,5,1,2,6], k = 3\n<strong>Output:</strong> 25\n<strong>Explanation:</strong> We start with [3, 5, 1, 2, 6].\nWe merge [5, 1, 2] for a cost of 8, and we are left with [3, 8, 6].\nWe merge [3, 8, 6] for a cost of 17, and we are left with [17].\nThe total cost was 25, and this is the minimum possible.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == stones.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 30</code></li>\n\t<li><code>1 &lt;= stones[i] &lt;= 100</code></li>\n\t<li><code>2 &lt;= k &lt;= 30</code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 2379,
            "dislikes": 103,
            "similarQuestions": "[{\"title\": \"Burst Balloons\", \"titleSlug\": \"burst-balloons\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Minimum Cost to Connect Sticks\", \"titleSlug\": \"minimum-cost-to-connect-sticks\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "stats": "{\"totalAccepted\": \"37.6K\", \"totalSubmission\": \"87.5K\", \"totalAcceptedRaw\": 37594, \"totalSubmissionRaw\": 87466, \"acRate\": \"43.0%\"}",
            "hints": [],
            "rephrased": {
                "body": "Given `n` piles of stones arranged in a row, where the `i`-th pile has `stones[i]` stones. In a single move, you can merge exactly `k` consecutive piles into one new pile. The cost of this move is the sum of the stones in the `k` piles that were merged. Find the minimum cost to merge all piles into a single pile. If it's impossible to merge all piles into one, return -1.",
                "constraints": [
                    "`n == stones.length`",
                    "`1 <= n <= 30`",
                    "`1 <= stones[i] <= 100`",
                    "`2 <= k <= 30`"
                ],
                "testcases": [
                    {
                        "input": "stones = [3,2,4,1], k = 2",
                        "output": "20",
                        "explanation": "We start with [3, 2, 4, 1]. Merge [3, 2] (cost 5) -> [5, 4, 1]. Merge [4, 1] (cost 5) -> [5, 5]. Merge [5, 5] (cost 10) -> [10]. Total cost: 5 + 5 + 10 = 20."
                    },
                    {
                        "input": "stones = [3,2,4,1], k = 3",
                        "output": "-1",
                        "explanation": "After any merge operation, there are 2 piles left, and we can't merge anymore, thus making the task impossible."
                    },
                    {
                        "input": "stones = [3,5,1,2,6], k = 3",
                        "output": "25",
                        "explanation": "We start with [3, 5, 1, 2, 6]. Merge [5, 1, 2] (cost 8) -> [3, 8, 6]. Merge [3, 8, 6] (cost 17) -> [17]. Total cost: 8 + 17 = 25."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Hard",
                "titleSlug": "burst-balloons",
                "title": "Burst Balloons",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "minimum-cost-to-connect-sticks",
                "title": "Minimum Cost to Connect Sticks",
                "isPaidOnly": true
            }
        ],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ]
    }
}