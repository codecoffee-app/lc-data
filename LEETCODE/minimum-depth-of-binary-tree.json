{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "111",
            "title": "Minimum Depth of Binary Tree",
            "titleSlug": "minimum-depth-of-binary-tree",
            "content": "<p>Given a binary tree, find its minimum depth.</p>\n\n<p>The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.</p>\n\n<p><strong>Note:</strong>&nbsp;A leaf is a node with no children.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/10/12/ex_depth.jpg\" style=\"width: 432px; height: 302px;\" />\n<pre>\n<strong>Input:</strong> root = [3,9,20,null,null,15,7]\n<strong>Output:</strong> 2\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [2,null,3,null,4,null,5,null,6]\n<strong>Output:</strong> 5\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[0, 10<sup>5</sup>]</code>.</li>\n\t<li><code>-1000 &lt;= Node.val &lt;= 1000</code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 7067,
            "dislikes": 1273,
            "similarQuestions": "[{\"title\": \"Binary Tree Level Order Traversal\", \"titleSlug\": \"binary-tree-level-order-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Depth of Binary Tree\", \"titleSlug\": \"maximum-depth-of-binary-tree\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "stats": "{\"totalAccepted\": \"1.1M\", \"totalSubmission\": \"2.4M\", \"totalAcceptedRaw\": 1115973, \"totalSubmissionRaw\": 2369268, \"acRate\": \"47.1%\"}",
            "hints": [],
            "rephrased": {
                "body": "Given a binary tree, determine its minimum depth. The minimum depth is defined as the number of nodes along the shortest path from the root node to the nearest leaf node. A leaf node is a node with no children.",
                "constraints": [
                    "The number of nodes in the tree is in the range [0, 10^5].",
                    "-1000 <= Node.val <= 1000"
                ],
                "testcases": [
                    {
                        "input": "[3,9,20,null,null,15,7]",
                        "output": "2",
                        "explanation": "The shortest path from the root (3) to a leaf node is either to 9 (depth 2) or to 15 or 7 (depth 3). Therefore, the minimum depth is 2."
                    },
                    {
                        "input": "[2,null,3,null,4,null,5,null,6]",
                        "output": "5",
                        "explanation": "The binary tree is skewed to the right. The shortest path is from 2 -> 3 -> 4 -> 5 -> 6, which has a depth of 5."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "binary-tree-level-order-traversal",
                "title": "Binary Tree Level Order Traversal",
                "isPaidOnly": false
            },
            {
                "difficulty": "Easy",
                "titleSlug": "maximum-depth-of-binary-tree",
                "title": "Maximum Depth of Binary Tree",
                "isPaidOnly": false
            }
        ],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ]
    }
}