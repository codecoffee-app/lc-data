{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2383",
            "title": "Minimum Hours of Training to Win a Competition",
            "titleSlug": "minimum-hours-of-training-to-win-a-competition",
            "content": "<p>You are entering a competition, and are given two <strong>positive</strong> integers <code>initialEnergy</code> and <code>initialExperience</code> denoting your initial energy and initial experience respectively.</p>\n\n<p>You are also given two <strong>0-indexed</strong> integer arrays <code>energy</code> and <code>experience</code>, both of length <code>n</code>.</p>\n\n<p>You will face <code>n</code> opponents <strong>in order</strong>. The energy and experience of the <code>i<sup>th</sup></code> opponent is denoted by <code>energy[i]</code> and <code>experience[i]</code> respectively. When you face an opponent, you need to have both <strong>strictly</strong> greater experience and energy to defeat them and move to the next opponent if available.</p>\n\n<p>Defeating the <code>i<sup>th</sup></code> opponent <strong>increases</strong> your experience by <code>experience[i]</code>, but <strong>decreases</strong> your energy by <code>energy[i]</code>.</p>\n\n<p>Before starting the competition, you can train for some number of hours. After each hour of training, you can <strong>either</strong> choose to increase your initial experience by one, or increase your initial energy by one.</p>\n\n<p>Return <em>the <strong>minimum</strong> number of training hours required to defeat all </em><code>n</code><em> opponents</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> initialEnergy = 5, initialExperience = 3, energy = [1,4,3,2], experience = [2,6,3,1]\n<strong>Output:</strong> 8\n<strong>Explanation:</strong> You can increase your energy to 11 after 6 hours of training, and your experience to 5 after 2 hours of training.\nYou face the opponents in the following order:\n- You have more energy and experience than the 0<sup>th</sup> opponent so you win.\n  Your energy becomes 11 - 1 = 10, and your experience becomes 5 + 2 = 7.\n- You have more energy and experience than the 1<sup>st</sup> opponent so you win.\n  Your energy becomes 10 - 4 = 6, and your experience becomes 7 + 6 = 13.\n- You have more energy and experience than the 2<sup>nd</sup> opponent so you win.\n  Your energy becomes 6 - 3 = 3, and your experience becomes 13 + 3 = 16.\n- You have more energy and experience than the 3<sup>rd</sup> opponent so you win.\n  Your energy becomes 3 - 2 = 1, and your experience becomes 16 + 1 = 17.\nYou did a total of 6 + 2 = 8 hours of training before the competition, so we return 8.\nIt can be proven that no smaller answer exists.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> initialEnergy = 2, initialExperience = 4, energy = [1], experience = [3]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> You do not need any additional energy or experience to win the competition, so we return 0.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == energy.length == experience.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 100</code></li>\n\t<li><code>1 &lt;= initialEnergy, initialExperience, energy[i], experience[i] &lt;= 100</code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 308,
            "dislikes": 266,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "stats": "{\"totalAccepted\": \"29.4K\", \"totalSubmission\": \"71.8K\", \"totalAcceptedRaw\": 29381, \"totalSubmissionRaw\": 71822, \"acRate\": \"40.9%\"}",
            "hints": [
                "Find the minimum number of training hours needed for the energy and experience separately, and sum the results.",
                "Try to increase the energy and experience until you find how much is enough to win the competition."
            ],
            "rephrased": {
                "body": "You are entering a competition. You are given two positive integers, `initialEnergy` and `initialExperience`, representing your starting energy and experience, respectively. You are also given two 0-indexed integer arrays, `energy` and `experience`, of length `n`. You will face `n` opponents in the given order. The energy and experience of the i-th opponent are denoted by `energy[i]` and `experience[i]`, respectively. To defeat an opponent, you must have strictly greater energy and experience than them.  Defeating the i-th opponent increases your experience by `experience[i]` but decreases your energy by `energy[i]`.  Before the competition, you can train to increase either your initial energy or initial experience by one for each hour spent training.  Return the minimum number of training hours required to defeat all `n` opponents.",
                "constraints": [
                    "`n == energy.length == experience.length`",
                    "`1 <= n <= 100`",
                    "`1 <= initialEnergy, initialExperience, energy[i], experience[i] <= 100`"
                ],
                "testcases": [
                    {
                        "input": "initialEnergy = 5, initialExperience = 3, energy = [1,4,3,2], experience = [2,6,3,1]",
                        "output": "8",
                        "explanation": "To defeat all opponents, you need to increase your initial energy and experience through training. By increasing your energy to 11 (6 hours of training) and your experience to 5 (2 hours of training), you can successfully defeat all opponents. Therefore, the total training hours required is 6 + 2 = 8."
                    },
                    {
                        "input": "initialEnergy = 2, initialExperience = 4, energy = [1], experience = [3]",
                        "output": "0",
                        "explanation": "You already have sufficient energy and experience to defeat the opponent. Therefore, no training is needed."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "Find the minimum number of training hours needed for the energy and experience separately, and sum the results.",
            "Try to increase the energy and experience until you find how much is enough to win the competition."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int minNumberOfHours(int initialEnergy, int initialExperience,\n                       vector<int>& energy, vector<int>& experience) {\n    return getRequiredEnergy(initialEnergy, energy) +\n           getRequiredExperience(initialExperience, experience);\n  }\n\n private:\n  int getRequiredEnergy(int initialEnergy, const vector<int>& energy) {\n    return max(0,\n               accumulate(energy.begin(), energy.end(), 0) + 1 - initialEnergy);\n  }\n\n  int getRequiredExperience(int currentExperience,\n                            const vector<int>& experience) {\n    int requiredExperience = 0;\n    for (const int e : experience) {\n      if (e >= currentExperience) {\n        requiredExperience += e + 1 - currentExperience;\n        currentExperience += e + 1 - currentExperience;\n      }\n      currentExperience += e;\n    }\n    return requiredExperience;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int minNumberOfHours(int initialEnergy, int initialExperience, int[] energy,\n                              int[] experience) {\n    return getRequiredEnergy(initialEnergy, energy) +\n        getRequiredExperience(initialExperience, experience);\n  }\n\n  private int getRequiredEnergy(int initialEnergy, int[] energy) {\n    return Math.max(0, Arrays.stream(energy).sum() + 1 - initialEnergy);\n  }\n\n  private int getRequiredExperience(int currentExperience, int[] experience) {\n    int requiredExperience = 0;\n    for (final int e : experience) {\n      if (e >= currentExperience) {\n        requiredExperience += e + 1 - currentExperience;\n        currentExperience += e + 1 - currentExperience;\n      }\n      currentExperience += e;\n    }\n    return requiredExperience;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def minNumberOfHours(self, initialEnergy: int, initialExperience: int, energy: List[int], experience: List[int]) -> int:\n    return self._getRequiredEnergy(initialEnergy, energy) + \\\n        self._getRequiredExperience(initialExperience, experience)\n\n  def _getRequiredEnergy(self, initialEnergy: int, energy: List[int]) -> int:\n    return max(0, sum(energy) + 1 - initialEnergy)\n\n  def _getRequiredExperience(self, currentExperience: int, experience: List[int]) -> int:\n    requiredExperience = 0\n    for e in experience:\n      if e >= currentExperience:\n        requiredExperience += e + 1 - currentExperience\n        currentExperience += e + 1 - currentExperience\n      currentExperience += e\n    return requiredExperience\n",
                "lang_text": "py"
            }
        }
    }
}