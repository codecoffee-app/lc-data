{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2568",
            "title": "Minimum Impossible OR",
            "titleSlug": "minimum-impossible-or",
            "content": "<p>You are given a <strong>0-indexed</strong>&nbsp;integer array <code>nums</code>.</p>\n\n<p>We say that an integer x is <strong>expressible</strong> from <code>nums</code> if there exist some integers <code>0 &lt;= index<sub>1</sub> &lt; index<sub>2</sub> &lt; ... &lt; index<sub>k</sub> &lt; nums.length</code> for which <code>nums[index<sub>1</sub>] | nums[index<sub>2</sub>] | ... | nums[index<sub>k</sub>] = x</code>. In other words, an integer is expressible if it can be written as the bitwise OR of some subsequence of <code>nums</code>.</p>\n\n<p>Return <em>the minimum <strong>positive non-zero integer</strong>&nbsp;that is not </em><em>expressible from </em><code>nums</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,1]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> 1 and 2 are already present in the array. We know that 3 is expressible, since nums[0] | nums[1] = 2 | 1 = 3. Since 4 is not expressible, we return 4.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [5,3,2]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> We can show that 1 is the smallest number that is not expressible.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 329,
            "dislikes": 18,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Brainteaser",
                    "slug": "brainteaser"
                }
            ],
            "stats": "{\"totalAccepted\": \"14K\", \"totalSubmission\": \"24.6K\", \"totalAcceptedRaw\": 13973, \"totalSubmissionRaw\": 24551, \"acRate\": \"56.9%\"}",
            "hints": [
                "Think about forming numbers in the powers of 2 using their bit representation.",
                "The minimum power of 2 not present in the array will be the first number that could not be expressed using the given operation."
            ],
            "rephrased": {
                "body": "Given a 0-indexed integer array `nums`, an integer `x` is considered expressible from `nums` if it can be formed by taking the bitwise OR of some subsequence of `nums`. The goal is to find the smallest positive non-zero integer that cannot be expressed as the bitwise OR of any subsequence of `nums`.",
                "constraints": [
                    "1 <= nums.length <= 10^5",
                    "1 <= nums[i] <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "[2,1]",
                        "output": "4",
                        "explanation": "The numbers 1 and 2 are present in the array. The number 3 is expressible because 2 | 1 = 3. The smallest positive integer not expressible is 4."
                    },
                    {
                        "input": "[5,3,2]",
                        "output": "1",
                        "explanation": "The smallest positive integer that cannot be expressed from the given array is 1."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "Think about forming numbers in the powers of 2 using their bit representation.",
            "The minimum power of 2 not present in the array will be the first number that could not be expressed using the given operation."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Brainteaser",
                "slug": "brainteaser"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int minImpossibleOR(vector<int>& nums) {\n    int ans = 1;\n    const unordered_set<int> numsSet{nums.begin(), nums.end()};\n\n    while (numsSet.count(ans))\n      ans <<= 1;\n\n    return ans;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int minImpossibleOR(int[] nums) {\n    int ans = 1;\n    Set<Integer> numsSet = Arrays.stream(nums).boxed().collect(Collectors.toSet());\n\n    while (numsSet.contains(ans))\n      ans <<= 1;\n\n    return ans;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def minImpossibleOR(self, nums: List[int]) -> int:\n    ans = 1\n    numsSet = set(nums)\n\n    while ans in numsSet:\n      ans <<= 1\n\n    return ans\n",
                "lang_text": "py"
            }
        }
    }
}