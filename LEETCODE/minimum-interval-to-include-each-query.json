{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1851",
            "title": "Minimum Interval to Include Each Query",
            "titleSlug": "minimum-interval-to-include-each-query",
            "content": "<p>You are given a 2D integer array <code>intervals</code>, where <code>intervals[i] = [left<sub>i</sub>, right<sub>i</sub>]</code> describes the <code>i<sup>th</sup></code> interval starting at <code>left<sub>i</sub></code> and ending at <code>right<sub>i</sub></code> <strong>(inclusive)</strong>. The <strong>size</strong> of an interval is defined as the number of integers it contains, or more formally <code>right<sub>i</sub> - left<sub>i</sub> + 1</code>.</p>\n\n<p>You are also given an integer array <code>queries</code>. The answer to the <code>j<sup>th</sup></code> query is the <strong>size of the smallest interval</strong> <code>i</code> such that <code>left<sub>i</sub> &lt;= queries[j] &lt;= right<sub>i</sub></code>. If no such interval exists, the answer is <code>-1</code>.</p>\n\n<p>Return <em>an array containing the answers to the queries</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> intervals = [[1,4],[2,4],[3,6],[4,4]], queries = [2,3,4,5]\n<strong>Output:</strong> [3,3,1,4]\n<strong>Explanation:</strong> The queries are processed as follows:\n- Query = 2: The interval [2,4] is the smallest interval containing 2. The answer is 4 - 2 + 1 = 3.\n- Query = 3: The interval [2,4] is the smallest interval containing 3. The answer is 4 - 2 + 1 = 3.\n- Query = 4: The interval [4,4] is the smallest interval containing 4. The answer is 4 - 4 + 1 = 1.\n- Query = 5: The interval [3,6] is the smallest interval containing 5. The answer is 6 - 3 + 1 = 4.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> intervals = [[2,3],[2,5],[1,8],[20,25]], queries = [2,19,5,22]\n<strong>Output:</strong> [2,-1,4,6]\n<strong>Explanation:</strong> The queries are processed as follows:\n- Query = 2: The interval [2,3] is the smallest interval containing 2. The answer is 3 - 2 + 1 = 2.\n- Query = 19: None of the intervals contain 19. The answer is -1.\n- Query = 5: The interval [2,5] is the smallest interval containing 5. The answer is 5 - 2 + 1 = 4.\n- Query = 22: The interval [20,25] is the smallest interval containing 22. The answer is 25 - 20 + 1 = 6.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= intervals.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= queries.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>intervals[i].length == 2</code></li>\n\t<li><code>1 &lt;= left<sub>i</sub> &lt;= right<sub>i</sub> &lt;= 10<sup>7</sup></code></li>\n\t<li><code>1 &lt;= queries[j] &lt;= 10<sup>7</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 866,
            "dislikes": 23,
            "similarQuestions": "[{\"title\": \"Number of Flowers in Full Bloom\", \"titleSlug\": \"number-of-flowers-in-full-bloom\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Line Sweep",
                    "slug": "line-sweep"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                }
            ],
            "stats": "{\"totalAccepted\": \"26.5K\", \"totalSubmission\": \"53.7K\", \"totalAcceptedRaw\": 26451, \"totalSubmissionRaw\": 53683, \"acRate\": \"49.3%\"}",
            "hints": [
                "Is there a way to order the intervals and queries such that it takes less time to query?",
                "Is there a way to add and remove intervals by going from the smallest query to the largest query to find the minimum size?"
            ],
            "rephrased": {
                "body": "Given a 2D integer array `intervals`, where `intervals[i] = [left_i, right_i]` represents an interval starting at `left_i` and ending at `right_i` (inclusive). The size of an interval is defined as `right_i - left_i + 1`.  You are also given an integer array `queries`. For each query `queries[j]`, find the size of the smallest interval `i` such that `left_i <= queries[j] <= right_i`. If no such interval exists, return -1. Return an array containing the answers to all queries.",
                "constraints": [
                    "1 <= intervals.length <= 10^5",
                    "1 <= queries.length <= 10^5",
                    "intervals[i].length == 2",
                    "1 <= left_i <= right_i <= 10^7",
                    "1 <= queries[j] <= 10^7"
                ],
                "testcases": [
                    {
                        "input": "intervals = [[1,4],[2,4],[3,6],[4,4]], queries = [2,3,4,5]",
                        "output": "[3,3,1,4]",
                        "explanation": "For query 2, the interval [2,4] is the smallest containing 2 (size 3). For query 3, [2,4] is the smallest containing 3 (size 3). For query 4, [4,4] is the smallest containing 4 (size 1). For query 5, [3,6] is the smallest containing 5 (size 4)."
                    },
                    {
                        "input": "intervals = [[2,3],[2,5],[1,8],[20,25]], queries = [2,19,5,22]",
                        "output": "[2,-1,4,6]",
                        "explanation": "For query 2, the interval [2,3] is the smallest containing 2 (size 2). For query 19, no interval contains 19, so the answer is -1. For query 5, [2,5] is the smallest containing 5 (size 4). For query 22, [20,25] is the smallest containing 22 (size 6)."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Hard",
                "titleSlug": "number-of-flowers-in-full-bloom",
                "title": "Number of Flowers in Full Bloom",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "Is there a way to order the intervals and queries such that it takes less time to query?",
            "Is there a way to add and remove intervals by going from the smallest query to the largest query to find the minimum size?"
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Line Sweep",
                "slug": "line-sweep"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            }
        ]
    }
}