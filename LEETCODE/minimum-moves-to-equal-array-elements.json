{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "453",
            "title": "Minimum Moves to Equal Array Elements",
            "titleSlug": "minimum-moves-to-equal-array-elements",
            "content": "<p>Given an integer array <code>nums</code> of size <code>n</code>, return <em>the minimum number of moves required to make all array elements equal</em>.</p>\n\n<p>In one move, you can increment <code>n - 1</code> elements of the array by <code>1</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> Only three moves are needed (remember each move increments two elements):\n[1,2,3]  =&gt;  [2,3,3]  =&gt;  [3,4,3]  =&gt;  [4,4,4]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,1,1]\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == nums.length</code></li>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>-10<sup>9</sup> &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n\t<li>The answer is guaranteed to fit in a <strong>32-bit</strong> integer.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 2492,
            "dislikes": 1876,
            "similarQuestions": "[{\"title\": \"Minimum Moves to Equal Array Elements II\", \"titleSlug\": \"minimum-moves-to-equal-array-elements-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Running Time of N Computers\", \"titleSlug\": \"maximum-running-time-of-n-computers\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Pour Water Between Buckets to Make Water Levels Equal\", \"titleSlug\": \"pour-water-between-buckets-to-make-water-levels-equal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Divide Players Into Teams of Equal Skill\", \"titleSlug\": \"divide-players-into-teams-of-equal-skill\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "stats": "{\"totalAccepted\": \"164.8K\", \"totalSubmission\": \"291.6K\", \"totalAcceptedRaw\": 164758, \"totalSubmissionRaw\": 291588, \"acRate\": \"56.5%\"}",
            "hints": [],
            "rephrased": {
                "body": "Given an integer array `nums` of size `n`, determine the minimum number of moves needed to equalize all elements in the array. A move consists of incrementing `n - 1` elements of the array by 1.",
                "constraints": [
                    "`n == nums.length`",
                    "`1 <= nums.length <= 10^5`",
                    "`-10^9 <= nums[i] <= 10^9`",
                    "The answer is guaranteed to fit in a 32-bit integer."
                ],
                "testcases": [
                    {
                        "input": "[1,2,3]",
                        "output": "3",
                        "explanation": "To make all elements equal, we need three moves. The array transforms as follows: [1, 2, 3] -> [2, 3, 3] -> [3, 4, 3] -> [4, 4, 4]."
                    },
                    {
                        "input": "[1,1,1]",
                        "output": "0",
                        "explanation": "Since all elements are already equal, no moves are required."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "minimum-moves-to-equal-array-elements-ii",
                "title": "Minimum Moves to Equal Array Elements II",
                "isPaidOnly": false
            },
            {
                "difficulty": "Hard",
                "titleSlug": "maximum-running-time-of-n-computers",
                "title": "Maximum Running Time of N Computers",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "pour-water-between-buckets-to-make-water-levels-equal",
                "title": "Pour Water Between Buckets to Make Water Levels Equal",
                "isPaidOnly": true
            },
            {
                "difficulty": "Medium",
                "titleSlug": "divide-players-into-teams-of-equal-skill",
                "title": "Divide Players Into Teams of Equal Skill",
                "isPaidOnly": false
            }
        ],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int minMoves(vector<int>& nums) {\n    const int min = *min_element(nums.begin(), nums.end());\n    return accumulate(nums.begin(), nums.end(), 0,\n                      [&](int a, int b) { return a + (b - min); });\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int minMoves(int[] nums) {\n    final int sum = Arrays.stream(nums).sum();\n    final int min = Arrays.stream(nums).min().getAsInt();\n    return sum - min * nums.length;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def minMoves(self, nums: List[int]) -> int:\n    mini = min(nums)\n    return sum(num - mini for num in nums)\n",
                "lang_text": "py"
            }
        }
    }
}