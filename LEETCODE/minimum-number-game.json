{
    "failed": false,
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2974",
            "title": "Minimum Number Game",
            "titleSlug": "minimum-number-game",
            "content": "<p>You are given a <strong>0-indexed</strong> integer array <code>nums</code> of <strong>even</strong> length and there is also an empty array <code>arr</code>. Alice and Bob decided to play a game where in every round Alice and Bob will do one move. The rules of the game are as follows:</p>\n\n<ul>\n\t<li>Every round, first Alice will remove the <strong>minimum</strong> element from <code>nums</code>, and then Bob does the same.</li>\n\t<li>Now, first Bob will append the removed element in the array <code>arr</code>, and then Alice does the same.</li>\n\t<li>The game continues until <code>nums</code> becomes empty.</li>\n</ul>\n\n<p>Return <em>the resulting array </em><code>arr</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [5,4,2,3]\n<strong>Output:</strong> [3,2,5,4]\n<strong>Explanation:</strong> In round one, first Alice removes 2 and then Bob removes 3. Then in arr firstly Bob appends 3 and then Alice appends 2. So arr = [3,2].\nAt the begining of round two, nums = [5,4]. Now, first Alice removes 4 and then Bob removes 5. Then both append in arr which becomes [3,2,5,4].\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,5]\n<strong>Output:</strong> [5,2]\n<strong>Explanation:</strong> In round one, first Alice removes 2 and then Bob removes 5. Then in arr firstly Bob appends and then Alice appends. So arr = [5,2].\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= nums.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 100</code></li>\n\t<li><code>nums.length % 2 == 0</code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 214,
            "dislikes": 14,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Heap (Priority Queue)",
                    "slug": "heap-priority-queue"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "stats": "{\"totalAccepted\": \"73.3K\", \"totalSubmission\": \"85.6K\", \"totalAcceptedRaw\": 73330, \"totalSubmissionRaw\": 85630, \"acRate\": \"85.6%\"}",
            "hints": [
                "Sort the array in increasing order and then swap the adjacent elements."
            ],
            "rephrased": {
                "body": "Given a 0-indexed integer array `nums` of even length, Alice and Bob play a game to construct an array `arr`.  In each round, Alice removes the minimum element from `nums`, followed by Bob removing the minimum element from the updated `nums`. Bob then appends his removed element to `arr`, and Alice appends her removed element to `arr`. The game continues until `nums` is empty.  Return the resulting array `arr`.",
                "constraints": [
                    "2 <= nums.length <= 100",
                    "1 <= nums[i] <= 100",
                    "nums.length % 2 == 0"
                ],
                "testcases": [
                    {
                        "input": "[5,4,2,3]",
                        "output": "[3,2,5,4]",
                        "explanation": "In the first round, Alice removes 2 and Bob removes 3. Bob appends 3 and Alice appends 2 to arr, resulting in arr = [3, 2]. In the second round, Alice removes 4 and Bob removes 5. Bob appends 5 and Alice appends 4 to arr, resulting in arr = [3, 2, 5, 4]."
                    },
                    {
                        "input": "[2,5]",
                        "output": "[5,2]",
                        "explanation": "In the first round, Alice removes 2 and Bob removes 5. Bob appends 5 and Alice appends 2 to arr, resulting in arr = [5, 2]."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "Sort the array in increasing order and then swap the adjacent elements."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  vector<int> numberGame(vector<int>& nums) {\n    ranges::sort(nums);\n    for (int i = 0; i < nums.size(); i += 2)\n      swap(nums[i], nums[i + 1]);\n    return nums;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int[] numberGame(int[] nums) {\n    Arrays.sort(nums);\n\n    for (int i = 0; i < nums.length; i += 2) {\n      final int temp = nums[i];\n      nums[i] = nums[i + 1];\n      nums[i + 1] = temp;\n    }\n\n    return nums;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def numberGame(self, nums: List[int]) -> List[int]:\n    nums.sort()\n    return [nums[i + 1] if i % 2 == 0\n            else nums[i - 1]\n            for i in range(len(nums))]\n",
                "lang_text": "py"
            }
        }
    }
}