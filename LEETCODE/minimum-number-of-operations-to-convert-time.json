{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2224",
            "title": "Minimum Number of Operations to Convert Time",
            "titleSlug": "minimum-number-of-operations-to-convert-time",
            "content": "<p>You are given two strings <code>current</code> and <code>correct</code> representing two <strong>24-hour times</strong>.</p>\n\n<p>24-hour times are formatted as <code>&quot;HH:MM&quot;</code>, where <code>HH</code> is between <code>00</code> and <code>23</code>, and <code>MM</code> is between <code>00</code> and <code>59</code>. The earliest 24-hour time is <code>00:00</code>, and the latest is <code>23:59</code>.</p>\n\n<p>In one operation you can increase the time <code>current</code> by <code>1</code>, <code>5</code>, <code>15</code>, or <code>60</code> minutes. You can perform this operation <strong>any</strong> number of times.</p>\n\n<p>Return <em>the <strong>minimum number of operations</strong> needed to convert </em><code>current</code><em> to </em><code>correct</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> current = &quot;02:30&quot;, correct = &quot;04:35&quot;\n<strong>Output:</strong> 3\n<strong>Explanation:\n</strong>We can convert current to correct in 3 operations as follows:\n- Add 60 minutes to current. current becomes &quot;03:30&quot;.\n- Add 60 minutes to current. current becomes &quot;04:30&quot;.\n- Add 5 minutes to current. current becomes &quot;04:35&quot;.\nIt can be proven that it is not possible to convert current to correct in fewer than 3 operations.</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> current = &quot;11:00&quot;, correct = &quot;11:01&quot;\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> We only have to add one minute to current, so the minimum number of operations needed is 1.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>current</code> and <code>correct</code> are in the format <code>&quot;HH:MM&quot;</code></li>\n\t<li><code>current &lt;= correct</code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 431,
            "dislikes": 34,
            "similarQuestions": "[{\"title\": \"Coin Change\", \"titleSlug\": \"coin-change\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Design an ATM Machine\", \"titleSlug\": \"design-an-atm-machine\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Count Days Spent Together\", \"titleSlug\": \"count-days-spent-together\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "stats": "{\"totalAccepted\": \"37.9K\", \"totalSubmission\": \"58.2K\", \"totalAcceptedRaw\": 37882, \"totalSubmissionRaw\": 58181, \"acRate\": \"65.1%\"}",
            "hints": [
                "Convert the times to minutes.",
                "Use the operation with the biggest value possible at each step."
            ],
            "rephrased": {
                "body": "Given two strings, `current` and `correct`, representing times in 24-hour format (\"HH:MM\"), determine the minimum number of operations to convert `current` to `correct`.  Allowed operations increment the time by 1, 5, 15, or 60 minutes. You can perform each operation as many times as needed.",
                "constraints": [
                    "`current` and `correct` are in the format `\"HH:MM\"`",
                    "`current <= correct`"
                ],
                "testcases": [
                    {
                        "input": "current = \"02:30\", correct = \"04:35\"",
                        "output": "3",
                        "explanation": "Convert \"02:30\" to \"04:35\" in a minimum of 3 steps:\n1. Add 60 minutes: \"02:30\" -> \"03:30\"\n2. Add 60 minutes: \"03:30\" -> \"04:30\"\n3. Add 5 minutes: \"04:30\" -> \"04:35\"\nNo sequence with fewer operations achieves the conversion."
                    },
                    {
                        "input": "current = \"11:00\", correct = \"11:01\"",
                        "output": "1",
                        "explanation": "A single operation adding 1 minute is sufficient: \"11:00\" -> \"11:01\"."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "coin-change",
                "title": "Coin Change",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "design-an-atm-machine",
                "title": "Design an ATM Machine",
                "isPaidOnly": false
            },
            {
                "difficulty": "Easy",
                "titleSlug": "count-days-spent-together",
                "title": "Count Days Spent Together",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "Convert the times to minutes.",
            "Use the operation with the biggest value possible at each step."
        ],
        "relatedTopics": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int convertTime(string current, string correct) {\n    const vector<int> ops{60, 15, 5, 1};\n    int diff = getMinutes(correct) - getMinutes(current);\n    int ans = 0;\n\n    for (const int op : ops) {\n      ans += diff / op;\n      diff %= op;\n    }\n\n    return ans;\n  }\n\n private:\n  int getMinutes(const string& s) {\n    return stoi(s.substr(0, 2)) * 60 + stoi(s.substr(3));\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int convertTime(String current, String correct) {\n    final int[] ops = {60, 15, 5, 1};\n    int diff = getMinutes(correct) - getMinutes(current);\n    int ans = 0;\n\n    for (final int op : ops) {\n      ans += diff / op;\n      diff %= op;\n    }\n\n    return ans;\n  }\n\n  private int getMinutes(final String s) {\n    return Integer.parseInt(s.substring(0, 2)) * 60 + Integer.parseInt(s.substring(3));\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def convertTime(self, current: str, correct: str) -> int:\n    ops = [60, 15, 5, 1]\n\n    def getMinutes(s: str) -> int:\n      return int(s[:2]) * 60 + int(s[3:])\n\n    diff = getMinutes(correct) - getMinutes(current)\n    ans = 0\n\n    for op in ops:\n      ans += diff // op\n      diff %= op\n\n    return ans\n",
                "lang_text": "py"
            }
        }
    }
}