{
    "failed": false,
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "3065",
            "title": "Minimum Operations to Exceed Threshold Value I",
            "titleSlug": "minimum-operations-to-exceed-threshold-value-i",
            "content": "<p>You are given a <strong>0-indexed</strong> integer array <code>nums</code>, and an integer <code>k</code>.</p>\n\n<p>In one operation, you can remove one occurrence of the smallest element of <code>nums</code>.</p>\n\n<p>Return <em>the <strong>minimum</strong> number of operations needed so that all elements of the array are greater than or equal to</em> <code>k</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,11,10,1,3], k = 10\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> After one operation, nums becomes equal to [2, 11, 10, 3].\nAfter two operations, nums becomes equal to [11, 10, 3].\nAfter three operations, nums becomes equal to [11, 10].\nAt this stage, all the elements of nums are greater than or equal to 10 so we can stop.\nIt can be shown that 3 is the minimum number of operations needed so that all elements of the array are greater than or equal to 10.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,1,2,4,9], k = 1\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> All elements of the array are greater than or equal to 1 so we do not need to apply any operations on nums.</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,1,2,4,9], k = 9\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> only a single element of nums is greater than or equal to 9 so we need to apply the operations 4 times on nums.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 50</code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n\t<li><code>1 &lt;= k &lt;= 10<sup>9</sup></code></li>\n\t<li>The input is generated such that there is at least one index <code>i</code> such that <code>nums[i] &gt;= k</code>.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 77,
            "dislikes": 4,
            "similarQuestions": "[{\"title\": \"Search Insert Position\", \"titleSlug\": \"search-insert-position\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Majority Element\", \"titleSlug\": \"majority-element\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "stats": "{\"totalAccepted\": \"53K\", \"totalSubmission\": \"61.9K\", \"totalAcceptedRaw\": 52994, \"totalSubmissionRaw\": 61922, \"acRate\": \"85.6%\"}",
            "hints": [
                "Iterate over <code>nums</code> and count the number of elements less than <code>k</code>."
            ],
            "rephrased": {
                "body": "Given a 0-indexed integer array `nums` and an integer `k`, determine the minimum number of operations needed to ensure all elements in `nums` are greater than or equal to `k`.  In each operation, you can remove one occurrence of the smallest element in `nums`.",
                "constraints": [
                    "1 <= nums.length <= 50",
                    "1 <= nums[i] <= 10^9",
                    "1 <= k <= 10^9",
                    "There is at least one index `i` such that `nums[i] >= k`."
                ],
                "testcases": [
                    {
                        "input": "nums = [2,11,10,1,3], k = 10",
                        "output": "3",
                        "explanation": "The smallest element, 1, is removed. nums becomes [2, 11, 10, 3]. The smallest element, 2, is removed. nums becomes [11, 10, 3]. The smallest element, 3, is removed. nums becomes [11, 10].  Now all elements are greater than or equal to 10. Three operations were required."
                    },
                    {
                        "input": "nums = [1,1,2,4,9], k = 1",
                        "output": "0",
                        "explanation": "All elements in `nums` are already greater than or equal to 1. No operations are needed."
                    },
                    {
                        "input": "nums = [1,1,2,4,9], k = 9",
                        "output": "4",
                        "explanation": "To have all elements greater than or equal to 9, we need to remove 1, 1, 2, and 4. Four operations are needed."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Easy",
                "titleSlug": "search-insert-position",
                "title": "Search Insert Position",
                "isPaidOnly": false
            },
            {
                "difficulty": "Easy",
                "titleSlug": "majority-element",
                "title": "Majority Element",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "Iterate over <code>nums</code> and count the number of elements less than <code>k</code>."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int minOperations(vector<int>& nums, int k) {\n    return ranges::count_if(nums, [k](int num) { return num < k; });\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int minOperations(int[] nums, int k) {\n    return (int) Arrays.stream(nums).filter(num -> num < k).count();\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def minOperations(self, nums: List[int], k: int) -> int:\n    return sum(num < k for num in nums)\n",
                "lang_text": "py"
            }
        }
    }
}