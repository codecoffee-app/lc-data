{
    "failed": false,
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "3192",
            "title": "Minimum Operations to Make Binary Array Elements Equal to One II",
            "titleSlug": "minimum-operations-to-make-binary-array-elements-equal-to-one-ii",
            "content": "<p>You are given a <span data-keyword=\"binary-array\">binary array</span> <code>nums</code>.</p>\n\n<p>You can do the following operation on the array <strong>any</strong> number of times (possibly zero):</p>\n\n<ul>\n\t<li>Choose <strong>any</strong> index <code>i</code> from the array and <strong>flip</strong> <strong>all</strong> the elements from index <code>i</code> to the end of the array.</li>\n</ul>\n\n<p><strong>Flipping</strong> an element means changing its value from 0 to 1, and from 1 to 0.</p>\n\n<p>Return the <strong>minimum</strong> number of operations required to make all elements in <code>nums</code> equal to 1.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">nums = [0,1,1,0,1]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">4</span></p>\n\n<p><strong>Explanation:</strong><br />\nWe can do the following operations:</p>\n\n<ul>\n\t<li>Choose the index <code>i = 1</code><span class=\"example-io\">. The resulting array will be <code>nums = [0,<u><strong>0</strong></u>,<u><strong>0</strong></u>,<u><strong>1</strong></u>,<u><strong>0</strong></u>]</code>.</span></li>\n\t<li>Choose the index <code>i = 0</code><span class=\"example-io\">. The resulting array will be <code>nums = [<u><strong>1</strong></u>,<u><strong>1</strong></u>,<u><strong>1</strong></u>,<u><strong>0</strong></u>,<u><strong>1</strong></u>]</code>.</span></li>\n\t<li>Choose the index <code>i = 4</code><span class=\"example-io\">. The resulting array will be <code>nums = [1,1,1,0,<u><strong>0</strong></u>]</code>.</span></li>\n\t<li>Choose the index <code>i = 3</code><span class=\"example-io\">. The resulting array will be <code>nums = [1,1,1,<u><strong>1</strong></u>,<u><strong>1</strong></u>]</code>.</span></li>\n</ul>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">nums = [1,0,0,0]</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">1</span></p>\n\n<p><strong>Explanation:</strong><br />\nWe can do the following operation:</p>\n\n<ul>\n\t<li>Choose the index <code>i = 1</code><span class=\"example-io\">. The resulting array will be <code>nums = [1,<u><strong>1</strong></u>,<u><strong>1</strong></u>,<u><strong>1</strong></u>]</code>.</span></li>\n</ul>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 1</code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 53,
            "dislikes": 5,
            "similarQuestions": "[{\"title\": \"Minimum Suffix Flips\", \"titleSlug\": \"minimum-suffix-flips\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [],
            "stats": "{\"totalAccepted\": \"24.7K\", \"totalSubmission\": \"40K\", \"totalAcceptedRaw\": 24711, \"totalSubmissionRaw\": 40017, \"acRate\": \"61.8%\"}",
            "hints": [
                "The only way to change <code>nums[0]</code> to 1 is by performing an operation with index <code>i = 0</code>.",
                "Iterate from left to right and perform an operation at each index i where nums[i] is 0, and keep track of how many operations are currently performed on the suffix."
            ],
            "rephrased": {
                "body": "Given a binary array `nums`, you can perform the following operation any number of times:\n\nChoose any index `i` and flip all elements from `i` to the end of the array (0 becomes 1 and 1 becomes 0).\n\nReturn the minimum number of operations needed to make all elements in `nums` equal to 1.",
                "constraints": [
                    "1 <= nums.length <= 10^5",
                    "0 <= nums[i] <= 1"
                ],
                "testcases": [
                    {
                        "input": "[0,1,1,0,1]",
                        "output": "4",
                        "explanation": "The optimal solution involves flipping at indices 1, 0, 4, and 3. Flipping at index 1 transforms the array to [0,0,0,1,0].  Flipping at index 0 transforms the array to [1,1,1,0,1]. Flipping at index 4 transforms the array to [1,1,1,0,0]. Flipping at index 3 transforms the array to [1,1,1,1,1]."
                    },
                    {
                        "input": "[1,0,0,0]",
                        "output": "1",
                        "explanation": "Flipping at index 1 transforms the array to [1,1,1,1]."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "minimum-suffix-flips",
                "title": "Minimum Suffix Flips",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "The only way to change <code>nums[0]</code> to 1 is by performing an operation with index <code>i = 0</code>.",
            "Iterate from left to right and perform an operation at each index i where nums[i] is 0, and keep track of how many operations are currently performed on the suffix."
        ],
        "relatedTopics": [],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int minOperations(vector<int>& nums) {\n    int ans = 0;\n    int target = 1;\n\n    for (const int num : nums)\n      if (num != target) {\n        target ^= 1;\n        ++ans;\n      }\n\n    return ans;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int minOperations(int[] nums) {\n    int ans = 0;\n    int target = 1;\n\n    for (final int num : nums)\n      if (num != target) {\n        target ^= 1;\n        ++ans;\n      }\n\n    return ans;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def minOperations(self, nums: List[int]) -> int:\n    ans = 0\n    target = 1\n\n    for num in nums:\n      if num != target:\n        ans += 1\n        target ^= 1\n\n    return ans\n",
                "lang_text": "py"
            }
        }
    }
}