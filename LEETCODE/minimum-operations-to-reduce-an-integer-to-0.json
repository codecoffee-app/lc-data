{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2571",
            "title": "Minimum Operations to Reduce an Integer to 0",
            "titleSlug": "minimum-operations-to-reduce-an-integer-to-0",
            "content": "<p>You are given a positive integer <code>n</code>, you can do the following operation <strong>any</strong> number of times:</p>\n\n<ul>\n\t<li>Add or subtract a <strong>power</strong> of <code>2</code> from <code>n</code>.</li>\n</ul>\n\n<p>Return <em>the <strong>minimum</strong> number of operations to make </em><code>n</code><em> equal to </em><code>0</code>.</p>\n\n<p>A number <code>x</code> is power of <code>2</code> if <code>x == 2<sup>i</sup></code>&nbsp;where <code>i &gt;= 0</code><em>.</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 39\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> We can do the following operations:\n- Add 2<sup>0</sup> = 1 to n, so now n = 40.\n- Subtract 2<sup>3</sup> = 8 from n, so now n = 32.\n- Subtract 2<sup>5</sup> = 32 from n, so now n = 0.\nIt can be shown that 3 is the minimum number of operations we need to make n equal to 0.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 54\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> We can do the following operations:\n- Add 2<sup>1</sup> = 2 to n, so now n = 56.\n- Add 2<sup>3</sup> = 8 to n, so now n = 64.\n- Subtract 2<sup>6</sup> = 64 from n, so now n = 0.\nSo the minimum number of operations is 3.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 10<sup>5</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 484,
            "dislikes": 190,
            "similarQuestions": "[{\"title\": \"Plus One\", \"titleSlug\": \"plus-one\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "stats": "{\"totalAccepted\": \"22.5K\", \"totalSubmission\": \"42.9K\", \"totalAcceptedRaw\": 22514, \"totalSubmissionRaw\": 42877, \"acRate\": \"52.5%\"}",
            "hints": [
                "Can we set/unset the bits in binary representation?",
                "If there are multiple adjacent ones, how can we optimally add and subtract in 2 operations such that all ones get unset?",
                "Bonus: Try to solve the problem with higher constraints: n \u2264 10^18."
            ],
            "rephrased": {
                "body": "Given a positive integer `n`, determine the minimum number of operations required to reduce `n` to 0. In each operation, you can either add or subtract a power of 2 from `n`. A number `x` is considered a power of 2 if it can be expressed as `x = 2^i`, where `i` is a non-negative integer.",
                "constraints": [
                    "1 <= n <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "39",
                        "output": "3",
                        "explanation": "One optimal sequence of operations is:  Add 2^0 = 1 (n becomes 40), Subtract 2^3 = 8 (n becomes 32), Subtract 2^5 = 32 (n becomes 0).  Therefore, 3 operations are required."
                    },
                    {
                        "input": "54",
                        "output": "3",
                        "explanation": "One optimal sequence of operations is: Add 2^1 = 2 (n becomes 56), Add 2^3 = 8 (n becomes 64), Subtract 2^6 = 64 (n becomes 0).  Therefore, the minimum number of operations is 3."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Easy",
                "titleSlug": "plus-one",
                "title": "Plus One",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "Can we set/unset the bits in binary representation?",
            "If there are multiple adjacent ones, how can we optimally add and subtract in 2 operations such that all ones get unset?",
            "Bonus: Try to solve the problem with higher constraints: n \u2264 10^18."
        ],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ]
    }
}