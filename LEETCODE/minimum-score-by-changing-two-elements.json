{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2567",
            "title": "Minimum Score by Changing Two Elements",
            "titleSlug": "minimum-score-by-changing-two-elements",
            "content": "<p>You are given a <strong>0-indexed</strong> integer array <code>nums</code>.</p>\n\n<ul>\n\t<li>The <strong>low</strong> score of <code><font face=\"monospace\">nums</font></code> is the minimum value of <code>|nums[i]&nbsp;- nums[j]|</code> over all <code>0 &lt;= i &lt; j &lt; nums.length</code>.</li>\n\t<li>The <strong>high</strong> score of&nbsp;<code><font face=\"monospace\">nums</font></code> is the maximum value of <code>|nums[i]&nbsp;- nums[j]|</code> over all <code>0 &lt;= i &lt; j &lt; nums.length</code>.</li>\n\t<li>The <strong>score</strong> of <code>nums</code> is the sum of the <strong>high</strong> and <strong>low</strong> scores of nums.</li>\n</ul>\n\n<p>To minimize the score of <code>nums</code>, we can change the value of <strong>at most two</strong> elements of <code>nums</code>.</p>\n\n<p>Return <em>the <strong>minimum</strong> possible <strong>score</strong> after changing&nbsp;the value of <strong>at most two</strong> elements o</em>f <code>nums</code>.</p>\n\n<p>Note that <code>|x|</code> denotes the absolute value of <code>x</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,4,3]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> Change value of nums[1] and nums[2] to 1 so that nums becomes [1,1,1]. Now, the value of <code>|nums[i] - nums[j]|</code> is always equal to 0, so we return 0 + 0 = 0.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,4,7,8,5]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> Change nums[0] and nums[1] to be 6. Now nums becomes [6,6,7,8,5].\nOur low score is achieved when i = 0 and j = 1, in which case |<code>nums[i] - nums[j]</code>| = |6 - 6| = 0.\nOur high score is achieved when i = 3 and j = 4, in which case |<code>nums[i] - nums[j]</code>| = |8 - 5| = 3.\nThe sum of our high and low score is 3, which we can prove to be minimal.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>3 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 207,
            "dislikes": 198,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "stats": "{\"totalAccepted\": \"15.6K\", \"totalSubmission\": \"32.9K\", \"totalAcceptedRaw\": 15607, \"totalSubmissionRaw\": 32873, \"acRate\": \"47.5%\"}",
            "hints": [
                "Changing the minimum or maximum values will only minimize the score.",
                "Think about what all possible pairs of minimum and maximum values can be changed to form the minimum score."
            ],
            "rephrased": {
                "body": "Given a 0-indexed integer array `nums`, you need to minimize its score. The low score is the minimum absolute difference between any two elements in `nums`, and the high score is the maximum absolute difference between any two elements in `nums`. The score of `nums` is the sum of its low and high scores. You are allowed to change the value of at most two elements in `nums`. Return the minimum possible score after making these changes.",
                "constraints": [
                    "3 <= nums.length <= 10^5",
                    "1 <= nums[i] <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "[1,4,3]",
                        "output": "0",
                        "explanation": "By changing nums[1] and nums[2] to 1, nums becomes [1,1,1]. The absolute difference between any two elements is 0, so the low score is 0 and the high score is 0. Thus, the total score is 0 + 0 = 0."
                    },
                    {
                        "input": "[1,4,7,8,5]",
                        "output": "3",
                        "explanation": "Changing nums[0] and nums[1] to 6 results in nums becoming [6,6,7,8,5]. The minimum absolute difference (low score) is |6 - 6| = 0. The maximum absolute difference (high score) is |8 - 5| = 3. The total score is 0 + 3 = 3."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "Changing the minimum or maximum values will only minimize the score.",
            "Think about what all possible pairs of minimum and maximum values can be changed to form the minimum score."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int minimizeSum(vector<int>& nums) {\n    std::ranges::sort(nums);\n    // Can always change the num to any other num in nums, so `low` becomes 0.\n    // So, we can rephrase the problem as finding the min `high`.\n    const int n = nums.size();\n    const int highOfChangingTwoMins = nums.back() - nums[2];\n    const int highOfChangingTwoMaxs = nums[n - 3] - nums[0];\n    const int highOfChangingMinAndMax = nums[n - 2] - nums[1];\n    return min({highOfChangingTwoMins, highOfChangingTwoMaxs,\n                highOfChangingMinAndMax});\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int minimizeSum(int[] nums) {\n    Arrays.sort(nums);\n    // Can always change the num to any other num in nums, so `low` becomes 0.\n    // So, we can rephrase the problem as finding the min `high`.\n    final int n = nums.length;\n    final int highOfChangingTwoMins = nums[n - 1] - nums[2];\n    final int highOfChangingTwoMaxs = nums[n - 3] - nums[0];\n    final int highOfChangingMinAndMax = nums[n - 2] - nums[1];\n    return Math.min(Math.min(highOfChangingTwoMins, highOfChangingTwoMaxs),\n                    highOfChangingMinAndMax);\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def minimizeSum(self, nums: List[int]) -> int:\n    nums.sort()\n    # Can always change the num to any other num in nums, so `low` becomes 0.\n    # So, we can rephrase the problem as finding the min `high`.\n    highOfChangingTwoMins = nums[-1] - nums[2]\n    highOfChangingTwoMaxs = nums[-3] - nums[0]\n    highOfChangingMinAndMax = nums[-2] - nums[1]\n    return min(highOfChangingTwoMins, highOfChangingTwoMaxs,\n               highOfChangingMinAndMax)\n",
                "lang_text": "py"
            }
        }
    }
}