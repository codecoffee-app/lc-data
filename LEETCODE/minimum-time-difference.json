{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "539",
            "title": "Minimum Time Difference",
            "titleSlug": "minimum-time-difference",
            "content": "Given a list of 24-hour clock time points in <strong>&quot;HH:MM&quot;</strong> format, return <em>the minimum <b>minutes</b> difference between any two time-points in the list</em>.\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> timePoints = [\"23:59\",\"00:00\"]\n<strong>Output:</strong> 1\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> timePoints = [\"00:00\",\"23:59\",\"00:00\"]\n<strong>Output:</strong> 0\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= timePoints.length &lt;= 2 * 10<sup>4</sup></code></li>\n\t<li><code>timePoints[i]</code> is in the format <strong>&quot;HH:MM&quot;</strong>.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 1788,
            "dislikes": 250,
            "similarQuestions": "[{\"title\": \"Minimum Cost to Set Cooking Time\", \"titleSlug\": \"minimum-cost-to-set-cooking-time\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "stats": "{\"totalAccepted\": \"138.9K\", \"totalSubmission\": \"245.3K\", \"totalAcceptedRaw\": 138931, \"totalSubmissionRaw\": 245269, \"acRate\": \"56.6%\"}",
            "hints": [],
            "rephrased": {
                "body": "Given a list of 24-hour clock time points in \"HH:MM\" format, find the minimum difference in minutes between any two time points in the list.",
                "constraints": [
                    "2 <= timePoints.length <= 2 * 10^4",
                    "timePoints[i] is in the format \"HH:MM\"."
                ],
                "testcases": [
                    {
                        "input": "[\"23:59\",\"00:00\"]",
                        "output": "1",
                        "explanation": "The time points are one minute apart."
                    },
                    {
                        "input": "[\"00:00\",\"23:59\",\"00:00\"]",
                        "output": "0",
                        "explanation": "The list contains duplicate time points, so the minimum difference is zero."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "minimum-cost-to-set-cooking-time",
                "title": "Minimum Cost to Set Cooking Time",
                "isPaidOnly": false
            }
        ],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int findMinDifference(vector<string>& timePoints) {\n    int ans = 24 * 60;\n    int first = 24 * 60;\n    vector<bool> bucket(24 * 60);\n\n    for (const string& time : timePoints) {\n      const int num = stoi(time.substr(0, 2)) * 60 + stoi(time.substr(3));\n      first = min(first, num);\n      if (bucket[num])\n        return 0;\n      bucket[num] = true;\n    }\n\n    int prev = first;\n\n    for (int i = first + 1; i < bucket.size(); ++i)\n      if (bucket[i]) {\n        ans = min(ans, i - prev);\n        prev = i;\n      }\n\n    return min(ans, 24 * 60 - prev + first);\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int findMinDifference(List<String> timePoints) {\n    int ans = 24 * 60;\n    int first = 24 * 60;\n    boolean[] bucket = new boolean[24 * 60];\n\n    for (final String timePoint : timePoints) {\n      final int num =\n          Integer.valueOf(timePoint.substring(0, 2)) * 60 + Integer.valueOf(timePoint.substring(3));\n      first = Math.min(first, num);\n      if (bucket[num])\n        return 0;\n      bucket[num] = true;\n    }\n\n    int prev = first;\n\n    for (int i = first + 1; i < bucket.length; ++i)\n      if (bucket[i]) {\n        ans = Math.min(ans, i - prev);\n        prev = i;\n      }\n\n    return Math.min(ans, 24 * 60 - prev + first);\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def findMinDifference(self, timePoints: List[str]) -> int:\n    ans = 24 * 60\n    nums = sorted([int(timePoint[:2]) * 60 + int(timePoint[3:])\n                   for timePoint in timePoints])\n\n    for a, b in zip(nums, nums[1:]):\n      ans = min(ans, b - a)\n\n    return min(ans, 24 * 60 - nums[-1] + nums[0])\n",
                "lang_text": "py"
            }
        }
    }
}