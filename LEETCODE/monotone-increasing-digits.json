{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "738",
            "title": "Monotone Increasing Digits",
            "titleSlug": "monotone-increasing-digits",
            "content": "<p>An integer has <strong>monotone increasing digits</strong> if and only if each pair of adjacent digits <code>x</code> and <code>y</code> satisfy <code>x &lt;= y</code>.</p>\n\n<p>Given an integer <code>n</code>, return <em>the largest number that is less than or equal to </em><code>n</code><em> with <strong>monotone increasing digits</strong></em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 10\n<strong>Output:</strong> 9\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 1234\n<strong>Output:</strong> 1234\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 332\n<strong>Output:</strong> 299\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= n &lt;= 10<sup>9</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 1279,
            "dislikes": 103,
            "similarQuestions": "[{\"title\": \"Remove K Digits\", \"titleSlug\": \"remove-k-digits\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "stats": "{\"totalAccepted\": \"49.9K\", \"totalSubmission\": \"104.6K\", \"totalAcceptedRaw\": 49872, \"totalSubmissionRaw\": 104594, \"acRate\": \"47.7%\"}",
            "hints": [
                "Build the answer digit by digit, adding the largest possible one that would make the number still less than or equal to N."
            ],
            "rephrased": {
                "body": "Find the largest number less than or equal to a given integer 'n' that has monotone increasing digits. An integer has monotone increasing digits if, for every pair of adjacent digits x and y, x <= y.",
                "constraints": [
                    "0 <= n <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "10",
                        "output": "9",
                        "explanation": "The largest monotone increasing number less than or equal to 10 is 9."
                    },
                    {
                        "input": "1234",
                        "output": "1234",
                        "explanation": "The number 1234 already has monotone increasing digits."
                    },
                    {
                        "input": "332",
                        "output": "299",
                        "explanation": "The largest monotone increasing number less than or equal to 332 is 299."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "remove-k-digits",
                "title": "Remove K Digits",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "Build the answer digit by digit, adding the largest possible one that would make the number still less than or equal to N."
        ],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int monotoneIncreasingDigits(int n) {\n    string s = to_string(n);\n    const int n = s.length();\n    int k = n;  // s[k:] -> '9'\n\n    for (int i = n - 1; i > 0; --i)\n      if (s[i] < s[i - 1]) {\n        --s[i - 1];\n        k = i;\n      }\n\n    for (int i = k; i < n; ++i)\n      s[i] = '9';\n\n    return stoi(s);\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int monotoneIncreasingDigits(int n) {\n    char[] s = String.valueOf(n).toCharArray();\n    final int n = s.length;\n    int k = n; // s[k:] -> '9'\n\n    for (int i = n - 1; i > 0; --i)\n      if (s[i] < s[i - 1]) {\n        --s[i - 1];\n        k = i;\n      }\n\n    for (int i = k; i < n; ++i)\n      s[i] = '9';\n\n    return Integer.parseInt(new String(s));\n  }\n}\n",
                "lang_text": "java"
            }
        }
    }
}