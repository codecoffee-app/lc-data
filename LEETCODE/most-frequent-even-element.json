{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2404",
            "title": "Most Frequent Even Element",
            "titleSlug": "most-frequent-even-element",
            "content": "<p>Given an integer array <code>nums</code>, return <em>the most frequent even element</em>.</p>\n\n<p>If there is a tie, return the <strong>smallest</strong> one. If there is no such element, return <code>-1</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [0,1,2,2,4,4,1]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong>\nThe even elements are 0, 2, and 4. Of these, 2 and 4 appear the most.\nWe return the smallest one, which is 2.</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [4,4,4,9,2,4]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> 4 is the even element appears the most.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [29,47,21,41,13,37,25,7]\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> There is no even element.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 2000</code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 866,
            "dislikes": 30,
            "similarQuestions": "[{\"title\": \"Majority Element\", \"titleSlug\": \"majority-element\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Majority Element II\", \"titleSlug\": \"majority-element-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Top K Frequent Elements\", \"titleSlug\": \"top-k-frequent-elements\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Sort Characters By Frequency\", \"titleSlug\": \"sort-characters-by-frequency\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "stats": "{\"totalAccepted\": \"67.4K\", \"totalSubmission\": \"134.3K\", \"totalAcceptedRaw\": 67435, \"totalSubmissionRaw\": 134296, \"acRate\": \"50.2%\"}",
            "hints": [
                "Could you count the frequency of each even element in the array?",
                "Would a hashmap help?"
            ],
            "rephrased": {
                "body": "Given an integer array `nums`, find the most frequent even element. If multiple even elements have the same highest frequency, return the smallest one. If there are no even elements in the array, return -1.",
                "constraints": [
                    "1 <= nums.length <= 2000",
                    "0 <= nums[i] <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "[0,1,2,2,4,4,1]",
                        "output": "2",
                        "explanation": "The even numbers are 0, 2, and 4. Both 2 and 4 appear twice, which is the highest frequency. The smallest of these is 2."
                    },
                    {
                        "input": "[4,4,4,9,2,4]",
                        "output": "4",
                        "explanation": "The even numbers are 4 and 2. The number 4 appears four times, which is the highest frequency."
                    },
                    {
                        "input": "[29,47,21,41,13,37,25,7]",
                        "output": "-1",
                        "explanation": "There are no even numbers in the input array."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Easy",
                "titleSlug": "majority-element",
                "title": "Majority Element",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "majority-element-ii",
                "title": "Majority Element II",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "top-k-frequent-elements",
                "title": "Top K Frequent Elements",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "sort-characters-by-frequency",
                "title": "Sort Characters By Frequency",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "Could you count the frequency of each even element in the array?",
            "Would a hashmap help?"
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int mostFrequentEven(vector<int>& nums) {\n    int ans = -1;\n    unordered_map<int, int> count;\n\n    for (const int num : nums) {\n      if (num & 1)\n        continue;\n      const int newCount = ++count[num];\n      const int maxCount = count[ans];\n      if (newCount > maxCount || newCount == maxCount && num < ans)\n        ans = num;\n    }\n\n    return ans;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int mostFrequentEven(int[] nums) {\n    int ans = -1;\n    Map<Integer, Integer> count = new HashMap<>();\n\n    for (final int num : nums) {\n      if (num % 2 == 1)\n        continue;\n      final int newCount = count.merge(num, 1, Integer::sum);\n      final int maxCount = count.getOrDefault(ans, 0);\n      if (newCount > maxCount || newCount == maxCount && num < ans)\n        ans = num;\n    }\n\n    return ans;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def mostFrequentEven(self, nums: List[int]) -> int:\n    ans = -1\n    count = collections.Counter()\n\n    for num in nums:\n      if num & 1:\n        continue\n      count[num] += 1\n      newCount = count[num]\n      maxCount = count[ans]\n      if newCount > maxCount or newCount == maxCount and num < ans:\n        ans = num\n\n    return ans\n",
                "lang_text": "py"
            }
        }
    }
}