{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "43",
            "title": "Multiply Strings",
            "titleSlug": "multiply-strings",
            "content": "<p>Given two non-negative integers <code>num1</code> and <code>num2</code> represented as strings, return the product of <code>num1</code> and <code>num2</code>, also represented as a string.</p>\n\n<p><strong>Note:</strong>&nbsp;You must not use any built-in BigInteger library or convert the inputs to integer directly.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> num1 = \"2\", num2 = \"3\"\n<strong>Output:</strong> \"6\"\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> num1 = \"123\", num2 = \"456\"\n<strong>Output:</strong> \"56088\"\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= num1.length, num2.length &lt;= 200</code></li>\n\t<li><code>num1</code> and <code>num2</code> consist of digits only.</li>\n\t<li>Both <code>num1</code> and <code>num2</code>&nbsp;do not contain any leading zero, except the number <code>0</code> itself.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 6809,
            "dislikes": 3175,
            "similarQuestions": "[{\"title\": \"Add Two Numbers\", \"titleSlug\": \"add-two-numbers\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Plus One\", \"titleSlug\": \"plus-one\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Add Binary\", \"titleSlug\": \"add-binary\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Add Strings\", \"titleSlug\": \"add-strings\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Apply Discount to Prices\", \"titleSlug\": \"apply-discount-to-prices\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "stats": "{\"totalAccepted\": \"735.3K\", \"totalSubmission\": \"1.8M\", \"totalAcceptedRaw\": 735341, \"totalSubmissionRaw\": 1847874, \"acRate\": \"39.8%\"}",
            "hints": [],
            "rephrased": {
                "body": "Given two non-negative integers, `num1` and `num2`, represented as strings, calculate their product, also represented as a string. You are not allowed to use any built-in BigInteger libraries or directly convert the input strings to integers.",
                "constraints": [
                    "1 <= num1.length, num2.length <= 200",
                    "num1 and num2 consist of digits only.",
                    "Both num1 and num2 do not contain any leading zero, except the number 0 itself."
                ],
                "testcases": [
                    {
                        "input": "num1 = \"2\", num2 = \"3\"",
                        "output": "\"6\"",
                        "explanation": null
                    },
                    {
                        "input": "num1 = \"123\", num2 = \"456\"",
                        "output": "\"56088\"",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "add-two-numbers",
                "title": "Add Two Numbers",
                "isPaidOnly": false
            },
            {
                "difficulty": "Easy",
                "titleSlug": "plus-one",
                "title": "Plus One",
                "isPaidOnly": false
            },
            {
                "difficulty": "Easy",
                "titleSlug": "add-binary",
                "title": "Add Binary",
                "isPaidOnly": false
            },
            {
                "difficulty": "Easy",
                "titleSlug": "add-strings",
                "title": "Add Strings",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "apply-discount-to-prices",
                "title": "Apply Discount to Prices",
                "isPaidOnly": false
            }
        ],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  string multiply(string num1, string num2) {\n    string s(num1.length() + num2.length(), '0');\n\n    for (int i = num1.length() - 1; i >= 0; --i)\n      for (int j = num2.length() - 1; j >= 0; --j) {\n        const int mult = (num1[i] - '0') * (num2[j] - '0');\n        const int sum = mult + (s[i + j + 1] - '0');\n        s[i + j] += sum / 10;\n        s[i + j + 1] = '0' + sum % 10;\n      }\n\n    const int i = s.find_first_not_of('0');\n    return i == -1 ? \"0\" : s.substr(i);\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public String multiply(String num1, String num2) {\n    final int m = num1.length();\n    final int n = num2.length();\n\n    StringBuilder sb = new StringBuilder();\n    int[] pos = new int[m + n];\n\n    for (int i = m - 1; i >= 0; --i)\n      for (int j = n - 1; j >= 0; --j) {\n        final int multiply = (num1.charAt(i) - '0') * (num2.charAt(j) - '0');\n        final int sum = multiply + pos[i + j + 1];\n        pos[i + j] += sum / 10;\n        pos[i + j + 1] = sum % 10;\n      }\n\n    for (final int p : pos)\n      if (p > 0 || sb.length() > 0)\n        sb.append(p);\n\n    return sb.length() == 0 ? \"0\" : sb.toString();\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def multiply(self, num1: str, num2: str) -> str:\n    s = [0] * (len(num1) + len(num2))\n\n    for i in reversed(range(len(num1))):\n      for j in reversed(range(len(num2))):\n        mult = int(num1[i]) * int(num2[j])\n        summ = mult + s[i + j + 1]\n        s[i + j] += summ // 10\n        s[i + j + 1] = summ % 10\n\n    for i, c in enumerate(s):\n      if c != 0:\n        break\n\n    return ''.join(map(str, s[i:]))\n",
                "lang_text": "py"
            }
        }
    }
}