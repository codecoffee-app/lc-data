{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "496",
            "title": "Next Greater Element I",
            "titleSlug": "next-greater-element-i",
            "content": "<p>The <strong>next greater element</strong> of some element <code>x</code> in an array is the <strong>first greater</strong> element that is <strong>to the right</strong> of <code>x</code> in the same array.</p>\n\n<p>You are given two <strong>distinct 0-indexed</strong> integer arrays <code>nums1</code> and <code>nums2</code>, where <code>nums1</code> is a subset of <code>nums2</code>.</p>\n\n<p>For each <code>0 &lt;= i &lt; nums1.length</code>, find the index <code>j</code> such that <code>nums1[i] == nums2[j]</code> and determine the <strong>next greater element</strong> of <code>nums2[j]</code> in <code>nums2</code>. If there is no next greater element, then the answer for this query is <code>-1</code>.</p>\n\n<p>Return <em>an array </em><code>ans</code><em> of length </em><code>nums1.length</code><em> such that </em><code>ans[i]</code><em> is the <strong>next greater element</strong> as described above.</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [4,1,2], nums2 = [1,3,4,2]\n<strong>Output:</strong> [-1,3,-1]\n<strong>Explanation:</strong> The next greater element for each value of nums1 is as follows:\n- 4 is underlined in nums2 = [1,3,<u>4</u>,2]. There is no next greater element, so the answer is -1.\n- 1 is underlined in nums2 = [<u>1</u>,3,4,2]. The next greater element is 3.\n- 2 is underlined in nums2 = [1,3,4,<u>2</u>]. There is no next greater element, so the answer is -1.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums1 = [2,4], nums2 = [1,2,3,4]\n<strong>Output:</strong> [3,-1]\n<strong>Explanation:</strong> The next greater element for each value of nums1 is as follows:\n- 2 is underlined in nums2 = [1,<u>2</u>,3,4]. The next greater element is 3.\n- 4 is underlined in nums2 = [1,2,3,<u>4</u>]. There is no next greater element, so the answer is -1.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums1.length &lt;= nums2.length &lt;= 1000</code></li>\n\t<li><code>0 &lt;= nums1[i], nums2[i] &lt;= 10<sup>4</sup></code></li>\n\t<li>All integers in <code>nums1</code> and <code>nums2</code> are <strong>unique</strong>.</li>\n\t<li>All the integers of <code>nums1</code> also appear in <code>nums2</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow up:</strong> Could you find an <code>O(nums1.length + nums2.length)</code> solution?",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 7412,
            "dislikes": 603,
            "similarQuestions": "[{\"title\": \"Next Greater Element II\", \"titleSlug\": \"next-greater-element-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Next Greater Element III\", \"titleSlug\": \"next-greater-element-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Daily Temperatures\", \"titleSlug\": \"daily-temperatures\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Sum of Subarray Ranges\", \"titleSlug\": \"sum-of-subarray-ranges\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Sum of Total Strength of Wizards\", \"titleSlug\": \"sum-of-total-strength-of-wizards\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Next Greater Element IV\", \"titleSlug\": \"next-greater-element-iv\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Remove Nodes From Linked List\", \"titleSlug\": \"remove-nodes-from-linked-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Stack",
                    "slug": "stack"
                },
                {
                    "name": "Monotonic Stack",
                    "slug": "monotonic-stack"
                }
            ],
            "stats": "{\"totalAccepted\": \"635.6K\", \"totalSubmission\": \"884.8K\", \"totalAcceptedRaw\": 635562, \"totalSubmissionRaw\": 884803, \"acRate\": \"71.8%\"}",
            "hints": [],
            "rephrased": {
                "body": "Given two distinct, 0-indexed integer arrays, `nums1` and `nums2`, where `nums1` is a subset of `nums2`. For each element in `nums1`, find its corresponding index in `nums2` and determine the next greater element to the right in `nums2`. If no next greater element exists, the answer is -1. Return an array `ans` where `ans[i]` is the next greater element for `nums1[i]`. In essence, for each element `x` in `nums1`, we seek the first element greater than `x` to its right in `nums2`.",
                "constraints": [
                    "1 <= nums1.length <= nums2.length <= 1000",
                    "0 <= nums1[i], nums2[i] <= 10^4",
                    "All integers in nums1 and nums2 are unique.",
                    "All the integers of nums1 also appear in nums2."
                ],
                "testcases": [
                    {
                        "input": "nums1 = [4,1,2], nums2 = [1,3,4,2]",
                        "output": "[-1,3,-1]",
                        "explanation": "For 4 in nums2 = [1,3,4,2], there is no next greater element, so the answer is -1.\nFor 1 in nums2 = [1,3,4,2], the next greater element is 3.\nFor 2 in nums2 = [1,3,4,2], there is no next greater element, so the answer is -1."
                    },
                    {
                        "input": "nums1 = [2,4], nums2 = [1,2,3,4]",
                        "output": "[3,-1]",
                        "explanation": "For 2 in nums2 = [1,2,3,4], the next greater element is 3.\nFor 4 in nums2 = [1,2,3,4], there is no next greater element, so the answer is -1."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "next-greater-element-ii",
                "title": "Next Greater Element II",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "next-greater-element-iii",
                "title": "Next Greater Element III",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "daily-temperatures",
                "title": "Daily Temperatures",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "sum-of-subarray-ranges",
                "title": "Sum of Subarray Ranges",
                "isPaidOnly": false
            },
            {
                "difficulty": "Hard",
                "titleSlug": "sum-of-total-strength-of-wizards",
                "title": "Sum of Total Strength of Wizards",
                "isPaidOnly": false
            },
            {
                "difficulty": "Hard",
                "titleSlug": "next-greater-element-iv",
                "title": "Next Greater Element IV",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "remove-nodes-from-linked-list",
                "title": "Remove Nodes From Linked List",
                "isPaidOnly": false
            }
        ],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Stack",
                "slug": "stack"
            },
            {
                "name": "Monotonic Stack",
                "slug": "monotonic-stack"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\n    vector<int> ans;\n    unordered_map<int, int> numToNextGreater;\n    stack<int> stack;  // decreasing stack\n\n    for (const int num : nums2) {\n      while (!stack.empty() && stack.top() < num)\n        numToNextGreater[stack.top()] = num, stack.pop();\n      stack.push(num);\n    }\n\n    for (const int num : nums1)\n      if (const auto it = numToNextGreater.find(num);\n          it != numToNextGreater.cend())\n        ans.push_back(it->second);\n      else\n        ans.push_back(-1);\n\n    return ans;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int[] nextGreaterElement(int[] nums1, int[] nums2) {\n    List<Integer> ans = new ArrayList<>();\n    Map<Integer, Integer> numToNextGreater = new HashMap<>();\n    Deque<Integer> stack = new ArrayDeque<>(); // decreasing stack\n\n    for (final int num : nums2) {\n      while (!stack.isEmpty() && stack.peek() < num)\n        numToNextGreater.put(stack.pop(), num);\n      stack.push(num);\n    }\n\n    for (final int num : nums1)\n      if (numToNextGreater.containsKey(num))\n        ans.add(numToNextGreater.get(num));\n      else\n        ans.add(-1);\n\n    return ans.stream().mapToInt(Integer::intValue).toArray();\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -> List[int]:\n    numToNextGreater = {}\n    stack = []  # decreasing stack\n\n    for num in nums2:\n      while stack and stack[-1] < num:\n        numToNextGreater[stack.pop()] = num\n      stack.append(num)\n\n    return [numToNextGreater.get(num, -1) for num in nums1]\n",
                "lang_text": "py"
            }
        }
    }
}