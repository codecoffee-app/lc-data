{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "665",
            "title": "Non-decreasing Array",
            "titleSlug": "non-decreasing-array",
            "content": "<p>Given an array <code>nums</code> with <code>n</code> integers, your task is to check if it could become non-decreasing by modifying <strong>at most one element</strong>.</p>\n\n<p>We define an array is non-decreasing if <code>nums[i] &lt;= nums[i + 1]</code> holds for every <code>i</code> (<strong>0-based</strong>) such that (<code>0 &lt;= i &lt;= n - 2</code>).</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [4,2,3]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> You could modify the first 4 to 1 to get a non-decreasing array.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [4,2,1]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> You cannot get a non-decreasing array by modifying at most one element.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == nums.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 10<sup>4</sup></code></li>\n\t<li><code>-10<sup>5</sup> &lt;= nums[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 5622,
            "dislikes": 768,
            "similarQuestions": "[{\"title\": \"Make Array Non-decreasing or Non-increasing\", \"titleSlug\": \"make-array-non-decreasing-or-non-increasing\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Find Good Days to Rob the Bank\", \"titleSlug\": \"find-good-days-to-rob-the-bank\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "stats": "{\"totalAccepted\": \"254.6K\", \"totalSubmission\": \"1M\", \"totalAcceptedRaw\": 254640, \"totalSubmissionRaw\": 1037625, \"acRate\": \"24.5%\"}",
            "hints": [],
            "rephrased": {
                "body": "Given an array `nums` of `n` integers, determine if it can be made non-decreasing by modifying at most one element. An array is non-decreasing if `nums[i] <= nums[i + 1]` for all `i` such that `0 <= i <= n - 2`.",
                "constraints": [
                    "n == nums.length",
                    "1 <= n <= 10^4",
                    "-10^5 <= nums[i] <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "[4,2,3]",
                        "output": "true",
                        "explanation": "By changing the first element (4) to 1, the array becomes [1, 2, 3], which is non-decreasing."
                    },
                    {
                        "input": "[4,2,1]",
                        "output": "false",
                        "explanation": "No single modification can make this array non-decreasing."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Hard",
                "titleSlug": "make-array-non-decreasing-or-non-increasing",
                "title": "Make Array Non-decreasing or Non-increasing",
                "isPaidOnly": true
            },
            {
                "difficulty": "Medium",
                "titleSlug": "find-good-days-to-rob-the-bank",
                "title": "Find Good Days to Rob the Bank",
                "isPaidOnly": false
            }
        ],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  bool checkPossibility(vector<int>& nums) {\n    bool modified = false;\n\n    for (int i = 1; i < nums.size(); ++i)\n      if (nums[i] < nums[i - 1]) {\n        if (modified)\n          return false;\n        if (i == 1 || nums[i] >= nums[i - 2])\n          nums[i - 1] = nums[i];  // Decrease previous value\n        else\n          nums[i] = nums[i - 1];  // Increase current value\n        modified = true;\n      }\n\n    return true;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public boolean checkPossibility(int[] nums) {\n    int j = -1;\n\n    for (int i = 0; i + 1 < nums.length; ++i)\n      if (nums[i] > nums[i + 1]) {\n        if (j != -1)\n          return false;\n        j = i;\n      }\n\n    return j == -1 || j == 0 || j == nums.length - 2 || //\n        nums[j - 1] <= nums[j + 1] ||                   //\n        nums[j] <= nums[j + 2];\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def checkPossibility(self, nums: List[int]) -> bool:\n    j = None\n\n    for i in range(len(nums) - 1):\n      if nums[i] > nums[i + 1]:\n        if j is not None:\n          return False\n        j = i\n\n    return j is None or j == 0 or j == len(nums) - 2 or \\\n        nums[j - 1] <= nums[j + 1] or nums[j] <= nums[j + 2]\n",
                "lang_text": "py"
            }
        }
    }
}