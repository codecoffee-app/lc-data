{
    "failed": false,
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "3226",
            "title": "Number of Bit Changes to Make Two Integers Equal",
            "titleSlug": "number-of-bit-changes-to-make-two-integers-equal",
            "content": "<p>You are given two positive integers <code>n</code> and <code>k</code>.</p>\n\n<p>You can choose <strong>any</strong> bit in the <strong>binary representation</strong> of <code>n</code> that is equal to 1 and change it to 0.</p>\n\n<p>Return the <em>number of changes</em> needed to make <code>n</code> equal to <code>k</code>. If it is impossible, return -1.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">n = 13, k = 4</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">2</span></p>\n\n<p><strong>Explanation:</strong><br />\nInitially, the binary representations of <code>n</code> and <code>k</code> are <code>n = (1101)<sub>2</sub></code> and <code>k = (0100)<sub>2</sub></code>.<br />\nWe can change the first and fourth bits of <code>n</code>. The resulting integer is <code>n = (<u><strong>0</strong></u>10<u><strong>0</strong></u>)<sub>2</sub> = k</code>.</p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">n = 21, k = 21</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">0</span></p>\n\n<p><strong>Explanation:</strong><br />\n<code>n</code> and <code>k</code> are already equal, so no changes are needed.</p>\n</div>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">n = 14, k = 13</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">-1</span></p>\n\n<p><strong>Explanation:</strong><br />\nIt is not possible to make <code>n</code> equal to <code>k</code>.</p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n, k &lt;= 10<sup>6</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 69,
            "dislikes": 3,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "stats": "{\"totalAccepted\": \"37.4K\", \"totalSubmission\": \"58.5K\", \"totalAcceptedRaw\": 37385, \"totalSubmissionRaw\": 58489, \"acRate\": \"63.9%\"}",
            "hints": [
                "Find the binary representations of <code>n</code> and <code>k</code>.",
                "Any bit that is equal to 1 in <code>n</code> and equal to 0 in <code>k</code> needs to be changed."
            ],
            "rephrased": {
                "body": "Given two positive integers `n` and `k`, you can modify `n` by changing any '1' bit in its binary representation to '0'. Determine the minimum number of such changes required to make `n` equal to `k`. If it is impossible to achieve `n = k` through these operations, return -1.",
                "constraints": [
                    "1 <= n, k <= 10^6"
                ],
                "testcases": [
                    {
                        "input": "n = 13, k = 4",
                        "output": "2",
                        "explanation": "The binary representations are n = (1101)_2 and k = (0100)_2. By changing the first and fourth bits of n to 0, we get n = (0100)_2 = k. Therefore, 2 changes are needed."
                    },
                    {
                        "input": "n = 21, k = 21",
                        "output": "0",
                        "explanation": "n and k are already equal, so no changes are needed."
                    },
                    {
                        "input": "n = 14, k = 13",
                        "output": "-1",
                        "explanation": "It is impossible to make n equal to k through the allowed operations."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "Find the binary representations of <code>n</code> and <code>k</code>.",
            "Any bit that is equal to 1 in <code>n</code> and equal to 0 in <code>k</code> needs to be changed."
        ],
        "relatedTopics": [
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ]
    }
}