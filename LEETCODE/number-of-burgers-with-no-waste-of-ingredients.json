{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1276",
            "title": "Number of Burgers with No Waste of Ingredients",
            "titleSlug": "number-of-burgers-with-no-waste-of-ingredients",
            "content": "<p>Given two integers <code>tomatoSlices</code> and <code>cheeseSlices</code>. The ingredients of different burgers are as follows:</p>\n\n<ul>\n\t<li><strong>Jumbo Burger:</strong> <code>4</code> tomato slices and <code>1</code> cheese slice.</li>\n\t<li><strong>Small Burger:</strong> <code>2</code> Tomato slices and <code>1</code> cheese slice.</li>\n</ul>\n\n<p>Return <code>[total_jumbo, total_small]</code> so that the number of remaining <code>tomatoSlices</code> equal to <code>0</code> and the number of remaining <code>cheeseSlices</code> equal to <code>0</code>. If it is not possible to make the remaining <code>tomatoSlices</code> and <code>cheeseSlices</code> equal to <code>0</code> return <code>[]</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> tomatoSlices = 16, cheeseSlices = 7\n<strong>Output:</strong> [1,6]\n<strong>Explantion:</strong> To make one jumbo burger and 6 small burgers we need 4*1 + 2*6 = 16 tomato and 1 + 6 = 7 cheese.\nThere will be no remaining ingredients.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> tomatoSlices = 17, cheeseSlices = 4\n<strong>Output:</strong> []\n<strong>Explantion:</strong> There will be no way to use all ingredients to make small and jumbo burgers.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> tomatoSlices = 4, cheeseSlices = 17\n<strong>Output:</strong> []\n<strong>Explantion:</strong> Making 1 jumbo burger there will be 16 cheese remaining and making 2 small burgers there will be 15 cheese remaining.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= tomatoSlices, cheeseSlices &lt;= 10<sup>7</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 312,
            "dislikes": 230,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "stats": "{\"totalAccepted\": \"24.2K\", \"totalSubmission\": \"47.5K\", \"totalAcceptedRaw\": 24210, \"totalSubmissionRaw\": 47536, \"acRate\": \"50.9%\"}",
            "hints": [
                "Can we have an answer if the number of tomatoes is odd ?",
                "If we have answer will be there multiple answers or just one answer ?",
                "Let us define number of jumbo burgers as X and number of small burgers as Y\r\nWe have to find an x and y in this equation",
                "1. 4X + 2Y = tomato",
                "2. X + Y = cheese"
            ],
            "rephrased": {
                "body": "Given two integers `tomatoSlices` and `cheeseSlices`, determine the number of jumbo burgers (4 tomato slices, 1 cheese slice) and small burgers (2 tomato slices, 1 cheese slice) that can be made using all available ingredients. Return an array `[total_jumbo, total_small]` representing the number of each type of burger. If it's impossible to use all ingredients, return an empty array `[]`.",
                "constraints": [
                    "0 <= tomatoSlices, cheeseSlices <= 10^7"
                ],
                "testcases": [
                    {
                        "input": "tomatoSlices = 16, cheeseSlices = 7",
                        "output": "[1,6]",
                        "explanation": "One jumbo burger requires 4 tomato slices and 1 cheese slice. Six small burgers require 12 tomato slices and 6 cheese slices.  The total requirement is 4*1 + 2*6 = 16 tomato slices and 1 + 6 = 7 cheese slices. Therefore, all ingredients are used."
                    },
                    {
                        "input": "tomatoSlices = 17, cheeseSlices = 4",
                        "output": "[]",
                        "explanation": "It is impossible to create a combination of jumbo and small burgers that consumes exactly 17 tomato slices and 4 cheese slices."
                    },
                    {
                        "input": "tomatoSlices = 4, cheeseSlices = 17",
                        "output": "[]",
                        "explanation": "It is impossible to create a combination of jumbo and small burgers that consumes exactly 4 tomato slices and 17 cheese slices."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "Can we have an answer if the number of tomatoes is odd ?",
            "If we have answer will be there multiple answers or just one answer ?",
            "Let us define number of jumbo burgers as X and number of small burgers as Y\r\nWe have to find an x and y in this equation",
            "1. 4X + 2Y = tomato",
            "2. X + Y = cheese"
        ],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  vector<int> numOfBurgers(int tomatoSlices, int cheeseSlices) {\n    if (tomatoSlices % 2 == 1 || tomatoSlices < 2 * cheeseSlices ||\n        tomatoSlices > cheeseSlices * 4)\n      return {};\n\n    int jumboBurgers = (tomatoSlices - 2 * cheeseSlices) / 2;\n\n    return {jumboBurgers, cheeseSlices - jumboBurgers};\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public List<Integer> numOfBurgers(int tomatoSlices, int cheeseSlices) {\n    if (tomatoSlices % 2 == 1 || tomatoSlices < 2 * cheeseSlices || tomatoSlices > cheeseSlices * 4)\n      return new ArrayList<>();\n\n    int jumboBurgers = (tomatoSlices - 2 * cheeseSlices) / 2;\n\n    return new ArrayList<>(Arrays.asList(jumboBurgers, cheeseSlices - jumboBurgers));\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def numOfBurgers(self, tomatoSlices: int, cheeseSlices: int) -> List[int]:\n    if tomatoSlices % 2 == 1 or tomatoSlices < 2 * cheeseSlices or tomatoSlices > cheeseSlices * 4:\n      return []\n\n    jumboBurgers = (tomatoSlices - 2 * cheeseSlices) // 2\n\n    return [jumboBurgers, cheeseSlices - jumboBurgers]\n",
                "lang_text": "py"
            }
        }
    }
}