{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1360",
            "title": "Number of Days Between Two Dates",
            "titleSlug": "number-of-days-between-two-dates",
            "content": "<p>Write a program to count the number of days between two dates.</p>\n\n<p>The two dates are given as strings, their format is <code>YYYY-MM-DD</code>&nbsp;as shown in the examples.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> date1 = \"2019-06-29\", date2 = \"2019-06-30\"\n<strong>Output:</strong> 1\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> date1 = \"2020-01-15\", date2 = \"2019-12-31\"\n<strong>Output:</strong> 15\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The given dates are valid&nbsp;dates between the years <code>1971</code> and <code>2100</code>.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 347,
            "dislikes": 1248,
            "similarQuestions": "[{\"title\": \"Count Days Spent Together\", \"titleSlug\": \"count-days-spent-together\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "stats": "{\"totalAccepted\": \"46.8K\", \"totalSubmission\": \"95.2K\", \"totalAcceptedRaw\": 46822, \"totalSubmissionRaw\": 95204, \"acRate\": \"49.2%\"}",
            "hints": [
                "Create a function f(date) that counts the number of days from 1900-01-01 to date. How can we calculate the answer ?",
                "The answer is just |f(date1) - f(date2)|.",
                "How to construct f(date) ?",
                "For each year from 1900 to year - 1 sum up 365 or 366 in case of leap years. Then sum up for each month the number of days, consider the case when the current year is leap, finally sum up the days."
            ],
            "rephrased": {
                "body": "Given two dates as strings in the format `YYYY-MM-DD`, write a program to calculate the number of days between them. The dates are guaranteed to be valid and within the range of 1971 to 2100.",
                "constraints": [
                    "The given dates are valid dates between the years 1971 and 2100."
                ],
                "testcases": [
                    {
                        "input": "date1 = \"2019-06-29\", date2 = \"2019-06-30\"",
                        "output": "1",
                        "explanation": null
                    },
                    {
                        "input": "date1 = \"2020-01-15\", date2 = \"2019-12-31\"",
                        "output": "15",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Easy",
                "titleSlug": "count-days-spent-together",
                "title": "Count Days Spent Together",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "Create a function f(date) that counts the number of days from 1900-01-01 to date. How can we calculate the answer ?",
            "The answer is just |f(date1) - f(date2)|.",
            "How to construct f(date) ?",
            "For each year from 1900 to year - 1 sum up 365 or 366 in case of leap years. Then sum up for each month the number of days, consider the case when the current year is leap, finally sum up the days."
        ],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int daysBetweenDates(string date1, string date2) {\n    return abs(daysFrom1971(date1) - daysFrom1971(date2));\n  }\n\n private:\n  const vector<int> days{0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};\n\n  int daysFrom1971(const string& date) {\n    const int year = stoi(date1.substr(0, 4));\n    const int month = stoi(date1.substr(5, 2));\n    const int day = stoi(date1.substr(8, 2));\n    int res = 0;\n    for (int i = 1971; i < year; ++i)\n      res += isLeapYear(i) ? 366 : 365;\n    for (int i = 0; i < month; ++i)\n      res += days[i];\n    if (month > 2 && isLeapYear(year))\n      ++res;\n    res += day;\n    return res;\n  }\n\n  bool isLeapYear(int year) {\n    return year % 4 == 0 && year % 100 != 0 || year % 400 == 0;\n  };\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int daysBetweenDates(String date1, String date2) {\n    return Math.abs(daysFrom1971(date1) - daysFrom1971(date2));\n  }\n\n  private static final int[] days = {0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};\n\n  private int daysFrom1971(final String date) {\n    final int year = Integer.valueOf(date.substring(0, 4));\n    final int month = Integer.valueOf(date.substring(5, 7));\n    final int day = Integer.valueOf(date.substring(8));\n    int res = 0;\n    for (int i = 1971; i < year; ++i)\n      res += isLeapYear(i) ? 366 : 365;\n    for (int i = 0; i < month; ++i)\n      res += days[i];\n    if (month > 2 && isLeapYear(year))\n      ++res;\n    return res + day;\n  }\n\n  private boolean isLeapYear(int year) {\n    return year % 4 == 0 && year % 100 != 0 || year % 400 == 0;\n  };\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def daysBetweenDates(self, date1: str, date2: str) -> int:\n    days = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n\n    def isLeapYear(year: int) -> bool:\n      return year % 4 == 0 and year % 100 != 0 or year % 400 == 0\n\n    def daysFrom1971(date: str) -> int:\n      year, month, day = map(int, date.split('-'))\n      return 365 * (year - 1971) + sum(map(isLeapYear, range(1971, year))) + \\\n          sum(days[:month]) + day + (month > 2 and isLeapYear(year))\n\n    return abs(daysFrom1971(date1) - daysFrom1971(date2))\n",
                "lang_text": "py"
            }
        }
    }
}