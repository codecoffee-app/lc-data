{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2595",
            "title": "Number of Even and Odd Bits",
            "titleSlug": "number-of-even-and-odd-bits",
            "content": "<p>You are given a <strong>positive</strong> integer <code>n</code>.</p>\n\n<p>Let <code>even</code> denote the number of even indices in the binary representation of <code>n</code> (<strong>0-indexed</strong>) with value <code>1</code>.</p>\n\n<p>Let <code>odd</code> denote the number of odd indices in the binary representation of <code>n</code> (<strong>0-indexed</strong>) with value <code>1</code>.</p>\n\n<p>Return <em>an integer array </em><code>answer</code><em> where </em><code>answer = [even, odd]</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 17\n<strong>Output:</strong> [2,0]\n<strong>Explanation:</strong> The binary representation of 17 is 10001. \nIt contains 1 on the 0<sup>th</sup> and 4<sup>th</sup> indices. \nThere are 2 even and 0 odd indices.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 2\n<strong>Output:</strong> [0,1]\n<strong>Explanation:</strong> The binary representation of 2 is 10.\nIt contains 1 on the 1<sup>st</sup> index. \nThere are 0 even and 1 odd indices.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 1000</code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 248,
            "dislikes": 98,
            "similarQuestions": "[{\"title\": \"Find Numbers with Even Number of Digits\", \"titleSlug\": \"find-numbers-with-even-number-of-digits\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "stats": "{\"totalAccepted\": \"37.7K\", \"totalSubmission\": \"52.7K\", \"totalAcceptedRaw\": 37700, \"totalSubmissionRaw\": 52714, \"acRate\": \"71.5%\"}",
            "hints": [
                "Maintain two integer variables, even and odd, to count the number of even and odd indices in the binary representation of integer n.",
                "Divide n by 2 while n is positive, and if n modulo 2 is 1, add 1 to its corresponding variable."
            ],
            "rephrased": {
                "body": "Given a positive integer `n`, determine the count of even and odd indices in its binary representation (0-indexed) that have a value of 1. Return an array `answer = [even, odd]` where `even` is the number of even indices with value 1, and `odd` is the number of odd indices with value 1.",
                "constraints": [
                    "1 <= n <= 1000"
                ],
                "testcases": [
                    {
                        "input": "17",
                        "output": "[2,0]",
                        "explanation": "The binary representation of 17 is 10001.  The 1s are at indices 0 and 4, which are both even. Therefore, even count is 2 and odd count is 0."
                    },
                    {
                        "input": "2",
                        "output": "[0,1]",
                        "explanation": "The binary representation of 2 is 10. The 1 is at index 1, which is odd. Therefore, even count is 0 and odd count is 1."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Easy",
                "titleSlug": "find-numbers-with-even-number-of-digits",
                "title": "Find Numbers with Even Number of Digits",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "Maintain two integer variables, even and odd, to count the number of even and odd indices in the binary representation of integer n.",
            "Divide n by 2 while n is positive, and if n modulo 2 is 1, add 1 to its corresponding variable."
        ],
        "relatedTopics": [
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  vector<int> evenOddBit(int n) {\n    vector<int> ans(2);\n    int i = 0;  // 0 := even, 1 := odd\n\n    while (n > 0) {\n      ans[i] += n & 1;\n      n >>= 1;\n      i ^= 1;\n    }\n\n    return ans;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int[] evenOddBit(int n) {\n    int[] ans = new int[2];\n    int i = 0; // 0 := even, 1 := odd\n\n    while (n > 0) {\n      ans[i] += n & 1;\n      n >>= 1;\n      i ^= 1;\n    }\n\n    return ans;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def evenOddBit(self, n: int) -> List[int]:\n    ans = [0] * 2\n    i = 0  # 0 := even, 1 := odd\n\n    while n > 0:\n      ans[i] += n & 1\n      n >>= 1\n      i ^= 1\n\n    return ans\n",
                "lang_text": "py"
            }
        }
    }
}