{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1343",
            "title": "Number of Sub-arrays of Size K and Average Greater than or Equal to Threshold",
            "titleSlug": "number-of-sub-arrays-of-size-k-and-average-greater-than-or-equal-to-threshold",
            "content": "<p>Given an array of integers <code>arr</code> and two integers <code>k</code> and <code>threshold</code>, return <em>the number of sub-arrays of size </em><code>k</code><em> and average greater than or equal to </em><code>threshold</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [2,2,2,2,5,5,5,8], k = 3, threshold = 4\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> Sub-arrays [2,5,5],[5,5,5] and [5,5,8] have averages 4, 5 and 6 respectively. All other sub-arrays of size 3 have averages less than 4 (the threshold).\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [11,13,17,23,29,31,7,5,2,3], k = 3, threshold = 5\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> The first 6 sub-arrays of size 3 have averages greater than 5. Note that averages are not integers.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= arr.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= arr[i] &lt;= 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= k &lt;= arr.length</code></li>\n\t<li><code>0 &lt;= threshold &lt;= 10<sup>4</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 1508,
            "dislikes": 97,
            "similarQuestions": "[{\"title\": \"K Radius Subarray Averages\", \"titleSlug\": \"k-radius-subarray-averages\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Count Subarrays With Median K\", \"titleSlug\": \"count-subarrays-with-median-k\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Apply Operations to Make All Array Elements Equal to Zero\", \"titleSlug\": \"apply-operations-to-make-all-array-elements-equal-to-zero\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sliding Window",
                    "slug": "sliding-window"
                }
            ],
            "stats": "{\"totalAccepted\": \"80.6K\", \"totalSubmission\": \"118.1K\", \"totalAcceptedRaw\": 80629, \"totalSubmissionRaw\": 118127, \"acRate\": \"68.3%\"}",
            "hints": [
                "Start with a window of size K and test its average against the threshold.",
                "Keep moving the window by one element maintaining its size k until you cover the whole array. count number of windows that satisfy that its average is greater than the threshold."
            ],
            "rephrased": {
                "body": "Given an array of integers `arr` and two integers `k` and `threshold`, find the number of sub-arrays of size `k` whose average is greater than or equal to `threshold`.  In other words, count the number of contiguous subarrays of length `k` that satisfy the condition: average(subarray) >= threshold.",
                "constraints": [
                    "1 <= arr.length <= 10^5",
                    "1 <= arr[i] <= 10^4",
                    "1 <= k <= arr.length",
                    "0 <= threshold <= 10^4"
                ],
                "testcases": [
                    {
                        "input": {
                            "arr": [
                                2,
                                2,
                                2,
                                2,
                                5,
                                5,
                                5,
                                8
                            ],
                            "k": 3,
                            "threshold": 4
                        },
                        "output": 3,
                        "explanation": "The sub-arrays [2,5,5], [5,5,5], and [5,5,8] have averages of approximately 4, 5, and 6, respectively. These are the only sub-arrays of size 3 with an average greater than or equal to the threshold of 4."
                    },
                    {
                        "input": {
                            "arr": [
                                11,
                                13,
                                17,
                                23,
                                29,
                                31,
                                7,
                                5,
                                2,
                                3
                            ],
                            "k": 3,
                            "threshold": 5
                        },
                        "output": 6,
                        "explanation": "The first six sub-arrays of size 3 have averages greater than 5. For example, the average of the first subarray [11, 13, 17] is (11+13+17)/3 = 13.67 > 5"
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "k-radius-subarray-averages",
                "title": "K Radius Subarray Averages",
                "isPaidOnly": false
            },
            {
                "difficulty": "Hard",
                "titleSlug": "count-subarrays-with-median-k",
                "title": "Count Subarrays With Median K",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "apply-operations-to-make-all-array-elements-equal-to-zero",
                "title": "Apply Operations to Make All Array Elements Equal to Zero",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "Start with a window of size K and test its average against the threshold.",
            "Keep moving the window by one element maintaining its size k until you cover the whole array. count number of windows that satisfy that its average is greater than the threshold."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sliding Window",
                "slug": "sliding-window"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int numOfSubarrays(vector<int>& arr, int k, int threshold) {\n    int ans = 0;\n    int windowSum = 0;\n\n    for (int i = 0; i < arr.size(); ++i) {\n      windowSum += arr[i];\n      if (i >= k)\n        windowSum -= arr[i - k];\n      if (i >= k - 1 && windowSum / k >= threshold)\n        ++ans;\n    }\n\n    return ans;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int numOfSubarrays(int[] arr, int k, int threshold) {\n    int ans = 0;\n    int windowSum = 0;\n\n    for (int i = 0; i < arr.length; ++i) {\n      windowSum += arr[i];\n      if (i >= k)\n        windowSum -= arr[i - k];\n      if (i >= k - 1 && windowSum / k >= threshold)\n        ++ans;\n    }\n\n    return ans;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def numOfSubarrays(self, arr: List[int], k: int, threshold: int) -> int:\n    ans = 0\n    windowSum = 0\n\n    for i in range(len(arr)):\n      windowSum += arr[i]\n      if i >= k:\n        windowSum -= arr[i - k]\n      if i >= k - 1 and windowSum // k >= threshold:\n        ans += 1\n\n    return ans\n",
                "lang_text": "py"
            }
        }
    }
}