{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2447",
            "title": "Number of Subarrays With GCD Equal to K",
            "titleSlug": "number-of-subarrays-with-gcd-equal-to-k",
            "content": "<p>Given an integer array <code>nums</code> and an integer <code>k</code>, return <em>the number of <strong>subarrays</strong> of </em><code>nums</code><em> where the greatest common divisor of the subarray&#39;s elements is </em><code>k</code>.</p>\n\n<p>A <strong>subarray</strong> is a contiguous non-empty sequence of elements within an array.</p>\n\n<p>The <strong>greatest common divisor of an array</strong> is the largest integer that evenly divides all the array elements.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [9,3,1,2,6,3], k = 3\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> The subarrays of nums where 3 is the greatest common divisor of all the subarray&#39;s elements are:\n- [9,<u><strong>3</strong></u>,1,2,6,3]\n- [9,3,1,2,6,<u><strong>3</strong></u>]\n- [<u><strong>9,3</strong></u>,1,2,6,3]\n- [9,3,1,2,<u><strong>6,3</strong></u>]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [4], k = 7\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> There are no subarrays of nums where 7 is the greatest common divisor of all the subarray&#39;s elements.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= nums[i], k &lt;= 10<sup>9</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 424,
            "dislikes": 62,
            "similarQuestions": "[{\"title\": \"Find Greatest Common Divisor of Array\", \"titleSlug\": \"find-greatest-common-divisor-of-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Number of Subarrays With LCM Equal to K\", \"titleSlug\": \"number-of-subarrays-with-lcm-equal-to-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Number Theory",
                    "slug": "number-theory"
                }
            ],
            "stats": "{\"totalAccepted\": \"23K\", \"totalSubmission\": \"46.7K\", \"totalAcceptedRaw\": 23031, \"totalSubmissionRaw\": 46668, \"acRate\": \"49.4%\"}",
            "hints": [
                "The constraints on nums.length are small. It is possible to check every subarray.",
                "To calculate GCD, you can use a built-in function or the Euclidean Algorithm."
            ],
            "rephrased": {
                "body": "Given an integer array `nums` and an integer `k`, return the number of subarrays of `nums` where the greatest common divisor (GCD) of the subarray's elements is equal to `k`. A subarray is a contiguous non-empty sequence of elements within an array. The greatest common divisor of an array is the largest integer that evenly divides all the array elements.",
                "constraints": [
                    "1 <= nums.length <= 1000",
                    "1 <= nums[i], k <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "nums = [9,3,1,2,6,3], k = 3",
                        "output": "4",
                        "explanation": "The subarrays where the GCD is 3 are: [3], [3], [9, 3], and [6, 3]."
                    },
                    {
                        "input": "nums = [4], k = 7",
                        "output": "0",
                        "explanation": "There are no subarrays with a GCD of 7."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Easy",
                "titleSlug": "find-greatest-common-divisor-of-array",
                "title": "Find Greatest Common Divisor of Array",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "number-of-subarrays-with-lcm-equal-to-k",
                "title": "Number of Subarrays With LCM Equal to K",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "The constraints on nums.length are small. It is possible to check every subarray.",
            "To calculate GCD, you can use a built-in function or the Euclidean Algorithm."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int subarrayGCD(vector<int>& nums, int k) {\n    int ans = 0;\n    unordered_map<int, int> gcds;\n\n    for (const int num : nums)\n      if (num % k == 0) {\n        unordered_map<int, int> nextGcds{{num, 1}};\n        for (const auto& [prevGcd, count] : gcds)\n          nextGcds[gcd(prevGcd, num)] += count;\n        ans += nextGcds[k];\n        gcds = move(nextGcds);\n      } else {\n        // The GCD streak stops, so fresh start from the next num.\n        gcds.clear();\n      }\n\n    return ans;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int subarrayGCD(int[] nums, int k) {\n    int ans = 0;\n    Map<Integer, Integer> gcds = new HashMap<>();\n\n    for (final int num : nums)\n      if (num % k == 0) {\n        Map<Integer, Integer> nextGcds = new HashMap<>();\n        nextGcds.put(num, 1);\n        for (Map.Entry<Integer, Integer> entry : gcds.entrySet()) {\n          final int prevGcd = entry.getKey();\n          final int count = entry.getValue();\n          nextGcds.merge(gcd(prevGcd, num), count, Integer::sum);\n        }\n        ans += nextGcds.getOrDefault(k, 0);\n        gcds = nextGcds;\n      } else {\n        // The GCD streak stops, so fresh start from the next num.\n        gcds.clear();\n      }\n\n    return ans;\n  }\n\n  private int gcd(int a, int b) {\n    return b == 0 ? a : gcd(b, a % b);\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def subarrayGCD(self, nums: List[int], k: int) -> int:\n    ans = 0\n    gcds = collections.Counter()\n\n    for num in nums:\n      if num % k == 0:\n        nextGcds = collections.defaultdict(int)\n        nextGcds[num] += 1\n        for prevGcd, count in gcds.items():\n          nextGcds[math.gcd(prevGcd, num)] += count\n        ans += nextGcds.get(k, 0)\n        gcds = nextGcds\n      else:\n        # The GCD streak stops, so fresh start from the next num.\n        gcds.clear()\n\n    return ans\n",
                "lang_text": "py"
            }
        }
    }
}