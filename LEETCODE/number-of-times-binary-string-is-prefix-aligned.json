{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1375",
            "title": "Number of Times Binary String Is Prefix-Aligned",
            "titleSlug": "number-of-times-binary-string-is-prefix-aligned",
            "content": "<p>You have a <strong>1-indexed</strong> binary string of length <code>n</code> where all the bits are <code>0</code> initially. We will flip all the bits of this binary string (i.e., change them from <code>0</code> to <code>1</code>) one by one. You are given a <strong>1-indexed</strong> integer array <code>flips</code> where <code>flips[i]</code> indicates that the bit at index <code>i</code> will be flipped in the <code>i<sup>th</sup></code> step.</p>\n\n<p>A binary string is <strong>prefix-aligned</strong> if, after the <code>i<sup>th</sup></code> step, all the bits in the <strong>inclusive</strong> range <code>[1, i]</code> are ones and all the other bits are zeros.</p>\n\n<p>Return <em>the number of times the binary string is <strong>prefix-aligned</strong> during the flipping process</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> flips = [3,2,4,1,5]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The binary string is initially &quot;00000&quot;.\nAfter applying step 1: The string becomes &quot;00100&quot;, which is not prefix-aligned.\nAfter applying step 2: The string becomes &quot;01100&quot;, which is not prefix-aligned.\nAfter applying step 3: The string becomes &quot;01110&quot;, which is not prefix-aligned.\nAfter applying step 4: The string becomes &quot;11110&quot;, which is prefix-aligned.\nAfter applying step 5: The string becomes &quot;11111&quot;, which is prefix-aligned.\nWe can see that the string was prefix-aligned 2 times, so we return 2.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> flips = [4,1,2,3]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> The binary string is initially &quot;0000&quot;.\nAfter applying step 1: The string becomes &quot;0001&quot;, which is not prefix-aligned.\nAfter applying step 2: The string becomes &quot;1001&quot;, which is not prefix-aligned.\nAfter applying step 3: The string becomes &quot;1101&quot;, which is not prefix-aligned.\nAfter applying step 4: The string becomes &quot;1111&quot;, which is prefix-aligned.\nWe can see that the string was prefix-aligned 1 time, so we return 1.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == flips.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 5 * 10<sup>4</sup></code></li>\n\t<li><code>flips</code> is a permutation of the integers in the range <code>[1, n]</code>.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 922,
            "dislikes": 128,
            "similarQuestions": "[{\"title\": \"Bulb Switcher\", \"titleSlug\": \"bulb-switcher\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Bulb Switcher II\", \"titleSlug\": \"bulb-switcher-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "stats": "{\"totalAccepted\": \"50.4K\", \"totalSubmission\": \"76.6K\", \"totalAcceptedRaw\": 50447, \"totalSubmissionRaw\": 76571, \"acRate\": \"65.9%\"}",
            "hints": [
                "If in the step x all bulb shines then bulbs 1,2,3,..,x should shines too."
            ],
            "rephrased": {
                "body": "You are given a 1-indexed binary string of length `n` initially filled with zeros. You are also given a 1-indexed integer array `flips` of length `n`, representing a permutation of numbers from 1 to `n`. In each step `i`, you flip the bit at index `flips[i]` from 0 to 1. Determine the number of times the binary string becomes prefix-aligned during this flipping process.\n\nA binary string is considered prefix-aligned at step `i` if all bits in the range `[1, i]` are ones, and all other bits are zeros.",
                "constraints": [
                    "n == flips.length",
                    "1 <= n <= 5 * 10^4",
                    "flips is a permutation of the integers in the range [1, n]"
                ],
                "testcases": [
                    {
                        "input": "[3,2,4,1,5]",
                        "output": "2",
                        "explanation": "Initially, the string is \"00000\".\n- Step 1: flips[1] = 3. String becomes \"00100\". Not prefix-aligned.\n- Step 2: flips[2] = 2. String becomes \"01100\". Not prefix-aligned.\n- Step 3: flips[3] = 4. String becomes \"01110\". Not prefix-aligned.\n- Step 4: flips[4] = 1. String becomes \"11110\". Prefix-aligned.\n- Step 5: flips[5] = 5. String becomes \"11111\". Prefix-aligned.\nThe string is prefix-aligned 2 times."
                    },
                    {
                        "input": "[4,1,2,3]",
                        "output": "1",
                        "explanation": "Initially, the string is \"0000\".\n- Step 1: flips[1] = 4. String becomes \"0001\". Not prefix-aligned.\n- Step 2: flips[2] = 1. String becomes \"1001\". Not prefix-aligned.\n- Step 3: flips[3] = 2. String becomes \"1101\". Not prefix-aligned.\n- Step 4: flips[4] = 3. String becomes \"1111\". Prefix-aligned.\nThe string is prefix-aligned 1 time."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "bulb-switcher",
                "title": "Bulb Switcher",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "bulb-switcher-ii",
                "title": "Bulb Switcher II",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "If in the step x all bulb shines then bulbs 1,2,3,..,x should shines too."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            }
        ]
    }
}