{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1178",
            "title": "Number of Valid Words for Each Puzzle",
            "titleSlug": "number-of-valid-words-for-each-puzzle",
            "content": "With respect to a given <code>puzzle</code> string, a <code>word</code> is <em>valid</em> if both the following conditions are satisfied:\n<ul>\n\t<li><code>word</code> contains the first letter of <code>puzzle</code>.</li>\n\t<li>For each letter in <code>word</code>, that letter is in <code>puzzle</code>.\n\t<ul>\n\t\t<li>For example, if the puzzle is <code>&quot;abcdefg&quot;</code>, then valid words are <code>&quot;faced&quot;</code>, <code>&quot;cabbage&quot;</code>, and <code>&quot;baggage&quot;</code>, while</li>\n\t\t<li>invalid words are <code>&quot;beefed&quot;</code> (does not include <code>&#39;a&#39;</code>) and <code>&quot;based&quot;</code> (includes <code>&#39;s&#39;</code> which is not in the puzzle).</li>\n\t</ul>\n\t</li>\n</ul>\nReturn <em>an array </em><code>answer</code><em>, where </em><code>answer[i]</code><em> is the number of words in the given word list </em><code>words</code><em> that is valid with respect to the puzzle </em><code>puzzles[i]</code>.\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = [&quot;aaaa&quot;,&quot;asas&quot;,&quot;able&quot;,&quot;ability&quot;,&quot;actt&quot;,&quot;actor&quot;,&quot;access&quot;], puzzles = [&quot;aboveyz&quot;,&quot;abrodyz&quot;,&quot;abslute&quot;,&quot;absoryz&quot;,&quot;actresz&quot;,&quot;gaswxyz&quot;]\n<strong>Output:</strong> [1,1,3,2,4,0]\n<strong>Explanation:</strong> \n1 valid word for &quot;aboveyz&quot; : &quot;aaaa&quot; \n1 valid word for &quot;abrodyz&quot; : &quot;aaaa&quot;\n3 valid words for &quot;abslute&quot; : &quot;aaaa&quot;, &quot;asas&quot;, &quot;able&quot;\n2 valid words for &quot;absoryz&quot; : &quot;aaaa&quot;, &quot;asas&quot;\n4 valid words for &quot;actresz&quot; : &quot;aaaa&quot;, &quot;asas&quot;, &quot;actt&quot;, &quot;access&quot;\nThere are no valid words for &quot;gaswxyz&quot; cause none of the words in the list contains letter &#39;g&#39;.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = [&quot;apple&quot;,&quot;pleas&quot;,&quot;please&quot;], puzzles = [&quot;aelwxyz&quot;,&quot;aelpxyz&quot;,&quot;aelpsxy&quot;,&quot;saelpxy&quot;,&quot;xaelpsy&quot;]\n<strong>Output:</strong> [0,1,3,2,0]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= words.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>4 &lt;= words[i].length &lt;= 50</code></li>\n\t<li><code>1 &lt;= puzzles.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>puzzles[i].length == 7</code></li>\n\t<li><code>words[i]</code> and <code>puzzles[i]</code> consist of lowercase English letters.</li>\n\t<li>Each <code>puzzles[i] </code>does not contain repeated characters.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 1245,
            "dislikes": 82,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Trie",
                    "slug": "trie"
                }
            ],
            "stats": "{\"totalAccepted\": \"30.2K\", \"totalSubmission\": \"64.8K\", \"totalAcceptedRaw\": 30237, \"totalSubmissionRaw\": 64774, \"acRate\": \"46.7%\"}",
            "hints": [
                "Exploit the fact that the length of the puzzle is only 7.",
                "Use bit-masks to represent the word and puzzle strings.",
                "For each puzzle, count the number of words whose bit-mask is a sub-mask of the puzzle's bit-mask."
            ],
            "rephrased": {
                "body": "Given a list of `words` and a list of `puzzles`, determine the number of valid words for each puzzle. A `word` is considered valid for a given `puzzle` if: \n\n1.  The `word` contains the first letter of the `puzzle`.\n2.  Every letter in the `word` is also present in the `puzzle`.\n\nReturn an array `answer`, where `answer[i]` is the count of valid words from the `words` list with respect to the `puzzles[i]`.",
                "constraints": [
                    "1 <= words.length <= 10^5",
                    "4 <= words[i].length <= 50",
                    "1 <= puzzles.length <= 10^4",
                    "puzzles[i].length == 7",
                    "words[i] and puzzles[i] consist of lowercase English letters.",
                    "Each puzzles[i] does not contain repeated characters."
                ],
                "testcases": [
                    {
                        "input": "words = [\"aaaa\",\"asas\",\"able\",\"ability\",\"actt\",\"actor\",\"access\"], puzzles = [\"aboveyz\",\"abrodyz\",\"abslute\",\"absoryz\",\"actresz\",\"gaswxyz\"]",
                        "output": "[1,1,3,2,4,0]",
                        "explanation": "For \"aboveyz\", \"aaaa\" is a valid word.\nFor \"abrodyz\", \"aaaa\" is a valid word.\nFor \"abslute\", \"aaaa\", \"asas\", and \"able\" are valid words.\nFor \"absoryz\", \"aaaa\" and \"asas\" are valid words.\nFor \"actresz\", \"aaaa\", \"asas\", \"actt\", and \"access\" are valid words.\nFor \"gaswxyz\", no words are valid because none contain the letter 'g'."
                    },
                    {
                        "input": "words = [\"apple\",\"pleas\",\"please\"], puzzles = [\"aelwxyz\",\"aelpxyz\",\"aelpsxy\",\"saelpxy\",\"xaelpsy\"]",
                        "output": "[0,1,3,2,0]",
                        "explanation": "For \"aelwxyz\", no word is valid. \nFor \"aelpxyz\", \"apple\" is a valid word. \nFor \"aelpsxy\", \"apple\", \"pleas\", and \"please\" are valid words.\nFor \"saelpxy\", \"pleas\" and \"please\" are valid words. \nFor \"xaelpsy\", no word is valid."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "Exploit the fact that the length of the puzzle is only 7.",
            "Use bit-masks to represent the word and puzzle strings.",
            "For each puzzle, count the number of words whose bit-mask is a sub-mask of the puzzle's bit-mask."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Trie",
                "slug": "trie"
            }
        ]
    }
}