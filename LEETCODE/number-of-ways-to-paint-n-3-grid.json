{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1411",
            "title": "Number of Ways to Paint N \u00d7 3 Grid",
            "titleSlug": "number-of-ways-to-paint-n-3-grid",
            "content": "<p>You have a <code>grid</code> of size <code>n x 3</code> and you want to paint each cell of the grid with exactly one of the three colors: <strong>Red</strong>, <strong>Yellow,</strong> or <strong>Green</strong> while making sure that no two adjacent cells have the same color (i.e., no two cells that share vertical or horizontal sides have the same color).</p>\n\n<p>Given <code>n</code> the number of rows of the grid, return <em>the number of ways</em> you can paint this <code>grid</code>. As the answer may grow large, the answer <strong>must be</strong> computed modulo <code>10<sup>9</sup> + 7</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/03/26/e1.png\" style=\"width: 400px; height: 257px;\" />\n<pre>\n<strong>Input:</strong> n = 1\n<strong>Output:</strong> 12\n<strong>Explanation:</strong> There are 12 possible way to paint the grid as shown.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 5000\n<strong>Output:</strong> 30228214\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == grid.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 5000</code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 1052,
            "dislikes": 49,
            "similarQuestions": "[{\"title\": \"Painting a Grid With Three Different Colors\", \"titleSlug\": \"painting-a-grid-with-three-different-colors\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "stats": "{\"totalAccepted\": \"32K\", \"totalSubmission\": \"50.5K\", \"totalAcceptedRaw\": 31993, \"totalSubmissionRaw\": 50491, \"acRate\": \"63.4%\"}",
            "hints": [
                "We will use Dynamic programming approach. we will try all possible configuration.",
                "Let dp[idx][prev1col][prev2col][prev3col] be the number of ways to color the rows of the grid from idx to n-1 keeping in mind that the previous row (idx - 1) has colors prev1col, prev2col and prev3col. Build the dp array to get the answer."
            ],
            "rephrased": {
                "body": "You are given a grid of size n x 3. Your task is to color each cell of the grid with one of the three colors: Red, Yellow, or Green. The coloring must satisfy the constraint that no two adjacent cells (cells sharing a vertical or horizontal side) have the same color.\n\nGiven n, the number of rows in the grid, determine the number of valid ways to color the entire grid.  Since the answer can be very large, return the result modulo 10^9 + 7.",
                "constraints": [
                    "1 <= n <= 5000"
                ],
                "testcases": [
                    {
                        "input": "n = 1",
                        "output": "12",
                        "explanation": "There are 12 possible valid colorings for a 1x3 grid."
                    },
                    {
                        "input": "n = 5000",
                        "output": "30228214",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Hard",
                "titleSlug": "painting-a-grid-with-three-different-colors",
                "title": "Painting a Grid With Three Different Colors",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "We will use Dynamic programming approach. we will try all possible configuration.",
            "Let dp[idx][prev1col][prev2col][prev3col] be the number of ways to color the rows of the grid from idx to n-1 keeping in mind that the previous row (idx - 1) has colors prev1col, prev2col and prev3col. Build the dp array to get the answer."
        ],
        "relatedTopics": [
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int numOfWays(int n) {\n    constexpr int kMod = 1'000'000'007;\n    long color2 = 6;  // 121, 131, 212, 232, 313, 323\n    long color3 = 6;  // 123, 132, 213, 231, 312, 321\n\n    for (int i = 1; i < n; ++i) {\n      const long nextColor2 = color2 * 3 + color3 * 2;\n      const long nextColor3 = color2 * 2 + color3 * 2;\n      color2 = nextColor2 % kMod;\n      color3 = nextColor3 % kMod;\n    }\n\n    return (color2 + color3) % kMod;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int numOfWays(int n) {\n    final int kMod = 1_000_000_007;\n    long color2 = 6; // 121, 131, 212, 232, 313, 323\n    long color3 = 6; // 123, 132, 213, 231, 312, 321\n\n    for (int i = 1; i < n; ++i) {\n      final long nextColor2 = color2 * 3 + color3 * 2;\n      final long nextColor3 = color2 * 2 + color3 * 2;\n      color2 = nextColor2 % kMod;\n      color3 = nextColor3 % kMod;\n    }\n\n    return (int) ((color2 + color3) % kMod);\n  }\n}\n",
                "lang_text": "java"
            }
        }
    }
}