{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2270",
            "title": "Number of Ways to Split Array",
            "titleSlug": "number-of-ways-to-split-array",
            "content": "<p>You are given a <strong>0-indexed</strong> integer array <code>nums</code> of length <code>n</code>.</p>\n\n<p><code>nums</code> contains a <strong>valid split</strong> at index <code>i</code> if the following are true:</p>\n\n<ul>\n\t<li>The sum of the first <code>i + 1</code> elements is <strong>greater than or equal to</strong> the sum of the last <code>n - i - 1</code> elements.</li>\n\t<li>There is <strong>at least one</strong> element to the right of <code>i</code>. That is, <code>0 &lt;= i &lt; n - 1</code>.</li>\n</ul>\n\n<p>Return <em>the number of <strong>valid splits</strong> in</em> <code>nums</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [10,4,-8,7]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> \nThere are three ways of splitting nums into two non-empty parts:\n- Split nums at index 0. Then, the first part is [10], and its sum is 10. The second part is [4,-8,7], and its sum is 3. Since 10 &gt;= 3, i = 0 is a valid split.\n- Split nums at index 1. Then, the first part is [10,4], and its sum is 14. The second part is [-8,7], and its sum is -1. Since 14 &gt;= -1, i = 1 is a valid split.\n- Split nums at index 2. Then, the first part is [10,4,-8], and its sum is 6. The second part is [7], and its sum is 7. Since 6 &lt; 7, i = 2 is not a valid split.\nThus, the number of valid splits in nums is 2.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,3,1,0]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> \nThere are two valid splits in nums:\n- Split nums at index 1. Then, the first part is [2,3], and its sum is 5. The second part is [1,0], and its sum is 1. Since 5 &gt;= 1, i = 1 is a valid split. \n- Split nums at index 2. Then, the first part is [2,3,1], and its sum is 6. The second part is [0], and its sum is 0. Since 6 &gt;= 0, i = 2 is a valid split.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>-10<sup>5</sup> &lt;= nums[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 519,
            "dislikes": 41,
            "similarQuestions": "[{\"title\": \"Split Array Largest Sum\", \"titleSlug\": \"split-array-largest-sum\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Find Pivot Index\", \"titleSlug\": \"find-pivot-index\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Ways to Split Array Into Three Subarrays\", \"titleSlug\": \"ways-to-split-array-into-three-subarrays\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find the Middle Index in Array\", \"titleSlug\": \"find-the-middle-index-in-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Partition Array Into Two Arrays to Minimize Sum Difference\", \"titleSlug\": \"partition-array-into-two-arrays-to-minimize-sum-difference\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Minimum Average Difference\", \"titleSlug\": \"minimum-average-difference\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "stats": "{\"totalAccepted\": \"34.3K\", \"totalSubmission\": \"73.4K\", \"totalAcceptedRaw\": 34349, \"totalSubmissionRaw\": 73407, \"acRate\": \"46.8%\"}",
            "hints": [
                "For any index i, how can we find the sum of the first (i+1) elements from the sum of the first i elements?",
                "If the total sum of the array is known, how can we check if the sum of the first (i+1) elements greater than or equal to the remaining elements?"
            ],
            "rephrased": {
                "body": "Given a 0-indexed integer array `nums` of length `n`, determine the number of valid splits. A valid split at index `i` satisfies the following conditions:\n\n1. The sum of the first `i + 1` elements is greater than or equal to the sum of the last `n - i - 1` elements.\n2. There is at least one element to the right of `i`. That is, `0 <= i < n - 1`.",
                "constraints": [
                    "2 <= nums.length <= 10^5",
                    "-10^5 <= nums[i] <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "[10,4,-8,7]",
                        "output": "2",
                        "explanation": "We iterate through possible split indices. When split at index 0, the first part is [10] (sum = 10) and the second part is [4, -8, 7] (sum = 3). Since 10 >= 3, it's a valid split.\nWhen split at index 1, the first part is [10, 4] (sum = 14) and the second part is [-8, 7] (sum = -1). Since 14 >= -1, it's a valid split.\nWhen split at index 2, the first part is [10, 4, -8] (sum = 6) and the second part is [7] (sum = 7). Since 6 < 7, it's not a valid split.\nTherefore, there are 2 valid splits."
                    },
                    {
                        "input": "[2,3,1,0]",
                        "output": "2",
                        "explanation": "When split at index 1, the first part is [2, 3] (sum = 5) and the second part is [1, 0] (sum = 1). Since 5 >= 1, it's a valid split.\nWhen split at index 2, the first part is [2, 3, 1] (sum = 6) and the second part is [0] (sum = 0). Since 6 >= 0, it's a valid split.\nTherefore, there are 2 valid splits."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Hard",
                "titleSlug": "split-array-largest-sum",
                "title": "Split Array Largest Sum",
                "isPaidOnly": false
            },
            {
                "difficulty": "Easy",
                "titleSlug": "find-pivot-index",
                "title": "Find Pivot Index",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "ways-to-split-array-into-three-subarrays",
                "title": "Ways to Split Array Into Three Subarrays",
                "isPaidOnly": false
            },
            {
                "difficulty": "Easy",
                "titleSlug": "find-the-middle-index-in-array",
                "title": "Find the Middle Index in Array",
                "isPaidOnly": false
            },
            {
                "difficulty": "Hard",
                "titleSlug": "partition-array-into-two-arrays-to-minimize-sum-difference",
                "title": "Partition Array Into Two Arrays to Minimize Sum Difference",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "minimum-average-difference",
                "title": "Minimum Average Difference",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "For any index i, how can we find the sum of the first (i+1) elements from the sum of the first i elements?",
            "If the total sum of the array is known, how can we check if the sum of the first (i+1) elements greater than or equal to the remaining elements?"
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int waysToSplitArray(vector<int>& nums) {\n    int ans = 0;\n    long prefix = 0;\n    long suffix = accumulate(nums.begin(), nums.end(), 0L);\n\n    for (int i = 0; i < nums.size() - 1; ++i) {\n      prefix += nums[i];\n      suffix -= nums[i];\n      if (prefix >= suffix)\n        ++ans;\n    }\n\n    return ans;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int waysToSplitArray(int[] nums) {\n    int ans = 0;\n    long prefix = 0;\n    long suffix = Arrays.stream(nums).asLongStream().sum();\n\n    for (int i = 0; i < nums.length - 1; ++i) {\n      prefix += nums[i];\n      suffix -= nums[i];\n      if (prefix >= suffix)\n        ++ans;\n    }\n\n    return ans;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def waysToSplitArray(self, nums: List[int]) -> int:\n    ans = 0\n    prefix = 0\n    suffix = sum(nums)\n\n    for i in range(len(nums) - 1):\n      prefix += nums[i]\n      suffix -= nums[i]\n      if prefix >= suffix:\n        ans += 1\n\n    return ans\n",
                "lang_text": "py"
            }
        }
    }
}