{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "328",
            "title": "Odd Even Linked List",
            "titleSlug": "odd-even-linked-list",
            "content": "<p>Given the <code>head</code> of a singly linked list, group all the nodes with odd indices together followed by the nodes with even indices, and return <em>the reordered list</em>.</p>\n\n<p>The <strong>first</strong> node is considered <strong>odd</strong>, and the <strong>second</strong> node is <strong>even</strong>, and so on.</p>\n\n<p>Note that the relative order inside both the even and odd groups should remain as it was in the input.</p>\n\n<p>You must solve the problem&nbsp;in <code>O(1)</code>&nbsp;extra space complexity and <code>O(n)</code> time complexity.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/10/oddeven-linked-list.jpg\" style=\"width: 300px; height: 123px;\" />\n<pre>\n<strong>Input:</strong> head = [1,2,3,4,5]\n<strong>Output:</strong> [1,3,5,2,4]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/10/oddeven2-linked-list.jpg\" style=\"width: 500px; height: 142px;\" />\n<pre>\n<strong>Input:</strong> head = [2,1,3,5,6,4,7]\n<strong>Output:</strong> [2,3,6,7,1,5,4]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the linked list is in the range <code>[0, 10<sup>4</sup>]</code>.</li>\n\t<li><code>-10<sup>6</sup> &lt;= Node.val &lt;= 10<sup>6</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 9443,
            "dislikes": 496,
            "similarQuestions": "[{\"title\": \"Split Linked List in Parts\", \"titleSlug\": \"split-linked-list-in-parts\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                }
            ],
            "stats": "{\"totalAccepted\": \"832.4K\", \"totalSubmission\": \"1.4M\", \"totalAcceptedRaw\": 832383, \"totalSubmissionRaw\": 1356320, \"acRate\": \"61.4%\"}",
            "hints": [],
            "rephrased": {
                "body": "Given the head of a singly linked list, rearrange the list such that all nodes with odd indices are grouped together, followed by nodes with even indices. The first node is considered odd, the second even, and so on.  Maintain the original relative order within both the odd and even groups.\n\nYour solution must have O(1) extra space complexity and O(n) time complexity.",
                "constraints": [
                    "The number of nodes in the linked list is in the range [0, 10<sup>4</sup>].",
                    "-10<sup>6</sup> <= Node.val <= 10<sup>6</sup>"
                ],
                "testcases": [
                    {
                        "input": "[1,2,3,4,5]",
                        "output": "[1,3,5,2,4]",
                        "explanation": "The odd nodes (1, 3, 5) are grouped first, followed by the even nodes (2, 4)."
                    },
                    {
                        "input": "[2,1,3,5,6,4,7]",
                        "output": "[2,3,6,7,1,5,4]",
                        "explanation": "The odd nodes (2, 3, 6, 7) are grouped first, followed by the even nodes (1, 5, 4)."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "split-linked-list-in-parts",
                "title": "Split Linked List in Parts",
                "isPaidOnly": false
            }
        ],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  ListNode* oddEvenList(ListNode* head) {\n    ListNode oddHead(0);\n    ListNode evenHead(0);\n    ListNode* odd = &oddHead;\n    ListNode* even = &evenHead;\n\n    for (int isOdd = 0; head; head = head->next)\n      if (isOdd ^= 1) {\n        odd->next = head;\n        odd = odd->next;\n      } else {\n        even->next = head;\n        even = even->next;\n      }\n\n    odd->next = evenHead.next;\n    even->next = nullptr;\n    return oddHead.next;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public ListNode oddEvenList(ListNode head) {\n    ListNode oddHead = new ListNode(0);\n    ListNode evenHead = new ListNode(0);\n    ListNode odd = oddHead;\n    ListNode even = evenHead;\n\n    for (boolean isOdd = true; head != null; head = head.next, isOdd = !isOdd)\n      if (isOdd) {\n        odd.next = head;\n        odd = odd.next;\n      } else {\n        even.next = head;\n        even = even.next;\n      }\n\n    odd.next = evenHead.next;\n    even.next = null;\n    return oddHead.next;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def oddEvenList(self, head: ListNode) -> ListNode:\n    oddHead = ListNode(0)\n    evenHead = ListNode(0)\n    odd = oddHead\n    even = evenHead\n    isOdd = True\n\n    while head:\n      if isOdd:\n        odd.next = head\n        odd = head\n      else:\n        even.next = head\n        even = head\n      head = head.next\n      isOdd = not isOdd\n\n    even.next = None\n    odd.next = evenHead.next\n    return oddHead.next\n",
                "lang_text": "py"
            }
        }
    }
}