{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2451",
            "title": "Odd String Difference",
            "titleSlug": "odd-string-difference",
            "content": "<p>You are given an array of equal-length strings <code>words</code>. Assume that the length of each string is <code>n</code>.</p>\n\n<p>Each string <code>words[i]</code> can be converted into a <strong>difference integer array</strong> <code>difference[i]</code> of length <code>n - 1</code> where <code>difference[i][j] = words[i][j+1] - words[i][j]</code> where <code>0 &lt;= j &lt;= n - 2</code>. Note that the difference between two letters is the difference between their <strong>positions</strong> in the alphabet i.e.&nbsp;the position of <code>&#39;a&#39;</code> is <code>0</code>, <code>&#39;b&#39;</code> is <code>1</code>, and <code>&#39;z&#39;</code> is <code>25</code>.</p>\n\n<ul>\n\t<li>For example, for the string <code>&quot;acb&quot;</code>, the difference integer array is <code>[2 - 0, 1 - 2] = [2, -1]</code>.</li>\n</ul>\n\n<p>All the strings in words have the same difference integer array, <strong>except one</strong>. You should find that string.</p>\n\n<p>Return<em> the string in </em><code>words</code><em> that has different <strong>difference integer array</strong>.</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = [&quot;adc&quot;,&quot;wzy&quot;,&quot;abc&quot;]\n<strong>Output:</strong> &quot;abc&quot;\n<strong>Explanation:</strong> \n- The difference integer array of &quot;adc&quot; is [3 - 0, 2 - 3] = [3, -1].\n- The difference integer array of &quot;wzy&quot; is [25 - 22, 24 - 25]= [3, -1].\n- The difference integer array of &quot;abc&quot; is [1 - 0, 2 - 1] = [1, 1]. \nThe odd array out is [1, 1], so we return the corresponding string, &quot;abc&quot;.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = [&quot;aaa&quot;,&quot;bob&quot;,&quot;ccc&quot;,&quot;ddd&quot;]\n<strong>Output:</strong> &quot;bob&quot;\n<strong>Explanation:</strong> All the integer arrays are [0, 0] except for &quot;bob&quot;, which corresponds to [13, -13].\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>3 &lt;= words.length &lt;= 100</code></li>\n\t<li><code>n == words[i].length</code></li>\n\t<li><code>2 &lt;= n &lt;= 20</code></li>\n\t<li><code>words[i]</code> consists of lowercase English letters.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 374,
            "dislikes": 107,
            "similarQuestions": "[{\"title\": \"Minimum Rounds to Complete All Tasks\", \"titleSlug\": \"minimum-rounds-to-complete-all-tasks\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "stats": "{\"totalAccepted\": \"25.8K\", \"totalSubmission\": \"44K\", \"totalAcceptedRaw\": 25837, \"totalSubmissionRaw\": 44020, \"acRate\": \"58.7%\"}",
            "hints": [
                "Find the difference integer array for each string.",
                "Compare them to find the odd one out."
            ],
            "rephrased": {
                "body": "Given an array of equal-length strings `words`, where each string has length `n`, the task is to identify the single string that has a unique difference integer array.\n\nTo generate the difference integer array for each string `words[i]`, calculate the difference between consecutive characters' positions in the alphabet. Specifically, `difference[i][j] = words[i][j+1] - words[i][j]` for `0 <= j < n - 2`. The position of 'a' is 0, 'b' is 1, and 'z' is 25.\n\nAll strings in `words` have the same difference integer array except for one. Return this unique string.",
                "constraints": [
                    "3 <= words.length <= 100",
                    "n == words[i].length",
                    "2 <= n <= 20",
                    "words[i] consists of lowercase English letters."
                ],
                "testcases": [
                    {
                        "input": "words = [\"adc\",\"wzy\",\"abc\"]",
                        "output": "\"abc\"",
                        "explanation": "The difference integer array of \"adc\" is [3 - 0, 2 - 3] = [3, -1]. The difference integer array of \"wzy\" is [25 - 22, 24 - 25]= [3, -1]. The difference integer array of \"abc\" is [1 - 0, 2 - 1] = [1, 1]. The odd array out is [1, 1], so we return the corresponding string, \"abc\"."
                    },
                    {
                        "input": "words = [\"aaa\",\"bob\",\"ccc\",\"ddd\"]",
                        "output": "\"bob\"",
                        "explanation": "All the integer arrays are [0, 0] except for \"bob\", which corresponds to [13, -13]."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "minimum-rounds-to-complete-all-tasks",
                "title": "Minimum Rounds to Complete All Tasks",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "Find the difference integer array for each string.",
            "Compare them to find the odd one out."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  string oddString(vector<string>& words) {\n    const vector<pair<string, string>> wordAndDiffStrs =\n        getWordAndDiffStrs(words);\n    unordered_map<string, int> diffStrCount;\n\n    for (const auto& [_, diffStr] : wordAndDiffStrs)\n      ++diffStrCount[diffStr];\n\n    for (const auto& [word, diffStr] : wordAndDiffStrs)\n      if (diffStrCount[diffStr] == 1)\n        return word;\n\n    throw;\n  }\n\n private:\n  // Returns pairs of word and its corresponding difference string.\n  // E.g., [(\"adc\", \"3#-1#\"), (\"wzy\", \"3#-1#\"), (\"abc\", \"1#1#\")]\n  vector<pair<string, string>> getWordAndDiffStrs(const vector<string>& words) {\n    vector<pair<string, string>> wordAndDiffStrs;\n    for (const string& word : words)\n      wordAndDiffStrs.emplace_back(word, getDiffStr(word));\n    return wordAndDiffStrs;\n  }\n\n  // Returns difference string of `s`.\n  // E.g., getDiffStr(\"adc\") -> \"3#-1#\"\n  string getDiffStr(const string& s) {\n    string diffStr;\n    for (int i = 1; i < s.length(); ++i)\n      diffStr += to_string(s[i] - s[i - 1]) + \"#\";\n    return diffStr;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public String oddString(String[] words) {\n    List<Pair<String, Integer>> wordAndHashCodes = getWordAndHashCodes(words);\n    Map<Integer, Integer> hashCodeCount = new HashMap<>();\n\n    for (Pair<String, Integer> wordAndHashCode : wordAndHashCodes)\n      hashCodeCount.merge(wordAndHashCode.getValue(), 1, Integer::sum);\n\n    for (Pair<String, Integer> wordAndHashCode : wordAndHashCodes)\n      if (hashCodeCount.get(wordAndHashCode.getValue()) == 1)\n        return wordAndHashCode.getKey();\n\n    throw new IllegalArgumentException();\n  }\n\n  // Returns pairs of word and its corresponding hash code.\n  private List<Pair<String, Integer>> getWordAndHashCodes(String[] words) {\n    List<Pair<String, Integer>> wordAndHashCodes = new ArrayList<>();\n    for (final String word : words)\n      wordAndHashCodes.add(new Pair<>(word, getDiffStr(word).hashCode()));\n    return wordAndHashCodes;\n  }\n\n  // Returns difference string of `s`.\n  // E.g., getDiffStr(\"adc\") -> \"3#-1#\"\n  private String getDiffStr(final String s) {\n    StringBuilder sb = new StringBuilder();\n    for (int i = 1; i < s.length(); ++i)\n      sb.append(s.charAt(i) - s.charAt(i - 1)).append(\"#\");\n    return sb.toString();\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def oddString(self, words: List[str]) -> str:\n    def getDiff(s: str) -> List[int]:\n      return [ord(b) - ord(a) for a, b in zip(s, s[1:])]\n    \n    wordAndDiffTuples = [(word, tuple(getDiff(word))) for word in words]\n    diffTupleCount = collections.Counter()\n    \n    for _, diffTuple in wordAndDiffTuples:\n      diffTupleCount[diffTuple] += 1\n    \n    for word, diffTuple in wordAndDiffTuples:\n      if diffTupleCount[diffTuple] == 1:\n        return word\n      ",
                "lang_text": "py"
            }
        }
    }
}