{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1473",
            "title": "Paint House III",
            "titleSlug": "paint-house-iii",
            "content": "<p>There is a row of <code>m</code> houses in a small city, each house must be painted with one of the <code>n</code> colors (labeled from <code>1</code> to <code>n</code>), some houses that have been painted last summer should not be painted again.</p>\n\n<p>A neighborhood is a maximal group of continuous houses that are painted with the same color.</p>\n\n<ul>\n\t<li>For example: <code>houses = [1,2,2,3,3,2,1,1]</code> contains <code>5</code> neighborhoods <code>[{1}, {2,2}, {3,3}, {2}, {1,1}]</code>.</li>\n</ul>\n\n<p>Given an array <code>houses</code>, an <code>m x n</code> matrix <code>cost</code> and an integer <code>target</code> where:</p>\n\n<ul>\n\t<li><code>houses[i]</code>: is the color of the house <code>i</code>, and <code>0</code> if the house is not painted yet.</li>\n\t<li><code>cost[i][j]</code>: is the cost of paint the house <code>i</code> with the color <code>j + 1</code>.</li>\n</ul>\n\n<p>Return <em>the minimum cost of painting all the remaining houses in such a way that there are exactly</em> <code>target</code> <em>neighborhoods</em>. If it is not possible, return <code>-1</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> houses = [0,0,0,0,0], cost = [[1,10],[10,1],[10,1],[1,10],[5,1]], m = 5, n = 2, target = 3\n<strong>Output:</strong> 9\n<strong>Explanation:</strong> Paint houses of this way [1,2,2,1,1]\nThis array contains target = 3 neighborhoods, [{1}, {2,2}, {1,1}].\nCost of paint all houses (1 + 1 + 1 + 1 + 5) = 9.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> houses = [0,2,1,2,0], cost = [[1,10],[10,1],[10,1],[1,10],[5,1]], m = 5, n = 2, target = 3\n<strong>Output:</strong> 11\n<strong>Explanation:</strong> Some houses are already painted, Paint the houses of this way [2,2,1,2,2]\nThis array contains target = 3 neighborhoods, [{2,2}, {1}, {2,2}]. \nCost of paint the first and last house (10 + 1) = 11.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> houses = [3,1,2,3], cost = [[1,1,1],[1,1,1],[1,1,1],[1,1,1]], m = 4, n = 3, target = 3\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> Houses are already painted with a total of 4 neighborhoods [{3},{1},{2},{3}] different of target = 3.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == houses.length == cost.length</code></li>\n\t<li><code>n == cost[i].length</code></li>\n\t<li><code>1 &lt;= m &lt;= 100</code></li>\n\t<li><code>1 &lt;= n &lt;= 20</code></li>\n\t<li><code>1 &lt;= target &lt;= m</code></li>\n\t<li><code>0 &lt;= houses[i] &lt;= n</code></li>\n\t<li><code>1 &lt;= cost[i][j] &lt;= 10<sup>4</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 2027,
            "dislikes": 147,
            "similarQuestions": "[{\"title\": \"Number of Distinct Roll Sequences\", \"titleSlug\": \"number-of-distinct-roll-sequences\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                }
            ],
            "stats": "{\"totalAccepted\": \"59.6K\", \"totalSubmission\": \"97.6K\", \"totalAcceptedRaw\": 59644, \"totalSubmissionRaw\": 97642, \"acRate\": \"61.1%\"}",
            "hints": [
                "Use Dynamic programming.",
                "Define dp[i][j][k] as the minimum cost where we have k neighborhoods in the first i houses and the i-th house is painted with the color j."
            ],
            "rephrased": {
                "body": "You are tasked with painting a row of `m` houses in a city. Each house must be painted with one of `n` colors (labeled 1 to `n`). Some houses are already painted and should not be repainted.\n\nA neighborhood is defined as a maximal group of consecutive houses painted with the same color. For example, `houses = [1, 2, 2, 3, 3, 2, 1, 1]` contains 5 neighborhoods: `[{1}, {2, 2}, {3, 3}, {2}, {1, 1}]`.\n\nGiven an array `houses` representing the colors of each house (0 if unpainted), a matrix `cost` where `cost[i][j]` is the cost of painting house `i` with color `j + 1`, the number of houses `m`, the number of colors `n`, and the target number of neighborhoods `target`, find the minimum cost to paint all remaining houses such that there are exactly `target` neighborhoods. If it is not possible, return `-1`.",
                "constraints": [
                    "m == houses.length == cost.length",
                    "n == cost[i].length",
                    "1 <= m <= 100",
                    "1 <= n <= 20",
                    "1 <= target <= m",
                    "0 <= houses[i] <= n",
                    "1 <= cost[i][j] <= 10^4"
                ],
                "testcases": [
                    {
                        "input": "houses = [0,0,0,0,0], cost = [[1,10],[10,1],[10,1],[1,10],[5,1]], m = 5, n = 2, target = 3",
                        "output": "9",
                        "explanation": "Painting the houses as [1,2,2,1,1] results in 3 neighborhoods: [{1}, {2,2}, {1,1}]. The total cost is (1 + 1 + 1 + 1 + 5) = 9."
                    },
                    {
                        "input": "houses = [0,2,1,2,0], cost = [[1,10],[10,1],[10,1],[1,10],[5,1]], m = 5, n = 2, target = 3",
                        "output": "11",
                        "explanation": "Painting the houses as [2,2,1,2,2] results in 3 neighborhoods: [{2,2}, {1}, {2,2}]. The cost to paint the first and last house is (10 + 1) = 11."
                    },
                    {
                        "input": "houses = [3,1,2,3], cost = [[1,1,1],[1,1,1],[1,1,1],[1,1,1]], m = 4, n = 3, target = 3",
                        "output": "-1",
                        "explanation": "The houses are already painted, forming 4 neighborhoods: [{3}, {1}, {2}, {3}], which does not match the target of 3 neighborhoods."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Hard",
                "titleSlug": "number-of-distinct-roll-sequences",
                "title": "Number of Distinct Roll Sequences",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "Use Dynamic programming.",
            "Define dp[i][j][k] as the minimum cost where we have k neighborhoods in the first i houses and the i-th house is painted with the color j."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            }
        ]
    }
}