{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1010",
            "title": "Pairs of Songs With Total Durations Divisible by 60",
            "titleSlug": "pairs-of-songs-with-total-durations-divisible-by-60",
            "content": "<p>You are given a list of songs where the <code>i<sup>th</sup></code> song has a duration of <code>time[i]</code> seconds.</p>\n\n<p>Return <em>the number of pairs of songs for which their total duration in seconds is divisible by</em> <code>60</code>. Formally, we want the number of indices <code>i</code>, <code>j</code> such that <code>i &lt; j</code> with <code>(time[i] + time[j]) % 60 == 0</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> time = [30,20,150,100,40]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> Three pairs have a total duration divisible by 60:\n(time[0] = 30, time[2] = 150): total duration 180\n(time[1] = 20, time[3] = 100): total duration 120\n(time[1] = 20, time[4] = 40): total duration 60\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> time = [60,60,60]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> All three pairs have a total duration of 120, which is divisible by 60.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= time.length &lt;= 6 * 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= time[i] &lt;= 500</code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 4124,
            "dislikes": 161,
            "similarQuestions": "[{\"title\": \"Destroy Sequential Targets\", \"titleSlug\": \"destroy-sequential-targets\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "stats": "{\"totalAccepted\": \"261.3K\", \"totalSubmission\": \"495.1K\", \"totalAcceptedRaw\": 261254, \"totalSubmissionRaw\": 495118, \"acRate\": \"52.8%\"}",
            "hints": [
                "We only need to consider each song length modulo 60.",
                "We can count the number of songs with (length % 60) equal to r, and store that in an array of size 60."
            ],
            "rephrased": {
                "body": "Given a list of song durations in seconds, `time`, find the number of pairs of songs where the sum of their durations is divisible by 60.  Specifically, count the number of index pairs `(i, j)` such that `i < j` and `(time[i] + time[j]) % 60 == 0`.",
                "constraints": [
                    "1 <= time.length <= 6 * 10^4",
                    "1 <= time[i] <= 500"
                ],
                "testcases": [
                    {
                        "input": "[30,20,150,100,40]",
                        "output": "3",
                        "explanation": "There are three pairs of songs whose total duration is divisible by 60: (30, 150), (20, 100), and (20, 40)."
                    },
                    {
                        "input": "[60,60,60]",
                        "output": "3",
                        "explanation": "All three pairs have a total duration of 120, which is divisible by 60."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "destroy-sequential-targets",
                "title": "Destroy Sequential Targets",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "We only need to consider each song length modulo 60.",
            "We can count the number of songs with (length % 60) equal to r, and store that in an array of size 60."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int numPairsDivisibleBy60(vector<int>& time) {\n    int ans = 0;\n    vector<int> count(60);\n\n    for (int t : time) {\n      t %= 60;\n      ans += count[(60 - t) % 60];\n      ++count[t];\n    }\n\n    return ans;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int numPairsDivisibleBy60(int[] time) {\n    int ans = 0;\n    int[] count = new int[60];\n\n    for (int t : time) {\n      t %= 60;\n      ans += count[(60 - t) % 60];\n      ++count[t];\n    }\n\n    return ans;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def numPairsDivisibleBy60(self, time: List[int]) -> int:\n    ans = 0\n    count = [0] * 60\n\n    for t in time:\n      t %= 60\n      ans += count[(60 - t) % 60]\n      count[t] += 1\n\n    return ans\n",
                "lang_text": "py"
            }
        }
    }
}