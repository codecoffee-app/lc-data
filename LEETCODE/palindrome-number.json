{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "9",
            "title": "Palindrome Number",
            "titleSlug": "palindrome-number",
            "content": "<p>Given an integer <code>x</code>, return <code>true</code><em> if </em><code>x</code><em> is a </em><span data-keyword=\"palindrome-integer\"><em><strong>palindrome</strong></em></span><em>, and </em><code>false</code><em> otherwise</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> x = 121\n<strong>Output:</strong> true\n<strong>Explanation:</strong> 121 reads as 121 from left to right and from right to left.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> x = -121\n<strong>Output:</strong> false\n<strong>Explanation:</strong> From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> x = 10\n<strong>Output:</strong> false\n<strong>Explanation:</strong> Reads 01 from right to left. Therefore it is not a palindrome.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>-2<sup>31</sup>&nbsp;&lt;= x &lt;= 2<sup>31</sup>&nbsp;- 1</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<strong>Follow up:</strong> Could you solve it without converting the integer to a string?",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 11783,
            "dislikes": 2651,
            "similarQuestions": "[{\"title\": \"Palindrome Linked List\", \"titleSlug\": \"palindrome-linked-list\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Find Palindrome With Fixed Length\", \"titleSlug\": \"find-palindrome-with-fixed-length\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Strictly Palindromic Number\", \"titleSlug\": \"strictly-palindromic-number\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"  Count Symmetric Integers\", \"titleSlug\": \"count-symmetric-integers\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "stats": "{\"totalAccepted\": \"4M\", \"totalSubmission\": \"7.3M\", \"totalAcceptedRaw\": 4024622, \"totalSubmissionRaw\": 7298720, \"acRate\": \"55.1%\"}",
            "hints": [
                "Beware of overflow when you reverse the integer."
            ],
            "rephrased": {
                "body": "Determine whether a given integer is a palindrome. A palindrome reads the same forwards and backward. Return `true` if the integer is a palindrome and `false` otherwise.",
                "constraints": [
                    "-2<sup>31</sup> <= x <= 2<sup>31</sup> - 1"
                ],
                "testcases": [
                    {
                        "input": "121",
                        "output": "true",
                        "explanation": "The number reads the same from left to right and right to left."
                    },
                    {
                        "input": "-121",
                        "output": "false",
                        "explanation": "The number reads '-121' from left to right and '121-' from right to left, thus it is not a palindrome."
                    },
                    {
                        "input": "10",
                        "output": "false",
                        "explanation": "The number reads '10' from left to right and '01' from right to left, thus it is not a palindrome."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Easy",
                "titleSlug": "palindrome-linked-list",
                "title": "Palindrome Linked List",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "find-palindrome-with-fixed-length",
                "title": "Find Palindrome With Fixed Length",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "strictly-palindromic-number",
                "title": "Strictly Palindromic Number",
                "isPaidOnly": false
            },
            {
                "difficulty": "Easy",
                "titleSlug": "count-symmetric-integers",
                "title": "  Count Symmetric Integers",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "Beware of overflow when you reverse the integer."
        ],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  bool isPalindrome(int x) {\n    if (x < 0)\n      return false;\n\n    long reversed = 0;\n    int y = x;\n\n    while (y) {\n      reversed = reversed * 10 + y % 10;\n      y /= 10;\n    }\n\n    return reversed == x;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public boolean isPalindrome(int x) {\n    if (x < 0)\n      return false;\n\n    long reversed = 0;\n    int y = x;\n\n    while (y > 0) {\n      reversed = reversed * 10 + y % 10;\n      y /= 10;\n    }\n\n    return reversed == x;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def isPalindrome(self, x: int) -> bool:\n    if x < 0:\n      return False\n\n    rev = 0\n    y = x\n\n    while y:\n      rev = rev * 10 + y % 10\n      y //= 10\n\n    return rev == x\n",
                "lang_text": "py"
            }
        }
    }
}