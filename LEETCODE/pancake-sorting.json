{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "969",
            "title": "Pancake Sorting",
            "titleSlug": "pancake-sorting",
            "content": "<p>Given an array of integers <code>arr</code>, sort the array by performing a series of <strong>pancake flips</strong>.</p>\n\n<p>In one pancake flip we do the following steps:</p>\n\n<ul>\n\t<li>Choose an integer <code>k</code> where <code>1 &lt;= k &lt;= arr.length</code>.</li>\n\t<li>Reverse the sub-array <code>arr[0...k-1]</code> (<strong>0-indexed</strong>).</li>\n</ul>\n\n<p>For example, if <code>arr = [3,2,1,4]</code> and we performed a pancake flip choosing <code>k = 3</code>, we reverse the sub-array <code>[3,2,1]</code>, so <code>arr = [<u>1</u>,<u>2</u>,<u>3</u>,4]</code> after the pancake flip at <code>k = 3</code>.</p>\n\n<p>Return <em>an array of the </em><code>k</code><em>-values corresponding to a sequence of pancake flips that sort </em><code>arr</code>. Any valid answer that sorts the array within <code>10 * arr.length</code> flips will be judged as correct.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [3,2,4,1]\n<strong>Output:</strong> [4,2,4,3]\n<strong>Explanation: </strong>\nWe perform 4 pancake flips, with k values 4, 2, 4, and 3.\nStarting state: arr = [3, 2, 4, 1]\nAfter 1st flip (k = 4): arr = [<u>1</u>, <u>4</u>, <u>2</u>, <u>3</u>]\nAfter 2nd flip (k = 2): arr = [<u>4</u>, <u>1</u>, 2, 3]\nAfter 3rd flip (k = 4): arr = [<u>3</u>, <u>2</u>, <u>1</u>, <u>4</u>]\nAfter 4th flip (k = 3): arr = [<u>1</u>, <u>2</u>, <u>3</u>, 4], which is sorted.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1,2,3]\n<strong>Output:</strong> []\n<strong>Explanation: </strong>The input is already sorted, so there is no need to flip anything.\nNote that other answers, such as [3, 3], would also be accepted.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= arr.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= arr[i] &lt;= arr.length</code></li>\n\t<li>All integers in <code>arr</code> are unique (i.e. <code>arr</code> is a permutation of the integers from <code>1</code> to <code>arr.length</code>).</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 1433,
            "dislikes": 1500,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "stats": "{\"totalAccepted\": \"89.8K\", \"totalSubmission\": \"127.5K\", \"totalAcceptedRaw\": 89833, \"totalSubmissionRaw\": 127477, \"acRate\": \"70.5%\"}",
            "hints": [],
            "rephrased": {
                "body": "Given an array of integers `arr`, sort it by performing a series of pancake flips. A pancake flip involves choosing an integer `k` (1 <= k <= arr.length) and reversing the sub-array `arr[0...k-1]` (0-indexed). Return a list of `k` values representing the sequence of pancake flips needed to sort the array. The solution must sort the array within `10 * arr.length` flips to be considered correct.",
                "constraints": [
                    "1 <= arr.length <= 100",
                    "1 <= arr[i] <= arr.length",
                    "All integers in arr are unique (i.e., arr is a permutation of the integers from 1 to arr.length)."
                ],
                "testcases": [
                    {
                        "input": "[3,2,4,1]",
                        "output": "[4,2,4,3]",
                        "explanation": "Initially, arr = [3, 2, 4, 1].\n1st flip (k = 4): arr = [1, 4, 2, 3]\n2nd flip (k = 2): arr = [4, 1, 2, 3]\n3rd flip (k = 4): arr = [3, 2, 1, 4]\n4th flip (k = 3): arr = [1, 2, 3, 4], which is sorted."
                    },
                    {
                        "input": "[1,2,3]",
                        "output": "[]",
                        "explanation": "The input is already sorted, so no flips are needed. Other valid answers, like [3, 3], may exist."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ]
    }
}