{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "391",
            "title": "Perfect Rectangle",
            "titleSlug": "perfect-rectangle",
            "content": "<p>Given an array <code>rectangles</code> where <code>rectangles[i] = [x<sub>i</sub>, y<sub>i</sub>, a<sub>i</sub>, b<sub>i</sub>]</code> represents an axis-aligned rectangle. The bottom-left point of the rectangle is <code>(x<sub>i</sub>, y<sub>i</sub>)</code> and the top-right point of it is <code>(a<sub>i</sub>, b<sub>i</sub>)</code>.</p>\n\n<p>Return <code>true</code> <em>if all the rectangles together form an exact cover of a rectangular region</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/27/perectrec1-plane.jpg\" style=\"width: 300px; height: 294px;\" />\n<pre>\n<strong>Input:</strong> rectangles = [[1,1,3,3],[3,1,4,2],[3,2,4,4],[1,3,2,4],[2,3,3,4]]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> All 5 rectangles together form an exact cover of a rectangular region.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/27/perfectrec2-plane.jpg\" style=\"width: 300px; height: 294px;\" />\n<pre>\n<strong>Input:</strong> rectangles = [[1,1,2,3],[1,3,2,4],[3,1,4,2],[3,2,4,4]]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> Because there is a gap between the two rectangular regions.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/03/27/perfecrrec4-plane.jpg\" style=\"width: 300px; height: 294px;\" />\n<pre>\n<strong>Input:</strong> rectangles = [[1,1,3,3],[3,1,4,2],[1,3,2,4],[2,2,4,4]]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> Because two of the rectangles overlap with each other.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= rectangles.length &lt;= 2 * 10<sup>4</sup></code></li>\n\t<li><code>rectangles[i].length == 4</code></li>\n\t<li><code>-10<sup>5</sup> &lt;= x<sub>i</sub>, y<sub>i</sub>, a<sub>i</sub>, b<sub>i</sub> &lt;= 10<sup>5</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 848,
            "dislikes": 114,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Line Sweep",
                    "slug": "line-sweep"
                }
            ],
            "stats": "{\"totalAccepted\": \"42.1K\", \"totalSubmission\": \"126.3K\", \"totalAcceptedRaw\": 42061, \"totalSubmissionRaw\": 126307, \"acRate\": \"33.3%\"}",
            "hints": [],
            "rephrased": {
                "body": "Given an array `rectangles` where `rectangles[i] = [x<sub>i</sub>, y<sub>i</sub>, a<sub>i</sub>, b<sub>i</sub>]` represents an axis-aligned rectangle. The bottom-left point of the rectangle is `(x<sub>i</sub>, y<sub>i</sub>)` and the top-right point is `(a<sub>i</sub>, b<sub>i</sub>)`. Determine if all the rectangles together form an exact cover of a rectangular region. An exact cover means that the rectangles completely fill the region without any overlaps or gaps.",
                "constraints": [
                    "1 <= rectangles.length <= 2 * 10<sup>4</sup>",
                    "rectangles[i].length == 4",
                    "-10<sup>5</sup> <= x<sub>i</sub>, y<sub>i</sub>, a<sub>i</sub>, b<sub>i</sub> <= 10<sup>5</sup>"
                ],
                "testcases": [
                    {
                        "input": "[[1,1,3,3],[3,1,4,2],[3,2,4,4],[1,3,2,4],[2,3,3,4]]",
                        "output": "true",
                        "explanation": "The given rectangles perfectly cover a rectangular region without any overlaps or gaps."
                    },
                    {
                        "input": "[[1,1,2,3],[1,3,2,4],[3,1,4,2],[3,2,4,4]]",
                        "output": "false",
                        "explanation": "There is a gap between the rectangular regions formed by the input rectangles, indicating it's not an exact cover."
                    },
                    {
                        "input": "[[1,1,3,3],[3,1,4,2],[1,3,2,4],[2,2,4,4]]",
                        "output": "false",
                        "explanation": "Two of the rectangles overlap with each other, meaning they do not form an exact cover."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Line Sweep",
                "slug": "line-sweep"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  bool isRectangleCover(vector<vector<int>>& rectangles) {\n    int area = 0;\n    int x1 = INT_MAX;\n    int y1 = INT_MAX;\n    int x2 = INT_MIN;\n    int y2 = INT_MIN;\n    unordered_set<string> corners;\n\n    for (const vector<int>& r : rectangles) {\n      area += (r[2] - r[0]) * (r[3] - r[1]);\n      x1 = min(x1, r[0]);\n      y1 = min(y1, r[1]);\n      x2 = max(x2, r[2]);\n      y2 = max(y2, r[3]);\n\n      // Four points of current rectangle\n      const vector<string> points{to_string(r[0]) + \" \" + to_string(r[1]),\n                                  to_string(r[0]) + \" \" + to_string(r[3]),\n                                  to_string(r[2]) + \" \" + to_string(r[1]),\n                                  to_string(r[2]) + \" \" + to_string(r[3])};\n      for (const string& point : points)\n        if (!corners.insert(point).second)\n          corners.erase(point);\n    }\n\n    if (corners.size() != 4)\n      return false;\n    if (!corners.count(to_string(x1) + \" \" + to_string(y1)) ||\n        !corners.count(to_string(x1) + \" \" + to_string(y2)) ||\n        !corners.count(to_string(x2) + \" \" + to_string(y1)) ||\n        !corners.count(to_string(x2) + \" \" + to_string(y2)))\n      return false;\n\n    return area == (x2 - x1) * (y2 - y1);\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public boolean isRectangleCover(int[][] rectangles) {\n    int area = 0;\n    int x1 = Integer.MAX_VALUE;\n    int y1 = Integer.MAX_VALUE;\n    int x2 = Integer.MIN_VALUE;\n    int y2 = Integer.MIN_VALUE;\n    Set<String> corners = new HashSet<>();\n\n    for (int[] r : rectangles) {\n      area += (r[2] - r[0]) * (r[3] - r[1]);\n      x1 = Math.min(x1, r[0]);\n      y1 = Math.min(y1, r[1]);\n      x2 = Math.max(x2, r[2]);\n      y2 = Math.max(y2, r[3]);\n\n      // Four points of current rectangle\n      String[] points = new String[] {r[0] + \" \" + r[1], //\n                                      r[0] + \" \" + r[3], //\n                                      r[2] + \" \" + r[1], //\n                                      r[2] + \" \" + r[3]};\n      for (final String point : points)\n        if (!corners.add(point))\n          corners.remove(point);\n    }\n\n    if (corners.size() != 4)\n      return false;\n    if (!corners.contains(x1 + \" \" + y1) || //\n        !corners.contains(x1 + \" \" + y2) || //\n        !corners.contains(x2 + \" \" + y1) || //\n        !corners.contains(x2 + \" \" + y2))\n      return false;\n\n    return area == (x2 - x1) * (y2 - y1);\n  }\n}\n",
                "lang_text": "java"
            }
        }
    }
}