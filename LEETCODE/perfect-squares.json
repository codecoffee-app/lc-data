{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "279",
            "title": "Perfect Squares",
            "titleSlug": "perfect-squares",
            "content": "<p>Given an integer <code>n</code>, return <em>the least number of perfect square numbers that sum to</em> <code>n</code>.</p>\n\n<p>A <strong>perfect square</strong> is an integer that is the square of an integer; in other words, it is the product of some integer with itself. For example, <code>1</code>, <code>4</code>, <code>9</code>, and <code>16</code> are perfect squares while <code>3</code> and <code>11</code> are not.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 12\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> 12 = 4 + 4 + 4.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 13\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> 13 = 4 + 9.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 10<sup>4</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 10265,
            "dislikes": 426,
            "similarQuestions": "[{\"title\": \"Count Primes\", \"titleSlug\": \"count-primes\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Ugly Number II\", \"titleSlug\": \"ugly-number-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Ways to Express an Integer as Sum of Powers\", \"titleSlug\": \"ways-to-express-an-integer-as-sum-of-powers\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                }
            ],
            "stats": "{\"totalAccepted\": \"718K\", \"totalSubmission\": \"1.4M\", \"totalAcceptedRaw\": 718019, \"totalSubmissionRaw\": 1352281, \"acRate\": \"53.1%\"}",
            "hints": [],
            "rephrased": {
                "body": "Given an integer `n`, find the minimum number of perfect square numbers that sum up to `n`. A perfect square is an integer that can be obtained by squaring another integer (e.g., 1, 4, 9, 16).",
                "constraints": [
                    "1 <= n <= 10^4"
                ],
                "testcases": [
                    {
                        "input": "12",
                        "output": "3",
                        "explanation": "12 can be expressed as the sum of three perfect squares: 4 + 4 + 4."
                    },
                    {
                        "input": "13",
                        "output": "2",
                        "explanation": "13 can be expressed as the sum of two perfect squares: 4 + 9."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "count-primes",
                "title": "Count Primes",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "ugly-number-ii",
                "title": "Ugly Number II",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "ways-to-express-an-integer-as-sum-of-powers",
                "title": "Ways to Express an Integer as Sum of Powers",
                "isPaidOnly": false
            }
        ],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int numSquares(int n) {\n    vector<int> dp(n + 1, n);  // 1^2 x n\n\n    dp[0] = 0;  // No way\n    dp[1] = 1;  // 1^2\n\n    for (int i = 2; i <= n; ++i)\n      for (int j = 1; j * j <= i; ++j)\n        dp[i] = min(dp[i], dp[i - j * j] + 1);\n\n    return dp[n];\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int numSquares(int n) {\n    int[] dp = new int[n + 1];\n    Arrays.fill(dp, n); // 1^2 x n\n\n    dp[0] = 0; // No way\n    dp[1] = 1; // 1^2\n\n    for (int i = 2; i <= n; ++i)\n      for (int j = 1; j * j <= i; ++j)\n        dp[i] = Math.min(dp[i], dp[i - j * j] + 1);\n\n    return dp[n];\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def numSquares(self, n: int) -> int:\n    dp = [n] * (n + 1)\n\n    dp[0] = 0\n    dp[1] = 1\n\n    for i in range(2, n + 1):\n      j = 1\n      while j * j <= i:\n        dp[i] = min(dp[i], dp[i - j * j] + 1)\n        j += 1\n\n    return dp[n]\n",
                "lang_text": "py"
            }
        }
    }
}