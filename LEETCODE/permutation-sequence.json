{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "60",
            "title": "Permutation Sequence",
            "titleSlug": "permutation-sequence",
            "content": "<p>The set <code>[1, 2, 3, ...,&nbsp;n]</code> contains a total of <code>n!</code> unique permutations.</p>\n\n<p>By listing and labeling all of the permutations in order, we get the following sequence for <code>n = 3</code>:</p>\n\n<ol>\n\t<li><code>&quot;123&quot;</code></li>\n\t<li><code>&quot;132&quot;</code></li>\n\t<li><code>&quot;213&quot;</code></li>\n\t<li><code>&quot;231&quot;</code></li>\n\t<li><code>&quot;312&quot;</code></li>\n\t<li><code>&quot;321&quot;</code></li>\n</ol>\n\n<p>Given <code>n</code> and <code>k</code>, return the <code>k<sup>th</sup></code> permutation sequence.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> n = 3, k = 3\n<strong>Output:</strong> \"213\"\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> n = 4, k = 9\n<strong>Output:</strong> \"2314\"\n</pre><p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> n = 3, k = 1\n<strong>Output:</strong> \"123\"\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 9</code></li>\n\t<li><code>1 &lt;= k &lt;= n!</code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 6443,
            "dislikes": 463,
            "similarQuestions": "[{\"title\": \"Next Permutation\", \"titleSlug\": \"next-permutation\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Permutations\", \"titleSlug\": \"permutations\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "stats": "{\"totalAccepted\": \"367.2K\", \"totalSubmission\": \"797.9K\", \"totalAcceptedRaw\": 367184, \"totalSubmissionRaw\": 797941, \"acRate\": \"46.0%\"}",
            "hints": [],
            "rephrased": {
                "body": "Given a set of numbers from 1 to n, there are n! possible unique permutations.  Your task is to find the kth permutation sequence when these permutations are listed in lexicographical order.",
                "constraints": [
                    "1 <= n <= 9",
                    "1 <= k <= n!"
                ],
                "testcases": [
                    {
                        "input": "n = 3, k = 3",
                        "output": "213",
                        "explanation": "The permutations for n=3 are \"123\", \"132\", \"213\", \"231\", \"312\", \"321\". The 3rd permutation is \"213\"."
                    },
                    {
                        "input": "n = 4, k = 9",
                        "output": "2314",
                        "explanation": "null"
                    },
                    {
                        "input": "n = 3, k = 1",
                        "output": "123",
                        "explanation": "The first permutation for n=3 is \"123\"."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "next-permutation",
                "title": "Next Permutation",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "permutations",
                "title": "Permutations",
                "isPaidOnly": false
            }
        ],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  string getPermutation(int n, int k) {\n    string ans;\n    vector<int> nums(n);\n    vector<int> fact(n + 1, 1);  // fact[i] := i!\n\n    iota(nums.begin(), nums.end(), 1);\n\n    for (int i = 2; i <= n; ++i)\n      fact[i] = fact[i - 1] * i;\n\n    --k;  // 0-indexed\n\n    for (int i = n - 1; i >= 0; --i) {\n      const int j = k / fact[i];\n      k %= fact[i];\n      ans += to_string(nums[j]);\n      nums.erase(nums.begin() + j);\n    }\n\n    return ans;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public String getPermutation(int n, int k) {\n    StringBuilder sb = new StringBuilder();\n    List<Integer> nums = new ArrayList<>();\n    int[] fact = new int[n + 1]; // fact[i] := i!\n\n    for (int i = 1; i <= n; ++i)\n      nums.add(i);\n\n    Arrays.fill(fact, 1);\n    for (int i = 2; i <= n; ++i)\n      fact[i] = fact[i - 1] * i;\n\n    --k; // 0-indexed\n\n    for (int i = n - 1; i >= 0; --i) {\n      final int j = k / fact[i];\n      k %= fact[i];\n      sb.append(nums.get(j));\n      nums.remove(j);\n    }\n\n    return sb.toString();\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def getPermutation(self, n: int, k: int) -> str:\n    ans = ''\n    nums = [i + 1 for i in range(n)]\n    fact = [1] * (n + 1)  # fact[i] := i!\n\n    for i in range(2, n + 1):\n      fact[i] = fact[i - 1] * i\n\n    k -= 1  # 0-indexed\n\n    for i in reversed(range(n)):\n      j = k // fact[i]\n      k %= fact[i]\n      ans += str(nums[j])\n      nums.pop(j)\n\n    return ans\n",
                "lang_text": "py"
            }
        }
    }
}