{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1116",
            "title": "Print Zero Even Odd",
            "titleSlug": "print-zero-even-odd",
            "content": "<p>You have a function <code>printNumber</code> that can be called with an integer parameter and prints it to the console.</p>\n\n<ul>\n\t<li>For example, calling <code>printNumber(7)</code> prints <code>7</code> to the console.</li>\n</ul>\n\n<p>You are given an instance of the class <code>ZeroEvenOdd</code> that has three functions: <code>zero</code>, <code>even</code>, and <code>odd</code>. The same instance of <code>ZeroEvenOdd</code> will be passed to three different threads:</p>\n\n<ul>\n\t<li><strong>Thread A:</strong> calls <code>zero()</code> that should only output <code>0</code>&#39;s.</li>\n\t<li><strong>Thread B:</strong> calls <code>even()</code> that should only output even numbers.</li>\n\t<li><strong>Thread C:</strong> calls <code>odd()</code> that should only output odd numbers.</li>\n</ul>\n\n<p>Modify the given class to output the series <code>&quot;010203040506...&quot;</code> where the length of the series must be <code>2n</code>.</p>\n\n<p>Implement the <code>ZeroEvenOdd</code> class:</p>\n\n<ul>\n\t<li><code>ZeroEvenOdd(int n)</code> Initializes the object with the number <code>n</code> that represents the numbers that should be printed.</li>\n\t<li><code>void zero(printNumber)</code> Calls <code>printNumber</code> to output one zero.</li>\n\t<li><code>void even(printNumber)</code> Calls <code>printNumber</code> to output one even number.</li>\n\t<li><code>void odd(printNumber)</code> Calls <code>printNumber</code> to output one odd number.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 2\n<strong>Output:</strong> &quot;0102&quot;\n<strong>Explanation:</strong> There are three threads being fired asynchronously.\nOne of them calls zero(), the other calls even(), and the last one calls odd().\n&quot;0102&quot; is the correct output.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 5\n<strong>Output:</strong> &quot;0102030405&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 1000</code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 466,
            "dislikes": 318,
            "similarQuestions": "[{\"title\": \"Print FooBar Alternately\", \"titleSlug\": \"print-foobar-alternately\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Fizz Buzz Multithreaded\", \"titleSlug\": \"fizz-buzz-multithreaded\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Concurrency",
                    "slug": "concurrency"
                }
            ],
            "stats": "{\"totalAccepted\": \"45.5K\", \"totalSubmission\": \"74.8K\", \"totalAcceptedRaw\": 45527, \"totalSubmissionRaw\": 74777, \"acRate\": \"60.9%\"}",
            "hints": [],
            "rephrased": {
                "body": "You are given a function `printNumber` that accepts an integer and prints it to the console. You are also given a class `ZeroEvenOdd` with three methods: `zero`, `even`, and `odd`.  Three threads will execute these methods concurrently, using the same instance of the `ZeroEvenOdd` class.\n\nThread A: Calls `zero()` to print only the number 0.\nThread B: Calls `even()` to print only even numbers.\nThread C: Calls `odd()` to print only odd numbers.\n\nYour task is to modify the `ZeroEvenOdd` class to print the sequence \"010203040506...\" up to a length of `2n`, where `n` is an integer provided to the class constructor.\n\nThe `ZeroEvenOdd` class should have the following:\n\n*   `ZeroEvenOdd(int n)`:  Initializes the object with the number `n`.\n*   `void zero(printNumber)`:  Prints a single 0.\n*   `void even(printNumber)`:  Prints a single even number.\n*   `void odd(printNumber)`:  Prints a single odd number.",
                "constraints": [
                    "1 <= n <= 1000"
                ],
                "testcases": [
                    {
                        "input": "n = 2",
                        "output": "\"0102\"",
                        "explanation": "Three threads are executed asynchronously: one for zero(), one for even(), and one for odd(). The correct sequence is \"0102\"."
                    },
                    {
                        "input": "n = 5",
                        "output": "\"0102030405\"",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "print-foobar-alternately",
                "title": "Print FooBar Alternately",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "fizz-buzz-multithreaded",
                "title": "Fizz Buzz Multithreaded",
                "isPaidOnly": false
            }
        ],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Concurrency",
                "slug": "concurrency"
            }
        ]
    }
}