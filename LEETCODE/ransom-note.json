{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "383",
            "title": "Ransom Note",
            "titleSlug": "ransom-note",
            "content": "<p>Given two strings <code>ransomNote</code> and <code>magazine</code>, return <code>true</code><em> if </em><code>ransomNote</code><em> can be constructed by using the letters from </em><code>magazine</code><em> and </em><code>false</code><em> otherwise</em>.</p>\n\n<p>Each letter in <code>magazine</code> can only be used once in <code>ransomNote</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> ransomNote = \"a\", magazine = \"b\"\n<strong>Output:</strong> false\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> ransomNote = \"aa\", magazine = \"ab\"\n<strong>Output:</strong> false\n</pre><p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> ransomNote = \"aa\", magazine = \"aab\"\n<strong>Output:</strong> true\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= ransomNote.length, magazine.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>ransomNote</code> and <code>magazine</code> consist of lowercase English letters.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 4717,
            "dislikes": 482,
            "similarQuestions": "[{\"title\": \"Stickers to Spell Word\", \"titleSlug\": \"stickers-to-spell-word\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "stats": "{\"totalAccepted\": \"989.9K\", \"totalSubmission\": \"1.6M\", \"totalAcceptedRaw\": 989872, \"totalSubmissionRaw\": 1642968, \"acRate\": \"60.2%\"}",
            "hints": [],
            "rephrased": {
                "body": "Given two strings, `ransomNote` and `magazine`, determine if `ransomNote` can be constructed using the characters from `magazine`. Each character in `magazine` can only be used once.",
                "constraints": [
                    "1 <= ransomNote.length, magazine.length <= 10^5",
                    "ransomNote and magazine consist of lowercase English letters."
                ],
                "testcases": [
                    {
                        "input": "ransomNote = \"a\", magazine = \"b\"",
                        "output": "false",
                        "explanation": "The character 'a' is not present in 'b'."
                    },
                    {
                        "input": "ransomNote = \"aa\", magazine = \"ab\"",
                        "output": "false",
                        "explanation": "The character 'a' appears twice in 'ransomNote', but only once in 'magazine'."
                    },
                    {
                        "input": "ransomNote = \"aa\", magazine = \"aab\"",
                        "output": "true",
                        "explanation": "The character 'a' appears twice in 'ransomNote' and at least twice in 'magazine'."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Hard",
                "titleSlug": "stickers-to-spell-word",
                "title": "Stickers to Spell Word",
                "isPaidOnly": false
            }
        ],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  bool canConstruct(string ransomNote, string magazine) {\n    vector<int> count(128);\n\n    for (const char c : magazine)\n      ++count[c];\n\n    for (const char c : ransomNote)\n      if (--count[c] < 0)\n        return false;\n\n    return true;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public boolean canConstruct(String ransomNote, String magazine) {\n    int[] count = new int[128];\n\n    for (final char c : magazine.toCharArray())\n      ++count[c];\n\n    for (final char c : ransomNote.toCharArray())\n      if (--count[c] < 0)\n        return false;\n\n    return true;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def canConstruct(self, ransomNote: str, magazine: str) -> bool:\n    count1 = collections.Counter(ransomNote)\n    count2 = collections.Counter(magazine)\n    return all(count1[c] <= count2[c] for c in string.ascii_lowercase)\n",
                "lang_text": "py"
            }
        }
    }
}