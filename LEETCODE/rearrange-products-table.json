{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1795",
            "title": "Rearrange Products Table",
            "titleSlug": "rearrange-products-table",
            "content": "<p>Table: <code>Products</code></p>\n\n<pre>\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| product_id  | int     |\n| store1      | int     |\n| store2      | int     |\n| store3      | int     |\n+-------------+---------+\nproduct_id is the primary key (column with unique values) for this table.\nEach row in this table indicates the product&#39;s price in 3 different stores: store1, store2, and store3.\nIf the product is not available in a store, the price will be null in that store&#39;s column.\n</pre>\n\n<p>&nbsp;</p>\n\n<p>Write a solution to rearrange the <code>Products</code> table so that each row has <code>(product_id, store, price)</code>. If a product is not available in a store, do <strong>not</strong> include a row with that <code>product_id</code> and <code>store</code> combination in the result table.</p>\n\n<p>Return the result table in <strong>any order</strong>.</p>\n\n<p>The result format is in the following example.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> \nProducts table:\n+------------+--------+--------+--------+\n| product_id | store1 | store2 | store3 |\n+------------+--------+--------+--------+\n| 0          | 95     | 100    | 105    |\n| 1          | 70     | null   | 80     |\n+------------+--------+--------+--------+\n<strong>Output:</strong> \n+------------+--------+-------+\n| product_id | store  | price |\n+------------+--------+-------+\n| 0          | store1 | 95    |\n| 0          | store2 | 100   |\n| 0          | store3 | 105   |\n| 1          | store1 | 70    |\n| 1          | store3 | 80    |\n+------------+--------+-------+\n<strong>Explanation:</strong> \nProduct 0 is available in all three stores with prices 95, 100, and 105 respectively.\nProduct 1 is available in store1 with price 70 and store3 with price 80. The product is not available in store2.\n</pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 806,
            "dislikes": 53,
            "similarQuestions": "[{\"title\": \"Product's Price for Each Store\", \"titleSlug\": \"products-price-for-each-store\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Dynamic Unpivoting of a Table\", \"titleSlug\": \"dynamic-unpivoting-of-a-table\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Database",
                    "slug": "database"
                }
            ],
            "stats": "{\"totalAccepted\": \"113.6K\", \"totalSubmission\": \"133.1K\", \"totalAcceptedRaw\": 113623, \"totalSubmissionRaw\": 133128, \"acRate\": \"85.3%\"}",
            "hints": [],
            "rephrased": {
                "body": "Rearrange the `Products` table so that each row represents a product's price in a specific store. The resulting table should have the columns `product_id`, `store`, and `price`.  Only include rows where the product is available in that store.  The order of the rows in the output table does not matter.",
                "constraints": [],
                "testcases": [
                    {
                        "input": "Products table:\n+------------+--------+--------+--------+\n| product_id | store1 | store2 | store3 |\n+------------+--------+--------+--------+\n| 0          | 95     | 100    | 105    |\n| 1          | 70     | null   | 80     |\n+------------+--------+--------+--------+",
                        "output": "+\n| product_id | store  | price |\n+------------+--------+-------+\n| 0          | store1 | 95    |\n| 0          | store2 | 100   |\n| 0          | store3 | 105   |\n| 1          | store1 | 70    |\n| 1          | store3 | 80    |\n+",
                        "explanation": "Product 0 is available in all three stores, so we have three rows for product_id 0, one for each store. Product 1 is available in store1 and store3 but not store2, so we have only two rows for product_id 1."
                    },
                    {
                        "input": "Products table:\n+------------+--------+--------+--------+\n| product_id | store1 | store2 | store3 |\n+------------+--------+--------+--------+\n| 2          | null   | null   | null   |\n| 3          | 10     | null   | 20     |\n+------------+--------+--------+--------+",
                        "output": "+\n| product_id | store  | price |\n+------------+--------+-------+\n| 3          | store1 | 10    |\n| 3          | store3 | 20    |\n+",
                        "explanation": "Product 2 is not available in any stores, so there should not be any rows generated for it. Product 3 is available in store1 and store3."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Easy",
                "titleSlug": "products-price-for-each-store",
                "title": "Product's Price for Each Store",
                "isPaidOnly": true
            },
            {
                "difficulty": "Hard",
                "titleSlug": "dynamic-unpivoting-of-a-table",
                "title": "Dynamic Unpivoting of a Table",
                "isPaidOnly": true
            }
        ],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Database",
                "slug": "database"
            }
        ]
    }
}