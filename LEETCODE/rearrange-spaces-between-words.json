{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1592",
            "title": "Rearrange Spaces Between Words",
            "titleSlug": "rearrange-spaces-between-words",
            "content": "<p>You are given a string <code>text</code> of words that are placed among some number of spaces. Each word consists of one or more lowercase English letters and are separated by at least one space. It&#39;s guaranteed that <code>text</code> <strong>contains at least one word</strong>.</p>\n\n<p>Rearrange the spaces so that there is an <strong>equal</strong> number of spaces between every pair of adjacent words and that number is <strong>maximized</strong>. If you cannot redistribute all the spaces equally, place the <strong>extra spaces at the end</strong>, meaning the returned string should be the same length as <code>text</code>.</p>\n\n<p>Return <em>the string after rearranging the spaces</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> text = &quot;  this   is  a sentence &quot;\n<strong>Output:</strong> &quot;this   is   a   sentence&quot;\n<strong>Explanation:</strong> There are a total of 9 spaces and 4 words. We can evenly divide the 9 spaces between the words: 9 / (4-1) = 3 spaces.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> text = &quot; practice   makes   perfect&quot;\n<strong>Output:</strong> &quot;practice   makes   perfect &quot;\n<strong>Explanation:</strong> There are a total of 7 spaces and 3 words. 7 / (3-1) = 3 spaces plus 1 extra space. We place this extra space at the end of the string.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= text.length &lt;= 100</code></li>\n\t<li><code>text</code> consists of lowercase English letters and <code>&#39; &#39;</code>.</li>\n\t<li><code>text</code> contains at least one word.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 442,
            "dislikes": 342,
            "similarQuestions": "[{\"title\": \"Text Justification\", \"titleSlug\": \"text-justification\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "stats": "{\"totalAccepted\": \"53.3K\", \"totalSubmission\": \"122.9K\", \"totalAcceptedRaw\": 53328, \"totalSubmissionRaw\": 122944, \"acRate\": \"43.4%\"}",
            "hints": [
                "Count the total number of spaces and words. Then use the integer division to determine the numbers of spaces to add between each word and at the end."
            ],
            "rephrased": {
                "body": "Given a string `text` containing words separated by spaces, redistribute the spaces such that there is an equal number of spaces between each pair of adjacent words, maximizing this number. Any extra spaces should be placed at the end of the string. Return the rearranged string.",
                "constraints": [
                    "1 <= text.length <= 100",
                    "text consists of lowercase English letters and ' ' (space).",
                    "text contains at least one word."
                ],
                "testcases": [
                    {
                        "input": "  this   is  a sentence ",
                        "output": "this   is   a   sentence",
                        "explanation": "There are 9 spaces and 4 words.  Distributing the spaces evenly results in 9 / (4-1) = 3 spaces between words."
                    },
                    {
                        "input": " practice   makes   perfect",
                        "output": "practice   makes   perfect ",
                        "explanation": "There are 7 spaces and 3 words.  Distributing the spaces evenly results in 7 / (3-1) = 3 spaces between words, with 1 extra space placed at the end."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Hard",
                "titleSlug": "text-justification",
                "title": "Text Justification",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "Count the total number of spaces and words. Then use the integer division to determine the numbers of spaces to add between each word and at the end."
        ],
        "relatedTopics": [
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  string reorderSpaces(string text) {\n    const int spaces = count(text.begin(), text.end(), ' ');\n    string ans;\n    vector<string> words;\n\n    istringstream iss(text);\n    string word;\n\n    while (iss >> word)\n      words.push_back(word);\n\n    if (words.size() == 1)\n      return word + string(spaces, ' ');\n\n    const int gapSize = spaces / (words.size() - 1);\n    const int remains = spaces % (words.size() - 1);\n\n    for (int i = 0; i < words.size() - 1; ++i)\n      ans += words[i] + string(gapSize, ' ');\n    ans += words.back() + string(remains, ' ');\n\n    return ans;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public String reorderSpaces(String text) {\n    final String[] words = text.trim().split(\"\\\\s+\");\n    final int spaces = (int) text.chars().filter(c -> c == ' ').count();\n    final int n = words.length;\n    final int gapSize = n == 1 ? 0 : spaces / (n - 1);\n    final int remains = n == 1 ? spaces : spaces % (n - 1);\n    return String.join(\" \".repeat(gapSize), words) + \" \".repeat(remains);\n  }\n}\n",
                "lang_text": "java"
            }
        }
    }
}