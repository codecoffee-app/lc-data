{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1451",
            "title": "Rearrange Words in a Sentence",
            "titleSlug": "rearrange-words-in-a-sentence",
            "content": "<p>Given a sentence&nbsp;<code>text</code> (A&nbsp;<em>sentence</em>&nbsp;is a string of space-separated words) in the following format:</p>\n\n<ul>\n\t<li>First letter is in upper case.</li>\n\t<li>Each word in <code>text</code> are separated by a single space.</li>\n</ul>\n\n<p>Your task is to rearrange the words in text such that&nbsp;all words are rearranged in an increasing order of their lengths. If two words have the same length, arrange them in their original order.</p>\n\n<p>Return the new text&nbsp;following the format shown above.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> text = &quot;Leetcode is cool&quot;\n<strong>Output:</strong> &quot;Is cool leetcode&quot;\n<strong>Explanation: </strong>There are 3 words, &quot;Leetcode&quot; of length 8, &quot;is&quot; of length 2 and &quot;cool&quot; of length 4.\nOutput is ordered by length and the new first word starts with capital letter.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> text = &quot;Keep calm and code on&quot;\n<strong>Output:</strong> &quot;On and keep calm code&quot;\n<strong>Explanation: </strong>Output is ordered as follows:\n&quot;On&quot; 2 letters.\n&quot;and&quot; 3 letters.\n&quot;keep&quot; 4 letters in case of tie order by position in original text.\n&quot;calm&quot; 4 letters.\n&quot;code&quot; 4 letters.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> text = &quot;To be or not to be&quot;\n<strong>Output:</strong> &quot;To be or to be not&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>text</code> begins with a capital letter and then contains lowercase letters and single space between words.</li>\n\t<li><code>1 &lt;= text.length &lt;= 10^5</code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 723,
            "dislikes": 73,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "stats": "{\"totalAccepted\": \"48.9K\", \"totalSubmission\": \"76.3K\", \"totalAcceptedRaw\": 48885, \"totalSubmissionRaw\": 76325, \"acRate\": \"64.0%\"}",
            "hints": [
                "Store each word and their relative position. Then, sort them by length of words in case of tie by their original order."
            ],
            "rephrased": {
                "body": "Given a sentence `text` where words are separated by a single space, and the first letter is capitalized, rearrange the words in ascending order of their lengths. If two words have the same length, maintain their original order within the sentence. Return the rearranged sentence, ensuring the first word is capitalized.",
                "constraints": [
                    "text begins with a capital letter and contains lowercase letters and single spaces between words.",
                    "1 <= text.length <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "Leetcode is cool",
                        "output": "Is cool leetcode",
                        "explanation": "The words are \"Leetcode\" (length 8), \"is\" (length 2), and \"cool\" (length 4). The output is ordered by length, and the first word is capitalized."
                    },
                    {
                        "input": "Keep calm and code on",
                        "output": "On and keep calm code",
                        "explanation": "The output is ordered as follows:\n\"On\" (2 letters).\n\"and\" (3 letters).\n\"keep\" (4 letters, original order preserved).\n\"calm\" (4 letters, original order preserved).\n\"code\" (4 letters, original order preserved)."
                    },
                    {
                        "input": "To be or not to be",
                        "output": "To be or to be not",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "Store each word and their relative position. Then, sort them by length of words in case of tie by their original order."
        ],
        "relatedTopics": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "solutions": {
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def arrangeWords(self, text: str) -> str:\n    words = text.split()\n    count = collections.defaultdict(list)\n\n    for word in words:\n      count[len(word)].append(word.lower())\n\n    c2 = OrderedDict(sorted(count.items()))\n\n    ans = []\n\n    for l in c2:\n      for word in c2[l]:\n        ans.append(word)\n\n    ans[0] = ans[0].capitalize()\n\n    return ' '.join(ans)\n",
                "lang_text": "py"
            }
        }
    }
}