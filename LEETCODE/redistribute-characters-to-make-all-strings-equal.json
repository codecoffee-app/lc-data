{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1897",
            "title": "Redistribute Characters to Make All Strings Equal",
            "titleSlug": "redistribute-characters-to-make-all-strings-equal",
            "content": "<p>You are given an array of strings <code>words</code> (<strong>0-indexed</strong>).</p>\n\n<p>In one operation, pick two <strong>distinct</strong> indices <code>i</code> and <code>j</code>, where <code>words[i]</code> is a non-empty string, and move <strong>any</strong> character from <code>words[i]</code> to <strong>any</strong> position in <code>words[j]</code>.</p>\n\n<p>Return <code>true</code> <em>if you can make<strong> every</strong> string in </em><code>words</code><em> <strong>equal </strong>using <strong>any</strong> number of operations</em>,<em> and </em><code>false</code> <em>otherwise</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = [&quot;abc&quot;,&quot;aabc&quot;,&quot;bc&quot;]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> Move the first &#39;a&#39; in <code>words[1] to the front of words[2],\nto make </code><code>words[1]</code> = &quot;abc&quot; and words[2] = &quot;abc&quot;.\nAll the strings are now equal to &quot;abc&quot;, so return <code>true</code>.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = [&quot;ab&quot;,&quot;a&quot;]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> It is impossible to make all the strings equal using the operation.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= words.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= words[i].length &lt;= 100</code></li>\n\t<li><code>words[i]</code> consists of lowercase English letters.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 1047,
            "dislikes": 73,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "stats": "{\"totalAccepted\": \"123.7K\", \"totalSubmission\": \"181.8K\", \"totalAcceptedRaw\": 123738, \"totalSubmissionRaw\": 181842, \"acRate\": \"68.0%\"}",
            "hints": [
                "Characters are independent\u2014only the frequency of characters matters.",
                "It is possible to distribute characters if all characters can be divided equally among all strings."
            ],
            "rephrased": {
                "body": "Given an array of strings `words`, determine if it's possible to make all strings equal by moving characters between them. In a single operation, you can pick two distinct strings `words[i]` and `words[j]`, where `words[i]` is non-empty, and move any character from `words[i]` to any position in `words[j]`. Return `true` if it's possible to make all strings equal, and `false` otherwise.",
                "constraints": [
                    "1 <= words.length <= 100",
                    "1 <= words[i].length <= 100",
                    "words[i] consists of lowercase English letters."
                ],
                "testcases": [
                    {
                        "input": "[\"abc\",\"aabc\",\"bc\"]",
                        "output": "true",
                        "explanation": "By moving one 'a' from the second string to the third string, all strings can become \"abc\"."
                    },
                    {
                        "input": "[\"ab\",\"a\"]",
                        "output": "false",
                        "explanation": "It is impossible to redistribute the characters to make all strings equal."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "Characters are independent\u2014only the frequency of characters matters.",
            "It is possible to distribute characters if all characters can be divided equally among all strings."
        ],
        "relatedTopics": [
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  bool makeEqual(vector<string>& words) {\n    vector<int> count(26);\n\n    for (const string& word : words)\n      for (const char c : word)\n        ++count[c - 'a'];\n\n    return all_of(count.begin(), count.end(),\n                  [&](const int c) { return c % words.size() == 0; });\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public boolean makeEqual(String[] words) {\n    int[] count = new int[26];\n\n    for (final String word : words)\n      for (final char c : word.toCharArray())\n        ++count[c - 'a'];\n\n    return Arrays.stream(count).allMatch(c -> c % words.length == 0);\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def makeEqual(self, words: List[str]) -> bool:\n    return all(c % len(words) == 0 for c in collections.Counter(''.join(words)).values())\n",
                "lang_text": "py"
            }
        }
    }
}