{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1694",
            "title": "Reformat Phone Number",
            "titleSlug": "reformat-phone-number",
            "content": "<p>You are given a phone number as a string <code>number</code>. <code>number</code> consists of digits, spaces <code>&#39; &#39;</code>, and/or dashes <code>&#39;-&#39;</code>.</p>\n\n<p>You would like to reformat the phone number in a certain manner. Firstly, <strong>remove</strong> all spaces and dashes. Then, <strong>group</strong> the digits from left to right into blocks of length 3 <strong>until</strong> there are 4 or fewer digits. The final digits are then grouped as follows:</p>\n\n<ul>\n\t<li>2 digits: A single block of length 2.</li>\n\t<li>3 digits: A single block of length 3.</li>\n\t<li>4 digits: Two blocks of length 2 each.</li>\n</ul>\n\n<p>The blocks are then joined by dashes. Notice that the reformatting process should <strong>never</strong> produce any blocks of length 1 and produce <strong>at most</strong> two blocks of length 2.</p>\n\n<p>Return <em>the phone number after formatting.</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> number = &quot;1-23-45 6&quot;\n<strong>Output:</strong> &quot;123-456&quot;\n<strong>Explanation:</strong> The digits are &quot;123456&quot;.\nStep 1: There are more than 4 digits, so group the next 3 digits. The 1st block is &quot;123&quot;.\nStep 2: There are 3 digits remaining, so put them in a single block of length 3. The 2nd block is &quot;456&quot;.\nJoining the blocks gives &quot;123-456&quot;.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> number = &quot;123 4-567&quot;\n<strong>Output:</strong> &quot;123-45-67&quot;\n<strong>Explanation: </strong>The digits are &quot;1234567&quot;.\nStep 1: There are more than 4 digits, so group the next 3 digits. The 1st block is &quot;123&quot;.\nStep 2: There are 4 digits left, so split them into two blocks of length 2. The blocks are &quot;45&quot; and &quot;67&quot;.\nJoining the blocks gives &quot;123-45-67&quot;.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> number = &quot;123 4-5678&quot;\n<strong>Output:</strong> &quot;123-456-78&quot;\n<strong>Explanation:</strong> The digits are &quot;12345678&quot;.\nStep 1: The 1st block is &quot;123&quot;.\nStep 2: The 2nd block is &quot;456&quot;.\nStep 3: There are 2 digits left, so put them in a single block of length 2. The 3rd block is &quot;78&quot;.\nJoining the blocks gives &quot;123-456-78&quot;.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= number.length &lt;= 100</code></li>\n\t<li><code>number</code> consists of digits and the characters <code>&#39;-&#39;</code> and <code>&#39; &#39;</code>.</li>\n\t<li>There are at least <strong>two</strong> digits in <code>number</code>.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 329,
            "dislikes": 197,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "stats": "{\"totalAccepted\": \"35.1K\", \"totalSubmission\": \"53.9K\", \"totalAcceptedRaw\": 35135, \"totalSubmissionRaw\": 53933, \"acRate\": \"65.1%\"}",
            "hints": [
                "Discard all the spaces and dashes.",
                "Use a while loop. While the string still has digits, check its length and see which rule to apply."
            ],
            "rephrased": {
                "body": "Given a phone number string `number` containing digits, spaces, and/or dashes, reformat it as follows:\n\n1.  Remove all spaces and dashes.\n2.  Group the remaining digits into blocks of length 3 from left to right until 4 or fewer digits remain.\n3.  Group the final digits as follows:\n    *   2 digits: A single block of length 2.\n    *   3 digits: A single block of length 3.\n    *   4 digits: Two blocks of length 2 each.\n\nJoin the blocks with dashes. Ensure no blocks have length 1 and there are at most two blocks of length 2.\n\nReturn the reformatted phone number.",
                "constraints": [
                    "2 <= number.length <= 100",
                    "number consists of digits and the characters '-' and ' '.",
                    "There are at least two digits in number."
                ],
                "testcases": [
                    {
                        "input": "1-23-45 6",
                        "output": "123-456",
                        "explanation": "After removing spaces and dashes, the digits are \"123456\". We form a block of 3 digits \"123\", leaving 3 digits. The last 3 digits form a single block \"456\". Joining gives \"123-456\"."
                    },
                    {
                        "input": "123 4-567",
                        "output": "123-45-67",
                        "explanation": "After removing spaces and dashes, the digits are \"1234567\". We form a block of 3 digits \"123\", leaving 4 digits. The last 4 digits are split into two blocks of length 2: \"45\" and \"67\". Joining gives \"123-45-67\"."
                    },
                    {
                        "input": "123 4-5678",
                        "output": "123-456-78",
                        "explanation": "After removing spaces and dashes, the digits are \"12345678\". The first block is \"123\", leaving 5 digits. The next block is \"456\", leaving 2 digits. The last 2 digits form a block \"78\". Joining gives \"123-456-78\"."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "Discard all the spaces and dashes.",
            "Use a while loop. While the string still has digits, check its length and see which rule to apply."
        ],
        "relatedTopics": [
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "solutions": {}
    }
}