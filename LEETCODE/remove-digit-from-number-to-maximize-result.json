{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2259",
            "title": "Remove Digit From Number to Maximize Result",
            "titleSlug": "remove-digit-from-number-to-maximize-result",
            "content": "<p>You are given a string <code>number</code> representing a <strong>positive integer</strong> and a character <code>digit</code>.</p>\n\n<p>Return <em>the resulting string after removing <strong>exactly one occurrence</strong> of </em><code>digit</code><em> from </em><code>number</code><em> such that the value of the resulting string in <strong>decimal</strong> form is <strong>maximized</strong></em>. The test cases are generated such that <code>digit</code> occurs at least once in <code>number</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> number = &quot;123&quot;, digit = &quot;3&quot;\n<strong>Output:</strong> &quot;12&quot;\n<strong>Explanation:</strong> There is only one &#39;3&#39; in &quot;123&quot;. After removing &#39;3&#39;, the result is &quot;12&quot;.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> number = &quot;1231&quot;, digit = &quot;1&quot;\n<strong>Output:</strong> &quot;231&quot;\n<strong>Explanation:</strong> We can remove the first &#39;1&#39; to get &quot;231&quot; or remove the second &#39;1&#39; to get &quot;123&quot;.\nSince 231 &gt; 123, we return &quot;231&quot;.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> number = &quot;551&quot;, digit = &quot;5&quot;\n<strong>Output:</strong> &quot;51&quot;\n<strong>Explanation:</strong> We can remove either the first or second &#39;5&#39; from &quot;551&quot;.\nBoth result in the string &quot;51&quot;.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= number.length &lt;= 100</code></li>\n\t<li><code>number</code> consists of digits from <code>&#39;1&#39;</code> to <code>&#39;9&#39;</code>.</li>\n\t<li><code>digit</code> is a digit from <code>&#39;1&#39;</code> to <code>&#39;9&#39;</code>.</li>\n\t<li><code>digit</code> occurs at least once in <code>number</code>.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 754,
            "dislikes": 45,
            "similarQuestions": "[{\"title\": \"Remove K Digits\", \"titleSlug\": \"remove-k-digits\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Remove Vowels from a String\", \"titleSlug\": \"remove-vowels-from-a-string\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Second Largest Digit in a String\", \"titleSlug\": \"second-largest-digit-in-a-string\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Minimum Operations to Make a Special Number\", \"titleSlug\": \"minimum-operations-to-make-a-special-number\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Enumeration",
                    "slug": "enumeration"
                }
            ],
            "stats": "{\"totalAccepted\": \"68.1K\", \"totalSubmission\": \"151.2K\", \"totalAcceptedRaw\": 68099, \"totalSubmissionRaw\": 151240, \"acRate\": \"45.0%\"}",
            "hints": [
                "The maximum length of number is really small.",
                "Iterate through the digits of number and every time we see digit, try removing it.",
                "To remove a character at index i, concatenate the substring from index 0 to i - 1 and the substring from index i + 1 to number.length - 1."
            ],
            "rephrased": {
                "body": "Given a string `number` representing a positive integer and a character `digit`, return the resulting string after removing exactly one occurrence of `digit` from `number` such that the value of the resulting string in decimal form is maximized. It is guaranteed that `digit` occurs at least once in `number`.",
                "constraints": [
                    "2 <= number.length <= 100",
                    "number consists of digits from '1' to '9'.",
                    "digit is a digit from '1' to '9'.",
                    "digit occurs at least once in number."
                ],
                "testcases": [
                    {
                        "input": "number = \"123\", digit = \"3\"",
                        "output": "\"12\"",
                        "explanation": "There is only one '3' in \"123\". Removing '3' results in \"12\"."
                    },
                    {
                        "input": "number = \"1231\", digit = \"1\"",
                        "output": "\"231\"",
                        "explanation": "Removing the first '1' gives \"231\", while removing the second '1' gives \"123\". Since 231 > 123, we return \"231\"."
                    },
                    {
                        "input": "number = \"551\", digit = \"5\"",
                        "output": "\"51\"",
                        "explanation": "Removing either the first or second '5' from \"551\" both results in the string \"51\"."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "remove-k-digits",
                "title": "Remove K Digits",
                "isPaidOnly": false
            },
            {
                "difficulty": "Easy",
                "titleSlug": "remove-vowels-from-a-string",
                "title": "Remove Vowels from a String",
                "isPaidOnly": true
            },
            {
                "difficulty": "Easy",
                "titleSlug": "second-largest-digit-in-a-string",
                "title": "Second Largest Digit in a String",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "minimum-operations-to-make-a-special-number",
                "title": "Minimum Operations to Make a Special Number",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "The maximum length of number is really small.",
            "Iterate through the digits of number and every time we see digit, try removing it.",
            "To remove a character at index i, concatenate the substring from index 0 to i - 1 and the substring from index i + 1 to number.length - 1."
        ],
        "relatedTopics": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  string removeDigit(string number, char digit) {\n    for (int i = 0; i + 1 < number.length(); ++i)\n      if (number[i] == digit && digit < number[i + 1])\n        return number.erase(i, 1);\n    return number.erase(number.rfind(digit), 1);\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public String removeDigit(String number, char digit) {\n    for (int i = 0; i + 1 < number.length(); ++i)\n      if (number.charAt(i) == digit && digit < number.charAt(i + 1))\n        return new StringBuilder(number).deleteCharAt(i).toString();\n    return new StringBuilder(number).deleteCharAt(number.lastIndexOf(digit)).toString();\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "",
                "lang_text": "py"
            }
        }
    }
}