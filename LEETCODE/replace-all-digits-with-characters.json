{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1844",
            "title": "Replace All Digits with Characters",
            "titleSlug": "replace-all-digits-with-characters",
            "content": "<p>You are given a <strong>0-indexed</strong> string <code>s</code> that has lowercase English letters in its <strong>even</strong> indices and digits in its <strong>odd</strong> indices.</p>\n\n<p>There is a function <code>shift(c, x)</code>, where <code>c</code> is a character and <code>x</code> is a digit, that returns the <code>x<sup>th</sup></code> character after <code>c</code>.</p>\n\n<ul>\n\t<li>For example, <code>shift(&#39;a&#39;, 5) = &#39;f&#39;</code> and <code>shift(&#39;x&#39;, 0) = &#39;x&#39;</code>.</li>\n</ul>\n\n<p>For every <strong>odd</strong>&nbsp;index <code>i</code>, you want to replace the digit <code>s[i]</code> with <code>shift(s[i-1], s[i])</code>.</p>\n\n<p>Return <code>s</code><em> after replacing all digits. It is <strong>guaranteed</strong> that </em><code>shift(s[i-1], s[i])</code><em> will never exceed </em><code>&#39;z&#39;</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;a1c1e1&quot;\n<strong>Output:</strong> &quot;abcdef&quot;\n<strong>Explanation: </strong>The digits are replaced as follows:\n- s[1] -&gt; shift(&#39;a&#39;,1) = &#39;b&#39;\n- s[3] -&gt; shift(&#39;c&#39;,1) = &#39;d&#39;\n- s[5] -&gt; shift(&#39;e&#39;,1) = &#39;f&#39;</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;a1b2c3d4e&quot;\n<strong>Output:</strong> &quot;abbdcfdhe&quot;\n<strong>Explanation: </strong>The digits are replaced as follows:\n- s[1] -&gt; shift(&#39;a&#39;,1) = &#39;b&#39;\n- s[3] -&gt; shift(&#39;b&#39;,2) = &#39;d&#39;\n- s[5] -&gt; shift(&#39;c&#39;,3) = &#39;f&#39;\n- s[7] -&gt; shift(&#39;d&#39;,4) = &#39;h&#39;</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 100</code></li>\n\t<li><code>s</code> consists only of lowercase English letters and digits.</li>\n\t<li><code>shift(s[i-1], s[i]) &lt;= &#39;z&#39;</code> for all <strong>odd</strong> indices <code>i</code>.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 790,
            "dislikes": 88,
            "similarQuestions": "[{\"title\": \"Shifting Letters\", \"titleSlug\": \"shifting-letters\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "stats": "{\"totalAccepted\": \"76.7K\", \"totalSubmission\": \"95K\", \"totalAcceptedRaw\": 76676, \"totalSubmissionRaw\": 95003, \"acRate\": \"80.7%\"}",
            "hints": [
                "We just need to replace every even positioned character with the character s[i] positions ahead of the character preceding it",
                "Get the position of the preceeding character in alphabet then advance it s[i] positions and get the character at that position"
            ],
            "rephrased": {
                "body": "Given a 0-indexed string `s` consisting of lowercase English letters at even indices and digits at odd indices. Replace each digit at an odd index `i` with the character obtained by shifting the character at index `i-1` by the value of the digit at index `i`. The `shift(c, x)` function returns the x-th character after `c`. For example, `shift('a', 5) = 'f'` and `shift('x', 0) = 'x'`. Return the modified string `s` after all replacements.",
                "constraints": [
                    "1 <= s.length <= 100",
                    "s consists only of lowercase English letters and digits.",
                    "shift(s[i-1], s[i]) <= 'z' for all odd indices i."
                ],
                "testcases": [
                    {
                        "input": "a1c1e1",
                        "output": "abcdef",
                        "explanation": "The digit '1' at index 1 is replaced by shift('a', 1) = 'b'. The digit '1' at index 3 is replaced by shift('c', 1) = 'd'. The digit '1' at index 5 is replaced by shift('e', 1) = 'f'."
                    },
                    {
                        "input": "a1b2c3d4e",
                        "output": "abbdcfdhe",
                        "explanation": "The digit '1' at index 1 is replaced by shift('a', 1) = 'b'. The digit '2' at index 3 is replaced by shift('b', 2) = 'd'. The digit '3' at index 5 is replaced by shift('c', 3) = 'f'. The digit '4' at index 7 is replaced by shift('d', 4) = 'h'."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "shifting-letters",
                "title": "Shifting Letters",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "We just need to replace every even positioned character with the character s[i] positions ahead of the character preceding it",
            "Get the position of the preceeding character in alphabet then advance it s[i] positions and get the character at that position"
        ],
        "relatedTopics": [
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  string replaceDigits(string s) {\n    for (int i = 0; i < s.length(); ++i)\n      s[i] += s[i - 1] - '0';\n    return s;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public String replaceDigits(String s) {\n    char[] A = s.toCharArray();\n\n    for (int i = 1; i < A.length; i += 2)\n      A[i] += (char) (A[i - 1] - '0');\n\n    return String.valueOf(A);\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def replaceDigits(self, s: str) -> str:\n    chars = list(s)\n\n    for i in range(1, len(chars), 2):\n      chars[i] = chr(ord(chars[i - 1]) + ord(chars[i]) - ord('0'))\n\n    return ''.join(chars)\n",
                "lang_text": "py"
            }
        }
    }
}