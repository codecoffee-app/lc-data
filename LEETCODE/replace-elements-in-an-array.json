{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2295",
            "title": "Replace Elements in an Array",
            "titleSlug": "replace-elements-in-an-array",
            "content": "<p>You are given a <strong>0-indexed</strong> array <code>nums</code> that consists of <code>n</code> <strong>distinct</strong> positive integers. Apply <code>m</code> operations to this array, where in the <code>i<sup>th</sup></code> operation you replace the number <code>operations[i][0]</code> with <code>operations[i][1]</code>.</p>\n\n<p>It is guaranteed that in the <code>i<sup>th</sup></code> operation:</p>\n\n<ul>\n\t<li><code>operations[i][0]</code> <strong>exists</strong> in <code>nums</code>.</li>\n\t<li><code>operations[i][1]</code> does <strong>not</strong> exist in <code>nums</code>.</li>\n</ul>\n\n<p>Return <em>the array obtained after applying all the operations</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,4,6], operations = [[1,3],[4,7],[6,1]]\n<strong>Output:</strong> [3,2,7,1]\n<strong>Explanation:</strong> We perform the following operations on nums:\n- Replace the number 1 with 3. nums becomes [<u><strong>3</strong></u>,2,4,6].\n- Replace the number 4 with 7. nums becomes [3,2,<u><strong>7</strong></u>,6].\n- Replace the number 6 with 1. nums becomes [3,2,7,<u><strong>1</strong></u>].\nWe return the final array [3,2,7,1].\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2], operations = [[1,3],[2,1],[3,2]]\n<strong>Output:</strong> [2,1]\n<strong>Explanation:</strong> We perform the following operations to nums:\n- Replace the number 1 with 3. nums becomes [<u><strong>3</strong></u>,2].\n- Replace the number 2 with 1. nums becomes [3,<u><strong>1</strong></u>].\n- Replace the number 3 with 2. nums becomes [<u><strong>2</strong></u>,1].\nWe return the array [2,1].\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == nums.length</code></li>\n\t<li><code>m == operations.length</code></li>\n\t<li><code>1 &lt;= n, m &lt;= 10<sup>5</sup></code></li>\n\t<li>All the values of <code>nums</code> are <strong>distinct</strong>.</li>\n\t<li><code>operations[i].length == 2</code></li>\n\t<li><code>1 &lt;= nums[i], operations[i][0], operations[i][1] &lt;= 10<sup>6</sup></code></li>\n\t<li><code>operations[i][0]</code> will exist in <code>nums</code> when applying the <code>i<sup>th</sup></code> operation.</li>\n\t<li><code>operations[i][1]</code> will not exist in <code>nums</code> when applying the <code>i<sup>th</sup></code> operation.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 593,
            "dislikes": 32,
            "similarQuestions": "[{\"title\": \"Find All Numbers Disappeared in an Array\", \"titleSlug\": \"find-all-numbers-disappeared-in-an-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Maximum Number of Integers to Choose From a Range I\", \"titleSlug\": \"maximum-number-of-integers-to-choose-from-a-range-i\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Number of Integers to Choose From a Range II\", \"titleSlug\": \"maximum-number-of-integers-to-choose-from-a-range-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "stats": "{\"totalAccepted\": \"32.8K\", \"totalSubmission\": \"56.7K\", \"totalAcceptedRaw\": 32760, \"totalSubmissionRaw\": 56655, \"acRate\": \"57.8%\"}",
            "hints": [
                "Can you think of a data structure that will allow you to store the position of each number?",
                "Use that data structure to instantly replace a number with its new value."
            ],
            "rephrased": {
                "body": "You are given a **0-indexed** array `nums` of `n` **distinct** positive integers. You need to apply `m` operations to this array. In the `i<sup>th</sup>` operation, you replace the number `operations[i][0]` with `operations[i][1]`. Return the array obtained after applying all the operations.",
                "constraints": [
                    "`n == nums.length`",
                    "`m == operations.length`",
                    "`1 <= n, m <= 10<sup>5</sup>`",
                    "All the values of `nums` are **distinct**.",
                    "`operations[i].length == 2`",
                    "`1 <= nums[i], operations[i][0], operations[i][1] <= 10<sup>6</sup>`",
                    "`operations[i][0]` will exist in `nums` when applying the `i<sup>th</sup>` operation.",
                    "`operations[i][1]` will not exist in `nums` when applying the `i<sup>th</sup>` operation."
                ],
                "testcases": [
                    {
                        "input": "nums = [1,2,4,6], operations = [[1,3],[4,7],[6,1]]",
                        "output": "[3,2,7,1]",
                        "explanation": "Initially, `nums` is [1, 2, 4, 6].  The first operation replaces 1 with 3, resulting in [3, 2, 4, 6]. The second operation replaces 4 with 7, resulting in [3, 2, 7, 6]. The third operation replaces 6 with 1, resulting in [3, 2, 7, 1]."
                    },
                    {
                        "input": "nums = [1,2], operations = [[1,3],[2,1],[3,2]]",
                        "output": "[2,1]",
                        "explanation": "Initially, `nums` is [1, 2]. The first operation replaces 1 with 3, resulting in [3, 2]. The second operation replaces 2 with 1, resulting in [3, 1]. The third operation replaces 3 with 2, resulting in [2, 1]."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Easy",
                "titleSlug": "find-all-numbers-disappeared-in-an-array",
                "title": "Find All Numbers Disappeared in an Array",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "maximum-number-of-integers-to-choose-from-a-range-i",
                "title": "Maximum Number of Integers to Choose From a Range I",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "maximum-number-of-integers-to-choose-from-a-range-ii",
                "title": "Maximum Number of Integers to Choose From a Range II",
                "isPaidOnly": true
            }
        ],
        "hints": [
            "Can you think of a data structure that will allow you to store the position of each number?",
            "Use that data structure to instantly replace a number with its new value."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  vector<int> arrayChange(vector<int>& nums, vector<vector<int>>& operations) {\n    unordered_map<int, int> numToIndex;\n\n    for (int i = 0; i < nums.size(); ++i)\n      numToIndex[nums[i]] = i;\n\n    for (const vector<int>& o : operations) {\n      const int original = o[0];\n      const int replaced = o[1];\n      const int index = numToIndex[original];\n      nums[index] = replaced;\n      numToIndex.erase(original);\n      numToIndex[replaced] = index;\n    }\n\n    return nums;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int[] arrayChange(int[] nums, int[][] operations) {\n    Map<Integer, Integer> numToIndex = new HashMap<>();\n\n    for (int i = 0; i < nums.length; ++i)\n      numToIndex.put(nums[i], i);\n\n    for (int[] o : operations) {\n      final int original = o[0];\n      final int replaced = o[1];\n      final int index = numToIndex.get(original);\n      nums[index] = replaced;\n      numToIndex.remove(original);\n      numToIndex.put(replaced, index);\n    }\n\n    return nums;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def arrayChange(self, nums: List[int], operations: List[List[int]]) -> List[int]:\n    numToIndex = {num: i for i, num in enumerate(nums)}\n\n    for original, replaced in operations:\n      index = numToIndex[original]\n      nums[index] = replaced\n      del numToIndex[original]\n      numToIndex[replaced] = index\n\n    return nums\n",
                "lang_text": "py"
            }
        }
    }
}