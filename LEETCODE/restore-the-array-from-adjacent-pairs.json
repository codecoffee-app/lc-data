{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1743",
            "title": "Restore the Array From Adjacent Pairs",
            "titleSlug": "restore-the-array-from-adjacent-pairs",
            "content": "<p>There is an integer array <code>nums</code> that consists of <code>n</code> <strong>unique </strong>elements, but you have forgotten it. However, you do remember every pair of adjacent elements in <code>nums</code>.</p>\n\n<p>You are given a 2D integer array <code>adjacentPairs</code> of size <code>n - 1</code> where each <code>adjacentPairs[i] = [u<sub>i</sub>, v<sub>i</sub>]</code> indicates that the elements <code>u<sub>i</sub></code> and <code>v<sub>i</sub></code> are adjacent in <code>nums</code>.</p>\n\n<p>It is guaranteed that every adjacent pair of elements <code>nums[i]</code> and <code>nums[i+1]</code> will exist in <code>adjacentPairs</code>, either as <code>[nums[i], nums[i+1]]</code> or <code>[nums[i+1], nums[i]]</code>. The pairs can appear <strong>in any order</strong>.</p>\n\n<p>Return <em>the original array </em><code>nums</code><em>. If there are multiple solutions, return <strong>any of them</strong></em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> adjacentPairs = [[2,1],[3,4],[3,2]]\n<strong>Output:</strong> [1,2,3,4]\n<strong>Explanation:</strong> This array has all its adjacent pairs in adjacentPairs.\nNotice that adjacentPairs[i] may not be in left-to-right order.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> adjacentPairs = [[4,-2],[1,4],[-3,1]]\n<strong>Output:</strong> [-2,4,1,-3]\n<strong>Explanation:</strong> There can be negative numbers.\nAnother solution is [-3,1,4,-2], which would also be accepted.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> adjacentPairs = [[100000,-100000]]\n<strong>Output:</strong> [100000,-100000]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>nums.length == n</code></li>\n\t<li><code>adjacentPairs.length == n - 1</code></li>\n\t<li><code>adjacentPairs[i].length == 2</code></li>\n\t<li><code>2 &lt;= n &lt;= 10<sup>5</sup></code></li>\n\t<li><code>-10<sup>5</sup> &lt;= nums[i], u<sub>i</sub>, v<sub>i</sub> &lt;= 10<sup>5</sup></code></li>\n\t<li>There exists some <code>nums</code> that has <code>adjacentPairs</code> as its pairs.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 1907,
            "dislikes": 68,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                }
            ],
            "stats": "{\"totalAccepted\": \"102.7K\", \"totalSubmission\": \"136.5K\", \"totalAcceptedRaw\": 102676, \"totalSubmissionRaw\": 136529, \"acRate\": \"75.2%\"}",
            "hints": [
                "Find the first element of nums - it will only appear once in adjacentPairs.",
                "The adjacent pairs are like edges of a graph. Perform a depth-first search from the first element."
            ],
            "rephrased": {
                "body": "You are given a 2D integer array `adjacentPairs` representing pairs of adjacent elements from an original integer array `nums` containing `n` unique elements.  Your task is to reconstruct and return the original array `nums`.  The `adjacentPairs` array has a size of `n - 1`, where each `adjacentPairs[i] = [u_i, v_i]` indicates that `u_i` and `v_i` are adjacent in `nums`.  The order of pairs in `adjacentPairs` is arbitrary, and each adjacent pair in `nums` will be present in `adjacentPairs` (either as `[nums[i], nums[i+1]]` or `[nums[i+1], nums[i]]`).  If multiple valid solutions exist, return any one of them.",
                "constraints": [
                    "nums.length == n",
                    "adjacentPairs.length == n - 1",
                    "adjacentPairs[i].length == 2",
                    "2 <= n <= 10^5",
                    "-10^5 <= nums[i], u_i, v_i <= 10^5",
                    "There exists some nums that has adjacentPairs as its pairs."
                ],
                "testcases": [
                    {
                        "input": "[[2,1],[3,4],[3,2]]",
                        "output": "[1,2,3,4]",
                        "explanation": "The array [1,2,3,4] has the adjacent pairs [2,1], [3,4] and [3,2]. Note that the order of pairs in the input does not need to match the left-to-right order of the output."
                    },
                    {
                        "input": "[[4,-2],[1,4],[-3,1]]",
                        "output": "[-2,4,1,-3]",
                        "explanation": "The array [-2,4,1,-3] contains the adjacent pairs [4,-2], [1,4], and [-3,1]. Another valid solution is [-3,1,4,-2]."
                    },
                    {
                        "input": "[[100000,-100000]]",
                        "output": "[100000,-100000]",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "Find the first element of nums - it will only appear once in adjacentPairs.",
            "The adjacent pairs are like edges of a graph. Perform a depth-first search from the first element."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            }
        ]
    }
}