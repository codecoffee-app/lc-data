{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2074",
            "title": "Reverse Nodes in Even Length Groups",
            "titleSlug": "reverse-nodes-in-even-length-groups",
            "content": "<p>You are given the <code>head</code> of a linked list.</p>\n\n<p>The nodes in the linked list are <strong>sequentially</strong> assigned to <strong>non-empty</strong> groups whose lengths form the sequence of the natural numbers (<code>1, 2, 3, 4, ...</code>). The <strong>length</strong> of a group is the number of nodes assigned to it. In other words,</p>\n\n<ul>\n\t<li>The <code>1<sup>st</sup></code> node is assigned to the first group.</li>\n\t<li>The <code>2<sup>nd</sup></code> and the <code>3<sup>rd</sup></code> nodes are assigned to the second group.</li>\n\t<li>The <code>4<sup>th</sup></code>, <code>5<sup>th</sup></code>, and <code>6<sup>th</sup></code> nodes are assigned to the third group, and so on.</li>\n</ul>\n\n<p>Note that the length of the last group may be less than or equal to <code>1 + the length of the second to last group</code>.</p>\n\n<p><strong>Reverse</strong> the nodes in each group with an <strong>even</strong> length, and return <em>the</em> <code>head</code> <em>of the modified linked list</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/10/25/eg1.png\" style=\"width: 699px; height: 124px;\" />\n<pre>\n<strong>Input:</strong> head = [5,2,6,3,9,1,7,3,8,4]\n<strong>Output:</strong> [5,6,2,3,9,1,4,8,3,7]\n<strong>Explanation:</strong>\n- The length of the first group is 1, which is odd, hence no reversal occurs.\n- The length of the second group is 2, which is even, hence the nodes are reversed.\n- The length of the third group is 3, which is odd, hence no reversal occurs.\n- The length of the last group is 4, which is even, hence the nodes are reversed.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/10/25/eg2.png\" style=\"width: 284px; height: 114px;\" />\n<pre>\n<strong>Input:</strong> head = [1,1,0,6]\n<strong>Output:</strong> [1,0,1,6]\n<strong>Explanation:</strong>\n- The length of the first group is 1. No reversal occurs.\n- The length of the second group is 2. The nodes are reversed.\n- The length of the last group is 1. No reversal occurs.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2021/11/17/ex3.png\" style=\"width: 348px; height: 114px;\" />\n<pre>\n<strong>Input:</strong> head = [1,1,0,6,5]\n<strong>Output:</strong> [1,0,1,5,6]\n<strong>Explanation:</strong>\n- The length of the first group is 1. No reversal occurs.\n- The length of the second group is 2. The nodes are reversed.\n- The length of the last group is 2. The nodes are reversed.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the list is in the range <code>[1, 10<sup>5</sup>]</code>.</li>\n\t<li><code>0 &lt;= Node.val &lt;= 10<sup>5</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 624,
            "dislikes": 318,
            "similarQuestions": "[{\"title\": \"Reverse Nodes in k-Group\", \"titleSlug\": \"reverse-nodes-in-k-group\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Reverse Linked List\", \"titleSlug\": \"reverse-linked-list\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Linked List",
                    "slug": "linked-list"
                }
            ],
            "stats": "{\"totalAccepted\": \"21.3K\", \"totalSubmission\": \"37.9K\", \"totalAcceptedRaw\": 21315, \"totalSubmissionRaw\": 37947, \"acRate\": \"56.2%\"}",
            "hints": [
                "Consider the list structure ...A \u2192 (B \u2192 ... \u2192 C) \u2192 D..., where the nodes between B and C (inclusive) form a group, A is the last node of the previous group, and D is the first node of the next group. How can you utilize this structure?",
                "Suppose you have B \u2192 ... \u2192 C reversed (because it was of even length) so that it is now C \u2192 ... \u2192 B. What references do you need to fix so that the transitions between the previous, current, and next groups are correct?",
                "A.next should be set to C, and B.next should be set to D.",
                "Once the current group is finished being modified, you need to find the new A, B, C, and D nodes for the next group. How can you use the old A, B, C, and D nodes to find the new ones?",
                "The new A is either the old B or old C depending on if the group was of even or odd length. The new B is always the old D. The new C and D can be found based on the new B and the next group's length.",
                "You can set the initial values of A, B, C, and D to A = null, B = head, C = head, D = head.next. Repeat the steps from the previous hints until D is null."
            ],
            "rephrased": {
                "body": "Given the head of a linked list, divide the nodes into sequential groups with lengths corresponding to natural numbers (1, 2, 3, 4, ...).  The first node is in the first group, the next two nodes in the second group, the next three in the third group, and so on.  The last group may have a length less than or equal to one plus the length of the second-to-last group.  Reverse the nodes within each group that has an even length. Return the head of the modified linked list.",
                "constraints": [
                    "The number of nodes in the list is in the range [1, 10<sup>5</sup>].",
                    "0 <= Node.val <= 10<sup>5</sup>"
                ],
                "testcases": [
                    {
                        "input": "[5,2,6,3,9,1,7,3,8,4]",
                        "output": "[5,6,2,3,9,1,4,8,3,7]",
                        "explanation": "The first group (length 1) is [5]. The second group (length 2) is [2, 6], which reverses to [6, 2]. The third group (length 3) is [3, 9, 1]. The fourth group (length 4) is [7, 3, 8, 4], which reverses to [4, 8, 3, 7]."
                    },
                    {
                        "input": "[1,1,0,6]",
                        "output": "[1,0,1,6]",
                        "explanation": "The first group (length 1) is [1]. The second group (length 2) is [1, 0], which reverses to [0, 1]. The third group (length 1) is [6]."
                    },
                    {
                        "input": "[1,1,0,6,5]",
                        "output": "[1,0,1,5,6]",
                        "explanation": "The first group (length 1) is [1]. The second group (length 2) is [1, 0], which reverses to [0, 1]. The third group (length 2) is [6, 5], which reverses to [5, 6]."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Hard",
                "titleSlug": "reverse-nodes-in-k-group",
                "title": "Reverse Nodes in k-Group",
                "isPaidOnly": false
            },
            {
                "difficulty": "Easy",
                "titleSlug": "reverse-linked-list",
                "title": "Reverse Linked List",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "Consider the list structure ...A \u2192 (B \u2192 ... \u2192 C) \u2192 D..., where the nodes between B and C (inclusive) form a group, A is the last node of the previous group, and D is the first node of the next group. How can you utilize this structure?",
            "Suppose you have B \u2192 ... \u2192 C reversed (because it was of even length) so that it is now C \u2192 ... \u2192 B. What references do you need to fix so that the transitions between the previous, current, and next groups are correct?",
            "A.next should be set to C, and B.next should be set to D.",
            "Once the current group is finished being modified, you need to find the new A, B, C, and D nodes for the next group. How can you use the old A, B, C, and D nodes to find the new ones?",
            "The new A is either the old B or old C depending on if the group was of even or odd length. The new B is always the old D. The new C and D can be found based on the new B and the next group's length.",
            "You can set the initial values of A, B, C, and D to A = null, B = head, C = head, D = head.next. Repeat the steps from the previous hints until D is null."
        ],
        "relatedTopics": [
            {
                "name": "Linked List",
                "slug": "linked-list"
            }
        ]
    }
}