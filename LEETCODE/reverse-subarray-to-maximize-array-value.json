{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1330",
            "title": "Reverse Subarray To Maximize Array Value",
            "titleSlug": "reverse-subarray-to-maximize-array-value",
            "content": "<p>You are given an integer array <code>nums</code>. The <em>value</em> of this array is defined as the sum of <code>|nums[i] - nums[i + 1]|</code> for all <code>0 &lt;= i &lt; nums.length - 1</code>.</p>\n\n<p>You are allowed to select any subarray of the given array and reverse it. You can perform this operation <strong>only once</strong>.</p>\n\n<p>Find maximum possible value of the final array.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,3,1,5,4]\n<strong>Output:</strong> 10\n<b>Explanation: </b>By reversing the subarray [3,1,5] the array becomes [2,5,1,3,4] whose value is 10.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,4,9,24,2,1,10]\n<strong>Output:</strong> 68\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 3 * 10<sup>4</sup></code></li>\n\t<li><code>-10<sup>5</sup> &lt;= nums[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 466,
            "dislikes": 54,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                }
            ],
            "stats": "{\"totalAccepted\": \"5.5K\", \"totalSubmission\": \"13.2K\", \"totalAcceptedRaw\": 5503, \"totalSubmissionRaw\": 13237, \"acRate\": \"41.6%\"}",
            "hints": [
                "What's the score after reversing a sub-array [L, R] ?",
                "It's the score without reversing it + abs(a[R] - a[L-1]) + abs(a[L] - a[R+1]) - abs(a[L] - a[L-1]) - abs(a[R] - a[R+1])",
                "How to maximize that formula given that abs(x - y) = max(x - y, y - x) ?",
                "This can be written as max(max(a[R] - a[L - 1], a[L - 1] - a[R]) + max(a[R + 1] - a[L], a[L] - a[R + 1]) - value(L) - value(R + 1)) over all L < R where value(i) = abs(a[i] - a[i-1])",
                "This can be divided into 4 cases."
            ],
            "rephrased": {
                "body": "Given an integer array `nums`, the value of the array is defined as the sum of the absolute differences between consecutive elements: `|nums[i] - nums[i + 1]|` for all `0 <= i < nums.length - 1`. You are allowed to reverse a single subarray of the given array. Find the maximum possible value of the final array after performing at most one reversal.",
                "constraints": [
                    "1 <= nums.length <= 3 * 10^4",
                    "-10^5 <= nums[i] <= 10^5"
                ],
                "testcases": [
                    {
                        "input": "[2,3,1,5,4]",
                        "output": "10",
                        "explanation": "Reversing the subarray [3,1,5] results in the array [2,5,1,3,4], which has a value of 10."
                    },
                    {
                        "input": "[2,4,9,24,2,1,10]",
                        "output": "68",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "What's the score after reversing a sub-array [L, R] ?",
            "It's the score without reversing it + abs(a[R] - a[L-1]) + abs(a[L] - a[R+1]) - abs(a[L] - a[L-1]) - abs(a[R] - a[R+1])",
            "How to maximize that formula given that abs(x - y) = max(x - y, y - x) ?",
            "This can be written as max(max(a[R] - a[L - 1], a[L - 1] - a[R]) + max(a[R + 1] - a[L], a[L] - a[R + 1]) - value(L) - value(R + 1)) over all L < R where value(i) = abs(a[i] - a[i-1])",
            "This can be divided into 4 cases."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int maxValueAfterReverse(vector<int>& nums) {\n    int total = 0;\n    int min = INT_MAX;\n    int max = INT_MIN;\n\n    for (int i = 0; i + 1 < nums.size(); ++i) {\n      int a = nums[i];\n      int b = nums[i + 1];\n      total += abs(a - b);\n      min = std::min(min, std::max(a, b));\n      max = std::max(max, std::min(a, b));\n    }\n    int diff = std::max(0, (max - min) * 2);\n\n    for (int i = 0; i + 1 < nums.size(); ++i) {\n      int a = nums[i];\n      int b = nums[i + 1];\n      int headDiff = -abs(a - b) + abs(nums.front() - b);\n      int tailDiff = -abs(a - b) + abs(nums.back() - a);\n      diff = std::max({diff, headDiff, tailDiff});\n    }\n\n    return total + diff;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int maxValueAfterReverse(int[] nums) {\n    int total = 0;\n    int min = Integer.MAX_VALUE;\n    int max = Integer.MIN_VALUE;\n\n    for (int i = 0; i + 1 < nums.length; ++i) {\n      int a = nums[i];\n      int b = nums[i + 1];\n      total += Math.abs(a - b);\n      min = Math.min(min, Math.max(a, b));\n      max = Math.max(max, Math.min(a, b));\n    }\n    int diff = Math.max(0, (max - min) * 2);\n\n    for (int i = 0; i + 1 < nums.length; ++i) {\n      int a = nums[i];\n      int b = nums[i + 1];\n      int headDiff = -Math.abs(a - b) + Math.abs(nums[0] - b);\n      int tailDiff = -Math.abs(a - b) + Math.abs(nums[nums.length - 1] - a);\n      diff = Math.max(diff, Math.max(headDiff, tailDiff));\n    }\n\n    return total + diff;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def maxValueAfterReverse(self, nums: List[int]) -> int:\n    mini = math.inf\n    maxi = -math.inf\n\n    for a, b in zip(nums, nums[1:]):\n      mini = min(mini, max(a, b))\n      maxi = max(maxi, min(a, b))\n    diff = max(0, (maxi - mini) * 2)\n\n    for a, b in zip(nums, nums[1:]):\n      headDiff = -abs(a - b) + abs(nums[0] - b)\n      tailDiff = -abs(a - b) + abs(nums[-1] - a)\n      diff = max(diff, headDiff, tailDiff)\n\n    return sum(abs(a - b) for a, b in zip(nums, nums[1:])) + diff\n",
                "lang_text": "py"
            }
        }
    }
}