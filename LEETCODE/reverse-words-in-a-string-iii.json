{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "557",
            "title": "Reverse Words in a String III",
            "titleSlug": "reverse-words-in-a-string-iii",
            "content": "<p>Given a string <code>s</code>, reverse the order of characters in each word within a sentence while still preserving whitespace and initial word order.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;Let&#39;s take LeetCode contest&quot;\n<strong>Output:</strong> &quot;s&#39;teL ekat edoCteeL tsetnoc&quot;\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;Mr Ding&quot;\n<strong>Output:</strong> &quot;rM gniD&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 5 * 10<sup>4</sup></code></li>\n\t<li><code>s</code> contains printable <strong>ASCII</strong> characters.</li>\n\t<li><code>s</code> does not contain any leading or trailing spaces.</li>\n\t<li>There is <strong>at least one</strong> word in <code>s</code>.</li>\n\t<li>All the words in <code>s</code> are separated by a single space.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 5769,
            "dislikes": 241,
            "similarQuestions": "[{\"title\": \"Reverse String II\", \"titleSlug\": \"reverse-string-ii\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Two Pointers",
                    "slug": "two-pointers"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "stats": "{\"totalAccepted\": \"858.4K\", \"totalSubmission\": \"1M\", \"totalAcceptedRaw\": 858385, \"totalSubmissionRaw\": 1035219, \"acRate\": \"82.9%\"}",
            "hints": [],
            "rephrased": {
                "body": "Given a string `s`, reverse the order of characters in each word within the sentence while maintaining the original whitespace and word order.",
                "constraints": [
                    "1 <= s.length <= 5 * 10^4",
                    "s contains printable ASCII characters.",
                    "s does not contain any leading or trailing spaces.",
                    "There is at least one word in s.",
                    "All words in s are separated by a single space."
                ],
                "testcases": [
                    {
                        "input": "Let's take LeetCode contest",
                        "output": "s'teL ekat edoCteeL tsetnoc",
                        "explanation": null
                    },
                    {
                        "input": "Mr Ding",
                        "output": "rM gniD",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Easy",
                "titleSlug": "reverse-string-ii",
                "title": "Reverse String II",
                "isPaidOnly": false
            }
        ],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  string reverseWords(string s) {\n    int i = 0;\n    int j = 0;\n\n    while (i < s.length()) {\n      while (i < j || i < s.length() && s[i] == ' ')\n        ++i;\n      while (j < i || j < s.length() && s[j] != ' ')\n        ++j;\n      reverse(s.begin() + i, s.begin() + j);\n    }\n\n    return s;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public String reverseWords(String s) {\n    StringBuilder sb = new StringBuilder(s);\n    int i = 0;\n    int j = 0;\n\n    while (i < sb.length()) {\n      while (i < j || i < sb.length() && sb.charAt(i) == ' ')\n        ++i;\n      while (j < i || j < sb.length() && sb.charAt(j) != ' ')\n        ++j;\n      reverse(sb, i, j - 1);\n    }\n\n    return sb.toString();\n  }\n\n  private void reverse(StringBuilder sb, int l, int r) {\n    while (l < r) {\n      final char temp = sb.charAt(l);\n      sb.setCharAt(l++, sb.charAt(r));\n      sb.setCharAt(r--, temp);\n    }\n  }\n}\n",
                "lang_text": "java"
            }
        }
    }
}