{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "994",
            "title": "Rotting Oranges",
            "titleSlug": "rotting-oranges",
            "content": "<p>You are given an <code>m x n</code> <code>grid</code> where each cell can have one of three values:</p>\n\n<ul>\n\t<li><code>0</code> representing an empty cell,</li>\n\t<li><code>1</code> representing a fresh orange, or</li>\n\t<li><code>2</code> representing a rotten orange.</li>\n</ul>\n\n<p>Every minute, any fresh orange that is <strong>4-directionally adjacent</strong> to a rotten orange becomes rotten.</p>\n\n<p>Return <em>the minimum number of minutes that must elapse until no cell has a fresh orange</em>. If <em>this is impossible, return</em> <code>-1</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/02/16/oranges.png\" style=\"width: 650px; height: 137px;\" />\n<pre>\n<strong>Input:</strong> grid = [[2,1,1],[1,1,0],[0,1,1]]\n<strong>Output:</strong> 4\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[2,1,1],[0,1,1],[1,0,1]]\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> The orange in the bottom left corner (row 2, column 0) is never rotten, because rotting only happens 4-directionally.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[0,2]]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> Since there are already no fresh oranges at minute 0, the answer is just 0.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == grid.length</code></li>\n\t<li><code>n == grid[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 10</code></li>\n\t<li><code>grid[i][j]</code> is <code>0</code>, <code>1</code>, or <code>2</code>.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 12105,
            "dislikes": 376,
            "similarQuestions": "[{\"title\": \"Walls and Gates\", \"titleSlug\": \"walls-and-gates\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Detonate the Maximum Bombs\", \"titleSlug\": \"detonate-the-maximum-bombs\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Escape the Spreading Fire\", \"titleSlug\": \"escape-the-spreading-fire\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Breadth-First Search",
                    "slug": "breadth-first-search"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "stats": "{\"totalAccepted\": \"742.5K\", \"totalSubmission\": \"1.4M\", \"totalAcceptedRaw\": 742526, \"totalSubmissionRaw\": 1381913, \"acRate\": \"53.7%\"}",
            "hints": [],
            "rephrased": {
                "body": "Given an `m x n` grid where each cell represents either an empty cell (0), a fresh orange (1), or a rotten orange (2), determine the minimum number of minutes required for all fresh oranges to rot.  Every minute, any fresh orange that is 4-directionally adjacent to a rotten orange becomes rotten. If it's impossible for all fresh oranges to rot, return -1.",
                "constraints": [
                    "m == grid.length",
                    "n == grid[i].length",
                    "1 <= m, n <= 10",
                    "grid[i][j] is 0, 1, or 2"
                ],
                "testcases": [
                    {
                        "input": "[[2,1,1],[1,1,0],[0,1,1]]",
                        "output": "4",
                        "explanation": "The fresh oranges will rot in 4 minutes due to the spread from the initial rotten oranges."
                    },
                    {
                        "input": "[[2,1,1],[0,1,1],[1,0,1]]",
                        "output": "-1",
                        "explanation": "The orange in the bottom left corner (row 2, column 0) will never rot because rotting only happens 4-directionally, resulting in not all fresh oranges becoming rotten."
                    },
                    {
                        "input": "[[0,2]]",
                        "output": "0",
                        "explanation": "Since there are no fresh oranges initially, the minimum time required is 0."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "walls-and-gates",
                "title": "Walls and Gates",
                "isPaidOnly": true
            },
            {
                "difficulty": "Medium",
                "titleSlug": "detonate-the-maximum-bombs",
                "title": "Detonate the Maximum Bombs",
                "isPaidOnly": false
            },
            {
                "difficulty": "Hard",
                "titleSlug": "escape-the-spreading-fire",
                "title": "Escape the Spreading Fire",
                "isPaidOnly": false
            }
        ],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ]
    }
}