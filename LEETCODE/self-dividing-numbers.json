{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "728",
            "title": "Self Dividing Numbers",
            "titleSlug": "self-dividing-numbers",
            "content": "<p>A <strong>self-dividing number</strong> is a number that is divisible by every digit it contains.</p>\n\n<ul>\n\t<li>For example, <code>128</code> is <strong>a self-dividing number</strong> because <code>128 % 1 == 0</code>, <code>128 % 2 == 0</code>, and <code>128 % 8 == 0</code>.</li>\n</ul>\n\n<p>A <strong>self-dividing number</strong> is not allowed to contain the digit zero.</p>\n\n<p>Given two integers <code>left</code> and <code>right</code>, return <em>a list of all the <strong>self-dividing numbers</strong> in the range</em> <code>[left, right]</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> left = 1, right = 22\n<strong>Output:</strong> [1,2,3,4,5,6,7,8,9,11,12,15,22]\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> left = 47, right = 85\n<strong>Output:</strong> [48,55,66,77]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= left &lt;= right &lt;= 10<sup>4</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 1713,
            "dislikes": 368,
            "similarQuestions": "[{\"title\": \"Perfect Number\", \"titleSlug\": \"perfect-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Check if Number Has Equal Digit Count and Digit Value\", \"titleSlug\": \"check-if-number-has-equal-digit-count-and-digit-value\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Count the Digits That Divide a Number\", \"titleSlug\": \"count-the-digits-that-divide-a-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                }
            ],
            "stats": "{\"totalAccepted\": \"229.1K\", \"totalSubmission\": \"292.8K\", \"totalAcceptedRaw\": 229115, \"totalSubmissionRaw\": 292762, \"acRate\": \"78.3%\"}",
            "hints": [
                "For each number in the range, check whether it is self dividing by converting that number to a character array (or string in Python), then checking that each digit is nonzero and divides the original number."
            ],
            "rephrased": {
                "body": "A self-dividing number is a number that is divisible by every digit it contains and does not contain the digit zero. Given two integers, `left` and `right`, return a list of all the self-dividing numbers within the inclusive range `[left, right]`.",
                "constraints": [
                    "1 <= left <= right <= 10<sup>4</sup>"
                ],
                "testcases": [
                    {
                        "input": "left = 1, right = 22",
                        "output": "[1,2,3,4,5,6,7,8,9,11,12,15,22]",
                        "explanation": "Numbers in the range [1, 22] which are divisible by their digits and do not contain zero are: 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, and 22."
                    },
                    {
                        "input": "left = 47, right = 85",
                        "output": "[48,55,66,77]",
                        "explanation": "Numbers in the range [47, 85] which are divisible by their digits and do not contain zero are: 48, 55, 66, and 77."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Easy",
                "titleSlug": "perfect-number",
                "title": "Perfect Number",
                "isPaidOnly": false
            },
            {
                "difficulty": "Easy",
                "titleSlug": "check-if-number-has-equal-digit-count-and-digit-value",
                "title": "Check if Number Has Equal Digit Count and Digit Value",
                "isPaidOnly": false
            },
            {
                "difficulty": "Easy",
                "titleSlug": "count-the-digits-that-divide-a-number",
                "title": "Count the Digits That Divide a Number",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "For each number in the range, check whether it is self dividing by converting that number to a character array (or string in Python), then checking that each digit is nonzero and divides the original number."
        ],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  vector<int> selfDividingNumbers(int left, int right) {\n    vector<int> ans;\n\n    for (int num = left; num <= right; ++num)\n      if (selfDividingNumbers(num))\n        ans.push_back(num);\n\n    return ans;\n  }\n\n private:\n  bool selfDividingNumbers(int num) {\n    for (int n = num; n > 0; n /= 10)\n      if (n % 10 == 0 || num % (n % 10) != 0)\n        return false;\n    return true;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public List<Integer> selfDividingNumbers(int left, int right) {\n    List<Integer> ans = new ArrayList<>();\n\n    for (int num = left; num <= right; ++num)\n      if (dividingNumber(num))\n        ans.add(num);\n\n    return ans;\n  }\n\n  private boolean dividingNumber(int num) {\n    for (int n = num; n > 0; n /= 10)\n      if (n % 10 == 0 || num % (n % 10) != 0)\n        return false;\n    return true;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def selfDividingNumbers(self, left: int, right: int) -> List[int]:\n    return [num for num in range(left, right + 1) if all(n != 0 and num % n == 0 for n in map(int, str(num)))]\n",
                "lang_text": "py"
            }
        }
    }
}