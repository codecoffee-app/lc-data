{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1528",
            "title": "Shuffle String",
            "titleSlug": "shuffle-string",
            "content": "<p>You are given a string <code>s</code> and an integer array <code>indices</code> of the <strong>same length</strong>. The string <code>s</code> will be shuffled such that the character at the <code>i<sup>th</sup></code> position moves to <code>indices[i]</code> in the shuffled string.</p>\n\n<p>Return <em>the shuffled string</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/07/09/q1.jpg\" style=\"width: 321px; height: 243px;\" />\n<pre>\n<strong>Input:</strong> s = &quot;codeleet&quot;, <code>indices</code> = [4,5,6,7,0,2,1,3]\n<strong>Output:</strong> &quot;leetcode&quot;\n<strong>Explanation:</strong> As shown, &quot;codeleet&quot; becomes &quot;leetcode&quot; after shuffling.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;abc&quot;, <code>indices</code> = [0,1,2]\n<strong>Output:</strong> &quot;abc&quot;\n<strong>Explanation:</strong> After shuffling, each character remains in its position.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>s.length == indices.length == n</code></li>\n\t<li><code>1 &lt;= n &lt;= 100</code></li>\n\t<li><code>s</code> consists of only lowercase English letters.</li>\n\t<li><code>0 &lt;= indices[i] &lt; n</code></li>\n\t<li>All values of <code>indices</code> are <strong>unique</strong>.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 2629,
            "dislikes": 484,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "stats": "{\"totalAccepted\": \"348.6K\", \"totalSubmission\": \"412.1K\", \"totalAcceptedRaw\": 348648, \"totalSubmissionRaw\": 412096, \"acRate\": \"84.6%\"}",
            "hints": [
                "You can create an auxiliary string t of length n.",
                "Assign t[indexes[i]] to s[i] for each i from 0 to n-1."
            ],
            "rephrased": {
                "body": "Given a string `s` and an integer array `indices` of the same length, rearrange the characters of `s` such that the character at the i-th position moves to `indices[i]` in the shuffled string. Return the resulting shuffled string.",
                "constraints": [
                    "`s.length == indices.length == n`",
                    "`1 <= n <= 100`",
                    "`s` consists of only lowercase English letters.",
                    "`0 <= indices[i] < n`",
                    "All values of `indices` are **unique**."
                ],
                "testcases": [
                    {
                        "input": "s = \"codeleet\", indices = [4,5,6,7,0,2,1,3]",
                        "output": "\"leetcode\"",
                        "explanation": "The string \"codeleet\" is shuffled according to the indices array [4,5,6,7,0,2,1,3], resulting in \"leetcode\"."
                    },
                    {
                        "input": "s = \"abc\", indices = [0,1,2]",
                        "output": "\"abc\"",
                        "explanation": "The string \"abc\" remains unchanged after shuffling because each character remains in its original position as indicated by the indices array [0,1,2]."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "You can create an auxiliary string t of length n.",
            "Assign t[indexes[i]] to s[i] for each i from 0 to n-1."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  string restoreString(string s, vector<int>& indices) {\n    string ans(s.length(), '.');\n\n    for (int i = 0; i < indices.size(); ++i)\n      ans[indices[i]] = s[i];\n\n    return ans;\n  }\n};\n",
                "lang_text": "cpp"
            }
        }
    }
}