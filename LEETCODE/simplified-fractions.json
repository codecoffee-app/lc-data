{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1447",
            "title": "Simplified Fractions",
            "titleSlug": "simplified-fractions",
            "content": "<p>Given an integer <code>n</code>, return <em>a list of all <strong>simplified</strong> fractions between </em><code>0</code><em> and </em><code>1</code><em> (exclusive) such that the denominator is less-than-or-equal-to </em><code>n</code>. You can return the answer in <strong>any order</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 2\n<strong>Output:</strong> [&quot;1/2&quot;]\n<strong>Explanation:</strong> &quot;1/2&quot; is the only unique fraction with a denominator less-than-or-equal-to 2.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 3\n<strong>Output:</strong> [&quot;1/2&quot;,&quot;1/3&quot;,&quot;2/3&quot;]\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 4\n<strong>Output:</strong> [&quot;1/2&quot;,&quot;1/3&quot;,&quot;1/4&quot;,&quot;2/3&quot;,&quot;3/4&quot;]\n<strong>Explanation:</strong> &quot;2/4&quot; is not a simplified fraction because it can be simplified to &quot;1/2&quot;.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 100</code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 400,
            "dislikes": 43,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Number Theory",
                    "slug": "number-theory"
                }
            ],
            "stats": "{\"totalAccepted\": \"30.3K\", \"totalSubmission\": \"45.9K\", \"totalAcceptedRaw\": 30291, \"totalSubmissionRaw\": 45852, \"acRate\": \"66.1%\"}",
            "hints": [
                "A fraction is fully simplified if there is no integer that divides cleanly into the numerator and denominator.",
                "In other words the greatest common divisor of the numerator and the denominator of a simplified fraction is 1."
            ],
            "rephrased": {
                "body": "Given an integer `n`, generate a list of all simplified fractions between 0 and 1 (exclusive) where the denominator is less than or equal to `n`. The fractions should be represented as strings in the format 'numerator/denominator'.  The order of the returned list does not matter.",
                "constraints": [
                    "1 <= n <= 100"
                ],
                "testcases": [
                    {
                        "input": "2",
                        "output": "[\"1/2\"]",
                        "explanation": "The only simplified fraction with a denominator less than or equal to 2 is 1/2."
                    },
                    {
                        "input": "3",
                        "output": "[\"1/2\",\"1/3\",\"2/3\"]",
                        "explanation": null
                    },
                    {
                        "input": "4",
                        "output": "[\"1/2\",\"1/3\",\"1/4\",\"2/3\",\"3/4\"]",
                        "explanation": "Note that 2/4 is not included because it simplifies to 1/2."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "A fraction is fully simplified if there is no integer that divides cleanly into the numerator and denominator.",
            "In other words the greatest common divisor of the numerator and the denominator of a simplified fraction is 1."
        ],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  vector<string> simplifiedFractions(int n) {\n    vector<string> ans;\n    for (int denominator = 2; denominator <= n; ++denominator)\n      for (int numerator = 1; numerator < denominator; ++numerator)\n        if (__gcd(denominator, numerator) == 1)\n          ans.push_back(to_string(numerator) + \"/\" + to_string(denominator));\n    return ans;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public List<String> simplifiedFractions(int n) {\n    List<String> ans = new ArrayList<>();\n    for (int denominator = 2; denominator <= n; ++denominator)\n      for (int numerator = 1; numerator < denominator; ++numerator)\n        if (gcd(denominator, numerator) == 1)\n          ans.add(String.valueOf(numerator) + \"/\" + String.valueOf(denominator));\n    return ans;\n  }\n\n  private int gcd(int a, int b) {\n    return b == 0 ? a : gcd(b, a % b);\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def simplifiedFractions(self, n: int) -> List[str]:\n    ans = []\n    for denominator in range(2, n + 1):\n      for numerator in range(1, denominator):\n        if math.gcd(denominator, numerator) == 1:\n          ans.append(str(numerator) + '/' + str(denominator))\n    return ans\n",
                "lang_text": "py"
            }
        }
    }
}