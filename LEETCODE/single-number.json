{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "136",
            "title": "Single Number",
            "titleSlug": "single-number",
            "content": "<p>Given a <strong>non-empty</strong>&nbsp;array of integers <code>nums</code>, every element appears <em>twice</em> except for one. Find that single one.</p>\n\n<p>You must&nbsp;implement a solution with a linear runtime complexity and use&nbsp;only constant&nbsp;extra space.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> nums = [2,2,1]\n<strong>Output:</strong> 1\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> nums = [4,1,2,1,2]\n<strong>Output:</strong> 4\n</pre><p><strong class=\"example\">Example 3:</strong></p>\n<pre><strong>Input:</strong> nums = [1]\n<strong>Output:</strong> 1\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 3 * 10<sup>4</sup></code></li>\n\t<li><code>-3 * 10<sup>4</sup> &lt;= nums[i] &lt;= 3 * 10<sup>4</sup></code></li>\n\t<li>Each element in the array appears twice except for one element which appears only once.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 15779,
            "dislikes": 656,
            "similarQuestions": "[{\"title\": \"Single Number II\", \"titleSlug\": \"single-number-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Single Number III\", \"titleSlug\": \"single-number-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Missing Number\", \"titleSlug\": \"missing-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Find the Duplicate Number\", \"titleSlug\": \"find-the-duplicate-number\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find the Difference\", \"titleSlug\": \"find-the-difference\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "stats": "{\"totalAccepted\": \"2.5M\", \"totalSubmission\": \"3.5M\", \"totalAcceptedRaw\": 2523305, \"totalSubmissionRaw\": 3503011, \"acRate\": \"72.0%\"}",
            "hints": [],
            "rephrased": {
                "body": "Given a non-empty array of integers `nums`, every element appears twice except for one element which appears only once. Find that single element.",
                "constraints": [
                    "1 <= nums.length <= 3 * 10^4",
                    "-3 * 10^4 <= nums[i] <= 3 * 10^4",
                    "Each element in the array appears twice except for one element which appears only once."
                ],
                "testcases": [
                    {
                        "input": "[2,2,1]",
                        "output": "1",
                        "explanation": "The number 1 appears only once in the array."
                    },
                    {
                        "input": "[4,1,2,1,2]",
                        "output": "4",
                        "explanation": "The number 4 appears only once in the array."
                    },
                    {
                        "input": "[1]",
                        "output": "1",
                        "explanation": "The number 1 appears only once in the array."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "single-number-ii",
                "title": "Single Number II",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "single-number-iii",
                "title": "Single Number III",
                "isPaidOnly": false
            },
            {
                "difficulty": "Easy",
                "titleSlug": "missing-number",
                "title": "Missing Number",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "find-the-duplicate-number",
                "title": "Find the Duplicate Number",
                "isPaidOnly": false
            },
            {
                "difficulty": "Easy",
                "titleSlug": "find-the-difference",
                "title": "Find the Difference",
                "isPaidOnly": false
            }
        ],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int singleNumber(vector<int>& nums) {\n    int ans = 0;\n\n    for (const int num : nums)\n      ans ^= num;\n\n    return ans;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int singleNumber(int[] nums) {\n    int ans = 0;\n\n    for (final int num : nums)\n      ans ^= num;\n\n    return ans;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def singleNumber(self, nums: List[int]) -> int:\n    return functools.reduce(lambda x, y: x ^ y, nums, 0)\n",
                "lang_text": "py"
            }
        }
    }
}