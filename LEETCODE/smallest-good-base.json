{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "483",
            "title": "Smallest Good Base",
            "titleSlug": "smallest-good-base",
            "content": "<p>Given an integer <code>n</code> represented as a string, return <em>the smallest <strong>good base</strong> of</em> <code>n</code>.</p>\n\n<p>We call <code>k &gt;= 2</code> a <strong>good base</strong> of <code>n</code>, if all digits of <code>n</code> base <code>k</code> are <code>1</code>&#39;s.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = &quot;13&quot;\n<strong>Output:</strong> &quot;3&quot;\n<strong>Explanation:</strong> 13 base 3 is 111.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = &quot;4681&quot;\n<strong>Output:</strong> &quot;8&quot;\n<strong>Explanation:</strong> 4681 base 8 is 11111.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = &quot;1000000000000000000&quot;\n<strong>Output:</strong> &quot;999999999999999999&quot;\n<strong>Explanation:</strong> 1000000000000000000 base 999999999999999999 is 11.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n</code> is an integer in the range <code>[3, 10<sup>18</sup>]</code>.</li>\n\t<li><code>n</code> does not contain any leading zeros.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 373,
            "dislikes": 481,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "stats": "{\"totalAccepted\": \"20.6K\", \"totalSubmission\": \"51.8K\", \"totalAcceptedRaw\": 20571, \"totalSubmissionRaw\": 51839, \"acRate\": \"39.7%\"}",
            "hints": [],
            "rephrased": {
                "body": "Given an integer `n` represented as a string, find the smallest good base of `n`. A base `k >= 2` is considered a good base if all digits of `n` in base `k` are 1's.",
                "constraints": [
                    "`n` is an integer in the range `[3, 10^18]`.",
                    "`n` does not contain any leading zeros."
                ],
                "testcases": [
                    {
                        "input": "13",
                        "output": "3",
                        "explanation": "13 in base 3 is represented as 111, which consists only of 1's. Therefore, 3 is a good base for 13."
                    },
                    {
                        "input": "4681",
                        "output": "8",
                        "explanation": "4681 in base 8 is represented as 11111, which consists only of 1's. Hence, 8 is a good base for 4681."
                    },
                    {
                        "input": "1000000000000000000",
                        "output": "999999999999999999",
                        "explanation": "1000000000000000000 in base 999999999999999999 is represented as 11, which consists only of 1's. Thus, 999999999999999999 is a good base."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  string smallestGoodBase(string n) {\n    const long num = stol(n);\n\n    for (int m = log2(num); m >= 2; --m) {\n      const int k = pow(num, 1.0 / m);\n      long sum = 1;\n      long prod = 1;\n      for (int i = 0; i < m; ++i) {\n        prod *= k;\n        sum += prod;\n      }\n      if (sum == num)\n        return to_string(k);\n    }\n\n    return to_string(num - 1);\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public String smallestGoodBase(String n) {\n    final long num = Long.parseLong(n);\n    final int log2 = (int) (Math.log(num) / Math.log(2));\n\n    for (int m = log2; m >= 2; --m) {\n      int k = (int) Math.floor(Math.pow(num, 1.0 / m));\n      long sum = 1;\n      long prod = 1;\n      for (int i = 0; i < m; ++i) {\n        prod *= k;\n        sum += prod;\n      }\n      if (sum == num)\n        return String.valueOf(k);\n    }\n\n    return String.valueOf(num - 1);\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def smallestGoodBase(self, n: str) -> str:\n    n = int(n)\n\n    for m in range(int(math.log(n, 2)), 1, -1):\n      k = int(n**m**-1)\n      if (k**(m + 1) - 1) // (k - 1) == n:\n        return str(k)\n\n    return str(n - 1)\n",
                "lang_text": "py"
            }
        }
    }
}