{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "910",
            "title": "Smallest Range II",
            "titleSlug": "smallest-range-ii",
            "content": "<p>You are given an integer array <code>nums</code> and an integer <code>k</code>.</p>\n\n<p>For each index <code>i</code> where <code>0 &lt;= i &lt; nums.length</code>, change <code>nums[i]</code> to be either <code>nums[i] + k</code> or <code>nums[i] - k</code>.</p>\n\n<p>The <strong>score</strong> of <code>nums</code> is the difference between the maximum and minimum elements in <code>nums</code>.</p>\n\n<p>Return <em>the minimum <strong>score</strong> of </em><code>nums</code><em> after changing the values at each index</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1], k = 0\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> The score is max(nums) - min(nums) = 1 - 1 = 0.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [0,10], k = 2\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> Change nums to be [2, 8]. The score is max(nums) - min(nums) = 8 - 2 = 6.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,3,6], k = 3\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> Change nums to be [4, 6, 3]. The score is max(nums) - min(nums) = 6 - 3 = 3.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= k &lt;= 10<sup>4</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 1608,
            "dislikes": 447,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "stats": "{\"totalAccepted\": \"52K\", \"totalSubmission\": \"144.5K\", \"totalAcceptedRaw\": 52041, \"totalSubmissionRaw\": 144497, \"acRate\": \"36.0%\"}",
            "hints": [],
            "rephrased": {
                "body": "Given an integer array `nums` and an integer `k`, for each index `i` in `nums`, you can either add `k` to `nums[i]` or subtract `k` from `nums[i]`. The score of `nums` is the difference between the maximum and minimum elements in `nums`. Find the minimum possible score of `nums` after applying this operation to each element.",
                "constraints": [
                    "1 <= nums.length <= 10^4",
                    "0 <= nums[i] <= 10^4",
                    "0 <= k <= 10^4"
                ],
                "testcases": [
                    {
                        "input": "nums = [1], k = 0",
                        "output": "0",
                        "explanation": "Since k is 0, the array remains [1]. The score is max(nums) - min(nums) = 1 - 1 = 0."
                    },
                    {
                        "input": "nums = [0,10], k = 2",
                        "output": "6",
                        "explanation": "We can change nums to [2, 8]. The score is max(nums) - min(nums) = 8 - 2 = 6."
                    },
                    {
                        "input": "nums = [1,3,6], k = 3",
                        "output": "3",
                        "explanation": "We can change nums to [4, 6, 3]. The score is max(nums) - min(nums) = 6 - 3 = 3."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int smallestRangeII(vector<int>& nums, int k) {\n    std::ranges::sort(nums);\n\n    int ans = nums.back() - nums.front();\n    const int left = nums.front() + k;\n    const int right = nums.back() - k;\n\n    for (int i = 0; i + 1 < nums.size(); ++i) {\n      const int mini = min(left, nums[i + 1] - k);\n      const int maxi = max(right, nums[i] + k);\n      ans = min(ans, maxi - mini);\n    }\n\n    return ans;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int smallestRangeII(int[] nums, int k) {\n    Arrays.sort(nums);\n\n    int ans = nums[nums.length - 1] - nums[0];\n    final int left = nums[0] + k;\n    final int right = nums[nums.length - 1] - k;\n\n    for (int i = 0; i + 1 < nums.length; ++i) {\n      final int min = Math.min(left, nums[i + 1] - k);\n      final int max = Math.max(right, nums[i] + k);\n      ans = Math.min(ans, max - min);\n    }\n\n    return ans;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def smallestRangeII(self, nums: List[int], k: int) -> int:\n    nums.sort()\n\n    ans = nums[-1] - nums[0]\n    left = nums[0] + k\n    right = nums[-1] - k\n\n    for a, b in itertools.pairwise(nums):\n      mini = min(left, b - k)\n      maxi = max(right, a + k)\n      ans = min(ans, maxi - mini)\n\n    return ans\n",
                "lang_text": "py"
            }
        }
    }
}