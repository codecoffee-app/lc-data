{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1125",
            "title": "Smallest Sufficient Team",
            "titleSlug": "smallest-sufficient-team",
            "content": "<p>In a project, you have a list of required skills <code>req_skills</code>, and a list of people. The <code>i<sup>th</sup></code> person <code>people[i]</code> contains a list of skills that the person has.</p>\n\n<p>Consider a sufficient team: a set of people such that for every required skill in <code>req_skills</code>, there is at least one person in the team who has that skill. We can represent these teams by the index of each person.</p>\n\n<ul>\n\t<li>For example, <code>team = [0, 1, 3]</code> represents the people with skills <code>people[0]</code>, <code>people[1]</code>, and <code>people[3]</code>.</li>\n</ul>\n\n<p>Return <em>any sufficient team of the smallest possible size, represented by the index of each person</em>. You may return the answer in <strong>any order</strong>.</p>\n\n<p>It is <strong>guaranteed</strong> an answer exists.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> req_skills = [\"java\",\"nodejs\",\"reactjs\"], people = [[\"java\"],[\"nodejs\"],[\"nodejs\",\"reactjs\"]]\n<strong>Output:</strong> [0,2]\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> req_skills = [\"algorithms\",\"math\",\"java\",\"reactjs\",\"csharp\",\"aws\"], people = [[\"algorithms\",\"math\",\"java\"],[\"algorithms\",\"math\",\"reactjs\"],[\"java\",\"csharp\",\"aws\"],[\"reactjs\",\"csharp\"],[\"csharp\",\"math\"],[\"aws\",\"java\"]]\n<strong>Output:</strong> [1,2]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= req_skills.length &lt;= 16</code></li>\n\t<li><code>1 &lt;= req_skills[i].length &lt;= 16</code></li>\n\t<li><code>req_skills[i]</code> consists of lowercase English letters.</li>\n\t<li>All the strings of <code>req_skills</code> are <strong>unique</strong>.</li>\n\t<li><code>1 &lt;= people.length &lt;= 60</code></li>\n\t<li><code>0 &lt;= people[i].length &lt;= 16</code></li>\n\t<li><code>1 &lt;= people[i][j].length &lt;= 16</code></li>\n\t<li><code>people[i][j]</code> consists of lowercase English letters.</li>\n\t<li>All the strings of <code>people[i]</code> are <strong>unique</strong>.</li>\n\t<li>Every skill in <code>people[i]</code> is a skill in <code>req_skills</code>.</li>\n\t<li>It is guaranteed a sufficient team exists.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 2104,
            "dislikes": 55,
            "similarQuestions": "[{\"title\": \"The Number of Good Subsets\", \"titleSlug\": \"the-number-of-good-subsets\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Minimum Number of Work Sessions to Finish the Tasks\", \"titleSlug\": \"minimum-number-of-work-sessions-to-finish-the-tasks\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Rows Covered by Columns\", \"titleSlug\": \"maximum-rows-covered-by-columns\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Bitmask",
                    "slug": "bitmask"
                }
            ],
            "stats": "{\"totalAccepted\": \"59.5K\", \"totalSubmission\": \"106K\", \"totalAcceptedRaw\": 59546, \"totalSubmissionRaw\": 105982, \"acRate\": \"56.2%\"}",
            "hints": [
                "Do a bitmask DP.",
                "For each person, for each set of skills, we can update our understanding of a minimum set of people needed to perform this set of skills."
            ],
            "rephrased": {
                "body": "Given a list of required skills `req_skills` and a list of people, where `people[i]` contains the skills that the `i`-th person has.  Find the smallest team of people (represented by their indices) such that for every required skill in `req_skills`, there is at least one person in the team who possesses that skill. Return any sufficient team of the smallest possible size, represented by the index of each person.  It is guaranteed that a solution exists.",
                "constraints": [
                    "1 <= req_skills.length <= 16",
                    "1 <= req_skills[i].length <= 16",
                    "req_skills[i] consists of lowercase English letters.",
                    "All the strings of req_skills are unique.",
                    "1 <= people.length <= 60",
                    "0 <= people[i].length <= 16",
                    "1 <= people[i][j].length <= 16",
                    "people[i][j] consists of lowercase English letters.",
                    "All the strings of people[i] are unique.",
                    "Every skill in people[i] is a skill in req_skills.",
                    "It is guaranteed a sufficient team exists."
                ],
                "testcases": [
                    {
                        "input": "req_skills = [\"java\",\"nodejs\",\"reactjs\"], people = [[\"java\"],[\"nodejs\"],[\"nodejs\",\"reactjs\"]]",
                        "output": "[0,2]",
                        "explanation": "The team consisting of person 0 (with skill \"java\") and person 2 (with skills \"nodejs\" and \"reactjs\") covers all required skills. This is a sufficient team of the smallest size."
                    },
                    {
                        "input": "req_skills = [\"algorithms\",\"math\",\"java\",\"reactjs\",\"csharp\",\"aws\"], people = [[\"algorithms\",\"math\",\"java\"],[\"algorithms\",\"math\",\"reactjs\"],[\"java\",\"csharp\",\"aws\"],[\"reactjs\",\"csharp\"],[\"csharp\",\"math\"],[\"aws\",\"java\"]]",
                        "output": "[1,2]",
                        "explanation": "The team consisting of person 1 (with skills \"algorithms\",\"math\",\"reactjs\") and person 2 (with skills \"java\",\"csharp\",\"aws\") covers all required skills. This is a sufficient team of the smallest size."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Hard",
                "titleSlug": "the-number-of-good-subsets",
                "title": "The Number of Good Subsets",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "minimum-number-of-work-sessions-to-finish-the-tasks",
                "title": "Minimum Number of Work Sessions to Finish the Tasks",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "maximum-rows-covered-by-columns",
                "title": "Maximum Rows Covered by Columns",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "Do a bitmask DP.",
            "For each person, for each set of skills, we can update our understanding of a minimum set of people needed to perform this set of skills."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Bitmask",
                "slug": "bitmask"
            }
        ]
    }
}