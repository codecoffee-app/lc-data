{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "640",
            "title": "Solve the Equation",
            "titleSlug": "solve-the-equation",
            "content": "<p>Solve a given equation and return the value of <code>&#39;x&#39;</code> in the form of a string <code>&quot;x=#value&quot;</code>. The equation contains only <code>&#39;+&#39;</code>, <code>&#39;-&#39;</code> operation, the variable <code>&#39;x&#39;</code> and its coefficient. You should return <code>&quot;No solution&quot;</code> if there is no solution for the equation, or <code>&quot;Infinite solutions&quot;</code> if there are infinite solutions for the equation.</p>\n\n<p>If there is exactly one solution for the equation, we ensure that the value of <code>&#39;x&#39;</code> is an integer.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> equation = &quot;x+5-3+x=6+x-2&quot;\n<strong>Output:</strong> &quot;x=2&quot;\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> equation = &quot;x=x&quot;\n<strong>Output:</strong> &quot;Infinite solutions&quot;\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> equation = &quot;2x=x&quot;\n<strong>Output:</strong> &quot;x=0&quot;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>3 &lt;= equation.length &lt;= 1000</code></li>\n\t<li><code>equation</code> has exactly one <code>&#39;=&#39;</code>.</li>\n\t<li><code>equation</code> consists of integers with an absolute value in the range <code>[0, 100]</code> without any leading zeros, and the variable <code>&#39;x&#39;</code>.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 472,
            "dislikes": 822,
            "similarQuestions": "[{\"title\": \"Fraction Addition and Subtraction\", \"titleSlug\": \"fraction-addition-and-subtraction\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimize Result by Adding Parentheses to Expression\", \"titleSlug\": \"minimize-result-by-adding-parentheses-to-expression\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "stats": "{\"totalAccepted\": \"38.1K\", \"totalSubmission\": \"87.3K\", \"totalAcceptedRaw\": 38056, \"totalSubmissionRaw\": 87265, \"acRate\": \"43.6%\"}",
            "hints": [],
            "rephrased": {
                "body": "Solve a given equation and return the value of 'x' in the form of a string \"x=#value\". The equation contains only '+', '-' operations, the variable 'x' and its coefficient. Return \"No solution\" if there is no solution for the equation, or \"Infinite solutions\" if there are infinite solutions for the equation. If there is exactly one solution for the equation, the value of 'x' is an integer.",
                "constraints": [
                    "3 <= equation.length <= 1000",
                    "equation has exactly one '='.",
                    "equation consists of integers with an absolute value in the range [0, 100] without any leading zeros, and the variable 'x'."
                ],
                "testcases": [
                    {
                        "input": "x+5-3+x=6+x-2",
                        "output": "x=2",
                        "explanation": null
                    },
                    {
                        "input": "x=x",
                        "output": "Infinite solutions",
                        "explanation": null
                    },
                    {
                        "input": "2x=x",
                        "output": "x=0",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "fraction-addition-and-subtraction",
                "title": "Fraction Addition and Subtraction",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "minimize-result-by-adding-parentheses-to-expression",
                "title": "Minimize Result by Adding Parentheses to Expression",
                "isPaidOnly": false
            }
        ],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  string solveEquation(string equation) {\n    const string lhsEquation = equation.substr(0, equation.find('='));\n    const string rhsEquation = equation.substr(equation.find('=') + 1);\n    const auto& [lhsCoefficient, lhsConstant] = calculate(lhsEquation);\n    const auto& [rhsCoefficient, rhsConstant] = calculate(rhsEquation);\n    const int coefficient = lhsCoefficient - rhsCoefficient;\n    const int constant = rhsConstant - lhsConstant;\n\n    if (coefficient == 0 && constant == 0)\n      return \"Infinite solutions\";\n    if (coefficient == 0 && constant != 0)\n      return \"No solution\";\n    return \"x=\" + to_string(constant / coefficient);\n  }\n\n private:\n  pair<int, int> calculate(const string& s) {\n    int coefficient = 0;\n    int constant = 0;\n    int num = 0;\n    int sign = 1;\n\n    for (int i = 0; i < s.length(); ++i) {\n      const char c = s[i];\n      if (isdigit(c))\n        num = num * 10 + (c - '0');\n      else if (c == '+' || c == '-') {\n        constant += sign * num;\n        sign = c == '+' ? 1 : -1;\n        num = 0;\n      } else {\n        if (i > 0 && num == 0 && s[i - 1] == '0')\n          continue;\n        coefficient += num == 0 ? sign : sign * num;\n        num = 0;\n      }\n    }\n\n    return {coefficient, constant + sign * num};\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public String solveEquation(String equation) {\n    String[] equations = equation.split(\"=\");\n    int[] lhs = calculate(equations[0]);\n    int[] rhs = calculate(equations[1]);\n    int coefficient = lhs[0] - rhs[0];\n    int constant = rhs[1] - lhs[1];\n\n    if (coefficient == 0 && constant == 0)\n      return \"Infinite solutions\";\n    if (coefficient == 0 && constant != 0)\n      return \"No solution\";\n    return \"x=\" + constant / coefficient;\n  }\n\n  private int[] calculate(final String s) {\n    int coefficient = 0;\n    int constant = 0;\n    int num = 0;\n    int sign = 1;\n\n    for (int i = 0; i < s.length(); ++i) {\n      char c = s.charAt(i);\n      if (Character.isDigit(c))\n        num = num * 10 + (c - '0');\n      else if (c == '+' || c == '-') {\n        constant += sign * num;\n        sign = c == '+' ? 1 : -1;\n        num = 0;\n      } else {\n        if (i > 0 && num == 0 && s.charAt(i - 1) == '0')\n          continue;\n        coefficient += num == 0 ? sign : sign * num;\n        num = 0;\n      }\n    }\n\n    return new int[] {coefficient, constant + sign * num};\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def solveEquation(self, equation: str) -> str:\n    def calculate(s: str) -> tuple:\n      coefficient = 0\n      constant = 0\n      num = 0\n      sign = 1\n\n      for i, c in enumerate(s):\n        if c.isdigit():\n          num = num * 10 + ord(c) - ord('0')\n        elif c in '+-':\n          constant += sign * num\n          sign = 1 if c == '+' else -1\n          num = 0\n        else:\n          if i > 0 and num == 0 and s[i - 1] == '0':\n            continue\n          coefficient += sign if num == 0 else sign * num\n          num = 0\n\n      return coefficient, constant + sign * num\n\n    lhsEquation, rhsEquation = equation.split('=')\n    lhsCoefficient, lhsConstant = calculate(lhsEquation)\n    rhsCoefficient, rhsConstant = calculate(rhsEquation)\n    coefficient = lhsCoefficient - rhsCoefficient\n    constant = rhsConstant - lhsConstant\n\n    if coefficient == 0 and constant == 0:\n      return \"Infinite solutions\"\n    if coefficient == 0 and constant != 0:\n      return \"No solution\"\n    return \"x=\" + str(constant // coefficient)\n",
                "lang_text": "py"
            }
        }
    }
}