{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2724",
            "title": "Sort By",
            "titleSlug": "sort-by",
            "content": "<p>Given an array <code>arr</code> and a function <code>fn</code>, return a sorted array <code>sortedArr</code>. You can assume&nbsp;<code>fn</code>&nbsp;only returns numbers and those numbers determine the sort order of&nbsp;<code>sortedArr</code>. <code>sortedArray</code> must be sorted in <strong>ascending order</strong> by <code>fn</code> output.</p>\n\n<p>You may assume that <code>fn</code> will never duplicate numbers for a given array.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [5, 4, 1, 2, 3], fn = (x) =&gt; x\n<strong>Output:</strong> [1, 2, 3, 4, 5]\n<strong>Explanation:</strong> fn simply returns the number passed to it so the array is sorted in ascending order.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [{&quot;x&quot;: 1}, {&quot;x&quot;: 0}, {&quot;x&quot;: -1}], fn = (d) =&gt; d.x\n<strong>Output:</strong> [{&quot;x&quot;: -1}, {&quot;x&quot;: 0}, {&quot;x&quot;: 1}]\n<strong>Explanation:</strong> fn returns the value for the &quot;x&quot; key. So the array is sorted based on that value.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [[3, 4], [5, 2], [10, 1]], fn = (x) =&gt; x[1]\n<strong>Output:</strong> [[10, 1], [5, 2], [3, 4]]\n<strong>Explanation:</strong> arr is sorted in ascending order by number at index=1.&nbsp;\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>arr</code> is a valid JSON array</li>\n\t<li><code>fn</code> is a function that returns a number</li>\n\t<li><code>1 &lt;=&nbsp;arr.length &lt;= 5 * 10<sup>5</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 129,
            "dislikes": 27,
            "similarQuestions": "[]",
            "topicTags": [],
            "stats": "{\"totalAccepted\": \"18.8K\", \"totalSubmission\": \"23.1K\", \"totalAcceptedRaw\": 18843, \"totalSubmissionRaw\": 23129, \"acRate\": \"81.5%\"}",
            "hints": [],
            "rephrased": {
                "body": "Given an array `arr` and a function `fn`, return a new sorted array `sortedArr`. The function `fn` will return a number for each element in `arr`, and these numbers will determine the sort order of `sortedArr`. `sortedArray` must be sorted in ascending order based on the output of `fn`. It is guaranteed that `fn` will not return duplicate numbers for any given array element.",
                "constraints": [
                    "`arr` is a valid JSON array",
                    "`fn` is a function that returns a number",
                    "1 <= arr.length <= 5 * 10^5"
                ],
                "testcases": [
                    {
                        "input": "arr = [5, 4, 1, 2, 3], fn = (x) => x",
                        "output": "[1, 2, 3, 4, 5]",
                        "explanation": "The function `fn` returns the number itself, so the array is sorted in ascending numerical order."
                    },
                    {
                        "input": "arr = [{\"x\": 1}, {\"x\": 0}, {\"x\": -1}], fn = (d) => d.x",
                        "output": "[{\"x\": -1}, {\"x\": 0}, {\"x\": 1}]",
                        "explanation": "The function `fn` returns the value of the 'x' key. The array is sorted based on this value in ascending order."
                    },
                    {
                        "input": "arr = [[3, 4], [5, 2], [10, 1]], fn = (x) => x[1]",
                        "output": "[[10, 1], [5, 2], [3, 4]]",
                        "explanation": "The function `fn` returns the element at index 1 of each nested array. The main array is sorted in ascending order based on these elements."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": []
    }
}