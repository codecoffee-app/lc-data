{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1356",
            "title": "Sort Integers by The Number of 1 Bits",
            "titleSlug": "sort-integers-by-the-number-of-1-bits",
            "content": "<p>You are given an integer array <code>arr</code>. Sort the integers in the array&nbsp;in ascending order by the number of <code>1</code>&#39;s&nbsp;in their binary representation and in case of two or more integers have the same number of <code>1</code>&#39;s you have to sort them in ascending order.</p>\n\n<p>Return <em>the array after sorting it</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [0,1,2,3,4,5,6,7,8]\n<strong>Output:</strong> [0,1,2,4,8,3,5,6,7]\n<strong>Explantion:</strong> [0] is the only integer with 0 bits.\n[1,2,4,8] all have 1 bit.\n[3,5,6] have 2 bits.\n[7] has 3 bits.\nThe sorted array by bits is [0,1,2,4,8,3,5,6,7]\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1024,512,256,128,64,32,16,8,4,2,1]\n<strong>Output:</strong> [1,2,4,8,16,32,64,128,256,512,1024]\n<strong>Explantion:</strong> All integers have 1 bit in the binary representation, you should just sort them in ascending order.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= arr.length &lt;= 500</code></li>\n\t<li><code>0 &lt;= arr[i] &lt;= 10<sup>4</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 2358,
            "dislikes": 116,
            "similarQuestions": "[{\"title\": \"Find Subsequence of Length K With the Largest Sum\", \"titleSlug\": \"find-subsequence-of-length-k-with-the-largest-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                },
                {
                    "name": "Counting",
                    "slug": "counting"
                }
            ],
            "stats": "{\"totalAccepted\": \"208.6K\", \"totalSubmission\": \"267.2K\", \"totalAcceptedRaw\": 208609, \"totalSubmissionRaw\": 267180, \"acRate\": \"78.1%\"}",
            "hints": [
                "Simulate the problem. Count the number of 1's in the binary representation of each integer.",
                "Sort by the number of 1's ascending and by the value in case of tie."
            ],
            "rephrased": {
                "body": "Given an integer array `arr`, sort the integers in ascending order based on the number of 1's in their binary representation. If two or more integers have the same number of 1's, sort them in ascending order.",
                "constraints": [
                    "1 <= arr.length <= 500",
                    "0 <= arr[i] <= 10^4"
                ],
                "testcases": [
                    {
                        "input": "[0,1,2,3,4,5,6,7,8]",
                        "output": "[0,1,2,4,8,3,5,6,7]",
                        "explanation": "The integers are sorted first by the number of 1s in their binary representation.  0 has zero 1s. 1, 2, 4, and 8 have one 1. 3, 5, and 6 have two 1s. 7 has three 1s. Integers with the same number of 1s are sorted in ascending order."
                    },
                    {
                        "input": "[1024,512,256,128,64,32,16,8,4,2,1]",
                        "output": "[1,2,4,8,16,32,64,128,256,512,1024]",
                        "explanation": "All integers have only one 1 in their binary representation, so they are sorted in ascending order."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Easy",
                "titleSlug": "find-subsequence-of-length-k-with-the-largest-sum",
                "title": "Find Subsequence of Length K With the Largest Sum",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "Simulate the problem. Count the number of 1's in the binary representation of each integer.",
            "Sort by the number of 1's ascending and by the value in case of tie."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            },
            {
                "name": "Counting",
                "slug": "counting"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  vector<int> sortByBits(vector<int>& arr) {\n    sort(arr.begin(), arr.end(), [](const int a, int b) {\n      const int x = bitset<32>(a).count();\n      const int y = bitset<32>(b).count();\n      return x == y ? a < b : x < y;\n    });\n    return arr;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int[] sortByBits(int[] arr) {\n    Integer[] A = Arrays.stream(arr).boxed().toArray(Integer[] ::new);\n    Arrays.sort(A,\n                (a, b)\n                    -> Integer.bitCount(a) == Integer.bitCount(b)\n                           ? a - b\n                           : Integer.bitCount(a) - Integer.bitCount(b));\n    return Arrays.stream(A).mapToInt(Integer::intValue).toArray();\n  }\n}\n",
                "lang_text": "java"
            }
        }
    }
}