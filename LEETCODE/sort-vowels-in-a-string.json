{
    "failed": false,
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2785",
            "title": "Sort Vowels in a String",
            "titleSlug": "sort-vowels-in-a-string",
            "content": "<p>Given a <strong>0-indexed</strong> string <code>s</code>, <strong>permute</strong> <code>s</code> to get a new string <code>t</code> such that:</p>\n\n<ul>\n\t<li>All consonants remain in their original places. More formally, if there is an index <code>i</code> with <code>0 &lt;= i &lt; s.length</code> such that <code>s[i]</code> is a consonant, then <code>t[i] = s[i]</code>.</li>\n\t<li>The vowels must be sorted in the <strong>nondecreasing</strong> order of their <strong>ASCII</strong> values. More formally, for pairs of indices <code>i</code>, <code>j</code> with <code>0 &lt;= i &lt; j &lt; s.length</code> such that <code>s[i]</code> and <code>s[j]</code> are vowels, then <code>t[i]</code> must not have a higher ASCII value than <code>t[j]</code>.</li>\n</ul>\n\n<p>Return <em>the resulting string</em>.</p>\n\n<p>The vowels are <code>&#39;a&#39;</code>, <code>&#39;e&#39;</code>, <code>&#39;i&#39;</code>, <code>&#39;o&#39;</code>, and <code>&#39;u&#39;</code>, and they can appear in lowercase or uppercase. Consonants comprise all letters that are not vowels.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;lEetcOde&quot;\n<strong>Output:</strong> &quot;lEOtcede&quot;\n<strong>Explanation:</strong> &#39;E&#39;, &#39;O&#39;, and &#39;e&#39; are the vowels in s; &#39;l&#39;, &#39;t&#39;, &#39;c&#39;, and &#39;d&#39; are all consonants. The vowels are sorted according to their ASCII values, and the consonants remain in the same places.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;lYmpH&quot;\n<strong>Output:</strong> &quot;lYmpH&quot;\n<strong>Explanation:</strong> There are no vowels in s (all characters in s are consonants), so we return &quot;lYmpH&quot;.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>s</code> consists only of letters of the&nbsp;English alphabet&nbsp;in <strong>uppercase and lowercase</strong>.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 973,
            "dislikes": 56,
            "similarQuestions": "[{\"title\": \"Reverse Vowels of a String\", \"titleSlug\": \"reverse-vowels-of-a-string\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "stats": "{\"totalAccepted\": \"129.8K\", \"totalSubmission\": \"159.5K\", \"totalAcceptedRaw\": 129809, \"totalSubmissionRaw\": 159507, \"acRate\": \"81.4%\"}",
            "hints": [
                "Add all the vowels in an array and sort the array.",
                "Replace characters in string s if it's a vowel from the new array."
            ],
            "rephrased": {
                "body": "Given a 0-indexed string `s`, rearrange it to create a new string `t` following these rules:\n\n*   All consonants remain in their original positions. That is, if `s[i]` is a consonant, then `t[i] = s[i]`.\n*   The vowels must be sorted in non-decreasing order based on their ASCII values. This means if `s[i]` and `s[j]` are vowels and `i < j`, then the ASCII value of `t[i]` must be less than or equal to the ASCII value of `t[j]`.\n\nReturn the resulting string `t`.\n\nVowels are defined as 'a', 'e', 'i', 'o', and 'u' (case-insensitive). Consonants are all letters that are not vowels.",
                "constraints": [
                    "1 <= s.length <= 10^5",
                    "s consists only of letters of the English alphabet in uppercase and lowercase."
                ],
                "testcases": [
                    {
                        "input": "lEetcOde",
                        "output": "lEOtcede",
                        "explanation": "The vowels 'E', 'O', and 'e' are extracted and sorted to 'E', 'O', 'e'. They replace the vowels in their original positions in the string, leaving consonants unchanged."
                    },
                    {
                        "input": "lYmpH",
                        "output": "lYmpH",
                        "explanation": "The input string contains no vowels. Therefore, the output is identical to the input."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Easy",
                "titleSlug": "reverse-vowels-of-a-string",
                "title": "Reverse Vowels of a String",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "Add all the vowels in an array and sort the array.",
            "Replace characters in string s if it's a vowel from the new array."
        ],
        "relatedTopics": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ]
    }
}