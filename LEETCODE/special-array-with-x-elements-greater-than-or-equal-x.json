{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1608",
            "title": "Special Array With X Elements Greater Than or Equal X",
            "titleSlug": "special-array-with-x-elements-greater-than-or-equal-x",
            "content": "<p>You are given an array <code>nums</code> of non-negative integers. <code>nums</code> is considered <strong>special</strong> if there exists a number <code>x</code> such that there are <strong>exactly</strong> <code>x</code> numbers in <code>nums</code> that are <strong>greater than or equal to</strong> <code>x</code>.</p>\n\n<p>Notice that <code>x</code> <strong>does not</strong> have to be an element in <code>nums</code>.</p>\n\n<p>Return <code>x</code> <em>if the array is <strong>special</strong>, otherwise, return </em><code>-1</code>. It can be proven that if <code>nums</code> is special, the value for <code>x</code> is <strong>unique</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,5]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> There are 2 values (3 and 5) that are greater than or equal to 2.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [0,0]\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> No numbers fit the criteria for x.\nIf x = 0, there should be 0 numbers &gt;= x, but there are 2.\nIf x = 1, there should be 1 number &gt;= x, but there are 0.\nIf x = 2, there should be 2 numbers &gt;= x, but there are 0.\nx cannot be greater since there are only 2 numbers in nums.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [0,4,3,0,4]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> There are 3 values that are greater than or equal to 3.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 100</code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 1000</code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 1553,
            "dislikes": 258,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "stats": "{\"totalAccepted\": \"77.2K\", \"totalSubmission\": \"128.4K\", \"totalAcceptedRaw\": 77184, \"totalSubmissionRaw\": 128429, \"acRate\": \"60.1%\"}",
            "hints": [
                "Count the number of elements greater than or equal to x for each x in the range [0, nums.length].",
                "If for any x, the condition satisfies, return that x. Otherwise, there is no answer."
            ],
            "rephrased": {
                "body": "Given an array `nums` of non-negative integers, determine if it is a special array. An array is considered special if there exists a number `x` such that there are exactly `x` numbers in `nums` that are greater than or equal to `x`. Return `x` if the array is special, otherwise return `-1`. If a special array exists, the value of `x` is unique.",
                "constraints": [
                    "1 <= nums.length <= 100",
                    "0 <= nums[i] <= 1000"
                ],
                "testcases": [
                    {
                        "input": "[3,5]",
                        "output": "2",
                        "explanation": "There are 2 values (3 and 5) in the array that are greater than or equal to 2."
                    },
                    {
                        "input": "[0,0]",
                        "output": "-1",
                        "explanation": "No such `x` exists. For example, if x = 0, there should be 0 numbers >= x, but there are 2. If x = 1, there should be 1 number >= x, but there are 0."
                    },
                    {
                        "input": "[0,4,3,0,4]",
                        "output": "3",
                        "explanation": "There are 3 values (4, 3, and 4) in the array that are greater than or equal to 3."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "Count the number of elements greater than or equal to x for each x in the range [0, nums.length].",
            "If for any x, the condition satisfies, return that x. Otherwise, there is no answer."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int specialArray(vector<int>& nums) {\n    std::ranges::sort(nums);\n\n    if (nums[0] >= nums.size())\n      return nums.size();\n\n    for (int i = 1; i < nums.size(); ++i) {\n      const int count = nums.size() - i;\n      if (nums[i - 1] < count && nums[i] >= count)\n        return count;\n    }\n\n    return -1;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int specialArray(int[] nums) {\n    Arrays.sort(nums);\n\n    if (nums[0] >= nums.length)\n      return nums.length;\n\n    for (int i = 1; i < nums.length; ++i) {\n      final int count = nums.length - i;\n      if (nums[i - 1] < count && nums[i] >= count)\n        return count;\n    }\n\n    return -1;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def specialArray(self, nums: List[int]) -> int:\n    nums.sort()\n\n    if nums[0] >= len(nums):\n      return len(nums)\n\n    for i, (a, b) in enumerate(itertools.pairwise(nums)):\n      count = len(nums) - i - 1\n      if a < count and b >= count:\n        return count\n\n    return -1\n",
                "lang_text": "py"
            }
        }
    }
}