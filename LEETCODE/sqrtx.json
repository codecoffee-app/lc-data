{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "69",
            "title": "Sqrt(x)",
            "titleSlug": "sqrtx",
            "content": "<p>Given a non-negative integer <code>x</code>, return <em>the square root of </em><code>x</code><em> rounded down to the nearest integer</em>. The returned integer should be <strong>non-negative</strong> as well.</p>\n\n<p>You <strong>must not use</strong> any built-in exponent function or operator.</p>\n\n<ul>\n\t<li>For example, do not use <code>pow(x, 0.5)</code> in c++ or <code>x ** 0.5</code> in python.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> x = 4\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The square root of 4 is 2, so we return 2.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> x = 8\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The square root of 8 is 2.82842..., and since we round it down to the nearest integer, 2 is returned.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= x &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 7717,
            "dislikes": 4407,
            "similarQuestions": "[{\"title\": \"Pow(x, n)\", \"titleSlug\": \"powx-n\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Valid Perfect Square\", \"titleSlug\": \"valid-perfect-square\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "stats": "{\"totalAccepted\": \"1.8M\", \"totalSubmission\": \"4.6M\", \"totalAcceptedRaw\": 1755297, \"totalSubmissionRaw\": 4589966, \"acRate\": \"38.2%\"}",
            "hints": [
                "Try exploring all integers. (Credits: @annujoshi)",
                "Use the sorted property of integers to reduced the search space. (Credits: @annujoshi)"
            ],
            "rephrased": {
                "body": "Implement a function to calculate the integer square root of a non-negative integer `x`. The function should return the largest integer that is less than or equal to the square root of `x`. You are not allowed to use any built-in exponent functions or operators.",
                "constraints": [
                    "0 <= x <= 2<sup>31</sup> - 1"
                ],
                "testcases": [
                    {
                        "input": "4",
                        "output": "2",
                        "explanation": "The square root of 4 is 2.  Since 2 is an integer, the rounded-down square root is 2."
                    },
                    {
                        "input": "8",
                        "output": "2",
                        "explanation": "The square root of 8 is approximately 2.828. Rounding down to the nearest integer results in 2."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "powx-n",
                "title": "Pow(x, n)",
                "isPaidOnly": false
            },
            {
                "difficulty": "Easy",
                "titleSlug": "valid-perfect-square",
                "title": "Valid Perfect Square",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "Try exploring all integers. (Credits: @annujoshi)",
            "Use the sorted property of integers to reduced the search space. (Credits: @annujoshi)"
        ],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int mySqrt(int x) {\n    unsigned l = 1;\n    unsigned r = x + 1u;\n\n    while (l < r) {\n      const unsigned m = (l + r) / 2;\n      if (m > x / m)\n        r = m;\n      else\n        l = m + 1;\n    }\n\n    // l: smallest number s.t. l * l > x\n    return l - 1;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int mySqrt(long x) {\n    long l = 1;\n    long r = x + 1;\n\n    while (l < r) {\n      final long m = (l + r) / 2;\n      if (m > x / m)\n        r = m;\n      else\n        l = m + 1;\n    }\n\n    // l: smallest number s.t. l * l > x\n    return (int) l - 1;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def mySqrt(self, x: int) -> int:\n    return bisect.bisect_right(range(x + 1), x,\n                               key=lambda m: m * m) - 1\n",
                "lang_text": "py"
            }
        }
    }
}