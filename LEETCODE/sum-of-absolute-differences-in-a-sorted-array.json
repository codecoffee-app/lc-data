{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1685",
            "title": "Sum of Absolute Differences in a Sorted Array",
            "titleSlug": "sum-of-absolute-differences-in-a-sorted-array",
            "content": "<p>You are given an integer array <code>nums</code> sorted in <strong>non-decreasing</strong> order.</p>\n\n<p>Build and return <em>an integer array </em><code>result</code><em> with the same length as </em><code>nums</code><em> such that </em><code>result[i]</code><em> is equal to the <strong>summation of absolute differences</strong> between </em><code>nums[i]</code><em> and all the other elements in the array.</em></p>\n\n<p>In other words, <code>result[i]</code> is equal to <code>sum(|nums[i]-nums[j]|)</code> where <code>0 &lt;= j &lt; nums.length</code> and <code>j != i</code> (<strong>0-indexed</strong>).</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,3,5]\n<strong>Output:</strong> [4,3,5]\n<strong>Explanation:</strong> Assuming the arrays are 0-indexed, then\nresult[0] = |2-2| + |2-3| + |2-5| = 0 + 1 + 3 = 4,\nresult[1] = |3-2| + |3-3| + |3-5| = 1 + 0 + 2 = 3,\nresult[2] = |5-2| + |5-3| + |5-5| = 3 + 2 + 0 = 5.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,4,6,8,10]\n<strong>Output:</strong> [24,15,13,15,21]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= nums[i + 1] &lt;= 10<sup>4</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 1982,
            "dislikes": 68,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "stats": "{\"totalAccepted\": \"101.6K\", \"totalSubmission\": \"147.1K\", \"totalAcceptedRaw\": 101600, \"totalSubmissionRaw\": 147068, \"acRate\": \"69.1%\"}",
            "hints": [
                "Absolute difference is the same as max(a, b) - min(a, b). How can you use this fact with the fact that the array is sorted?",
                "For nums[i], the answer is (nums[i] - nums[0]) + (nums[i] - nums[1]) + ... + (nums[i] - nums[i-1]) + (nums[i+1] - nums[i]) + (nums[i+2] - nums[i]) + ... + (nums[n-1] - nums[i]).",
                "It can be simplified to (nums[i] * i - (nums[0] + nums[1] + ... + nums[i-1])) + ((nums[i+1] + nums[i+2] + ... + nums[n-1]) - nums[i] * (n-i-1)). One can build prefix and suffix sums to compute  this quickly."
            ],
            "rephrased": {
                "body": "Given an integer array `nums` sorted in non-decreasing order, construct an integer array `result` of the same length as `nums`. Each element `result[i]` represents the sum of absolute differences between `nums[i]` and all other elements in `nums`. In other words, `result[i]` = sum(|nums[i] - nums[j]|) where 0 <= j < nums.length and j != i (0-indexed).  Return the constructed `result` array.",
                "constraints": [
                    "2 <= nums.length <= 10^5",
                    "1 <= nums[i] <= nums[i + 1] <= 10^4"
                ],
                "testcases": [
                    {
                        "input": "[2,3,5]",
                        "output": "[4,3,5]",
                        "explanation": "For nums = [2, 3, 5]:\n- result[0] = |2-2| + |2-3| + |2-5| = 0 + 1 + 3 = 4\n- result[1] = |3-2| + |3-3| + |3-5| = 1 + 0 + 2 = 3\n- result[2] = |5-2| + |5-3| + |5-5| = 3 + 2 + 0 = 5"
                    },
                    {
                        "input": "[1,4,6,8,10]",
                        "output": "[24,15,13,15,21]",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "Absolute difference is the same as max(a, b) - min(a, b). How can you use this fact with the fact that the array is sorted?",
            "For nums[i], the answer is (nums[i] - nums[0]) + (nums[i] - nums[1]) + ... + (nums[i] - nums[i-1]) + (nums[i+1] - nums[i]) + (nums[i+2] - nums[i]) + ... + (nums[n-1] - nums[i]).",
            "It can be simplified to (nums[i] * i - (nums[0] + nums[1] + ... + nums[i-1])) + ((nums[i+1] + nums[i+2] + ... + nums[n-1]) - nums[i] * (n-i-1)). One can build prefix and suffix sums to compute  this quickly."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  vector<int> getSumAbsoluteDifferences(vector<int>& nums) {\n    const int n = nums.size();\n    vector<int> ans;\n    // prefix[i] := sum(nums[0..i])\n    vector<int> prefix(n);\n    // suffix[i] := sum(nums[i..n - 1])\n    vector<int> suffix(n);\n\n    prefix[0] = nums[0];\n    for (int i = 1; i < n; ++i)\n      prefix[i] = prefix[i - 1] + nums[i];\n\n    suffix[n - 1] = nums[n - 1];\n    for (int i = n - 2; i >= 0; --i)\n      suffix[i] = suffix[i + 1] + nums[i];\n\n    for (int i = 0; i < nums.size(); ++i) {\n      const int left = nums[i] * (i + 1) - prefix[i];\n      const int right = suffix[i] - nums[i] * (n - i);\n      ans.push_back(left + right);\n    }\n\n    return ans;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int[] getSumAbsoluteDifferences(int[] nums) {\n    final int n = nums.length;\n    int[] ans = new int[n];\n    int[] prefix = new int[n];\n    int[] suffix = new int[n];\n\n    prefix[0] = nums[0];\n    for (int i = 1; i < n; ++i)\n      prefix[i] = prefix[i - 1] + nums[i];\n\n    suffix[n - 1] = nums[n - 1];\n    for (int i = n - 2; i >= 0; --i)\n      suffix[i] = suffix[i + 1] + nums[i];\n\n    for (int i = 0; i < nums.length; ++i) {\n      final int left = nums[i] * (i + 1) - prefix[i];\n      final int right = suffix[i] - nums[i] * (n - i);\n      ans[i] = left + right;\n    }\n\n    return ans;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def getSumAbsoluteDifferences(self, nums: List[int]) -> List[int]:\n    prefix = list(itertools.accumulate(nums))\n    suffix = list(itertools.accumulate(nums[::-1]))[::-1]\n    return [num * (i + 1) - prefix[i] + suffix[i] - num * (len(nums) - i)\n            for i, num in enumerate(nums)]\n",
                "lang_text": "py"
            }
        }
    }
}