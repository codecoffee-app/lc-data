{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2012",
            "title": "Sum of Beauty in the Array",
            "titleSlug": "sum-of-beauty-in-the-array",
            "content": "<p>You are given a <strong>0-indexed</strong> integer array <code>nums</code>. For each index <code>i</code> (<code>1 &lt;= i &lt;= nums.length - 2</code>) the <strong>beauty</strong> of <code>nums[i]</code> equals:</p>\n\n<ul>\n\t<li><code>2</code>, if <code>nums[j] &lt; nums[i] &lt; nums[k]</code>, for <strong>all</strong> <code>0 &lt;= j &lt; i</code> and for <strong>all</strong> <code>i &lt; k &lt;= nums.length - 1</code>.</li>\n\t<li><code>1</code>, if <code>nums[i - 1] &lt; nums[i] &lt; nums[i + 1]</code>, and the previous condition is not satisfied.</li>\n\t<li><code>0</code>, if none of the previous conditions holds.</li>\n</ul>\n\n<p>Return<em> the <strong>sum of beauty</strong> of all </em><code>nums[i]</code><em> where </em><code>1 &lt;= i &lt;= nums.length - 2</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> For each index i in the range 1 &lt;= i &lt;= 1:\n- The beauty of nums[1] equals 2.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2,4,6,4]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> For each index i in the range 1 &lt;= i &lt;= 2:\n- The beauty of nums[1] equals 1.\n- The beauty of nums[2] equals 0.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3,2,1]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> For each index i in the range 1 &lt;= i &lt;= 1:\n- The beauty of nums[1] equals 0.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>3 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 10<sup>5</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 581,
            "dislikes": 58,
            "similarQuestions": "[{\"title\": \"Best Time to Buy and Sell Stock\", \"titleSlug\": \"best-time-to-buy-and-sell-stock\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Partition Array into Disjoint Intervals\", \"titleSlug\": \"partition-array-into-disjoint-intervals\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Value of an Ordered Triplet II\", \"titleSlug\": \"maximum-value-of-an-ordered-triplet-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "stats": "{\"totalAccepted\": \"21.6K\", \"totalSubmission\": \"45.2K\", \"totalAcceptedRaw\": 21602, \"totalSubmissionRaw\": 45209, \"acRate\": \"47.8%\"}",
            "hints": [
                "Use suffix/prefix arrays.",
                "prefix[i] records the maximum value in range (0, i - 1) inclusive.",
                "suffix[i] records the minimum value in range (i + 1, n - 1) inclusive."
            ],
            "rephrased": {
                "body": "Given a 0-indexed integer array `nums`, determine the 'beauty' of each element `nums[i]` within the range `1 <= i <= nums.length - 2` and return the sum of these beauties.\n\nThe beauty of `nums[i]` is defined as follows:\n\n*   `2`: if `nums[j] < nums[i] < nums[k]` for **all** `0 <= j < i` and for **all** `i < k <= nums.length - 1`.\n*   `1`: if `nums[i - 1] < nums[i] < nums[i + 1]` and the previous condition (beauty of 2) is not satisfied.\n*   `0`: if neither of the previous conditions holds.",
                "constraints": [
                    "3 <= nums.length <= 10<sup>5</sup>",
                    "1 <= nums[i] <= 10<sup>5</sup>"
                ],
                "testcases": [
                    {
                        "input": "[1,2,3]",
                        "output": "2",
                        "explanation": "For nums[1] (value 2): All elements before (1) are less than 2, and all elements after (3) are greater than 2. Thus, the beauty is 2. The sum of beauty is 2."
                    },
                    {
                        "input": "[2,4,6,4]",
                        "output": "1",
                        "explanation": "For nums[1] (value 4): nums[0] (2) < 4 < nums[2] (6).  The condition for beauty 2 is not met (nums[3] < 4 is false).  Thus, the beauty is 1.\nFor nums[2] (value 6): nums[1] (4) < 6, but nums[3] (4) is not greater than 6. Thus, the beauty is 0. The sum of beauty is 1 + 0 = 1."
                    },
                    {
                        "input": "[3,2,1]",
                        "output": "0",
                        "explanation": "For nums[1] (value 2): nums[0] (3) is not less than 2. Thus, the beauty is 0. The sum of beauty is 0."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Easy",
                "titleSlug": "best-time-to-buy-and-sell-stock",
                "title": "Best Time to Buy and Sell Stock",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "partition-array-into-disjoint-intervals",
                "title": "Partition Array into Disjoint Intervals",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "maximum-value-of-an-ordered-triplet-ii",
                "title": "Maximum Value of an Ordered Triplet II",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "Use suffix/prefix arrays.",
            "prefix[i] records the maximum value in range (0, i - 1) inclusive.",
            "suffix[i] records the minimum value in range (i + 1, n - 1) inclusive."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            }
        ]
    }
}