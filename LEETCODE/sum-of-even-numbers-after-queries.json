{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "985",
            "title": "Sum of Even Numbers After Queries",
            "titleSlug": "sum-of-even-numbers-after-queries",
            "content": "<p>You are given an integer array <code>nums</code> and an array <code>queries</code> where <code>queries[i] = [val<sub>i</sub>, index<sub>i</sub>]</code>.</p>\n\n<p>For each query <code>i</code>, first, apply <code>nums[index<sub>i</sub>] = nums[index<sub>i</sub>] + val<sub>i</sub></code>, then print the sum of the even values of <code>nums</code>.</p>\n\n<p>Return <em>an integer array </em><code>answer</code><em> where </em><code>answer[i]</code><em> is the answer to the </em><code>i<sup>th</sup></code><em> query</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3,4], queries = [[1,0],[-3,1],[-4,0],[2,3]]\n<strong>Output:</strong> [8,6,2,4]\n<strong>Explanation:</strong> At the beginning, the array is [1,2,3,4].\nAfter adding 1 to nums[0], the array is [2,2,3,4], and the sum of even values is 2 + 2 + 4 = 8.\nAfter adding -3 to nums[1], the array is [2,-1,3,4], and the sum of even values is 2 + 4 = 6.\nAfter adding -4 to nums[0], the array is [-2,-1,3,4], and the sum of even values is -2 + 4 = 2.\nAfter adding 2 to nums[3], the array is [-2,-1,3,6], and the sum of even values is -2 + 6 = 4.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1], queries = [[4,0]]\n<strong>Output:</strong> [0]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>-10<sup>4</sup> &lt;= nums[i] &lt;= 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= queries.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>-10<sup>4</sup> &lt;= val<sub>i</sub> &lt;= 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= index<sub>i</sub> &lt; nums.length</code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 2045,
            "dislikes": 317,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "stats": "{\"totalAccepted\": \"136.2K\", \"totalSubmission\": \"200.2K\", \"totalAcceptedRaw\": 136224, \"totalSubmissionRaw\": 200238, \"acRate\": \"68.0%\"}",
            "hints": [],
            "rephrased": {
                "body": "Given an integer array `nums` and a list of queries `queries`, where each query `queries[i]` is a pair `[val_i, index_i]`. For each query `i`, update the element at `nums[index_i]` by adding `val_i` to it (i.e., `nums[index_i] = nums[index_i] + val_i`). After each update, calculate the sum of all even numbers in the updated `nums` array. Return an array `answer` where `answer[i]` is the sum of even numbers after applying the `i`-th query.",
                "constraints": [
                    "1 <= nums.length <= 10^4",
                    "-10^4 <= nums[i] <= 10^4",
                    "1 <= queries.length <= 10^4",
                    "-10^4 <= val_i <= 10^4",
                    "0 <= index_i < nums.length"
                ],
                "testcases": [
                    {
                        "input": "nums = [1,2,3,4], queries = [[1,0],[-3,1],[-4,0],[2,3]]",
                        "output": "[8,6,2,4]",
                        "explanation": "Initially, nums = [1,2,3,4].\n1. Query [1,0]: nums[0] = 1+1 = 2. nums = [2,2,3,4]. Even sum = 2 + 2 + 4 = 8.\n2. Query [-3,1]: nums[1] = 2-3 = -1. nums = [2,-1,3,4]. Even sum = 2 + 4 = 6.\n3. Query [-4,0]: nums[0] = 2-4 = -2. nums = [-2,-1,3,4]. Even sum = -2 + 4 = 2.\n4. Query [2,3]: nums[3] = 4+2 = 6. nums = [-2,-1,3,6]. Even sum = -2 + 6 = 4."
                    },
                    {
                        "input": "nums = [1], queries = [[4,0]]",
                        "output": "[0]",
                        "explanation": "Initially, nums = [1].\n1. Query [4,0]: nums[0] = 1+4 = 5. nums = [5]. Even sum = 0."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  vector<int> sumEvenAfterQueries(vector<int>& nums,\n                                  vector<vector<int>>& queries) {\n    vector<int> ans;\n    int sum =\n        accumulate(nums.begin(), nums.end(), 0, [](int subtotal, int num) {\n          return subtotal + (num % 2 == 0 ? num : 0);\n        });\n\n    for (const vector<int>& query : queries) {\n      const int val = query[0];\n      const int index = query[1];\n      if (nums[index] % 2 == 0)\n        sum -= nums[index];\n      nums[index] += val;\n      if (nums[index] % 2 == 0)\n        sum += nums[index];\n      ans.push_back(sum);\n    }\n\n    return ans;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int[] sumEvenAfterQueries(int[] nums, int[][] queries) {\n    int[] ans = new int[queries.length];\n    int sum = 0;\n\n    for (final int num : nums)\n      sum += num % 2 == 0 ? num : 0;\n\n    for (int i = 0; i < queries.length; ++i) {\n      final int val = queries[i][0];\n      final int index = queries[i][1];\n      if (nums[index] % 2 == 0)\n        sum -= nums[index];\n      nums[index] += val;\n      if (nums[index] % 2 == 0)\n        sum += nums[index];\n      ans[i] = sum;\n    }\n\n    return ans;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def sumEvenAfterQueries(self, nums: List[int], queries: List[List[int]]) -> List[int]:\n    ans = []\n    summ = sum(a for a in nums if a % 2 == 0)\n\n    for val, index in queries:\n      if nums[index] % 2 == 0:\n        summ -= nums[index]\n      nums[index] += val\n      if nums[index] % 2 == 0:\n        summ += nums[index]\n      ans.append(summ)\n\n    return ans\n",
                "lang_text": "py"
            }
        }
    }
}