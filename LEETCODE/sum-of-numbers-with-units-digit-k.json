{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2310",
            "title": "Sum of Numbers With Units Digit K",
            "titleSlug": "sum-of-numbers-with-units-digit-k",
            "content": "<p>Given two integers <code>num</code> and <code>k</code>, consider a set of positive integers with the following properties:</p>\n\n<ul>\n\t<li>The units digit of each integer is <code>k</code>.</li>\n\t<li>The sum of the integers is <code>num</code>.</li>\n</ul>\n\n<p>Return <em>the <strong>minimum</strong> possible size of such a set, or </em><code>-1</code><em> if no such set exists.</em></p>\n\n<p>Note:</p>\n\n<ul>\n\t<li>The set can contain multiple instances of the same integer, and the sum of an empty set is considered <code>0</code>.</li>\n\t<li>The <strong>units digit</strong> of a number is the rightmost digit of the number.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = 58, k = 9\n<strong>Output:</strong> 2\n<strong>Explanation:</strong>\nOne valid set is [9,49], as the sum is 58 and each integer has a units digit of 9.\nAnother valid set is [19,39].\nIt can be shown that 2 is the minimum possible size of a valid set.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = 37, k = 2\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> It is not possible to obtain a sum of 37 using only integers that have a units digit of 2.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = 0, k = 7\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> The sum of an empty set is considered 0.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= num &lt;= 3000</code></li>\n\t<li><code>0 &lt;= k &lt;= 9</code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 384,
            "dislikes": 318,
            "similarQuestions": "[{\"title\": \"Digit Count in Range\", \"titleSlug\": \"digit-count-in-range\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Count Integers With Even Digit Sum\", \"titleSlug\": \"count-integers-with-even-digit-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Sum of Number and Its Reverse\", \"titleSlug\": \"sum-of-number-and-its-reverse\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Enumeration",
                    "slug": "enumeration"
                }
            ],
            "stats": "{\"totalAccepted\": \"24.6K\", \"totalSubmission\": \"93.2K\", \"totalAcceptedRaw\": 24613, \"totalSubmissionRaw\": 93248, \"acRate\": \"26.4%\"}",
            "hints": [
                "Try solving this recursively.",
                "Create a method that takes an integer x as a parameter. This method returns the minimum possible size of a set where each number has units digit k and the sum of the numbers in the set is x."
            ],
            "rephrased": {
                "body": "Given two integers, `num` and `k`, find the minimum size of a set of positive integers that satisfy the following conditions:\n\n*   Each integer in the set has a units digit of `k`.\n*   The sum of the integers in the set is equal to `num`.\n\nReturn the minimum possible size of such a set. If no such set exists, return -1.  The sum of an empty set is considered 0.",
                "constraints": [
                    "0 <= num <= 3000",
                    "0 <= k <= 9"
                ],
                "testcases": [
                    {
                        "input": "num = 58, k = 9",
                        "output": "2",
                        "explanation": "A valid set is [9, 49] because their sum is 58 and each integer's units digit is 9. Another valid set is [19, 39].  It can be shown that 2 is the minimum possible size of a valid set."
                    },
                    {
                        "input": "num = 37, k = 2",
                        "output": "-1",
                        "explanation": "It is not possible to obtain a sum of 37 using only integers that have a units digit of 2."
                    },
                    {
                        "input": "num = 0, k = 7",
                        "output": "0",
                        "explanation": "The sum of an empty set is considered 0."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Hard",
                "titleSlug": "digit-count-in-range",
                "title": "Digit Count in Range",
                "isPaidOnly": true
            },
            {
                "difficulty": "Easy",
                "titleSlug": "count-integers-with-even-digit-sum",
                "title": "Count Integers With Even Digit Sum",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "sum-of-number-and-its-reverse",
                "title": "Sum of Number and Its Reverse",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "Try solving this recursively.",
            "Create a method that takes an integer x as a parameter. This method returns the minimum possible size of a set where each number has units digit k and the sum of the numbers in the set is x."
        ],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Enumeration",
                "slug": "enumeration"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int minimumNumbers(int num, int k) {\n    if (num == 0)\n      return 0;\n\n    // Assume the size of the set is n, and the numbers in the set are X1, X2,\n    // ..., Xn. Since the units digit of each number is k, X1 + X2 + ... + Xn =\n    // N * k + 10 * (x1 + x2 + ... + xn) = num. Therefore, the goal is to find\n    // The n s.t. n * k % 10 = num % 10\n    for (int i = 1; i <= 10 && i * k <= num; ++i)\n      if (i * k % 10 == num % 10)\n        return i;\n\n    return -1;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int minimumNumbers(int num, int k) {\n    if (num == 0)\n      return 0;\n\n    // Assume the size of the set is n, and the numbers in the set are X1, X2,\n    // ..., Xn. Since the units digit of each number is k, X1 + X2 + ... + Xn =\n    // N * k + 10 * (x1 + x2 + ... + xn) = num. Therefore, the goal is to find\n    // The n s.t. n * k % 10 = num % 10\n    for (int i = 1; i <= 10 && i * k <= num; ++i)\n      if (i * k % 10 == num % 10)\n        return i;\n\n    return -1;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def minimumNumbers(self, num: int, k: int) -> int:\n    if num == 0:\n      return 0\n\n    # Assume the size of the set is n, and the numbers in the set are X1, X2,\n    # ..., Xn. Since the units digit of each number is k, X1 + X2 + ... + Xn =\n    # N * k + 10 * (x1 + x2 + ... + xn) = num. Therefore, the goal is to find\n    # The n s.t. n * k % 10 = num % 10\n    for i in range(1, 11):\n      if i * k > num + 1:\n        break\n      if i * k % 10 == num % 10:\n        return i\n\n    return -1\n",
                "lang_text": "py"
            }
        }
    }
}