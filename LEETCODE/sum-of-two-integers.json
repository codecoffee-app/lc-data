{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "371",
            "title": "Sum of Two Integers",
            "titleSlug": "sum-of-two-integers",
            "content": "<p>Given two integers <code>a</code> and <code>b</code>, return <em>the sum of the two integers without using the operators</em> <code>+</code> <em>and</em> <code>-</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> a = 1, b = 2\n<strong>Output:</strong> 3\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> a = 2, b = 3\n<strong>Output:</strong> 5\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>-1000 &lt;= a, b &lt;= 1000</code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 3975,
            "dislikes": 5355,
            "similarQuestions": "[{\"title\": \"Add Two Numbers\", \"titleSlug\": \"add-two-numbers\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "stats": "{\"totalAccepted\": \"441.5K\", \"totalSubmission\": \"859.6K\", \"totalAcceptedRaw\": 441522, \"totalSubmissionRaw\": 859560, \"acRate\": \"51.4%\"}",
            "hints": [],
            "rephrased": {
                "body": "Calculate the sum of two integers, `a` and `b`, without using the addition (+) or subtraction (-) operators.",
                "constraints": [
                    "-1000 <= a <= 1000",
                    "-1000 <= b <= 1000"
                ],
                "testcases": [
                    {
                        "input": "a = 1, b = 2",
                        "output": "3",
                        "explanation": null
                    },
                    {
                        "input": "a = 2, b = 3",
                        "output": "5",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "add-two-numbers",
                "title": "Add Two Numbers",
                "isPaidOnly": false
            }
        ],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int getSum(unsigned a, unsigned b) {\n    while (b) {                      // Still have carry bits\n      const unsigned carry = a & b;  // Record carry bits\n      a ^= b;                        // ^ works like + w/o handling carry bits\n      b = carry << 1;\n    }\n    return a;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int getSum(int a, int b) {\n    while (b != 0) {           // Still have carry bits\n      final int carry = a & b; // Record carry bits\n      a ^= b;                  // ^ works like + w/o handling carry bits\n      b = carry << 1;\n    }\n    return a;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def getSum(self, a: int, b: int) -> int:\n    mask = 0xFFFFFFFF\n    kMax = 2000\n\n    while b:\n      a, b = (a ^ b) & mask, ((a & b) << 1) & mask\n\n    return a if a < kMax else ~(a ^ mask)\n",
                "lang_text": "py"
            }
        }
    }
}