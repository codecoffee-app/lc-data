{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2432",
            "title": "The Employee That Worked on the Longest Task",
            "titleSlug": "the-employee-that-worked-on-the-longest-task",
            "content": "<p>There are <code>n</code> employees, each with a unique id from <code>0</code> to <code>n - 1</code>.</p>\n\n<p>You are given a 2D integer array <code>logs</code> where <code>logs[i] = [id<sub>i</sub>, leaveTime<sub>i</sub>]</code> where:</p>\n\n<ul>\n\t<li><code>id<sub>i</sub></code> is the id of the employee that worked on the <code>i<sup>th</sup></code> task, and</li>\n\t<li><code>leaveTime<sub>i</sub></code> is the time at which the employee finished the <code>i<sup>th</sup></code> task. All the values <code>leaveTime<sub>i</sub></code> are <strong>unique</strong>.</li>\n</ul>\n\n<p>Note that the <code>i<sup>th</sup></code> task starts the moment right after the <code>(i - 1)<sup>th</sup></code> task ends, and the <code>0<sup>th</sup></code> task starts at time <code>0</code>.</p>\n\n<p>Return <em>the id of the employee that worked the task with the longest time.</em> If there is a tie between two or more employees, return<em> the <strong>smallest</strong> id among them</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 10, logs = [[0,3],[2,5],[0,9],[1,15]]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> \nTask 0 started at 0 and ended at 3 with 3 units of times.\nTask 1 started at 3 and ended at 5 with 2 units of times.\nTask 2 started at 5 and ended at 9 with 4 units of times.\nTask 3 started at 9 and ended at 15 with 6 units of times.\nThe task with the longest time is task 3 and the employee with id 1 is the one that worked on it, so we return 1.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 26, logs = [[1,1],[3,7],[2,12],[7,17]]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> \nTask 0 started at 0 and ended at 1 with 1 unit of times.\nTask 1 started at 1 and ended at 7 with 6 units of times.\nTask 2 started at 7 and ended at 12 with 5 units of times.\nTask 3 started at 12 and ended at 17 with 5 units of times.\nThe tasks with the longest time is task 1. The employee that worked on it is 3, so we return 3.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 2, logs = [[0,10],[1,20]]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> \nTask 0 started at 0 and ended at 10 with 10 units of times.\nTask 1 started at 10 and ended at 20 with 10 units of times.\nThe tasks with the longest time are tasks 0 and 1. The employees that worked on them are 0 and 1, so we return the smallest id 0.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= n &lt;= 500</code></li>\n\t<li><code>1 &lt;= logs.length &lt;= 500</code></li>\n\t<li><code>logs[i].length == 2</code></li>\n\t<li><code>0 &lt;= id<sub>i</sub> &lt;= n - 1</code></li>\n\t<li><code>1 &lt;= leaveTime<sub>i</sub> &lt;= 500</code></li>\n\t<li><code>id<sub>i</sub> != id<sub>i+1</sub></code></li>\n\t<li><code>leaveTime<sub>i</sub></code> are sorted in a strictly increasing order.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 261,
            "dislikes": 66,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                }
            ],
            "stats": "{\"totalAccepted\": \"32K\", \"totalSubmission\": \"64.6K\", \"totalAcceptedRaw\": 31995, \"totalSubmissionRaw\": 64586, \"acRate\": \"49.5%\"}",
            "hints": [
                "Find the time of the longest task",
                "Store each employee\u2019s longest task time in a hash table",
                "For employees that have the same longest task time, we only need the employee with the smallest ID"
            ],
            "rephrased": {
                "body": "Given `n` employees with unique IDs from 0 to `n - 1`, and a 2D integer array `logs` where `logs[i] = [id_i, leaveTime_i]`. `id_i` is the employee ID working on the i-th task, and `leaveTime_i` is when they finished.  The i-th task starts immediately after the (i-1)-th task, and the 0-th task starts at time 0. Determine the employee ID that worked the task with the longest duration. If multiple employees share the longest duration, return the smallest ID.",
                "constraints": [
                    "2 <= n <= 500",
                    "1 <= logs.length <= 500",
                    "logs[i].length == 2",
                    "0 <= id_i <= n - 1",
                    "1 <= leaveTime_i <= 500",
                    "id_i != id_i+1",
                    "leaveTime_i are sorted in a strictly increasing order."
                ],
                "testcases": [
                    {
                        "input": "{ \"n\": 10, \"logs\": [[0,3],[2,5],[0,9],[1,15]] }",
                        "output": "1",
                        "explanation": "Task durations are: Task 0: 3 - 0 = 3, Task 1: 5 - 3 = 2, Task 2: 9 - 5 = 4, Task 3: 15 - 9 = 6. Task 3 has the longest duration (6) and employee 1 worked on it."
                    },
                    {
                        "input": "{ \"n\": 26, \"logs\": [[1,1],[3,7],[2,12],[7,17]] }",
                        "output": "3",
                        "explanation": "Task durations are: Task 0: 1 - 0 = 1, Task 1: 7 - 1 = 6, Task 2: 12 - 7 = 5, Task 3: 17 - 12 = 5. Task 1 has the longest duration (6) and employee 3 worked on it."
                    },
                    {
                        "input": "{ \"n\": 2, \"logs\": [[0,10],[1,20]] }",
                        "output": "0",
                        "explanation": "Task durations are: Task 0: 10 - 0 = 10, Task 1: 20 - 10 = 10. Tasks 0 and 1 have the same longest duration (10).  Employee IDs are 0 and 1. The smaller ID is 0."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "Find the time of the longest task",
            "Store each employee\u2019s longest task time in a hash table",
            "For employees that have the same longest task time, we only need the employee with the smallest ID"
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            }
        ]
    }
}