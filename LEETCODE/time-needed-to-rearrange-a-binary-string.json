{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2380",
            "title": "Time Needed to Rearrange a Binary String",
            "titleSlug": "time-needed-to-rearrange-a-binary-string",
            "content": "<p>You are given a binary string <code>s</code>. In one second, <strong>all</strong> occurrences of <code>&quot;01&quot;</code> are <strong>simultaneously</strong> replaced with <code>&quot;10&quot;</code>. This process <strong>repeats</strong> until no occurrences of <code>&quot;01&quot;</code> exist.</p>\n\n<p>Return<em> the number of seconds needed to complete this process.</em></p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;0110101&quot;\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> \nAfter one second, s becomes &quot;1011010&quot;.\nAfter another second, s becomes &quot;1101100&quot;.\nAfter the third second, s becomes &quot;1110100&quot;.\nAfter the fourth second, s becomes &quot;1111000&quot;.\nNo occurrence of &quot;01&quot; exists any longer, and the process needed 4 seconds to complete,\nso we return 4.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;11100&quot;\n<strong>Output:</strong> 0\n<strong>Explanation:</strong>\nNo occurrence of &quot;01&quot; exists in s, and the processes needed 0 seconds to complete,\nso we return 0.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 1000</code></li>\n\t<li><code>s[i]</code> is either <code>&#39;0&#39;</code> or <code>&#39;1&#39;</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong></p>\n\n<p>Can you solve this problem in O(n) time complexity?</p>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 436,
            "dislikes": 105,
            "similarQuestions": "[{\"title\": \"Minimum Swaps to Group All 1's Together\", \"titleSlug\": \"minimum-swaps-to-group-all-1s-together\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Swaps to Group All 1's Together II\", \"titleSlug\": \"minimum-swaps-to-group-all-1s-together-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Simulation",
                    "slug": "simulation"
                }
            ],
            "stats": "{\"totalAccepted\": \"27.2K\", \"totalSubmission\": \"54.9K\", \"totalAcceptedRaw\": 27176, \"totalSubmissionRaw\": 54894, \"acRate\": \"49.5%\"}",
            "hints": [
                "Try replicating the steps from the problem statement.",
                "Perform the replacements simultaneously, and return the number of times the process repeats."
            ],
            "rephrased": {
                "body": "Given a binary string `s`, simulate a process where all occurrences of \"01\" are simultaneously replaced with \"10\". This process repeats until no \"01\" substrings exist. Determine the number of seconds (iterations) required for this process to complete.",
                "constraints": [
                    "1 <= s.length <= 1000",
                    "s[i] is either '0' or '1'"
                ],
                "testcases": [
                    {
                        "input": "0110101",
                        "output": "4",
                        "explanation": "Initially, s = \"0110101\".\nAfter 1 second, s becomes \"1011010\".\nAfter 2 seconds, s becomes \"1101100\".\nAfter 3 seconds, s becomes \"1110100\".\nAfter 4 seconds, s becomes \"1111000\".\nNo more \"01\" occurrences exist, so the answer is 4."
                    },
                    {
                        "input": "11100",
                        "output": "0",
                        "explanation": "No \"01\" occurrences are present in the initial string \"11100\", so the process completes in 0 seconds."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "minimum-swaps-to-group-all-1s-together",
                "title": "Minimum Swaps to Group All 1's Together",
                "isPaidOnly": true
            },
            {
                "difficulty": "Medium",
                "titleSlug": "minimum-swaps-to-group-all-1s-together-ii",
                "title": "Minimum Swaps to Group All 1's Together II",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "Try replicating the steps from the problem statement.",
            "Perform the replacements simultaneously, and return the number of times the process repeats."
        ],
        "relatedTopics": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Simulation",
                "slug": "simulation"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int secondsToRemoveOccurrences(string s) {\n    int ans = 0;\n    int zeros = 0;\n\n    for (const char c : s)\n      if (c == '0')\n        ++zeros;\n      else if (zeros > 0)  // c == '1'\n        ans = max(ans + 1, zeros);\n\n    return ans;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int secondsToRemoveOccurrences(String s) {\n    int ans = 0;\n    int zeros = 0;\n\n    for (final char c : s.toCharArray())\n      if (c == '0')\n        ++zeros;\n      else if (zeros > 0) // c == '1'\n        ans = Math.max(ans + 1, zeros);\n\n    return ans;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def secondsToRemoveOccurrences(self, s: str) -> int:\n    ans = 0\n    zeros = 0\n\n    for c in s:\n      if c == '0':\n        zeros += 1\n      elif zeros > 0:  # c == '1'\n        ans = max(ans + 1, zeros)\n\n    return ans\n",
                "lang_text": "py"
            }
        }
    }
}