{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2704",
            "title": "To Be Or Not To Be",
            "titleSlug": "to-be-or-not-to-be",
            "content": "<p>Write a function&nbsp;<code>expect</code> that helps developers test their code. It should take in any value&nbsp;<code>val</code>&nbsp;and return an object with the following two functions.</p>\n\n<ul>\n\t<li><code>toBe(val)</code>&nbsp;accepts another value and returns&nbsp;<code>true</code>&nbsp;if the two values&nbsp;<code>===</code>&nbsp;each other. If they are not equal, it should throw an error&nbsp;<code>&quot;Not Equal&quot;</code>.</li>\n\t<li><code>notToBe(val)</code>&nbsp;accepts another value and returns&nbsp;<code>true</code>&nbsp;if the two values&nbsp;<code>!==</code>&nbsp;each other. If they are equal, it should throw an error&nbsp;<code>&quot;Equal&quot;</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> func = () =&gt; expect(5).toBe(5)\n<strong>Output:</strong> {&quot;value&quot;: true}\n<strong>Explanation:</strong> 5 === 5 so this expression returns true.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> func = () =&gt; expect(5).toBe(null)\n<strong>Output:</strong> {&quot;error&quot;: &quot;Not Equal&quot;}\n<strong>Explanation:</strong> 5 !== null so this expression throw the error &quot;Not Equal&quot;.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> func = () =&gt; expect(5).notToBe(null)\n<strong>Output:</strong> {&quot;value&quot;: true}\n<strong>Explanation:</strong> 5 !== null so this expression returns true.\n</pre>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 455,
            "dislikes": 102,
            "similarQuestions": "[]",
            "topicTags": [],
            "stats": "{\"totalAccepted\": \"81.2K\", \"totalSubmission\": \"132K\", \"totalAcceptedRaw\": 81245, \"totalSubmissionRaw\": 132016, \"acRate\": \"61.5%\"}",
            "hints": [],
            "rephrased": {
                "body": "Write a function `expect` that facilitates code testing. It accepts a value `val` and returns an object with two functions:\n\n*   `toBe(val)`: Accepts another value and returns `true` if the two values are strictly equal (`===`). If they are not, it throws an error with the message \"Not Equal\".\n*   `notToBe(val)`: Accepts another value and returns `true` if the two values are strictly not equal (`!==`). If they are equal, it throws an error with the message \"Equal\".",
                "constraints": [],
                "testcases": [
                    {
                        "input": "() => expect(5).toBe(5)",
                        "output": "{\"value\": true}",
                        "explanation": "The values 5 and 5 are strictly equal, so the function returns true."
                    },
                    {
                        "input": "() => expect(5).toBe(null)",
                        "output": "{\"error\": \"Not Equal\"}",
                        "explanation": "The values 5 and null are not strictly equal, so the function throws an error \"Not Equal\"."
                    },
                    {
                        "input": "() => expect(5).notToBe(null)",
                        "output": "{\"value\": true}",
                        "explanation": "The values 5 and null are not strictly equal, so the function returns true."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [],
        "relatedTopics": [],
        "solutions": {}
    }
}