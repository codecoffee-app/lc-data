{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "766",
            "title": "Toeplitz Matrix",
            "titleSlug": "toeplitz-matrix",
            "content": "<p>Given an <code>m x n</code> <code>matrix</code>, return&nbsp;<em><code>true</code>&nbsp;if the matrix is Toeplitz. Otherwise, return <code>false</code>.</em></p>\n\n<p>A matrix is <strong>Toeplitz</strong> if every diagonal from top-left to bottom-right has the same elements.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/04/ex1.jpg\" style=\"width: 322px; height: 242px;\" />\n<pre>\n<strong>Input:</strong> matrix = [[1,2,3,4],[5,1,2,3],[9,5,1,2]]\n<strong>Output:</strong> true\n<strong>Explanation:</strong>\nIn the above grid, the&nbsp;diagonals are:\n&quot;[9]&quot;, &quot;[5, 5]&quot;, &quot;[1, 1, 1]&quot;, &quot;[2, 2, 2]&quot;, &quot;[3, 3]&quot;, &quot;[4]&quot;.\nIn each diagonal all elements are the same, so the answer is True.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/11/04/ex2.jpg\" style=\"width: 162px; height: 162px;\" />\n<pre>\n<strong>Input:</strong> matrix = [[1,2],[2,2]]\n<strong>Output:</strong> false\n<strong>Explanation:</strong>\nThe diagonal &quot;[1, 2]&quot; has different elements.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>m == matrix.length</code></li>\n\t<li><code>n == matrix[i].length</code></li>\n\t<li><code>1 &lt;= m, n &lt;= 20</code></li>\n\t<li><code>0 &lt;= matrix[i][j] &lt;= 99</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong></p>\n\n<ul>\n\t<li>What if the <code>matrix</code> is stored on disk, and the memory is limited such that you can only load at most one row of the matrix into the memory at once?</li>\n\t<li>What if the <code>matrix</code> is so large that you can only load up a partial row into the memory at once?</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 3445,
            "dislikes": 162,
            "similarQuestions": "[{\"title\": \"Valid Word Square\", \"titleSlug\": \"valid-word-square\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Matrix",
                    "slug": "matrix"
                }
            ],
            "stats": "{\"totalAccepted\": \"303.5K\", \"totalSubmission\": \"442.1K\", \"totalAcceptedRaw\": 303494, \"totalSubmissionRaw\": 442054, \"acRate\": \"68.7%\"}",
            "hints": [
                "Check whether each value is equal to the value of it's top-left neighbor."
            ],
            "rephrased": {
                "body": "Given an m x n matrix, determine if the matrix is Toeplitz. A matrix is Toeplitz if every diagonal from top-left to bottom-right contains the same elements.",
                "constraints": [
                    "m == matrix.length",
                    "n == matrix[i].length",
                    "1 <= m, n <= 20",
                    "0 <= matrix[i][j] <= 99"
                ],
                "testcases": [
                    {
                        "input": "[[1,2,3,4],[5,1,2,3],[9,5,1,2]]",
                        "output": "true",
                        "explanation": "Each diagonal in the matrix contains the same element. For example, one diagonal is [1, 1, 1]."
                    },
                    {
                        "input": "[[1,2],[2,2]]",
                        "output": "false",
                        "explanation": "The diagonal [1, 2] has different elements."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Easy",
                "titleSlug": "valid-word-square",
                "title": "Valid Word Square",
                "isPaidOnly": true
            }
        ],
        "hints": [
            "Check whether each value is equal to the value of it's top-left neighbor."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Matrix",
                "slug": "matrix"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  bool isToeplitzMatrix(vector<vector<int>>& matrix) {\n    for (int i = 0; i + 1 < matrix.size(); ++i)\n      for (int j = 0; j + 1 < matrix[0].size(); ++j)\n        if (matrix[i][j] != matrix[i + 1][j + 1])\n          return false;\n    return true;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public boolean isToeplitzMatrix(int[][] matrix) {\n    for (int i = 0; i + 1 < matrix.length; ++i)\n      for (int j = 0; j + 1 < matrix[0].length; ++j)\n        if (matrix[i][j] != matrix[i + 1][j + 1])\n          return false;\n    return true;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def isToeplitzMatrix(self, matrix: List[List[int]]) -> bool:\n    for i in range(len(matrix) - 1):\n      for j in range(len(matrix[0]) - 1):\n        if matrix[i][j] != matrix[i + 1][j + 1]:\n          return False\n\n    return True\n",
                "lang_text": "py"
            }
        }
    }
}