{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "477",
            "title": "Total Hamming Distance",
            "titleSlug": "total-hamming-distance",
            "content": "<p>The <a href=\"https://en.wikipedia.org/wiki/Hamming_distance\" target=\"_blank\">Hamming distance</a> between two integers is the number of positions at which the corresponding bits are different.</p>\n\n<p>Given an integer array <code>nums</code>, return <em>the sum of <strong>Hamming distances</strong> between all the pairs of the integers in</em> <code>nums</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [4,14,2]\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> In binary representation, the 4 is 0100, 14 is 1110, and 2 is 0010 (just\nshowing the four bits relevant in this case).\nThe answer will be:\nHammingDistance(4, 14) + HammingDistance(4, 2) + HammingDistance(14, 2) = 2 + 2 + 2 = 6.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [4,14,4]\n<strong>Output:</strong> 4\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>0 &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n\t<li>The answer for the given input will fit in a <strong>32-bit</strong> integer.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 2156,
            "dislikes": 89,
            "similarQuestions": "[{\"title\": \"Hamming Distance\", \"titleSlug\": \"hamming-distance\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                }
            ],
            "stats": "{\"totalAccepted\": \"104.1K\", \"totalSubmission\": \"198.8K\", \"totalAcceptedRaw\": 104064, \"totalSubmissionRaw\": 198833, \"acRate\": \"52.3%\"}",
            "hints": [],
            "rephrased": {
                "body": "Calculate the total Hamming distance between all pairs of integers within a given array. The Hamming distance between two integers is defined as the number of bit positions where the corresponding bits are different.",
                "constraints": [
                    "1 <= nums.length <= 10^4",
                    "0 <= nums[i] <= 10^9",
                    "The answer for the given input will fit in a 32-bit integer."
                ],
                "testcases": [
                    {
                        "input": "[4,14,2]",
                        "output": "6",
                        "explanation": "Consider the binary representations: 4 is 0100, 14 is 1110, and 2 is 0010. The Hamming distances are: HammingDistance(4, 14) = 2, HammingDistance(4, 2) = 2, HammingDistance(14, 2) = 2.  The sum is 2 + 2 + 2 = 6."
                    },
                    {
                        "input": "[4,14,4]",
                        "output": "4",
                        "explanation": null
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Easy",
                "titleSlug": "hamming-distance",
                "title": "Hamming Distance",
                "isPaidOnly": false
            }
        ],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int totalHammingDistance(vector<int>& nums) {\n    int ans = 0;\n    int mask = 1;\n\n    for (int i = 0; i < 30; ++i) {\n      const int onesCount = count_if(nums.begin(), nums.end(),\n                                     [&mask](int num) { return num & mask; });\n      const int zerosCount = nums.size() - onesCount;\n      ans += onesCount * zerosCount;\n      mask <<= 1;\n    }\n\n    return ans;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int totalHammingDistance(int[] nums) {\n    int ans = 0;\n    int mask = 1;\n\n    for (int i = 0; i < 30; ++i) {\n      final int onesCount = getCount(nums, mask);\n      final int zerosCount = nums.length - onesCount;\n      ans += onesCount * zerosCount;\n      mask <<= 1;\n    }\n\n    return ans;\n  }\n\n  private int getCount(int[] nums, int mask) {\n    int count = 0;\n    for (final int num : nums)\n      if ((num & mask) > 0)\n        ++count;\n    return count;\n  }\n}\n",
                "lang_text": "java"
            }
        }
    }
}