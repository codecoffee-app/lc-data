{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1201",
            "title": "Ugly Number III",
            "titleSlug": "ugly-number-iii",
            "content": "<p>An <strong>ugly number</strong> is a positive integer that is divisible by <code>a</code>, <code>b</code>, or <code>c</code>.</p>\n\n<p>Given four integers <code>n</code>, <code>a</code>, <code>b</code>, and <code>c</code>, return the <code>n<sup>th</sup></code> <strong>ugly number</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 3, a = 2, b = 3, c = 5\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> The ugly numbers are 2, 3, 4, 5, 6, 8, 9, 10... The 3<sup>rd</sup> is 4.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 4, a = 2, b = 3, c = 4\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> The ugly numbers are 2, 3, 4, 6, 8, 9, 10, 12... The 4<sup>th</sup> is 6.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 5, a = 2, b = 11, c = 13\n<strong>Output:</strong> 10\n<strong>Explanation:</strong> The ugly numbers are 2, 4, 6, 8, 10, 11, 12, 13... The 5<sup>th</sup> is 10.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n, a, b, c &lt;= 10<sup>9</sup></code></li>\n\t<li><code>1 &lt;= a * b * c &lt;= 10<sup>18</sup></code></li>\n\t<li>It is guaranteed that the result will be in range <code>[1, 2 * 10<sup>9</sup>]</code>.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 1168,
            "dislikes": 493,
            "similarQuestions": "[{\"title\": \"Ugly Number II\", \"titleSlug\": \"ugly-number-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                },
                {
                    "name": "Number Theory",
                    "slug": "number-theory"
                }
            ],
            "stats": "{\"totalAccepted\": \"29.7K\", \"totalSubmission\": \"101.5K\", \"totalAcceptedRaw\": 29728, \"totalSubmissionRaw\": 101521, \"acRate\": \"29.3%\"}",
            "hints": [
                "Write a function f(k) to determine how many ugly numbers smaller than k. As f(k) is non-decreasing, try binary search.",
                "Find all ugly numbers in [1, LCM(a, b, c)] (LCM is Least Common Multiple). Use inclusion-exclusion principle to expand the result."
            ],
            "rephrased": {
                "body": "Find the nth ugly number. An ugly number is a positive integer divisible by `a`, `b`, or `c`.",
                "constraints": [
                    "1 <= n, a, b, c <= 10^9",
                    "1 <= a * b * c <= 10^18",
                    "The result will be in the range [1, 2 * 10^9]."
                ],
                "testcases": [
                    {
                        "input": "n = 3, a = 2, b = 3, c = 5",
                        "output": "4",
                        "explanation": "The first few ugly numbers are 2, 3, 4, 5, 6, 8, 9, 10... The 3rd ugly number is 4."
                    },
                    {
                        "input": "n = 4, a = 2, b = 3, c = 4",
                        "output": "6",
                        "explanation": "The first few ugly numbers are 2, 3, 4, 6, 8, 9, 10, 12... The 4th ugly number is 6."
                    },
                    {
                        "input": "n = 5, a = 2, b = 11, c = 13",
                        "output": "10",
                        "explanation": "The first few ugly numbers are 2, 4, 6, 8, 10, 11, 12, 13... The 5th ugly number is 10."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Medium",
                "titleSlug": "ugly-number-ii",
                "title": "Ugly Number II",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "Write a function f(k) to determine how many ugly numbers smaller than k. As f(k) is non-decreasing, try binary search.",
            "Find all ugly numbers in [1, LCM(a, b, c)] (LCM is Least Common Multiple). Use inclusion-exclusion principle to expand the result."
        ],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            },
            {
                "name": "Number Theory",
                "slug": "number-theory"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int nthUglyNumber(int n, long a, long b, long c) {\n    const long ab = a * b / __gcd(a, b);\n    const long ac = a * c / __gcd(a, c);\n    const long bc = b * c / __gcd(b, c);\n    const long abc = a * bc / __gcd(a, bc);\n    int l = 1;\n    int r = 2'000'000'000;\n\n    while (l < r) {\n      const int m = l + (r - l) / 2;\n      if (m / a + m / b + m / c - m / ab - m / ac - m / bc + m / abc >= n)\n        r = m;\n      else\n        l = m + 1;\n    }\n\n    return l;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int nthUglyNumber(int n, long a, long b, long c) {\n    final long ab = a * b / gcd(a, b);\n    final long ac = a * c / gcd(a, c);\n    final long bc = b * c / gcd(b, c);\n    final long abc = a * bc / gcd(a, bc);\n    int l = 1;\n    int r = 2_000_000_000;\n\n    while (l < r) {\n      final int m = (l + r) / 2;\n      if (m / a + m / b + m / c - m / ab - m / ac - m / bc + m / abc >= n)\n        r = m;\n      else\n        l = m + 1;\n    }\n\n    return l;\n  }\n\n  private long gcd(long a, long b) {\n    return b == 0 ? a : gcd(b, a % b);\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def nthUglyNumber(self, n: int, a: int, b: int, c: int) -> int:\n    ab = a * b // math.gcd(a, b)\n    ac = a * c // math.gcd(a, c)\n    bc = b * c // math.gcd(b, c)\n    abc = a * bc // math.gcd(a, bc)\n    return bisect.bisect_left(\n        range(2 * 10**9), n,\n        key=lambda m: m // a + m // b + m // c - m // ab - m // ac - m // bc + m // abc)\n",
                "lang_text": "py"
            }
        }
    }
}