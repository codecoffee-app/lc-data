{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1207",
            "title": "Unique Number of Occurrences",
            "titleSlug": "unique-number-of-occurrences",
            "content": "<p>Given an array of integers <code>arr</code>, return <code>true</code> <em>if the number of occurrences of each value in the array is <strong>unique</strong> or </em><code>false</code><em> otherwise</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1,2,2,1,1,3]\n<strong>Output:</strong> true\n<strong>Explanation:</strong>&nbsp;The value 1 has 3 occurrences, 2 has 2 and 3 has 1. No two values have the same number of occurrences.</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1,2]\n<strong>Output:</strong> false\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [-3,0,1,-3,1,1,1,-3,10,0]\n<strong>Output:</strong> true\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= arr.length &lt;= 1000</code></li>\n\t<li><code>-1000 &lt;= arr[i] &lt;= 1000</code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 4415,
            "dislikes": 104,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Hash Table",
                    "slug": "hash-table"
                }
            ],
            "stats": "{\"totalAccepted\": \"396.3K\", \"totalSubmission\": \"531.1K\", \"totalAcceptedRaw\": 396267, \"totalSubmissionRaw\": 531054, \"acRate\": \"74.6%\"}",
            "hints": [
                "Find the number of occurrences of each element in the array using a hash map.",
                "Iterate through the hash map and check if there is a repeated value."
            ],
            "rephrased": {
                "body": "Determine if the number of occurrences of each value in the given integer array `arr` is unique. Return `true` if the number of occurrences of each value is unique, and `false` otherwise.",
                "constraints": [
                    "1 <= arr.length <= 1000",
                    "-1000 <= arr[i] <= 1000"
                ],
                "testcases": [
                    {
                        "input": "[1,2,2,1,1,3]",
                        "output": "true",
                        "explanation": "The value 1 appears 3 times, 2 appears 2 times, and 3 appears 1 time. Since each value has a distinct number of occurrences, the result is true."
                    },
                    {
                        "input": "[1,2]",
                        "output": "false",
                        "explanation": "The value 1 appears 1 time, and 2 appears 1 time. The number of occurrences are not unique since both 1 and 2 appear only once."
                    },
                    {
                        "input": "[-3,0,1,-3,1,1,1,-3,10,0]",
                        "output": "true",
                        "explanation": "The value -3 appears 3 times, 0 appears 2 times, 1 appears 4 times, and 10 appears 1 time. All the counts are unique, so the result is true."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "Find the number of occurrences of each element in the array using a hash map.",
            "Iterate through the hash map and check if there is a repeated value."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Hash Table",
                "slug": "hash-table"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  bool uniqueOccurrences(vector<int>& arr) {\n    unordered_map<int, int> count;\n    unordered_set<int> occurrences;\n\n    for (const int a : arr)\n      ++count[a];\n\n    for (const auto& [_, value] : count)\n      if (!occurrences.insert(value).second)\n        return false;\n\n    return true;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public boolean uniqueOccurrences(int[] arr) {\n    Map<Integer, Integer> count = new HashMap<>();\n    Set<Integer> occurrences = new HashSet<>();\n\n    for (final int a : arr)\n      count.merge(a, 1, Integer::sum);\n\n    for (final int value : count.values())\n      if (!occurrences.add(value))\n        return false;\n\n    return true;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def uniqueOccurrences(self, arr: List[int]) -> bool:\n    count = collections.Counter(arr)\n    occurrences = set()\n\n    for value in count.values():\n      if value in occurrences:\n        return False\n      occurrences.add(value)\n\n    return True\n",
                "lang_text": "py"
            }
        }
    }
}