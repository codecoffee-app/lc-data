{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1037",
            "title": "Valid Boomerang",
            "titleSlug": "valid-boomerang",
            "content": "<p>Given an array <code>points</code> where <code>points[i] = [x<sub>i</sub>, y<sub>i</sub>]</code> represents a point on the <strong>X-Y</strong> plane, return <code>true</code> <em>if these points are a <strong>boomerang</strong></em>.</p>\n\n<p>A <strong>boomerang</strong> is a set of three points that are <strong>all distinct</strong> and <strong>not in a straight line</strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<pre><strong>Input:</strong> points = [[1,1],[2,3],[3,2]]\n<strong>Output:</strong> true\n</pre><p><strong class=\"example\">Example 2:</strong></p>\n<pre><strong>Input:</strong> points = [[1,1],[2,2],[3,3]]\n<strong>Output:</strong> false\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>points.length == 3</code></li>\n\t<li><code>points[i].length == 2</code></li>\n\t<li><code>0 &lt;= x<sub>i</sub>, y<sub>i</sub> &lt;= 100</code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 392,
            "dislikes": 514,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Geometry",
                    "slug": "geometry"
                }
            ],
            "stats": "{\"totalAccepted\": \"48K\", \"totalSubmission\": \"129.9K\", \"totalAcceptedRaw\": 47964, \"totalSubmissionRaw\": 129924, \"acRate\": \"36.9%\"}",
            "hints": [
                "3 points form a boomerang if and only if the triangle formed from them has non-zero area."
            ],
            "rephrased": {
                "body": "Determine if three given points on the X-Y plane form a boomerang. A boomerang is defined as a set of three distinct points that do not lie on a straight line.",
                "constraints": [
                    "points.length == 3",
                    "points[i].length == 2",
                    "0 <= x<sub>i</sub>, y<sub>i</sub> <= 100"
                ],
                "testcases": [
                    {
                        "input": "[[1,1],[2,3],[3,2]]",
                        "output": "true",
                        "explanation": "The three points are distinct and do not lie on a straight line."
                    },
                    {
                        "input": "[[1,1],[2,2],[3,3]]",
                        "output": "false",
                        "explanation": "The three points are distinct but lie on a straight line."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "3 points form a boomerang if and only if the triangle formed from them has non-zero area."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Geometry",
                "slug": "geometry"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  bool isBoomerang(vector<vector<int>>& points) {\n    return (points[1][0] - points[0][0]) * (points[2][1] - points[1][1]) !=\n           (points[1][1] - points[0][1]) * (points[2][0] - points[1][0]);\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public boolean isBoomerang(int[][] points) {\n    return                                                               //\n        (points[1][0] - points[0][0]) * (points[2][1] - points[1][1]) != //\n        (points[1][1] - points[0][1]) * (points[2][0] - points[1][0]);\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def isBoomerang(self, points: List[List[int]]) -> bool:\n    return (points[1][0] - points[0][0]) * (points[2][1] - points[1][1]) != \\\n        (points[1][1] - points[0][1]) * (points[2][0] - points[1][0])\n",
                "lang_text": "py"
            }
        }
    }
}