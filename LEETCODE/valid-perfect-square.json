{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "367",
            "title": "Valid Perfect Square",
            "titleSlug": "valid-perfect-square",
            "content": "<p>Given a positive integer num, return <code>true</code> <em>if</em> <code>num</code> <em>is a perfect square or</em> <code>false</code> <em>otherwise</em>.</p>\n\n<p>A <strong>perfect square</strong> is an integer that is the square of an integer. In other words, it is the product of some integer with itself.</p>\n\n<p>You must not use any built-in library function, such as <code>sqrt</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = 16\n<strong>Output:</strong> true\n<strong>Explanation:</strong> We return true because 4 * 4 = 16 and 4 is an integer.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> num = 14\n<strong>Output:</strong> false\n<strong>Explanation:</strong> We return false because 3.742 * 3.742 = 14 and 3.742 is not an integer.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= num &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 4063,
            "dislikes": 294,
            "similarQuestions": "[{\"title\": \"Sqrt(x)\", \"titleSlug\": \"sqrtx\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Sum of Square Numbers\", \"titleSlug\": \"sum-of-square-numbers\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Math",
                    "slug": "math"
                },
                {
                    "name": "Binary Search",
                    "slug": "binary-search"
                }
            ],
            "stats": "{\"totalAccepted\": \"556.6K\", \"totalSubmission\": \"1.3M\", \"totalAcceptedRaw\": 556567, \"totalSubmissionRaw\": 1279417, \"acRate\": \"43.5%\"}",
            "hints": [],
            "rephrased": {
                "body": "Determine if a given positive integer is a perfect square. A perfect square is an integer that can be obtained by squaring another integer (i.e., it is the product of an integer with itself). You are not allowed to use any built-in square root functions.",
                "constraints": [
                    "1 <= num <= 2<sup>31</sup> - 1"
                ],
                "testcases": [
                    {
                        "input": 16,
                        "output": true,
                        "explanation": "16 is a perfect square because 4 * 4 = 16."
                    },
                    {
                        "input": 14,
                        "output": false,
                        "explanation": "14 is not a perfect square. There is no integer which, when multiplied by itself, results in 14."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Easy",
                "titleSlug": "sqrtx",
                "title": "Sqrt(x)",
                "isPaidOnly": false
            },
            {
                "difficulty": "Medium",
                "titleSlug": "sum-of-square-numbers",
                "title": "Sum of Square Numbers",
                "isPaidOnly": false
            }
        ],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Math",
                "slug": "math"
            },
            {
                "name": "Binary Search",
                "slug": "binary-search"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  bool isPerfectSquare(int num) {\n    long l = 1;\n    long r = num;\n\n    while (l < r) {\n      const long m = (l + r) / 2;\n      if (m >= num / m)\n        r = m;\n      else\n        l = m + 1;\n    }\n\n    return l * l == num;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public boolean isPerfectSquare(int num) {\n    long l = 1;\n    long r = num;\n\n    while (l < r) {\n      final long m = (l + r) / 2;\n      if (m >= num / m)\n        r = m;\n      else\n        l = m + 1;\n    }\n\n    return l * l == num;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def isPerfectSquare(self, num: int) -> bool:\n    l = bisect.bisect_left(range(num), num,\n                           key=lambda m: m * m)\n    return l**2 == num\n",
                "lang_text": "py"
            }
        }
    }
}