{
    "failed": false,
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "3136",
            "title": "Valid Word",
            "titleSlug": "valid-word",
            "content": "<p>A word is considered <strong>valid</strong> if:</p>\n\n<ul>\n\t<li>It contains a <strong>minimum</strong> of 3 characters.</li>\n\t<li>It contains only digits (0-9), and English letters (uppercase and lowercase).</li>\n\t<li>It includes <strong>at least</strong> one <strong>vowel</strong>.</li>\n\t<li>It includes <strong>at least</strong> one <strong>consonant</strong>.</li>\n</ul>\n\n<p>You are given a string <code>word</code>.</p>\n\n<p>Return <code>true</code> if <code>word</code> is valid, otherwise, return <code>false</code>.</p>\n\n<p><strong>Notes:</strong></p>\n\n<ul>\n\t<li><code>&#39;a&#39;</code>, <code>&#39;e&#39;</code>, <code>&#39;i&#39;</code>, <code>&#39;o&#39;</code>, <code>&#39;u&#39;</code>, and their uppercases are <strong>vowels</strong>.</li>\n\t<li>A <strong>consonant</strong> is an English letter that is not a vowel.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">word = &quot;234Adas&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">true</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>This word satisfies the conditions.</p>\n</div>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">word = &quot;b3&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">false</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>The length of this word is fewer than 3, and does not have a vowel.</p>\n</div>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<div class=\"example-block\">\n<p><strong>Input:</strong> <span class=\"example-io\">word = &quot;a3$e&quot;</span></p>\n\n<p><strong>Output:</strong> <span class=\"example-io\">false</span></p>\n\n<p><strong>Explanation:</strong></p>\n\n<p>This word contains a <code>&#39;$&#39;</code> character and does not have a consonant.</p>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= word.length &lt;= 20</code></li>\n\t<li><code>word</code> consists of English uppercase and lowercase letters, digits, <code>&#39;@&#39;</code>, <code>&#39;#&#39;</code>, and <code>&#39;$&#39;</code>.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Easy",
            "likes": 89,
            "dislikes": 92,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "stats": "{\"totalAccepted\": \"36K\", \"totalSubmission\": \"97.4K\", \"totalAcceptedRaw\": 36016, \"totalSubmissionRaw\": 97387, \"acRate\": \"37.0%\"}",
            "hints": [
                "Use if-else to check all the conditions."
            ],
            "rephrased": {
                "body": "A word is considered valid if it meets the following criteria:\n\n*   It has a minimum length of 3 characters.\n*   It contains only digits (0-9) and English letters (uppercase and lowercase).\n*   It includes at least one vowel (a, e, i, o, u, A, E, I, O, U).\n*   It includes at least one consonant (an English letter that is not a vowel).\n\nGiven a string `word`, determine if it is valid.",
                "constraints": [
                    "1 <= word.length <= 20",
                    "word consists of English uppercase and lowercase letters, digits, '@', '#', and '$'."
                ],
                "testcases": [
                    {
                        "input": "234Adas",
                        "output": "true",
                        "explanation": "The word '234Adas' is valid because it satisfies all the specified conditions: it has a length of at least 3, contains only digits and letters, and includes both vowels ('A', 'a') and consonants ('d', 's')."
                    },
                    {
                        "input": "b3",
                        "output": "false",
                        "explanation": "The word 'b3' is invalid because it does not meet all the requirements. Specifically, it's shorter than 3 characters and does not contain any vowels."
                    },
                    {
                        "input": "a3$e",
                        "output": "false",
                        "explanation": "The word 'a3$e' is invalid because it contains the '$' character, which is not an allowed character (only digits and letters are permitted). It also does not contain a consonant."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "Use if-else to check all the conditions."
        ],
        "relatedTopics": [
            {
                "name": "String",
                "slug": "string"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  bool isValid(string word) {\n    return word.length() >= 3 &&\n           ranges::all_of(word, [](char c) { return isalnum(c); }) &&\n           ranges::any_of(word, isVowel) && ranges::any_of(word, isConsonant);\n  }\n\n private:\n  static bool isVowel(char c) {\n    static constexpr string_view kVowels = \"aeiouAEIOU\";\n    return kVowels.find(c) != string_view::npos;\n  }\n\n  static bool isConsonant(char c) {\n    return isalpha(c) && !isVowel(c);\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public boolean isValid(String word) {\n    return word.length() >= 3 && word.chars().allMatch(Character::isLetterOrDigit) &&\n        word.chars().anyMatch(c -> isVowel((char) c)) &&\n        word.chars().anyMatch(c -> isConsonant((char) c));\n  }\n\n  private boolean isVowel(char c) {\n    return \"aeiouAEIOU\".indexOf(c) != -1;\n  }\n\n  private boolean isConsonant(char c) {\n    return Character.isLetter(c) && !isVowel(c);\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def isValid(self, word: str) -> bool:\n    kVowels = 'aeiouAEIOU'\n\n    def isConsonant(c: str) -> bool:\n      return c.isalpha() and c not in kVowels\n\n    return len(word) >= 3 and \\\n        all(c.isalnum() for c in word) and \\\n        any(c in kVowels for c in word) and \\\n        any(isConsonant(c) for c in word)\n",
                "lang_text": "py"
            }
        }
    }
}