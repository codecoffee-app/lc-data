{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "98",
            "title": "Validate Binary Search Tree",
            "titleSlug": "validate-binary-search-tree",
            "content": "<p>Given the <code>root</code> of a binary tree, <em>determine if it is a valid binary search tree (BST)</em>.</p>\n\n<p>A <strong>valid BST</strong> is defined as follows:</p>\n\n<ul>\n\t<li>The left <span data-keyword=\"subtree\">subtree</span> of a node contains only nodes with keys <strong>less than</strong> the node&#39;s key.</li>\n\t<li>The right subtree of a node contains only nodes with keys <strong>greater than</strong> the node&#39;s key.</li>\n\t<li>Both the left and right subtrees must also be binary search trees.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/12/01/tree1.jpg\" style=\"width: 302px; height: 182px;\" />\n<pre>\n<strong>Input:</strong> root = [2,1,3]\n<strong>Output:</strong> true\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/12/01/tree2.jpg\" style=\"width: 422px; height: 292px;\" />\n<pre>\n<strong>Input:</strong> root = [5,1,4,null,null,3,6]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> The root node&#39;s value is 5 but its right child&#39;s value is 4.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree is in the range <code>[1, 10<sup>4</sup>]</code>.</li>\n\t<li><code>-2<sup>31</sup> &lt;= Node.val &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 16221,
            "dislikes": 1323,
            "similarQuestions": "[{\"title\": \"Binary Tree Inorder Traversal\", \"titleSlug\": \"binary-tree-inorder-traversal\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Find Mode in Binary Search Tree\", \"titleSlug\": \"find-mode-in-binary-search-tree\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Tree",
                    "slug": "tree"
                },
                {
                    "name": "Depth-First Search",
                    "slug": "depth-first-search"
                },
                {
                    "name": "Binary Search Tree",
                    "slug": "binary-search-tree"
                },
                {
                    "name": "Binary Tree",
                    "slug": "binary-tree"
                }
            ],
            "stats": "{\"totalAccepted\": \"2.2M\", \"totalSubmission\": \"6.7M\", \"totalAcceptedRaw\": 2168670, \"totalSubmissionRaw\": 6659912, \"acRate\": \"32.6%\"}",
            "hints": [],
            "rephrased": {
                "body": "Given the root of a binary tree, determine if it is a valid binary search tree (BST). A valid BST is defined as follows:\n\n*   The left subtree of a node contains only nodes with keys less than the node's key.\n*   The right subtree of a node contains only nodes with keys greater than the node's key.\n*   Both the left and right subtrees must also be binary search trees.",
                "constraints": [
                    "The number of nodes in the tree is in the range `[1, 10^4]`.",
                    "`-2^31 <= Node.val <= 2^31 - 1`"
                ],
                "testcases": [
                    {
                        "input": "[2,1,3]",
                        "output": "true",
                        "explanation": "The binary tree with root 2, left child 1, and right child 3 satisfies the BST property, with the left subtree containing values less than 2 and the right subtree containing values greater than 2."
                    },
                    {
                        "input": "[5,1,4,null,null,3,6]",
                        "output": "false",
                        "explanation": "The binary tree with root 5, left child 1, right child 4, right child's left child 3 and right child's right child 6 does not satisfy the BST property because the right child (4) of the root is not greater than root(5) and the node with value 3 in the right subtree is less than the root node (5)."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Easy",
                "titleSlug": "binary-tree-inorder-traversal",
                "title": "Binary Tree Inorder Traversal",
                "isPaidOnly": false
            },
            {
                "difficulty": "Easy",
                "titleSlug": "find-mode-in-binary-search-tree",
                "title": "Find Mode in Binary Search Tree",
                "isPaidOnly": false
            }
        ],
        "hints": [],
        "relatedTopics": [
            {
                "name": "Tree",
                "slug": "tree"
            },
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search"
            },
            {
                "name": "Binary Search Tree",
                "slug": "binary-search-tree"
            },
            {
                "name": "Binary Tree",
                "slug": "binary-tree"
            }
        ]
    }
}