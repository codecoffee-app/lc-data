{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1637",
            "title": "Widest Vertical Area Between Two Points Containing No Points",
            "titleSlug": "widest-vertical-area-between-two-points-containing-no-points",
            "content": "<p>Given <code>n</code> <code>points</code> on a 2D plane where <code>points[i] = [x<sub>i</sub>, y<sub>i</sub>]</code>, Return<em>&nbsp;the <strong>widest vertical area</strong> between two points such that no points are inside the area.</em></p>\n\n<p>A <strong>vertical area</strong> is an area of fixed-width extending infinitely along the y-axis (i.e., infinite height). The <strong>widest vertical area</strong> is the one with the maximum width.</p>\n\n<p>Note that points <strong>on the edge</strong> of a vertical area <strong>are not</strong> considered included in the area.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2020/09/19/points3.png\" style=\"width: 276px; height: 371px;\" />\u200b\n<pre>\n<strong>Input:</strong> points = [[8,7],[9,9],[7,4],[9,7]]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> Both the red and the blue area are optimal.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> points = [[3,1],[9,0],[1,0],[1,4],[5,3],[8,8]]\n<strong>Output:</strong> 3\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>n == points.length</code></li>\n\t<li><code>2 &lt;= n &lt;= 10<sup>5</sup></code></li>\n\t<li><code>points[i].length == 2</code></li>\n\t<li><code>0 &lt;= x<sub>i</sub>, y<sub>i</sub>&nbsp;&lt;= 10<sup>9</sup></code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 839,
            "dislikes": 1554,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Sorting",
                    "slug": "sorting"
                }
            ],
            "stats": "{\"totalAccepted\": \"142.1K\", \"totalSubmission\": \"160.5K\", \"totalAcceptedRaw\": 142068, \"totalSubmissionRaw\": 160480, \"acRate\": \"88.5%\"}",
            "hints": [
                "Try sorting the points",
                "Think is the y-axis of a point relevant"
            ],
            "rephrased": {
                "body": "Given n points on a 2D plane, where points[i] = [xi, yi], find the widest vertical area between two points such that no points are inside the area.\n\nA vertical area is an area of fixed-width extending infinitely along the y-axis (i.e., infinite height). The widest vertical area is the one with the maximum width.\n\nNote that points on the edge of a vertical area are not considered included in the area.",
                "constraints": [
                    "n == points.length",
                    "2 <= n <= 10^5",
                    "points[i].length == 2",
                    "0 <= xi, yi <= 10^9"
                ],
                "testcases": [
                    {
                        "input": "[[8,7],[9,9],[7,4],[9,7]]",
                        "output": "1",
                        "explanation": "The widest vertical area is 1, achievable between x = 7 and x = 8, or between x = 8 and x = 9."
                    },
                    {
                        "input": "[[3,1],[9,0],[1,0],[1,4],[5,3],[8,8]]",
                        "output": "3",
                        "explanation": "The widest vertical area is 3, achievable between x = 5 and x = 8."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "Try sorting the points",
            "Think is the y-axis of a point relevant"
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Sorting",
                "slug": "sorting"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  int maxWidthOfVerticalArea(vector<vector<int>>& points) {\n    int ans = 0;\n    vector<int> xs;\n\n    for (const vector<int>& point : points) {\n      const int x = point[0];\n      xs.push_back(x);\n    }\n\n    std::ranges::sort(xs);\n\n    for (int i = 1; i < xs.size(); ++i)\n      ans = max(ans, xs[i] - xs[i - 1]);\n\n    return ans;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int maxWidthOfVerticalArea(int[][] points) {\n    int ans = 0;\n    int[] xs = new int[points.length];\n\n    for (int i = 0; i < points.length; ++i)\n      xs[i] = points[i][0];\n\n    Arrays.sort(xs);\n\n    for (int i = 1; i < xs.length; ++i)\n      ans = Math.max(ans, xs[i] - xs[i - 1]);\n\n    return ans;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def maxWidthOfVerticalArea(self, points: List[List[int]]) -> int:\n    xs = sorted([x for x, _ in points])\n    return max(b - a for a, b in itertools.pairwise(xs))\n",
                "lang_text": "py"
            }
        }
    }
}