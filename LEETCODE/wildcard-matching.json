{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "44",
            "title": "Wildcard Matching",
            "titleSlug": "wildcard-matching",
            "content": "<p>Given an input string (<code>s</code>) and a pattern (<code>p</code>), implement wildcard pattern matching with support for <code>&#39;?&#39;</code> and <code>&#39;*&#39;</code> where:</p>\n\n<ul>\n\t<li><code>&#39;?&#39;</code> Matches any single character.</li>\n\t<li><code>&#39;*&#39;</code> Matches any sequence of characters (including the empty sequence).</li>\n</ul>\n\n<p>The matching should cover the <strong>entire</strong> input string (not partial).</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;aa&quot;, p = &quot;a&quot;\n<strong>Output:</strong> false\n<strong>Explanation:</strong> &quot;a&quot; does not match the entire string &quot;aa&quot;.\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;aa&quot;, p = &quot;*&quot;\n<strong>Output:</strong> true\n<strong>Explanation:</strong>&nbsp;&#39;*&#39; matches any sequence.\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;cb&quot;, p = &quot;?a&quot;\n<strong>Output:</strong> false\n<strong>Explanation:</strong>&nbsp;&#39;?&#39; matches &#39;c&#39;, but the second letter is &#39;a&#39;, which does not match &#39;b&#39;.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= s.length, p.length &lt;= 2000</code></li>\n\t<li><code>s</code> contains only lowercase English letters.</li>\n\t<li><code>p</code> contains only lowercase English letters, <code>&#39;?&#39;</code> or <code>&#39;*&#39;</code>.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Hard",
            "likes": 7938,
            "dislikes": 323,
            "similarQuestions": "[{\"title\": \"Regular Expression Matching\", \"titleSlug\": \"regular-expression-matching\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "String",
                    "slug": "string"
                },
                {
                    "name": "Dynamic Programming",
                    "slug": "dynamic-programming"
                },
                {
                    "name": "Greedy",
                    "slug": "greedy"
                },
                {
                    "name": "Recursion",
                    "slug": "recursion"
                }
            ],
            "stats": "{\"totalAccepted\": \"528.9K\", \"totalSubmission\": \"1.9M\", \"totalAcceptedRaw\": 528855, \"totalSubmissionRaw\": 1927147, \"acRate\": \"27.4%\"}",
            "hints": [],
            "rephrased": {
                "body": "Implement wildcard pattern matching with support for '?' and '*' characters. The '?' character matches any single character, while the '*' character matches any sequence of characters (including the empty sequence). The matching should cover the entire input string.",
                "constraints": [
                    "0 <= s.length, p.length <= 2000",
                    "s contains only lowercase English letters.",
                    "p contains only lowercase English letters, '?' or '*'."
                ],
                "testcases": [
                    {
                        "input": {
                            "s": "aa",
                            "p": "a"
                        },
                        "output": false,
                        "explanation": "The pattern 'a' does not match the entire string 'aa'."
                    },
                    {
                        "input": {
                            "s": "aa",
                            "p": "*"
                        },
                        "output": true,
                        "explanation": "The '*' character matches any sequence of characters, including the entire string 'aa'."
                    },
                    {
                        "input": {
                            "s": "cb",
                            "p": "?a"
                        },
                        "output": false,
                        "explanation": "The '?' matches 'c', but the second character 'a' in the pattern does not match 'b' in the string."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Hard",
                "titleSlug": "regular-expression-matching",
                "title": "Regular Expression Matching",
                "isPaidOnly": false
            }
        ],
        "hints": [],
        "relatedTopics": [
            {
                "name": "String",
                "slug": "string"
            },
            {
                "name": "Dynamic Programming",
                "slug": "dynamic-programming"
            },
            {
                "name": "Greedy",
                "slug": "greedy"
            },
            {
                "name": "Recursion",
                "slug": "recursion"
            }
        ]
    }
}