{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "2452",
            "title": "Words Within Two Edits of Dictionary",
            "titleSlug": "words-within-two-edits-of-dictionary",
            "content": "<p>You are given two string arrays, <code>queries</code> and <code>dictionary</code>. All words in each array comprise of lowercase English letters and have the same length.</p>\n\n<p>In one <strong>edit</strong> you can take a word from <code>queries</code>, and change any letter in it to any other letter. Find all words from <code>queries</code> that, after a <strong>maximum</strong> of two edits, equal some word from <code>dictionary</code>.</p>\n\n<p>Return<em> a list of all words from </em><code>queries</code><em>, </em><em>that match with some word from </em><code>dictionary</code><em> after a maximum of <strong>two edits</strong></em>. Return the words in the <strong>same order</strong> they appear in <code>queries</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> queries = [&quot;word&quot;,&quot;note&quot;,&quot;ants&quot;,&quot;wood&quot;], dictionary = [&quot;wood&quot;,&quot;joke&quot;,&quot;moat&quot;]\n<strong>Output:</strong> [&quot;word&quot;,&quot;note&quot;,&quot;wood&quot;]\n<strong>Explanation:</strong>\n- Changing the &#39;r&#39; in &quot;word&quot; to &#39;o&#39; allows it to equal the dictionary word &quot;wood&quot;.\n- Changing the &#39;n&#39; to &#39;j&#39; and the &#39;t&#39; to &#39;k&#39; in &quot;note&quot; changes it to &quot;joke&quot;.\n- It would take more than 2 edits for &quot;ants&quot; to equal a dictionary word.\n- &quot;wood&quot; can remain unchanged (0 edits) and match the corresponding dictionary word.\nThus, we return [&quot;word&quot;,&quot;note&quot;,&quot;wood&quot;].\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> queries = [&quot;yes&quot;], dictionary = [&quot;not&quot;]\n<strong>Output:</strong> []\n<strong>Explanation:</strong>\nApplying any two edits to &quot;yes&quot; cannot make it equal to &quot;not&quot;. Thus, we return an empty array.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= queries.length, dictionary.length &lt;= 100</code></li>\n\t<li><code>n == queries[i].length == dictionary[j].length</code></li>\n\t<li><code>1 &lt;= n &lt;= 100</code></li>\n\t<li>All <code>queries[i]</code> and <code>dictionary[j]</code> are composed of lowercase English letters.</li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 273,
            "dislikes": 19,
            "similarQuestions": "[{\"title\": \"Word Ladder\", \"titleSlug\": \"word-ladder\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "String",
                    "slug": "string"
                }
            ],
            "stats": "{\"totalAccepted\": \"19.3K\", \"totalSubmission\": \"32.1K\", \"totalAcceptedRaw\": 19327, \"totalSubmissionRaw\": 32068, \"acRate\": \"60.3%\"}",
            "hints": [
                "Try brute-forcing the problem.",
                "For each word in queries, try comparing to each word in dictionary.",
                "If there is a maximum of two edit differences, the word should be present in answer."
            ],
            "rephrased": {
                "body": "Given two string arrays, `queries` and `dictionary`, where all words in each array are lowercase English letters of the same length. Determine which words in `queries` can be transformed into a word in `dictionary` with a maximum of two edits, where an edit consists of changing a letter to any other letter. Return a list of these matching words from `queries` in their original order.",
                "constraints": [
                    "1 <= queries.length, dictionary.length <= 100",
                    "n == queries[i].length == dictionary[j].length",
                    "1 <= n <= 100",
                    "All queries[i] and dictionary[j] are composed of lowercase English letters."
                ],
                "testcases": [
                    {
                        "input": "queries = [\"word\",\"note\",\"ants\",\"wood\"], dictionary = [\"wood\",\"joke\",\"moat\"]",
                        "output": "[\"word\",\"note\",\"wood\"]",
                        "explanation": "The word \"word\" can be changed to \"wood\" with one edit. The word \"note\" can be changed to \"joke\" with two edits. The word \"wood\" is already present in the dictionary with zero edits. The word \"ants\" requires more than two edits to match any word in the dictionary."
                    },
                    {
                        "input": "queries = [\"yes\"], dictionary = [\"not\"]",
                        "output": "[]",
                        "explanation": "Applying any two edits to \"yes\" cannot make it equal to \"not\"."
                    }
                ]
            }
        },
        "similar": [
            {
                "difficulty": "Hard",
                "titleSlug": "word-ladder",
                "title": "Word Ladder",
                "isPaidOnly": false
            }
        ],
        "hints": [
            "Try brute-forcing the problem.",
            "For each word in queries, try comparing to each word in dictionary.",
            "If there is a maximum of two edit differences, the word should be present in answer."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "String",
                "slug": "string"
            }
        ]
    }
}