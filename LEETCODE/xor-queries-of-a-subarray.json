{
    "status": 200,
    "message": "Question Data fetched successfully",
    "data": {
        "question": {
            "questionFrontendId": "1310",
            "title": "XOR Queries of a Subarray",
            "titleSlug": "xor-queries-of-a-subarray",
            "content": "<p>You are given an array <code>arr</code> of positive integers. You are also given the array <code>queries</code> where <code>queries[i] = [left<sub>i, </sub>right<sub>i</sub>]</code>.</p>\n\n<p>For each query <code>i</code> compute the <strong>XOR</strong> of elements from <code>left<sub>i</sub></code> to <code>right<sub>i</sub></code> (that is, <code>arr[left<sub>i</sub>] XOR arr[left<sub>i</sub> + 1] XOR ... XOR arr[right<sub>i</sub>]</code> ).</p>\n\n<p>Return an array <code>answer</code> where <code>answer[i]</code> is the answer to the <code>i<sup>th</sup></code> query.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1,3,4,8], queries = [[0,1],[1,2],[0,3],[3,3]]\n<strong>Output:</strong> [2,7,14,8] \n<strong>Explanation:</strong> \nThe binary representation of the elements in the array are:\n1 = 0001 \n3 = 0011 \n4 = 0100 \n8 = 1000 \nThe XOR values for queries are:\n[0,1] = 1 xor 3 = 2 \n[1,2] = 3 xor 4 = 7 \n[0,3] = 1 xor 3 xor 4 xor 8 = 14 \n[3,3] = 8\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [4,8,2,10], queries = [[2,3],[1,3],[0,0],[0,3]]\n<strong>Output:</strong> [8,0,4,4]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= arr.length, queries.length &lt;= 3 * 10<sup>4</sup></code></li>\n\t<li><code>1 &lt;= arr[i] &lt;= 10<sup>9</sup></code></li>\n\t<li><code>queries[i].length == 2</code></li>\n\t<li><code>0 &lt;= left<sub>i</sub> &lt;= right<sub>i</sub> &lt; arr.length</code></li>\n</ul>\n",
            "isPaidOnly": false,
            "difficulty": "Medium",
            "likes": 1443,
            "dislikes": 37,
            "similarQuestions": "[]",
            "topicTags": [
                {
                    "name": "Array",
                    "slug": "array"
                },
                {
                    "name": "Bit Manipulation",
                    "slug": "bit-manipulation"
                },
                {
                    "name": "Prefix Sum",
                    "slug": "prefix-sum"
                }
            ],
            "stats": "{\"totalAccepted\": \"53.3K\", \"totalSubmission\": \"73.7K\", \"totalAcceptedRaw\": 53319, \"totalSubmissionRaw\": 73711, \"acRate\": \"72.3%\"}",
            "hints": [
                "What is the result of x ^ y ^ x ?",
                "Compute the prefix sum for XOR.",
                "Process the queries with the prefix sum values."
            ],
            "rephrased": {
                "body": "Given an array `arr` of positive integers and a set of queries `queries`, where each query `queries[i] = [left_i, right_i]`, calculate the XOR sum of the elements in `arr` from index `left_i` to `right_i` (inclusive) for each query. Return an array `answer` where `answer[i]` is the XOR sum for the `i`-th query.",
                "constraints": [
                    "1 <= arr.length, queries.length <= 3 * 10^4",
                    "1 <= arr[i] <= 10^9",
                    "queries[i].length == 2",
                    "0 <= left_i <= right_i < arr.length"
                ],
                "testcases": [
                    {
                        "input": "arr = [1,3,4,8], queries = [[0,1],[1,2],[0,3],[3,3]]",
                        "output": "[2,7,14,8]",
                        "explanation": "For query [0,1], the XOR sum is 1 XOR 3 = 2.\nFor query [1,2], the XOR sum is 3 XOR 4 = 7.\nFor query [0,3], the XOR sum is 1 XOR 3 XOR 4 XOR 8 = 14.\nFor query [3,3], the XOR sum is 8."
                    },
                    {
                        "input": "arr = [4,8,2,10], queries = [[2,3],[1,3],[0,0],[0,3]]",
                        "output": "[8,0,4,4]",
                        "explanation": "For query [2,3], the XOR sum is 2 XOR 10 = 8.\nFor query [1,3], the XOR sum is 8 XOR 2 XOR 10 = 0.\nFor query [0,0], the XOR sum is 4.\nFor query [0,3], the XOR sum is 4 XOR 8 XOR 2 XOR 10 = 4."
                    }
                ]
            }
        },
        "similar": [],
        "hints": [
            "What is the result of x ^ y ^ x ?",
            "Compute the prefix sum for XOR.",
            "Process the queries with the prefix sum values."
        ],
        "relatedTopics": [
            {
                "name": "Array",
                "slug": "array"
            },
            {
                "name": "Bit Manipulation",
                "slug": "bit-manipulation"
            },
            {
                "name": "Prefix Sum",
                "slug": "prefix-sum"
            }
        ],
        "solutions": {
            "cpp": {
                "lang": "C++",
                "full_func": "class Solution {\n public:\n  vector<int> xorQueries(vector<int>& arr, vector<vector<int>>& queries) {\n    vector<int> ans;\n    vector<int> xors(arr.size() + 1);\n\n    for (int i = 0; i < arr.size(); ++i)\n      xors[i + 1] ^= xors[i] ^ arr[i];\n\n    for (const vector<int>& query : queries)\n      ans.push_back(xors[query[0]] ^ xors[query[1] + 1]);\n\n    return ans;\n  }\n};\n",
                "lang_text": "cpp"
            },
            "java": {
                "lang": "Java",
                "full_func": "class Solution {\n  public int[] xorQueries(int[] arr, int[][] queries) {\n    int[] ans = new int[queries.length];\n    int[] xors = new int[arr.length + 1];\n\n    for (int i = 0; i < arr.length; ++i)\n      xors[i + 1] ^= xors[i] ^ arr[i];\n\n    int i = 0;\n    for (int[] query : queries)\n      ans[i++] = xors[query[0]] ^ xors[query[1] + 1];\n\n    return ans;\n  }\n}\n",
                "lang_text": "java"
            },
            "py": {
                "lang": "Python",
                "full_func": "class Solution:\n  def xorQueries(self, arr: List[int], queries: List[List[int]]) -> List[int]:\n    ans = []\n    xors = [0] * (len(arr) + 1)\n\n    for i, a in enumerate(arr):\n      xors[i + 1] ^= xors[i] ^ a\n\n    for l, r in queries:\n      ans.append(xors[l] ^ xors[r + 1])\n\n    return ans\n",
                "lang_text": "py"
            }
        }
    }
}